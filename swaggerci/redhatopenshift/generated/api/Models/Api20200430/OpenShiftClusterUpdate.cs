// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Extensions;

    /// <summary>OpenShiftCluster represents an Azure Red Hat OpenShift cluster.</summary>
    public partial class OpenShiftClusterUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal
    {

        /// <summary>The IP of the cluster API server (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string ApiserverProfileIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileIP = value ?? null; }

        /// <summary>The URL to access the cluster API server (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string ApiserverProfileUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileUrl = value ?? null; }

        /// <summary>API server visibility (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string ApiserverProfileVisibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileVisibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileVisibility = value ?? null; }

        /// <summary>The domain for the cluster (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string ClusterProfileDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileDomain = value ?? null; }

        /// <summary>The pull secret for the cluster (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string ClusterProfilePullSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ClusterProfilePullSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ClusterProfilePullSecret = value ?? null; }

        /// <summary>The ID of the cluster resource group (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string ClusterProfileResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileResourceGroupId = value ?? null; }

        /// <summary>The version of the cluster (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string ClusterProfileVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileVersion = value ?? null; }

        /// <summary>The URL to access the cluster console (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string ConsoleProfileUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ConsoleProfileUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ConsoleProfileUrl = value ?? null; }

        /// <summary>The cluster ingress profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IIngressProfile[] IngressProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).IngressProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).IngressProfile = value ?? null /* arrayOf */; }

        /// <summary>The Azure resource ID of the master subnet (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string MasterProfileSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).MasterProfileSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).MasterProfileSubnetId = value ?? null; }

        /// <summary>The size of the master VMs (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string MasterProfileVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).MasterProfileVMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).MasterProfileVMSize = value ?? null; }

        /// <summary>Internal Acessors for ApiserverProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IApiServerProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal.ApiserverProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfile = value; }

        /// <summary>Internal Acessors for ClusterProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IClusterProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal.ClusterProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ClusterProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ClusterProfile = value; }

        /// <summary>Internal Acessors for ConsoleProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IConsoleProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal.ConsoleProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ConsoleProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ConsoleProfile = value; }

        /// <summary>Internal Acessors for MasterProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IMasterProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal.MasterProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).MasterProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).MasterProfile = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.INetworkProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal.NetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).NetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).NetworkProfile = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterProperties Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.OpenShiftClusterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ServicePrincipalProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IServicePrincipalProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal.ServicePrincipalProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfile = value; }

        /// <summary>The CIDR used for OpenShift/Kubernetes Pods (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string NetworkProfilePodCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).NetworkProfilePodCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).NetworkProfilePodCidr = value ?? null; }

        /// <summary>The CIDR used for OpenShift/Kubernetes Services (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string NetworkProfileServiceCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).NetworkProfileServiceCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).NetworkProfileServiceCidr = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterProperties _property;

        /// <summary>The cluster properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.OpenShiftClusterProperties()); set => this._property = value; }

        /// <summary>The cluster provisioning state (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ProvisioningState = value ?? null; }

        /// <summary>The client ID used for the cluster (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfileClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfileClientId = value ?? null; }

        /// <summary>The client secret used for the cluster (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfileClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfileClientSecret = value ?? null; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ITags _tag;

        /// <summary>The resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ITags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.Tags()); set => this._tag = value; }

        /// <summary>The cluster worker profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IWorkerProfile[] WorkerProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).WorkerProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterPropertiesInternal)Property).WorkerProfile = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="OpenShiftClusterUpdate" /> instance.</summary>
        public OpenShiftClusterUpdate()
        {

        }
    }
    /// OpenShiftCluster represents an Azure Red Hat OpenShift cluster.
    public partial interface IOpenShiftClusterUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.IJsonSerializable
    {
        /// <summary>The IP of the cluster API server (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP of the cluster API server (immutable).",
        SerializedName = @"ip",
        PossibleTypes = new [] { typeof(string) })]
        string ApiserverProfileIP { get; set; }
        /// <summary>The URL to access the cluster API server (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL to access the cluster API server (immutable).",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string ApiserverProfileUrl { get; set; }
        /// <summary>API server visibility (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API server visibility (immutable).",
        SerializedName = @"visibility",
        PossibleTypes = new [] { typeof(string) })]
        string ApiserverProfileVisibility { get; set; }
        /// <summary>The domain for the cluster (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain for the cluster (immutable).",
        SerializedName = @"domain",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfileDomain { get; set; }
        /// <summary>The pull secret for the cluster (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pull secret for the cluster (immutable).",
        SerializedName = @"pullSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfilePullSecret { get; set; }
        /// <summary>The ID of the cluster resource group (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the cluster resource group (immutable).",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfileResourceGroupId { get; set; }
        /// <summary>The version of the cluster (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the cluster (immutable).",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfileVersion { get; set; }
        /// <summary>The URL to access the cluster console (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL to access the cluster console (immutable).",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string ConsoleProfileUrl { get; set; }
        /// <summary>The cluster ingress profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster ingress profiles.",
        SerializedName = @"ingressProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IIngressProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IIngressProfile[] IngressProfile { get; set; }
        /// <summary>The Azure resource ID of the master subnet (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Azure resource ID of the master subnet (immutable).",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileSubnetId { get; set; }
        /// <summary>The size of the master VMs (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size of the master VMs (immutable).",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileVMSize { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Pods (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CIDR used for OpenShift/Kubernetes Pods (immutable).",
        SerializedName = @"podCidr",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfilePodCidr { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Services (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CIDR used for OpenShift/Kubernetes Services (immutable).",
        SerializedName = @"serviceCidr",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfileServiceCidr { get; set; }
        /// <summary>The cluster provisioning state (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster provisioning state (immutable).",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get; set; }
        /// <summary>The client ID used for the cluster (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client ID used for the cluster (immutable).",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The client secret used for the cluster (immutable).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client secret used for the cluster (immutable).",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileClientSecret { get; set; }
        /// <summary>The resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ITags) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ITags Tag { get; set; }
        /// <summary>The cluster worker profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster worker profiles.",
        SerializedName = @"workerProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IWorkerProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IWorkerProfile[] WorkerProfile { get; set; }

    }
    /// OpenShiftCluster represents an Azure Red Hat OpenShift cluster.
    internal partial interface IOpenShiftClusterUpdateInternal

    {
        /// <summary>The cluster API server profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IApiServerProfile ApiserverProfile { get; set; }
        /// <summary>The IP of the cluster API server (immutable).</summary>
        string ApiserverProfileIP { get; set; }
        /// <summary>The URL to access the cluster API server (immutable).</summary>
        string ApiserverProfileUrl { get; set; }
        /// <summary>API server visibility (immutable).</summary>
        string ApiserverProfileVisibility { get; set; }
        /// <summary>The cluster profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IClusterProfile ClusterProfile { get; set; }
        /// <summary>The domain for the cluster (immutable).</summary>
        string ClusterProfileDomain { get; set; }
        /// <summary>The pull secret for the cluster (immutable).</summary>
        string ClusterProfilePullSecret { get; set; }
        /// <summary>The ID of the cluster resource group (immutable).</summary>
        string ClusterProfileResourceGroupId { get; set; }
        /// <summary>The version of the cluster (immutable).</summary>
        string ClusterProfileVersion { get; set; }
        /// <summary>The console profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IConsoleProfile ConsoleProfile { get; set; }
        /// <summary>The URL to access the cluster console (immutable).</summary>
        string ConsoleProfileUrl { get; set; }
        /// <summary>The cluster ingress profiles.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IIngressProfile[] IngressProfile { get; set; }
        /// <summary>The cluster master profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IMasterProfile MasterProfile { get; set; }
        /// <summary>The Azure resource ID of the master subnet (immutable).</summary>
        string MasterProfileSubnetId { get; set; }
        /// <summary>The size of the master VMs (immutable).</summary>
        string MasterProfileVMSize { get; set; }
        /// <summary>The cluster network profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.INetworkProfile NetworkProfile { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Pods (immutable).</summary>
        string NetworkProfilePodCidr { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Services (immutable).</summary>
        string NetworkProfileServiceCidr { get; set; }
        /// <summary>The cluster properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterProperties Property { get; set; }
        /// <summary>The cluster provisioning state (immutable).</summary>
        string ProvisioningState { get; set; }
        /// <summary>The cluster service principal profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IServicePrincipalProfile ServicePrincipalProfile { get; set; }
        /// <summary>The client ID used for the cluster (immutable).</summary>
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The client secret used for the cluster (immutable).</summary>
        string ServicePrincipalProfileClientSecret { get; set; }
        /// <summary>The resource tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ITags Tag { get; set; }
        /// <summary>The cluster worker profiles.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IWorkerProfile[] WorkerProfile { get; set; }

    }
}