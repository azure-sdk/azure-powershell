// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430
{
    using Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.PowerShell;

    /// <summary>OpenShiftCluster represents an Azure Red Hat OpenShift cluster.</summary>
    [System.ComponentModel.TypeConverter(typeof(OpenShiftClusterUpdateTypeConverter))]
    public partial class OpenShiftClusterUpdate
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.OpenShiftClusterUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdate"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdate DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new OpenShiftClusterUpdate(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.OpenShiftClusterUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdate"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdate DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new OpenShiftClusterUpdate(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="OpenShiftClusterUpdate" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdate FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.OpenShiftClusterUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal OpenShiftClusterUpdate(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.OpenShiftClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ITags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.TagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IClusterProfile) content.GetValueForProperty("ClusterProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ClusterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConsoleProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ConsoleProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IConsoleProfile) content.GetValueForProperty("ConsoleProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ConsoleProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ConsoleProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.INetworkProfile) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.NetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("MasterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IMasterProfile) content.GetValueForProperty("MasterProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.MasterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IServicePrincipalProfile) content.GetValueForProperty("ServicePrincipalProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ServicePrincipalProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiserverProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IApiServerProfile) content.GetValueForProperty("ApiserverProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ApiServerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("WorkerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).WorkerProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IWorkerProfile[]) content.GetValueForProperty("WorkerProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).WorkerProfile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IWorkerProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.WorkerProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("IngressProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).IngressProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IIngressProfile[]) content.GetValueForProperty("IngressProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).IngressProfile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IIngressProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IngressProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterProfilePullSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfilePullSecret = (string) content.GetValueForProperty("ClusterProfilePullSecret",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfilePullSecret, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileDomain = (string) content.GetValueForProperty("ClusterProfileDomain",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileDomain, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileVersion = (string) content.GetValueForProperty("ClusterProfileVersion",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ConsoleProfileUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ConsoleProfileUrl = (string) content.GetValueForProperty("ConsoleProfileUrl",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ConsoleProfileUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfileClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfileClientId = (string) content.GetValueForProperty("ServicePrincipalProfileClientId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfileClientId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfileClientSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfileClientSecret = (string) content.GetValueForProperty("ServicePrincipalProfileClientSecret",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfileClientSecret, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfilePodCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfilePodCidr = (string) content.GetValueForProperty("NetworkProfilePodCidr",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfilePodCidr, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfileServiceCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfileServiceCidr = (string) content.GetValueForProperty("NetworkProfileServiceCidr",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfileServiceCidr, global::System.Convert.ToString);
            }
            if (content.Contains("MasterProfileVMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfileVMSize = (string) content.GetValueForProperty("MasterProfileVMSize",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfileVMSize, global::System.Convert.ToString);
            }
            if (content.Contains("MasterProfileSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfileSubnetId = (string) content.GetValueForProperty("MasterProfileSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfileSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileVisibility"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileVisibility = (string) content.GetValueForProperty("ApiserverProfileVisibility",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileVisibility, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileResourceGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileResourceGroupId = (string) content.GetValueForProperty("ClusterProfileResourceGroupId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileResourceGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileUrl = (string) content.GetValueForProperty("ApiserverProfileUrl",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileIP = (string) content.GetValueForProperty("ApiserverProfileIP",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileIP, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.OpenShiftClusterUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal OpenShiftClusterUpdate(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.OpenShiftClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ITags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.TagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IClusterProfile) content.GetValueForProperty("ClusterProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ClusterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConsoleProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ConsoleProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IConsoleProfile) content.GetValueForProperty("ConsoleProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ConsoleProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ConsoleProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.INetworkProfile) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.NetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("MasterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IMasterProfile) content.GetValueForProperty("MasterProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.MasterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IServicePrincipalProfile) content.GetValueForProperty("ServicePrincipalProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ServicePrincipalProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiserverProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IApiServerProfile) content.GetValueForProperty("ApiserverProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.ApiServerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("WorkerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).WorkerProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IWorkerProfile[]) content.GetValueForProperty("WorkerProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).WorkerProfile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IWorkerProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.WorkerProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("IngressProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).IngressProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IIngressProfile[]) content.GetValueForProperty("IngressProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).IngressProfile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IIngressProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IngressProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterProfilePullSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfilePullSecret = (string) content.GetValueForProperty("ClusterProfilePullSecret",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfilePullSecret, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileDomain = (string) content.GetValueForProperty("ClusterProfileDomain",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileDomain, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileVersion = (string) content.GetValueForProperty("ClusterProfileVersion",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ConsoleProfileUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ConsoleProfileUrl = (string) content.GetValueForProperty("ConsoleProfileUrl",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ConsoleProfileUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfileClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfileClientId = (string) content.GetValueForProperty("ServicePrincipalProfileClientId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfileClientId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfileClientSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfileClientSecret = (string) content.GetValueForProperty("ServicePrincipalProfileClientSecret",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ServicePrincipalProfileClientSecret, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfilePodCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfilePodCidr = (string) content.GetValueForProperty("NetworkProfilePodCidr",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfilePodCidr, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfileServiceCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfileServiceCidr = (string) content.GetValueForProperty("NetworkProfileServiceCidr",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).NetworkProfileServiceCidr, global::System.Convert.ToString);
            }
            if (content.Contains("MasterProfileVMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfileVMSize = (string) content.GetValueForProperty("MasterProfileVMSize",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfileVMSize, global::System.Convert.ToString);
            }
            if (content.Contains("MasterProfileSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfileSubnetId = (string) content.GetValueForProperty("MasterProfileSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).MasterProfileSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileVisibility"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileVisibility = (string) content.GetValueForProperty("ApiserverProfileVisibility",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileVisibility, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileResourceGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileResourceGroupId = (string) content.GetValueForProperty("ClusterProfileResourceGroupId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ClusterProfileResourceGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileUrl = (string) content.GetValueForProperty("ApiserverProfileUrl",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileIP = (string) content.GetValueForProperty("ApiserverProfileIP",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Models.Api20200430.IOpenShiftClusterUpdateInternal)this).ApiserverProfileIP, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift4.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// OpenShiftCluster represents an Azure Red Hat OpenShift cluster.
    [System.ComponentModel.TypeConverter(typeof(OpenShiftClusterUpdateTypeConverter))]
    public partial interface IOpenShiftClusterUpdate

    {

    }
}