// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>The live event ingest interruption data.</summary>
    public partial class LiveEventIngestInterruption :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.ILiveEventIngestInterruption,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.ILiveEventIngestInterruptionInternal
    {

        /// <summary>Backing field for <see cref="Begin" /> property.</summary>
        private global::System.DateTime? _begin;

        /// <summary>UTC time of interruption start, encoder disconnected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? Begin { get => this._begin; set => this._begin = value; }

        /// <summary>Backing field for <see cref="Duration" /> property.</summary>
        private global::System.TimeSpan? _duration;

        /// <summary>
        /// Duration of interruption in ISO 8601 time. For example, use PT1H30M to indicate 1 hour and 30 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? Duration { get => this._duration; set => this._duration = value; }

        /// <summary>Backing field for <see cref="End" /> property.</summary>
        private global::System.DateTime? _end;

        /// <summary>UTC time of interruption end, encoder re-connected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public global::System.DateTime? End { get => this._end; set => this._end = value; }

        /// <summary>Backing field for <see cref="Reason" /> property.</summary>
        private string _reason;

        /// <summary>Interruption reason.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string Reason { get => this._reason; set => this._reason = value; }

        /// <summary>Creates an new <see cref="LiveEventIngestInterruption" /> instance.</summary>
        public LiveEventIngestInterruption()
        {

        }
    }
    /// The live event ingest interruption data.
    public partial interface ILiveEventIngestInterruption :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>UTC time of interruption start, encoder disconnected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC time of interruption start, encoder disconnected.",
        SerializedName = @"begin",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Begin { get; set; }
        /// <summary>
        /// Duration of interruption in ISO 8601 time. For example, use PT1H30M to indicate 1 hour and 30 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Duration of interruption in ISO 8601 time. For example, use PT1H30M to indicate 1 hour and 30 minutes.",
        SerializedName = @"duration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? Duration { get; set; }
        /// <summary>UTC time of interruption end, encoder re-connected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC time of interruption end, encoder re-connected.",
        SerializedName = @"end",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? End { get; set; }
        /// <summary>Interruption reason.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Interruption reason.",
        SerializedName = @"reason",
        PossibleTypes = new [] { typeof(string) })]
        string Reason { get; set; }

    }
    /// The live event ingest interruption data.
    internal partial interface ILiveEventIngestInterruptionInternal

    {
        /// <summary>UTC time of interruption start, encoder disconnected.</summary>
        global::System.DateTime? Begin { get; set; }
        /// <summary>
        /// Duration of interruption in ISO 8601 time. For example, use PT1H30M to indicate 1 hour and 30 minutes.
        /// </summary>
        global::System.TimeSpan? Duration { get; set; }
        /// <summary>UTC time of interruption end, encoder re-connected.</summary>
        global::System.DateTime? End { get; set; }
        /// <summary>Interruption reason.</summary>
        string Reason { get; set; }

    }
}