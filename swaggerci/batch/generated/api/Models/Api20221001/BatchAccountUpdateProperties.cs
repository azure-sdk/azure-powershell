// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>The properties of a Batch account.</summary>
    public partial class BatchAccountUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IBatchAccountUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IBatchAccountUpdatePropertiesInternal
    {

        /// <summary>
        /// Default action for endpoint access. It is only applicable when publicNetworkAccess is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.EndpointAccessDefaultAction? AccountAccessDefaultAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).AccountAccessDefaultAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).AccountAccessDefaultAction = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.EndpointAccessDefaultAction)""); }

        /// <summary>Array of IP ranges to filter client IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IIPRule[] AccountAccessIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).AccountAccessIPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).AccountAccessIPRule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="AllowedAuthenticationMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[] _allowedAuthenticationMode;

        /// <summary>
        /// List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This
        /// does not affect authentication with the control plane.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[] AllowedAuthenticationMode { get => this._allowedAuthenticationMode; set => this._allowedAuthenticationMode = value; }

        /// <summary>Backing field for <see cref="AutoStorage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBaseProperties _autoStorage;

        /// <summary>The properties related to the auto-storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBaseProperties AutoStorage { get => (this._autoStorage = this._autoStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.AutoStorageBaseProperties()); set => this._autoStorage = value; }

        /// <summary>The resource ID of the storage account to be used for auto-storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string AutoStorageAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBasePropertiesInternal)AutoStorage).StorageAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBasePropertiesInternal)AutoStorage).StorageAccountId = value ?? null; }

        /// <summary>
        /// The authentication mode which the Batch service will use to manage the auto-storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode? AutoStorageAuthenticationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBasePropertiesInternal)AutoStorage).AuthenticationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBasePropertiesInternal)AutoStorage).AuthenticationMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode)""); }

        /// <summary>Backing field for <see cref="Encryption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEncryptionProperties _encryption;

        /// <summary>
        /// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft
        /// managed key. For additional control, a customer-managed key can be used instead.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEncryptionProperties Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.EncryptionProperties()); set => this._encryption = value; }

        /// <summary>Type of the key source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? EncryptionKeySource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEncryptionPropertiesInternal)Encryption).KeySource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEncryptionPropertiesInternal)Encryption).KeySource = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource)""); }

        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEncryptionPropertiesInternal)Encryption).KeyVaultPropertyKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEncryptionPropertiesInternal)Encryption).KeyVaultPropertyKeyIdentifier = value ?? null; }

        /// <summary>Internal Acessors for AutoStorage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBaseProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IBatchAccountUpdatePropertiesInternal.AutoStorage { get => (this._autoStorage = this._autoStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.AutoStorageBaseProperties()); set { {_autoStorage = value;} } }

        /// <summary>Internal Acessors for AutoStorageNodeIdentityReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IComputeNodeIdentityReference Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IBatchAccountUpdatePropertiesInternal.AutoStorageNodeIdentityReference { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBasePropertiesInternal)AutoStorage).NodeIdentityReference; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBasePropertiesInternal)AutoStorage).NodeIdentityReference = value; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEncryptionProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IBatchAccountUpdatePropertiesInternal.Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.EncryptionProperties()); set { {_encryption = value;} } }

        /// <summary>Internal Acessors for EncryptionKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IBatchAccountUpdatePropertiesInternal.EncryptionKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEncryptionPropertiesInternal)Encryption).KeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEncryptionPropertiesInternal)Encryption).KeyVaultProperty = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfile Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IBatchAccountUpdatePropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.NetworkProfile()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for NetworkProfileAccountAccess</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEndpointAccessProfile Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IBatchAccountUpdatePropertiesInternal.NetworkProfileAccountAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).AccountAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).AccountAccess = value; }

        /// <summary>Internal Acessors for NetworkProfileNodeManagementAccess</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEndpointAccessProfile Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IBatchAccountUpdatePropertiesInternal.NetworkProfileNodeManagementAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).NodeManagementAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).NodeManagementAccess = value; }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfile _networkProfile;

        /// <summary>The network profile only takes effect when publicNetworkAccess is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfile NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.NetworkProfile()); set => this._networkProfile = value; }

        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public string NodeIdentityReferenceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBasePropertiesInternal)AutoStorage).NodeIdentityReferenceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBasePropertiesInternal)AutoStorage).NodeIdentityReferenceResourceId = value ?? null; }

        /// <summary>
        /// Default action for endpoint access. It is only applicable when publicNetworkAccess is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.EndpointAccessDefaultAction? NodeManagementAccessDefaultAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).NodeManagementAccessDefaultAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).NodeManagementAccessDefaultAction = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.EndpointAccessDefaultAction)""); }

        /// <summary>Array of IP ranges to filter client IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IIPRule[] NodeManagementAccessIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).NodeManagementAccessIPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfileInternal)NetworkProfile).NodeManagementAccessIPRule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType? _publicNetworkAccess;

        /// <summary>If not specified, the default value is 'enabled'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType? PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Creates an new <see cref="BatchAccountUpdateProperties" /> instance.</summary>
        public BatchAccountUpdateProperties()
        {

        }
    }
    /// The properties of a Batch account.
    public partial interface IBatchAccountUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Default action for endpoint access. It is only applicable when publicNetworkAccess is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Default action for endpoint access. It is only applicable when publicNetworkAccess is enabled.",
        SerializedName = @"defaultAction",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.EndpointAccessDefaultAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.EndpointAccessDefaultAction? AccountAccessDefaultAction { get; set; }
        /// <summary>Array of IP ranges to filter client IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of IP ranges to filter client IP address.",
        SerializedName = @"ipRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IIPRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IIPRule[] AccountAccessIPRule { get; set; }
        /// <summary>
        /// List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This
        /// does not affect authentication with the control plane.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This does not affect authentication with the control plane.",
        SerializedName = @"allowedAuthenticationModes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[] AllowedAuthenticationMode { get; set; }
        /// <summary>The resource ID of the storage account to be used for auto-storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the storage account to be used for auto-storage account.",
        SerializedName = @"storageAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AutoStorageAccountId { get; set; }
        /// <summary>
        /// The authentication mode which the Batch service will use to manage the auto-storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authentication mode which the Batch service will use to manage the auto-storage account.",
        SerializedName = @"authenticationMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode? AutoStorageAuthenticationMode { get; set; }
        /// <summary>Type of the key source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the key source.",
        SerializedName = @"keySource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? EncryptionKeySource { get; set; }
        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:

         The Batch Account has a System Assigned identity
         The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
         The KeyVault has soft-delete and purge protection enabled",
        SerializedName = @"keyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM resource id of the user assigned identity.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NodeIdentityReferenceResourceId { get; set; }
        /// <summary>
        /// Default action for endpoint access. It is only applicable when publicNetworkAccess is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Default action for endpoint access. It is only applicable when publicNetworkAccess is enabled.",
        SerializedName = @"defaultAction",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.EndpointAccessDefaultAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.EndpointAccessDefaultAction? NodeManagementAccessDefaultAction { get; set; }
        /// <summary>Array of IP ranges to filter client IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of IP ranges to filter client IP address.",
        SerializedName = @"ipRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IIPRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IIPRule[] NodeManagementAccessIPRule { get; set; }
        /// <summary>If not specified, the default value is 'enabled'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If not specified, the default value is 'enabled'.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType? PublicNetworkAccess { get; set; }

    }
    /// The properties of a Batch account.
    internal partial interface IBatchAccountUpdatePropertiesInternal

    {
        /// <summary>
        /// Default action for endpoint access. It is only applicable when publicNetworkAccess is enabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.EndpointAccessDefaultAction? AccountAccessDefaultAction { get; set; }
        /// <summary>Array of IP ranges to filter client IP address.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IIPRule[] AccountAccessIPRule { get; set; }
        /// <summary>
        /// List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This
        /// does not affect authentication with the control plane.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AuthenticationMode[] AllowedAuthenticationMode { get; set; }
        /// <summary>The properties related to the auto-storage account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IAutoStorageBaseProperties AutoStorage { get; set; }
        /// <summary>The resource ID of the storage account to be used for auto-storage account.</summary>
        string AutoStorageAccountId { get; set; }
        /// <summary>
        /// The authentication mode which the Batch service will use to manage the auto-storage account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.AutoStorageAuthenticationMode? AutoStorageAuthenticationMode { get; set; }
        /// <summary>
        /// The identity referenced here must be assigned to pools which have compute nodes that need access to auto-storage.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IComputeNodeIdentityReference AutoStorageNodeIdentityReference { get; set; }
        /// <summary>
        /// Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft
        /// managed key. For additional control, a customer-managed key can be used instead.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEncryptionProperties Encryption { get; set; }
        /// <summary>Type of the key source.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.KeySource? EncryptionKeySource { get; set; }
        /// <summary>Additional details when using Microsoft.KeyVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IKeyVaultProperties EncryptionKeyVaultProperty { get; set; }
        /// <summary>
        /// Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
        /// To be usable the following prerequisites must be met:
        /// The Batch Account has a System Assigned identity
        /// The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
        /// The KeyVault has soft-delete and purge protection enabled
        /// </summary>
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>The network profile only takes effect when publicNetworkAccess is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.INetworkProfile NetworkProfile { get; set; }
        /// <summary>
        /// Network access profile for batchAccount endpoint (Batch account data plane API).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEndpointAccessProfile NetworkProfileAccountAccess { get; set; }
        /// <summary>
        /// Network access profile for nodeManagement endpoint (Batch service managing compute nodes for Batch pools).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IEndpointAccessProfile NetworkProfileNodeManagementAccess { get; set; }
        /// <summary>The ARM resource id of the user assigned identity.</summary>
        string NodeIdentityReferenceResourceId { get; set; }
        /// <summary>
        /// Default action for endpoint access. It is only applicable when publicNetworkAccess is enabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.EndpointAccessDefaultAction? NodeManagementAccessDefaultAction { get; set; }
        /// <summary>Array of IP ranges to filter client IP address.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20221001.IIPRule[] NodeManagementAccessIPRule { get; set; }
        /// <summary>If not specified, the default value is 'enabled'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.PublicNetworkAccessType? PublicNetworkAccess { get; set; }

    }
}