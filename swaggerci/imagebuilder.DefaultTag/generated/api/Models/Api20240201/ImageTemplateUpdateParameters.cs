// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Extensions;

    /// <summary>Parameters for updating an image template.</summary>
    public partial class ImageTemplateUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersInternal
    {

        /// <summary>The distribution targets where the image output needs to go to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateDistributor[] Distribute { get => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).Distribute; set => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).Distribute = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateIdentity _identity;

        /// <summary>The identity of the image template, if configured.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.ImageTemplateIdentity()); set => this._identity = value; }

        /// <summary>
        /// The type of identity used for the image template. The type 'None' will remove any identities from the image template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Support.ResourceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Support.ResourceIdentityType)""); }

        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateIdentity Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.ImageTemplateIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersProperties Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.ImageTemplateUpdateParametersProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for VMProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateVMProfile Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersInternal.VMProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VMProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VMProfile = value; }

        /// <summary>Internal Acessors for VMProfileVnetConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IVirtualNetworkConfig Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersInternal.VMProfileVnetConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VMProfileVnetConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VMProfileVnetConfig = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersProperties _property;

        /// <summary>Parameters for updating an image template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.ImageTemplateUpdateParametersProperties()); set => this._property = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersTags _tag;

        /// <summary>The user-specified tags associated with the image template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.ImageTemplateUpdateParametersTags()); set => this._tag = value; }

        /// <summary>
        /// Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Inlined)]
        public int? VMProfileOsdiskSizeGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VMProfileOsdiskSizeGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VMProfileOsdiskSizeGb = value ?? default(int); }

        /// <summary>
        /// Optional array of resource IDs of user assigned managed identities to be configured on the build VM and validation VM.
        /// This may include the identity of the image template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Inlined)]
        public string[] VMProfileUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VMProfileUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VMProfileUserAssignedIdentity = value ?? null /* arrayOf */; }

        /// <summary>
        /// Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default
        /// (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Inlined)]
        public string VMProfileVmsize { get => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VMProfileVmsize; set => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VMProfileVmsize = value ?? null; }

        /// <summary>
        /// Resource id of a pre-existing subnet on which Azure Container Instance will be deployed for Isolated Builds. This field
        /// may be specified only if `subnetId` is also specified and must be on the same Virtual Network as the subnet specified
        /// in `subnetId`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Inlined)]
        public string VnetConfigContainerInstanceSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VnetConfigContainerInstanceSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VnetConfigContainerInstanceSubnetId = value ?? null; }

        /// <summary>
        /// Size of the proxy virtual machine used to pass traffic to the build VM and validation VM. This must not be specified if
        /// `containerInstanceSubnetId` is specified because no proxy virtual machine is deployed in that case. Omit or specify empty
        /// string to use the default (Standard_A1_v2).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Inlined)]
        public string VnetConfigProxyVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VnetConfigProxyVMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VnetConfigProxyVMSize = value ?? null; }

        /// <summary>
        /// Resource id of a pre-existing subnet on which the build VM and validation VM will be deployed
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Inlined)]
        public string VnetConfigSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VnetConfigSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersPropertiesInternal)Property).VnetConfigSubnetId = value ?? null; }

        /// <summary>Creates an new <see cref="ImageTemplateUpdateParameters" /> instance.</summary>
        public ImageTemplateUpdateParameters()
        {

        }
    }
    /// Parameters for updating an image template.
    public partial interface IImageTemplateUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.IJsonSerializable
    {
        /// <summary>The distribution targets where the image output needs to go to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The distribution targets where the image output needs to go to.",
        SerializedName = @"distribute",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateDistributor) })]
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateDistributor[] Distribute { get; set; }
        /// <summary>
        /// The type of identity used for the image template. The type 'None' will remove any identities from the image template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity used for the image template. The type 'None' will remove any identities from the image template.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Support.ResourceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The user-specified tags associated with the image template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user-specified tags associated with the image template.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersTags Tag { get; set; }
        /// <summary>
        /// Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.",
        SerializedName = @"osDiskSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? VMProfileOsdiskSizeGb { get; set; }
        /// <summary>
        /// Optional array of resource IDs of user assigned managed identities to be configured on the build VM and validation VM.
        /// This may include the identity of the image template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional array of resource IDs of user assigned managed identities to be configured on the build VM and validation VM. This may include the identity of the image template.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(string) })]
        string[] VMProfileUserAssignedIdentity { get; set; }
        /// <summary>
        /// Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default
        /// (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string VMProfileVmsize { get; set; }
        /// <summary>
        /// Resource id of a pre-existing subnet on which Azure Container Instance will be deployed for Isolated Builds. This field
        /// may be specified only if `subnetId` is also specified and must be on the same Virtual Network as the subnet specified
        /// in `subnetId`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource id of a pre-existing subnet on which Azure Container Instance will be deployed for Isolated Builds. This field may be specified only if `subnetId` is also specified and must be on the same Virtual Network as the subnet specified in `subnetId`.",
        SerializedName = @"containerInstanceSubnetId",
        PossibleTypes = new [] { typeof(string) })]
        string VnetConfigContainerInstanceSubnetId { get; set; }
        /// <summary>
        /// Size of the proxy virtual machine used to pass traffic to the build VM and validation VM. This must not be specified if
        /// `containerInstanceSubnetId` is specified because no proxy virtual machine is deployed in that case. Omit or specify empty
        /// string to use the default (Standard_A1_v2).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Size of the proxy virtual machine used to pass traffic to the build VM and validation VM. This must not be specified if `containerInstanceSubnetId` is specified because no proxy virtual machine is deployed in that case. Omit or specify empty string to use the default (Standard_A1_v2).",
        SerializedName = @"proxyVmSize",
        PossibleTypes = new [] { typeof(string) })]
        string VnetConfigProxyVMSize { get; set; }
        /// <summary>
        /// Resource id of a pre-existing subnet on which the build VM and validation VM will be deployed
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource id of a pre-existing subnet on which the build VM and validation VM will be deployed",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string VnetConfigSubnetId { get; set; }

    }
    /// Parameters for updating an image template.
    internal partial interface IImageTemplateUpdateParametersInternal

    {
        /// <summary>The distribution targets where the image output needs to go to.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateDistributor[] Distribute { get; set; }
        /// <summary>The identity of the image template, if configured.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateIdentity Identity { get; set; }
        /// <summary>
        /// The type of identity used for the image template. The type 'None' will remove any identities from the image template.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Parameters for updating an image template.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersProperties Property { get; set; }
        /// <summary>The user-specified tags associated with the image template.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateUpdateParametersTags Tag { get; set; }
        /// <summary>Describes how virtual machine is set up to build images</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IImageTemplateVMProfile VMProfile { get; set; }
        /// <summary>
        /// Size of the OS disk in GB. Omit or specify 0 to use Azure's default OS disk size.
        /// </summary>
        int? VMProfileOsdiskSizeGb { get; set; }
        /// <summary>
        /// Optional array of resource IDs of user assigned managed identities to be configured on the build VM and validation VM.
        /// This may include the identity of the image template.
        /// </summary>
        string[] VMProfileUserAssignedIdentity { get; set; }
        /// <summary>
        /// Size of the virtual machine used to build, customize and capture images. Omit or specify empty string to use the default
        /// (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
        /// </summary>
        string VMProfileVmsize { get; set; }
        /// <summary>
        /// Optional configuration of the virtual network to use to deploy the build VM and validation VM in. Omit if no specific
        /// virtual network needs to be used.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20240201.IVirtualNetworkConfig VMProfileVnetConfig { get; set; }
        /// <summary>
        /// Resource id of a pre-existing subnet on which Azure Container Instance will be deployed for Isolated Builds. This field
        /// may be specified only if `subnetId` is also specified and must be on the same Virtual Network as the subnet specified
        /// in `subnetId`.
        /// </summary>
        string VnetConfigContainerInstanceSubnetId { get; set; }
        /// <summary>
        /// Size of the proxy virtual machine used to pass traffic to the build VM and validation VM. This must not be specified if
        /// `containerInstanceSubnetId` is specified because no proxy virtual machine is deployed in that case. Omit or specify empty
        /// string to use the default (Standard_A1_v2).
        /// </summary>
        string VnetConfigProxyVMSize { get; set; }
        /// <summary>
        /// Resource id of a pre-existing subnet on which the build VM and validation VM will be deployed
        /// </summary>
        string VnetConfigSubnetId { get; set; }

    }
}