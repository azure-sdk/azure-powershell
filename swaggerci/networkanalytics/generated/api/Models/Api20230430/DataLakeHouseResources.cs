// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Extensions;

    /// <summary>The data lake house resource</summary>
    public partial class DataLakeHouseResources :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResources,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.TrackedResource();

        /// <summary>Enables Secure File Transfer Protocol, if set to true</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public bool? BronzeStorageAccountPropertyIsSftpEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).BronzeStorageAccountPropertyIsSftpEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).BronzeStorageAccountPropertyIsSftpEnabled = value ?? default(bool); }

        /// <summary>Allow or disallow public network access to Storage Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string CommonStorageAccountPropertyPublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).CommonStorageAccountPropertyPublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).CommonStorageAccountPropertyPublicNetworkAccess = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).Id; }

        /// <summary>Principal type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.PrincipalType? KustoClusterPrincipalAssignmentPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).KustoClusterPrincipalAssignmentPrincipalType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).KustoClusterPrincipalAssignmentPrincipalType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.PrincipalType)""); }

        /// <summary>Kusto roles</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.KustoRole? KustoClusterPrincipalAssignmentRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).KustoClusterPrincipalAssignmentRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).KustoClusterPrincipalAssignmentRole = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.KustoRole)""); }

        /// <summary>system Identity Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string KustoClusterPrincipalAssignmentSystemIdentityName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).KustoClusterPrincipalAssignmentSystemIdentityName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).KustoClusterPrincipalAssignmentSystemIdentityName = value ?? null; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Managed Resource Group location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).ManagedResourceGroupConfigurationLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).ManagedResourceGroupConfigurationLocation = value ?? null; }

        /// <summary>Name of managed resource group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).ManagedResourceGroupConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).ManagedResourceGroupConfigurationName = value ?? null; }

        /// <summary>Internal Acessors for AzureDataExplorerProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerProperties Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.AzureDataExplorerProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).AzureDataExplorerProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).AzureDataExplorerProperty = value; }

        /// <summary>Internal Acessors for AzureDataExplorerPropertyKustoClusterPrincipalAssignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IKustoClusterPrincipalAssignments Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.AzureDataExplorerPropertyKustoClusterPrincipalAssignment { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).AzureDataExplorerPropertyKustoClusterPrincipalAssignment; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).AzureDataExplorerPropertyKustoClusterPrincipalAssignment = value; }

        /// <summary>Internal Acessors for AzureDataExplorerPropertyVirtualNetworkConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.AzureDataExplorerPropertyVirtualNetworkConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).AzureDataExplorerPropertyVirtualNetworkConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).AzureDataExplorerPropertyVirtualNetworkConfiguration = value; }

        /// <summary>Internal Acessors for BlobServiceRestorePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IRestorePolicy Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.BlobServiceRestorePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).BlobServiceRestorePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).BlobServiceRestorePolicy = value; }

        /// <summary>Internal Acessors for BronzeStorageAccountProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBronzeStorageAccountProperties Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.BronzeStorageAccountProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).BronzeStorageAccountProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).BronzeStorageAccountProperty = value; }

        /// <summary>Internal Acessors for CommonStorageAccountProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountProperties Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.CommonStorageAccountProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).CommonStorageAccountProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).CommonStorageAccountProperty = value; }

        /// <summary>Internal Acessors for CommonStorageAccountPropertyBlobService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServices Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.CommonStorageAccountPropertyBlobService { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).CommonStorageAccountPropertyBlobService; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).CommonStorageAccountPropertyBlobService = value; }

        /// <summary>Internal Acessors for CommonStorageAccountPropertyNetworkacl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAcls Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.CommonStorageAccountPropertyNetworkacl { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).CommonStorageAccountPropertyNetworkacl; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).CommonStorageAccountPropertyNetworkacl = value; }

        /// <summary>Internal Acessors for CommonStorageAccountPropertyPrivateEndPoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPoint Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.CommonStorageAccountPropertyPrivateEndPoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).CommonStorageAccountPropertyPrivateEndPoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).CommonStorageAccountPropertyPrivateEndPoint = value; }

        /// <summary>Internal Acessors for ManagedResourceGroupConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IManagedResourceGroupConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.ManagedResourceGroupConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).ManagedResourceGroupConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).ManagedResourceGroupConfiguration = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStorageProperties Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.StorageProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).Name; }

        /// <summary>Specifies whether traffic is bypassed for Logging/Metrics/AzureServices</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass? NetworkaclBypass { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).NetworkaclBypass; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).NetworkaclBypass = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass)""); }

        /// <summary>Default Action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction? NetworkaclDefaultActionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).NetworkaclDefaultActionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).NetworkaclDefaultActionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction)""); }

        /// <summary>IP rule with specific IP or IP range in CIDR format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules[] NetworkaclIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).NetworkaclIPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).NetworkaclIPRule = value ?? null /* arrayOf */; }

        /// <summary>Resource Access Rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules[] NetworkaclResourceAccessRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).NetworkaclResourceAccessRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).NetworkaclResourceAccessRule = value ?? null /* arrayOf */; }

        /// <summary>Virtual Network Rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule[] NetworkaclVirtualNetworkRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).NetworkaclVirtualNetworkRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).NetworkaclVirtualNetworkRule = value ?? null /* arrayOf */; }

        /// <summary>The private link resource customDnsConfigs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string PrivateEndPointCustomDnsConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).PrivateEndPointCustomDnsConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).PrivateEndPointCustomDnsConfig = value ?? null; }

        /// <summary>The private link resource group id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string[] PrivateEndPointGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).PrivateEndPointGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).PrivateEndPointGroupId = value ?? null /* arrayOf */; }

        /// <summary>The private link resource service id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string PrivateEndPointPrivateLinkServiceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).PrivateEndPointPrivateLinkServiceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).PrivateEndPointPrivateLinkServiceId = value ?? null; }

        /// <summary>Resource ID of a subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string PrivateEndPointSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).PrivateEndPointSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).PrivateEndPointSubnetId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStorageProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStorageProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.StorageProperties()); set => this._property = value; }

        /// <summary>Storage properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Restore Policy in days</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public int? RestorePolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).RestorePolicyDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).RestorePolicyDay = value ?? default(int); }

        /// <summary>Restore Policy enabled or disabled boolean value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public bool? RestorePolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).RestorePolicyEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).RestorePolicyEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="RetryAfter" /> property.</summary>
        private int? _retryAfter;

        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        public int? RetryAfter { get => this._retryAfter; set => this._retryAfter = value; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.IResourceInternal)__trackedResource).Type; }

        /// <summary>unique Identifier Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string UniqueIdentifierName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).UniqueIdentifierName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).UniqueIdentifierName = value ?? null; }

        /// <summary>Data Management Public Ip ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string VirtualNetworkConfigurationDataManagementPublicIPId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).VirtualNetworkConfigurationDataManagementPublicIPId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).VirtualNetworkConfigurationDataManagementPublicIPId = value ?? null; }

        /// <summary>Engine Public IP ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string VirtualNetworkConfigurationEnginePublicIPId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).VirtualNetworkConfigurationEnginePublicIPId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).VirtualNetworkConfigurationEnginePublicIPId = value ?? null; }

        /// <summary>Resource ID of a subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string VirtualNetworkConfigurationSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).VirtualNetworkConfigurationSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal)Property).VirtualNetworkConfigurationSubnetId = value ?? null; }

        /// <summary>Creates an new <see cref="DataLakeHouseResources" /> instance.</summary>
        public DataLakeHouseResources()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Retry-After", out var __retryAfterHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDataLakeHouseResourcesInternal)this).RetryAfter = System.Linq.Enumerable.FirstOrDefault(__retryAfterHeader0) is string __headerRetryAfterHeader0 ? int.TryParse( __headerRetryAfterHeader0, out int __headerRetryAfterHeader0Value ) ? __headerRetryAfterHeader0Value : default(int?) : default(int?);
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// The data lake house resource
    public partial interface IDataLakeHouseResources :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.ITrackedResource
    {
        /// <summary>Enables Secure File Transfer Protocol, if set to true</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enables Secure File Transfer Protocol, if set to true",
        SerializedName = @"isSftpEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BronzeStorageAccountPropertyIsSftpEnabled { get; set; }
        /// <summary>Allow or disallow public network access to Storage Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allow or disallow public network access to Storage Account.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(string) })]
        string CommonStorageAccountPropertyPublicNetworkAccess { get; set; }
        /// <summary>Principal type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Principal type.",
        SerializedName = @"principalType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.PrincipalType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.PrincipalType? KustoClusterPrincipalAssignmentPrincipalType { get; set; }
        /// <summary>Kusto roles</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kusto roles",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.KustoRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.KustoRole? KustoClusterPrincipalAssignmentRole { get; set; }
        /// <summary>system Identity Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"system Identity Name",
        SerializedName = @"systemIdentityName",
        PossibleTypes = new [] { typeof(string) })]
        string KustoClusterPrincipalAssignmentSystemIdentityName { get; set; }
        /// <summary>Managed Resource Group location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Managed Resource Group location",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>Name of managed resource group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of managed resource group",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>Specifies whether traffic is bypassed for Logging/Metrics/AzureServices</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether traffic is bypassed for Logging/Metrics/AzureServices",
        SerializedName = @"bypass",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass? NetworkaclBypass { get; set; }
        /// <summary>Default Action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Default Action",
        SerializedName = @"defaultActionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction? NetworkaclDefaultActionType { get; set; }
        /// <summary>IP rule with specific IP or IP range in CIDR format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP rule with specific IP or IP range in CIDR format.",
        SerializedName = @"ipRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules[] NetworkaclIPRule { get; set; }
        /// <summary>Resource Access Rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Access Rules.",
        SerializedName = @"resourceAccessRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules[] NetworkaclResourceAccessRule { get; set; }
        /// <summary>Virtual Network Rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Network Rule",
        SerializedName = @"virtualNetworkRule",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule[] NetworkaclVirtualNetworkRule { get; set; }
        /// <summary>The private link resource customDnsConfigs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link resource customDnsConfigs.",
        SerializedName = @"customDnsConfigs",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndPointCustomDnsConfig { get; set; }
        /// <summary>The private link resource group id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link resource group id.",
        SerializedName = @"groupIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] PrivateEndPointGroupId { get; set; }
        /// <summary>The private link resource service id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link resource service id",
        SerializedName = @"privateLinkServiceId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndPointPrivateLinkServiceId { get; set; }
        /// <summary>Resource ID of a subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a subnet",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndPointSubnetId { get; set; }
        /// <summary>Storage properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Storage properties",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Restore Policy in days</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Restore Policy in days",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? RestorePolicyDay { get; set; }
        /// <summary>Restore Policy enabled or disabled boolean value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Restore Policy enabled or disabled boolean value",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RestorePolicyEnabled { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Retry-After",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryAfter { get; set; }
        /// <summary>unique Identifier Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"unique Identifier Name",
        SerializedName = @"uniqueIdentifierName",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueIdentifierName { get; set; }
        /// <summary>Data Management Public Ip ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data Management Public Ip ID",
        SerializedName = @"dataManagementPublicIpId",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkConfigurationDataManagementPublicIPId { get; set; }
        /// <summary>Engine Public IP ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Engine Public IP ID",
        SerializedName = @"enginePublicIpId",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkConfigurationEnginePublicIPId { get; set; }
        /// <summary>Resource ID of a subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a subnet",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkConfigurationSubnetId { get; set; }

    }
    /// The data lake house resource
    internal partial interface IDataLakeHouseResourcesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api30.ITrackedResourceInternal
    {
        /// <summary>Azure DataExplorer Cluster properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerProperties AzureDataExplorerProperty { get; set; }
        /// <summary>Kusto Cluster Principal Assignments</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IKustoClusterPrincipalAssignments AzureDataExplorerPropertyKustoClusterPrincipalAssignment { get; set; }
        /// <summary>Virtual Network Configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkConfiguration AzureDataExplorerPropertyVirtualNetworkConfiguration { get; set; }
        /// <summary>Restore Policy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IRestorePolicy BlobServiceRestorePolicy { get; set; }
        /// <summary>Bronze Storage Account properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBronzeStorageAccountProperties BronzeStorageAccountProperty { get; set; }
        /// <summary>Enables Secure File Transfer Protocol, if set to true</summary>
        bool? BronzeStorageAccountPropertyIsSftpEnabled { get; set; }
        /// <summary>Common Storage Account properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountProperties CommonStorageAccountProperty { get; set; }
        /// <summary>Blob Services</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServices CommonStorageAccountPropertyBlobService { get; set; }
        /// <summary>Network rule set</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAcls CommonStorageAccountPropertyNetworkacl { get; set; }
        /// <summary>Private End Point</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPoint CommonStorageAccountPropertyPrivateEndPoint { get; set; }
        /// <summary>Allow or disallow public network access to Storage Account.</summary>
        string CommonStorageAccountPropertyPublicNetworkAccess { get; set; }
        /// <summary>Principal type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.PrincipalType? KustoClusterPrincipalAssignmentPrincipalType { get; set; }
        /// <summary>Kusto roles</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.KustoRole? KustoClusterPrincipalAssignmentRole { get; set; }
        /// <summary>system Identity Name</summary>
        string KustoClusterPrincipalAssignmentSystemIdentityName { get; set; }
        /// <summary>Managed Resource Group configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IManagedResourceGroupConfiguration ManagedResourceGroupConfiguration { get; set; }
        /// <summary>Managed Resource Group location</summary>
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>Name of managed resource group</summary>
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>Specifies whether traffic is bypassed for Logging/Metrics/AzureServices</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass? NetworkaclBypass { get; set; }
        /// <summary>Default Action</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction? NetworkaclDefaultActionType { get; set; }
        /// <summary>IP rule with specific IP or IP range in CIDR format.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules[] NetworkaclIPRule { get; set; }
        /// <summary>Resource Access Rules.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules[] NetworkaclResourceAccessRule { get; set; }
        /// <summary>Virtual Network Rule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule[] NetworkaclVirtualNetworkRule { get; set; }
        /// <summary>The private link resource customDnsConfigs.</summary>
        string PrivateEndPointCustomDnsConfig { get; set; }
        /// <summary>The private link resource group id.</summary>
        string[] PrivateEndPointGroupId { get; set; }
        /// <summary>The private link resource service id</summary>
        string PrivateEndPointPrivateLinkServiceId { get; set; }
        /// <summary>Resource ID of a subnet</summary>
        string PrivateEndPointSubnetId { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStorageProperties Property { get; set; }
        /// <summary>Storage properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Restore Policy in days</summary>
        int? RestorePolicyDay { get; set; }
        /// <summary>Restore Policy enabled or disabled boolean value</summary>
        bool? RestorePolicyEnabled { get; set; }

        int? RetryAfter { get; set; }
        /// <summary>unique Identifier Name</summary>
        string UniqueIdentifierName { get; set; }
        /// <summary>Data Management Public Ip ID</summary>
        string VirtualNetworkConfigurationDataManagementPublicIPId { get; set; }
        /// <summary>Engine Public IP ID</summary>
        string VirtualNetworkConfigurationEnginePublicIPId { get; set; }
        /// <summary>Resource ID of a subnet</summary>
        string VirtualNetworkConfigurationSubnetId { get; set; }

    }
}