// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Extensions;

    /// <summary>Common Storage Account Properties.</summary>
    public partial class CommonStorageAccountProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal
    {

        /// <summary>Backing field for <see cref="BlobService" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServices _blobService;

        /// <summary>Blob Services</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServices BlobService { get => (this._blobService = this._blobService ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.BlobServices()); set => this._blobService = value; }

        /// <summary>Internal Acessors for BlobService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServices Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal.BlobService { get => (this._blobService = this._blobService ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.BlobServices()); set { {_blobService = value;} } }

        /// <summary>Internal Acessors for BlobServiceRestorePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IRestorePolicy Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal.BlobServiceRestorePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServicesInternal)BlobService).RestorePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServicesInternal)BlobService).RestorePolicy = value; }

        /// <summary>Internal Acessors for Networkacl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAcls Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal.Networkacl { get => (this._networkacl = this._networkacl ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.NetworkAcls()); set { {_networkacl = value;} } }

        /// <summary>Internal Acessors for PrivateEndPoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPoint Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal.PrivateEndPoint { get => (this._privateEndPoint = this._privateEndPoint ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.PrivateEndPoint()); set { {_privateEndPoint = value;} } }

        /// <summary>Backing field for <see cref="Networkacl" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAcls _networkacl;

        /// <summary>Network rule set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAcls Networkacl { get => (this._networkacl = this._networkacl ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.NetworkAcls()); set => this._networkacl = value; }

        /// <summary>Specifies whether traffic is bypassed for Logging/Metrics/AzureServices</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass? NetworkaclBypass { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAclsInternal)Networkacl).Bypass; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAclsInternal)Networkacl).Bypass = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass)""); }

        /// <summary>Default Action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction? NetworkaclDefaultActionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAclsInternal)Networkacl).DefaultActionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAclsInternal)Networkacl).DefaultActionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction)""); }

        /// <summary>IP rule with specific IP or IP range in CIDR format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules[] NetworkaclIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAclsInternal)Networkacl).IPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAclsInternal)Networkacl).IPRule = value ?? null /* arrayOf */; }

        /// <summary>Resource Access Rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules[] NetworkaclResourceAccessRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAclsInternal)Networkacl).ResourceAccessRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAclsInternal)Networkacl).ResourceAccessRule = value ?? null /* arrayOf */; }

        /// <summary>Virtual Network Rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule[] NetworkaclVirtualNetworkRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAclsInternal)Networkacl).VirtualNetworkRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAclsInternal)Networkacl).VirtualNetworkRule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="PrivateEndPoint" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPoint _privateEndPoint;

        /// <summary>Private End Point</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPoint PrivateEndPoint { get => (this._privateEndPoint = this._privateEndPoint ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.PrivateEndPoint()); set => this._privateEndPoint = value; }

        /// <summary>The private link resource customDnsConfigs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string PrivateEndPointCustomDnsConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPointInternal)PrivateEndPoint).CustomDnsConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPointInternal)PrivateEndPoint).CustomDnsConfig = value ?? null; }

        /// <summary>The private link resource group id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string[] PrivateEndPointGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPointInternal)PrivateEndPoint).GroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPointInternal)PrivateEndPoint).GroupId = value ?? null /* arrayOf */; }

        /// <summary>The private link resource service id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string PrivateEndPointPrivateLinkServiceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPointInternal)PrivateEndPoint).PrivateLinkServiceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPointInternal)PrivateEndPoint).PrivateLinkServiceId = value ?? null; }

        /// <summary>Resource ID of a subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string PrivateEndPointSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPointInternal)PrivateEndPoint).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPointInternal)PrivateEndPoint).SubnetId = value ?? null; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private string _publicNetworkAccess;

        /// <summary>Allow or disallow public network access to Storage Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        public string PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Restore Policy in days</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public int? RestorePolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServicesInternal)BlobService).RestorePolicyDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServicesInternal)BlobService).RestorePolicyDay = value ?? default(int); }

        /// <summary>Restore Policy enabled or disabled boolean value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public bool? RestorePolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServicesInternal)BlobService).RestorePolicyEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServicesInternal)BlobService).RestorePolicyEnabled = value ?? default(bool); }

        /// <summary>Creates an new <see cref="CommonStorageAccountProperties" /> instance.</summary>
        public CommonStorageAccountProperties()
        {

        }
    }
    /// Common Storage Account Properties.
    public partial interface ICommonStorageAccountProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.IJsonSerializable
    {
        /// <summary>Specifies whether traffic is bypassed for Logging/Metrics/AzureServices</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether traffic is bypassed for Logging/Metrics/AzureServices",
        SerializedName = @"bypass",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass? NetworkaclBypass { get; set; }
        /// <summary>Default Action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Default Action",
        SerializedName = @"defaultActionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction? NetworkaclDefaultActionType { get; set; }
        /// <summary>IP rule with specific IP or IP range in CIDR format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP rule with specific IP or IP range in CIDR format.",
        SerializedName = @"ipRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules[] NetworkaclIPRule { get; set; }
        /// <summary>Resource Access Rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Access Rules.",
        SerializedName = @"resourceAccessRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules[] NetworkaclResourceAccessRule { get; set; }
        /// <summary>Virtual Network Rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Network Rule",
        SerializedName = @"virtualNetworkRule",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule[] NetworkaclVirtualNetworkRule { get; set; }
        /// <summary>The private link resource customDnsConfigs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link resource customDnsConfigs.",
        SerializedName = @"customDnsConfigs",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndPointCustomDnsConfig { get; set; }
        /// <summary>The private link resource group id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link resource group id.",
        SerializedName = @"groupIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] PrivateEndPointGroupId { get; set; }
        /// <summary>The private link resource service id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link resource service id",
        SerializedName = @"privateLinkServiceId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndPointPrivateLinkServiceId { get; set; }
        /// <summary>Resource ID of a subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a subnet",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndPointSubnetId { get; set; }
        /// <summary>Allow or disallow public network access to Storage Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allow or disallow public network access to Storage Account.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(string) })]
        string PublicNetworkAccess { get; set; }
        /// <summary>Restore Policy in days</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Restore Policy in days",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? RestorePolicyDay { get; set; }
        /// <summary>Restore Policy enabled or disabled boolean value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Restore Policy enabled or disabled boolean value",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RestorePolicyEnabled { get; set; }

    }
    /// Common Storage Account Properties.
    internal partial interface ICommonStorageAccountPropertiesInternal

    {
        /// <summary>Blob Services</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServices BlobService { get; set; }
        /// <summary>Restore Policy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IRestorePolicy BlobServiceRestorePolicy { get; set; }
        /// <summary>Network rule set</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAcls Networkacl { get; set; }
        /// <summary>Specifies whether traffic is bypassed for Logging/Metrics/AzureServices</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass? NetworkaclBypass { get; set; }
        /// <summary>Default Action</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction? NetworkaclDefaultActionType { get; set; }
        /// <summary>IP rule with specific IP or IP range in CIDR format.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules[] NetworkaclIPRule { get; set; }
        /// <summary>Resource Access Rules.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules[] NetworkaclResourceAccessRule { get; set; }
        /// <summary>Virtual Network Rule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule[] NetworkaclVirtualNetworkRule { get; set; }
        /// <summary>Private End Point</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPoint PrivateEndPoint { get; set; }
        /// <summary>The private link resource customDnsConfigs.</summary>
        string PrivateEndPointCustomDnsConfig { get; set; }
        /// <summary>The private link resource group id.</summary>
        string[] PrivateEndPointGroupId { get; set; }
        /// <summary>The private link resource service id</summary>
        string PrivateEndPointPrivateLinkServiceId { get; set; }
        /// <summary>Resource ID of a subnet</summary>
        string PrivateEndPointSubnetId { get; set; }
        /// <summary>Allow or disallow public network access to Storage Account.</summary>
        string PublicNetworkAccess { get; set; }
        /// <summary>Restore Policy in days</summary>
        int? RestorePolicyDay { get; set; }
        /// <summary>Restore Policy enabled or disabled boolean value</summary>
        bool? RestorePolicyEnabled { get; set; }

    }
}