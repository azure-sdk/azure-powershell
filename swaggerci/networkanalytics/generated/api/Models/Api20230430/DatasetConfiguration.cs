// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Extensions;

    /// <summary>The connector dataset information</summary>
    public partial class DatasetConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDatasetConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IDatasetConfigurationInternal
    {

        /// <summary>Backing field for <see cref="ColumnsToMask" /> property.</summary>
        private string[] _columnsToMask;

        /// <summary>Columns to be masked</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        public string[] ColumnsToMask { get => this._columnsToMask; set => this._columnsToMask = value; }

        /// <summary>Backing field for <see cref="DatasetName" /> property.</summary>
        private string _datasetName;

        /// <summary>The name of the dataset</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        public string DatasetName { get => this._datasetName; set => this._datasetName = value; }

        /// <summary>Backing field for <see cref="TimestampKey" /> property.</summary>
        private global::System.DateTime? _timestampKey;

        /// <summary>The column key holding the timestamp data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        public global::System.DateTime? TimestampKey { get => this._timestampKey; set => this._timestampKey = value; }

        /// <summary>Creates an new <see cref="DatasetConfiguration" /> instance.</summary>
        public DatasetConfiguration()
        {

        }
    }
    /// The connector dataset information
    public partial interface IDatasetConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.IJsonSerializable
    {
        /// <summary>Columns to be masked</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Columns to be masked",
        SerializedName = @"columnsToMask",
        PossibleTypes = new [] { typeof(string) })]
        string[] ColumnsToMask { get; set; }
        /// <summary>The name of the dataset</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the dataset",
        SerializedName = @"datasetName",
        PossibleTypes = new [] { typeof(string) })]
        string DatasetName { get; set; }
        /// <summary>The column key holding the timestamp data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The column key holding the timestamp data",
        SerializedName = @"timestampKey",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimestampKey { get; set; }

    }
    /// The connector dataset information
    internal partial interface IDatasetConfigurationInternal

    {
        /// <summary>Columns to be masked</summary>
        string[] ColumnsToMask { get; set; }
        /// <summary>The name of the dataset</summary>
        string DatasetName { get; set; }
        /// <summary>The column key holding the timestamp data</summary>
        global::System.DateTime? TimestampKey { get; set; }

    }
}