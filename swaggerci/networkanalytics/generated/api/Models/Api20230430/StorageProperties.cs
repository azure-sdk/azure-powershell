// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Extensions;

    /// <summary>Details of the NetworkAnalytics Storage.</summary>
    public partial class StorageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStorageProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AzureDataExplorerProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerProperties _azureDataExplorerProperty;

        /// <summary>Azure DataExplorer Cluster properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerProperties AzureDataExplorerProperty { get => (this._azureDataExplorerProperty = this._azureDataExplorerProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.AzureDataExplorerProperties()); set => this._azureDataExplorerProperty = value; }

        /// <summary>Backing field for <see cref="BronzeStorageAccountProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBronzeStorageAccountProperties _bronzeStorageAccountProperty;

        /// <summary>Bronze Storage Account properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBronzeStorageAccountProperties BronzeStorageAccountProperty { get => (this._bronzeStorageAccountProperty = this._bronzeStorageAccountProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.BronzeStorageAccountProperties()); set => this._bronzeStorageAccountProperty = value; }

        /// <summary>Enables Secure File Transfer Protocol, if set to true</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public bool? BronzeStorageAccountPropertyIsSftpEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBronzeStorageAccountPropertiesInternal)BronzeStorageAccountProperty).IsSftpEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBronzeStorageAccountPropertiesInternal)BronzeStorageAccountProperty).IsSftpEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="CommonStorageAccountProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountProperties _commonStorageAccountProperty;

        /// <summary>Common Storage Account properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountProperties CommonStorageAccountProperty { get => (this._commonStorageAccountProperty = this._commonStorageAccountProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.CommonStorageAccountProperties()); set => this._commonStorageAccountProperty = value; }

        /// <summary>Allow or disallow public network access to Storage Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string CommonStorageAccountPropertyPublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PublicNetworkAccess = value ?? null; }

        /// <summary>Principal type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.PrincipalType KustoClusterPrincipalAssignmentPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).KustoClusterPrincipalAssignmentPrincipalType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).KustoClusterPrincipalAssignmentPrincipalType = value ; }

        /// <summary>Kusto roles</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.KustoRole KustoClusterPrincipalAssignmentRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).KustoClusterPrincipalAssignmentRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).KustoClusterPrincipalAssignmentRole = value ; }

        /// <summary>system Identity Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string KustoClusterPrincipalAssignmentSystemIdentityName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).KustoClusterPrincipalAssignmentSystemIdentityName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).KustoClusterPrincipalAssignmentSystemIdentityName = value ?? null; }

        /// <summary>Backing field for <see cref="ManagedResourceGroupConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IManagedResourceGroupConfiguration _managedResourceGroupConfiguration;

        /// <summary>Managed Resource Group configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IManagedResourceGroupConfiguration ManagedResourceGroupConfiguration { get => (this._managedResourceGroupConfiguration = this._managedResourceGroupConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ManagedResourceGroupConfiguration()); set => this._managedResourceGroupConfiguration = value; }

        /// <summary>Managed Resource Group location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Location = value ?? null; }

        /// <summary>Name of managed resource group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Name = value ?? null; }

        /// <summary>Internal Acessors for AzureDataExplorerProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerProperties Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal.AzureDataExplorerProperty { get => (this._azureDataExplorerProperty = this._azureDataExplorerProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.AzureDataExplorerProperties()); set { {_azureDataExplorerProperty = value;} } }

        /// <summary>Internal Acessors for AzureDataExplorerPropertyKustoClusterPrincipalAssignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IKustoClusterPrincipalAssignments Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal.AzureDataExplorerPropertyKustoClusterPrincipalAssignment { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).KustoClusterPrincipalAssignment; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).KustoClusterPrincipalAssignment = value; }

        /// <summary>Internal Acessors for AzureDataExplorerPropertyVirtualNetworkConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal.AzureDataExplorerPropertyVirtualNetworkConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).VirtualNetworkConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).VirtualNetworkConfiguration = value; }

        /// <summary>Internal Acessors for BlobServiceRestorePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IRestorePolicy Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal.BlobServiceRestorePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).BlobServiceRestorePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).BlobServiceRestorePolicy = value; }

        /// <summary>Internal Acessors for BronzeStorageAccountProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBronzeStorageAccountProperties Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal.BronzeStorageAccountProperty { get => (this._bronzeStorageAccountProperty = this._bronzeStorageAccountProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.BronzeStorageAccountProperties()); set { {_bronzeStorageAccountProperty = value;} } }

        /// <summary>Internal Acessors for CommonStorageAccountProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountProperties Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal.CommonStorageAccountProperty { get => (this._commonStorageAccountProperty = this._commonStorageAccountProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.CommonStorageAccountProperties()); set { {_commonStorageAccountProperty = value;} } }

        /// <summary>Internal Acessors for CommonStorageAccountPropertyBlobService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServices Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal.CommonStorageAccountPropertyBlobService { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).BlobService; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).BlobService = value; }

        /// <summary>Internal Acessors for CommonStorageAccountPropertyNetworkacl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAcls Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal.CommonStorageAccountPropertyNetworkacl { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).Networkacl; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).Networkacl = value; }

        /// <summary>Internal Acessors for CommonStorageAccountPropertyPrivateEndPoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPoint Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal.CommonStorageAccountPropertyPrivateEndPoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PrivateEndPoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PrivateEndPoint = value; }

        /// <summary>Internal Acessors for ManagedResourceGroupConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IManagedResourceGroupConfiguration Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal.ManagedResourceGroupConfiguration { get => (this._managedResourceGroupConfiguration = this._managedResourceGroupConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ManagedResourceGroupConfiguration()); set { {_managedResourceGroupConfiguration = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IStoragePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Specifies whether traffic is bypassed for Logging/Metrics/AzureServices</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass? NetworkaclBypass { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).NetworkaclBypass; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).NetworkaclBypass = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass)""); }

        /// <summary>Default Action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction? NetworkaclDefaultActionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).NetworkaclDefaultActionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).NetworkaclDefaultActionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction)""); }

        /// <summary>IP rule with specific IP or IP range in CIDR format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules[] NetworkaclIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).NetworkaclIPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).NetworkaclIPRule = value ?? null /* arrayOf */; }

        /// <summary>Resource Access Rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules[] NetworkaclResourceAccessRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).NetworkaclResourceAccessRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).NetworkaclResourceAccessRule = value ?? null /* arrayOf */; }

        /// <summary>Virtual Network Rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule[] NetworkaclVirtualNetworkRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).NetworkaclVirtualNetworkRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).NetworkaclVirtualNetworkRule = value ?? null /* arrayOf */; }

        /// <summary>The private link resource customDnsConfigs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string PrivateEndPointCustomDnsConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PrivateEndPointCustomDnsConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PrivateEndPointCustomDnsConfig = value ?? null; }

        /// <summary>The private link resource group id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string[] PrivateEndPointGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PrivateEndPointGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PrivateEndPointGroupId = value ?? null /* arrayOf */; }

        /// <summary>The private link resource service id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string PrivateEndPointPrivateLinkServiceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PrivateEndPointPrivateLinkServiceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PrivateEndPointPrivateLinkServiceId = value ?? null; }

        /// <summary>Resource ID of a subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string PrivateEndPointSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PrivateEndPointSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).PrivateEndPointSubnetId = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.ProvisioningState? _provisioningState;

        /// <summary>Storage properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Restore Policy in days</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public int? RestorePolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).RestorePolicyDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).RestorePolicyDay = value ?? default(int); }

        /// <summary>Restore Policy enabled or disabled boolean value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public bool? RestorePolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).RestorePolicyEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountPropertiesInternal)CommonStorageAccountProperty).RestorePolicyEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="UniqueIdentifierName" /> property.</summary>
        private string _uniqueIdentifierName;

        /// <summary>unique Identifier Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Owned)]
        public string UniqueIdentifierName { get => this._uniqueIdentifierName; set => this._uniqueIdentifierName = value; }

        /// <summary>Data Management Public Ip ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string VirtualNetworkConfigurationDataManagementPublicIPId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).VirtualNetworkConfigurationDataManagementPublicIPId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).VirtualNetworkConfigurationDataManagementPublicIPId = value ?? null; }

        /// <summary>Engine Public IP ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string VirtualNetworkConfigurationEnginePublicIPId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).VirtualNetworkConfigurationEnginePublicIPId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).VirtualNetworkConfigurationEnginePublicIPId = value ?? null; }

        /// <summary>Resource ID of a subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.PropertyOrigin.Inlined)]
        public string VirtualNetworkConfigurationSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).VirtualNetworkConfigurationSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerPropertiesInternal)AzureDataExplorerProperty).VirtualNetworkConfigurationSubnetId = value ?? null; }

        /// <summary>Creates an new <see cref="StorageProperties" /> instance.</summary>
        public StorageProperties()
        {

        }
    }
    /// Details of the NetworkAnalytics Storage.
    public partial interface IStorageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.IJsonSerializable
    {
        /// <summary>Enables Secure File Transfer Protocol, if set to true</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enables Secure File Transfer Protocol, if set to true",
        SerializedName = @"isSftpEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BronzeStorageAccountPropertyIsSftpEnabled { get; set; }
        /// <summary>Allow or disallow public network access to Storage Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allow or disallow public network access to Storage Account.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(string) })]
        string CommonStorageAccountPropertyPublicNetworkAccess { get; set; }
        /// <summary>Principal type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Principal type.",
        SerializedName = @"principalType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.PrincipalType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.PrincipalType KustoClusterPrincipalAssignmentPrincipalType { get; set; }
        /// <summary>Kusto roles</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Kusto roles",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.KustoRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.KustoRole KustoClusterPrincipalAssignmentRole { get; set; }
        /// <summary>system Identity Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"system Identity Name",
        SerializedName = @"systemIdentityName",
        PossibleTypes = new [] { typeof(string) })]
        string KustoClusterPrincipalAssignmentSystemIdentityName { get; set; }
        /// <summary>Managed Resource Group location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Managed Resource Group location",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>Name of managed resource group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of managed resource group",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>Specifies whether traffic is bypassed for Logging/Metrics/AzureServices</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether traffic is bypassed for Logging/Metrics/AzureServices",
        SerializedName = @"bypass",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass? NetworkaclBypass { get; set; }
        /// <summary>Default Action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Default Action",
        SerializedName = @"defaultActionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction? NetworkaclDefaultActionType { get; set; }
        /// <summary>IP rule with specific IP or IP range in CIDR format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP rule with specific IP or IP range in CIDR format.",
        SerializedName = @"ipRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules[] NetworkaclIPRule { get; set; }
        /// <summary>Resource Access Rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Access Rules.",
        SerializedName = @"resourceAccessRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules[] NetworkaclResourceAccessRule { get; set; }
        /// <summary>Virtual Network Rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Network Rule",
        SerializedName = @"virtualNetworkRule",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule[] NetworkaclVirtualNetworkRule { get; set; }
        /// <summary>The private link resource customDnsConfigs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link resource customDnsConfigs.",
        SerializedName = @"customDnsConfigs",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndPointCustomDnsConfig { get; set; }
        /// <summary>The private link resource group id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link resource group id.",
        SerializedName = @"groupIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] PrivateEndPointGroupId { get; set; }
        /// <summary>The private link resource service id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link resource service id",
        SerializedName = @"privateLinkServiceId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndPointPrivateLinkServiceId { get; set; }
        /// <summary>Resource ID of a subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a subnet",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndPointSubnetId { get; set; }
        /// <summary>Storage properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Storage properties",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Restore Policy in days</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Restore Policy in days",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? RestorePolicyDay { get; set; }
        /// <summary>Restore Policy enabled or disabled boolean value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Restore Policy enabled or disabled boolean value",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RestorePolicyEnabled { get; set; }
        /// <summary>unique Identifier Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"unique Identifier Name",
        SerializedName = @"uniqueIdentifierName",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueIdentifierName { get; set; }
        /// <summary>Data Management Public Ip ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data Management Public Ip ID",
        SerializedName = @"dataManagementPublicIpId",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkConfigurationDataManagementPublicIPId { get; set; }
        /// <summary>Engine Public IP ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Engine Public IP ID",
        SerializedName = @"enginePublicIpId",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkConfigurationEnginePublicIPId { get; set; }
        /// <summary>Resource ID of a subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a subnet",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualNetworkConfigurationSubnetId { get; set; }

    }
    /// Details of the NetworkAnalytics Storage.
    internal partial interface IStoragePropertiesInternal

    {
        /// <summary>Azure DataExplorer Cluster properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IAzureDataExplorerProperties AzureDataExplorerProperty { get; set; }
        /// <summary>Kusto Cluster Principal Assignments</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IKustoClusterPrincipalAssignments AzureDataExplorerPropertyKustoClusterPrincipalAssignment { get; set; }
        /// <summary>Virtual Network Configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkConfiguration AzureDataExplorerPropertyVirtualNetworkConfiguration { get; set; }
        /// <summary>Restore Policy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IRestorePolicy BlobServiceRestorePolicy { get; set; }
        /// <summary>Bronze Storage Account properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBronzeStorageAccountProperties BronzeStorageAccountProperty { get; set; }
        /// <summary>Enables Secure File Transfer Protocol, if set to true</summary>
        bool? BronzeStorageAccountPropertyIsSftpEnabled { get; set; }
        /// <summary>Common Storage Account properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.ICommonStorageAccountProperties CommonStorageAccountProperty { get; set; }
        /// <summary>Blob Services</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IBlobServices CommonStorageAccountPropertyBlobService { get; set; }
        /// <summary>Network rule set</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.INetworkAcls CommonStorageAccountPropertyNetworkacl { get; set; }
        /// <summary>Private End Point</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IPrivateEndPoint CommonStorageAccountPropertyPrivateEndPoint { get; set; }
        /// <summary>Allow or disallow public network access to Storage Account.</summary>
        string CommonStorageAccountPropertyPublicNetworkAccess { get; set; }
        /// <summary>Principal type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.PrincipalType KustoClusterPrincipalAssignmentPrincipalType { get; set; }
        /// <summary>Kusto roles</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.KustoRole KustoClusterPrincipalAssignmentRole { get; set; }
        /// <summary>system Identity Name</summary>
        string KustoClusterPrincipalAssignmentSystemIdentityName { get; set; }
        /// <summary>Managed Resource Group configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IManagedResourceGroupConfiguration ManagedResourceGroupConfiguration { get; set; }
        /// <summary>Managed Resource Group location</summary>
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>Name of managed resource group</summary>
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>Specifies whether traffic is bypassed for Logging/Metrics/AzureServices</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.Bypass? NetworkaclBypass { get; set; }
        /// <summary>Default Action</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.DefaultAction? NetworkaclDefaultActionType { get; set; }
        /// <summary>IP rule with specific IP or IP range in CIDR format.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IIPRules[] NetworkaclIPRule { get; set; }
        /// <summary>Resource Access Rules.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IResourceAccessRules[] NetworkaclResourceAccessRule { get; set; }
        /// <summary>Virtual Network Rule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Models.Api20230430.IVirtualNetworkRule[] NetworkaclVirtualNetworkRule { get; set; }
        /// <summary>The private link resource customDnsConfigs.</summary>
        string PrivateEndPointCustomDnsConfig { get; set; }
        /// <summary>The private link resource group id.</summary>
        string[] PrivateEndPointGroupId { get; set; }
        /// <summary>The private link resource service id</summary>
        string PrivateEndPointPrivateLinkServiceId { get; set; }
        /// <summary>Resource ID of a subnet</summary>
        string PrivateEndPointSubnetId { get; set; }
        /// <summary>Storage properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkAnalytics.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Restore Policy in days</summary>
        int? RestorePolicyDay { get; set; }
        /// <summary>Restore Policy enabled or disabled boolean value</summary>
        bool? RestorePolicyEnabled { get; set; }
        /// <summary>unique Identifier Name</summary>
        string UniqueIdentifierName { get; set; }
        /// <summary>Data Management Public Ip ID</summary>
        string VirtualNetworkConfigurationDataManagementPublicIPId { get; set; }
        /// <summary>Engine Public IP ID</summary>
        string VirtualNetworkConfigurationEnginePublicIPId { get; set; }
        /// <summary>Resource ID of a subnet</summary>
        string VirtualNetworkConfigurationSubnetId { get; set; }

    }
}