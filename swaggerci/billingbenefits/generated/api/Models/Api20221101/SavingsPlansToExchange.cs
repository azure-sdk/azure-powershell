// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Extensions;

    /// <summary>SavingsPlan refund details</summary>
    public partial class SavingsPlansToExchange :
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchange,
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal
    {

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public double? BillingCurrencyProratedAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyProratedAmountAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyProratedAmountAmount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string BillingCurrencyProratedAmountCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyProratedAmountCurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyProratedAmountCurrencyCode = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public double? BillingCurrencyRemainingCommitmentAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyRemainingCommitmentAmountAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyRemainingCommitmentAmountAmount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string BillingCurrencyRemainingCommitmentAmountCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyRemainingCommitmentAmountCurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyRemainingCommitmentAmountCurrencyCode = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public double? BillingCurrencyTotalPaidAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyTotalPaidAmountAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyTotalPaidAmountAmount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string BillingCurrencyTotalPaidAmountCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyTotalPaidAmountCurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyTotalPaidAmountCurrencyCode = value ?? null; }

        /// <summary>Backing field for <see cref="BillingInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformation _billingInformation;

        /// <summary>billing information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformation BillingInformation { get => (this._billingInformation = this._billingInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.BillingInformation()); set => this._billingInformation = value; }

        /// <summary>Backing field for <see cref="BillingPlan" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan? _billingPlan;

        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly billing plans.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan? BillingPlan { get => this._billingPlan; set => this._billingPlan = value; }

        /// <summary>Backing field for <see cref="BillingRefundAmount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice _billingRefundAmount;

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice BillingRefundAmount { get => (this._billingRefundAmount = this._billingRefundAmount ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.Price()); set => this._billingRefundAmount = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public double? BillingRefundAmountAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)BillingRefundAmount).Amount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)BillingRefundAmount).Amount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string BillingRefundAmountCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)BillingRefundAmount).CurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)BillingRefundAmount).CurrencyCode = value ?? null; }

        /// <summary>Backing field for <see cref="Commitment" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ICommitment _commitment;

        /// <summary>Commitment towards the benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ICommitment Commitment { get => (this._commitment = this._commitment ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.Commitment()); set => this._commitment = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public double? CommitmentAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)Commitment).Amount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)Commitment).Amount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string CommitmentCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)Commitment).CurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)Commitment).CurrencyCode = value ?? null; }

        /// <summary>Commitment grain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain? CommitmentGrain { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ICommitmentInternal)Commitment).Grain; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ICommitmentInternal)Commitment).Grain = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain)""); }

        /// <summary>Internal Acessors for BillingInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformation Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal.BillingInformation { get => (this._billingInformation = this._billingInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.BillingInformation()); set { {_billingInformation = value;} } }

        /// <summary>Internal Acessors for BillingInformationBillingCurrencyProratedAmount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal.BillingInformationBillingCurrencyProratedAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyProratedAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyProratedAmount = value; }

        /// <summary>
        /// Internal Acessors for BillingInformationBillingCurrencyRemainingCommitmentAmount
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal.BillingInformationBillingCurrencyRemainingCommitmentAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyRemainingCommitmentAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyRemainingCommitmentAmount = value; }

        /// <summary>Internal Acessors for BillingInformationBillingCurrencyTotalPaidAmount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal.BillingInformationBillingCurrencyTotalPaidAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyTotalPaidAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformationInternal)BillingInformation).BillingCurrencyTotalPaidAmount = value; }

        /// <summary>Internal Acessors for BillingRefundAmount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal.BillingRefundAmount { get => (this._billingRefundAmount = this._billingRefundAmount ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.Price()); set { {_billingRefundAmount = value;} } }

        /// <summary>Internal Acessors for Commitment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ICommitment Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal.Commitment { get => (this._commitment = this._commitment ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.Commitment()); set { {_commitment = value;} } }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private int? _quantity;

        /// <summary>Quantity to be exchanged. Must be greater than zero.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Owned)]
        public int? Quantity { get => this._quantity; set => this._quantity = value; }

        /// <summary>Backing field for <see cref="ReservationId" /> property.</summary>
        private string _reservationId;

        /// <summary>Fully qualified id of the SavingsPlan being returned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Owned)]
        public string ReservationId { get => this._reservationId; set => this._reservationId = value; }

        /// <summary>Creates an new <see cref="SavingsPlansToExchange" /> instance.</summary>
        public SavingsPlansToExchange()
        {

        }
    }
    /// SavingsPlan refund details
    public partial interface ISavingsPlansToExchange :
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? BillingCurrencyProratedAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrencyProratedAmountCurrencyCode { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? BillingCurrencyRemainingCommitmentAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrencyRemainingCommitmentAmountCurrencyCode { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? BillingCurrencyTotalPaidAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrencyTotalPaidAmountCurrencyCode { get; set; }
        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly billing plans.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the billing plan in ISO 8601 format. Required only for monthly billing plans.",
        SerializedName = @"billingPlans",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan) })]
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan? BillingPlan { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? BillingRefundAmountAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string BillingRefundAmountCurrencyCode { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? CommitmentAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string CommitmentCurrencyCode { get; set; }
        /// <summary>Commitment grain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Commitment grain.",
        SerializedName = @"grain",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain) })]
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain? CommitmentGrain { get; set; }
        /// <summary>Quantity to be exchanged. Must be greater than zero.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quantity to be exchanged. Must be greater than zero.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? Quantity { get; set; }
        /// <summary>Fully qualified id of the SavingsPlan being returned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully qualified id of the SavingsPlan being returned.",
        SerializedName = @"reservationId",
        PossibleTypes = new [] { typeof(string) })]
        string ReservationId { get; set; }

    }
    /// SavingsPlan refund details
    internal partial interface ISavingsPlansToExchangeInternal

    {
        double? BillingCurrencyProratedAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string BillingCurrencyProratedAmountCurrencyCode { get; set; }

        double? BillingCurrencyRemainingCommitmentAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string BillingCurrencyRemainingCommitmentAmountCurrencyCode { get; set; }

        double? BillingCurrencyTotalPaidAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string BillingCurrencyTotalPaidAmountCurrencyCode { get; set; }
        /// <summary>billing information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformation BillingInformation { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice BillingInformationBillingCurrencyProratedAmount { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice BillingInformationBillingCurrencyRemainingCommitmentAmount { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice BillingInformationBillingCurrencyTotalPaidAmount { get; set; }
        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly billing plans.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan? BillingPlan { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice BillingRefundAmount { get; set; }

        double? BillingRefundAmountAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string BillingRefundAmountCurrencyCode { get; set; }
        /// <summary>Commitment towards the benefit.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ICommitment Commitment { get; set; }

        double? CommitmentAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string CommitmentCurrencyCode { get; set; }
        /// <summary>Commitment grain.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain? CommitmentGrain { get; set; }
        /// <summary>Quantity to be exchanged. Must be greater than zero.</summary>
        int? Quantity { get; set; }
        /// <summary>Fully qualified id of the SavingsPlan being returned.</summary>
        string ReservationId { get; set; }

    }
}