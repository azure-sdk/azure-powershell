// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101
{
    using Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.PowerShell;

    /// <summary>SavingsPlan refund details</summary>
    [System.ComponentModel.TypeConverter(typeof(SavingsPlansToExchangeTypeConverter))]
    public partial class SavingsPlansToExchange
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.SavingsPlansToExchange"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchange" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchange DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new SavingsPlansToExchange(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.SavingsPlansToExchange"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchange" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchange DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new SavingsPlansToExchange(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="SavingsPlansToExchange" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="SavingsPlansToExchange" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchange FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.SavingsPlansToExchange"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal SavingsPlansToExchange(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Commitment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).Commitment = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ICommitment) content.GetValueForProperty("Commitment",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).Commitment, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.CommitmentTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingRefundAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmount = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice) content.GetValueForProperty("BillingRefundAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmount, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.PriceTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingInformation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformation = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformation) content.GetValueForProperty("BillingInformation",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformation, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.BillingInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ReservationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).ReservationId = (string) content.GetValueForProperty("ReservationId",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).ReservationId, global::System.Convert.ToString);
            }
            if (content.Contains("Quantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).Quantity = (int?) content.GetValueForProperty("Quantity",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).Quantity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("BillingPlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingPlan = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan?) content.GetValueForProperty("BillingPlan",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingPlan, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan.CreateFrom);
            }
            if (content.Contains("CommitmentGrain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentGrain = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain?) content.GetValueForProperty("CommitmentGrain",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentGrain, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain.CreateFrom);
            }
            if (content.Contains("CommitmentCurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentCurrencyCode = (string) content.GetValueForProperty("CommitmentCurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentCurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("CommitmentAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentAmount = (double?) content.GetValueForProperty("CommitmentAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentAmount, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("BillingRefundAmountCurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmountCurrencyCode = (string) content.GetValueForProperty("BillingRefundAmountCurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmountCurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("BillingRefundAmountAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmountAmount = (double?) content.GetValueForProperty("BillingRefundAmountAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmountAmount, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("BillingInformationBillingCurrencyTotalPaidAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyTotalPaidAmount = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice) content.GetValueForProperty("BillingInformationBillingCurrencyTotalPaidAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyTotalPaidAmount, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.PriceTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingInformationBillingCurrencyProratedAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyProratedAmount = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice) content.GetValueForProperty("BillingInformationBillingCurrencyProratedAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyProratedAmount, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.PriceTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingInformationBillingCurrencyRemainingCommitmentAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyRemainingCommitmentAmount = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice) content.GetValueForProperty("BillingInformationBillingCurrencyRemainingCommitmentAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyRemainingCommitmentAmount, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.PriceTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingCurrencyTotalPaidAmountCurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyTotalPaidAmountCurrencyCode = (string) content.GetValueForProperty("BillingCurrencyTotalPaidAmountCurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyTotalPaidAmountCurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrencyTotalPaidAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyTotalPaidAmount = (double?) content.GetValueForProperty("BillingCurrencyTotalPaidAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyTotalPaidAmount, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("BillingCurrencyProratedAmountCurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyProratedAmountCurrencyCode = (string) content.GetValueForProperty("BillingCurrencyProratedAmountCurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyProratedAmountCurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrencyProratedAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyProratedAmount = (double?) content.GetValueForProperty("BillingCurrencyProratedAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyProratedAmount, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("BillingCurrencyRemainingCommitmentAmountCurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyRemainingCommitmentAmountCurrencyCode = (string) content.GetValueForProperty("BillingCurrencyRemainingCommitmentAmountCurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyRemainingCommitmentAmountCurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrencyRemainingCommitmentAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyRemainingCommitmentAmount = (double?) content.GetValueForProperty("BillingCurrencyRemainingCommitmentAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyRemainingCommitmentAmount, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.SavingsPlansToExchange"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal SavingsPlansToExchange(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Commitment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).Commitment = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ICommitment) content.GetValueForProperty("Commitment",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).Commitment, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.CommitmentTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingRefundAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmount = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice) content.GetValueForProperty("BillingRefundAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmount, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.PriceTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingInformation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformation = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IBillingInformation) content.GetValueForProperty("BillingInformation",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformation, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.BillingInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ReservationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).ReservationId = (string) content.GetValueForProperty("ReservationId",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).ReservationId, global::System.Convert.ToString);
            }
            if (content.Contains("Quantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).Quantity = (int?) content.GetValueForProperty("Quantity",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).Quantity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("BillingPlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingPlan = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan?) content.GetValueForProperty("BillingPlan",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingPlan, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan.CreateFrom);
            }
            if (content.Contains("CommitmentGrain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentGrain = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain?) content.GetValueForProperty("CommitmentGrain",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentGrain, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain.CreateFrom);
            }
            if (content.Contains("CommitmentCurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentCurrencyCode = (string) content.GetValueForProperty("CommitmentCurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentCurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("CommitmentAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentAmount = (double?) content.GetValueForProperty("CommitmentAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).CommitmentAmount, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("BillingRefundAmountCurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmountCurrencyCode = (string) content.GetValueForProperty("BillingRefundAmountCurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmountCurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("BillingRefundAmountAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmountAmount = (double?) content.GetValueForProperty("BillingRefundAmountAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingRefundAmountAmount, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("BillingInformationBillingCurrencyTotalPaidAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyTotalPaidAmount = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice) content.GetValueForProperty("BillingInformationBillingCurrencyTotalPaidAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyTotalPaidAmount, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.PriceTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingInformationBillingCurrencyProratedAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyProratedAmount = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice) content.GetValueForProperty("BillingInformationBillingCurrencyProratedAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyProratedAmount, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.PriceTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingInformationBillingCurrencyRemainingCommitmentAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyRemainingCommitmentAmount = (Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice) content.GetValueForProperty("BillingInformationBillingCurrencyRemainingCommitmentAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingInformationBillingCurrencyRemainingCommitmentAmount, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.PriceTypeConverter.ConvertFrom);
            }
            if (content.Contains("BillingCurrencyTotalPaidAmountCurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyTotalPaidAmountCurrencyCode = (string) content.GetValueForProperty("BillingCurrencyTotalPaidAmountCurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyTotalPaidAmountCurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrencyTotalPaidAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyTotalPaidAmount = (double?) content.GetValueForProperty("BillingCurrencyTotalPaidAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyTotalPaidAmount, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("BillingCurrencyProratedAmountCurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyProratedAmountCurrencyCode = (string) content.GetValueForProperty("BillingCurrencyProratedAmountCurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyProratedAmountCurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrencyProratedAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyProratedAmount = (double?) content.GetValueForProperty("BillingCurrencyProratedAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyProratedAmount, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("BillingCurrencyRemainingCommitmentAmountCurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyRemainingCommitmentAmountCurrencyCode = (string) content.GetValueForProperty("BillingCurrencyRemainingCommitmentAmountCurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyRemainingCommitmentAmountCurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("BillingCurrencyRemainingCommitmentAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyRemainingCommitmentAmount = (double?) content.GetValueForProperty("BillingCurrencyRemainingCommitmentAmount",((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlansToExchangeInternal)this).BillingCurrencyRemainingCommitmentAmount, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// SavingsPlan refund details
    [System.ComponentModel.TypeConverter(typeof(SavingsPlansToExchangeTypeConverter))]
    public partial interface ISavingsPlansToExchange

    {

    }
}