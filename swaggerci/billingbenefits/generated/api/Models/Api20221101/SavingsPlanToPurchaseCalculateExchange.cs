// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Extensions;

    /// <summary>Savings Plan purchase details</summary>
    public partial class SavingsPlanToPurchaseCalculateExchange :
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanToPurchaseCalculateExchange,
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanToPurchaseCalculateExchangeInternal
    {

        /// <summary>Applied scope display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyAppliedScopeDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopePropertyAppliedScopeDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopePropertyAppliedScopeDisplayName = value ?? null; }

        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyManagementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopePropertyManagementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopePropertyManagementGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopePropertyResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopePropertyResourceGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string AppliedScopePropertySubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopePropertySubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopePropertySubscriptionId = value ?? null; }

        /// <summary>Tenant ID where the savings plan should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopePropertyTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopePropertyTenantId = value ?? null; }

        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.AppliedScopeType? AppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopeType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.AppliedScopeType)""); }

        /// <summary>Backing field for <see cref="BillingCurrencyTotal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice _billingCurrencyTotal;

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice BillingCurrencyTotal { get => (this._billingCurrencyTotal = this._billingCurrencyTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.Price()); set => this._billingCurrencyTotal = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public double? BillingCurrencyTotalAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)BillingCurrencyTotal).Amount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)BillingCurrencyTotal).Amount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string BillingCurrencyTotalCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)BillingCurrencyTotal).CurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)BillingCurrencyTotal).CurrencyCode = value ?? null; }

        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly billing plans.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan? BillingPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).BillingPlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).BillingPlan = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan)""); }

        /// <summary>Subscription that will be charged for purchasing SavingsPlan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string BillingScopeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).BillingScopeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).BillingScopeId = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public double? CommitmentAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).CommitmentAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).CommitmentAmount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string CommitmentCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).CommitmentCurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).CommitmentCurrencyCode = value ?? null; }

        /// <summary>Commitment grain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain? CommitmentGrain { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).CommitmentGrain; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).CommitmentGrain = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain)""); }

        /// <summary>Friendly name of the Savings Plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).DisplayName = value ?? null; }

        /// <summary>Internal Acessors for AppliedScopeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IAppliedScopeProperties Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanToPurchaseCalculateExchangeInternal.AppliedScopeProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopeProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).AppliedScopeProperty = value; }

        /// <summary>Internal Acessors for BillingCurrencyTotal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanToPurchaseCalculateExchangeInternal.BillingCurrencyTotal { get => (this._billingCurrencyTotal = this._billingCurrencyTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.Price()); set { {_billingCurrencyTotal = value;} } }

        /// <summary>Internal Acessors for Commitment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ICommitment Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanToPurchaseCalculateExchangeInternal.Commitment { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).Commitment; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).Commitment = value; }

        /// <summary>Internal Acessors for PricingCurrencyTotal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanToPurchaseCalculateExchangeInternal.PricingCurrencyTotal { get => (this._pricingCurrencyTotal = this._pricingCurrencyTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.Price()); set { {_pricingCurrencyTotal = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequest Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanToPurchaseCalculateExchangeInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.SavingsPlanPurchaseRequest()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SavingsPlanPurchaseRequestProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestProperties Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanToPurchaseCalculateExchangeInternal.SavingsPlanPurchaseRequestProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).Property = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISku Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanToPurchaseCalculateExchangeInternal.Sku { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).Sku = value; }

        /// <summary>Backing field for <see cref="PaymentSchedule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPaymentDetail[] _paymentSchedule;

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPaymentDetail[] PaymentSchedule { get => this._paymentSchedule; set => this._paymentSchedule = value; }

        /// <summary>Backing field for <see cref="PricingCurrencyTotal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice _pricingCurrencyTotal;

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice PricingCurrencyTotal { get => (this._pricingCurrencyTotal = this._pricingCurrencyTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.Price()); set => this._pricingCurrencyTotal = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public double? PricingCurrencyTotalAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)PricingCurrencyTotal).Amount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)PricingCurrencyTotal).Amount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string PricingCurrencyTotalCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)PricingCurrencyTotal).CurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPriceInternal)PricingCurrencyTotal).CurrencyCode = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequest _property;

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequest Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.SavingsPlanPurchaseRequest()); set => this._property = value; }

        /// <summary>Quantity to purchase. Must be greater than zero.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public int? Quantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).Quantity = value ?? default(int); }

        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.ReservedResourceType? ReservedResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).ReservedResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).ReservedResourceType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.ReservedResourceType)""); }

        /// <summary>Name of the SKU to be applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).SkuName = value ?? null; }

        /// <summary>Represent SavingsPlan term in ISO 8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.SavingsPlanTerm? Term { get => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).Term; set => ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestInternal)Property).Term = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.SavingsPlanTerm)""); }

        /// <summary>Creates an new <see cref="SavingsPlanToPurchaseCalculateExchange" /> instance.</summary>
        public SavingsPlanToPurchaseCalculateExchange()
        {

        }
    }
    /// Savings Plan purchase details
    public partial interface ISavingsPlanToPurchaseCalculateExchange :
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.IJsonSerializable
    {
        /// <summary>Applied scope display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Applied scope display name",
        SerializedName = @"appliedScopeDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyAppliedScopeDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully-qualified identifier of the management group where the benefit must be applied.",
        SerializedName = @"managementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully-qualified identifier of the resource group.",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully-qualified identifier of the subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertySubscriptionId { get; set; }
        /// <summary>Tenant ID where the savings plan should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant ID where the savings plan should apply benefit.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyTenantId { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the Applied Scope.",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.AppliedScopeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.AppliedScopeType? AppliedScopeType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? BillingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string BillingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly billing plans.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the billing plan in ISO 8601 format. Required only for monthly billing plans.",
        SerializedName = @"billingPlan",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan) })]
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan? BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing SavingsPlan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription that will be charged for purchasing SavingsPlan",
        SerializedName = @"billingScopeId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingScopeId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? CommitmentAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string CommitmentCurrencyCode { get; set; }
        /// <summary>Commitment grain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Commitment grain.",
        SerializedName = @"grain",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain) })]
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain? CommitmentGrain { get; set; }
        /// <summary>Friendly name of the Savings Plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly name of the Savings Plan",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"paymentSchedule",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPaymentDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPaymentDetail[] PaymentSchedule { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? PricingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string PricingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>Quantity to purchase. Must be greater than zero.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quantity to purchase. Must be greater than zero.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? Quantity { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the resource that is being reserved.",
        SerializedName = @"reservedResourceType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.ReservedResourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.ReservedResourceType? ReservedResourceType { get; set; }
        /// <summary>Name of the SKU to be applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the SKU to be applied",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>Represent SavingsPlan term in ISO 8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represent SavingsPlan term in ISO 8601 format.",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.SavingsPlanTerm) })]
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.SavingsPlanTerm? Term { get; set; }

    }
    /// Savings Plan purchase details
    internal partial interface ISavingsPlanToPurchaseCalculateExchangeInternal

    {
        /// <summary>Properties specific to applied scope type. Not required if not applicable.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IAppliedScopeProperties AppliedScopeProperty { get; set; }
        /// <summary>Applied scope display name</summary>
        string AppliedScopePropertyAppliedScopeDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        string AppliedScopePropertyManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        string AppliedScopePropertyResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        string AppliedScopePropertySubscriptionId { get; set; }
        /// <summary>Tenant ID where the savings plan should apply benefit.</summary>
        string AppliedScopePropertyTenantId { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.AppliedScopeType? AppliedScopeType { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice BillingCurrencyTotal { get; set; }

        double? BillingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string BillingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>
        /// Represents the billing plan in ISO 8601 format. Required only for monthly billing plans.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.BillingPlan? BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing SavingsPlan</summary>
        string BillingScopeId { get; set; }
        /// <summary>Commitment towards the benefit.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ICommitment Commitment { get; set; }

        double? CommitmentAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string CommitmentCurrencyCode { get; set; }
        /// <summary>Commitment grain.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.CommitmentGrain? CommitmentGrain { get; set; }
        /// <summary>Friendly name of the Savings Plan</summary>
        string DisplayName { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPaymentDetail[] PaymentSchedule { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.IPrice PricingCurrencyTotal { get; set; }

        double? PricingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string PricingCurrencyTotalCurrencyCode { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequest Property { get; set; }
        /// <summary>Quantity to purchase. Must be greater than zero.</summary>
        int? Quantity { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.ReservedResourceType? ReservedResourceType { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISavingsPlanPurchaseRequestProperties SavingsPlanPurchaseRequestProperty { get; set; }
        /// <summary>The SKU to be applied for this resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Models.Api20221101.ISku Sku { get; set; }
        /// <summary>Name of the SKU to be applied</summary>
        string SkuName { get; set; }
        /// <summary>Represent SavingsPlan term in ISO 8601 format.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BenefitsRp.Support.SavingsPlanTerm? Term { get; set; }

    }
}