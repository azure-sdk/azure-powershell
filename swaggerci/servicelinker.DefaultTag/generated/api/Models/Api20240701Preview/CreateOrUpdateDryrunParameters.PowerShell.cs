// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.PowerShell;

    /// <summary>The dryrun parameters for creation or update a linker</summary>
    [System.ComponentModel.TypeConverter(typeof(CreateOrUpdateDryrunParametersTypeConverter))]
    public partial class CreateOrUpdateDryrunParameters
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.CreateOrUpdateDryrunParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CreateOrUpdateDryrunParameters(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("TargetService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).TargetService = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ITargetServiceBase) content.GetValueForProperty("TargetService",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).TargetService, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.TargetServiceBaseTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfo = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IAuthInfoBase) content.GetValueForProperty("AuthInfo",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfo, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.AuthInfoBaseTypeConverter.ConvertFrom);
            }
            if (content.Contains("VNetSolution"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolution = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IVNetSolution) content.GetValueForProperty("VNetSolution",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolution, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.VNetSolutionTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecretStore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStore = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ISecretStore) content.GetValueForProperty("SecretStore",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStore, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.SecretStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("PublicNetworkSolution"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolution = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IPublicNetworkSolution) content.GetValueForProperty("PublicNetworkSolution",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolution, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.PublicNetworkSolutionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfo = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationInfo) content.GetValueForProperty("ConfigurationInfo",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfo, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ConfigurationInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClientType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ClientType = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ClientType?) content.GetValueForProperty("ClientType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ClientType, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ClientType.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).Scope = (string) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).Scope, global::System.Convert.ToString);
            }
            if (content.Contains("ActionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IDryrunParametersInternal)this).ActionName = (string) content.GetValueForProperty("ActionName",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IDryrunParametersInternal)this).ActionName, global::System.Convert.ToString);
            }
            if (content.Contains("TargetServiceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).TargetServiceType = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.TargetServiceType) content.GetValueForProperty("TargetServiceType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).TargetServiceType, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.TargetServiceType.CreateFrom);
            }
            if (content.Contains("AuthInfoAuthType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfoAuthType = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AuthType) content.GetValueForProperty("AuthInfoAuthType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfoAuthType, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AuthType.CreateFrom);
            }
            if (content.Contains("AuthInfoAuthMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfoAuthMode = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AuthMode?) content.GetValueForProperty("AuthInfoAuthMode",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfoAuthMode, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AuthMode.CreateFrom);
            }
            if (content.Contains("VNetSolutionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolutionType = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType?) content.GetValueForProperty("VNetSolutionType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolutionType, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType.CreateFrom);
            }
            if (content.Contains("PublicNetworkSolutionFirewallRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionFirewallRule = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IFirewallRules) content.GetValueForProperty("PublicNetworkSolutionFirewallRule",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionFirewallRule, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.FirewallRulesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoDaprProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoDaprProperty = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IDaprProperties) content.GetValueForProperty("ConfigurationInfoDaprProperty",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoDaprProperty, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.DaprPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoConfigurationStore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoConfigurationStore = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationStore) content.GetValueForProperty("ConfigurationInfoConfigurationStore",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoConfigurationStore, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ConfigurationStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoCustomizedKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoCustomizedKey = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationInfoCustomizedKeys) content.GetValueForProperty("ConfigurationInfoCustomizedKey",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoCustomizedKey, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ConfigurationInfoCustomizedKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoAdditionalConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAdditionalConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationInfoAdditionalConfigurations) content.GetValueForProperty("ConfigurationInfoAdditionalConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAdditionalConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ConfigurationInfoAdditionalConfigurationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VNetSolutionDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolutionDeleteOrUpdateBehavior = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior?) content.GetValueForProperty("VNetSolutionDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolutionDeleteOrUpdateBehavior, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior.CreateFrom);
            }
            if (content.Contains("SecretStoreKeyVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStoreKeyVaultId = (string) content.GetValueForProperty("SecretStoreKeyVaultId",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStoreKeyVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("SecretStoreKeyVaultSecretName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStoreKeyVaultSecretName = (string) content.GetValueForProperty("SecretStoreKeyVaultSecretName",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStoreKeyVaultSecretName, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkSolutionDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionDeleteOrUpdateBehavior = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior?) content.GetValueForProperty("PublicNetworkSolutionDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionDeleteOrUpdateBehavior, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior.CreateFrom);
            }
            if (content.Contains("PublicNetworkSolutionAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionAction = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType?) content.GetValueForProperty("PublicNetworkSolutionAction",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionAction, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType.CreateFrom);
            }
            if (content.Contains("FirewallRuleIPRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleIPRange = (string[]) content.GetValueForProperty("FirewallRuleIPRange",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleIPRange, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ConfigurationInfoDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoDeleteOrUpdateBehavior = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior?) content.GetValueForProperty("ConfigurationInfoDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoDeleteOrUpdateBehavior, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior.CreateFrom);
            }
            if (content.Contains("ConfigurationInfoAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAction = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType?) content.GetValueForProperty("ConfigurationInfoAction",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAction, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType.CreateFrom);
            }
            if (content.Contains("ConfigurationInfoAdditionalConnectionStringProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAdditionalConnectionStringProperty = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationInfoAdditionalConnectionStringProperties) content.GetValueForProperty("ConfigurationInfoAdditionalConnectionStringProperty",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAdditionalConnectionStringProperty, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ConfigurationInfoAdditionalConnectionStringPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("DaprPropertyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyVersion = (string) content.GetValueForProperty("DaprPropertyVersion",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyVersion, global::System.Convert.ToString);
            }
            if (content.Contains("DaprPropertyComponentType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyComponentType = (string) content.GetValueForProperty("DaprPropertyComponentType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyComponentType, global::System.Convert.ToString);
            }
            if (content.Contains("DaprPropertyMetadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyMetadata = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IDaprMetadata[]) content.GetValueForProperty("DaprPropertyMetadata",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyMetadata, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IDaprMetadata>(__y, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.DaprMetadataTypeConverter.ConvertFrom));
            }
            if (content.Contains("DaprPropertyScope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyScope = (string[]) content.GetValueForProperty("DaprPropertyScope",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyScope, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DaprPropertyRuntimeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyRuntimeVersion = (string) content.GetValueForProperty("DaprPropertyRuntimeVersion",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyRuntimeVersion, global::System.Convert.ToString);
            }
            if (content.Contains("FirewallRuleAzureService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleAzureService = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType?) content.GetValueForProperty("FirewallRuleAzureService",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleAzureService, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType.CreateFrom);
            }
            if (content.Contains("FirewallRuleCallerClientIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleCallerClientIP = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType?) content.GetValueForProperty("FirewallRuleCallerClientIP",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleCallerClientIP, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType.CreateFrom);
            }
            if (content.Contains("DaprPropertySecretStoreComponent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertySecretStoreComponent = (string) content.GetValueForProperty("DaprPropertySecretStoreComponent",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertySecretStoreComponent, global::System.Convert.ToString);
            }
            if (content.Contains("DaprPropertyBindingComponentDirection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyBindingComponentDirection = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DaprBindingComponentDirection?) content.GetValueForProperty("DaprPropertyBindingComponentDirection",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyBindingComponentDirection, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DaprBindingComponentDirection.CreateFrom);
            }
            if (content.Contains("ConfigurationStoreAppConfigurationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationStoreAppConfigurationId = (string) content.GetValueForProperty("ConfigurationStoreAppConfigurationId",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationStoreAppConfigurationId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.CreateOrUpdateDryrunParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CreateOrUpdateDryrunParameters(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("TargetService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).TargetService = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ITargetServiceBase) content.GetValueForProperty("TargetService",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).TargetService, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.TargetServiceBaseTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfo = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IAuthInfoBase) content.GetValueForProperty("AuthInfo",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfo, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.AuthInfoBaseTypeConverter.ConvertFrom);
            }
            if (content.Contains("VNetSolution"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolution = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IVNetSolution) content.GetValueForProperty("VNetSolution",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolution, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.VNetSolutionTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecretStore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStore = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ISecretStore) content.GetValueForProperty("SecretStore",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStore, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.SecretStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("PublicNetworkSolution"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolution = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IPublicNetworkSolution) content.GetValueForProperty("PublicNetworkSolution",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolution, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.PublicNetworkSolutionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfo = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationInfo) content.GetValueForProperty("ConfigurationInfo",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfo, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ConfigurationInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClientType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ClientType = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ClientType?) content.GetValueForProperty("ClientType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ClientType, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ClientType.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).Scope = (string) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).Scope, global::System.Convert.ToString);
            }
            if (content.Contains("ActionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IDryrunParametersInternal)this).ActionName = (string) content.GetValueForProperty("ActionName",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IDryrunParametersInternal)this).ActionName, global::System.Convert.ToString);
            }
            if (content.Contains("TargetServiceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).TargetServiceType = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.TargetServiceType) content.GetValueForProperty("TargetServiceType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).TargetServiceType, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.TargetServiceType.CreateFrom);
            }
            if (content.Contains("AuthInfoAuthType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfoAuthType = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AuthType) content.GetValueForProperty("AuthInfoAuthType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfoAuthType, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AuthType.CreateFrom);
            }
            if (content.Contains("AuthInfoAuthMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfoAuthMode = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AuthMode?) content.GetValueForProperty("AuthInfoAuthMode",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).AuthInfoAuthMode, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AuthMode.CreateFrom);
            }
            if (content.Contains("VNetSolutionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolutionType = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType?) content.GetValueForProperty("VNetSolutionType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolutionType, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType.CreateFrom);
            }
            if (content.Contains("PublicNetworkSolutionFirewallRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionFirewallRule = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IFirewallRules) content.GetValueForProperty("PublicNetworkSolutionFirewallRule",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionFirewallRule, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.FirewallRulesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoDaprProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoDaprProperty = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IDaprProperties) content.GetValueForProperty("ConfigurationInfoDaprProperty",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoDaprProperty, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.DaprPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoConfigurationStore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoConfigurationStore = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationStore) content.GetValueForProperty("ConfigurationInfoConfigurationStore",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoConfigurationStore, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ConfigurationStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoCustomizedKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoCustomizedKey = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationInfoCustomizedKeys) content.GetValueForProperty("ConfigurationInfoCustomizedKey",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoCustomizedKey, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ConfigurationInfoCustomizedKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoAdditionalConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAdditionalConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationInfoAdditionalConfigurations) content.GetValueForProperty("ConfigurationInfoAdditionalConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAdditionalConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ConfigurationInfoAdditionalConfigurationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VNetSolutionDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolutionDeleteOrUpdateBehavior = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior?) content.GetValueForProperty("VNetSolutionDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).VNetSolutionDeleteOrUpdateBehavior, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior.CreateFrom);
            }
            if (content.Contains("SecretStoreKeyVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStoreKeyVaultId = (string) content.GetValueForProperty("SecretStoreKeyVaultId",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStoreKeyVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("SecretStoreKeyVaultSecretName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStoreKeyVaultSecretName = (string) content.GetValueForProperty("SecretStoreKeyVaultSecretName",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).SecretStoreKeyVaultSecretName, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkSolutionDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionDeleteOrUpdateBehavior = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior?) content.GetValueForProperty("PublicNetworkSolutionDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionDeleteOrUpdateBehavior, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior.CreateFrom);
            }
            if (content.Contains("PublicNetworkSolutionAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionAction = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType?) content.GetValueForProperty("PublicNetworkSolutionAction",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).PublicNetworkSolutionAction, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType.CreateFrom);
            }
            if (content.Contains("FirewallRuleIPRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleIPRange = (string[]) content.GetValueForProperty("FirewallRuleIPRange",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleIPRange, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ConfigurationInfoDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoDeleteOrUpdateBehavior = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior?) content.GetValueForProperty("ConfigurationInfoDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoDeleteOrUpdateBehavior, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior.CreateFrom);
            }
            if (content.Contains("ConfigurationInfoAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAction = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType?) content.GetValueForProperty("ConfigurationInfoAction",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAction, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType.CreateFrom);
            }
            if (content.Contains("ConfigurationInfoAdditionalConnectionStringProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAdditionalConnectionStringProperty = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationInfoAdditionalConnectionStringProperties) content.GetValueForProperty("ConfigurationInfoAdditionalConnectionStringProperty",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationInfoAdditionalConnectionStringProperty, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ConfigurationInfoAdditionalConnectionStringPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("DaprPropertyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyVersion = (string) content.GetValueForProperty("DaprPropertyVersion",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyVersion, global::System.Convert.ToString);
            }
            if (content.Contains("DaprPropertyComponentType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyComponentType = (string) content.GetValueForProperty("DaprPropertyComponentType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyComponentType, global::System.Convert.ToString);
            }
            if (content.Contains("DaprPropertyMetadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyMetadata = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IDaprMetadata[]) content.GetValueForProperty("DaprPropertyMetadata",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyMetadata, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IDaprMetadata>(__y, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.DaprMetadataTypeConverter.ConvertFrom));
            }
            if (content.Contains("DaprPropertyScope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyScope = (string[]) content.GetValueForProperty("DaprPropertyScope",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyScope, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DaprPropertyRuntimeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyRuntimeVersion = (string) content.GetValueForProperty("DaprPropertyRuntimeVersion",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyRuntimeVersion, global::System.Convert.ToString);
            }
            if (content.Contains("FirewallRuleAzureService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleAzureService = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType?) content.GetValueForProperty("FirewallRuleAzureService",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleAzureService, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType.CreateFrom);
            }
            if (content.Contains("FirewallRuleCallerClientIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleCallerClientIP = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType?) content.GetValueForProperty("FirewallRuleCallerClientIP",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).FirewallRuleCallerClientIP, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType.CreateFrom);
            }
            if (content.Contains("DaprPropertySecretStoreComponent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertySecretStoreComponent = (string) content.GetValueForProperty("DaprPropertySecretStoreComponent",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertySecretStoreComponent, global::System.Convert.ToString);
            }
            if (content.Contains("DaprPropertyBindingComponentDirection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyBindingComponentDirection = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DaprBindingComponentDirection?) content.GetValueForProperty("DaprPropertyBindingComponentDirection",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).DaprPropertyBindingComponentDirection, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DaprBindingComponentDirection.CreateFrom);
            }
            if (content.Contains("ConfigurationStoreAppConfigurationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationStoreAppConfigurationId = (string) content.GetValueForProperty("ConfigurationStoreAppConfigurationId",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParametersInternal)this).ConfigurationStoreAppConfigurationId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.CreateOrUpdateDryrunParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParameters"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParameters DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CreateOrUpdateDryrunParameters(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.CreateOrUpdateDryrunParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParameters"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParameters DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CreateOrUpdateDryrunParameters(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CreateOrUpdateDryrunParameters" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="CreateOrUpdateDryrunParameters" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.ICreateOrUpdateDryrunParameters FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The dryrun parameters for creation or update a linker
    [System.ComponentModel.TypeConverter(typeof(CreateOrUpdateDryrunParametersTypeConverter))]
    public partial interface ICreateOrUpdateDryrunParameters

    {

    }
}