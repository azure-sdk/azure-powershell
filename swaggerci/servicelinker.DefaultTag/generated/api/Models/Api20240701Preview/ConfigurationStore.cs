// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Extensions;

    /// <summary>An option to store configuration into different place</summary>
    public partial class ConfigurationStore :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationStore,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20240701Preview.IConfigurationStoreInternal
    {

        /// <summary>Backing field for <see cref="AppConfigurationId" /> property.</summary>
        private string _appConfigurationId;

        /// <summary>The app configuration id to store configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public string AppConfigurationId { get => this._appConfigurationId; set => this._appConfigurationId = value; }

        /// <summary>Creates an new <see cref="ConfigurationStore" /> instance.</summary>
        public ConfigurationStore()
        {

        }
    }
    /// An option to store configuration into different place
    public partial interface IConfigurationStore :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.IJsonSerializable
    {
        /// <summary>The app configuration id to store configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The app configuration id to store configuration",
        SerializedName = @"appConfigurationId",
        PossibleTypes = new [] { typeof(string) })]
        string AppConfigurationId { get; set; }

    }
    /// An option to store configuration into different place
    internal partial interface IConfigurationStoreInternal

    {
        /// <summary>The app configuration id to store configuration</summary>
        string AppConfigurationId { get; set; }

    }
}