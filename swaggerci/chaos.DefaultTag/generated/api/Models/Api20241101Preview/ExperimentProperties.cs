// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Extensions;

    /// <summary>Model that represents the Experiment properties model.</summary>
    public partial class ExperimentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IExperimentProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IExperimentPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CustomerDataStorage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.ICustomerDataStorageProperties _customerDataStorage;

        /// <summary>
        /// Optional customer-managed Storage account where Experiment schema will be stored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.ICustomerDataStorageProperties CustomerDataStorage { get => (this._customerDataStorage = this._customerDataStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.CustomerDataStorageProperties()); set => this._customerDataStorage = value; }

        /// <summary>ARM Resource ID of the Storage account to use for Customer Data storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string CustomerDataStorageAccountResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.ICustomerDataStoragePropertiesInternal)CustomerDataStorage).StorageAccountResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.ICustomerDataStoragePropertiesInternal)CustomerDataStorage).StorageAccountResourceId = value ?? null; }

        /// <summary>Name of the Azure Blob Storage container to use or create.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string CustomerDataStorageBlobContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.ICustomerDataStoragePropertiesInternal)CustomerDataStorage).BlobContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.ICustomerDataStoragePropertiesInternal)CustomerDataStorage).BlobContainerName = value ?? null; }

        /// <summary>Internal Acessors for CustomerDataStorage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.ICustomerDataStorageProperties Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IExperimentPropertiesInternal.CustomerDataStorage { get => (this._customerDataStorage = this._customerDataStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.CustomerDataStorageProperties()); set { {_customerDataStorage = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IExperimentPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Chaos.Support.ProvisioningState? _provisioningState;

        /// <summary>Most recent provisioning state for the given experiment resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Chaos.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Selector" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IChaosTargetSelector[] _selector;

        /// <summary>List of selectors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IChaosTargetSelector[] Selector { get => this._selector; set => this._selector = value; }

        /// <summary>Backing field for <see cref="Step" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IChaosExperimentStep[] _step;

        /// <summary>List of steps.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IChaosExperimentStep[] Step { get => this._step; set => this._step = value; }

        /// <summary>Creates an new <see cref="ExperimentProperties" /> instance.</summary>
        public ExperimentProperties()
        {

        }
    }
    /// Model that represents the Experiment properties model.
    public partial interface IExperimentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.IJsonSerializable
    {
        /// <summary>ARM Resource ID of the Storage account to use for Customer Data storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ARM Resource ID of the Storage account to use for Customer Data storage.",
        SerializedName = @"storageAccountResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerDataStorageAccountResourceId { get; set; }
        /// <summary>Name of the Azure Blob Storage container to use or create.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the Azure Blob Storage container to use or create.",
        SerializedName = @"blobContainerName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerDataStorageBlobContainerName { get; set; }
        /// <summary>Most recent provisioning state for the given experiment resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Most recent provisioning state for the given experiment resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Chaos.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>List of selectors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"List of selectors.",
        SerializedName = @"selectors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IChaosTargetSelector) })]
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IChaosTargetSelector[] Selector { get; set; }
        /// <summary>List of steps.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"List of steps.",
        SerializedName = @"steps",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IChaosExperimentStep) })]
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IChaosExperimentStep[] Step { get; set; }

    }
    /// Model that represents the Experiment properties model.
    internal partial interface IExperimentPropertiesInternal

    {
        /// <summary>
        /// Optional customer-managed Storage account where Experiment schema will be stored.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.ICustomerDataStorageProperties CustomerDataStorage { get; set; }
        /// <summary>ARM Resource ID of the Storage account to use for Customer Data storage.</summary>
        string CustomerDataStorageAccountResourceId { get; set; }
        /// <summary>Name of the Azure Blob Storage container to use or create.</summary>
        string CustomerDataStorageBlobContainerName { get; set; }
        /// <summary>Most recent provisioning state for the given experiment resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>List of selectors.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IChaosTargetSelector[] Selector { get; set; }
        /// <summary>List of steps.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20241101Preview.IChaosExperimentStep[] Step { get; set; }

    }
}