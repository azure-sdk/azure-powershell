// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240315Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Extensions;

    /// <summary>Server information of the environment.</summary>
    public partial class EnvironmentServer :
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240315Preview.IEnvironmentServer,
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240315Preview.IEnvironmentServerInternal
    {

        /// <summary>Backing field for <see cref="ManagementPortalUri" /> property.</summary>
        private string[] _managementPortalUri;

        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Owned)]
        public string[] ManagementPortalUri { get => this._managementPortalUri; set => this._managementPortalUri = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.EnvironmentServerType? _type;

        /// <summary>Type of the server that represents the environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.EnvironmentServerType? Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="EnvironmentServer" /> instance.</summary>
        public EnvironmentServer()
        {

        }
    }
    /// Server information of the environment.
    public partial interface IEnvironmentServer :
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"managementPortalUri",
        PossibleTypes = new [] { typeof(string) })]
        string[] ManagementPortalUri { get; set; }
        /// <summary>Type of the server that represents the environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the server that represents the environment.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.EnvironmentServerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.EnvironmentServerType? Type { get; set; }

    }
    /// Server information of the environment.
    internal partial interface IEnvironmentServerInternal

    {
        string[] ManagementPortalUri { get; set; }
        /// <summary>Type of the server that represents the environment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.EnvironmentServerType? Type { get; set; }

    }
}