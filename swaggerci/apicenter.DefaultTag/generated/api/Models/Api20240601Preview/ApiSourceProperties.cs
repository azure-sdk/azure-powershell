// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Extensions;

    /// <summary>API source properties.</summary>
    public partial class ApiSourceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApiSourceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApiSourcePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApimSource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSource _apimSource;

        /// <summary>API source configuration for Azure API Management.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSource ApimSource { get => (this._apimSource = this._apimSource ?? new Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.ApimSource()); set => this._apimSource = value; }

        /// <summary>
        /// The resource ID of the managed identity that has access to the API Management instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public string ApimSourceMsiResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).MsiResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).MsiResourceId = value ?? null; }

        /// <summary>API Management service resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public string ApimSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).ResourceId = value ?? null; }

        /// <summary>The target environment resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public string ApimSourceTargetEnvironmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).TargetEnvironmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).TargetEnvironmentId = value ?? null; }

        /// <summary>The target lifecycle stage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.LifecycleStage? ApimSourceTargetLifecycleStage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).TargetLifecycleStage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).TargetLifecycleStage = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.LifecycleStage)""); }

        /// <summary>The state of the link.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public string LinkState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).LinkStateState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).LinkStateState = value ?? null; }

        /// <summary>The timestamp of the last update of the link state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public global::System.DateTime? LinkStateLastUpdatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).LinkStateLastUpdatedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).LinkStateLastUpdatedOn = value ?? default(global::System.DateTime); }

        /// <summary>The state message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public string LinkStateMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).LinkStateMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).LinkStateMessage = value ?? null; }

        /// <summary>Internal Acessors for ApimSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSource Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApiSourcePropertiesInternal.ApimSource { get => (this._apimSource = this._apimSource ?? new Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.ApimSource()); set { {_apimSource = value;} } }

        /// <summary>Internal Acessors for ApimSourceLinkState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.ILinkState Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApiSourcePropertiesInternal.ApimSourceLinkState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).LinkState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSourceInternal)ApimSource).LinkState = value; }

        /// <summary>Backing field for <see cref="ShouldImportSpec" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.ShouldImportSpec? _shouldImportSpec;

        /// <summary>Indicates if the specification should be imported along with metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.ShouldImportSpec? ShouldImportSpec { get => this._shouldImportSpec; set => this._shouldImportSpec = value; }

        /// <summary>Creates an new <see cref="ApiSourceProperties" /> instance.</summary>
        public ApiSourceProperties()
        {

        }
    }
    /// API source properties.
    public partial interface IApiSourceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The resource ID of the managed identity that has access to the API Management instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the managed identity that has access to the API Management instance.",
        SerializedName = @"msiResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ApimSourceMsiResourceId { get; set; }
        /// <summary>API Management service resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API Management service resource ID.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ApimSourceResourceId { get; set; }
        /// <summary>The target environment resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target environment resource ID.",
        SerializedName = @"targetEnvironmentId",
        PossibleTypes = new [] { typeof(string) })]
        string ApimSourceTargetEnvironmentId { get; set; }
        /// <summary>The target lifecycle stage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target lifecycle stage.",
        SerializedName = @"targetLifecycleStage",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.LifecycleStage) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.LifecycleStage? ApimSourceTargetLifecycleStage { get; set; }
        /// <summary>The state of the link.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of the link.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string LinkState { get; set; }
        /// <summary>The timestamp of the last update of the link state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of the last update of the link state.",
        SerializedName = @"lastUpdatedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LinkStateLastUpdatedOn { get; set; }
        /// <summary>The state message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string LinkStateMessage { get; set; }
        /// <summary>Indicates if the specification should be imported along with metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if the specification should be imported along with metadata.",
        SerializedName = @"shouldImportSpec",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.ShouldImportSpec) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.ShouldImportSpec? ShouldImportSpec { get; set; }

    }
    /// API source properties.
    internal partial interface IApiSourcePropertiesInternal

    {
        /// <summary>API source configuration for Azure API Management.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.IApimSource ApimSource { get; set; }
        /// <summary>The state of the API source link</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20240601Preview.ILinkState ApimSourceLinkState { get; set; }
        /// <summary>
        /// The resource ID of the managed identity that has access to the API Management instance.
        /// </summary>
        string ApimSourceMsiResourceId { get; set; }
        /// <summary>API Management service resource ID.</summary>
        string ApimSourceResourceId { get; set; }
        /// <summary>The target environment resource ID.</summary>
        string ApimSourceTargetEnvironmentId { get; set; }
        /// <summary>The target lifecycle stage.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.LifecycleStage? ApimSourceTargetLifecycleStage { get; set; }
        /// <summary>The state of the link.</summary>
        string LinkState { get; set; }
        /// <summary>The timestamp of the last update of the link state.</summary>
        global::System.DateTime? LinkStateLastUpdatedOn { get; set; }
        /// <summary>The state message.</summary>
        string LinkStateMessage { get; set; }
        /// <summary>Indicates if the specification should be imported along with metadata.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.ShouldImportSpec? ShouldImportSpec { get; set; }

    }
}