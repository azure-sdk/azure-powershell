// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Extensions;

    /// <summary>API analyzer configuration.</summary>
    public partial class AnalyzerConfig :
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfig,
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.Resource();

        /// <summary>The type of API analyzer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public string AnalyzerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).AnalyzerType; }

        /// <summary>The description of the analyzer configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).Description = value ?? null; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>API filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApi { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).FilterApi; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).FilterApi = value ?? null /* arrayOf */; }

        /// <summary>Api definition filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiDefinition { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).FilterApiDefinition; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).FilterApiDefinition = value ?? null /* arrayOf */; }

        /// <summary>APi version filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).FilterApiVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).FilterApiVersion = value ?? null /* arrayOf */; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for AnalyzerType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigInternal.AnalyzerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).AnalyzerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).AnalyzerType = value; }

        /// <summary>Internal Acessors for Filter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilter Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigInternal.Filter { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).Filter; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).Filter = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigProperties Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.AnalyzerConfigProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.AnalyzerRulesetState? Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).State = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.AnalyzerConfigProperties()); set => this._property = value; }

        /// <summary>The state of the API analyzer ruleset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.AnalyzerRulesetState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).State; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.CreatedByType)""); }

        /// <summary>The title of the analyzer configuration, e.g. "Spectral (OpenAPI)".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public string Title { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).Title; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal)Property).Title = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="AnalyzerConfig" /> instance.</summary>
        public AnalyzerConfig()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("ETag", out var __eTagHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigInternal)this).ETag = System.Linq.Enumerable.FirstOrDefault(__eTagHeader0) is string __headerETagHeader0 ? __headerETagHeader0 : (string)null;
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// API analyzer configuration.
    public partial interface IAnalyzerConfig :
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResource
    {
        /// <summary>The type of API analyzer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of API analyzer.",
        SerializedName = @"analyzerType",
        PossibleTypes = new [] { typeof(string) })]
        string AnalyzerType { get;  }
        /// <summary>The description of the analyzer configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the analyzer configuration.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"ETag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>API filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API filter conditions.",
        SerializedName = @"apis",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApi { get; set; }
        /// <summary>Api definition filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Api definition filter conditions.",
        SerializedName = @"apiDefinitions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiDefinition { get; set; }
        /// <summary>APi version filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"APi version filter conditions.",
        SerializedName = @"apiVersions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiVersion { get; set; }
        /// <summary>The state of the API analyzer ruleset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of the API analyzer ruleset.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.AnalyzerRulesetState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.AnalyzerRulesetState? State { get;  }
        /// <summary>The title of the analyzer configuration, e.g. "Spectral (OpenAPI)".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The title of the analyzer configuration, e.g. ""Spectral (OpenAPI)"".",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get; set; }

    }
    /// API analyzer configuration.
    internal partial interface IAnalyzerConfigInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api50.IResourceInternal
    {
        /// <summary>The type of API analyzer.</summary>
        string AnalyzerType { get; set; }
        /// <summary>The description of the analyzer configuration.</summary>
        string Description { get; set; }

        string ETag { get; set; }
        /// <summary>The API analyzer filter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilter Filter { get; set; }
        /// <summary>API filter conditions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApi { get; set; }
        /// <summary>Api definition filter conditions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiDefinition { get; set; }
        /// <summary>APi version filter conditions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiVersion { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigProperties Property { get; set; }
        /// <summary>The state of the API analyzer ruleset.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.AnalyzerRulesetState? State { get; set; }
        /// <summary>The title of the analyzer configuration, e.g. "Spectral (OpenAPI)".</summary>
        string Title { get; set; }

    }
}