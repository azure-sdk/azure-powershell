// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Extensions;

    /// <summary>API analyzer configuration properties.</summary>
    public partial class AnalyzerConfigProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AnalyzerType" /> property.</summary>
        private string _analyzerType= @"spectral";

        /// <summary>The type of API analyzer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Owned)]
        public string AnalyzerType { get => this._analyzerType; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The description of the analyzer configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="Filter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilter _filter;

        /// <summary>The API analyzer filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilter Filter { get => (this._filter = this._filter ?? new Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.AnalyzerFilter()); set => this._filter = value; }

        /// <summary>API filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApi { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilterInternal)Filter).Api; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilterInternal)Filter).Api = value ?? null /* arrayOf */; }

        /// <summary>Api definition filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiDefinition { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilterInternal)Filter).ApiDefinition; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilterInternal)Filter).ApiDefinition = value ?? null /* arrayOf */; }

        /// <summary>APi version filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilterInternal)Filter).ApiVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilterInternal)Filter).ApiVersion = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for AnalyzerType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal.AnalyzerType { get => this._analyzerType; set { {_analyzerType = value;} } }

        /// <summary>Internal Acessors for Filter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilter Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal.Filter { get => (this._filter = this._filter ?? new Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.AnalyzerFilter()); set { {_filter = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.AnalyzerRulesetState? Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerConfigPropertiesInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.AnalyzerRulesetState? _state;

        /// <summary>The state of the API analyzer ruleset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.AnalyzerRulesetState? State { get => this._state; }

        /// <summary>Backing field for <see cref="Title" /> property.</summary>
        private string _title;

        /// <summary>The title of the analyzer configuration, e.g. "Spectral (OpenAPI)".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.PropertyOrigin.Owned)]
        public string Title { get => this._title; set => this._title = value; }

        /// <summary>Creates an new <see cref="AnalyzerConfigProperties" /> instance.</summary>
        public AnalyzerConfigProperties()
        {

        }
    }
    /// API analyzer configuration properties.
    public partial interface IAnalyzerConfigProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.IJsonSerializable
    {
        /// <summary>The type of API analyzer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Description = @"The type of API analyzer.",
        SerializedName = @"analyzerType",
        PossibleTypes = new [] { typeof(string) })]
        string AnalyzerType { get;  }
        /// <summary>The description of the analyzer configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the analyzer configuration.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>API filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API filter conditions.",
        SerializedName = @"apis",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApi { get; set; }
        /// <summary>Api definition filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Api definition filter conditions.",
        SerializedName = @"apiDefinitions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiDefinition { get; set; }
        /// <summary>APi version filter conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"APi version filter conditions.",
        SerializedName = @"apiVersions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiVersion { get; set; }
        /// <summary>The state of the API analyzer ruleset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of the API analyzer ruleset.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.AnalyzerRulesetState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.AnalyzerRulesetState? State { get;  }
        /// <summary>The title of the analyzer configuration, e.g. "Spectral (OpenAPI)".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The title of the analyzer configuration, e.g. ""Spectral (OpenAPI)"".",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get; set; }

    }
    /// API analyzer configuration properties.
    internal partial interface IAnalyzerConfigPropertiesInternal

    {
        /// <summary>The type of API analyzer.</summary>
        string AnalyzerType { get; set; }
        /// <summary>The description of the analyzer configuration.</summary>
        string Description { get; set; }
        /// <summary>The API analyzer filter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.Api20241215Preview.IAnalyzerFilter Filter { get; set; }
        /// <summary>API filter conditions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApi { get; set; }
        /// <summary>Api definition filter conditions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiDefinition { get; set; }
        /// <summary>APi version filter conditions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Models.IAny[] FilterApiVersion { get; set; }
        /// <summary>The state of the API analyzer ruleset.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ApiCenter.Support.AnalyzerRulesetState? State { get; set; }
        /// <summary>The title of the analyzer configuration, e.g. "Spectral (OpenAPI)".</summary>
        string Title { get; set; }

    }
}