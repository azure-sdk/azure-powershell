// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Cmdlets
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;
    using System;

    /// <summary>
    /// Create a SqsQueue. Please note that end user resource creation is currently restricted, but it will be enabled in the
    /// future.
    /// </summary>
    /// <remarks>
    /// [OpenAPI] CreateOrReplace=>PUT:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/sqsQueues/{name}"
    /// </remarks>
    [global::System.Management.Automation.Cmdlet(global::System.Management.Automation.VerbsCommon.New, @"AzAwsConnectorSqQueue_CreateExpanded", SupportsShouldProcess = true)]
    [global::System.Management.Automation.OutputType(typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISqsQueue))]
    [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Description(@"Create a SqsQueue. Please note that end user resource creation is currently restricted, but it will be enabled in the future.")]
    [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Generated]
    [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.HttpPath(Path = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AwsConnector/sqsQueues/{name}", ApiVersion = "2024-12-01")]
    public partial class NewAzAwsConnectorSqQueue_CreateExpanded : global::System.Management.Automation.PSCmdlet,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener
    {
        /// <summary>A unique id generatd for the this cmdlet when it is instantiated.</summary>
        private string __correlationId = System.Guid.NewGuid().ToString();

        /// <summary>A copy of the Invocation Info (necessary to allow asJob to clone this cmdlet)</summary>
        private global::System.Management.Automation.InvocationInfo __invocationInfo;

        /// <summary>A unique id generatd for the this cmdlet when ProcessRecord() is called.</summary>
        private string __processRecordId;

        /// <summary>
        /// The <see cref="global::System.Threading.CancellationTokenSource" /> for this operation.
        /// </summary>
        private global::System.Threading.CancellationTokenSource _cancellationTokenSource = new global::System.Threading.CancellationTokenSource();

        /// <summary>A Microsoft.AwsConnector resource</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISqsQueue _resourceBody = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SqsQueue();

        /// <summary>Amazon Resource Name (ARN)</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Amazon Resource Name (ARN)")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        public string Arn { get => _resourceBody.Arn ?? null; set => _resourceBody.Arn = value; }

        /// <summary>when specified, runs this cmdlet as a PowerShell job</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Run the command as a job")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Runtime)]
        public global::System.Management.Automation.SwitchParameter AsJob { get; set; }

        /// <summary>Property arn</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Property arn")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property arn",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        public string AwPropertyArn { get => _resourceBody.AwPropertyArn ?? null; set => _resourceBody.AwPropertyArn = value; }

        /// <summary>
        /// For first-in-first-out (FIFO) queues, specifies whether to enable content-based deduplication. During the deduplication
        /// interval, SQS treats messages that are sent with identical content as duplicates and delivers only one copy of the message.
        /// For more information, see the ``ContentBasedDeduplication`` attribute for the ``CreateQueue`` action in the *API Reference*.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "For first-in-first-out (FIFO) queues, specifies whether to enable content-based deduplication. During the deduplication interval, SQS treats messages that are sent with identical content as duplicates and delivers only one copy of the message. For more information, see the ``ContentBasedDeduplication`` attribute for the ``CreateQueue`` action in the *API Reference*.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For first-in-first-out (FIFO) queues, specifies whether to enable content-based deduplication. During the deduplication interval, SQS treats messages that are sent with identical content as duplicates and delivers only one copy of the message. For more information, see the ``ContentBasedDeduplication`` attribute for the ``CreateQueue`` action in the *API Reference*.",
        SerializedName = @"contentBasedDeduplication",
        PossibleTypes = new [] { typeof(global::System.Management.Automation.SwitchParameter) })]
        public global::System.Management.Automation.SwitchParameter AwPropertyContentBasedDeduplication { get => _resourceBody.AwPropertyContentBasedDeduplication ?? default(global::System.Management.Automation.SwitchParameter); set => _resourceBody.AwPropertyContentBasedDeduplication = value; }

        /// <summary>
        /// For high throughput for FIFO queues, specifies whether message deduplication occurs at the message group or queue level.
        /// Valid values are ``messageGroup`` and ``queue``. To enable high throughput for a FIFO queue, set this attribute to ``messageGroup``
        /// *and* set the ``FifoThroughputLimit`` attribute to ``perMessageGroupId``. If you set these attributes to anything other
        /// than these values, normal throughput is in effect and deduplication occurs as specified. For more information, see [High
        /// throughput for FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html)
        /// and [Quotas related to messages](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html)
        /// in the *Developer Guide*.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "For high throughput for FIFO queues, specifies whether message deduplication occurs at the message group or queue level. Valid values are ``messageGroup`` and ``queue``. To enable high throughput for a FIFO queue, set this attribute to ``messageGroup`` *and* set the ``FifoThroughputLimit`` attribute to ``perMessageGroupId``. If you set these attributes to anything other than these values, normal throughput is in effect and deduplication occurs as specified. For more information, see [High throughput for FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html) and [Quotas related to messages](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html) in the *Developer Guide*.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For high throughput for FIFO queues, specifies whether message deduplication occurs at the message group or queue level. Valid values are ``messageGroup`` and ``queue``. To enable high throughput for a FIFO queue, set this attribute to ``messageGroup`` *and* set the ``FifoThroughputLimit`` attribute to ``perMessageGroupId``. If you set these attributes to anything other than these values, normal throughput is in effect and deduplication occurs as specified. For more information, see [High throughput for FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html) and [Quotas related to messages](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html) in the *Developer Guide*.",
        SerializedName = @"deduplicationScope",
        PossibleTypes = new [] { typeof(string) })]
        public string AwPropertyDeduplicationScope { get => _resourceBody.AwPropertyDeduplicationScope ?? null; set => _resourceBody.AwPropertyDeduplicationScope = value; }

        /// <summary>
        /// The time in seconds for which the delivery of all messages in the queue is delayed. You can specify an integer value of
        /// ``0`` to ``900`` (15 minutes). The default value is ``0``.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The time in seconds for which the delivery of all messages in the queue is delayed. You can specify an integer value of ``0`` to ``900`` (15 minutes). The default value is ``0``.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in seconds for which the delivery of all messages in the queue is delayed. You can specify an integer value of ``0`` to ``900`` (15 minutes). The default value is ``0``.",
        SerializedName = @"delaySeconds",
        PossibleTypes = new [] { typeof(int) })]
        public int AwPropertyDelaySecond { get => _resourceBody.AwPropertyDelaySecond ?? default(int); set => _resourceBody.AwPropertyDelaySecond = value; }

        /// <summary>
        /// If set to true, creates a FIFO queue. If you don't specify this property, SQS creates a standard queue. For more information,
        /// see [FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html) in the
        /// *Developer Guide*.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "If set to true, creates a FIFO queue. If you don't specify this property, SQS creates a standard queue. For more information, see [FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html) in the *Developer Guide*.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If set to true, creates a FIFO queue. If you don't specify this property, SQS creates a standard queue. For more information, see [FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html) in the *Developer Guide*.",
        SerializedName = @"fifoQueue",
        PossibleTypes = new [] { typeof(global::System.Management.Automation.SwitchParameter) })]
        public global::System.Management.Automation.SwitchParameter AwPropertyFifoQueue { get => _resourceBody.AwPropertyFifoQueue ?? default(global::System.Management.Automation.SwitchParameter); set => _resourceBody.AwPropertyFifoQueue = value; }

        /// <summary>
        /// For high throughput for FIFO queues, specifies whether the FIFO queue throughput quota applies to the entire queue or
        /// per message group. Valid values are ``perQueue`` and ``perMessageGroupId``. To enable high throughput for a FIFO queue,
        /// set this attribute to ``perMessageGroupId`` *and* set the ``DeduplicationScope`` attribute to ``messageGroup``. If you
        /// set these attributes to anything other than these values, normal throughput is in effect and deduplication occurs as specified.
        /// For more information, see [High throughput for FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html)
        /// and [Quotas related to messages](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html)
        /// in the *Developer Guide*.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "For high throughput for FIFO queues, specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are ``perQueue`` and ``perMessageGroupId``. To enable high throughput for a FIFO queue, set this attribute to ``perMessageGroupId`` *and* set the ``DeduplicationScope`` attribute to ``messageGroup``. If you set these attributes to anything other than these values, normal throughput is in effect and deduplication occurs as specified. For more information, see [High throughput for FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html) and [Quotas related to messages](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html) in the *Developer Guide*.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For high throughput for FIFO queues, specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are ``perQueue`` and ``perMessageGroupId``. To enable high throughput for a FIFO queue, set this attribute to ``perMessageGroupId`` *and* set the ``DeduplicationScope`` attribute to ``messageGroup``. If you set these attributes to anything other than these values, normal throughput is in effect and deduplication occurs as specified. For more information, see [High throughput for FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html) and [Quotas related to messages](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html) in the *Developer Guide*.",
        SerializedName = @"fifoThroughputLimit",
        PossibleTypes = new [] { typeof(string) })]
        public string AwPropertyFifoThroughputLimit { get => _resourceBody.AwPropertyFifoThroughputLimit ?? null; set => _resourceBody.AwPropertyFifoThroughputLimit = value; }

        /// <summary>
        /// The length of time in seconds for which SQS can reuse a data key to encrypt or decrypt messages before calling KMS again.
        /// The value must be an integer between 60 (1 minute) and 86,400 (24 hours). The default is 300 (5 minutes). A shorter time
        /// period provides better security, but results in more calls to KMS, which might incur charges after Free Tier. For more
        /// information, see [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-how-does-the-data-key-reuse-period-work)
        /// in the *Developer Guide*.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The length of time in seconds for which SQS can reuse a data key to encrypt or decrypt messages before calling KMS again. The value must be an integer between 60 (1 minute) and 86,400 (24 hours). The default is 300 (5 minutes). A shorter time period provides better security, but results in more calls to KMS, which might incur charges after Free Tier. For more information, see [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-how-does-the-data-key-reuse-period-work) in the *Developer Guide*.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The length of time in seconds for which SQS can reuse a data key to encrypt or decrypt messages before calling KMS again. The value must be an integer between 60 (1 minute) and 86,400 (24 hours). The default is 300 (5 minutes). A shorter time period provides better security, but results in more calls to KMS, which might incur charges after Free Tier. For more information, see [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-how-does-the-data-key-reuse-period-work) in the *Developer Guide*.",
        SerializedName = @"kmsDataKeyReusePeriodSeconds",
        PossibleTypes = new [] { typeof(int) })]
        public int AwPropertyKmsDataKeyReusePeriodSecond { get => _resourceBody.AwPropertyKmsDataKeyReusePeriodSecond ?? default(int); set => _resourceBody.AwPropertyKmsDataKeyReusePeriodSecond = value; }

        /// <summary>
        /// The ID of an AWS Key Management Service (KMS) for SQS, or a custom KMS. To use the AWS managed KMS for SQS, specify a
        /// (default) alias ARN, alias name (e.g. ``alias/aws/sqs``), key ARN, or key ID. For more information, see the following:
        /// + [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html)
        /// in the *Developer Guide* + [CreateQueue](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_CreateQueue.html)
        /// in the *API Reference* + [Request Parameters](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters)
        /// in the *Key Management Service API Reference* + The Key Management Service (KMS) section of the [Best Practices](https://docs.aws.amazon.com/https://d0.awsstatic.com/whitepapers/aws-kms-best-practices.pdf)
        /// whitepaper
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The ID of an AWS Key Management Service (KMS) for SQS, or a custom KMS. To use the AWS managed KMS for SQS, specify a (default) alias ARN, alias name (e.g. ``alias/aws/sqs``), key ARN, or key ID. For more information, see the following: + [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html) in the *Developer Guide* + [CreateQueue](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_CreateQueue.html) in the *API Reference* + [Request Parameters](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the *Key Management Service API Reference* + The Key Management Service (KMS) section of the [Best Practices](https://docs.aws.amazon.com/https://d0.awsstatic.com/whitepapers/aws-kms-best-practices.pdf) whitepaper")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of an AWS Key Management Service (KMS) for SQS, or a custom KMS. To use the AWS managed KMS for SQS, specify a (default) alias ARN, alias name (e.g. ``alias/aws/sqs``), key ARN, or key ID. For more information, see the following: + [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html) in the *Developer Guide* + [CreateQueue](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_CreateQueue.html) in the *API Reference* + [Request Parameters](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the *Key Management Service API Reference* + The Key Management Service (KMS) section of the [Best Practices](https://docs.aws.amazon.com/https://d0.awsstatic.com/whitepapers/aws-kms-best-practices.pdf) whitepaper",
        SerializedName = @"kmsMasterKeyId",
        PossibleTypes = new [] { typeof(string) })]
        public string AwPropertyKmsMasterKeyId { get => _resourceBody.AwPropertyKmsMasterKeyId ?? null; set => _resourceBody.AwPropertyKmsMasterKeyId = value; }

        /// <summary>
        /// The limit of how many bytes that a message can contain before SQS rejects it. You can specify an integer value from ``1,024``
        /// bytes (1 KiB) to ``262,144`` bytes (256 KiB). The default value is ``262,144`` (256 KiB).
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The limit of how many bytes that a message can contain before SQS rejects it. You can specify an integer value from ``1,024`` bytes (1 KiB) to ``262,144`` bytes (256 KiB). The default value is ``262,144`` (256 KiB).")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The limit of how many bytes that a message can contain before SQS rejects it. You can specify an integer value from ``1,024`` bytes (1 KiB) to ``262,144`` bytes (256 KiB). The default value is ``262,144`` (256 KiB).",
        SerializedName = @"maximumMessageSize",
        PossibleTypes = new [] { typeof(int) })]
        public int AwPropertyMaximumMessageSize { get => _resourceBody.AwPropertyMaximumMessageSize ?? default(int); set => _resourceBody.AwPropertyMaximumMessageSize = value; }

        /// <summary>
        /// The number of seconds that SQS retains a message. You can specify an integer value from ``60`` seconds (1 minute) to ``1,209,600``
        /// seconds (14 days). The default value is ``345,600`` seconds (4 days).
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The number of seconds that SQS retains a message. You can specify an integer value from ``60`` seconds (1 minute) to ``1,209,600`` seconds (14 days). The default value is ``345,600`` seconds (4 days).")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of seconds that SQS retains a message. You can specify an integer value from ``60`` seconds (1 minute) to ``1,209,600`` seconds (14 days). The default value is ``345,600`` seconds (4 days).",
        SerializedName = @"messageRetentionPeriod",
        PossibleTypes = new [] { typeof(int) })]
        public int AwPropertyMessageRetentionPeriod { get => _resourceBody.AwPropertyMessageRetentionPeriod ?? default(int); set => _resourceBody.AwPropertyMessageRetentionPeriod = value; }

        /// <summary>
        /// A name for the queue. To create a FIFO queue, the name of your FIFO queue must end with the ``.fifo`` suffix. For more
        /// information, see [FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html)
        /// in the *Developer Guide*. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the queue
        /// name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html)
        /// in the *User Guide*. If you specify a name, you can't perform updates that require replacement of this resource. You can
        /// perform updates that require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "A name for the queue. To create a FIFO queue, the name of your FIFO queue must end with the ``.fifo`` suffix. For more information, see [FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html) in the *Developer Guide*. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the queue name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) in the *User Guide*. If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A name for the queue. To create a FIFO queue, the name of your FIFO queue must end with the ``.fifo`` suffix. For more information, see [FIFO queues](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html) in the *Developer Guide*. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the queue name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) in the *User Guide*. If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
        SerializedName = @"queueName",
        PossibleTypes = new [] { typeof(string) })]
        public string AwPropertyQueueName { get => _resourceBody.AwPropertyQueueName ?? null; set => _resourceBody.AwPropertyQueueName = value; }

        /// <summary>Property queueUrl</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Property queueUrl")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property queueUrl",
        SerializedName = @"queueUrl",
        PossibleTypes = new [] { typeof(string) })]
        public string AwPropertyQueueUrl { get => _resourceBody.AwPropertyQueueUrl ?? null; set => _resourceBody.AwPropertyQueueUrl = value; }

        /// <summary>
        /// Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order
        /// to include it in the response, rather than returning an empty response if a message isn't yet available. You can specify
        /// an integer from 1 to 20. Short polling is used as the default or when you specify 0 for this property. For more information,
        /// see [Consuming messages using long polling](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html#sqs-long-polling)
        /// in the *Developer Guide*.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, rather than returning an empty response if a message isn't yet available. You can specify an integer from 1 to 20. Short polling is used as the default or when you specify 0 for this property. For more information, see [Consuming messages using long polling](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html#sqs-long-polling) in the *Developer Guide*.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, rather than returning an empty response if a message isn't yet available. You can specify an integer from 1 to 20. Short polling is used as the default or when you specify 0 for this property. For more information, see [Consuming messages using long polling](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html#sqs-long-polling) in the *Developer Guide*.",
        SerializedName = @"receiveMessageWaitTimeSeconds",
        PossibleTypes = new [] { typeof(int) })]
        public int AwPropertyReceiveMessageWaitTimeSecond { get => _resourceBody.AwPropertyReceiveMessageWaitTimeSecond ?? default(int); set => _resourceBody.AwPropertyReceiveMessageWaitTimeSecond = value; }

        /// <summary>
        /// The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source
        /// queues can specify dead-letter queues as a JSON object. The parameters are as follows: + ``redrivePermission``: The permission
        /// type that defines which source queues can specify the current queue as the dead-letter queue. Valid values are: + ``allowAll``:
        /// (Default) Any source queues in this AWS account in the same Region can specify this queue as the dead-letter queue. +
        /// ``denyAll``: No source queues can specify this queue as the dead-letter queue. + ``byQueue``: Only queues specified by
        /// the ``sourceQueueArns`` parameter can specify this queue as the dead-letter queue. + ``sourceQueueArns``: The Amazon Resource
        /// Names (ARN)s of the source queues that can specify this queue as the dead-letter queue and redrive messages. You can specify
        /// this parameter only when the ``redrivePermission`` parameter is set to ``byQueue``. You can specify up to 10 source queue
        /// ARNs. To allow more than 10 source queues to specify dead-letter queues, set the ``redrivePermission`` parameter to ``allowAll``.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ExportAs(typeof(global::System.Collections.Hashtable))]
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object. The parameters are as follows: + ``redrivePermission``: The permission type that defines which source queues can specify the current queue as the dead-letter queue. Valid values are: + ``allowAll``: (Default) Any source queues in this AWS account in the same Region can specify this queue as the dead-letter queue. + ``denyAll``: No source queues can specify this queue as the dead-letter queue. + ``byQueue``: Only queues specified by the ``sourceQueueArns`` parameter can specify this queue as the dead-letter queue. + ``sourceQueueArns``: The Amazon Resource Names (ARN)s of the source queues that can specify this queue as the dead-letter queue and redrive messages. You can specify this parameter only when the ``redrivePermission`` parameter is set to ``byQueue``. You can specify up to 10 source queue ARNs. To allow more than 10 source queues to specify dead-letter queues, set the ``redrivePermission`` parameter to ``allowAll``.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object. The parameters are as follows: + ``redrivePermission``: The permission type that defines which source queues can specify the current queue as the dead-letter queue. Valid values are: + ``allowAll``: (Default) Any source queues in this AWS account in the same Region can specify this queue as the dead-letter queue. + ``denyAll``: No source queues can specify this queue as the dead-letter queue. + ``byQueue``: Only queues specified by the ``sourceQueueArns`` parameter can specify this queue as the dead-letter queue. + ``sourceQueueArns``: The Amazon Resource Names (ARN)s of the source queues that can specify this queue as the dead-letter queue and redrive messages. You can specify this parameter only when the ``redrivePermission`` parameter is set to ``byQueue``. You can specify up to 10 source queue ARNs. To allow more than 10 source queues to specify dead-letter queues, set the ``redrivePermission`` parameter to ``allowAll``.",
        SerializedName = @"redriveAllowPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSqsQueuePropertiesRedriveAllowPolicy) })]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSqsQueuePropertiesRedriveAllowPolicy AwPropertyRedriveAllowPolicy { get => _resourceBody.AwPropertyRedriveAllowPolicy ?? null /* object */; set => _resourceBody.AwPropertyRedriveAllowPolicy = value; }

        /// <summary>
        /// The string that includes the parameters for the dead-letter queue functionality of the source queue as a JSON object.
        /// The parameters are as follows: + ``deadLetterTargetArn``: The Amazon Resource Name (ARN) of the dead-letter queue to which
        /// SQS moves messages after the value of ``maxReceiveCount`` is exceeded. + ``maxReceiveCount``: The number of times a message
        /// is delivered to the source queue before being moved to the dead-letter queue. When the ``ReceiveCount`` for a message
        /// exceeds the ``maxReceiveCount`` for a queue, SQS moves the message to the dead-letter-queue. The dead-letter queue of
        /// a FIFO queue must also be a FIFO queue. Similarly, the dead-letter queue of a standard queue must also be a standard queue.
        /// *JSON* ``{ 'deadLetterTargetArn' : String, 'maxReceiveCount' : Integer }`` *YAML* ``deadLetterTargetArn : String`` ``maxReceiveCount
        /// : Integer``
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ExportAs(typeof(global::System.Collections.Hashtable))]
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The string that includes the parameters for the dead-letter queue functionality of the source queue as a JSON object. The parameters are as follows: + ``deadLetterTargetArn``: The Amazon Resource Name (ARN) of the dead-letter queue to which SQS moves messages after the value of ``maxReceiveCount`` is exceeded. + ``maxReceiveCount``: The number of times a message is delivered to the source queue before being moved to the dead-letter queue. When the ``ReceiveCount`` for a message exceeds the ``maxReceiveCount`` for a queue, SQS moves the message to the dead-letter-queue. The dead-letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead-letter queue of a standard queue must also be a standard queue. *JSON* ``{ 'deadLetterTargetArn' : String, 'maxReceiveCount' : Integer }`` *YAML* ``deadLetterTargetArn : String`` ``maxReceiveCount : Integer``")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The string that includes the parameters for the dead-letter queue functionality of the source queue as a JSON object. The parameters are as follows: + ``deadLetterTargetArn``: The Amazon Resource Name (ARN) of the dead-letter queue to which SQS moves messages after the value of ``maxReceiveCount`` is exceeded. + ``maxReceiveCount``: The number of times a message is delivered to the source queue before being moved to the dead-letter queue. When the ``ReceiveCount`` for a message exceeds the ``maxReceiveCount`` for a queue, SQS moves the message to the dead-letter-queue. The dead-letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead-letter queue of a standard queue must also be a standard queue. *JSON* ``{ 'deadLetterTargetArn' : String, 'maxReceiveCount' : Integer }`` *YAML* ``deadLetterTargetArn : String`` ``maxReceiveCount : Integer``",
        SerializedName = @"redrivePolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSqsQueuePropertiesRedrivePolicy) })]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSqsQueuePropertiesRedrivePolicy AwPropertyRedrivePolicy { get => _resourceBody.AwPropertyRedrivePolicy ?? null /* object */; set => _resourceBody.AwPropertyRedrivePolicy = value; }

        /// <summary>
        /// Enables server-side queue encryption using SQS owned encryption keys. Only one server-side encryption option is supported
        /// per queue (for example, [SSE-KMS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sse-existing-queue.html)
        /// or [SSE-SQS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sqs-sse-queue.html)).
        /// When ``SqsManagedSseEnabled`` is not defined, ``SSE-SQS`` encryption is enabled by default.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Enables server-side queue encryption using SQS owned encryption keys. Only one server-side encryption option is supported per queue (for example, [SSE-KMS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sse-existing-queue.html) or [SSE-SQS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sqs-sse-queue.html)). When ``SqsManagedSseEnabled`` is not defined, ``SSE-SQS`` encryption is enabled by default.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enables server-side queue encryption using SQS owned encryption keys. Only one server-side encryption option is supported per queue (for example, [SSE-KMS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sse-existing-queue.html) or [SSE-SQS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sqs-sse-queue.html)). When ``SqsManagedSseEnabled`` is not defined, ``SSE-SQS`` encryption is enabled by default.",
        SerializedName = @"sqsManagedSseEnabled",
        PossibleTypes = new [] { typeof(global::System.Management.Automation.SwitchParameter) })]
        public global::System.Management.Automation.SwitchParameter AwPropertySqsManagedSseEnabled { get => _resourceBody.AwPropertySqsManagedSseEnabled ?? default(global::System.Management.Automation.SwitchParameter); set => _resourceBody.AwPropertySqsManagedSseEnabled = value; }

        /// <summary>
        /// The tags that you attach to this queue. For more information, see [Resource tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html)
        /// in the *User Guide*.
        /// </summary>
        [global::System.Management.Automation.AllowEmptyCollection]
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The tags that you attach to this queue. For more information, see [Resource tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *User Guide*.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags that you attach to this queue. For more information, see [Resource tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *User Guide*.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated56) })]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated56[] AwPropertyTag { get => _resourceBody.AwPropertyTag ?? null /* arrayOf */; set => _resourceBody.AwPropertyTag = value; }

        /// <summary>
        /// The length of time during which a message will be unavailable after a message is delivered from the queue. This blocks
        /// other components from receiving the same message and gives the initial component time to process and delete the message
        /// from the queue. Values must be from 0 to 43,200 seconds (12 hours). If you don't specify a value, AWS CloudFormation uses
        /// the default value of 30 seconds. For more information about SQS queue visibility timeouts, see [Visibility timeout](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html)
        /// in the *Developer Guide*.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The length of time during which a message will be unavailable after a message is delivered from the queue. This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue. Values must be from 0 to 43,200 seconds (12 hours). If you don't specify a value, AWS CloudFormation uses the default value of 30 seconds. For more information about SQS queue visibility timeouts, see [Visibility timeout](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html) in the *Developer Guide*.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The length of time during which a message will be unavailable after a message is delivered from the queue. This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue. Values must be from 0 to 43,200 seconds (12 hours). If you don't specify a value, AWS CloudFormation uses the default value of 30 seconds. For more information about SQS queue visibility timeouts, see [Visibility timeout](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html) in the *Developer Guide*.",
        SerializedName = @"visibilityTimeout",
        PossibleTypes = new [] { typeof(int) })]
        public int AwPropertyVisibilityTimeout { get => _resourceBody.AwPropertyVisibilityTimeout ?? default(int); set => _resourceBody.AwPropertyVisibilityTimeout = value; }

        /// <summary>AWS Account ID</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "AWS Account ID")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        public string AwsAccountId { get => _resourceBody.AwsAccountId ?? null; set => _resourceBody.AwsAccountId = value; }

        /// <summary>AWS Region</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "AWS Region")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        public string AwsRegion { get => _resourceBody.AwsRegion ?? null; set => _resourceBody.AwsRegion = value; }

        /// <summary>AWS Source Schema</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "AWS Source Schema")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        public string AwsSourceSchema { get => _resourceBody.AwsSourceSchema ?? null; set => _resourceBody.AwsSourceSchema = value; }

        /// <summary>AWS Tags</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ExportAs(typeof(global::System.Collections.Hashtable))]
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "AWS Tags")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISqsQueuePropertiesAwsTags) })]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISqsQueuePropertiesAwsTags AwsTag { get => _resourceBody.AwsTag ?? null /* object */; set => _resourceBody.AwsTag = value; }

        /// <summary>Wait for .NET debugger to attach</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "Wait for .NET debugger to attach")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Runtime)]
        public global::System.Management.Automation.SwitchParameter Break { get; set; }

        /// <summary>The reference to the client API class.</summary>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.MicrosoftAwsConnector Client => Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Module.Instance.ClientAPI;

        /// <summary>
        /// The DefaultProfile parameter is not functional. Use the SubscriptionId parameter when available if executing the cmdlet
        /// against a different subscription
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "The DefaultProfile parameter is not functional. Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::System.Management.Automation.Alias("AzureRMContext", "AzureCredential")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Azure)]
        public global::System.Management.Automation.PSObject DefaultProfile { get; set; }

        /// <summary>SendAsync Pipeline Steps to be appended to the front of the pipeline</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "SendAsync Pipeline Steps to be appended to the front of the pipeline")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Runtime)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SendAsyncStep[] HttpPipelineAppend { get; set; }

        /// <summary>SendAsync Pipeline Steps to be prepended to the front of the pipeline</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "SendAsync Pipeline Steps to be prepended to the front of the pipeline")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Runtime)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SendAsyncStep[] HttpPipelinePrepend { get; set; }

        /// <summary>Accessor for our copy of the InvocationInfo.</summary>
        public global::System.Management.Automation.InvocationInfo InvocationInformation { get => __invocationInfo = __invocationInfo ?? this.MyInvocation ; set { __invocationInfo = value; } }

        /// <summary>The geo-location where the resource lives</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "The geo-location where the resource lives")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The geo-location where the resource lives",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        public string Location { get => _resourceBody.Location ?? null; set => _resourceBody.Location = value; }

        /// <summary>
        /// <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener" /> cancellation delegate. Stops the cmdlet when called.
        /// </summary>
        global::System.Action Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener.Cancel => _cancellationTokenSource.Cancel;

        /// <summary><see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener" /> cancellation token.</summary>
        global::System.Threading.CancellationToken Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener.Token => _cancellationTokenSource.Token;

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of SqsQueue</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "Name of SqsQueue")]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of SqsQueue",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Path)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>
        /// when specified, will make the remote call, and return an AsyncOperationResponse, letting the remote operation continue
        /// asynchronously.
        /// </summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Run the command asynchronously")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Runtime)]
        public global::System.Management.Automation.SwitchParameter NoWait { get; set; }

        /// <summary>
        /// The instance of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.HttpPipeline" /> that the remote call will use.
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.HttpPipeline Pipeline { get; set; }

        /// <summary>The URI for the proxy server to use</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "The URI for the proxy server to use")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Runtime)]
        public global::System.Uri Proxy { get; set; }

        /// <summary>Credentials for a proxy server to use for the remote call</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "Credentials for a proxy server to use for the remote call")]
        [global::System.Management.Automation.ValidateNotNull]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Runtime)]
        public global::System.Management.Automation.PSCredential ProxyCredential { get; set; }

        /// <summary>Use the default credentials for the proxy</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, DontShow = true, HelpMessage = "Use the default credentials for the proxy")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Runtime)]
        public global::System.Management.Automation.SwitchParameter ProxyUseDefaultCredentials { get; set; }

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Public Cloud Connectors Resource ID")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        public string PublicCloudConnectorsResourceId { get => _resourceBody.PublicCloudConnectorsResourceId ?? null; set => _resourceBody.PublicCloudConnectorsResourceId = value; }

        /// <summary>Public Cloud Resource Name</summary>
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Public Cloud Resource Name")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        public string PublicCloudResourceName { get => _resourceBody.PublicCloudResourceName ?? null; set => _resourceBody.PublicCloudResourceName = value; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>The name of the resource group. The name is case insensitive.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "The name of the resource group. The name is case insensitive.")]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the resource group. The name is case insensitive.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Path)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The ID of the target subscription. The value must be an UUID.</summary>
        [global::System.Management.Automation.Parameter(Mandatory = true, HelpMessage = "The ID of the target subscription. The value must be an UUID.")]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The ID of the target subscription. The value must be an UUID.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.DefaultInfo(
        Name = @"",
        Description =@"",
        Script = @"(Get-AzContext).Subscription.Id")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Path)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Resource tags.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ExportAs(typeof(global::System.Collections.Hashtable))]
        [global::System.Management.Automation.Parameter(Mandatory = false, HelpMessage = "Resource tags.")]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Category(global::Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.ParameterCategory.Body)]
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceTags) })]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceTags Tag { get => _resourceBody.Tag ?? null /* object */; set => _resourceBody.Tag = value; }

        /// <summary>
        /// <c>overrideOnDefault</c> will be called before the regular onDefault has been processed, allowing customization of what
        /// happens on that response. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IErrorResponse">Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IErrorResponse</see>
        /// from the remote call</param>
        /// <param name="returnNow">/// Determines if the rest of the onDefault method should be processed, or if the method should
        /// return immediately (set to true to skip further processing )</param>

        partial void overrideOnDefault(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IErrorResponse> response, ref global::System.Threading.Tasks.Task<bool> returnNow);

        /// <summary>
        /// <c>overrideOnOk</c> will be called before the regular onOk has been processed, allowing customization of what happens
        /// on that response. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISqsQueue">Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISqsQueue</see>
        /// from the remote call</param>
        /// <param name="returnNow">/// Determines if the rest of the onOk method should be processed, or if the method should return
        /// immediately (set to true to skip further processing )</param>

        partial void overrideOnOk(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISqsQueue> response, ref global::System.Threading.Tasks.Task<bool> returnNow);

        /// <summary>
        /// (overrides the default BeginProcessing method in global::System.Management.Automation.PSCmdlet)
        /// </summary>
        protected override void BeginProcessing()
        {
            var telemetryId = Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Module.Instance.GetTelemetryId.Invoke();
            if (telemetryId != "" && telemetryId != "internal")
            {
                __correlationId = telemetryId;
            }
            Module.Instance.SetProxyConfiguration(Proxy, ProxyCredential, ProxyUseDefaultCredentials);
            if (Break)
            {
                Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.AttachDebugger.Break();
            }
            ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.CmdletBeginProcessing).Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
        }

        /// <summary>Creates a duplicate instance of this cmdlet (via JSON serialization).</summary>
        /// <returns>a duplicate instance of NewAzAwsConnectorSqQueue_CreateExpanded</returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Cmdlets.NewAzAwsConnectorSqQueue_CreateExpanded Clone()
        {
            var clone = new NewAzAwsConnectorSqQueue_CreateExpanded();
            clone.__correlationId = this.__correlationId;
            clone.__processRecordId = this.__processRecordId;
            clone.DefaultProfile = this.DefaultProfile;
            clone.InvocationInformation = this.InvocationInformation;
            clone.Proxy = this.Proxy;
            clone.Pipeline = this.Pipeline;
            clone.AsJob = this.AsJob;
            clone.Break = this.Break;
            clone.ProxyCredential = this.ProxyCredential;
            clone.ProxyUseDefaultCredentials = this.ProxyUseDefaultCredentials;
            clone.HttpPipelinePrepend = this.HttpPipelinePrepend;
            clone.HttpPipelineAppend = this.HttpPipelineAppend;
            clone._resourceBody = this._resourceBody;
            clone.SubscriptionId = this.SubscriptionId;
            clone.ResourceGroupName = this.ResourceGroupName;
            clone.Name = this.Name;
            return clone;
        }

        /// <summary>Performs clean-up after the command execution</summary>
        protected override void EndProcessing()
        {
            var telemetryInfo = Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Module.Instance.GetTelemetryInfo?.Invoke(__correlationId);
            if (telemetryInfo != null)
            {
                telemetryInfo.TryGetValue("ShowSecretsWarning", out var showSecretsWarning);
                telemetryInfo.TryGetValue("SanitizedProperties", out var sanitizedProperties);
                telemetryInfo.TryGetValue("InvocationName", out var invocationName);
                if (showSecretsWarning == "true")
                {
                    if (string.IsNullOrEmpty(sanitizedProperties))
                    {
                        WriteWarning($"The output of cmdlet {invocationName} may compromise security by showing secrets. Learn more at https://go.microsoft.com/fwlink/?linkid=2258844");
                    }
                    else
                    {
                        WriteWarning($"The output of cmdlet {invocationName} may compromise security by showing the following secrets: {sanitizedProperties}. Learn more at https://go.microsoft.com/fwlink/?linkid=2258844");
                    }
                }
            }
        }

        /// <summary>Handles/Dispatches events during the call to the REST service.</summary>
        /// <param name="id">The message id</param>
        /// <param name="token">The message cancellation token. When this call is cancelled, this should be <c>true</c></param>
        /// <param name="messageData">Detailed message data for the message event.</param>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the message is completed.
        /// </returns>
         async global::System.Threading.Tasks.Task Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener.Signal(string id, global::System.Threading.CancellationToken token, global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.EventData> messageData)
        {
            using( NoSynchronizationContext )
            {
                if (token.IsCancellationRequested)
                {
                    return ;
                }

                switch ( id )
                {
                    case Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.Verbose:
                    {
                        WriteVerbose($"{(messageData().Message ?? global::System.String.Empty)}");
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.Warning:
                    {
                        WriteWarning($"{(messageData().Message ?? global::System.String.Empty)}");
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.Information:
                    {
                        // When an operation supports asjob, Information messages must go thru verbose.
                        WriteVerbose($"INFORMATION: {(messageData().Message ?? global::System.String.Empty)}");
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.Debug:
                    {
                        WriteDebug($"{(messageData().Message ?? global::System.String.Empty)}");
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.Error:
                    {
                        WriteError(new global::System.Management.Automation.ErrorRecord( new global::System.Exception(messageData().Message), string.Empty, global::System.Management.Automation.ErrorCategory.NotSpecified, null ) );
                        return ;
                    }
                    case Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.DelayBeforePolling:
                    {
                        if (true == MyInvocation?.BoundParameters?.ContainsKey("NoWait"))
                        {
                            var data = messageData();
                            if (data.ResponseMessage is System.Net.Http.HttpResponseMessage response)
                            {
                                var asyncOperation = response.GetFirstHeader(@"Azure-AsyncOperation");
                                var location = response.GetFirstHeader(@"Location");
                                var uri = global::System.String.IsNullOrEmpty(asyncOperation) ? global::System.String.IsNullOrEmpty(location) ? response.RequestMessage.RequestUri.AbsoluteUri : location : asyncOperation;
                                WriteObject(new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell.AsyncOperationResponse { Target = uri });
                                // do nothing more.
                                data.Cancel();
                                return;
                            }
                        }
                        break;
                    }
                }
                await Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Module.Instance.Signal(id, token, messageData, (i,t,m) => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Signal(i,t,()=> Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.EventDataConverter.ConvertFrom( m() ) as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.EventData ), InvocationInformation, this.ParameterSetName, __correlationId, __processRecordId, null );
                if (token.IsCancellationRequested)
                {
                    return ;
                }
                WriteDebug($"{id}: {(messageData().Message ?? global::System.String.Empty)}");
            }
        }

        /// <summary>
        /// Intializes a new instance of the <see cref="NewAzAwsConnectorSqQueue_CreateExpanded" /> cmdlet class.
        /// </summary>
        public NewAzAwsConnectorSqQueue_CreateExpanded()
        {

        }

        /// <summary>Performs execution of the command.</summary>
        protected override void ProcessRecord()
        {
            ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.CmdletProcessRecordStart).Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
            __processRecordId = System.Guid.NewGuid().ToString();
            try
            {
                // work
                if (ShouldProcess($"Call remote 'SqsQueuesCreateOrReplace' operation"))
                {
                    if (true == MyInvocation?.BoundParameters?.ContainsKey("AsJob"))
                    {
                        var instance = this.Clone();
                        var job = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell.AsyncJob(instance, this.MyInvocation.Line, this.MyInvocation.MyCommand.Name, this._cancellationTokenSource.Token, this._cancellationTokenSource.Cancel);
                        JobRepository.Add(job);
                        var task = instance.ProcessRecordAsync();
                        job.Monitor(task);
                        WriteObject(job);
                    }
                    else
                    {
                        using( var asyncCommandRuntime = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell.AsyncCommandRuntime(this, ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Token) )
                        {
                            asyncCommandRuntime.Wait( ProcessRecordAsync(),((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Token);
                        }
                    }
                }
            }
            catch (global::System.AggregateException aggregateException)
            {
                // unroll the inner exceptions to get the root cause
                foreach( var innerException in aggregateException.Flatten().InnerExceptions )
                {
                    ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.CmdletException, $"{innerException.GetType().Name} - {innerException.Message} : {innerException.StackTrace}").Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                    // Write exception out to error channel.
                    WriteError( new global::System.Management.Automation.ErrorRecord(innerException,string.Empty, global::System.Management.Automation.ErrorCategory.NotSpecified, null) );
                }
            }
            catch (global::System.Exception exception) when ((exception as System.Management.Automation.PipelineStoppedException)== null || (exception as System.Management.Automation.PipelineStoppedException).InnerException != null)
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.CmdletException, $"{exception.GetType().Name} - {exception.Message} : {exception.StackTrace}").Wait(); if( ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                // Write exception out to error channel.
                WriteError( new global::System.Management.Automation.ErrorRecord(exception,string.Empty, global::System.Management.Automation.ErrorCategory.NotSpecified, null) );
            }
            finally
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.CmdletProcessRecordEnd).Wait();
            }
        }

        /// <summary>Performs execution of the command, working asynchronously if required.</summary>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the method is completed.
        /// </returns>
        protected async global::System.Threading.Tasks.Task ProcessRecordAsync()
        {
            using( NoSynchronizationContext )
            {
                await ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.CmdletGetPipeline); if( ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                Pipeline = Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Module.Instance.CreatePipeline(InvocationInformation, __correlationId, __processRecordId, this.ParameterSetName);
                if (null != HttpPipelinePrepend)
                {
                    Pipeline.Prepend((this.CommandRuntime as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell.IAsyncCommandRuntimeExtensions)?.Wrap(HttpPipelinePrepend) ?? HttpPipelinePrepend);
                }
                if (null != HttpPipelineAppend)
                {
                    Pipeline.Append((this.CommandRuntime as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell.IAsyncCommandRuntimeExtensions)?.Wrap(HttpPipelineAppend) ?? HttpPipelineAppend);
                }
                // get the client instance
                try
                {
                    await ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.CmdletBeforeAPICall); if( ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                    await this.Client.SqsQueuesCreateOrReplace(SubscriptionId, ResourceGroupName, Name, _resourceBody, onOk, onDefault, this, Pipeline);
                    await ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.CmdletAfterAPICall); if( ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Token.IsCancellationRequested ) { return; }
                }
                catch (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.UndeclaredResponseException urexception)
                {
                    WriteError(new global::System.Management.Automation.ErrorRecord(urexception, urexception.StatusCode.ToString(), global::System.Management.Automation.ErrorCategory.InvalidOperation, new {  SubscriptionId=SubscriptionId,ResourceGroupName=ResourceGroupName,Name=Name,body=_resourceBody})
                    {
                      ErrorDetails = new global::System.Management.Automation.ErrorDetails(urexception.Message) { RecommendedAction = urexception.Action }
                    });
                }
                finally
                {
                    await ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Signal(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Events.CmdletProcessRecordAsyncEnd);
                }
            }
        }

        /// <summary>Interrupts currently running code within the command.</summary>
        protected override void StopProcessing()
        {
            ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener)this).Cancel();
            base.StopProcessing();
        }

        /// <param name="sendToPipeline"></param>
        new protected void WriteObject(object sendToPipeline)
        {
            Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Module.Instance.SanitizeOutput?.Invoke(sendToPipeline, __correlationId);
            base.WriteObject(sendToPipeline);
        }

        /// <param name="sendToPipeline"></param>
        /// <param name="enumerateCollection"></param>
        new protected void WriteObject(object sendToPipeline, bool enumerateCollection)
        {
            Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Module.Instance.SanitizeOutput?.Invoke(sendToPipeline, __correlationId);
            base.WriteObject(sendToPipeline, enumerateCollection);
        }

        /// <summary>
        /// a delegate that is called when the remote service returns default (any response code not handled elsewhere).
        /// </summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IErrorResponse">Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IErrorResponse</see>
        /// from the remote call</param>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the method is completed.
        /// </returns>
        private async global::System.Threading.Tasks.Task onDefault(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IErrorResponse> response)
        {
            using( NoSynchronizationContext )
            {
                var _returnNow = global::System.Threading.Tasks.Task<bool>.FromResult(false);
                overrideOnDefault(responseMessage, response, ref _returnNow);
                // if overrideOnDefault has returned true, then return right away.
                if ((null != _returnNow && await _returnNow))
                {
                    return ;
                }
                // Error Response : default
                var code = (await response)?.Code;
                var message = (await response)?.Message;
                if ((null == code || null == message))
                {
                    // Unrecognized Response. Create an error record based on what we have.
                    var ex = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.RestException<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IErrorResponse>(responseMessage, await response);
                    WriteError( new global::System.Management.Automation.ErrorRecord(ex, ex.Code, global::System.Management.Automation.ErrorCategory.InvalidOperation, new { SubscriptionId=SubscriptionId, ResourceGroupName=ResourceGroupName, Name=Name, body=_resourceBody })
                    {
                      ErrorDetails = new global::System.Management.Automation.ErrorDetails(ex.Message) { RecommendedAction = ex.Action }
                    });
                }
                else
                {
                    WriteError( new global::System.Management.Automation.ErrorRecord(new global::System.Exception($"[{code}] : {message}"), code?.ToString(), global::System.Management.Automation.ErrorCategory.InvalidOperation, new { SubscriptionId=SubscriptionId, ResourceGroupName=ResourceGroupName, Name=Name, body=_resourceBody })
                    {
                      ErrorDetails = new global::System.Management.Automation.ErrorDetails(message) { RecommendedAction = global::System.String.Empty }
                    });
                }
            }
        }

        /// <summary>a delegate that is called when the remote service returns 200 (OK).</summary>
        /// <param name="responseMessage">the raw response message as an global::System.Net.Http.HttpResponseMessage.</param>
        /// <param name="response">the body result as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISqsQueue">Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISqsQueue</see>
        /// from the remote call</param>
        /// <returns>
        /// A <see cref="global::System.Threading.Tasks.Task" /> that will be complete when handling of the method is completed.
        /// </returns>
        private async global::System.Threading.Tasks.Task onOk(global::System.Net.Http.HttpResponseMessage responseMessage, global::System.Threading.Tasks.Task<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISqsQueue> response)
        {
            using( NoSynchronizationContext )
            {
                var _returnNow = global::System.Threading.Tasks.Task<bool>.FromResult(false);
                overrideOnOk(responseMessage, response, ref _returnNow);
                // if overrideOnOk has returned true, then return right away.
                if ((null != _returnNow && await _returnNow))
                {
                    return ;
                }
                // onOk - response for 200 / application/json
                // (await response) // should be Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISqsQueue
                WriteObject((await response));
            }
        }
    }
}