// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsDynamoDBTable</summary>
    public partial class AwsDynamoDbTableProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTableProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Backing field for <see cref="AttributeDefinition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttributeDefinition[] _attributeDefinition;

        /// <summary>
        /// A list of attributes that describe the key schema for the table and indexes. This property is required to create a DDB
        /// table. Update requires: [Some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt).
        /// Replacement if you edit an existing AttributeDefinition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttributeDefinition[] AttributeDefinition { get => this._attributeDefinition; set => this._attributeDefinition = value; }

        /// <summary>Backing field for <see cref="BillingMode" /> property.</summary>
        private string _billingMode;

        /// <summary>
        /// Specify how you are charged for read and write throughput and how you manage capacity. Valid values include: + ``PROVISIONED``
        /// - We recommend using ``PROVISIONED`` for predictable workloads. ``PROVISIONED`` sets the billing mode to [Provisioned
        /// Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual).
        /// + ``PAY_PER_REQUEST`` - We recommend using ``PAY_PER_REQUEST`` for unpredictable workloads. ``PAY_PER_REQUEST`` sets the
        /// billing mode to [On-Demand Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand).
        /// If not specified, the default is ``PROVISIONED``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string BillingMode { get => this._billingMode; set => this._billingMode = value; }

        /// <summary>
        /// Indicates whether CloudWatch Contributor Insights are to be enabled (true) or disabled (false).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ContributorInsightSpecificationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContributorInsightsSpecificationInternal)ContributorInsightsSpecification).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContributorInsightsSpecificationInternal)ContributorInsightsSpecification).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ContributorInsightsSpecification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContributorInsightsSpecification _contributorInsightsSpecification;

        /// <summary>
        /// The settings used to enable or disable CloudWatch Contributor Insights for the specified table. The settings used to enable
        /// or disable CloudWatch Contributor Insights.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContributorInsightsSpecification ContributorInsightsSpecification { get => (this._contributorInsightsSpecification = this._contributorInsightsSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ContributorInsightsSpecification()); set => this._contributorInsightsSpecification = value; }

        /// <summary>The delimiter used for separating items in the CSV file being imported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CsvDelimiter { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).CsvDelimiter; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).CsvDelimiter = value ?? null; }

        /// <summary>
        /// List of the headers used to specify a common header for all source CSV files being imported. If this field is specified
        /// then the first line of each CSV file is treated as data instead of the header. If this field is not specified the the
        /// first line of each CSV file is treated as the header.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] CsvHeaderList { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).CsvHeaderList; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).CsvHeaderList = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="DeletionProtectionEnabled" /> property.</summary>
        private bool? _deletionProtectionEnabled;

        /// <summary>
        /// Determines if a table is protected from deletion. When enabled, the table cannot be deleted by any user or process. This
        /// setting is disabled by default. For more information, see [Using deletion protection](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.Basics.html#WorkingWithTables.Basics.DeletionProtection)
        /// in the *Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? DeletionProtectionEnabled { get => this._deletionProtectionEnabled; set => this._deletionProtectionEnabled = value; }

        /// <summary>Backing field for <see cref="GlobalSecondaryIndex" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGlobalSecondaryIndex[] _globalSecondaryIndex;

        /// <summary>
        /// Global secondary indexes to be created on the table. You can create up to 20 global secondary indexes. If you update a
        /// table to include a new global secondary index, CFNlong initiates the index creation and then proceeds with the stack update.
        /// CFNlong doesn't wait for the index to complete creation because the backfilling phase can take a long time, depending
        /// on the size of the table. You can't use the index or update the table until the index's status is ``ACTIVE``. You can
        /// track its status by using the DynamoDB [DescribeTable](https://docs.aws.amazon.com/cli/latest/reference/dynamodb/describe-table.html)
        /// command. If you add or delete an index during an update, we recommend that you don't update any other resources. If your
        /// stack fails to update and is rolled back while adding a new index, you must manually delete the index. Updates are not
        /// supported. The following are exceptions: + If you update either the contributor insights specification or the provisioned
        /// throughput values of global secondary indexes, you can update the table without interruption. + You can delete or add
        /// one global secondary index without interruption. If you do both in the same update (for example, by changing the index's
        /// logical ID), the update fails.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGlobalSecondaryIndex[] GlobalSecondaryIndex { get => this._globalSecondaryIndex; set => this._globalSecondaryIndex = value; }

        /// <summary>Backing field for <see cref="ImportSourceSpecification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecification _importSourceSpecification;

        /// <summary>
        /// Specifies the properties of data being imported from the S3 bucket source to the table. If you specify the ``ImportSourceSpecification``
        /// property, and also specify either the ``StreamSpecification``, the ``TableClass`` property, or the ``DeletionProtectionEnabled``
        /// property, the IAM entity creating/updating stack must have ``UpdateTable`` permission. Specifies the properties of data
        /// being imported from the S3 bucket source to the table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecification ImportSourceSpecification { get => (this._importSourceSpecification = this._importSourceSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImportSourceSpecification()); set => this._importSourceSpecification = value; }

        /// <summary>Type of compression to be used on the input coming from the imported table.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ImportSourceSpecificationInputCompressionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).InputCompressionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).InputCompressionType = value ?? null; }

        /// <summary>
        /// The format of the source data. Valid values for ``ImportFormat`` are ``CSV``, ``DYNAMODB_JSON`` or ``ION``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ImportSourceSpecificationInputFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).InputFormat; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).InputFormat = value ?? null; }

        /// <summary>Backing field for <see cref="KeySchema" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchema[] _keySchema;

        /// <summary>
        /// Specifies the attributes that make up the primary key for the table. The attributes in the ``KeySchema`` property must
        /// also be defined in the ``AttributeDefinitions`` property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchema[] KeySchema { get => this._keySchema; set => this._keySchema = value; }

        /// <summary>The precision for the time and date that the stream was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KinesisStreamSpecificationApproximateCreationDateTimePrecision? KinesiStreamSpecificationApproximateCreationDateTimePrecision { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKinesisStreamSpecificationInternal)KinesisStreamSpecification).ApproximateCreationDateTimePrecision; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKinesisStreamSpecificationInternal)KinesisStreamSpecification).ApproximateCreationDateTimePrecision = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KinesisStreamSpecificationApproximateCreationDateTimePrecision)""); }

        /// <summary>
        /// The ARN for a specific Kinesis data stream. Length Constraints: Minimum length of 37. Maximum length of 1024.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string KinesiStreamSpecificationStreamArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKinesisStreamSpecificationInternal)KinesisStreamSpecification).StreamArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKinesisStreamSpecificationInternal)KinesisStreamSpecification).StreamArn = value ?? null; }

        /// <summary>Backing field for <see cref="KinesisStreamSpecification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKinesisStreamSpecification _kinesisStreamSpecification;

        /// <summary>
        /// The Kinesis Data Streams configuration for the specified table. The Kinesis Data Streams configuration for the specified
        /// table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKinesisStreamSpecification KinesisStreamSpecification { get => (this._kinesisStreamSpecification = this._kinesisStreamSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KinesisStreamSpecification()); set => this._kinesisStreamSpecification = value; }

        /// <summary>Backing field for <see cref="LocalSecondaryIndex" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocalSecondaryIndex[] _localSecondaryIndex;

        /// <summary>
        /// Local secondary indexes to be created on the table. You can create up to 5 local secondary indexes. Each index is scoped
        /// to a given hash key value. The size of each hash key can be up to 10 gigabytes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocalSecondaryIndex[] LocalSecondaryIndex { get => this._localSecondaryIndex; set => this._localSecondaryIndex = value; }

        /// <summary>Internal Acessors for ContributorInsightsSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContributorInsightsSpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.ContributorInsightsSpecification { get => (this._contributorInsightsSpecification = this._contributorInsightsSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ContributorInsightsSpecification()); set { {_contributorInsightsSpecification = value;} } }

        /// <summary>Internal Acessors for ImportSourceSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.ImportSourceSpecification { get => (this._importSourceSpecification = this._importSourceSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImportSourceSpecification()); set { {_importSourceSpecification = value;} } }

        /// <summary>Internal Acessors for ImportSourceSpecificationInputFormatOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.ImportSourceSpecificationInputFormatOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).InputFormatOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).InputFormatOption = value; }

        /// <summary>Internal Acessors for ImportSourceSpecificationS3BucketSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSource Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.ImportSourceSpecificationS3BucketSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).S3BucketSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).S3BucketSource = value; }

        /// <summary>Internal Acessors for InputFormatOptionCsv</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICsv Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.InputFormatOptionCsv { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).InputFormatOptionCsv; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).InputFormatOptionCsv = value; }

        /// <summary>Internal Acessors for KinesisStreamSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKinesisStreamSpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.KinesisStreamSpecification { get => (this._kinesisStreamSpecification = this._kinesisStreamSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KinesisStreamSpecification()); set { {_kinesisStreamSpecification = value;} } }

        /// <summary>Internal Acessors for PointInTimeRecoverySpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPointInTimeRecoverySpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.PointInTimeRecoverySpecification { get => (this._pointInTimeRecoverySpecification = this._pointInTimeRecoverySpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PointInTimeRecoverySpecification()); set { {_pointInTimeRecoverySpecification = value;} } }

        /// <summary>Internal Acessors for ProvisionedThroughput</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProvisionedThroughput Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.ProvisionedThroughput { get => (this._provisionedThroughput = this._provisionedThroughput ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProvisionedThroughput()); set { {_provisionedThroughput = value;} } }

        /// <summary>Internal Acessors for ResourcePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourcePolicy Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.ResourcePolicy { get => (this._resourcePolicy = this._resourcePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ResourcePolicy()); set { {_resourcePolicy = value;} } }

        /// <summary>Internal Acessors for SseSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseSpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.SseSpecification { get => (this._sseSpecification = this._sseSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SseSpecification()); set { {_sseSpecification = value;} } }

        /// <summary>Internal Acessors for StreamSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStreamSpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.StreamSpecification { get => (this._streamSpecification = this._streamSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StreamSpecification()); set { {_streamSpecification = value;} } }

        /// <summary>Internal Acessors for StreamSpecificationResourcePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourcePolicy Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.StreamSpecificationResourcePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStreamSpecificationInternal)StreamSpecification).ResourcePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStreamSpecificationInternal)StreamSpecification).ResourcePolicy = value; }

        /// <summary>Internal Acessors for TimeToLiveSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeToLiveSpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDynamoDbTablePropertiesInternal.TimeToLiveSpecification { get => (this._timeToLiveSpecification = this._timeToLiveSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TimeToLiveSpecification()); set { {_timeToLiveSpecification = value;} } }

        /// <summary>Backing field for <see cref="PointInTimeRecoverySpecification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPointInTimeRecoverySpecification _pointInTimeRecoverySpecification;

        /// <summary>
        /// The settings used to enable point in time recovery. The settings used to enable point in time recovery.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPointInTimeRecoverySpecification PointInTimeRecoverySpecification { get => (this._pointInTimeRecoverySpecification = this._pointInTimeRecoverySpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PointInTimeRecoverySpecification()); set => this._pointInTimeRecoverySpecification = value; }

        /// <summary>
        /// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? PointInTimeRecoverySpecificationPointInTimeRecoveryEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPointInTimeRecoverySpecificationInternal)PointInTimeRecoverySpecification).PointInTimeRecoveryEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPointInTimeRecoverySpecificationInternal)PointInTimeRecoverySpecification).PointInTimeRecoveryEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ProvisionedThroughput" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProvisionedThroughput _provisionedThroughput;

        /// <summary>
        /// Throughput for the specified table, which consists of values for ``ReadCapacityUnits`` and ``WriteCapacityUnits``. For
        /// more information about the contents of a provisioned throughput structure, see [Amazon DynamoDB Table ProvisionedThroughput](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ProvisionedThroughput.html).
        /// If you set ``BillingMode`` as ``PROVISIONED``, you must specify this property. If you set ``BillingMode`` as ``PAY_PER_REQUEST``,
        /// you cannot specify this property. Throughput for the specified table, which consists of values for ``ReadCapacityUnits``
        /// and ``WriteCapacityUnits``. For more information about the contents of a provisioned throughput structure, see [Table
        /// ProvisionedThroughput](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ProvisionedThroughput.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProvisionedThroughput ProvisionedThroughput { get => (this._provisionedThroughput = this._provisionedThroughput ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProvisionedThroughput()); set => this._provisionedThroughput = value; }

        /// <summary>
        /// The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ``ThrottlingException``.
        /// For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html)
        /// in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ProvisionedThroughputReadCapacityUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProvisionedThroughputInternal)ProvisionedThroughput).ReadCapacityUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProvisionedThroughputInternal)ProvisionedThroughput).ReadCapacityUnit = value ?? default(int); }

        /// <summary>
        /// The maximum number of writes consumed per second before DynamoDB returns a ``ThrottlingException``. For more information,
        /// see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html)
        /// in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ProvisionedThroughputWriteCapacityUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProvisionedThroughputInternal)ProvisionedThroughput).WriteCapacityUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProvisionedThroughputInternal)ProvisionedThroughput).WriteCapacityUnit = value ?? default(int); }

        /// <summary>Backing field for <see cref="ResourcePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourcePolicy _resourcePolicy;

        /// <summary>
        /// A resource-based policy document that contains permissions to add to the specified table. In a CFNshort template, you
        /// can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For
        /// more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// When you attach a resource-based policy while creating a table, the policy creation is *strongly consistent*. For information
        /// about the considerations that you should keep in mind while attaching a resource-based policy, see [Resource-based policy
        /// considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html). Creates or
        /// updates a resource-based policy document that contains the permissions for DDB resources, such as a table, its indexes,
        /// and stream. Resource-based policies let you define access permissions by specifying who has access to each resource, and
        /// the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or
        /// YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based
        /// policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// While defining resource-based policies in your CFNshort templates, the following considerations apply: + The maximum size
        /// supported for a resource-based policy document in JSON format is 20 KB. DDB counts whitespaces when calculating the size
        /// of a policy against this limit. + Resource-based policies don't support [drift detection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html#).
        /// If you update a policy outside of the CFNshort stack template, you'll need to update the CFNshort stack with the changes.
        /// + Resource-based policies don't support out-of-band changes. If you add, update, or delete a policy outside of the CFNshort
        /// template, the change won't be overwritten if there are no changes to the policy within the template. For example, say
        /// that your template contains a resource-based policy, which you later update outside of the template. If you don't make
        /// any changes to the policy in the template, the updated policy in DDB won’t be synced with the policy in the template.
        /// Conversely, say that your template doesn’t contain a resource-based policy, but you add a policy outside of the template.
        /// This policy won’t be removed from DDB as long as you don’t add it to the template. When you add a policy to the template
        /// and update the stack, the existing policy in DDB will be updated to match the one defined in the template. For a full
        /// list of all considerations, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourcePolicy ResourcePolicy { get => (this._resourcePolicy = this._resourcePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ResourcePolicy()); set => this._resourcePolicy = value; }

        /// <summary>
        /// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort
        /// template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it
        /// to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny ResourcePolicyDocument { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourcePolicyInternal)ResourcePolicy).PolicyDocument; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourcePolicyInternal)ResourcePolicy).PolicyDocument = value ?? null /* model class */; }

        /// <summary>The S3 bucket that is being imported from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string S3BucketSourceS3Bucket { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).S3BucketSourceS3Bucket; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).S3BucketSourceS3Bucket = value ?? null; }

        /// <summary>
        /// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string S3BucketSourceS3BucketOwner { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).S3BucketSourceS3BucketOwner; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).S3BucketSourceS3BucketOwner = value ?? null; }

        /// <summary>The key prefix shared by all S3 Objects that are being imported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string S3BucketSourceS3KeyPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).S3BucketSourceS3KeyPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal)ImportSourceSpecification).S3BucketSourceS3KeyPrefix = value ?? null; }

        /// <summary>Backing field for <see cref="SseSpecification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseSpecification _sseSpecification;

        /// <summary>
        /// Specifies the settings to enable server-side encryption. Represents the settings used to enable server-side encryption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseSpecification SseSpecification { get => (this._sseSpecification = this._sseSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SseSpecification()); set => this._sseSpecification = value; }

        /// <summary>
        /// The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN),
        /// alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB
        /// key ``alias/aws/dynamodb``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string SseSpecificationKmsMasterKeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseSpecificationInternal)SseSpecification).KmsMasterKeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseSpecificationInternal)SseSpecification).KmsMasterKeyId = value ?? null; }

        /// <summary>
        /// Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side
        /// encryption type is set to ``KMS`` and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified,
        /// server-side encryption is set to AWS owned key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? SseSpecificationSseEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseSpecificationInternal)SseSpecification).SseEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseSpecificationInternal)SseSpecification).SseEnabled = value ?? default(bool); }

        /// <summary>
        /// Server-side encryption type. The only supported value is: + ``KMS`` - Server-side encryption that uses KMSlong. The key
        /// is stored in your account and is managed by KMS (KMS charges apply).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string SseSpecificationSseType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseSpecificationInternal)SseSpecification).SseType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseSpecificationInternal)SseSpecification).SseType = value ?? null; }

        /// <summary>Backing field for <see cref="StreamArn" /> property.</summary>
        private string _streamArn;

        /// <summary>Property streamArn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string StreamArn { get => this._streamArn; set => this._streamArn = value; }

        /// <summary>Backing field for <see cref="StreamSpecification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStreamSpecification _streamSpecification;

        /// <summary>
        /// The settings for the DDB table stream, which capture changes to items stored in the table. Represents the DynamoDB Streams
        /// configuration for a table in DynamoDB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStreamSpecification StreamSpecification { get => (this._streamSpecification = this._streamSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StreamSpecification()); set => this._streamSpecification = value; }

        /// <summary>
        /// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort
        /// template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it
        /// to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny StreamSpecificationResourcePolicyDocument { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStreamSpecificationInternal)StreamSpecification).ResourcePolicyDocument; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStreamSpecificationInternal)StreamSpecification).ResourcePolicyDocument = value ?? null /* model class */; }

        /// <summary>
        /// When an item in the table is modified, ``StreamViewType`` determines what information is written to the stream for this
        /// table. Valid values for ``StreamViewType`` are: + ``KEYS_ONLY`` - Only the key attributes of the modified item are written
        /// to the stream. + ``NEW_IMAGE`` - The entire item, as it appears after it was modified, is written to the stream. + ``OLD_IMAGE``
        /// - The entire item, as it appeared before it was modified, is written to the stream. + ``NEW_AND_OLD_IMAGES`` - Both the
        /// new and the old item images of the item are written to the stream.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string StreamSpecificationStreamViewType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStreamSpecificationInternal)StreamSpecification).StreamViewType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStreamSpecificationInternal)StreamSpecification).StreamViewType = value ?? null; }

        /// <summary>Backing field for <see cref="TableClass" /> property.</summary>
        private string _tableClass;

        /// <summary>
        /// The table class of the new table. Valid values are ``STANDARD`` and ``STANDARD_INFREQUENT_ACCESS``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string TableClass { get => this._tableClass; set => this._tableClass = value; }

        /// <summary>Backing field for <see cref="TableName" /> property.</summary>
        private string _tableName;

        /// <summary>
        /// A name for the table. If you don't specify a name, CFNlong generates a unique physical ID and uses that ID for the table
        /// name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
        /// If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that
        /// require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string TableName { get => this._tableName; set => this._tableName = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated9[] _tag;

        /// <summary>
        /// An array of key-value pairs to apply to this resource. For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated9[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="TimeToLiveSpecification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeToLiveSpecification _timeToLiveSpecification;

        /// <summary>
        /// Specifies the Time to Live (TTL) settings for the table. For detailed information about the limits in DynamoDB, see [Limits
        /// in Amazon DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB
        /// Developer Guide. Represents the settings used to enable or disable Time to Live (TTL) for the specified table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeToLiveSpecification TimeToLiveSpecification { get => (this._timeToLiveSpecification = this._timeToLiveSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TimeToLiveSpecification()); set => this._timeToLiveSpecification = value; }

        /// <summary>
        /// The name of the TTL attribute used to store the expiration time for items in the table. + The ``AttributeName`` property
        /// is required when enabling the TTL, or when TTL is already enabled. + To update this property, you must first disable TTL
        /// and then enable TTL with the new attribute name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string TimeToLiveSpecificationAttributeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeToLiveSpecificationInternal)TimeToLiveSpecification).AttributeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeToLiveSpecificationInternal)TimeToLiveSpecification).AttributeName = value ?? null; }

        /// <summary>Indicates whether TTL is to be enabled (true) or disabled (false) on the table.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? TimeToLiveSpecificationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeToLiveSpecificationInternal)TimeToLiveSpecification).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeToLiveSpecificationInternal)TimeToLiveSpecification).Enabled = value ?? default(bool); }

        /// <summary>Creates an new <see cref="AwsDynamoDbTableProperties" /> instance.</summary>
        public AwsDynamoDbTableProperties()
        {

        }
    }
    /// Definition of awsDynamoDBTable
    public partial interface IAwsDynamoDbTableProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property arn",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// A list of attributes that describe the key schema for the table and indexes. This property is required to create a DDB
        /// table. Update requires: [Some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt).
        /// Replacement if you edit an existing AttributeDefinition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of attributes that describe the key schema for the table and indexes. This property is required to create a DDB table. Update requires: [Some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt). Replacement if you edit an existing AttributeDefinition.",
        SerializedName = @"attributeDefinitions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttributeDefinition) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttributeDefinition[] AttributeDefinition { get; set; }
        /// <summary>
        /// Specify how you are charged for read and write throughput and how you manage capacity. Valid values include: + ``PROVISIONED``
        /// - We recommend using ``PROVISIONED`` for predictable workloads. ``PROVISIONED`` sets the billing mode to [Provisioned
        /// Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual).
        /// + ``PAY_PER_REQUEST`` - We recommend using ``PAY_PER_REQUEST`` for unpredictable workloads. ``PAY_PER_REQUEST`` sets the
        /// billing mode to [On-Demand Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand).
        /// If not specified, the default is ``PROVISIONED``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify how you are charged for read and write throughput and how you manage capacity. Valid values include:  +   ``PROVISIONED`` - We recommend using ``PROVISIONED`` for predictable workloads. ``PROVISIONED`` sets the billing mode to [Provisioned Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual).  +   ``PAY_PER_REQUEST`` - We recommend using ``PAY_PER_REQUEST`` for unpredictable workloads. ``PAY_PER_REQUEST`` sets the billing mode to [On-Demand Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand).   If not specified, the default is ``PROVISIONED``.",
        SerializedName = @"billingMode",
        PossibleTypes = new [] { typeof(string) })]
        string BillingMode { get; set; }
        /// <summary>
        /// Indicates whether CloudWatch Contributor Insights are to be enabled (true) or disabled (false).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether CloudWatch Contributor Insights are to be enabled (true) or disabled (false).",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContributorInsightSpecificationEnabled { get; set; }
        /// <summary>The delimiter used for separating items in the CSV file being imported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The delimiter used for separating items in the CSV file being imported.",
        SerializedName = @"delimiter",
        PossibleTypes = new [] { typeof(string) })]
        string CsvDelimiter { get; set; }
        /// <summary>
        /// List of the headers used to specify a common header for all source CSV files being imported. If this field is specified
        /// then the first line of each CSV file is treated as data instead of the header. If this field is not specified the the
        /// first line of each CSV file is treated as the header.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of the headers used to specify a common header for all source CSV files being imported. If this field is specified then the first line of each CSV file is treated as data instead of the header. If this field is not specified the the first line of each CSV file is treated as the header.",
        SerializedName = @"headerList",
        PossibleTypes = new [] { typeof(string) })]
        string[] CsvHeaderList { get; set; }
        /// <summary>
        /// Determines if a table is protected from deletion. When enabled, the table cannot be deleted by any user or process. This
        /// setting is disabled by default. For more information, see [Using deletion protection](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.Basics.html#WorkingWithTables.Basics.DeletionProtection)
        /// in the *Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines if a table is protected from deletion. When enabled, the table cannot be deleted by any user or process. This setting is disabled by default. For more information, see [Using deletion protection](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.Basics.html#WorkingWithTables.Basics.DeletionProtection) in the *Developer Guide*.",
        SerializedName = @"deletionProtectionEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeletionProtectionEnabled { get; set; }
        /// <summary>
        /// Global secondary indexes to be created on the table. You can create up to 20 global secondary indexes. If you update a
        /// table to include a new global secondary index, CFNlong initiates the index creation and then proceeds with the stack update.
        /// CFNlong doesn't wait for the index to complete creation because the backfilling phase can take a long time, depending
        /// on the size of the table. You can't use the index or update the table until the index's status is ``ACTIVE``. You can
        /// track its status by using the DynamoDB [DescribeTable](https://docs.aws.amazon.com/cli/latest/reference/dynamodb/describe-table.html)
        /// command. If you add or delete an index during an update, we recommend that you don't update any other resources. If your
        /// stack fails to update and is rolled back while adding a new index, you must manually delete the index. Updates are not
        /// supported. The following are exceptions: + If you update either the contributor insights specification or the provisioned
        /// throughput values of global secondary indexes, you can update the table without interruption. + You can delete or add
        /// one global secondary index without interruption. If you do both in the same update (for example, by changing the index's
        /// logical ID), the update fails.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Global secondary indexes to be created on the table. You can create up to 20 global secondary indexes.  If you update a table to include a new global secondary index, CFNlong initiates the index creation and then proceeds with the stack update. CFNlong doesn't wait for the index to complete creation because the backfilling phase can take a long time, depending on the size of the table. You can't use the index or update the table until the index's status is ``ACTIVE``. You can track its status by using the DynamoDB [DescribeTable](https://docs.aws.amazon.com/cli/latest/reference/dynamodb/describe-table.html) command. If you add or delete an index during an update, we recommend that you don't update any other resources. If your stack fails to update and is rolled back while adding a new index, you must manually delete the index.  Updates are not supported. The following are exceptions:  +  If you update either the contributor insights specification or the provisioned throughput values of global secondary indexes, you can update the table without interruption.  +  You can delete or add one global secondary index without interruption. If you do both in the same update (for example, by changing the index's logical ID), the update fails.",
        SerializedName = @"globalSecondaryIndexes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGlobalSecondaryIndex) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGlobalSecondaryIndex[] GlobalSecondaryIndex { get; set; }
        /// <summary>Type of compression to be used on the input coming from the imported table.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of compression to be used on the input coming from the imported table.",
        SerializedName = @"inputCompressionType",
        PossibleTypes = new [] { typeof(string) })]
        string ImportSourceSpecificationInputCompressionType { get; set; }
        /// <summary>
        /// The format of the source data. Valid values for ``ImportFormat`` are ``CSV``, ``DYNAMODB_JSON`` or ``ION``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The format of the source data. Valid values for ``ImportFormat`` are ``CSV``, ``DYNAMODB_JSON`` or ``ION``.",
        SerializedName = @"inputFormat",
        PossibleTypes = new [] { typeof(string) })]
        string ImportSourceSpecificationInputFormat { get; set; }
        /// <summary>
        /// Specifies the attributes that make up the primary key for the table. The attributes in the ``KeySchema`` property must
        /// also be defined in the ``AttributeDefinitions`` property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the attributes that make up the primary key for the table. The attributes in the ``KeySchema`` property must also be defined in the ``AttributeDefinitions`` property.",
        SerializedName = @"keySchema",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchema) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchema[] KeySchema { get; set; }
        /// <summary>The precision for the time and date that the stream was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The precision for the time and date that the stream was created.",
        SerializedName = @"approximateCreationDateTimePrecision",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KinesisStreamSpecificationApproximateCreationDateTimePrecision) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KinesisStreamSpecificationApproximateCreationDateTimePrecision? KinesiStreamSpecificationApproximateCreationDateTimePrecision { get; set; }
        /// <summary>
        /// The ARN for a specific Kinesis data stream. Length Constraints: Minimum length of 37. Maximum length of 1024.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN for a specific Kinesis data stream. Length Constraints: Minimum length of 37. Maximum length of 1024.",
        SerializedName = @"streamArn",
        PossibleTypes = new [] { typeof(string) })]
        string KinesiStreamSpecificationStreamArn { get; set; }
        /// <summary>
        /// Local secondary indexes to be created on the table. You can create up to 5 local secondary indexes. Each index is scoped
        /// to a given hash key value. The size of each hash key can be up to 10 gigabytes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Local secondary indexes to be created on the table. You can create up to 5 local secondary indexes. Each index is scoped to a given hash key value. The size of each hash key can be up to 10 gigabytes.",
        SerializedName = @"localSecondaryIndexes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocalSecondaryIndex) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocalSecondaryIndex[] LocalSecondaryIndex { get; set; }
        /// <summary>
        /// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.",
        SerializedName = @"pointInTimeRecoveryEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PointInTimeRecoverySpecificationPointInTimeRecoveryEnabled { get; set; }
        /// <summary>
        /// The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ``ThrottlingException``.
        /// For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html)
        /// in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ``ThrottlingException``. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.",
        SerializedName = @"readCapacityUnits",
        PossibleTypes = new [] { typeof(int) })]
        int? ProvisionedThroughputReadCapacityUnit { get; set; }
        /// <summary>
        /// The maximum number of writes consumed per second before DynamoDB returns a ``ThrottlingException``. For more information,
        /// see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html)
        /// in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of writes consumed per second before DynamoDB returns a ``ThrottlingException``. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.",
        SerializedName = @"writeCapacityUnits",
        PossibleTypes = new [] { typeof(int) })]
        int? ProvisionedThroughputWriteCapacityUnit { get; set; }
        /// <summary>
        /// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort
        /// template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it
        /// to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).",
        SerializedName = @"policyDocument",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny ResourcePolicyDocument { get; set; }
        /// <summary>The S3 bucket that is being imported from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The S3 bucket that is being imported from.",
        SerializedName = @"s3Bucket",
        PossibleTypes = new [] { typeof(string) })]
        string S3BucketSourceS3Bucket { get; set; }
        /// <summary>
        /// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.",
        SerializedName = @"s3BucketOwner",
        PossibleTypes = new [] { typeof(string) })]
        string S3BucketSourceS3BucketOwner { get; set; }
        /// <summary>The key prefix shared by all S3 Objects that are being imported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The key prefix shared by all S3 Objects that are being imported.",
        SerializedName = @"s3KeyPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string S3BucketSourceS3KeyPrefix { get; set; }
        /// <summary>
        /// The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN),
        /// alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB
        /// key ``alias/aws/dynamodb``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB key ``alias/aws/dynamodb``.",
        SerializedName = @"kmsMasterKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string SseSpecificationKmsMasterKeyId { get; set; }
        /// <summary>
        /// Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side
        /// encryption type is set to ``KMS`` and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified,
        /// server-side encryption is set to AWS owned key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side encryption type is set to ``KMS`` and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified, server-side encryption is set to AWS owned key.",
        SerializedName = @"sseEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SseSpecificationSseEnabled { get; set; }
        /// <summary>
        /// Server-side encryption type. The only supported value is: + ``KMS`` - Server-side encryption that uses KMSlong. The key
        /// is stored in your account and is managed by KMS (KMS charges apply).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server-side encryption type. The only supported value is:  +   ``KMS`` - Server-side encryption that uses KMSlong. The key is stored in your account and is managed by KMS (KMS charges apply).",
        SerializedName = @"sseType",
        PossibleTypes = new [] { typeof(string) })]
        string SseSpecificationSseType { get; set; }
        /// <summary>Property streamArn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property streamArn",
        SerializedName = @"streamArn",
        PossibleTypes = new [] { typeof(string) })]
        string StreamArn { get; set; }
        /// <summary>
        /// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort
        /// template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it
        /// to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).",
        SerializedName = @"policyDocument",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny StreamSpecificationResourcePolicyDocument { get; set; }
        /// <summary>
        /// When an item in the table is modified, ``StreamViewType`` determines what information is written to the stream for this
        /// table. Valid values for ``StreamViewType`` are: + ``KEYS_ONLY`` - Only the key attributes of the modified item are written
        /// to the stream. + ``NEW_IMAGE`` - The entire item, as it appears after it was modified, is written to the stream. + ``OLD_IMAGE``
        /// - The entire item, as it appeared before it was modified, is written to the stream. + ``NEW_AND_OLD_IMAGES`` - Both the
        /// new and the old item images of the item are written to the stream.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When an item in the table is modified, ``StreamViewType`` determines what information is written to the stream for this table. Valid values for ``StreamViewType`` are:  +   ``KEYS_ONLY`` - Only the key attributes of the modified item are written to the stream.  +   ``NEW_IMAGE`` - The entire item, as it appears after it was modified, is written to the stream.  +   ``OLD_IMAGE`` - The entire item, as it appeared before it was modified, is written to the stream.  +   ``NEW_AND_OLD_IMAGES`` - Both the new and the old item images of the item are written to the stream.",
        SerializedName = @"streamViewType",
        PossibleTypes = new [] { typeof(string) })]
        string StreamSpecificationStreamViewType { get; set; }
        /// <summary>
        /// The table class of the new table. Valid values are ``STANDARD`` and ``STANDARD_INFREQUENT_ACCESS``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The table class of the new table. Valid values are ``STANDARD`` and ``STANDARD_INFREQUENT_ACCESS``.",
        SerializedName = @"tableClass",
        PossibleTypes = new [] { typeof(string) })]
        string TableClass { get; set; }
        /// <summary>
        /// A name for the table. If you don't specify a name, CFNlong generates a unique physical ID and uses that ID for the table
        /// name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
        /// If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that
        /// require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A name for the table. If you don't specify a name, CFNlong generates a unique physical ID and uses that ID for the table name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).  If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
        SerializedName = @"tableName",
        PossibleTypes = new [] { typeof(string) })]
        string TableName { get; set; }
        /// <summary>
        /// An array of key-value pairs to apply to this resource. For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array of key-value pairs to apply to this resource. For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated9) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated9[] Tag { get; set; }
        /// <summary>
        /// The name of the TTL attribute used to store the expiration time for items in the table. + The ``AttributeName`` property
        /// is required when enabling the TTL, or when TTL is already enabled. + To update this property, you must first disable TTL
        /// and then enable TTL with the new attribute name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the TTL attribute used to store the expiration time for items in the table.   +  The ``AttributeName`` property is required when enabling the TTL, or when TTL is already enabled.  +  To update this property, you must first disable TTL and then enable TTL with the new attribute name.",
        SerializedName = @"attributeName",
        PossibleTypes = new [] { typeof(string) })]
        string TimeToLiveSpecificationAttributeName { get; set; }
        /// <summary>Indicates whether TTL is to be enabled (true) or disabled (false) on the table.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether TTL is to be enabled (true) or disabled (false) on the table.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TimeToLiveSpecificationEnabled { get; set; }

    }
    /// Definition of awsDynamoDBTable
    internal partial interface IAwsDynamoDbTablePropertiesInternal

    {
        /// <summary>Property arn</summary>
        string Arn { get; set; }
        /// <summary>
        /// A list of attributes that describe the key schema for the table and indexes. This property is required to create a DDB
        /// table. Update requires: [Some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt).
        /// Replacement if you edit an existing AttributeDefinition.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttributeDefinition[] AttributeDefinition { get; set; }
        /// <summary>
        /// Specify how you are charged for read and write throughput and how you manage capacity. Valid values include: + ``PROVISIONED``
        /// - We recommend using ``PROVISIONED`` for predictable workloads. ``PROVISIONED`` sets the billing mode to [Provisioned
        /// Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual).
        /// + ``PAY_PER_REQUEST`` - We recommend using ``PAY_PER_REQUEST`` for unpredictable workloads. ``PAY_PER_REQUEST`` sets the
        /// billing mode to [On-Demand Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand).
        /// If not specified, the default is ``PROVISIONED``.
        /// </summary>
        string BillingMode { get; set; }
        /// <summary>
        /// Indicates whether CloudWatch Contributor Insights are to be enabled (true) or disabled (false).
        /// </summary>
        bool? ContributorInsightSpecificationEnabled { get; set; }
        /// <summary>
        /// The settings used to enable or disable CloudWatch Contributor Insights for the specified table. The settings used to enable
        /// or disable CloudWatch Contributor Insights.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContributorInsightsSpecification ContributorInsightsSpecification { get; set; }
        /// <summary>The delimiter used for separating items in the CSV file being imported.</summary>
        string CsvDelimiter { get; set; }
        /// <summary>
        /// List of the headers used to specify a common header for all source CSV files being imported. If this field is specified
        /// then the first line of each CSV file is treated as data instead of the header. If this field is not specified the the
        /// first line of each CSV file is treated as the header.
        /// </summary>
        string[] CsvHeaderList { get; set; }
        /// <summary>
        /// Determines if a table is protected from deletion. When enabled, the table cannot be deleted by any user or process. This
        /// setting is disabled by default. For more information, see [Using deletion protection](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.Basics.html#WorkingWithTables.Basics.DeletionProtection)
        /// in the *Developer Guide*.
        /// </summary>
        bool? DeletionProtectionEnabled { get; set; }
        /// <summary>
        /// Global secondary indexes to be created on the table. You can create up to 20 global secondary indexes. If you update a
        /// table to include a new global secondary index, CFNlong initiates the index creation and then proceeds with the stack update.
        /// CFNlong doesn't wait for the index to complete creation because the backfilling phase can take a long time, depending
        /// on the size of the table. You can't use the index or update the table until the index's status is ``ACTIVE``. You can
        /// track its status by using the DynamoDB [DescribeTable](https://docs.aws.amazon.com/cli/latest/reference/dynamodb/describe-table.html)
        /// command. If you add or delete an index during an update, we recommend that you don't update any other resources. If your
        /// stack fails to update and is rolled back while adding a new index, you must manually delete the index. Updates are not
        /// supported. The following are exceptions: + If you update either the contributor insights specification or the provisioned
        /// throughput values of global secondary indexes, you can update the table without interruption. + You can delete or add
        /// one global secondary index without interruption. If you do both in the same update (for example, by changing the index's
        /// logical ID), the update fails.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGlobalSecondaryIndex[] GlobalSecondaryIndex { get; set; }
        /// <summary>
        /// Specifies the properties of data being imported from the S3 bucket source to the table. If you specify the ``ImportSourceSpecification``
        /// property, and also specify either the ``StreamSpecification``, the ``TableClass`` property, or the ``DeletionProtectionEnabled``
        /// property, the IAM entity creating/updating stack must have ``UpdateTable`` permission. Specifies the properties of data
        /// being imported from the S3 bucket source to the table.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecification ImportSourceSpecification { get; set; }
        /// <summary>Type of compression to be used on the input coming from the imported table.</summary>
        string ImportSourceSpecificationInputCompressionType { get; set; }
        /// <summary>
        /// The format of the source data. Valid values for ``ImportFormat`` are ``CSV``, ``DYNAMODB_JSON`` or ``ION``.
        /// </summary>
        string ImportSourceSpecificationInputFormat { get; set; }
        /// <summary>
        /// Additional properties that specify how the input is formatted, The format options for the data that was imported into
        /// the target table. There is one value, CsvOption.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptions ImportSourceSpecificationInputFormatOption { get; set; }
        /// <summary>
        /// The S3 bucket that provides the source for the import. The S3 bucket that is being imported from.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSource ImportSourceSpecificationS3BucketSource { get; set; }
        /// <summary>
        /// The options for imported source files in CSV format. The values are Delimiter and HeaderList. The options for imported
        /// source files in CSV format. The values are Delimiter and HeaderList.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICsv InputFormatOptionCsv { get; set; }
        /// <summary>
        /// Specifies the attributes that make up the primary key for the table. The attributes in the ``KeySchema`` property must
        /// also be defined in the ``AttributeDefinitions`` property.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchema[] KeySchema { get; set; }
        /// <summary>The precision for the time and date that the stream was created.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KinesisStreamSpecificationApproximateCreationDateTimePrecision? KinesiStreamSpecificationApproximateCreationDateTimePrecision { get; set; }
        /// <summary>
        /// The ARN for a specific Kinesis data stream. Length Constraints: Minimum length of 37. Maximum length of 1024.
        /// </summary>
        string KinesiStreamSpecificationStreamArn { get; set; }
        /// <summary>
        /// The Kinesis Data Streams configuration for the specified table. The Kinesis Data Streams configuration for the specified
        /// table.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKinesisStreamSpecification KinesisStreamSpecification { get; set; }
        /// <summary>
        /// Local secondary indexes to be created on the table. You can create up to 5 local secondary indexes. Each index is scoped
        /// to a given hash key value. The size of each hash key can be up to 10 gigabytes.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocalSecondaryIndex[] LocalSecondaryIndex { get; set; }
        /// <summary>
        /// The settings used to enable point in time recovery. The settings used to enable point in time recovery.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPointInTimeRecoverySpecification PointInTimeRecoverySpecification { get; set; }
        /// <summary>
        /// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.
        /// </summary>
        bool? PointInTimeRecoverySpecificationPointInTimeRecoveryEnabled { get; set; }
        /// <summary>
        /// Throughput for the specified table, which consists of values for ``ReadCapacityUnits`` and ``WriteCapacityUnits``. For
        /// more information about the contents of a provisioned throughput structure, see [Amazon DynamoDB Table ProvisionedThroughput](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ProvisionedThroughput.html).
        /// If you set ``BillingMode`` as ``PROVISIONED``, you must specify this property. If you set ``BillingMode`` as ``PAY_PER_REQUEST``,
        /// you cannot specify this property. Throughput for the specified table, which consists of values for ``ReadCapacityUnits``
        /// and ``WriteCapacityUnits``. For more information about the contents of a provisioned throughput structure, see [Table
        /// ProvisionedThroughput](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ProvisionedThroughput.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProvisionedThroughput ProvisionedThroughput { get; set; }
        /// <summary>
        /// The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ``ThrottlingException``.
        /// For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html)
        /// in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
        /// </summary>
        int? ProvisionedThroughputReadCapacityUnit { get; set; }
        /// <summary>
        /// The maximum number of writes consumed per second before DynamoDB returns a ``ThrottlingException``. For more information,
        /// see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html)
        /// in the *Amazon DynamoDB Developer Guide*. If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
        /// </summary>
        int? ProvisionedThroughputWriteCapacityUnit { get; set; }
        /// <summary>
        /// A resource-based policy document that contains permissions to add to the specified table. In a CFNshort template, you
        /// can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For
        /// more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// When you attach a resource-based policy while creating a table, the policy creation is *strongly consistent*. For information
        /// about the considerations that you should keep in mind while attaching a resource-based policy, see [Resource-based policy
        /// considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html). Creates or
        /// updates a resource-based policy document that contains the permissions for DDB resources, such as a table, its indexes,
        /// and stream. Resource-based policies let you define access permissions by specifying who has access to each resource, and
        /// the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or
        /// YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based
        /// policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// While defining resource-based policies in your CFNshort templates, the following considerations apply: + The maximum size
        /// supported for a resource-based policy document in JSON format is 20 KB. DDB counts whitespaces when calculating the size
        /// of a policy against this limit. + Resource-based policies don't support [drift detection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html#).
        /// If you update a policy outside of the CFNshort stack template, you'll need to update the CFNshort stack with the changes.
        /// + Resource-based policies don't support out-of-band changes. If you add, update, or delete a policy outside of the CFNshort
        /// template, the change won't be overwritten if there are no changes to the policy within the template. For example, say
        /// that your template contains a resource-based policy, which you later update outside of the template. If you don't make
        /// any changes to the policy in the template, the updated policy in DDB won’t be synced with the policy in the template.
        /// Conversely, say that your template doesn’t contain a resource-based policy, but you add a policy outside of the template.
        /// This policy won’t be removed from DDB as long as you don’t add it to the template. When you add a policy to the template
        /// and update the stack, the existing policy in DDB will be updated to match the one defined in the template. For a full
        /// list of all considerations, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourcePolicy ResourcePolicy { get; set; }
        /// <summary>
        /// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort
        /// template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it
        /// to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny ResourcePolicyDocument { get; set; }
        /// <summary>The S3 bucket that is being imported from.</summary>
        string S3BucketSourceS3Bucket { get; set; }
        /// <summary>
        /// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
        /// </summary>
        string S3BucketSourceS3BucketOwner { get; set; }
        /// <summary>The key prefix shared by all S3 Objects that are being imported.</summary>
        string S3BucketSourceS3KeyPrefix { get; set; }
        /// <summary>
        /// Specifies the settings to enable server-side encryption. Represents the settings used to enable server-side encryption.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseSpecification SseSpecification { get; set; }
        /// <summary>
        /// The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN),
        /// alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB
        /// key ``alias/aws/dynamodb``.
        /// </summary>
        string SseSpecificationKmsMasterKeyId { get; set; }
        /// <summary>
        /// Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side
        /// encryption type is set to ``KMS`` and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified,
        /// server-side encryption is set to AWS owned key.
        /// </summary>
        bool? SseSpecificationSseEnabled { get; set; }
        /// <summary>
        /// Server-side encryption type. The only supported value is: + ``KMS`` - Server-side encryption that uses KMSlong. The key
        /// is stored in your account and is managed by KMS (KMS charges apply).
        /// </summary>
        string SseSpecificationSseType { get; set; }
        /// <summary>Property streamArn</summary>
        string StreamArn { get; set; }
        /// <summary>
        /// The settings for the DDB table stream, which capture changes to items stored in the table. Represents the DynamoDB Streams
        /// configuration for a table in DynamoDB.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStreamSpecification StreamSpecification { get; set; }
        /// <summary>
        /// Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table's
        /// streams. Resource-based policies let you define access permissions by specifying who has access to each resource, and
        /// the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy in JSON or
        /// YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based
        /// policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table,
        /// its indexes, and stream. Resource-based policies let you define access permissions by specifying who has access to each
        /// resource, and the actions they are allowed to perform on each resource. In a CFNshort template, you can provide the policy
        /// in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about
        /// resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// While defining resource-based policies in your CFNshort templates, the following considerations apply: + The maximum size
        /// supported for a resource-based policy document in JSON format is 20 KB. DDB counts whitespaces when calculating the size
        /// of a policy against this limit. + Resource-based policies don't support [drift detection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html#).
        /// If you update a policy outside of the CFNshort stack template, you'll need to update the CFNshort stack with the changes.
        /// + Resource-based policies don't support out-of-band changes. If you add, update, or delete a policy outside of the CFNshort
        /// template, the change won't be overwritten if there are no changes to the policy within the template. For example, say
        /// that your template contains a resource-based policy, which you later update outside of the template. If you don't make
        /// any changes to the policy in the template, the updated policy in DDB won’t be synced with the policy in the template.
        /// Conversely, say that your template doesn’t contain a resource-based policy, but you add a policy outside of the template.
        /// This policy won’t be removed from DDB as long as you don’t add it to the template. When you add a policy to the template
        /// and update the stack, the existing policy in DDB will be updated to match the one defined in the template. For a full
        /// list of all considerations, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourcePolicy StreamSpecificationResourcePolicy { get; set; }
        /// <summary>
        /// A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort
        /// template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it
        /// to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html)
        /// and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny StreamSpecificationResourcePolicyDocument { get; set; }
        /// <summary>
        /// When an item in the table is modified, ``StreamViewType`` determines what information is written to the stream for this
        /// table. Valid values for ``StreamViewType`` are: + ``KEYS_ONLY`` - Only the key attributes of the modified item are written
        /// to the stream. + ``NEW_IMAGE`` - The entire item, as it appears after it was modified, is written to the stream. + ``OLD_IMAGE``
        /// - The entire item, as it appeared before it was modified, is written to the stream. + ``NEW_AND_OLD_IMAGES`` - Both the
        /// new and the old item images of the item are written to the stream.
        /// </summary>
        string StreamSpecificationStreamViewType { get; set; }
        /// <summary>
        /// The table class of the new table. Valid values are ``STANDARD`` and ``STANDARD_INFREQUENT_ACCESS``.
        /// </summary>
        string TableClass { get; set; }
        /// <summary>
        /// A name for the table. If you don't specify a name, CFNlong generates a unique physical ID and uses that ID for the table
        /// name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
        /// If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that
        /// require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        string TableName { get; set; }
        /// <summary>
        /// An array of key-value pairs to apply to this resource. For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated9[] Tag { get; set; }
        /// <summary>
        /// Specifies the Time to Live (TTL) settings for the table. For detailed information about the limits in DynamoDB, see [Limits
        /// in Amazon DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB
        /// Developer Guide. Represents the settings used to enable or disable Time to Live (TTL) for the specified table.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeToLiveSpecification TimeToLiveSpecification { get; set; }
        /// <summary>
        /// The name of the TTL attribute used to store the expiration time for items in the table. + The ``AttributeName`` property
        /// is required when enabling the TTL, or when TTL is already enabled. + To update this property, you must first disable TTL
        /// and then enable TTL with the new attribute name.
        /// </summary>
        string TimeToLiveSpecificationAttributeName { get; set; }
        /// <summary>Indicates whether TTL is to be enabled (true) or disabled (false) on the table.</summary>
        bool? TimeToLiveSpecificationEnabled { get; set; }

    }
}