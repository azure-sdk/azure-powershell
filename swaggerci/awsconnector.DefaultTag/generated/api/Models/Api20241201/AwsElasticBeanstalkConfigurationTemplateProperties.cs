// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsElasticBeanstalkConfigurationTemplate</summary>
    public partial class AwsElasticBeanstalkConfigurationTemplateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkConfigurationTemplateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkConfigurationTemplatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApplicationName" /> property.</summary>
        private string _applicationName;

        /// <summary>
        /// The name of the Elastic Beanstalk application to associate with this configuration template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ApplicationName { get => this._applicationName; set => this._applicationName = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>An optional description for this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="EnvironmentId" /> property.</summary>
        private string _environmentId;

        /// <summary>
        /// The ID of an environment whose settings you want to use to create the configuration template. You must specify EnvironmentId
        /// if you don't specify PlatformArn, SolutionStackName, or SourceConfiguration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string EnvironmentId { get => this._environmentId; set => this._environmentId = value; }

        /// <summary>Internal Acessors for SourceConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkConfigurationTemplatePropertiesInternal.SourceConfiguration { get => (this._sourceConfiguration = this._sourceConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SourceConfiguration()); set { {_sourceConfiguration = value;} } }

        /// <summary>Backing field for <see cref="OptionSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfigurationOptionSetting[] _optionSetting;

        /// <summary>
        /// Option values for the Elastic Beanstalk configuration, such as the instance type. If specified, these values override
        /// the values obtained from the solution stack or the source configuration template. For a complete list of Elastic Beanstalk
        /// configuration options, see [Option Values](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html)
        /// in the AWS Elastic Beanstalk Developer Guide.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfigurationOptionSetting[] OptionSetting { get => this._optionSetting; set => this._optionSetting = value; }

        /// <summary>Backing field for <see cref="PlatformArn" /> property.</summary>
        private string _platformArn;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the custom platform. For more information, see [Custom Platforms](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/custom-platforms.html)
        /// in the AWS Elastic Beanstalk Developer Guide.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PlatformArn { get => this._platformArn; set => this._platformArn = value; }

        /// <summary>Backing field for <see cref="SolutionStackName" /> property.</summary>
        private string _solutionStackName;

        /// <summary>
        /// The name of an Elastic Beanstalk solution stack (platform version) that this configuration uses. For example, 64bit Amazon
        /// Linux 2013.09 running Tomcat 7 Java 7. A solution stack specifies the operating system, runtime, and application server
        /// for a configuration template. It also determines the set of configuration options as well as the possible and default
        /// values. For more information, see [Supported Platforms](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html)
        /// in the AWS Elastic Beanstalk Developer Guide. You must specify SolutionStackName if you don't specify PlatformArn, EnvironmentId,
        /// or SourceConfiguration. Use the ListAvailableSolutionStacks API to obtain a list of available solution stacks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SolutionStackName { get => this._solutionStackName; set => this._solutionStackName = value; }

        /// <summary>Backing field for <see cref="SourceConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceConfiguration _sourceConfiguration;

        /// <summary>
        /// An Elastic Beanstalk configuration template to base this one on. If specified, Elastic Beanstalk uses the configuration
        /// values from the specified configuration template to create a new configuration.Values specified in OptionSettings override
        /// any values obtained from the SourceConfiguration.You must specify SourceConfiguration if you don't specify PlatformArn,
        /// EnvironmentId, or SolutionStackName.Constraint: If both solution stack name and source configuration are specified, the
        /// solution stack of the source configuration template must match the specified solution stack name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceConfiguration SourceConfiguration { get => (this._sourceConfiguration = this._sourceConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SourceConfiguration()); set => this._sourceConfiguration = value; }

        /// <summary>The name of the application associated with the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string SourceConfigurationApplicationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceConfigurationInternal)SourceConfiguration).ApplicationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceConfigurationInternal)SourceConfiguration).ApplicationName = value ?? null; }

        /// <summary>The name of the configuration template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string SourceConfigurationTemplateName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceConfigurationInternal)SourceConfiguration).TemplateName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceConfigurationInternal)SourceConfiguration).TemplateName = value ?? null; }

        /// <summary>Backing field for <see cref="TemplateName" /> property.</summary>
        private string _templateName;

        /// <summary>The name of the configuration template</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string TemplateName { get => this._templateName; set => this._templateName = value; }

        /// <summary>
        /// Creates an new <see cref="AwsElasticBeanstalkConfigurationTemplateProperties" /> instance.
        /// </summary>
        public AwsElasticBeanstalkConfigurationTemplateProperties()
        {

        }
    }
    /// Definition of awsElasticBeanstalkConfigurationTemplate
    public partial interface IAwsElasticBeanstalkConfigurationTemplateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the Elastic Beanstalk application to associate with this configuration template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the Elastic Beanstalk application to associate with this configuration template.",
        SerializedName = @"applicationName",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationName { get; set; }
        /// <summary>An optional description for this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An optional description for this configuration.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// The ID of an environment whose settings you want to use to create the configuration template. You must specify EnvironmentId
        /// if you don't specify PlatformArn, SolutionStackName, or SourceConfiguration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of an environment whose settings you want to use to create the configuration template. You must specify EnvironmentId if you don't specify PlatformArn, SolutionStackName, or SourceConfiguration.",
        SerializedName = @"environmentId",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentId { get; set; }
        /// <summary>
        /// Option values for the Elastic Beanstalk configuration, such as the instance type. If specified, these values override
        /// the values obtained from the solution stack or the source configuration template. For a complete list of Elastic Beanstalk
        /// configuration options, see [Option Values](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html)
        /// in the AWS Elastic Beanstalk Developer Guide.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Option values for the Elastic Beanstalk configuration, such as the instance type. If specified, these values override the values obtained from the solution stack or the source configuration template. For a complete list of Elastic Beanstalk configuration options, see [Option Values](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html) in the AWS Elastic Beanstalk Developer Guide.",
        SerializedName = @"optionSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfigurationOptionSetting) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfigurationOptionSetting[] OptionSetting { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the custom platform. For more information, see [Custom Platforms](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/custom-platforms.html)
        /// in the AWS Elastic Beanstalk Developer Guide.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the custom platform. For more information, see [Custom Platforms](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/custom-platforms.html) in the AWS Elastic Beanstalk Developer Guide.",
        SerializedName = @"platformArn",
        PossibleTypes = new [] { typeof(string) })]
        string PlatformArn { get; set; }
        /// <summary>
        /// The name of an Elastic Beanstalk solution stack (platform version) that this configuration uses. For example, 64bit Amazon
        /// Linux 2013.09 running Tomcat 7 Java 7. A solution stack specifies the operating system, runtime, and application server
        /// for a configuration template. It also determines the set of configuration options as well as the possible and default
        /// values. For more information, see [Supported Platforms](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html)
        /// in the AWS Elastic Beanstalk Developer Guide. You must specify SolutionStackName if you don't specify PlatformArn, EnvironmentId,
        /// or SourceConfiguration. Use the ListAvailableSolutionStacks API to obtain a list of available solution stacks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of an Elastic Beanstalk solution stack (platform version) that this configuration uses. For example, 64bit Amazon Linux 2013.09 running Tomcat 7 Java 7. A solution stack specifies the operating system, runtime, and application server for a configuration template. It also determines the set of configuration options as well as the possible and default values. For more information, see [Supported Platforms](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html) in the AWS Elastic Beanstalk Developer Guide. You must specify SolutionStackName if you don't specify PlatformArn, EnvironmentId, or SourceConfiguration. Use the ListAvailableSolutionStacks API to obtain a list of available solution stacks.",
        SerializedName = @"solutionStackName",
        PossibleTypes = new [] { typeof(string) })]
        string SolutionStackName { get; set; }
        /// <summary>The name of the application associated with the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the application associated with the configuration.",
        SerializedName = @"applicationName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceConfigurationApplicationName { get; set; }
        /// <summary>The name of the configuration template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the configuration template.",
        SerializedName = @"templateName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceConfigurationTemplateName { get; set; }
        /// <summary>The name of the configuration template</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the configuration template",
        SerializedName = @"templateName",
        PossibleTypes = new [] { typeof(string) })]
        string TemplateName { get; set; }

    }
    /// Definition of awsElasticBeanstalkConfigurationTemplate
    internal partial interface IAwsElasticBeanstalkConfigurationTemplatePropertiesInternal

    {
        /// <summary>
        /// The name of the Elastic Beanstalk application to associate with this configuration template.
        /// </summary>
        string ApplicationName { get; set; }
        /// <summary>An optional description for this configuration.</summary>
        string Description { get; set; }
        /// <summary>
        /// The ID of an environment whose settings you want to use to create the configuration template. You must specify EnvironmentId
        /// if you don't specify PlatformArn, SolutionStackName, or SourceConfiguration.
        /// </summary>
        string EnvironmentId { get; set; }
        /// <summary>
        /// Option values for the Elastic Beanstalk configuration, such as the instance type. If specified, these values override
        /// the values obtained from the solution stack or the source configuration template. For a complete list of Elastic Beanstalk
        /// configuration options, see [Option Values](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html)
        /// in the AWS Elastic Beanstalk Developer Guide.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfigurationOptionSetting[] OptionSetting { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the custom platform. For more information, see [Custom Platforms](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/custom-platforms.html)
        /// in the AWS Elastic Beanstalk Developer Guide.
        /// </summary>
        string PlatformArn { get; set; }
        /// <summary>
        /// The name of an Elastic Beanstalk solution stack (platform version) that this configuration uses. For example, 64bit Amazon
        /// Linux 2013.09 running Tomcat 7 Java 7. A solution stack specifies the operating system, runtime, and application server
        /// for a configuration template. It also determines the set of configuration options as well as the possible and default
        /// values. For more information, see [Supported Platforms](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html)
        /// in the AWS Elastic Beanstalk Developer Guide. You must specify SolutionStackName if you don't specify PlatformArn, EnvironmentId,
        /// or SourceConfiguration. Use the ListAvailableSolutionStacks API to obtain a list of available solution stacks.
        /// </summary>
        string SolutionStackName { get; set; }
        /// <summary>
        /// An Elastic Beanstalk configuration template to base this one on. If specified, Elastic Beanstalk uses the configuration
        /// values from the specified configuration template to create a new configuration.Values specified in OptionSettings override
        /// any values obtained from the SourceConfiguration.You must specify SourceConfiguration if you don't specify PlatformArn,
        /// EnvironmentId, or SolutionStackName.Constraint: If both solution stack name and source configuration are specified, the
        /// solution stack of the source configuration template must match the specified solution stack name.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceConfiguration SourceConfiguration { get; set; }
        /// <summary>The name of the application associated with the configuration.</summary>
        string SourceConfigurationApplicationName { get; set; }
        /// <summary>The name of the configuration template.</summary>
        string SourceConfigurationTemplateName { get; set; }
        /// <summary>The name of the configuration template</summary>
        string TemplateName { get; set; }

    }
}