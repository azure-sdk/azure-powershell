// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of LoggingConfiguration</summary>
    public partial class LoggingConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigurationInternal
    {

        /// <summary>Backing field for <see cref="DestinationBucketName" /> property.</summary>
        private string _destinationBucketName;

        /// <summary>
        /// The name of the bucket where Amazon S3 should store server access log files. You can store log files in any bucket that
        /// you own. By default, logs are stored in the bucket where the ``LoggingConfiguration`` property is defined.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DestinationBucketName { get => this._destinationBucketName; set => this._destinationBucketName = value; }

        /// <summary>Backing field for <see cref="LogFilePrefix" /> property.</summary>
        private string _logFilePrefix;

        /// <summary>
        /// A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use
        /// a prefix to distinguish which log files came from which bucket.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LogFilePrefix { get => this._logFilePrefix; set => this._logFilePrefix = value; }

        /// <summary>Internal Acessors for TargetObjectKeyFormat</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetObjectKeyFormat Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigurationInternal.TargetObjectKeyFormat { get => (this._targetObjectKeyFormat = this._targetObjectKeyFormat ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TargetObjectKeyFormat()); set { {_targetObjectKeyFormat = value;} } }

        /// <summary>Internal Acessors for TargetObjectKeyFormatPartitionedPrefix</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPartitionedPrefix Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigurationInternal.TargetObjectKeyFormatPartitionedPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetObjectKeyFormatInternal)TargetObjectKeyFormat).PartitionedPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetObjectKeyFormatInternal)TargetObjectKeyFormat).PartitionedPrefix = value; }

        /// <summary>
        /// Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PartitionedPrefixPartitionDateSource? PartitionedPrefixPartitionDateSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetObjectKeyFormatInternal)TargetObjectKeyFormat).PartitionedPrefixPartitionDateSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetObjectKeyFormatInternal)TargetObjectKeyFormat).PartitionedPrefixPartitionDateSource = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PartitionedPrefixPartitionDateSource)""); }

        /// <summary>Backing field for <see cref="TargetObjectKeyFormat" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetObjectKeyFormat _targetObjectKeyFormat;

        /// <summary>
        /// Amazon S3 key format for log objects. Only one format, either PartitionedPrefix or SimplePrefix, is allowed. Describes
        /// the key format for server access log file in the target bucket. You can choose between SimplePrefix and PartitionedPrefix.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetObjectKeyFormat TargetObjectKeyFormat { get => (this._targetObjectKeyFormat = this._targetObjectKeyFormat ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TargetObjectKeyFormat()); set => this._targetObjectKeyFormat = value; }

        /// <summary>
        /// This format defaults the prefix to the given log file prefix for delivering server access log file.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny TargetObjectKeyFormatSimplePrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetObjectKeyFormatInternal)TargetObjectKeyFormat).SimplePrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetObjectKeyFormatInternal)TargetObjectKeyFormat).SimplePrefix = value ?? null /* model class */; }

        /// <summary>Creates an new <see cref="LoggingConfiguration" /> instance.</summary>
        public LoggingConfiguration()
        {

        }
    }
    /// Definition of LoggingConfiguration
    public partial interface ILoggingConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the bucket where Amazon S3 should store server access log files. You can store log files in any bucket that
        /// you own. By default, logs are stored in the bucket where the ``LoggingConfiguration`` property is defined.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the bucket where Amazon S3 should store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the ``LoggingConfiguration`` property is defined.",
        SerializedName = @"destinationBucketName",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationBucketName { get; set; }
        /// <summary>
        /// A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use
        /// a prefix to distinguish which log files came from which bucket.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use a prefix to distinguish which log files came from which bucket.",
        SerializedName = @"logFilePrefix",
        PossibleTypes = new [] { typeof(string) })]
        string LogFilePrefix { get; set; }
        /// <summary>
        /// Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.",
        SerializedName = @"partitionDateSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PartitionedPrefixPartitionDateSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PartitionedPrefixPartitionDateSource? PartitionedPrefixPartitionDateSource { get; set; }
        /// <summary>
        /// This format defaults the prefix to the given log file prefix for delivering server access log file.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This format defaults the prefix to the given log file prefix for delivering server access log file.",
        SerializedName = @"simplePrefix",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny TargetObjectKeyFormatSimplePrefix { get; set; }

    }
    /// Definition of LoggingConfiguration
    internal partial interface ILoggingConfigurationInternal

    {
        /// <summary>
        /// The name of the bucket where Amazon S3 should store server access log files. You can store log files in any bucket that
        /// you own. By default, logs are stored in the bucket where the ``LoggingConfiguration`` property is defined.
        /// </summary>
        string DestinationBucketName { get; set; }
        /// <summary>
        /// A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a single bucket, you can use
        /// a prefix to distinguish which log files came from which bucket.
        /// </summary>
        string LogFilePrefix { get; set; }
        /// <summary>
        /// Specifies the partition date source for the partitioned prefix. PartitionDateSource can be EventTime or DeliveryTime.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PartitionedPrefixPartitionDateSource? PartitionedPrefixPartitionDateSource { get; set; }
        /// <summary>
        /// Amazon S3 key format for log objects. Only one format, either PartitionedPrefix or SimplePrefix, is allowed. Describes
        /// the key format for server access log file in the target bucket. You can choose between SimplePrefix and PartitionedPrefix.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetObjectKeyFormat TargetObjectKeyFormat { get; set; }
        /// <summary>
        /// Amazon S3 keys for log objects are partitioned in the following format: ``[DestinationPrefix][SourceAccountId]/[SourceRegion]/[SourceBucket]/[YYYY]/[MM]/[DD]/[YYYY]-[MM]-[DD]-[hh]-[mm]-[ss]-[UniqueString]``
        /// PartitionedPrefix defaults to EventTime delivery when server access logs are delivered.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPartitionedPrefix TargetObjectKeyFormatPartitionedPrefix { get; set; }
        /// <summary>
        /// This format defaults the prefix to the given log file prefix for delivering server access log file.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny TargetObjectKeyFormatSimplePrefix { get; set; }

    }
}