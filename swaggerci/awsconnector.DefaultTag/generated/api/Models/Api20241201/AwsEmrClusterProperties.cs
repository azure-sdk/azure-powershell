// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEmrCluster</summary>
    public partial class AwsEmrClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Application" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplication[] _application;

        /// <summary><p>The applications installed on this cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplication[] Application { get => this._application; set => this._application = value; }

        /// <summary>Backing field for <see cref="AutoScalingRole" /> property.</summary>
        private string _autoScalingRole;

        /// <summary>
        /// <p>An IAM role for automatic scaling policies. The default role is <code>EMR_AutoScaling_DefaultRole</code>. The IAM role
        /// provides permissions that the automatic scaling feature requires to launch and terminate Amazon EC2 instances in an instance
        /// group.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AutoScalingRole { get => this._autoScalingRole; set => this._autoScalingRole = value; }

        /// <summary>Backing field for <see cref="AutoTerminate" /> property.</summary>
        private bool? _autoTerminate;

        /// <summary>
        /// <p>Specifies whether the cluster should terminate after completing all steps.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? AutoTerminate { get => this._autoTerminate; set => this._autoTerminate = value; }

        /// <summary>Backing field for <see cref="ClusterArn" /> property.</summary>
        private string _clusterArn;

        /// <summary><p>The Amazon Resource Name of the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ClusterArn { get => this._clusterArn; set => this._clusterArn = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode? CodeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).CodeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).CodeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode)""); }

        /// <summary>Backing field for <see cref="Configuration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfiguration[] _configuration;

        /// <summary>
        /// <p>Applies only to Amazon EMR releases 4.x and later. The list of configurations that are supplied to the Amazon EMR cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfiguration[] Configuration { get => this._configuration; set => this._configuration = value; }

        /// <summary>Backing field for <see cref="CustomAmiId" /> property.</summary>
        private string _customAmiId;

        /// <summary>
        /// <p>Available only in Amazon EMR releases 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI if the cluster
        /// uses a custom AMI.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string CustomAmiId { get => this._customAmiId; set => this._customAmiId = value; }

        /// <summary>Backing field for <see cref="EbsRootVolumeIop" /> property.</summary>
        private int? _ebsRootVolumeIop;

        /// <summary>
        /// <p>The IOPS, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance. Available
        /// in Amazon EMR releases 6.15.0 and later.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? EbsRootVolumeIop { get => this._ebsRootVolumeIop; set => this._ebsRootVolumeIop = value; }

        /// <summary>Backing field for <see cref="EbsRootVolumeSize" /> property.</summary>
        private int? _ebsRootVolumeSize;

        /// <summary>
        /// <p>The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance.
        /// Available in Amazon EMR releases 4.x and later.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? EbsRootVolumeSize { get => this._ebsRootVolumeSize; set => this._ebsRootVolumeSize = value; }

        /// <summary>Backing field for <see cref="EbsRootVolumeThroughput" /> property.</summary>
        private int? _ebsRootVolumeThroughput;

        /// <summary>
        /// <p>The throughput, in MiB/s, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance.
        /// Available in Amazon EMR releases 6.15.0 and later.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? EbsRootVolumeThroughput { get => this._ebsRootVolumeThroughput; set => this._ebsRootVolumeThroughput = value; }

        /// <summary>Backing field for <see cref="Ec2InstanceAttribute" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributes _ec2InstanceAttribute;

        /// <summary>
        /// <p>Provides information about the Amazon EC2 instances in a cluster grouped by category. For example, key name, subnet
        /// ID, IAM instance profile, and so on.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributes Ec2InstanceAttribute { get => (this._ec2InstanceAttribute = this._ec2InstanceAttribute ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Ec2InstanceAttributes()); set => this._ec2InstanceAttribute = value; }

        /// <summary><p>A list of additional Amazon EC2 security group IDs for the master node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] Ec2InstanceAttributeAdditionalMasterSecurityGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).AdditionalMasterSecurityGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).AdditionalMasterSecurityGroup = value ?? null /* arrayOf */; }

        /// <summary>
        /// <p>A list of additional Amazon EC2 security group IDs for the core and task nodes.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] Ec2InstanceAttributeAdditionalSlaveSecurityGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).AdditionalSlaveSecurityGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).AdditionalSlaveSecurityGroup = value ?? null /* arrayOf */; }

        /// <summary><p>The Availability Zone in which the cluster will run. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string Ec2InstanceAttributeEc2AvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).Ec2AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).Ec2AvailabilityZone = value ?? null; }

        /// <summary>
        /// <p>The name of the Amazon EC2 key pair to use when connecting with SSH into the master node as a user named 'hadoop'.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string Ec2InstanceAttributeEc2KeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).Ec2KeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).Ec2KeyName = value ?? null; }

        /// <summary>
        /// <p>Set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify
        /// this value, and your account supports EC2-Classic, the cluster launches in EC2-Classic.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string Ec2InstanceAttributeEc2SubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).Ec2SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).Ec2SubnetId = value ?? null; }

        /// <summary><p>The identifier of the Amazon EC2 security group for the master node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string Ec2InstanceAttributeEmrManagedMasterSecurityGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).EmrManagedMasterSecurityGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).EmrManagedMasterSecurityGroup = value ?? null; }

        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the core and task nodes.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string Ec2InstanceAttributeEmrManagedSlaveSecurityGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).EmrManagedSlaveSecurityGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).EmrManagedSlaveSecurityGroup = value ?? null; }

        /// <summary>
        /// <p>The IAM role that was specified when the cluster was launched. The Amazon EC2 instances of the cluster assume this
        /// role.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string Ec2InstanceAttributeIamInstanceProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).IamInstanceProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).IamInstanceProfile = value ?? null; }

        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies one or more Availability Zones in which to
        /// launch Amazon EC2 cluster instances when the EC2-Classic network configuration is supported. Amazon EMR chooses the Availability
        /// Zone with the best fit from among the list of <code>RequestedEc2AvailabilityZones</code>, and then launches all cluster
        /// instances within that Availability Zone. If you do not specify this value, Amazon EMR chooses the Availability Zone for
        /// you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] Ec2InstanceAttributeRequestedEc2AvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).RequestedEc2AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).RequestedEc2AvailabilityZone = value ?? null /* arrayOf */; }

        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies the unique identifier of one or more Amazon
        /// EC2 subnets in which to launch Amazon EC2 cluster instances. Subnets must exist within the same VPC. Amazon EMR chooses
        /// the Amazon EC2 subnet with the best fit from among the list of <code>RequestedEc2SubnetIds</code>, and then launches all
        /// cluster instances within that Subnet. If this value is not specified, and the account and Region support EC2-Classic networks,
        /// the cluster launches instances in the EC2-Classic network and uses <code>RequestedEc2AvailabilityZones</code> instead
        /// of this setting. If EC2-Classic is not supported, and no Subnet is specified, Amazon EMR chooses the subnet for you. <code>RequestedEc2SubnetIDs</code>
        /// and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] Ec2InstanceAttributeRequestedEc2SubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).RequestedEc2SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).RequestedEc2SubnetId = value ?? null /* arrayOf */; }

        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string Ec2InstanceAttributeServiceAccessSecurityGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).ServiceAccessSecurityGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal)Ec2InstanceAttribute).ServiceAccessSecurityGroup = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary><p>The unique identifier for the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="InstanceCollectionType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceCollectionTypeEnumValue _instanceCollectionType;

        /// <summary>
        /// <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p>
        /// </note> <p>The instance group configuration of the cluster. A value of <code>INSTANCE_GROUP</code> indicates a uniform
        /// instance group configuration. A value of <code>INSTANCE_FLEET</code> indicates an instance fleets configuration.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceCollectionTypeEnumValue InstanceCollectionType { get => (this._instanceCollectionType = this._instanceCollectionType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceCollectionTypeEnumValue()); set => this._instanceCollectionType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceCollectionType? InstanceCollectionTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceCollectionTypeEnumValueInternal)InstanceCollectionType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceCollectionTypeEnumValueInternal)InstanceCollectionType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceCollectionType)""); }

        /// <summary><p>The Active Directory password for <code>ADDomainJoinUser</code>.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string KerberoAttributeAdDomainJoinPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributesInternal)KerberosAttribute).AdDomainJoinPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributesInternal)KerberosAttribute).AdDomainJoinPassword = value ?? null; }

        /// <summary>
        /// <p>Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges
        /// to join resources to the domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string KerberoAttributeAdDomainJoinUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributesInternal)KerberosAttribute).AdDomainJoinUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributesInternal)KerberosAttribute).AdDomainJoinUser = value ?? null; }

        /// <summary>
        /// <p>Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password,
        /// which must be identical across realms.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string KerberoAttributeCrossRealmTrustPrincipalPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributesInternal)KerberosAttribute).CrossRealmTrustPrincipalPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributesInternal)KerberosAttribute).CrossRealmTrustPrincipalPassword = value ?? null; }

        /// <summary>
        /// <p>The password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos
        /// principals, password policies, and keytabs for the cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string KerberoAttributeKdcAdminPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributesInternal)KerberosAttribute).KdcAdminPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributesInternal)KerberosAttribute).KdcAdminPassword = value ?? null; }

        /// <summary>
        /// <p>The name of the Kerberos realm to which all nodes in a cluster belong. For example, <code>EC2.INTERNAL</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string KerberoAttributeRealm { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributesInternal)KerberosAttribute).Realm; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributesInternal)KerberosAttribute).Realm = value ?? null; }

        /// <summary>Backing field for <see cref="KerberosAttribute" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributes _kerberosAttribute;

        /// <summary>
        /// <p>Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration. For more
        /// information see <a href='https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html'>Use Kerberos Authentication</a>
        /// in the <i>Amazon EMR Management Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributes KerberosAttribute { get => (this._kerberosAttribute = this._kerberosAttribute ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KerberosAttributes()); set => this._kerberosAttribute = value; }

        /// <summary>Backing field for <see cref="LogEncryptionKmsKeyId" /> property.</summary>
        private string _logEncryptionKmsKeyId;

        /// <summary>
        /// <p> The KMS key used for encrypting log files. This attribute is only available with Amazon EMR 5.30.0 and later, excluding
        /// Amazon EMR 6.0.0. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LogEncryptionKmsKeyId { get => this._logEncryptionKmsKeyId; set => this._logEncryptionKmsKeyId = value; }

        /// <summary>Backing field for <see cref="LogUri" /> property.</summary>
        private string _logUri;

        /// <summary>
        /// <p>The path to the Amazon S3 location where logs for this cluster are stored.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LogUri { get => this._logUri; set => this._logUri = value; }

        /// <summary>Backing field for <see cref="MasterPublicDnsName" /> property.</summary>
        private string _masterPublicDnsName;

        /// <summary>
        /// <p>The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet,
        /// this is the public DNS name.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string MasterPublicDnsName { get => this._masterPublicDnsName; set => this._masterPublicDnsName = value; }

        /// <summary>Internal Acessors for Ec2InstanceAttribute</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributes Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterPropertiesInternal.Ec2InstanceAttribute { get => (this._ec2InstanceAttribute = this._ec2InstanceAttribute ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Ec2InstanceAttributes()); set { {_ec2InstanceAttribute = value;} } }

        /// <summary>Internal Acessors for InstanceCollectionType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceCollectionTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterPropertiesInternal.InstanceCollectionType { get => (this._instanceCollectionType = this._instanceCollectionType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceCollectionTypeEnumValue()); set { {_instanceCollectionType = value;} } }

        /// <summary>Internal Acessors for KerberosAttribute</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributes Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterPropertiesInternal.KerberosAttribute { get => (this._kerberosAttribute = this._kerberosAttribute ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KerberosAttributes()); set { {_kerberosAttribute = value;} } }

        /// <summary>Internal Acessors for RepoUpgradeOnBoot</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepoUpgradeOnBootEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterPropertiesInternal.RepoUpgradeOnBoot { get => (this._repoUpgradeOnBoot = this._repoUpgradeOnBoot ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RepoUpgradeOnBootEnumValue()); set { {_repoUpgradeOnBoot = value;} } }

        /// <summary>Internal Acessors for ScaleDownBehavior</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScaleDownBehaviorEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterPropertiesInternal.ScaleDownBehavior { get => (this._scaleDownBehavior = this._scaleDownBehavior ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ScaleDownBehaviorEnumValue()); set { {_scaleDownBehavior = value;} } }

        /// <summary>Internal Acessors for StateChangeReasonCode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonCodeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterPropertiesInternal.StateChangeReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).StateChangeReasonCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).StateChangeReasonCode = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1 Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterPropertiesInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStatus1()); set { {_status = value;} } }

        /// <summary>Internal Acessors for StatusState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterPropertiesInternal.StatusState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).State = value; }

        /// <summary>Internal Acessors for StatusStateChangeReason</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReason Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterPropertiesInternal.StatusStateChangeReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).StateChangeReason; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).StateChangeReason = value; }

        /// <summary>Internal Acessors for StatusTimeline</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimeline Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterPropertiesInternal.StatusTimeline { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).Timeline; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).Timeline = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// <p>The name of the cluster. This parameter can't contain the characters &lt;, &gt;, $, |, or ` (backtick).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="NormalizedInstanceHour" /> property.</summary>
        private int? _normalizedInstanceHour;

        /// <summary>
        /// <p>An approximation of the cost of the cluster, represented in m1.small/hours. This value is incremented one time for
        /// every hour an m1.small instance runs. Larger instances are weighted more, so an Amazon EC2 instance that is roughly four
        /// times more expensive would result in the normalized instance hours being incremented by four. This result is only an approximation
        /// and does not reflect the actual billing rate.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? NormalizedInstanceHour { get => this._normalizedInstanceHour; set => this._normalizedInstanceHour = value; }

        /// <summary>Backing field for <see cref="OSReleaseLabel" /> property.</summary>
        private string _oSReleaseLabel;

        /// <summary>
        /// <p>The Amazon Linux release specified in a cluster launch RunJobFlow request. If no Amazon Linux release was specified,
        /// the default Amazon Linux release is shown in the response.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OSReleaseLabel { get => this._oSReleaseLabel; set => this._oSReleaseLabel = value; }

        /// <summary>Backing field for <see cref="OutpostArn" /> property.</summary>
        private string _outpostArn;

        /// <summary>
        /// <p> The Amazon Resource Name (ARN) of the Outpost where the cluster is launched. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OutpostArn { get => this._outpostArn; set => this._outpostArn = value; }

        /// <summary>Backing field for <see cref="PlacementGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementGroupConfig[] _placementGroup;

        /// <summary><p>Placement group configured for an Amazon EMR cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementGroupConfig[] PlacementGroup { get => this._placementGroup; set => this._placementGroup = value; }

        /// <summary>Backing field for <see cref="ReleaseLabel" /> property.</summary>
        private string _releaseLabel;

        /// <summary>
        /// <p>The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster.
        /// Release labels are in the form <code>emr-x.x.x</code>, where x.x.x is an Amazon EMR release version such as <code>emr-5.14.0</code>.
        /// For more information about Amazon EMR release versions and included application versions and features, see <a href='https://docs.aws.amazon.com/emr/latest/ReleaseGuide/'>https://docs.aws.amazon.com/emr/latest/ReleaseGuide/</a>.
        /// The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use <code>AmiVersion</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ReleaseLabel { get => this._releaseLabel; set => this._releaseLabel = value; }

        /// <summary>Backing field for <see cref="RepoUpgradeOnBoot" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepoUpgradeOnBootEnumValue _repoUpgradeOnBoot;

        /// <summary>
        /// <p>Applies only when <code>CustomAmiID</code> is used. Specifies the type of updates that the Amazon Linux AMI package
        /// repositories apply when an instance boots using the AMI.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepoUpgradeOnBootEnumValue RepoUpgradeOnBoot { get => (this._repoUpgradeOnBoot = this._repoUpgradeOnBoot ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RepoUpgradeOnBootEnumValue()); set => this._repoUpgradeOnBoot = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RepoUpgradeOnBoot? RepoUpgradeOnBootValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepoUpgradeOnBootEnumValueInternal)RepoUpgradeOnBoot).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepoUpgradeOnBootEnumValueInternal)RepoUpgradeOnBoot).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RepoUpgradeOnBoot)""); }

        /// <summary>Backing field for <see cref="RequestedAmiVersion" /> property.</summary>
        private string _requestedAmiVersion;

        /// <summary><p>The AMI version requested for this cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RequestedAmiVersion { get => this._requestedAmiVersion; set => this._requestedAmiVersion = value; }

        /// <summary>Backing field for <see cref="RunningAmiVersion" /> property.</summary>
        private string _runningAmiVersion;

        /// <summary><p>The AMI version running on this cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RunningAmiVersion { get => this._runningAmiVersion; set => this._runningAmiVersion = value; }

        /// <summary>Backing field for <see cref="ScaleDownBehavior" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScaleDownBehaviorEnumValue _scaleDownBehavior;

        /// <summary>
        /// <p>The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group
        /// is resized. <code>TERMINATE_AT_INSTANCE_HOUR</code> indicates that Amazon EMR terminates nodes at the instance-hour boundary,
        /// regardless of when the request to terminate the instance was submitted. This option is only available with Amazon EMR
        /// 5.1.0 and later and is the default for clusters created using that version. <code>TERMINATE_AT_TASK_COMPLETION</code>
        /// indicates that Amazon EMR adds nodes to a deny list and drains tasks from nodes before terminating the Amazon EC2 instances,
        /// regardless of the instance-hour boundary. With either behavior, Amazon EMR removes the least active nodes first and blocks
        /// instance termination if it could lead to HDFS corruption. <code>TERMINATE_AT_TASK_COMPLETION</code> is available only
        /// in Amazon EMR releases 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScaleDownBehaviorEnumValue ScaleDownBehavior { get => (this._scaleDownBehavior = this._scaleDownBehavior ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ScaleDownBehaviorEnumValue()); set => this._scaleDownBehavior = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ScaleDownBehavior? ScaleDownBehaviorValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScaleDownBehaviorEnumValueInternal)ScaleDownBehavior).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScaleDownBehaviorEnumValueInternal)ScaleDownBehavior).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ScaleDownBehavior)""); }

        /// <summary>Backing field for <see cref="SecurityConfiguration" /> property.</summary>
        private string _securityConfiguration;

        /// <summary><p>The name of the security configuration applied to the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SecurityConfiguration { get => this._securityConfiguration; set => this._securityConfiguration = value; }

        /// <summary>Backing field for <see cref="ServiceRole" /> property.</summary>
        private string _serviceRole;

        /// <summary>
        /// <p>The IAM role that Amazon EMR assumes in order to access Amazon Web Services resources on your behalf.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ServiceRole { get => this._serviceRole; set => this._serviceRole = value; }

        /// <summary><p>The descriptive message for the state change reason.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string StateChangeReasonMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).StateChangeReasonMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).StateChangeReasonMessage = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState? StateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).StateValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).StateValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState)""); }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1 _status;

        /// <summary><p>The current status details about the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1 Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStatus1()); set => this._status = value; }

        /// <summary>
        /// <p>A list of tuples that provides information about the errors that caused a cluster to terminate. This structure can
        /// contain up to 10 different <code>ErrorDetail</code> tuples.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated[] StatusErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).ErrorDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).ErrorDetail = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="StepConcurrencyLevel" /> property.</summary>
        private int? _stepConcurrencyLevel;

        /// <summary><p>Specifies the number of steps that can be executed concurrently.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? StepConcurrencyLevel { get => this._stepConcurrencyLevel; set => this._stepConcurrencyLevel = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated32[] _tag;

        /// <summary><p>A list of tags associated with a cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated32[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="TerminationProtected" /> property.</summary>
        private bool? _terminationProtected;

        /// <summary>
        /// <p>Indicates whether Amazon EMR will lock the cluster to prevent the Amazon EC2 instances from being terminated by an
        /// API call or user intervention, or in the event of a cluster error.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? TerminationProtected { get => this._terminationProtected; set => this._terminationProtected = value; }

        /// <summary><p>The creation date and time of the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? TimelineCreationDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).TimelineCreationDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).TimelineCreationDateTime = value ?? default(global::System.DateTime); }

        /// <summary><p>The date and time when the cluster was terminated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? TimelineEndDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).TimelineEndDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).TimelineEndDateTime = value ?? default(global::System.DateTime); }

        /// <summary><p>The date and time when the cluster was ready to run steps.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? TimelineReadyDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).TimelineReadyDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)Status).TimelineReadyDateTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="UnhealthyNodeReplacement" /> property.</summary>
        private bool? _unhealthyNodeReplacement;

        /// <summary>
        /// <p>Indicates whether Amazon EMR should gracefully replace Amazon EC2 core instances that have degraded within the cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? UnhealthyNodeReplacement { get => this._unhealthyNodeReplacement; set => this._unhealthyNodeReplacement = value; }

        /// <summary>Backing field for <see cref="VisibleToAllUser" /> property.</summary>
        private bool? _visibleToAllUser;

        /// <summary>
        /// <p>Indicates whether the cluster is visible to IAM principals in the Amazon Web Services account associated with the cluster.
        /// When <code>true</code>, IAM principals in the Amazon Web Services account can perform Amazon EMR cluster actions on the
        /// cluster that their IAM policies allow. When <code>false</code>, only the IAM principal that created the cluster and the
        /// Amazon Web Services account root user can perform Amazon EMR actions, regardless of IAM permissions policies attached
        /// to other IAM principals.</p> <p>The default value is <code>true</code> if a value is not provided when creating a cluster
        /// using the Amazon EMR API <a>RunJobFlow</a> command, the CLI <a href='https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html'>create-cluster</a>
        /// command, or the Amazon Web Services Management Console.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? VisibleToAllUser { get => this._visibleToAllUser; set => this._visibleToAllUser = value; }

        /// <summary>Creates an new <see cref="AwsEmrClusterProperties" /> instance.</summary>
        public AwsEmrClusterProperties()
        {

        }
    }
    /// Definition of awsEmrCluster
    public partial interface IAwsEmrClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>The applications installed on this cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The applications installed on this cluster.</p>",
        SerializedName = @"applications",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplication) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplication[] Application { get; set; }
        /// <summary>
        /// <p>An IAM role for automatic scaling policies. The default role is <code>EMR_AutoScaling_DefaultRole</code>. The IAM role
        /// provides permissions that the automatic scaling feature requires to launch and terminate Amazon EC2 instances in an instance
        /// group.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An IAM role for automatic scaling policies. The default role is <code>EMR_AutoScaling_DefaultRole</code>. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate Amazon EC2 instances in an instance group.</p>",
        SerializedName = @"autoScalingRole",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalingRole { get; set; }
        /// <summary>
        /// <p>Specifies whether the cluster should terminate after completing all steps.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether the cluster should terminate after completing all steps.</p>",
        SerializedName = @"autoTerminate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoTerminate { get; set; }
        /// <summary><p>The Amazon Resource Name of the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name of the cluster.</p>",
        SerializedName = @"clusterArn",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterArn { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode? CodeValue { get; set; }
        /// <summary>
        /// <p>Applies only to Amazon EMR releases 4.x and later. The list of configurations that are supplied to the Amazon EMR cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Applies only to Amazon EMR releases 4.x and later. The list of configurations that are supplied to the Amazon EMR cluster.</p>",
        SerializedName = @"configurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfiguration[] Configuration { get; set; }
        /// <summary>
        /// <p>Available only in Amazon EMR releases 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI if the cluster
        /// uses a custom AMI.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Available only in Amazon EMR releases 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.</p>",
        SerializedName = @"customAmiId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomAmiId { get; set; }
        /// <summary>
        /// <p>The IOPS, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance. Available
        /// in Amazon EMR releases 6.15.0 and later.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IOPS, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance. Available in Amazon EMR releases 6.15.0 and later.</p>",
        SerializedName = @"ebsRootVolumeIops",
        PossibleTypes = new [] { typeof(int) })]
        int? EbsRootVolumeIop { get; set; }
        /// <summary>
        /// <p>The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance.
        /// Available in Amazon EMR releases 4.x and later.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance. Available in Amazon EMR releases 4.x and later.</p>",
        SerializedName = @"ebsRootVolumeSize",
        PossibleTypes = new [] { typeof(int) })]
        int? EbsRootVolumeSize { get; set; }
        /// <summary>
        /// <p>The throughput, in MiB/s, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance.
        /// Available in Amazon EMR releases 6.15.0 and later.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The throughput, in MiB/s, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance. Available in Amazon EMR releases 6.15.0 and later.</p>",
        SerializedName = @"ebsRootVolumeThroughput",
        PossibleTypes = new [] { typeof(int) })]
        int? EbsRootVolumeThroughput { get; set; }
        /// <summary><p>A list of additional Amazon EC2 security group IDs for the master node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A list of additional Amazon EC2 security group IDs for the master node.</p>",
        SerializedName = @"additionalMasterSecurityGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] Ec2InstanceAttributeAdditionalMasterSecurityGroup { get; set; }
        /// <summary>
        /// <p>A list of additional Amazon EC2 security group IDs for the core and task nodes.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A list of additional Amazon EC2 security group IDs for the core and task nodes.</p>",
        SerializedName = @"additionalSlaveSecurityGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] Ec2InstanceAttributeAdditionalSlaveSecurityGroup { get; set; }
        /// <summary><p>The Availability Zone in which the cluster will run. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Availability Zone in which the cluster will run. </p>",
        SerializedName = @"ec2AvailabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string Ec2InstanceAttributeEc2AvailabilityZone { get; set; }
        /// <summary>
        /// <p>The name of the Amazon EC2 key pair to use when connecting with SSH into the master node as a user named 'hadoop'.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the Amazon EC2 key pair to use when connecting with SSH into the master node as a user named 'hadoop'.</p>",
        SerializedName = @"ec2KeyName",
        PossibleTypes = new [] { typeof(string) })]
        string Ec2InstanceAttributeEc2KeyName { get; set; }
        /// <summary>
        /// <p>Set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify
        /// this value, and your account supports EC2-Classic, the cluster launches in EC2-Classic.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify this value, and your account supports EC2-Classic, the cluster launches in EC2-Classic.</p>",
        SerializedName = @"ec2SubnetId",
        PossibleTypes = new [] { typeof(string) })]
        string Ec2InstanceAttributeEc2SubnetId { get; set; }
        /// <summary><p>The identifier of the Amazon EC2 security group for the master node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The identifier of the Amazon EC2 security group for the master node.</p>",
        SerializedName = @"emrManagedMasterSecurityGroup",
        PossibleTypes = new [] { typeof(string) })]
        string Ec2InstanceAttributeEmrManagedMasterSecurityGroup { get; set; }
        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the core and task nodes.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The identifier of the Amazon EC2 security group for the core and task nodes.</p>",
        SerializedName = @"emrManagedSlaveSecurityGroup",
        PossibleTypes = new [] { typeof(string) })]
        string Ec2InstanceAttributeEmrManagedSlaveSecurityGroup { get; set; }
        /// <summary>
        /// <p>The IAM role that was specified when the cluster was launched. The Amazon EC2 instances of the cluster assume this
        /// role.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IAM role that was specified when the cluster was launched. The Amazon EC2 instances of the cluster assume this role.</p>",
        SerializedName = @"iamInstanceProfile",
        PossibleTypes = new [] { typeof(string) })]
        string Ec2InstanceAttributeIamInstanceProfile { get; set; }
        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies one or more Availability Zones in which to
        /// launch Amazon EC2 cluster instances when the EC2-Classic network configuration is supported. Amazon EMR chooses the Availability
        /// Zone with the best fit from among the list of <code>RequestedEc2AvailabilityZones</code>, and then launches all cluster
        /// instances within that Availability Zone. If you do not specify this value, Amazon EMR chooses the Availability Zone for
        /// you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Applies to clusters configured with the instance fleets option. Specifies one or more Availability Zones in which to launch Amazon EC2 cluster instances when the EC2-Classic network configuration is supported. Amazon EMR chooses the Availability Zone with the best fit from among the list of <code>RequestedEc2AvailabilityZones</code>, and then launches all cluster instances within that Availability Zone. If you do not specify this value, Amazon EMR chooses the Availability Zone for you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>",
        SerializedName = @"requestedEc2AvailabilityZones",
        PossibleTypes = new [] { typeof(string) })]
        string[] Ec2InstanceAttributeRequestedEc2AvailabilityZone { get; set; }
        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies the unique identifier of one or more Amazon
        /// EC2 subnets in which to launch Amazon EC2 cluster instances. Subnets must exist within the same VPC. Amazon EMR chooses
        /// the Amazon EC2 subnet with the best fit from among the list of <code>RequestedEc2SubnetIds</code>, and then launches all
        /// cluster instances within that Subnet. If this value is not specified, and the account and Region support EC2-Classic networks,
        /// the cluster launches instances in the EC2-Classic network and uses <code>RequestedEc2AvailabilityZones</code> instead
        /// of this setting. If EC2-Classic is not supported, and no Subnet is specified, Amazon EMR chooses the subnet for you. <code>RequestedEc2SubnetIDs</code>
        /// and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Applies to clusters configured with the instance fleets option. Specifies the unique identifier of one or more Amazon EC2 subnets in which to launch Amazon EC2 cluster instances. Subnets must exist within the same VPC. Amazon EMR chooses the Amazon EC2 subnet with the best fit from among the list of <code>RequestedEc2SubnetIds</code>, and then launches all cluster instances within that Subnet. If this value is not specified, and the account and Region support EC2-Classic networks, the cluster launches instances in the EC2-Classic network and uses <code>RequestedEc2AvailabilityZones</code> instead of this setting. If EC2-Classic is not supported, and no Subnet is specified, Amazon EMR chooses the subnet for you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>",
        SerializedName = @"requestedEc2SubnetIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] Ec2InstanceAttributeRequestedEc2SubnetId { get; set; }
        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.</p>",
        SerializedName = @"serviceAccessSecurityGroup",
        PossibleTypes = new [] { typeof(string) })]
        string Ec2InstanceAttributeServiceAccessSecurityGroup { get; set; }
        /// <summary><p>The unique identifier for the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The unique identifier for the cluster.</p>",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceCollectionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceCollectionType? InstanceCollectionTypeValue { get; set; }
        /// <summary><p>The Active Directory password for <code>ADDomainJoinUser</code>.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Active Directory password for <code>ADDomainJoinUser</code>.</p>",
        SerializedName = @"adDomainJoinPassword",
        PossibleTypes = new [] { typeof(string) })]
        string KerberoAttributeAdDomainJoinPassword { get; set; }
        /// <summary>
        /// <p>Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges
        /// to join resources to the domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges to join resources to the domain.</p>",
        SerializedName = @"adDomainJoinUser",
        PossibleTypes = new [] { typeof(string) })]
        string KerberoAttributeAdDomainJoinUser { get; set; }
        /// <summary>
        /// <p>Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password,
        /// which must be identical across realms.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password, which must be identical across realms.</p>",
        SerializedName = @"crossRealmTrustPrincipalPassword",
        PossibleTypes = new [] { typeof(string) })]
        string KerberoAttributeCrossRealmTrustPrincipalPassword { get; set; }
        /// <summary>
        /// <p>The password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos
        /// principals, password policies, and keytabs for the cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos principals, password policies, and keytabs for the cluster.</p>",
        SerializedName = @"kdcAdminPassword",
        PossibleTypes = new [] { typeof(string) })]
        string KerberoAttributeKdcAdminPassword { get; set; }
        /// <summary>
        /// <p>The name of the Kerberos realm to which all nodes in a cluster belong. For example, <code>EC2.INTERNAL</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the Kerberos realm to which all nodes in a cluster belong. For example, <code>EC2.INTERNAL</code>. </p>",
        SerializedName = @"realm",
        PossibleTypes = new [] { typeof(string) })]
        string KerberoAttributeRealm { get; set; }
        /// <summary>
        /// <p> The KMS key used for encrypting log files. This attribute is only available with Amazon EMR 5.30.0 and later, excluding
        /// Amazon EMR 6.0.0. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> The KMS key used for encrypting log files. This attribute is only available with Amazon EMR 5.30.0 and later, excluding Amazon EMR 6.0.0. </p>",
        SerializedName = @"logEncryptionKmsKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string LogEncryptionKmsKeyId { get; set; }
        /// <summary>
        /// <p>The path to the Amazon S3 location where logs for this cluster are stored.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The path to the Amazon S3 location where logs for this cluster are stored.</p>",
        SerializedName = @"logUri",
        PossibleTypes = new [] { typeof(string) })]
        string LogUri { get; set; }
        /// <summary>
        /// <p>The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet,
        /// this is the public DNS name.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.</p>",
        SerializedName = @"masterPublicDnsName",
        PossibleTypes = new [] { typeof(string) })]
        string MasterPublicDnsName { get; set; }
        /// <summary>
        /// <p>The name of the cluster. This parameter can't contain the characters &lt;, &gt;, $, |, or ` (backtick).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the cluster. This parameter can't contain the characters &lt;, &gt;, $, |, or ` (backtick).</p>",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// <p>An approximation of the cost of the cluster, represented in m1.small/hours. This value is incremented one time for
        /// every hour an m1.small instance runs. Larger instances are weighted more, so an Amazon EC2 instance that is roughly four
        /// times more expensive would result in the normalized instance hours being incremented by four. This result is only an approximation
        /// and does not reflect the actual billing rate.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An approximation of the cost of the cluster, represented in m1.small/hours. This value is incremented one time for every hour an m1.small instance runs. Larger instances are weighted more, so an Amazon EC2 instance that is roughly four times more expensive would result in the normalized instance hours being incremented by four. This result is only an approximation and does not reflect the actual billing rate.</p>",
        SerializedName = @"normalizedInstanceHours",
        PossibleTypes = new [] { typeof(int) })]
        int? NormalizedInstanceHour { get; set; }
        /// <summary>
        /// <p>The Amazon Linux release specified in a cluster launch RunJobFlow request. If no Amazon Linux release was specified,
        /// the default Amazon Linux release is shown in the response.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Linux release specified in a cluster launch RunJobFlow request. If no Amazon Linux release was specified, the default Amazon Linux release is shown in the response.</p>",
        SerializedName = @"osReleaseLabel",
        PossibleTypes = new [] { typeof(string) })]
        string OSReleaseLabel { get; set; }
        /// <summary>
        /// <p> The Amazon Resource Name (ARN) of the Outpost where the cluster is launched. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> The Amazon Resource Name (ARN) of the Outpost where the cluster is launched. </p>",
        SerializedName = @"outpostArn",
        PossibleTypes = new [] { typeof(string) })]
        string OutpostArn { get; set; }
        /// <summary><p>Placement group configured for an Amazon EMR cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Placement group configured for an Amazon EMR cluster.</p>",
        SerializedName = @"placementGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementGroupConfig) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementGroupConfig[] PlacementGroup { get; set; }
        /// <summary>
        /// <p>The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster.
        /// Release labels are in the form <code>emr-x.x.x</code>, where x.x.x is an Amazon EMR release version such as <code>emr-5.14.0</code>.
        /// For more information about Amazon EMR release versions and included application versions and features, see <a href='https://docs.aws.amazon.com/emr/latest/ReleaseGuide/'>https://docs.aws.amazon.com/emr/latest/ReleaseGuide/</a>.
        /// The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use <code>AmiVersion</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster. Release labels are in the form <code>emr-x.x.x</code>, where x.x.x is an Amazon EMR release version such as <code>emr-5.14.0</code>. For more information about Amazon EMR release versions and included application versions and features, see <a href='https://docs.aws.amazon.com/emr/latest/ReleaseGuide/'>https://docs.aws.amazon.com/emr/latest/ReleaseGuide/</a>. The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use <code>AmiVersion</code>.</p>",
        SerializedName = @"releaseLabel",
        PossibleTypes = new [] { typeof(string) })]
        string ReleaseLabel { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RepoUpgradeOnBoot) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RepoUpgradeOnBoot? RepoUpgradeOnBootValue { get; set; }
        /// <summary><p>The AMI version requested for this cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The AMI version requested for this cluster.</p>",
        SerializedName = @"requestedAmiVersion",
        PossibleTypes = new [] { typeof(string) })]
        string RequestedAmiVersion { get; set; }
        /// <summary><p>The AMI version running on this cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The AMI version running on this cluster.</p>",
        SerializedName = @"runningAmiVersion",
        PossibleTypes = new [] { typeof(string) })]
        string RunningAmiVersion { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ScaleDownBehavior) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ScaleDownBehavior? ScaleDownBehaviorValue { get; set; }
        /// <summary><p>The name of the security configuration applied to the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the security configuration applied to the cluster.</p>",
        SerializedName = @"securityConfiguration",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityConfiguration { get; set; }
        /// <summary>
        /// <p>The IAM role that Amazon EMR assumes in order to access Amazon Web Services resources on your behalf.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IAM role that Amazon EMR assumes in order to access Amazon Web Services resources on your behalf.</p>",
        SerializedName = @"serviceRole",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceRole { get; set; }
        /// <summary><p>The descriptive message for the state change reason.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The descriptive message for the state change reason.</p>",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string StateChangeReasonMessage { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState? StateValue { get; set; }
        /// <summary>
        /// <p>A list of tuples that provides information about the errors that caused a cluster to terminate. This structure can
        /// contain up to 10 different <code>ErrorDetail</code> tuples.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A list of tuples that provides information about the errors that caused a cluster to terminate. This structure can contain up to 10 different <code>ErrorDetail</code> tuples.</p>",
        SerializedName = @"errorDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated[] StatusErrorDetail { get; set; }
        /// <summary><p>Specifies the number of steps that can be executed concurrently.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the number of steps that can be executed concurrently.</p>",
        SerializedName = @"stepConcurrencyLevel",
        PossibleTypes = new [] { typeof(int) })]
        int? StepConcurrencyLevel { get; set; }
        /// <summary><p>A list of tags associated with a cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A list of tags associated with a cluster.</p>",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated32) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated32[] Tag { get; set; }
        /// <summary>
        /// <p>Indicates whether Amazon EMR will lock the cluster to prevent the Amazon EC2 instances from being terminated by an
        /// API call or user intervention, or in the event of a cluster error.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether Amazon EMR will lock the cluster to prevent the Amazon EC2 instances from being terminated by an API call or user intervention, or in the event of a cluster error.</p>",
        SerializedName = @"terminationProtected",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TerminationProtected { get; set; }
        /// <summary><p>The creation date and time of the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The creation date and time of the cluster.</p>",
        SerializedName = @"creationDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimelineCreationDateTime { get; set; }
        /// <summary><p>The date and time when the cluster was terminated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date and time when the cluster was terminated.</p>",
        SerializedName = @"endDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimelineEndDateTime { get; set; }
        /// <summary><p>The date and time when the cluster was ready to run steps.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date and time when the cluster was ready to run steps.</p>",
        SerializedName = @"readyDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimelineReadyDateTime { get; set; }
        /// <summary>
        /// <p>Indicates whether Amazon EMR should gracefully replace Amazon EC2 core instances that have degraded within the cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether Amazon EMR should gracefully replace Amazon EC2 core instances that have degraded within the cluster.</p>",
        SerializedName = @"unhealthyNodeReplacement",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UnhealthyNodeReplacement { get; set; }
        /// <summary>
        /// <p>Indicates whether the cluster is visible to IAM principals in the Amazon Web Services account associated with the cluster.
        /// When <code>true</code>, IAM principals in the Amazon Web Services account can perform Amazon EMR cluster actions on the
        /// cluster that their IAM policies allow. When <code>false</code>, only the IAM principal that created the cluster and the
        /// Amazon Web Services account root user can perform Amazon EMR actions, regardless of IAM permissions policies attached
        /// to other IAM principals.</p> <p>The default value is <code>true</code> if a value is not provided when creating a cluster
        /// using the Amazon EMR API <a>RunJobFlow</a> command, the CLI <a href='https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html'>create-cluster</a>
        /// command, or the Amazon Web Services Management Console.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the cluster is visible to IAM principals in the Amazon Web Services account associated with the cluster. When <code>true</code>, IAM principals in the Amazon Web Services account can perform Amazon EMR cluster actions on the cluster that their IAM policies allow. When <code>false</code>, only the IAM principal that created the cluster and the Amazon Web Services account root user can perform Amazon EMR actions, regardless of IAM permissions policies attached to other IAM principals.</p> <p>The default value is <code>true</code> if a value is not provided when creating a cluster using the Amazon EMR API <a>RunJobFlow</a> command, the CLI <a href='https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html'>create-cluster</a> command, or the Amazon Web Services Management Console.</p>",
        SerializedName = @"visibleToAllUsers",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VisibleToAllUser { get; set; }

    }
    /// Definition of awsEmrCluster
    internal partial interface IAwsEmrClusterPropertiesInternal

    {
        /// <summary><p>The applications installed on this cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplication[] Application { get; set; }
        /// <summary>
        /// <p>An IAM role for automatic scaling policies. The default role is <code>EMR_AutoScaling_DefaultRole</code>. The IAM role
        /// provides permissions that the automatic scaling feature requires to launch and terminate Amazon EC2 instances in an instance
        /// group.</p>
        /// </summary>
        string AutoScalingRole { get; set; }
        /// <summary>
        /// <p>Specifies whether the cluster should terminate after completing all steps.</p>
        /// </summary>
        bool? AutoTerminate { get; set; }
        /// <summary><p>The Amazon Resource Name of the cluster.</p></summary>
        string ClusterArn { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode? CodeValue { get; set; }
        /// <summary>
        /// <p>Applies only to Amazon EMR releases 4.x and later. The list of configurations that are supplied to the Amazon EMR cluster.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfiguration[] Configuration { get; set; }
        /// <summary>
        /// <p>Available only in Amazon EMR releases 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI if the cluster
        /// uses a custom AMI.</p>
        /// </summary>
        string CustomAmiId { get; set; }
        /// <summary>
        /// <p>The IOPS, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance. Available
        /// in Amazon EMR releases 6.15.0 and later.</p>
        /// </summary>
        int? EbsRootVolumeIop { get; set; }
        /// <summary>
        /// <p>The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance.
        /// Available in Amazon EMR releases 4.x and later.</p>
        /// </summary>
        int? EbsRootVolumeSize { get; set; }
        /// <summary>
        /// <p>The throughput, in MiB/s, of the Amazon EBS root device volume of the Linux AMI that is used for each Amazon EC2 instance.
        /// Available in Amazon EMR releases 6.15.0 and later.</p>
        /// </summary>
        int? EbsRootVolumeThroughput { get; set; }
        /// <summary>
        /// <p>Provides information about the Amazon EC2 instances in a cluster grouped by category. For example, key name, subnet
        /// ID, IAM instance profile, and so on.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributes Ec2InstanceAttribute { get; set; }
        /// <summary><p>A list of additional Amazon EC2 security group IDs for the master node.</p></summary>
        string[] Ec2InstanceAttributeAdditionalMasterSecurityGroup { get; set; }
        /// <summary>
        /// <p>A list of additional Amazon EC2 security group IDs for the core and task nodes.</p>
        /// </summary>
        string[] Ec2InstanceAttributeAdditionalSlaveSecurityGroup { get; set; }
        /// <summary><p>The Availability Zone in which the cluster will run. </p></summary>
        string Ec2InstanceAttributeEc2AvailabilityZone { get; set; }
        /// <summary>
        /// <p>The name of the Amazon EC2 key pair to use when connecting with SSH into the master node as a user named 'hadoop'.</p>
        /// </summary>
        string Ec2InstanceAttributeEc2KeyName { get; set; }
        /// <summary>
        /// <p>Set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify
        /// this value, and your account supports EC2-Classic, the cluster launches in EC2-Classic.</p>
        /// </summary>
        string Ec2InstanceAttributeEc2SubnetId { get; set; }
        /// <summary><p>The identifier of the Amazon EC2 security group for the master node.</p></summary>
        string Ec2InstanceAttributeEmrManagedMasterSecurityGroup { get; set; }
        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the core and task nodes.</p>
        /// </summary>
        string Ec2InstanceAttributeEmrManagedSlaveSecurityGroup { get; set; }
        /// <summary>
        /// <p>The IAM role that was specified when the cluster was launched. The Amazon EC2 instances of the cluster assume this
        /// role.</p>
        /// </summary>
        string Ec2InstanceAttributeIamInstanceProfile { get; set; }
        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies one or more Availability Zones in which to
        /// launch Amazon EC2 cluster instances when the EC2-Classic network configuration is supported. Amazon EMR chooses the Availability
        /// Zone with the best fit from among the list of <code>RequestedEc2AvailabilityZones</code>, and then launches all cluster
        /// instances within that Availability Zone. If you do not specify this value, Amazon EMR chooses the Availability Zone for
        /// you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        string[] Ec2InstanceAttributeRequestedEc2AvailabilityZone { get; set; }
        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies the unique identifier of one or more Amazon
        /// EC2 subnets in which to launch Amazon EC2 cluster instances. Subnets must exist within the same VPC. Amazon EMR chooses
        /// the Amazon EC2 subnet with the best fit from among the list of <code>RequestedEc2SubnetIds</code>, and then launches all
        /// cluster instances within that Subnet. If this value is not specified, and the account and Region support EC2-Classic networks,
        /// the cluster launches instances in the EC2-Classic network and uses <code>RequestedEc2AvailabilityZones</code> instead
        /// of this setting. If EC2-Classic is not supported, and no Subnet is specified, Amazon EMR chooses the subnet for you. <code>RequestedEc2SubnetIDs</code>
        /// and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        string[] Ec2InstanceAttributeRequestedEc2SubnetId { get; set; }
        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.</p>
        /// </summary>
        string Ec2InstanceAttributeServiceAccessSecurityGroup { get; set; }
        /// <summary><p>The unique identifier for the cluster.</p></summary>
        string Id { get; set; }
        /// <summary>
        /// <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p>
        /// </note> <p>The instance group configuration of the cluster. A value of <code>INSTANCE_GROUP</code> indicates a uniform
        /// instance group configuration. A value of <code>INSTANCE_FLEET</code> indicates an instance fleets configuration.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceCollectionTypeEnumValue InstanceCollectionType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceCollectionType? InstanceCollectionTypeValue { get; set; }
        /// <summary><p>The Active Directory password for <code>ADDomainJoinUser</code>.</p></summary>
        string KerberoAttributeAdDomainJoinPassword { get; set; }
        /// <summary>
        /// <p>Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges
        /// to join resources to the domain.</p>
        /// </summary>
        string KerberoAttributeAdDomainJoinUser { get; set; }
        /// <summary>
        /// <p>Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password,
        /// which must be identical across realms.</p>
        /// </summary>
        string KerberoAttributeCrossRealmTrustPrincipalPassword { get; set; }
        /// <summary>
        /// <p>The password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos
        /// principals, password policies, and keytabs for the cluster.</p>
        /// </summary>
        string KerberoAttributeKdcAdminPassword { get; set; }
        /// <summary>
        /// <p>The name of the Kerberos realm to which all nodes in a cluster belong. For example, <code>EC2.INTERNAL</code>. </p>
        /// </summary>
        string KerberoAttributeRealm { get; set; }
        /// <summary>
        /// <p>Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration. For more
        /// information see <a href='https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html'>Use Kerberos Authentication</a>
        /// in the <i>Amazon EMR Management Guide</i>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKerberosAttributes KerberosAttribute { get; set; }
        /// <summary>
        /// <p> The KMS key used for encrypting log files. This attribute is only available with Amazon EMR 5.30.0 and later, excluding
        /// Amazon EMR 6.0.0. </p>
        /// </summary>
        string LogEncryptionKmsKeyId { get; set; }
        /// <summary>
        /// <p>The path to the Amazon S3 location where logs for this cluster are stored.</p>
        /// </summary>
        string LogUri { get; set; }
        /// <summary>
        /// <p>The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet,
        /// this is the public DNS name.</p>
        /// </summary>
        string MasterPublicDnsName { get; set; }
        /// <summary>
        /// <p>The name of the cluster. This parameter can't contain the characters &lt;, &gt;, $, |, or ` (backtick).</p>
        /// </summary>
        string Name { get; set; }
        /// <summary>
        /// <p>An approximation of the cost of the cluster, represented in m1.small/hours. This value is incremented one time for
        /// every hour an m1.small instance runs. Larger instances are weighted more, so an Amazon EC2 instance that is roughly four
        /// times more expensive would result in the normalized instance hours being incremented by four. This result is only an approximation
        /// and does not reflect the actual billing rate.</p>
        /// </summary>
        int? NormalizedInstanceHour { get; set; }
        /// <summary>
        /// <p>The Amazon Linux release specified in a cluster launch RunJobFlow request. If no Amazon Linux release was specified,
        /// the default Amazon Linux release is shown in the response.</p>
        /// </summary>
        string OSReleaseLabel { get; set; }
        /// <summary>
        /// <p> The Amazon Resource Name (ARN) of the Outpost where the cluster is launched. </p>
        /// </summary>
        string OutpostArn { get; set; }
        /// <summary><p>Placement group configured for an Amazon EMR cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementGroupConfig[] PlacementGroup { get; set; }
        /// <summary>
        /// <p>The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster.
        /// Release labels are in the form <code>emr-x.x.x</code>, where x.x.x is an Amazon EMR release version such as <code>emr-5.14.0</code>.
        /// For more information about Amazon EMR release versions and included application versions and features, see <a href='https://docs.aws.amazon.com/emr/latest/ReleaseGuide/'>https://docs.aws.amazon.com/emr/latest/ReleaseGuide/</a>.
        /// The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use <code>AmiVersion</code>.</p>
        /// </summary>
        string ReleaseLabel { get; set; }
        /// <summary>
        /// <p>Applies only when <code>CustomAmiID</code> is used. Specifies the type of updates that the Amazon Linux AMI package
        /// repositories apply when an instance boots using the AMI.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepoUpgradeOnBootEnumValue RepoUpgradeOnBoot { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RepoUpgradeOnBoot? RepoUpgradeOnBootValue { get; set; }
        /// <summary><p>The AMI version requested for this cluster.</p></summary>
        string RequestedAmiVersion { get; set; }
        /// <summary><p>The AMI version running on this cluster.</p></summary>
        string RunningAmiVersion { get; set; }
        /// <summary>
        /// <p>The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group
        /// is resized. <code>TERMINATE_AT_INSTANCE_HOUR</code> indicates that Amazon EMR terminates nodes at the instance-hour boundary,
        /// regardless of when the request to terminate the instance was submitted. This option is only available with Amazon EMR
        /// 5.1.0 and later and is the default for clusters created using that version. <code>TERMINATE_AT_TASK_COMPLETION</code>
        /// indicates that Amazon EMR adds nodes to a deny list and drains tasks from nodes before terminating the Amazon EC2 instances,
        /// regardless of the instance-hour boundary. With either behavior, Amazon EMR removes the least active nodes first and blocks
        /// instance termination if it could lead to HDFS corruption. <code>TERMINATE_AT_TASK_COMPLETION</code> is available only
        /// in Amazon EMR releases 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScaleDownBehaviorEnumValue ScaleDownBehavior { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ScaleDownBehavior? ScaleDownBehaviorValue { get; set; }
        /// <summary><p>The name of the security configuration applied to the cluster.</p></summary>
        string SecurityConfiguration { get; set; }
        /// <summary>
        /// <p>The IAM role that Amazon EMR assumes in order to access Amazon Web Services resources on your behalf.</p>
        /// </summary>
        string ServiceRole { get; set; }
        /// <summary><p>The programmatic code for the state change reason.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonCodeEnumValue StateChangeReasonCode { get; set; }
        /// <summary><p>The descriptive message for the state change reason.</p></summary>
        string StateChangeReasonMessage { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState? StateValue { get; set; }
        /// <summary><p>The current status details about the cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1 Status { get; set; }
        /// <summary>
        /// <p>A list of tuples that provides information about the errors that caused a cluster to terminate. This structure can
        /// contain up to 10 different <code>ErrorDetail</code> tuples.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated[] StatusErrorDetail { get; set; }
        /// <summary><p>The current state of the cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateEnumValue StatusState { get; set; }
        /// <summary><p>The reason for the cluster status change.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReason StatusStateChangeReason { get; set; }
        /// <summary>
        /// <p>A timeline that represents the status of a cluster over the lifetime of the cluster.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimeline StatusTimeline { get; set; }
        /// <summary><p>Specifies the number of steps that can be executed concurrently.</p></summary>
        int? StepConcurrencyLevel { get; set; }
        /// <summary><p>A list of tags associated with a cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated32[] Tag { get; set; }
        /// <summary>
        /// <p>Indicates whether Amazon EMR will lock the cluster to prevent the Amazon EC2 instances from being terminated by an
        /// API call or user intervention, or in the event of a cluster error.</p>
        /// </summary>
        bool? TerminationProtected { get; set; }
        /// <summary><p>The creation date and time of the cluster.</p></summary>
        global::System.DateTime? TimelineCreationDateTime { get; set; }
        /// <summary><p>The date and time when the cluster was terminated.</p></summary>
        global::System.DateTime? TimelineEndDateTime { get; set; }
        /// <summary><p>The date and time when the cluster was ready to run steps.</p></summary>
        global::System.DateTime? TimelineReadyDateTime { get; set; }
        /// <summary>
        /// <p>Indicates whether Amazon EMR should gracefully replace Amazon EC2 core instances that have degraded within the cluster.</p>
        /// </summary>
        bool? UnhealthyNodeReplacement { get; set; }
        /// <summary>
        /// <p>Indicates whether the cluster is visible to IAM principals in the Amazon Web Services account associated with the cluster.
        /// When <code>true</code>, IAM principals in the Amazon Web Services account can perform Amazon EMR cluster actions on the
        /// cluster that their IAM policies allow. When <code>false</code>, only the IAM principal that created the cluster and the
        /// Amazon Web Services account root user can perform Amazon EMR actions, regardless of IAM permissions policies attached
        /// to other IAM principals.</p> <p>The default value is <code>true</code> if a value is not provided when creating a cluster
        /// using the Amazon EMR API <a>RunJobFlow</a> command, the CLI <a href='https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html'>create-cluster</a>
        /// command, or the Amazon Web Services Management Console.</p>
        /// </summary>
        bool? VisibleToAllUser { get; set; }

    }
}