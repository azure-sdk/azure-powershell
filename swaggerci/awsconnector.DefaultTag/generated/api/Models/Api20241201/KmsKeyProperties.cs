// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of KmsKey</summary>
    public partial class KmsKeyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKmsKeyProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKmsKeyPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).Arn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).Arn = value ?? null; }

        /// <summary>
        /// Skips ('bypasses') the key policy lockout safety check. The default value is false. Setting this value to true increases
        /// the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately. For more information,
        /// see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#prevent-unmanageable-key)
        /// in the *Developer Guide*. Use this parameter only when you intend to prevent the principal that is making the request
        /// from making a subsequent [PutKeyPolicy](https://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html) request
        /// on the KMS key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyBypassPolicyLockoutSafetyCheck { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).BypassPolicyLockoutSafetyCheck; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).BypassPolicyLockoutSafetyCheck = value ?? default(bool); }

        /// <summary>
        /// A description of the KMS key. Use a description that helps you to distinguish this KMS key from others in the account,
        /// such as its intended use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).Description = value ?? null; }

        /// <summary>
        /// Enables automatic rotation of the key material for the specified KMS key. By default, automatic key rotation is not enabled.
        /// KMS supports automatic rotation only for symmetric encryption KMS keys (``KeySpec`` = ``SYMMETRIC_DEFAULT``). For asymmetric
        /// KMS keys, HMAC KMS keys, and KMS keys with Origin ``EXTERNAL``, omit the ``EnableKeyRotation`` property or set it to ``false``.
        /// To enable automatic key rotation of the key material for a multi-Region KMS key, set ``EnableKeyRotation`` to ``true``
        /// on the primary key (created by using ``AWS::KMS::Key``). KMS copies the rotation status to all replica keys. For details,
        /// see [Rotating multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-manage.html#multi-region-rotate)
        /// in the *Developer Guide*. When you enable automatic rotation, KMS automatically creates new key material for the KMS key
        /// one year after the enable date and every year thereafter. KMS retains all key material until you delete the KMS key. For
        /// detailed information about automatic key rotation, see [Rotating KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html)
        /// in the *Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyEnableKeyRotation { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).EnableKeyRotation; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).EnableKeyRotation = value ?? default(bool); }

        /// <summary>
        /// Specifies whether the KMS key is enabled. Disabled KMS keys cannot be used in cryptographic operations. When ``Enabled``
        /// is ``true``, the *key state* of the KMS key is ``Enabled``. When ``Enabled`` is ``false``, the key state of the KMS key
        /// is ``Disabled``. The default value is ``true``. The actual key state of the KMS key might be affected by actions taken
        /// outside of CloudFormation, such as running the [EnableKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKey.html),
        /// [DisableKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html), or [ScheduleKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html)
        /// operations. For information about the key states of a KMS key, see [Key state: Effect on your KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html)
        /// in the *Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).Enabled = value ?? default(bool); }

        /// <summary>Property keyId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyKeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).KeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).KeyId = value ?? null; }

        /// <summary>
        /// The key policy to attach to the KMS key. If you provide a key policy, it must meet the following criteria: + The key policy
        /// must allow the caller to make a subsequent [PutKeyPolicy](https://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html)
        /// request on the KMS key. This reduces the risk that the KMS key becomes unmanageable. For more information, see [Default
        /// key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam)
        /// in the *Developer Guide*. (To omit this condition, set ``BypassPolicyLockoutSafetyCheck`` to true.) + Each statement in
        /// the key policy must contain one or more principals. The principals in the key policy must exist and be visible to KMS.
        /// When you create a new AWS principal (for example, an IAM user or role), you might need to enforce a delay before including
        /// the new principal in a key policy because the new principal might not be immediately visible to KMS. For more information,
        /// see [Changes that I make are not always immediately visible](https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency)
        /// in the *User Guide*. If you do not provide a key policy, KMS attaches a default key policy to the KMS key. For more information,
        /// see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) in
        /// the *Developer Guide*. A key policy document can include only the following characters: + Printable ASCII characters +
        /// Printable characters in the Basic Latin and Latin-1 Supplement character set + The tab (``\u0009``), line feed (``\u000A``),
        /// and carriage return (``\u000D``) special characters *Minimum*: ``1`` *Maximum*: ``32768``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesKeyPolicy AwPropertyKeyPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).KeyPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).KeyPolicy = value ?? null /* model class */; }

        /// <summary>
        /// Specifies the type of KMS key to create. The default value, ``SYMMETRIC_DEFAULT``, creates a KMS key with a 256-bit symmetric
        /// key for encryption and decryption. In China Regions, ``SYMMETRIC_DEFAULT`` creates a 128-bit symmetric key that uses SM4
        /// encryption. You can't change the ``KeySpec`` value after the KMS key is created. For help choosing a key spec for your
        /// KMS key, see [Choosing a KMS key type](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html) in
        /// the *Developer Guide*. The ``KeySpec`` property determines the type of key material in the KMS key and the algorithms
        /// that the KMS key supports. To further restrict the algorithms that can be used with the KMS key, use a condition key in
        /// its key policy or IAM policy. For more information, see [condition keys](https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms)
        /// in the *Developer Guide*. If you change the value of the ``KeySpec`` property on an existing KMS key, the update request
        /// fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html).
        /// This prevents you from accidentally deleting a KMS key by changing an immutable property value. [services that are integrated
        /// with](https://docs.aws.amazon.com/kms/features/#AWS_Service_Integration) use symmetric encryption KMS keys to protect
        /// your data. These services do not support encryption with asymmetric KMS keys. For help determining whether a KMS key is
        /// asymmetric, see [Identifying asymmetric KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/find-symm-asymm.html)
        /// in the *Developer Guide*. KMS supports the following key specs for KMS keys: + Symmetric encryption key (default) + ``SYMMETRIC_DEFAULT``
        /// (AES-256-GCM) + HMAC keys (symmetric) + ``HMAC_224`` + ``HMAC_256`` + ``HMAC_384`` + ``HMAC_512`` + Asymmetric RSA key
        /// pairs + ``RSA_2048`` + ``RSA_3072`` + ``RSA_4096`` + Asymmetric NIST-recommended elliptic curve key pairs + ``ECC_NIST_P256``
        /// (secp256r1) + ``ECC_NIST_P384`` (secp384r1) + ``ECC_NIST_P521`` (secp521r1) + Other asymmetric elliptic curve key pairs
        /// + ``ECC_SECG_P256K1`` (secp256k1), commonly used for cryptocurrencies. + SM2 key pairs (China Regions only) + ``SM2``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec? AwPropertyKeySpec { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).KeySpec; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).KeySpec = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec)""); }

        /// <summary>
        /// Determines the [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations)
        /// for which you can use the KMS key. The default value is ``ENCRYPT_DECRYPT``. This property is required for asymmetric
        /// KMS keys and HMAC KMS keys. You can't change the ``KeyUsage`` value after the KMS key is created. If you change the value
        /// of the ``KeyUsage`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy
        /// attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This
        /// prevents you from accidentally deleting a KMS key by changing an immutable property value. Select only one valid value.
        /// + For symmetric encryption KMS keys, omit the property or specify ``ENCRYPT_DECRYPT``. + For asymmetric KMS keys with
        /// RSA key material, specify ``ENCRYPT_DECRYPT`` or ``SIGN_VERIFY``. + For asymmetric KMS keys with ECC key material, specify
        /// ``SIGN_VERIFY``. + For asymmetric KMS keys with SM2 (China Regions only) key material, specify ``ENCRYPT_DECRYPT`` or
        /// ``SIGN_VERIFY``. + For HMAC KMS keys, specify ``GENERATE_VERIFY_MAC``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage? AwPropertyKeyUsage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).KeyUsage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).KeyUsage = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage)""); }

        /// <summary>
        /// Creates a multi-Region primary key that you can replicate in other AWS-Regions. You can't change the ``MultiRegion`` value
        /// after the KMS key is created. For a list of AWS-Regions in which multi-Region keys are supported, see [Multi-Region keys
        /// in](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html) in the **. If you change the
        /// value of the ``MultiRegion`` property on an existing KMS key, the update request fails, regardless of the value of the
        /// [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html).
        /// This prevents you from accidentally deleting a KMS key by changing an immutable property value. For a multi-Region key,
        /// set to this property to ``true``. For a single-Region key, omit this property or set it to ``false``. The default value
        /// is ``false``. *Multi-Region keys* are an KMS feature that lets you create multiple interoperable KMS keys in different
        /// AWS-Regions. Because these KMS keys have the same key ID, key material, and other metadata, you can use them to encrypt
        /// data in one AWS-Region and decrypt it in a different AWS-Region without making a cross-Region call or exposing the plaintext
        /// data. For more information, see [Multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html)
        /// in the *Developer Guide*. You can create a symmetric encryption, HMAC, or asymmetric multi-Region KMS key, and you can
        /// create a multi-Region key with imported key material. However, you cannot create a multi-Region key in a custom key store.
        /// To create a replica of this primary key in a different AWS-Region , create an [AWS::KMS::ReplicaKey](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html)
        /// resource in a CloudFormation stack in the replica Region. Specify the key ARN of this primary key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyMultiRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).MultiRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).MultiRegion = value ?? default(bool); }

        /// <summary>
        /// The source of the key material for the KMS key. You cannot change the origin after you create the KMS key. The default
        /// is ``AWS_KMS``, which means that KMS creates the key material. To [create a KMS key with no key material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-create-cmk.html)
        /// (for imported key material), set this value to ``EXTERNAL``. For more information about importing key material into KMS,
        /// see [Importing Key Material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html) in the *Developer
        /// Guide*. You can ignore ``ENABLED`` when Origin is ``EXTERNAL``. When a KMS key with Origin ``EXTERNAL`` is created, the
        /// key state is ``PENDING_IMPORT`` and ``ENABLED`` is ``false``. After you import the key material, ``ENABLED`` updated to
        /// ``true``. The KMS key can then be used for Cryptographic Operations. CFN doesn't support creating an ``Origin`` parameter
        /// of the ``AWS_CLOUDHSM`` or ``EXTERNAL_KEY_STORE`` values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Origin? AwPropertyOrigin { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).Origin; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).Origin = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Origin)""); }

        /// <summary>
        /// Specifies the number of days in the waiting period before KMS deletes a KMS key that has been removed from a CloudFormation
        /// stack. Enter a value between 7 and 30 days. The default value is 30 days. When you remove a KMS key from a CloudFormation
        /// stack, KMS schedules the KMS key for deletion and starts the mandatory waiting period. The ``PendingWindowInDays`` property
        /// determines the length of waiting period. During the waiting period, the key state of KMS key is ``Pending Deletion`` or
        /// ``Pending Replica Deletion``, which prevents the KMS key from being used in cryptographic operations. When the waiting
        /// period expires, KMS permanently deletes the KMS key. KMS will not delete a [multi-Region primary key](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html)
        /// that has replica keys. If you remove a multi-Region primary key from a CloudFormation stack, its key state changes to
        /// ``PendingReplicaDeletion`` so it cannot be replicated or used in cryptographic operations. This state can persist indefinitely.
        /// When the last of its replica keys is deleted, the key state of the primary key changes to ``PendingDeletion`` and the
        /// waiting period specified by ``PendingWindowInDays`` begins. When this waiting period expires, KMS deletes the primary
        /// key. For details, see [Deleting multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-delete.html)
        /// in the *Developer Guide*. You cannot use a CloudFormation template to cancel deletion of the KMS key after you remove
        /// it from the stack, regardless of the waiting period. If you specify a KMS key in your template, even one with the same
        /// name, CloudFormation creates a new KMS key. To cancel deletion of a KMS key, use the KMS console or the [CancelKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_CancelKeyDeletion.html)
        /// operation. For information about the ``Pending Deletion`` and ``Pending Replica Deletion`` key states, see [Key state:
        /// Effect on your KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html) in the *Developer Guide*.
        /// For more information about deleting KMS keys, see the [ScheduleKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html)
        /// operation in the *API Reference* and [Deleting KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html)
        /// in the *Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AwPropertyPendingWindowInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).PendingWindowInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).PendingWindowInDay = value ?? default(int); }

        /// <summary>Property rotationPeriodInDays</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AwPropertyRotationPeriodInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).RotationPeriodInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).RotationPeriodInDay = value ?? default(int); }

        /// <summary>
        /// Assigns one or more tags to the replica key. Tagging or untagging a KMS key can allow or deny permission to the KMS key.
        /// For details, see [ABAC for](https://docs.aws.amazon.com/kms/latest/developerguide/abac.html) in the *Developer Guide*.
        /// For information about tags in KMS, see [Tagging keys](https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html)
        /// in the *Developer Guide*. For information about tags in CloudFormation, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated36[] AwPropertyTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesInternal)AwsProperty).Tag = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="AwsAccountId" /> property.</summary>
        private string _awsAccountId;

        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsAccountId { get => this._awsAccountId; set => this._awsAccountId = value; }

        /// <summary>Backing field for <see cref="AwsProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyProperties _awsProperty;

        /// <summary>AWS Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyProperties AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsKmsKeyProperties()); set => this._awsProperty = value; }

        /// <summary>Backing field for <see cref="AwsRegion" /> property.</summary>
        private string _awsRegion;

        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsRegion { get => this._awsRegion; set => this._awsRegion = value; }

        /// <summary>Backing field for <see cref="AwsSourceSchema" /> property.</summary>
        private string _awsSourceSchema;

        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsSourceSchema { get => this._awsSourceSchema; set => this._awsSourceSchema = value; }

        /// <summary>Backing field for <see cref="AwsTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKmsKeyPropertiesAwsTags _awsTag;

        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKmsKeyPropertiesAwsTags AwsTag { get => (this._awsTag = this._awsTag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KmsKeyPropertiesAwsTags()); set => this._awsTag = value; }

        /// <summary>Internal Acessors for AwsProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKmsKeyPropertiesInternal.AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsKmsKeyProperties()); set { {_awsProperty = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKmsKeyPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicCloudConnectorsResourceId" /> property.</summary>
        private string _publicCloudConnectorsResourceId;

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudConnectorsResourceId { get => this._publicCloudConnectorsResourceId; set => this._publicCloudConnectorsResourceId = value; }

        /// <summary>Backing field for <see cref="PublicCloudResourceName" /> property.</summary>
        private string _publicCloudResourceName;

        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudResourceName { get => this._publicCloudResourceName; set => this._publicCloudResourceName = value; }

        /// <summary>Creates an new <see cref="KmsKeyProperties" /> instance.</summary>
        public KmsKeyProperties()
        {

        }
    }
    /// Definition of KmsKey
    public partial interface IKmsKeyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property arn",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyArn { get; set; }
        /// <summary>
        /// Skips ('bypasses') the key policy lockout safety check. The default value is false. Setting this value to true increases
        /// the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately. For more information,
        /// see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#prevent-unmanageable-key)
        /// in the *Developer Guide*. Use this parameter only when you intend to prevent the principal that is making the request
        /// from making a subsequent [PutKeyPolicy](https://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html) request
        /// on the KMS key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Skips ('bypasses') the key policy lockout safety check. The default value is false.  Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately. For more information, see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#prevent-unmanageable-key) in the *Developer Guide*.  Use this parameter only when you intend to prevent the principal that is making the request from making a subsequent [PutKeyPolicy](https://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html) request on the KMS key.",
        SerializedName = @"bypassPolicyLockoutSafetyCheck",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyBypassPolicyLockoutSafetyCheck { get; set; }
        /// <summary>
        /// A description of the KMS key. Use a description that helps you to distinguish this KMS key from others in the account,
        /// such as its intended use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A description of the KMS key. Use a description that helps you to distinguish this KMS key from others in the account, such as its intended use.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyDescription { get; set; }
        /// <summary>
        /// Enables automatic rotation of the key material for the specified KMS key. By default, automatic key rotation is not enabled.
        /// KMS supports automatic rotation only for symmetric encryption KMS keys (``KeySpec`` = ``SYMMETRIC_DEFAULT``). For asymmetric
        /// KMS keys, HMAC KMS keys, and KMS keys with Origin ``EXTERNAL``, omit the ``EnableKeyRotation`` property or set it to ``false``.
        /// To enable automatic key rotation of the key material for a multi-Region KMS key, set ``EnableKeyRotation`` to ``true``
        /// on the primary key (created by using ``AWS::KMS::Key``). KMS copies the rotation status to all replica keys. For details,
        /// see [Rotating multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-manage.html#multi-region-rotate)
        /// in the *Developer Guide*. When you enable automatic rotation, KMS automatically creates new key material for the KMS key
        /// one year after the enable date and every year thereafter. KMS retains all key material until you delete the KMS key. For
        /// detailed information about automatic key rotation, see [Rotating KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html)
        /// in the *Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enables automatic rotation of the key material for the specified KMS key. By default, automatic key rotation is not enabled.  KMS supports automatic rotation only for symmetric encryption KMS keys (``KeySpec`` = ``SYMMETRIC_DEFAULT``). For asymmetric KMS keys, HMAC KMS keys, and KMS keys with Origin ``EXTERNAL``, omit the ``EnableKeyRotation`` property or set it to ``false``. To enable automatic key rotation of the key material for a multi-Region KMS key, set ``EnableKeyRotation`` to ``true`` on the primary key (created by using ``AWS::KMS::Key``). KMS copies the rotation status to all replica keys. For details, see [Rotating multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-manage.html#multi-region-rotate) in the *Developer Guide*. When you enable automatic rotation, KMS automatically creates new key material for the KMS key one year after the enable date and every year thereafter. KMS retains all key material until you delete the KMS key. For detailed information about automatic key rotation, see [Rotating KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html) in the *Developer Guide*.",
        SerializedName = @"enableKeyRotation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyEnableKeyRotation { get; set; }
        /// <summary>
        /// Specifies whether the KMS key is enabled. Disabled KMS keys cannot be used in cryptographic operations. When ``Enabled``
        /// is ``true``, the *key state* of the KMS key is ``Enabled``. When ``Enabled`` is ``false``, the key state of the KMS key
        /// is ``Disabled``. The default value is ``true``. The actual key state of the KMS key might be affected by actions taken
        /// outside of CloudFormation, such as running the [EnableKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKey.html),
        /// [DisableKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html), or [ScheduleKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html)
        /// operations. For information about the key states of a KMS key, see [Key state: Effect on your KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html)
        /// in the *Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the KMS key is enabled. Disabled KMS keys cannot be used in cryptographic operations. When ``Enabled`` is ``true``, the *key state* of the KMS key is ``Enabled``. When ``Enabled`` is ``false``, the key state of the KMS key is ``Disabled``. The default value is ``true``. The actual key state of the KMS key might be affected by actions taken outside of CloudFormation, such as running the [EnableKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKey.html), [DisableKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html), or [ScheduleKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html) operations. For information about the key states of a KMS key, see [Key state: Effect on your KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html) in the *Developer Guide*.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyEnabled { get; set; }
        /// <summary>Property keyId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property keyId",
        SerializedName = @"keyId",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyKeyId { get; set; }
        /// <summary>
        /// The key policy to attach to the KMS key. If you provide a key policy, it must meet the following criteria: + The key policy
        /// must allow the caller to make a subsequent [PutKeyPolicy](https://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html)
        /// request on the KMS key. This reduces the risk that the KMS key becomes unmanageable. For more information, see [Default
        /// key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam)
        /// in the *Developer Guide*. (To omit this condition, set ``BypassPolicyLockoutSafetyCheck`` to true.) + Each statement in
        /// the key policy must contain one or more principals. The principals in the key policy must exist and be visible to KMS.
        /// When you create a new AWS principal (for example, an IAM user or role), you might need to enforce a delay before including
        /// the new principal in a key policy because the new principal might not be immediately visible to KMS. For more information,
        /// see [Changes that I make are not always immediately visible](https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency)
        /// in the *User Guide*. If you do not provide a key policy, KMS attaches a default key policy to the KMS key. For more information,
        /// see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) in
        /// the *Developer Guide*. A key policy document can include only the following characters: + Printable ASCII characters +
        /// Printable characters in the Basic Latin and Latin-1 Supplement character set + The tab (``\u0009``), line feed (``\u000A``),
        /// and carriage return (``\u000D``) special characters *Minimum*: ``1`` *Maximum*: ``32768``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The key policy to attach to the KMS key. If you provide a key policy, it must meet the following criteria:  +  The key policy must allow the caller to make a subsequent [PutKeyPolicy](https://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html) request on the KMS key. This reduces the risk that the KMS key becomes unmanageable. For more information, see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) in the *Developer Guide*. (To omit this condition, set ``BypassPolicyLockoutSafetyCheck`` to true.)  +  Each statement in the key policy must contain one or more principals. The principals in the key policy must exist and be visible to KMS. When you create a new AWS principal (for example, an IAM user or role), you might need to enforce a delay before including the new principal in a key policy because the new principal might not be immediately visible to KMS. For more information, see [Changes that I make are not always immediately visible](https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency) in the *User Guide*.   If you do not provide a key policy, KMS attaches a default key policy to the KMS key. For more information, see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) in the *Developer Guide*. A key policy document can include only the following characters:  +  Printable ASCII characters  +  Printable characters in the Basic Latin and Latin-1 Supplement character set  +  The tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``) special characters    *Minimum*: ``1``   *Maximum*: ``32768``",
        SerializedName = @"keyPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesKeyPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesKeyPolicy AwPropertyKeyPolicy { get; set; }
        /// <summary>
        /// Specifies the type of KMS key to create. The default value, ``SYMMETRIC_DEFAULT``, creates a KMS key with a 256-bit symmetric
        /// key for encryption and decryption. In China Regions, ``SYMMETRIC_DEFAULT`` creates a 128-bit symmetric key that uses SM4
        /// encryption. You can't change the ``KeySpec`` value after the KMS key is created. For help choosing a key spec for your
        /// KMS key, see [Choosing a KMS key type](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html) in
        /// the *Developer Guide*. The ``KeySpec`` property determines the type of key material in the KMS key and the algorithms
        /// that the KMS key supports. To further restrict the algorithms that can be used with the KMS key, use a condition key in
        /// its key policy or IAM policy. For more information, see [condition keys](https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms)
        /// in the *Developer Guide*. If you change the value of the ``KeySpec`` property on an existing KMS key, the update request
        /// fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html).
        /// This prevents you from accidentally deleting a KMS key by changing an immutable property value. [services that are integrated
        /// with](https://docs.aws.amazon.com/kms/features/#AWS_Service_Integration) use symmetric encryption KMS keys to protect
        /// your data. These services do not support encryption with asymmetric KMS keys. For help determining whether a KMS key is
        /// asymmetric, see [Identifying asymmetric KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/find-symm-asymm.html)
        /// in the *Developer Guide*. KMS supports the following key specs for KMS keys: + Symmetric encryption key (default) + ``SYMMETRIC_DEFAULT``
        /// (AES-256-GCM) + HMAC keys (symmetric) + ``HMAC_224`` + ``HMAC_256`` + ``HMAC_384`` + ``HMAC_512`` + Asymmetric RSA key
        /// pairs + ``RSA_2048`` + ``RSA_3072`` + ``RSA_4096`` + Asymmetric NIST-recommended elliptic curve key pairs + ``ECC_NIST_P256``
        /// (secp256r1) + ``ECC_NIST_P384`` (secp384r1) + ``ECC_NIST_P521`` (secp521r1) + Other asymmetric elliptic curve key pairs
        /// + ``ECC_SECG_P256K1`` (secp256k1), commonly used for cryptocurrencies. + SM2 key pairs (China Regions only) + ``SM2``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the type of KMS key to create. The default value, ``SYMMETRIC_DEFAULT``, creates a KMS key with a 256-bit symmetric key for encryption and decryption. In China Regions, ``SYMMETRIC_DEFAULT`` creates a 128-bit symmetric key that uses SM4 encryption. You can't change the ``KeySpec`` value after the KMS key is created. For help choosing a key spec for your KMS key, see [Choosing a KMS key type](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html) in the *Developer Guide*. The ``KeySpec`` property determines the type of key material in the KMS key and the algorithms that the KMS key supports. To further restrict the algorithms that can be used with the KMS key, use a condition key in its key policy or IAM policy. For more information, see [condition keys](https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms) in the *Developer Guide*.  If you change the value of the ``KeySpec`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This prevents you from accidentally deleting a KMS key by changing an immutable property value.    [services that are integrated with](https://docs.aws.amazon.com/kms/features/#AWS_Service_Integration) use symmetric encryption KMS keys to protect your data. These services do not support encryption with asymmetric KMS keys. For help determining whether a KMS key is asymmetric, see [Identifying asymmetric KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/find-symm-asymm.html) in the *Developer Guide*.   KMS supports the following key specs for KMS keys:  +  Symmetric encryption key (default)  +   ``SYMMETRIC_DEFAULT`` (AES-256-GCM)    +  HMAC keys (symmetric)  +   ``HMAC_224``   +   ``HMAC_256``   +   ``HMAC_384``   +   ``HMAC_512``     +  Asymmetric RSA key pairs  +   ``RSA_2048``   +   ``RSA_3072``   +   ``RSA_4096``     +  Asymmetric NIST-recommended elliptic curve key pairs  +   ``ECC_NIST_P256`` (secp256r1)  +   ``ECC_NIST_P384`` (secp384r1)  +   ``ECC_NIST_P521`` (secp521r1)    +  Other asymmetric elliptic curve key pairs  +   ``ECC_SECG_P256K1`` (secp256k1), commonly used for cryptocurrencies.    +  SM2 key pairs (China Regions only)  +   ``SM2``",
        SerializedName = @"keySpec",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec? AwPropertyKeySpec { get; set; }
        /// <summary>
        /// Determines the [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations)
        /// for which you can use the KMS key. The default value is ``ENCRYPT_DECRYPT``. This property is required for asymmetric
        /// KMS keys and HMAC KMS keys. You can't change the ``KeyUsage`` value after the KMS key is created. If you change the value
        /// of the ``KeyUsage`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy
        /// attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This
        /// prevents you from accidentally deleting a KMS key by changing an immutable property value. Select only one valid value.
        /// + For symmetric encryption KMS keys, omit the property or specify ``ENCRYPT_DECRYPT``. + For asymmetric KMS keys with
        /// RSA key material, specify ``ENCRYPT_DECRYPT`` or ``SIGN_VERIFY``. + For asymmetric KMS keys with ECC key material, specify
        /// ``SIGN_VERIFY``. + For asymmetric KMS keys with SM2 (China Regions only) key material, specify ``ENCRYPT_DECRYPT`` or
        /// ``SIGN_VERIFY``. + For HMAC KMS keys, specify ``GENERATE_VERIFY_MAC``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines the [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations) for which you can use the KMS key. The default value is ``ENCRYPT_DECRYPT``. This property is required for asymmetric KMS keys and HMAC KMS keys. You can't change the ``KeyUsage`` value after the KMS key is created.  If you change the value of the ``KeyUsage`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This prevents you from accidentally deleting a KMS key by changing an immutable property value.  Select only one valid value.  +  For symmetric encryption KMS keys, omit the property or specify ``ENCRYPT_DECRYPT``.  +  For asymmetric KMS keys with RSA key material, specify ``ENCRYPT_DECRYPT`` or ``SIGN_VERIFY``.  +  For asymmetric KMS keys with ECC key material, specify ``SIGN_VERIFY``.  +  For asymmetric KMS keys with SM2 (China Regions only) key material, specify ``ENCRYPT_DECRYPT`` or ``SIGN_VERIFY``.  +  For HMAC KMS keys, specify ``GENERATE_VERIFY_MAC``.",
        SerializedName = @"keyUsage",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage? AwPropertyKeyUsage { get; set; }
        /// <summary>
        /// Creates a multi-Region primary key that you can replicate in other AWS-Regions. You can't change the ``MultiRegion`` value
        /// after the KMS key is created. For a list of AWS-Regions in which multi-Region keys are supported, see [Multi-Region keys
        /// in](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html) in the **. If you change the
        /// value of the ``MultiRegion`` property on an existing KMS key, the update request fails, regardless of the value of the
        /// [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html).
        /// This prevents you from accidentally deleting a KMS key by changing an immutable property value. For a multi-Region key,
        /// set to this property to ``true``. For a single-Region key, omit this property or set it to ``false``. The default value
        /// is ``false``. *Multi-Region keys* are an KMS feature that lets you create multiple interoperable KMS keys in different
        /// AWS-Regions. Because these KMS keys have the same key ID, key material, and other metadata, you can use them to encrypt
        /// data in one AWS-Region and decrypt it in a different AWS-Region without making a cross-Region call or exposing the plaintext
        /// data. For more information, see [Multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html)
        /// in the *Developer Guide*. You can create a symmetric encryption, HMAC, or asymmetric multi-Region KMS key, and you can
        /// create a multi-Region key with imported key material. However, you cannot create a multi-Region key in a custom key store.
        /// To create a replica of this primary key in a different AWS-Region , create an [AWS::KMS::ReplicaKey](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html)
        /// resource in a CloudFormation stack in the replica Region. Specify the key ARN of this primary key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Creates a multi-Region primary key that you can replicate in other AWS-Regions. You can't change the ``MultiRegion`` value after the KMS key is created. For a list of AWS-Regions in which multi-Region keys are supported, see [Multi-Region keys in](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html) in the **.  If you change the value of the ``MultiRegion`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This prevents you from accidentally deleting a KMS key by changing an immutable property value.  For a multi-Region key, set to this property to ``true``. For a single-Region key, omit this property or set it to ``false``. The default value is ``false``.  *Multi-Region keys* are an KMS feature that lets you create multiple interoperable KMS keys in different AWS-Regions. Because these KMS keys have the same key ID, key material, and other metadata, you can use them to encrypt data in one AWS-Region and decrypt it in a different AWS-Region without making a cross-Region call or exposing the plaintext data. For more information, see [Multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html) in the *Developer Guide*. You can create a symmetric encryption, HMAC, or asymmetric multi-Region KMS key, and you can create a multi-Region key with imported key material. However, you cannot create a multi-Region key in a custom key store. To create a replica of this primary key in a different AWS-Region , create an [AWS::KMS::ReplicaKey](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html) resource in a CloudFormation stack in the replica Region. Specify the key ARN of this primary key.",
        SerializedName = @"multiRegion",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyMultiRegion { get; set; }
        /// <summary>
        /// The source of the key material for the KMS key. You cannot change the origin after you create the KMS key. The default
        /// is ``AWS_KMS``, which means that KMS creates the key material. To [create a KMS key with no key material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-create-cmk.html)
        /// (for imported key material), set this value to ``EXTERNAL``. For more information about importing key material into KMS,
        /// see [Importing Key Material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html) in the *Developer
        /// Guide*. You can ignore ``ENABLED`` when Origin is ``EXTERNAL``. When a KMS key with Origin ``EXTERNAL`` is created, the
        /// key state is ``PENDING_IMPORT`` and ``ENABLED`` is ``false``. After you import the key material, ``ENABLED`` updated to
        /// ``true``. The KMS key can then be used for Cryptographic Operations. CFN doesn't support creating an ``Origin`` parameter
        /// of the ``AWS_CLOUDHSM`` or ``EXTERNAL_KEY_STORE`` values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source of the key material for the KMS key. You cannot change the origin after you create the KMS key. The default is ``AWS_KMS``, which means that KMS creates the key material. To [create a KMS key with no key material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-create-cmk.html) (for imported key material), set this value to ``EXTERNAL``. For more information about importing key material into KMS, see [Importing Key Material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html) in the *Developer Guide*. You can ignore ``ENABLED`` when Origin is ``EXTERNAL``. When a KMS key with Origin ``EXTERNAL`` is created, the key state is ``PENDING_IMPORT`` and ``ENABLED`` is ``false``. After you import the key material, ``ENABLED`` updated to ``true``. The KMS key can then be used for Cryptographic Operations.    CFN doesn't support creating an ``Origin`` parameter of the ``AWS_CLOUDHSM`` or ``EXTERNAL_KEY_STORE`` values.",
        SerializedName = @"origin",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Origin) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Origin? AwPropertyOrigin { get; set; }
        /// <summary>
        /// Specifies the number of days in the waiting period before KMS deletes a KMS key that has been removed from a CloudFormation
        /// stack. Enter a value between 7 and 30 days. The default value is 30 days. When you remove a KMS key from a CloudFormation
        /// stack, KMS schedules the KMS key for deletion and starts the mandatory waiting period. The ``PendingWindowInDays`` property
        /// determines the length of waiting period. During the waiting period, the key state of KMS key is ``Pending Deletion`` or
        /// ``Pending Replica Deletion``, which prevents the KMS key from being used in cryptographic operations. When the waiting
        /// period expires, KMS permanently deletes the KMS key. KMS will not delete a [multi-Region primary key](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html)
        /// that has replica keys. If you remove a multi-Region primary key from a CloudFormation stack, its key state changes to
        /// ``PendingReplicaDeletion`` so it cannot be replicated or used in cryptographic operations. This state can persist indefinitely.
        /// When the last of its replica keys is deleted, the key state of the primary key changes to ``PendingDeletion`` and the
        /// waiting period specified by ``PendingWindowInDays`` begins. When this waiting period expires, KMS deletes the primary
        /// key. For details, see [Deleting multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-delete.html)
        /// in the *Developer Guide*. You cannot use a CloudFormation template to cancel deletion of the KMS key after you remove
        /// it from the stack, regardless of the waiting period. If you specify a KMS key in your template, even one with the same
        /// name, CloudFormation creates a new KMS key. To cancel deletion of a KMS key, use the KMS console or the [CancelKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_CancelKeyDeletion.html)
        /// operation. For information about the ``Pending Deletion`` and ``Pending Replica Deletion`` key states, see [Key state:
        /// Effect on your KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html) in the *Developer Guide*.
        /// For more information about deleting KMS keys, see the [ScheduleKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html)
        /// operation in the *API Reference* and [Deleting KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html)
        /// in the *Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of days in the waiting period before KMS deletes a KMS key that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days. When you remove a KMS key from a CloudFormation stack, KMS schedules the KMS key for deletion and starts the mandatory waiting period. The ``PendingWindowInDays`` property determines the length of waiting period. During the waiting period, the key state of KMS key is ``Pending Deletion`` or ``Pending Replica Deletion``, which prevents the KMS key from being used in cryptographic operations. When the waiting period expires, KMS permanently deletes the KMS key.  KMS will not delete a [multi-Region primary key](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html) that has replica keys. If you remove a multi-Region primary key from a CloudFormation stack, its key state changes to ``PendingReplicaDeletion`` so it cannot be replicated or used in cryptographic operations. This state can persist indefinitely. When the last of its replica keys is deleted, the key state of the primary key changes to ``PendingDeletion`` and the waiting period specified by ``PendingWindowInDays`` begins. When this waiting period expires, KMS deletes the primary key. For details, see [Deleting multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-delete.html) in the *Developer Guide*. You cannot use a CloudFormation template to cancel deletion of the KMS key after you remove it from the stack, regardless of the waiting period. If you specify a KMS key in your template, even one with the same name, CloudFormation creates a new KMS key. To cancel deletion of a KMS key, use the KMS console or the [CancelKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_CancelKeyDeletion.html) operation. For information about the ``Pending Deletion`` and ``Pending Replica Deletion`` key states, see [Key state: Effect on your KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html) in the *Developer Guide*. For more information about deleting KMS keys, see the [ScheduleKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html) operation in the *API Reference* and [Deleting KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html) in the *Developer Guide*.",
        SerializedName = @"pendingWindowInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? AwPropertyPendingWindowInDay { get; set; }
        /// <summary>Property rotationPeriodInDays</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property rotationPeriodInDays",
        SerializedName = @"rotationPeriodInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? AwPropertyRotationPeriodInDay { get; set; }
        /// <summary>
        /// Assigns one or more tags to the replica key. Tagging or untagging a KMS key can allow or deny permission to the KMS key.
        /// For details, see [ABAC for](https://docs.aws.amazon.com/kms/latest/developerguide/abac.html) in the *Developer Guide*.
        /// For information about tags in KMS, see [Tagging keys](https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html)
        /// in the *Developer Guide*. For information about tags in CloudFormation, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Assigns one or more tags to the replica key.  Tagging or untagging a KMS key can allow or deny permission to the KMS key. For details, see [ABAC for](https://docs.aws.amazon.com/kms/latest/developerguide/abac.html) in the *Developer Guide*.  For information about tags in KMS, see [Tagging keys](https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html) in the *Developer Guide*. For information about tags in CloudFormation, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated36) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated36[] AwPropertyTag { get; set; }
        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AwsAccountId { get; set; }
        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKmsKeyPropertiesAwsTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKmsKeyPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudResourceName { get; set; }

    }
    /// Definition of KmsKey
    internal partial interface IKmsKeyPropertiesInternal

    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        string Arn { get; set; }
        /// <summary>Property arn</summary>
        string AwPropertyArn { get; set; }
        /// <summary>
        /// Skips ('bypasses') the key policy lockout safety check. The default value is false. Setting this value to true increases
        /// the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately. For more information,
        /// see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#prevent-unmanageable-key)
        /// in the *Developer Guide*. Use this parameter only when you intend to prevent the principal that is making the request
        /// from making a subsequent [PutKeyPolicy](https://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html) request
        /// on the KMS key.
        /// </summary>
        bool? AwPropertyBypassPolicyLockoutSafetyCheck { get; set; }
        /// <summary>
        /// A description of the KMS key. Use a description that helps you to distinguish this KMS key from others in the account,
        /// such as its intended use.
        /// </summary>
        string AwPropertyDescription { get; set; }
        /// <summary>
        /// Enables automatic rotation of the key material for the specified KMS key. By default, automatic key rotation is not enabled.
        /// KMS supports automatic rotation only for symmetric encryption KMS keys (``KeySpec`` = ``SYMMETRIC_DEFAULT``). For asymmetric
        /// KMS keys, HMAC KMS keys, and KMS keys with Origin ``EXTERNAL``, omit the ``EnableKeyRotation`` property or set it to ``false``.
        /// To enable automatic key rotation of the key material for a multi-Region KMS key, set ``EnableKeyRotation`` to ``true``
        /// on the primary key (created by using ``AWS::KMS::Key``). KMS copies the rotation status to all replica keys. For details,
        /// see [Rotating multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-manage.html#multi-region-rotate)
        /// in the *Developer Guide*. When you enable automatic rotation, KMS automatically creates new key material for the KMS key
        /// one year after the enable date and every year thereafter. KMS retains all key material until you delete the KMS key. For
        /// detailed information about automatic key rotation, see [Rotating KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html)
        /// in the *Developer Guide*.
        /// </summary>
        bool? AwPropertyEnableKeyRotation { get; set; }
        /// <summary>
        /// Specifies whether the KMS key is enabled. Disabled KMS keys cannot be used in cryptographic operations. When ``Enabled``
        /// is ``true``, the *key state* of the KMS key is ``Enabled``. When ``Enabled`` is ``false``, the key state of the KMS key
        /// is ``Disabled``. The default value is ``true``. The actual key state of the KMS key might be affected by actions taken
        /// outside of CloudFormation, such as running the [EnableKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKey.html),
        /// [DisableKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html), or [ScheduleKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html)
        /// operations. For information about the key states of a KMS key, see [Key state: Effect on your KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html)
        /// in the *Developer Guide*.
        /// </summary>
        bool? AwPropertyEnabled { get; set; }
        /// <summary>Property keyId</summary>
        string AwPropertyKeyId { get; set; }
        /// <summary>
        /// The key policy to attach to the KMS key. If you provide a key policy, it must meet the following criteria: + The key policy
        /// must allow the caller to make a subsequent [PutKeyPolicy](https://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html)
        /// request on the KMS key. This reduces the risk that the KMS key becomes unmanageable. For more information, see [Default
        /// key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam)
        /// in the *Developer Guide*. (To omit this condition, set ``BypassPolicyLockoutSafetyCheck`` to true.) + Each statement in
        /// the key policy must contain one or more principals. The principals in the key policy must exist and be visible to KMS.
        /// When you create a new AWS principal (for example, an IAM user or role), you might need to enforce a delay before including
        /// the new principal in a key policy because the new principal might not be immediately visible to KMS. For more information,
        /// see [Changes that I make are not always immediately visible](https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency)
        /// in the *User Guide*. If you do not provide a key policy, KMS attaches a default key policy to the KMS key. For more information,
        /// see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) in
        /// the *Developer Guide*. A key policy document can include only the following characters: + Printable ASCII characters +
        /// Printable characters in the Basic Latin and Latin-1 Supplement character set + The tab (``\u0009``), line feed (``\u000A``),
        /// and carriage return (``\u000D``) special characters *Minimum*: ``1`` *Maximum*: ``32768``
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyPropertiesKeyPolicy AwPropertyKeyPolicy { get; set; }
        /// <summary>
        /// Specifies the type of KMS key to create. The default value, ``SYMMETRIC_DEFAULT``, creates a KMS key with a 256-bit symmetric
        /// key for encryption and decryption. In China Regions, ``SYMMETRIC_DEFAULT`` creates a 128-bit symmetric key that uses SM4
        /// encryption. You can't change the ``KeySpec`` value after the KMS key is created. For help choosing a key spec for your
        /// KMS key, see [Choosing a KMS key type](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html) in
        /// the *Developer Guide*. The ``KeySpec`` property determines the type of key material in the KMS key and the algorithms
        /// that the KMS key supports. To further restrict the algorithms that can be used with the KMS key, use a condition key in
        /// its key policy or IAM policy. For more information, see [condition keys](https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms)
        /// in the *Developer Guide*. If you change the value of the ``KeySpec`` property on an existing KMS key, the update request
        /// fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html).
        /// This prevents you from accidentally deleting a KMS key by changing an immutable property value. [services that are integrated
        /// with](https://docs.aws.amazon.com/kms/features/#AWS_Service_Integration) use symmetric encryption KMS keys to protect
        /// your data. These services do not support encryption with asymmetric KMS keys. For help determining whether a KMS key is
        /// asymmetric, see [Identifying asymmetric KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/find-symm-asymm.html)
        /// in the *Developer Guide*. KMS supports the following key specs for KMS keys: + Symmetric encryption key (default) + ``SYMMETRIC_DEFAULT``
        /// (AES-256-GCM) + HMAC keys (symmetric) + ``HMAC_224`` + ``HMAC_256`` + ``HMAC_384`` + ``HMAC_512`` + Asymmetric RSA key
        /// pairs + ``RSA_2048`` + ``RSA_3072`` + ``RSA_4096`` + Asymmetric NIST-recommended elliptic curve key pairs + ``ECC_NIST_P256``
        /// (secp256r1) + ``ECC_NIST_P384`` (secp384r1) + ``ECC_NIST_P521`` (secp521r1) + Other asymmetric elliptic curve key pairs
        /// + ``ECC_SECG_P256K1`` (secp256k1), commonly used for cryptocurrencies. + SM2 key pairs (China Regions only) + ``SM2``
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec? AwPropertyKeySpec { get; set; }
        /// <summary>
        /// Determines the [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations)
        /// for which you can use the KMS key. The default value is ``ENCRYPT_DECRYPT``. This property is required for asymmetric
        /// KMS keys and HMAC KMS keys. You can't change the ``KeyUsage`` value after the KMS key is created. If you change the value
        /// of the ``KeyUsage`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy
        /// attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This
        /// prevents you from accidentally deleting a KMS key by changing an immutable property value. Select only one valid value.
        /// + For symmetric encryption KMS keys, omit the property or specify ``ENCRYPT_DECRYPT``. + For asymmetric KMS keys with
        /// RSA key material, specify ``ENCRYPT_DECRYPT`` or ``SIGN_VERIFY``. + For asymmetric KMS keys with ECC key material, specify
        /// ``SIGN_VERIFY``. + For asymmetric KMS keys with SM2 (China Regions only) key material, specify ``ENCRYPT_DECRYPT`` or
        /// ``SIGN_VERIFY``. + For HMAC KMS keys, specify ``GENERATE_VERIFY_MAC``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage? AwPropertyKeyUsage { get; set; }
        /// <summary>
        /// Creates a multi-Region primary key that you can replicate in other AWS-Regions. You can't change the ``MultiRegion`` value
        /// after the KMS key is created. For a list of AWS-Regions in which multi-Region keys are supported, see [Multi-Region keys
        /// in](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html) in the **. If you change the
        /// value of the ``MultiRegion`` property on an existing KMS key, the update request fails, regardless of the value of the
        /// [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html).
        /// This prevents you from accidentally deleting a KMS key by changing an immutable property value. For a multi-Region key,
        /// set to this property to ``true``. For a single-Region key, omit this property or set it to ``false``. The default value
        /// is ``false``. *Multi-Region keys* are an KMS feature that lets you create multiple interoperable KMS keys in different
        /// AWS-Regions. Because these KMS keys have the same key ID, key material, and other metadata, you can use them to encrypt
        /// data in one AWS-Region and decrypt it in a different AWS-Region without making a cross-Region call or exposing the plaintext
        /// data. For more information, see [Multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html)
        /// in the *Developer Guide*. You can create a symmetric encryption, HMAC, or asymmetric multi-Region KMS key, and you can
        /// create a multi-Region key with imported key material. However, you cannot create a multi-Region key in a custom key store.
        /// To create a replica of this primary key in a different AWS-Region , create an [AWS::KMS::ReplicaKey](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html)
        /// resource in a CloudFormation stack in the replica Region. Specify the key ARN of this primary key.
        /// </summary>
        bool? AwPropertyMultiRegion { get; set; }
        /// <summary>
        /// The source of the key material for the KMS key. You cannot change the origin after you create the KMS key. The default
        /// is ``AWS_KMS``, which means that KMS creates the key material. To [create a KMS key with no key material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-create-cmk.html)
        /// (for imported key material), set this value to ``EXTERNAL``. For more information about importing key material into KMS,
        /// see [Importing Key Material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html) in the *Developer
        /// Guide*. You can ignore ``ENABLED`` when Origin is ``EXTERNAL``. When a KMS key with Origin ``EXTERNAL`` is created, the
        /// key state is ``PENDING_IMPORT`` and ``ENABLED`` is ``false``. After you import the key material, ``ENABLED`` updated to
        /// ``true``. The KMS key can then be used for Cryptographic Operations. CFN doesn't support creating an ``Origin`` parameter
        /// of the ``AWS_CLOUDHSM`` or ``EXTERNAL_KEY_STORE`` values.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Origin? AwPropertyOrigin { get; set; }
        /// <summary>
        /// Specifies the number of days in the waiting period before KMS deletes a KMS key that has been removed from a CloudFormation
        /// stack. Enter a value between 7 and 30 days. The default value is 30 days. When you remove a KMS key from a CloudFormation
        /// stack, KMS schedules the KMS key for deletion and starts the mandatory waiting period. The ``PendingWindowInDays`` property
        /// determines the length of waiting period. During the waiting period, the key state of KMS key is ``Pending Deletion`` or
        /// ``Pending Replica Deletion``, which prevents the KMS key from being used in cryptographic operations. When the waiting
        /// period expires, KMS permanently deletes the KMS key. KMS will not delete a [multi-Region primary key](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html)
        /// that has replica keys. If you remove a multi-Region primary key from a CloudFormation stack, its key state changes to
        /// ``PendingReplicaDeletion`` so it cannot be replicated or used in cryptographic operations. This state can persist indefinitely.
        /// When the last of its replica keys is deleted, the key state of the primary key changes to ``PendingDeletion`` and the
        /// waiting period specified by ``PendingWindowInDays`` begins. When this waiting period expires, KMS deletes the primary
        /// key. For details, see [Deleting multi-Region keys](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-delete.html)
        /// in the *Developer Guide*. You cannot use a CloudFormation template to cancel deletion of the KMS key after you remove
        /// it from the stack, regardless of the waiting period. If you specify a KMS key in your template, even one with the same
        /// name, CloudFormation creates a new KMS key. To cancel deletion of a KMS key, use the KMS console or the [CancelKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_CancelKeyDeletion.html)
        /// operation. For information about the ``Pending Deletion`` and ``Pending Replica Deletion`` key states, see [Key state:
        /// Effect on your KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html) in the *Developer Guide*.
        /// For more information about deleting KMS keys, see the [ScheduleKeyDeletion](https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html)
        /// operation in the *API Reference* and [Deleting KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html)
        /// in the *Developer Guide*.
        /// </summary>
        int? AwPropertyPendingWindowInDay { get; set; }
        /// <summary>Property rotationPeriodInDays</summary>
        int? AwPropertyRotationPeriodInDay { get; set; }
        /// <summary>
        /// Assigns one or more tags to the replica key. Tagging or untagging a KMS key can allow or deny permission to the KMS key.
        /// For details, see [ABAC for](https://docs.aws.amazon.com/kms/latest/developerguide/abac.html) in the *Developer Guide*.
        /// For information about tags in KMS, see [Tagging keys](https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html)
        /// in the *Developer Guide*. For information about tags in CloudFormation, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated36[] AwPropertyTag { get; set; }
        /// <summary>AWS Account ID</summary>
        string AwsAccountId { get; set; }
        /// <summary>AWS Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsKmsKeyProperties AwsProperty { get; set; }
        /// <summary>AWS Region</summary>
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKmsKeyPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        string PublicCloudResourceName { get; set; }

    }
}