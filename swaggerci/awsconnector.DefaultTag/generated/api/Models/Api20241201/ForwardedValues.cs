// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ForwardedValues</summary>
    public partial class ForwardedValues :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardedValues,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardedValuesInternal
    {

        /// <summary>Backing field for <see cref="Cooky" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICookies _cooky;

        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache
        /// key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. A complex type that specifies whether you want CloudFront to forward cookies
        /// to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront
        /// Forwards, Caches, and Logs Cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html) in
        /// the *Amazon CloudFront Developer Guide*. This field is deprecated. We recommend that you use a cache policy or an origin
        /// request policy instead of this field. If you want to include cookies in the cache key, use a cache policy. For more information,
        /// see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache
        /// key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. A complex type that specifies whether you want CloudFront to forward cookies
        /// to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront
        /// Forwards, Caches, and Logs Cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html) in
        /// the *Amazon CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICookies Cooky { get => (this._cooky = this._cooky ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Cookies()); set => this._cooky = value; }

        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache
        /// key, use origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. Specifies which cookies to forward to the origin for this cache behavior:
        /// all, none, or the list of cookies specified in the ``WhitelistedNames`` complex type. Amazon S3 doesn't process cookies.
        /// When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the ``Forward`` element.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CookyForward { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICookiesInternal)Cooky).Forward; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICookiesInternal)Cooky).Forward = value ?? null; }

        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache
        /// key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] CookyWhitelistedName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICookiesInternal)Cooky).WhitelistedName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICookiesInternal)Cooky).WhitelistedName = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Header" /> property.</summary>
        private string[] _header;

        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include headers in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send headers to the origin but not include them in the cache
        /// key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. A complex type that specifies the ``Headers``, if any, that you want CloudFront
        /// to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also
        /// caches separate versions of a specified object that is based on the header values in viewer requests. For more information,
        /// see [Caching Content Based on Request Headers](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Header { get => this._header; set => this._header = value; }

        /// <summary>Internal Acessors for Cooky</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICookies Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardedValuesInternal.Cooky { get => (this._cooky = this._cooky ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Cookies()); set { {_cooky = value;} } }

        /// <summary>Backing field for <see cref="QueryString" /> property.</summary>
        private bool? _queryString;

        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send query strings to the origin but not include them in the
        /// cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. Indicates whether you want CloudFront to forward query strings to the origin
        /// that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends
        /// on the value of ``QueryString`` and on the values that you specify for ``QueryStringCacheKeys``, if any: If you specify
        /// true for ``QueryString`` and you don't specify any values for ``QueryStringCacheKeys``, CloudFront forwards all query
        /// string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters
        /// and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.
        /// If you specify true for ``QueryString`` and you specify one or more values for ``QueryStringCacheKeys``, CloudFront forwards
        /// all query string parameters to the origin, but it only caches based on the query string parameters that you specify. If
        /// you specify false for ``QueryString``, CloudFront doesn't forward any query string parameters to the origin, and doesn't
        /// cache based on query string parameters. For more information, see [Configuring CloudFront to Cache Based on Query String
        /// Parameters](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html) in the *Amazon
        /// CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? QueryString { get => this._queryString; set => this._queryString = value; }

        /// <summary>Backing field for <see cref="QueryStringCacheKey" /> property.</summary>
        private string[] _queryStringCacheKey;

        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send query strings to the origin but not include them in the
        /// cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. A complex type that contains information about the query string parameters
        /// that you want CloudFront to use for caching for this cache behavior.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] QueryStringCacheKey { get => this._queryStringCacheKey; set => this._queryStringCacheKey = value; }

        /// <summary>Creates an new <see cref="ForwardedValues" /> instance.</summary>
        public ForwardedValues()
        {

        }
    }
    /// Definition of ForwardedValues
    public partial interface IForwardedValues :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache
        /// key, use origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. Specifies which cookies to forward to the origin for this cache behavior:
        /// all, none, or the list of cookies specified in the ``WhitelistedNames`` complex type. Amazon S3 doesn't process cookies.
        /// When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the ``Forward`` element.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*. Specifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the ``WhitelistedNames`` complex type. Amazon S3 doesn't process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the ``Forward`` element.",
        SerializedName = @"forward",
        PossibleTypes = new [] { typeof(string) })]
        string CookyForward { get; set; }
        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache
        /// key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.",
        SerializedName = @"whitelistedNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] CookyWhitelistedName { get; set; }
        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include headers in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send headers to the origin but not include them in the cache
        /// key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. A complex type that specifies the ``Headers``, if any, that you want CloudFront
        /// to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also
        /// caches separate versions of a specified object that is based on the header values in viewer requests. For more information,
        /// see [Caching Content Based on Request Headers](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. If you want to include headers in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*. If you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*. A complex type that specifies the ``Headers``, if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests. For more information, see [Caching Content Based on Request Headers](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html) in the *Amazon CloudFront Developer Guide*.",
        SerializedName = @"headers",
        PossibleTypes = new [] { typeof(string) })]
        string[] Header { get; set; }
        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send query strings to the origin but not include them in the
        /// cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. Indicates whether you want CloudFront to forward query strings to the origin
        /// that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends
        /// on the value of ``QueryString`` and on the values that you specify for ``QueryStringCacheKeys``, if any: If you specify
        /// true for ``QueryString`` and you don't specify any values for ``QueryStringCacheKeys``, CloudFront forwards all query
        /// string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters
        /// and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.
        /// If you specify true for ``QueryString`` and you specify one or more values for ``QueryStringCacheKeys``, CloudFront forwards
        /// all query string parameters to the origin, but it only caches based on the query string parameters that you specify. If
        /// you specify false for ``QueryString``, CloudFront doesn't forward any query string parameters to the origin, and doesn't
        /// cache based on query string parameters. For more information, see [Configuring CloudFront to Cache Based on Query String
        /// Parameters](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html) in the *Amazon
        /// CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*. If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*. Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of ``QueryString`` and on the values that you specify for ``QueryStringCacheKeys``, if any: If you specify true for ``QueryString`` and you don't specify any values for ``QueryStringCacheKeys``, CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin. If you specify true for ``QueryString`` and you specify one or more values for ``QueryStringCacheKeys``, CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify. If you specify false for ``QueryString``, CloudFront doesn't forward any query string parameters to the origin, and doesn't cache based on query string parameters. For more information, see [Configuring CloudFront to Cache Based on Query String Parameters](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html) in the *Amazon CloudFront Developer Guide*.",
        SerializedName = @"queryString",
        PossibleTypes = new [] { typeof(bool) })]
        bool? QueryString { get; set; }
        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send query strings to the origin but not include them in the
        /// cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. A complex type that contains information about the query string parameters
        /// that you want CloudFront to use for caching for this cache behavior.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*. If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*. A complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.",
        SerializedName = @"queryStringCacheKeys",
        PossibleTypes = new [] { typeof(string) })]
        string[] QueryStringCacheKey { get; set; }

    }
    /// Definition of ForwardedValues
    internal partial interface IForwardedValuesInternal

    {
        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache
        /// key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. A complex type that specifies whether you want CloudFront to forward cookies
        /// to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront
        /// Forwards, Caches, and Logs Cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html) in
        /// the *Amazon CloudFront Developer Guide*. This field is deprecated. We recommend that you use a cache policy or an origin
        /// request policy instead of this field. If you want to include cookies in the cache key, use a cache policy. For more information,
        /// see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache
        /// key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. A complex type that specifies whether you want CloudFront to forward cookies
        /// to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront
        /// Forwards, Caches, and Logs Cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html) in
        /// the *Amazon CloudFront Developer Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICookies Cooky { get; set; }
        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache
        /// key, use origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. Specifies which cookies to forward to the origin for this cache behavior:
        /// all, none, or the list of cookies specified in the ``WhitelistedNames`` complex type. Amazon S3 doesn't process cookies.
        /// When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the ``Forward`` element.
        /// </summary>
        string CookyForward { get; set; }
        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send cookies to the origin but not include them in the cache
        /// key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        string[] CookyWhitelistedName { get; set; }
        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include headers in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send headers to the origin but not include them in the cache
        /// key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. A complex type that specifies the ``Headers``, if any, that you want CloudFront
        /// to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also
        /// caches separate versions of a specified object that is based on the header values in viewer requests. For more information,
        /// see [Caching Content Based on Request Headers](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        string[] Header { get; set; }
        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send query strings to the origin but not include them in the
        /// cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. Indicates whether you want CloudFront to forward query strings to the origin
        /// that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends
        /// on the value of ``QueryString`` and on the values that you specify for ``QueryStringCacheKeys``, if any: If you specify
        /// true for ``QueryString`` and you don't specify any values for ``QueryStringCacheKeys``, CloudFront forwards all query
        /// string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters
        /// and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.
        /// If you specify true for ``QueryString`` and you specify one or more values for ``QueryStringCacheKeys``, CloudFront forwards
        /// all query string parameters to the origin, but it only caches based on the query string parameters that you specify. If
        /// you specify false for ``QueryString``, CloudFront doesn't forward any query string parameters to the origin, and doesn't
        /// cache based on query string parameters. For more information, see [Configuring CloudFront to Cache Based on Query String
        /// Parameters](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html) in the *Amazon
        /// CloudFront Developer Guide*.
        /// </summary>
        bool? QueryString { get; set; }
        /// <summary>
        /// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
        /// If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy)
        /// in the *Amazon CloudFront Developer Guide*. If you want to send query strings to the origin but not include them in the
        /// cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy)
        /// in the *Amazon CloudFront Developer Guide*. A complex type that contains information about the query string parameters
        /// that you want CloudFront to use for caching for this cache behavior.
        /// </summary>
        string[] QueryStringCacheKey { get; set; }

    }
}