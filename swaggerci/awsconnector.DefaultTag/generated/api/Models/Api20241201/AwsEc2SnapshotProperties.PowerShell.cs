// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsEc2Snapshot</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsEc2SnapshotPropertiesTypeConverter))]
    public partial class AwsEc2SnapshotProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2SnapshotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsEc2SnapshotProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SseType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SseType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseTypeEnumValue) content.GetValueForProperty("SseType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SseType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SseTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotStateEnumValue) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapshotStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StorageTier = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStorageTierEnumValue) content.GetValueForProperty("StorageTier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StorageTier, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StorageTierEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataEncryptionKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).DataEncryptionKeyId = (string) content.GetValueForProperty("DataEncryptionKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).DataEncryptionKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Encrypted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Encrypted = (bool?) content.GetValueForProperty("Encrypted",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Encrypted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).KmsKeyId = (string) content.GetValueForProperty("KmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).KmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("OutpostArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OutpostArn = (string) content.GetValueForProperty("OutpostArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OutpostArn, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerAlias"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OwnerAlias = (string) content.GetValueForProperty("OwnerAlias",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OwnerAlias, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OwnerId = (string) content.GetValueForProperty("OwnerId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OwnerId, global::System.Convert.ToString);
            }
            if (content.Contains("Progress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Progress = (string) content.GetValueForProperty("Progress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Progress, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreExpiryTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).RestoreExpiryTime = (global::System.DateTime?) content.GetValueForProperty("RestoreExpiryTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).RestoreExpiryTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SnapshotId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SnapshotId = (string) content.GetValueForProperty("SnapshotId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SnapshotId, global::System.Convert.ToString);
            }
            if (content.Contains("StartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StartTime = (global::System.DateTime?) content.GetValueForProperty("StartTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StateMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StateMessage = (string) content.GetValueForProperty("StateMessage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StateMessage, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated20[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated20>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated20TypeConverter.ConvertFrom));
            }
            if (content.Contains("VolumeId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).VolumeId = (string) content.GetValueForProperty("VolumeId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).VolumeId, global::System.Convert.ToString);
            }
            if (content.Contains("VolumeSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).VolumeSize = (int?) content.GetValueForProperty("VolumeSize",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).VolumeSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SseTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SseTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseType?) content.GetValueForProperty("SseTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SseTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseType.CreateFrom);
            }
            if (content.Contains("StorageTierValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StorageTierValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.StorageTier?) content.GetValueForProperty("StorageTierValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StorageTierValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.StorageTier.CreateFrom);
            }
            if (content.Contains("StateValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StateValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapshotState?) content.GetValueForProperty("StateValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StateValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapshotState.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2SnapshotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsEc2SnapshotProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SseType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SseType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseTypeEnumValue) content.GetValueForProperty("SseType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SseType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SseTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotStateEnumValue) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapshotStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StorageTier = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStorageTierEnumValue) content.GetValueForProperty("StorageTier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StorageTier, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StorageTierEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataEncryptionKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).DataEncryptionKeyId = (string) content.GetValueForProperty("DataEncryptionKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).DataEncryptionKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Encrypted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Encrypted = (bool?) content.GetValueForProperty("Encrypted",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Encrypted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).KmsKeyId = (string) content.GetValueForProperty("KmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).KmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("OutpostArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OutpostArn = (string) content.GetValueForProperty("OutpostArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OutpostArn, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerAlias"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OwnerAlias = (string) content.GetValueForProperty("OwnerAlias",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OwnerAlias, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OwnerId = (string) content.GetValueForProperty("OwnerId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).OwnerId, global::System.Convert.ToString);
            }
            if (content.Contains("Progress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Progress = (string) content.GetValueForProperty("Progress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Progress, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreExpiryTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).RestoreExpiryTime = (global::System.DateTime?) content.GetValueForProperty("RestoreExpiryTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).RestoreExpiryTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SnapshotId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SnapshotId = (string) content.GetValueForProperty("SnapshotId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SnapshotId, global::System.Convert.ToString);
            }
            if (content.Contains("StartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StartTime = (global::System.DateTime?) content.GetValueForProperty("StartTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StateMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StateMessage = (string) content.GetValueForProperty("StateMessage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StateMessage, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated20[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated20>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated20TypeConverter.ConvertFrom));
            }
            if (content.Contains("VolumeId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).VolumeId = (string) content.GetValueForProperty("VolumeId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).VolumeId, global::System.Convert.ToString);
            }
            if (content.Contains("VolumeSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).VolumeSize = (int?) content.GetValueForProperty("VolumeSize",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).VolumeSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SseTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SseTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseType?) content.GetValueForProperty("SseTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).SseTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseType.CreateFrom);
            }
            if (content.Contains("StorageTierValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StorageTierValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.StorageTier?) content.GetValueForProperty("StorageTierValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StorageTierValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.StorageTier.CreateFrom);
            }
            if (content.Contains("StateValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StateValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapshotState?) content.GetValueForProperty("StateValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal)this).StateValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapshotState.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2SnapshotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsEc2SnapshotProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2SnapshotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsEc2SnapshotProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsEc2SnapshotProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsEc2SnapshotProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsEc2Snapshot
    [System.ComponentModel.TypeConverter(typeof(AwsEc2SnapshotPropertiesTypeConverter))]
    public partial interface IAwsEc2SnapshotProperties

    {

    }
}