// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of SsmParameter</summary>
    public partial class SsmParameterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISsmParameterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISsmParameterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>
        /// A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to
        /// numbers, you can specify the following: ``AllowedPattern=^\d+$``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyAllowedPattern { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).AllowedPattern; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).AllowedPattern = value ?? null; }

        /// <summary>
        /// The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DataType? AwPropertyDataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).DataType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).DataType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DataType)""); }

        /// <summary>Information about the parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Description = value ?? null; }

        /// <summary>
        /// The name of the parameter. The maximum length constraint listed below includes capacity for additional system attributes
        /// that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon
        /// Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not
        /// 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Name = value ?? null; }

        /// <summary>
        /// Information about the policies assigned to a parameter. [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html)
        /// in the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Policy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Policy = value ?? null; }

        /// <summary>
        /// Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable
        /// you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want
        /// to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration
        /// data referenced by the parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny AwPropertyTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Tag = value ?? null /* model class */; }

        /// <summary>The parameter tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tier? AwPropertyTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Tier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tier)""); }

        /// <summary>The type of parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Type? AwPropertyType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Type)""); }

        /// <summary>
        /// The parameter value. If type is ``StringList``, the system returns a comma-separated string with no spaces between commas
        /// in the ``Value`` field.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal)AwsProperty).Value = value ?? null; }

        /// <summary>Backing field for <see cref="AwsAccountId" /> property.</summary>
        private string _awsAccountId;

        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsAccountId { get => this._awsAccountId; set => this._awsAccountId = value; }

        /// <summary>Backing field for <see cref="AwsProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterProperties _awsProperty;

        /// <summary>AWS Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterProperties AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsSsmParameterProperties()); set => this._awsProperty = value; }

        /// <summary>Backing field for <see cref="AwsRegion" /> property.</summary>
        private string _awsRegion;

        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsRegion { get => this._awsRegion; set => this._awsRegion = value; }

        /// <summary>Backing field for <see cref="AwsSourceSchema" /> property.</summary>
        private string _awsSourceSchema;

        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsSourceSchema { get => this._awsSourceSchema; set => this._awsSourceSchema = value; }

        /// <summary>Backing field for <see cref="AwsTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISsmParameterPropertiesAwsTags _awsTag;

        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISsmParameterPropertiesAwsTags AwsTag { get => (this._awsTag = this._awsTag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SsmParameterPropertiesAwsTags()); set => this._awsTag = value; }

        /// <summary>Internal Acessors for AwsProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISsmParameterPropertiesInternal.AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsSsmParameterProperties()); set { {_awsProperty = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISsmParameterPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicCloudConnectorsResourceId" /> property.</summary>
        private string _publicCloudConnectorsResourceId;

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudConnectorsResourceId { get => this._publicCloudConnectorsResourceId; set => this._publicCloudConnectorsResourceId = value; }

        /// <summary>Backing field for <see cref="PublicCloudResourceName" /> property.</summary>
        private string _publicCloudResourceName;

        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudResourceName { get => this._publicCloudResourceName; set => this._publicCloudResourceName = value; }

        /// <summary>Creates an new <see cref="SsmParameterProperties" /> instance.</summary>
        public SsmParameterProperties()
        {

        }
    }
    /// Definition of SsmParameter
    public partial interface ISsmParameterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to
        /// numbers, you can specify the following: ``AllowedPattern=^\d+$``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to numbers, you can specify the following: ``AllowedPattern=^\d+$``",
        SerializedName = @"allowedPattern",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyAllowedPattern { get; set; }
        /// <summary>
        /// The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.",
        SerializedName = @"dataType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DataType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DataType? AwPropertyDataType { get; set; }
        /// <summary>Information about the parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Information about the parameter.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyDescription { get; set; }
        /// <summary>
        /// The name of the parameter. The maximum length constraint listed below includes capacity for additional system attributes
        /// that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon
        /// Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not
        /// 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the parameter.  The maximum length constraint listed below includes capacity for additional system attributes that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyName { get; set; }
        /// <summary>
        /// Information about the policies assigned to a parameter. [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html)
        /// in the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Information about the policies assigned to a parameter.  [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html) in the *User Guide*.",
        SerializedName = @"policies",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyPolicy { get; set; }
        /// <summary>
        /// Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable
        /// you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want
        /// to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration
        /// data referenced by the parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny AwPropertyTag { get; set; }
        /// <summary>The parameter tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The parameter tier.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tier) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tier? AwPropertyTier { get; set; }
        /// <summary>The type of parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of parameter.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Type) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Type? AwPropertyType { get; set; }
        /// <summary>
        /// The parameter value. If type is ``StringList``, the system returns a comma-separated string with no spaces between commas
        /// in the ``Value`` field.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The parameter value.  If type is ``StringList``, the system returns a comma-separated string with no spaces between commas in the ``Value`` field.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyValue { get; set; }
        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AwsAccountId { get; set; }
        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISsmParameterPropertiesAwsTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISsmParameterPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudResourceName { get; set; }

    }
    /// Definition of SsmParameter
    internal partial interface ISsmParameterPropertiesInternal

    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        string Arn { get; set; }
        /// <summary>
        /// A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to
        /// numbers, you can specify the following: ``AllowedPattern=^\d+$``
        /// </summary>
        string AwPropertyAllowedPattern { get; set; }
        /// <summary>
        /// The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DataType? AwPropertyDataType { get; set; }
        /// <summary>Information about the parameter.</summary>
        string AwPropertyDescription { get; set; }
        /// <summary>
        /// The name of the parameter. The maximum length constraint listed below includes capacity for additional system attributes
        /// that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon
        /// Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not
        /// 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
        /// </summary>
        string AwPropertyName { get; set; }
        /// <summary>
        /// Information about the policies assigned to a parameter. [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html)
        /// in the *User Guide*.
        /// </summary>
        string AwPropertyPolicy { get; set; }
        /// <summary>
        /// Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable
        /// you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want
        /// to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration
        /// data referenced by the parameter.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny AwPropertyTag { get; set; }
        /// <summary>The parameter tier.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tier? AwPropertyTier { get; set; }
        /// <summary>The type of parameter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Type? AwPropertyType { get; set; }
        /// <summary>
        /// The parameter value. If type is ``StringList``, the system returns a comma-separated string with no spaces between commas
        /// in the ``Value`` field.
        /// </summary>
        string AwPropertyValue { get; set; }
        /// <summary>AWS Account ID</summary>
        string AwsAccountId { get; set; }
        /// <summary>AWS Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterProperties AwsProperty { get; set; }
        /// <summary>AWS Region</summary>
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISsmParameterPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        string PublicCloudResourceName { get; set; }

    }
}