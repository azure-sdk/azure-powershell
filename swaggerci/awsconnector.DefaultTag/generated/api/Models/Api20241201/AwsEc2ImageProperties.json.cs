// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEc2Image</summary>
    public partial class AwsEc2ImageProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject into a new instance of <see cref="AwsEc2ImageProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AwsEc2ImageProperties(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_architecture = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("architecture"), out var __jsonArchitecture) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ArchitectureValuesEnumValue.FromJson(__jsonArchitecture) : Architecture;}
            {_bootMode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("bootMode"), out var __jsonBootMode) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BootModeValuesEnumValue.FromJson(__jsonBootMode) : BootMode;}
            {_hypervisor = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("hypervisor"), out var __jsonHypervisor) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HypervisorTypeEnumValue.FromJson(__jsonHypervisor) : Hypervisor;}
            {_imageType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("imageType"), out var __jsonImageType) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageTypeValuesEnumValue.FromJson(__jsonImageType) : ImageType;}
            {_imdsSupport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("imdsSupport"), out var __jsonImdsSupport) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImdsSupportValuesEnumValue.FromJson(__jsonImdsSupport) : ImdsSupport;}
            {_platform = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("platform"), out var __jsonPlatform) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformValuesEnumValue.FromJson(__jsonPlatform) : Platform;}
            {_rootDeviceType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("rootDeviceType"), out var __jsonRootDeviceType) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeEnumValue.FromJson(__jsonRootDeviceType) : RootDeviceType;}
            {_state = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("state"), out var __jsonState) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageStateEnumValue.FromJson(__jsonState) : State;}
            {_stateReason = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("stateReason"), out var __jsonStateReason) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateReason.FromJson(__jsonStateReason) : StateReason;}
            {_tpmSupport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("tpmSupport"), out var __jsonTpmSupport) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TpmSupportValuesEnumValue.FromJson(__jsonTpmSupport) : TpmSupport;}
            {_virtualizationType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("virtualizationType"), out var __jsonVirtualizationType) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VirtualizationTypeEnumValue.FromJson(__jsonVirtualizationType) : VirtualizationType;}
            {_blockDeviceMapping = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("blockDeviceMappings"), out var __jsonBlockDeviceMappings) ? If( __jsonBlockDeviceMappings as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BlockDeviceMapping.FromJson(__u) )) ))() : null : BlockDeviceMapping;}
            {_creationDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("creationDate"), out var __jsonCreationDate) ? (string)__jsonCreationDate : (string)CreationDate;}
            {_deprecationTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("deprecationTime"), out var __jsonDeprecationTime) ? (string)__jsonDeprecationTime : (string)DeprecationTime;}
            {_deregistrationProtection = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("deregistrationProtection"), out var __jsonDeregistrationProtection) ? (string)__jsonDeregistrationProtection : (string)DeregistrationProtection;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("description"), out var __jsonDescription) ? (string)__jsonDescription : (string)Description;}
            {_enaSupport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("enaSupport"), out var __jsonEnaSupport) ? (bool?)__jsonEnaSupport : EnaSupport;}
            {_imageId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("imageId"), out var __jsonImageId) ? (string)__jsonImageId : (string)ImageId;}
            {_imageLocation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("imageLocation"), out var __jsonImageLocation) ? (string)__jsonImageLocation : (string)ImageLocation;}
            {_imageOwnerAlias = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("imageOwnerAlias"), out var __jsonImageOwnerAlias) ? (string)__jsonImageOwnerAlias : (string)ImageOwnerAlias;}
            {_kernelId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("kernelId"), out var __jsonKernelId) ? (string)__jsonKernelId : (string)KernelId;}
            {_lastLaunchedTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("lastLaunchedTime"), out var __jsonLastLaunchedTime) ? (string)__jsonLastLaunchedTime : (string)LastLaunchedTime;}
            {_name = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("name"), out var __jsonName) ? (string)__jsonName : (string)Name;}
            {_ownerId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("ownerId"), out var __jsonOwnerId) ? (string)__jsonOwnerId : (string)OwnerId;}
            {_platformDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("platformDetails"), out var __jsonPlatformDetails) ? (string)__jsonPlatformDetails : (string)PlatformDetail;}
            {_productCode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("productCodes"), out var __jsonProductCodes) ? If( __jsonProductCodes as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProductCode.FromJson(__p) )) ))() : null : ProductCode;}
            {_public = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("public"), out var __jsonPublic) ? (bool?)__jsonPublic : Public;}
            {_ramdiskId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("ramdiskId"), out var __jsonRamdiskId) ? (string)__jsonRamdiskId : (string)RamdiskId;}
            {_rootDeviceName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("rootDeviceName"), out var __jsonRootDeviceName) ? (string)__jsonRootDeviceName : (string)RootDeviceName;}
            {_sourceInstanceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("sourceInstanceId"), out var __jsonSourceInstanceId) ? (string)__jsonSourceInstanceId : (string)SourceInstanceId;}
            {_sriovNetSupport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("sriovNetSupport"), out var __jsonSriovNetSupport) ? (string)__jsonSriovNetSupport : (string)SriovNetSupport;}
            {_tag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("tags"), out var __jsonTags) ? If( __jsonTags as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated12[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated12) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated12.FromJson(__k) )) ))() : null : Tag;}
            {_usageOperation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("usageOperation"), out var __jsonUsageOperation) ? (string)__jsonUsageOperation : (string)UsageOperation;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImageProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImageProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImageProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json ? new AwsEc2ImageProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AwsEc2ImageProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AwsEc2ImageProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._architecture ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._architecture.ToJson(null,serializationMode) : null, "architecture" ,container.Add );
            AddIf( null != this._bootMode ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._bootMode.ToJson(null,serializationMode) : null, "bootMode" ,container.Add );
            AddIf( null != this._hypervisor ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._hypervisor.ToJson(null,serializationMode) : null, "hypervisor" ,container.Add );
            AddIf( null != this._imageType ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._imageType.ToJson(null,serializationMode) : null, "imageType" ,container.Add );
            AddIf( null != this._imdsSupport ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._imdsSupport.ToJson(null,serializationMode) : null, "imdsSupport" ,container.Add );
            AddIf( null != this._platform ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._platform.ToJson(null,serializationMode) : null, "platform" ,container.Add );
            AddIf( null != this._rootDeviceType ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._rootDeviceType.ToJson(null,serializationMode) : null, "rootDeviceType" ,container.Add );
            AddIf( null != this._state ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._state.ToJson(null,serializationMode) : null, "state" ,container.Add );
            AddIf( null != this._stateReason ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._stateReason.ToJson(null,serializationMode) : null, "stateReason" ,container.Add );
            AddIf( null != this._tpmSupport ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._tpmSupport.ToJson(null,serializationMode) : null, "tpmSupport" ,container.Add );
            AddIf( null != this._virtualizationType ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._virtualizationType.ToJson(null,serializationMode) : null, "virtualizationType" ,container.Add );
            if (null != this._blockDeviceMapping)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __x in this._blockDeviceMapping )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("blockDeviceMappings",__w);
            }
            AddIf( null != (((object)this._creationDate)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._creationDate.ToString()) : null, "creationDate" ,container.Add );
            AddIf( null != (((object)this._deprecationTime)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._deprecationTime.ToString()) : null, "deprecationTime" ,container.Add );
            AddIf( null != (((object)this._deregistrationProtection)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._deregistrationProtection.ToString()) : null, "deregistrationProtection" ,container.Add );
            AddIf( null != (((object)this._description)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._description.ToString()) : null, "description" ,container.Add );
            AddIf( null != this._enaSupport ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._enaSupport) : null, "enaSupport" ,container.Add );
            AddIf( null != (((object)this._imageId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._imageId.ToString()) : null, "imageId" ,container.Add );
            AddIf( null != (((object)this._imageLocation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._imageLocation.ToString()) : null, "imageLocation" ,container.Add );
            AddIf( null != (((object)this._imageOwnerAlias)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._imageOwnerAlias.ToString()) : null, "imageOwnerAlias" ,container.Add );
            AddIf( null != (((object)this._kernelId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._kernelId.ToString()) : null, "kernelId" ,container.Add );
            AddIf( null != (((object)this._lastLaunchedTime)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._lastLaunchedTime.ToString()) : null, "lastLaunchedTime" ,container.Add );
            AddIf( null != (((object)this._name)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._name.ToString()) : null, "name" ,container.Add );
            AddIf( null != (((object)this._ownerId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._ownerId.ToString()) : null, "ownerId" ,container.Add );
            AddIf( null != (((object)this._platformDetail)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._platformDetail.ToString()) : null, "platformDetails" ,container.Add );
            if (null != this._productCode)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __s in this._productCode )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("productCodes",__r);
            }
            AddIf( null != this._public ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._public) : null, "public" ,container.Add );
            AddIf( null != (((object)this._ramdiskId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._ramdiskId.ToString()) : null, "ramdiskId" ,container.Add );
            AddIf( null != (((object)this._rootDeviceName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._rootDeviceName.ToString()) : null, "rootDeviceName" ,container.Add );
            AddIf( null != (((object)this._sourceInstanceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._sourceInstanceId.ToString()) : null, "sourceInstanceId" ,container.Add );
            AddIf( null != (((object)this._sriovNetSupport)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._sriovNetSupport.ToString()) : null, "sriovNetSupport" ,container.Add );
            if (null != this._tag)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __n in this._tag )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("tags",__m);
            }
            AddIf( null != (((object)this._usageOperation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._usageOperation.ToString()) : null, "usageOperation" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}