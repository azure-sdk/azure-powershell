// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ServerSideEncryptionRule</summary>
    public partial class ServerSideEncryptionRule :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerSideEncryptionRule,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerSideEncryptionRuleInternal
    {

        /// <summary>Backing field for <see cref="BucketKeyEnabled" /> property.</summary>
        private bool? _bucketKeyEnabled;

        /// <summary>
        /// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects
        /// in the bucket. Existing objects are not affected. Setting the ``BucketKeyEnabled`` element to ``true`` causes Amazon S3
        /// to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled. For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html)
        /// in the *Amazon S3 User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? BucketKeyEnabled { get => this._bucketKeyEnabled; set => this._bucketKeyEnabled = value; }

        /// <summary>Internal Acessors for ServerSideEncryptionByDefault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerSideEncryptionByDefault Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerSideEncryptionRuleInternal.ServerSideEncryptionByDefault { get => (this._serverSideEncryptionByDefault = this._serverSideEncryptionByDefault ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServerSideEncryptionByDefault()); set { {_serverSideEncryptionByDefault = value;} } }

        /// <summary>Backing field for <see cref="ServerSideEncryptionByDefault" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerSideEncryptionByDefault _serverSideEncryptionByDefault;

        /// <summary>
        /// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify
        /// any server-side encryption, this default encryption will be applied. Describes the default server-side encryption to apply
        /// to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption
        /// will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS
        /// KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon
        /// S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html)
        /// in the *Amazon S3 API Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerSideEncryptionByDefault ServerSideEncryptionByDefault { get => (this._serverSideEncryptionByDefault = this._serverSideEncryptionByDefault ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServerSideEncryptionByDefault()); set => this._serverSideEncryptionByDefault = value; }

        /// <summary>
        /// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed
        /// if and only if ``SSEAlgorithm`` is set to ``aws:kms`` or ``aws:kms:dsse``. You can specify the key ID, key alias, or the
        /// Amazon Resource Name (ARN) of the KMS key. + Key ID: ``1234abcd-12ab-34cd-56ef-1234567890ab`` + Key ARN: ``arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``
        /// + Key Alias: ``alias/alias-name`` If you use a key ID, you can run into a LogDestination undeliverable error when creating
        /// a VPC flow log. If you are using encryption with cross-account or AWS service operations you must use a fully qualified
        /// KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).
        /// Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html)
        /// in the *Key Management Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ServerSideEncryptionByDefaultKmsMasterKeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerSideEncryptionByDefaultInternal)ServerSideEncryptionByDefault).KmsMasterKeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerSideEncryptionByDefaultInternal)ServerSideEncryptionByDefault).KmsMasterKeyId = value ?? null; }

        /// <summary>Server-side encryption algorithm to use for the default encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ServerSideEncryptionByDefaultSseAlgorithm? ServerSideEncryptionByDefaultSseAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerSideEncryptionByDefaultInternal)ServerSideEncryptionByDefault).SseAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerSideEncryptionByDefaultInternal)ServerSideEncryptionByDefault).SseAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ServerSideEncryptionByDefaultSseAlgorithm)""); }

        /// <summary>Creates an new <see cref="ServerSideEncryptionRule" /> instance.</summary>
        public ServerSideEncryptionRule()
        {

        }
    }
    /// Definition of ServerSideEncryptionRule
    public partial interface IServerSideEncryptionRule :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects
        /// in the bucket. Existing objects are not affected. Setting the ``BucketKeyEnabled`` element to ``true`` causes Amazon S3
        /// to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled. For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html)
        /// in the *Amazon S3 User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the ``BucketKeyEnabled`` element to ``true`` causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled. For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) in the *Amazon S3 User Guide*.",
        SerializedName = @"bucketKeyEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BucketKeyEnabled { get; set; }
        /// <summary>
        /// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed
        /// if and only if ``SSEAlgorithm`` is set to ``aws:kms`` or ``aws:kms:dsse``. You can specify the key ID, key alias, or the
        /// Amazon Resource Name (ARN) of the KMS key. + Key ID: ``1234abcd-12ab-34cd-56ef-1234567890ab`` + Key ARN: ``arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``
        /// + Key Alias: ``alias/alias-name`` If you use a key ID, you can run into a LogDestination undeliverable error when creating
        /// a VPC flow log. If you are using encryption with cross-account or AWS service operations you must use a fully qualified
        /// KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).
        /// Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html)
        /// in the *Key Management Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed if and only if ``SSEAlgorithm`` is set to ``aws:kms`` or ``aws:kms:dsse``. You can specify the key ID, key alias, or the Amazon Resource Name (ARN) of the KMS key.  +  Key ID: ``1234abcd-12ab-34cd-56ef-1234567890ab``   +  Key ARN: ``arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``   +  Key Alias: ``alias/alias-name``    If you use a key ID, you can run into a LogDestination undeliverable error when creating a VPC flow log.  If you are using encryption with cross-account or AWS service operations you must use a fully qualified KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).  Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html) in the *Key Management Service Developer Guide*.",
        SerializedName = @"kmsMasterKeyID",
        PossibleTypes = new [] { typeof(string) })]
        string ServerSideEncryptionByDefaultKmsMasterKeyId { get; set; }
        /// <summary>Server-side encryption algorithm to use for the default encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server-side encryption algorithm to use for the default encryption.",
        SerializedName = @"sseAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ServerSideEncryptionByDefaultSseAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ServerSideEncryptionByDefaultSseAlgorithm? ServerSideEncryptionByDefaultSseAlgorithm { get; set; }

    }
    /// Definition of ServerSideEncryptionRule
    internal partial interface IServerSideEncryptionRuleInternal

    {
        /// <summary>
        /// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects
        /// in the bucket. Existing objects are not affected. Setting the ``BucketKeyEnabled`` element to ``true`` causes Amazon S3
        /// to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled. For more information, see [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html)
        /// in the *Amazon S3 User Guide*.
        /// </summary>
        bool? BucketKeyEnabled { get; set; }
        /// <summary>
        /// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify
        /// any server-side encryption, this default encryption will be applied. Describes the default server-side encryption to apply
        /// to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption
        /// will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS
        /// KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon
        /// S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html)
        /// in the *Amazon S3 API Reference*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerSideEncryptionByDefault ServerSideEncryptionByDefault { get; set; }
        /// <summary>
        /// AWS Key Management Service (KMS) customer AWS KMS key ID to use for the default encryption. This parameter is allowed
        /// if and only if ``SSEAlgorithm`` is set to ``aws:kms`` or ``aws:kms:dsse``. You can specify the key ID, key alias, or the
        /// Amazon Resource Name (ARN) of the KMS key. + Key ID: ``1234abcd-12ab-34cd-56ef-1234567890ab`` + Key ARN: ``arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``
        /// + Key Alias: ``alias/alias-name`` If you use a key ID, you can run into a LogDestination undeliverable error when creating
        /// a VPC flow log. If you are using encryption with cross-account or AWS service operations you must use a fully qualified
        /// KMS key ARN. For more information, see [Using encryption for cross-account operations](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy).
        /// Amazon S3 only supports symmetric encryption KMS keys. For more information, see [Asymmetric keys in KMS](https://docs.aws.amazon.com//kms/latest/developerguide/symmetric-asymmetric.html)
        /// in the *Key Management Service Developer Guide*.
        /// </summary>
        string ServerSideEncryptionByDefaultKmsMasterKeyId { get; set; }
        /// <summary>Server-side encryption algorithm to use for the default encryption.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ServerSideEncryptionByDefaultSseAlgorithm? ServerSideEncryptionByDefaultSseAlgorithm { get; set; }

    }
}