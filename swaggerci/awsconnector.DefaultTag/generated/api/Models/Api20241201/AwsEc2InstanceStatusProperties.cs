// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEc2InstanceStatus</summary>
    public partial class AwsEc2InstanceStatusProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceStatusProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceStatusPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AvailabilityZone" /> property.</summary>
        private string _availabilityZone;

        /// <summary><p>The Availability Zone of the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AvailabilityZone { get => this._availabilityZone; set => this._availabilityZone = value; }

        /// <summary>Backing field for <see cref="Event" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusEvent[] _event;

        /// <summary><p>Any scheduled events associated with the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusEvent[] Event { get => this._event; set => this._event = value; }

        /// <summary>Backing field for <see cref="InstanceId" /> property.</summary>
        private string _instanceId;

        /// <summary><p>The ID of the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string InstanceId { get => this._instanceId; set => this._instanceId = value; }

        /// <summary>Backing field for <see cref="InstanceState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceState _instanceState;

        /// <summary>
        /// <p>The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an instance be in the <code>running</code>
        /// state.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceState InstanceState { get => (this._instanceState = this._instanceState ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceState()); set => this._instanceState = value; }

        /// <summary>
        /// <p>The state of the instance as a 16-bit unsigned integer. </p> <p>The high byte is all of the bits between 2^8 and (2^16)-1,
        /// which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be
        /// ignored.</p> <p>The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
        /// </p> <p>The valid values for instance-state-code will all be in the range of the low byte and they are:</p> <ul> <li>
        /// <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p>
        /// <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li>
        /// <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li>
        /// </ul> <p>You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? InstanceStateCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)InstanceState).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)InstanceState).Code = value ?? default(int); }

        /// <summary>Backing field for <see cref="InstanceStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummary _instanceStatus;

        /// <summary>
        /// <p>Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummary InstanceStatus { get => (this._instanceStatus = this._instanceStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceStatusSummary()); set => this._instanceStatus = value; }

        /// <summary><p>The system instance health or application instance health.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusDetails[] InstanceStatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)InstanceStatus).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)InstanceStatus).Detail = value ?? null /* arrayOf */; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SummaryStatus? InstanceStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)InstanceStatus).StatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)InstanceStatus).StatusValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SummaryStatus)""); }

        /// <summary>Internal Acessors for InstanceState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceState Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceStatusPropertiesInternal.InstanceState { get => (this._instanceState = this._instanceState ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceState()); set { {_instanceState = value;} } }

        /// <summary>Internal Acessors for InstanceStateName</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateNameEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceStatusPropertiesInternal.InstanceStateName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)InstanceState).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)InstanceState).Name = value; }

        /// <summary>Internal Acessors for InstanceStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummary Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceStatusPropertiesInternal.InstanceStatus { get => (this._instanceStatus = this._instanceStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceStatusSummary()); set { {_instanceStatus = value;} } }

        /// <summary>Internal Acessors for InstanceStatusStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISummaryStatusEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceStatusPropertiesInternal.InstanceStatusStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)InstanceStatus).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)InstanceStatus).Status = value; }

        /// <summary>Internal Acessors for SystemStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummary Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceStatusPropertiesInternal.SystemStatus { get => (this._systemStatus = this._systemStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceStatusSummary()); set { {_systemStatus = value;} } }

        /// <summary>Internal Acessors for SystemStatusStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISummaryStatusEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceStatusPropertiesInternal.SystemStatusStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)SystemStatus).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)SystemStatus).Status = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName? NameValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)InstanceState).NameValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)InstanceState).NameValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName)""); }

        /// <summary>Backing field for <see cref="OutpostArn" /> property.</summary>
        private string _outpostArn;

        /// <summary><p>The Amazon Resource Name (ARN) of the Outpost.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OutpostArn { get => this._outpostArn; set => this._outpostArn = value; }

        /// <summary>Backing field for <see cref="SystemStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummary _systemStatus;

        /// <summary>
        /// <p>Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware
        /// failures and network connectivity problems.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummary SystemStatus { get => (this._systemStatus = this._systemStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceStatusSummary()); set => this._systemStatus = value; }

        /// <summary><p>The system instance health or application instance health.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusDetails[] SystemStatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)SystemStatus).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)SystemStatus).Detail = value ?? null /* arrayOf */; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SummaryStatus? SystemStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)SystemStatus).StatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummaryInternal)SystemStatus).StatusValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SummaryStatus)""); }

        /// <summary>Creates an new <see cref="AwsEc2InstanceStatusProperties" /> instance.</summary>
        public AwsEc2InstanceStatusProperties()
        {

        }
    }
    /// Definition of awsEc2InstanceStatus
    public partial interface IAwsEc2InstanceStatusProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>The Availability Zone of the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Availability Zone of the instance.</p>",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZone { get; set; }
        /// <summary><p>Any scheduled events associated with the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Any scheduled events associated with the instance.</p>",
        SerializedName = @"events",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusEvent) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusEvent[] Event { get; set; }
        /// <summary><p>The ID of the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the instance.</p>",
        SerializedName = @"instanceId",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceId { get; set; }
        /// <summary>
        /// <p>The state of the instance as a 16-bit unsigned integer. </p> <p>The high byte is all of the bits between 2^8 and (2^16)-1,
        /// which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be
        /// ignored.</p> <p>The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
        /// </p> <p>The valid values for instance-state-code will all be in the range of the low byte and they are:</p> <ul> <li>
        /// <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p>
        /// <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li>
        /// <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li>
        /// </ul> <p>You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The state of the instance as a 16-bit unsigned integer. </p> <p>The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.</p> <p>The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255. </p> <p>The valid values for instance-state-code will all be in the range of the low byte and they are:</p> <ul> <li> <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p> <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li> <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li> </ul> <p>You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.</p>",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceStateCode { get; set; }
        /// <summary><p>The system instance health or application instance health.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The system instance health or application instance health.</p>",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusDetails[] InstanceStatusDetail { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SummaryStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SummaryStatus? InstanceStatusValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName? NameValue { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) of the Outpost.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the Outpost.</p>",
        SerializedName = @"outpostArn",
        PossibleTypes = new [] { typeof(string) })]
        string OutpostArn { get; set; }
        /// <summary><p>The system instance health or application instance health.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The system instance health or application instance health.</p>",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusDetails[] SystemStatusDetail { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SummaryStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SummaryStatus? SystemStatusValue { get; set; }

    }
    /// Definition of awsEc2InstanceStatus
    internal partial interface IAwsEc2InstanceStatusPropertiesInternal

    {
        /// <summary><p>The Availability Zone of the instance.</p></summary>
        string AvailabilityZone { get; set; }
        /// <summary><p>Any scheduled events associated with the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusEvent[] Event { get; set; }
        /// <summary><p>The ID of the instance.</p></summary>
        string InstanceId { get; set; }
        /// <summary>
        /// <p>The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an instance be in the <code>running</code>
        /// state.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceState InstanceState { get; set; }
        /// <summary>
        /// <p>The state of the instance as a 16-bit unsigned integer. </p> <p>The high byte is all of the bits between 2^8 and (2^16)-1,
        /// which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be
        /// ignored.</p> <p>The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
        /// </p> <p>The valid values for instance-state-code will all be in the range of the low byte and they are:</p> <ul> <li>
        /// <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p>
        /// <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li>
        /// <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li>
        /// </ul> <p>You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.</p>
        /// </summary>
        int? InstanceStateCode { get; set; }
        /// <summary><p>The current state of the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateNameEnumValue InstanceStateName { get; set; }
        /// <summary>
        /// <p>Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummary InstanceStatus { get; set; }
        /// <summary><p>The system instance health or application instance health.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusDetails[] InstanceStatusDetail { get; set; }
        /// <summary><p>The status.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISummaryStatusEnumValue InstanceStatusStatus { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SummaryStatus? InstanceStatusValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName? NameValue { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) of the Outpost.</p></summary>
        string OutpostArn { get; set; }
        /// <summary>
        /// <p>Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware
        /// failures and network connectivity problems.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusSummary SystemStatus { get; set; }
        /// <summary><p>The system instance health or application instance health.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStatusDetails[] SystemStatusDetail { get; set; }
        /// <summary><p>The status.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISummaryStatusEnumValue SystemStatusStatus { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SummaryStatus? SystemStatusValue { get; set; }

    }
}