// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of AuthenticateOidcConfig</summary>
    public partial class AuthenticateOidcConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfig,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal
    {

        /// <summary>Backing field for <see cref="AuthenticationRequestExtraParam" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigAuthenticationRequestExtraParams _authenticationRequestExtraParam;

        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigAuthenticationRequestExtraParams AuthenticationRequestExtraParam { get => (this._authenticationRequestExtraParam = this._authenticationRequestExtraParam ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AuthenticateOidcConfigAuthenticationRequestExtraParams()); set => this._authenticationRequestExtraParam = value; }

        /// <summary>Backing field for <see cref="AuthorizationEndpoint" /> property.</summary>
        private string _authorizationEndpoint;

        /// <summary>
        /// The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AuthorizationEndpoint { get => this._authorizationEndpoint; set => this._authorizationEndpoint = value; }

        /// <summary>Backing field for <see cref="ClientId" /> property.</summary>
        private string _clientId;

        /// <summary>The OAuth 2.0 client identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ClientId { get => this._clientId; set => this._clientId = value; }

        /// <summary>Backing field for <see cref="ClientSecret" /> property.</summary>
        private string _clientSecret;

        /// <summary>
        /// The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can
        /// omit this parameter if you set ``UseExistingClientSecret`` to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ClientSecret { get => this._clientSecret; set => this._clientSecret = value; }

        /// <summary>Backing field for <see cref="Issuer" /> property.</summary>
        private string _issuer;

        /// <summary>
        /// The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Issuer { get => this._issuer; set => this._issuer = value; }

        /// <summary>Backing field for <see cref="OnUnauthenticatedRequest" /> property.</summary>
        private string _onUnauthenticatedRequest;

        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OnUnauthenticatedRequest { get => this._onUnauthenticatedRequest; set => this._onUnauthenticatedRequest = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="SessionCookieName" /> property.</summary>
        private string _sessionCookieName;

        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SessionCookieName { get => this._sessionCookieName; set => this._sessionCookieName = value; }

        /// <summary>Backing field for <see cref="SessionTimeout" /> property.</summary>
        private string _sessionTimeout;

        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SessionTimeout { get => this._sessionTimeout; set => this._sessionTimeout = value; }

        /// <summary>Backing field for <see cref="TokenEndpoint" /> property.</summary>
        private string _tokenEndpoint;

        /// <summary>
        /// The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string TokenEndpoint { get => this._tokenEndpoint; set => this._tokenEndpoint = value; }

        /// <summary>Backing field for <see cref="UseExistingClientSecret" /> property.</summary>
        private bool? _useExistingClientSecret;

        /// <summary>
        /// Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this
        /// parameter or set it to false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? UseExistingClientSecret { get => this._useExistingClientSecret; set => this._useExistingClientSecret = value; }

        /// <summary>Backing field for <see cref="UserInfoEndpoint" /> property.</summary>
        private string _userInfoEndpoint;

        /// <summary>
        /// The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string UserInfoEndpoint { get => this._userInfoEndpoint; set => this._userInfoEndpoint = value; }

        /// <summary>Creates an new <see cref="AuthenticateOidcConfig" /> instance.</summary>
        public AuthenticateOidcConfig()
        {

        }
    }
    /// Definition of AuthenticateOidcConfig
    public partial interface IAuthenticateOidcConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The query parameters (up to 10) to include in the redirect request to the authorization endpoint.",
        SerializedName = @"authenticationRequestExtraParams",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigAuthenticationRequestExtraParams) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigAuthenticationRequestExtraParams AuthenticationRequestExtraParam { get; set; }
        /// <summary>
        /// The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
        SerializedName = @"authorizationEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string AuthorizationEndpoint { get; set; }
        /// <summary>The OAuth 2.0 client identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OAuth 2.0 client identifier.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientId { get; set; }
        /// <summary>
        /// The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can
        /// omit this parameter if you set ``UseExistingClientSecret`` to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can omit this parameter if you set ``UseExistingClientSecret`` to true.",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ClientSecret { get; set; }
        /// <summary>
        /// The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
        SerializedName = @"issuer",
        PossibleTypes = new [] { typeof(string) })]
        string Issuer { get; set; }
        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The behavior if the user is not authenticated. The following are possible values:  +  deny```` - Return an HTTP 401 Unauthorized error.  +  allow```` - Allow the request to be forwarded to the target.  +  authenticate```` - Redirect the request to the IdP authorization endpoint. This is the default value.",
        SerializedName = @"onUnauthenticatedRequest",
        PossibleTypes = new [] { typeof(string) })]
        string OnUnauthenticatedRequest { get; set; }
        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.",
        SerializedName = @"sessionCookieName",
        PossibleTypes = new [] { typeof(string) })]
        string SessionCookieName { get; set; }
        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).",
        SerializedName = @"sessionTimeout",
        PossibleTypes = new [] { typeof(string) })]
        string SessionTimeout { get; set; }
        /// <summary>
        /// The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
        SerializedName = @"tokenEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string TokenEndpoint { get; set; }
        /// <summary>
        /// Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this
        /// parameter or set it to false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this parameter or set it to false.",
        SerializedName = @"useExistingClientSecret",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UseExistingClientSecret { get; set; }
        /// <summary>
        /// The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
        SerializedName = @"userInfoEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoEndpoint { get; set; }

    }
    /// Definition of AuthenticateOidcConfig
    internal partial interface IAuthenticateOidcConfigInternal

    {
        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigAuthenticationRequestExtraParams AuthenticationRequestExtraParam { get; set; }
        /// <summary>
        /// The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        string AuthorizationEndpoint { get; set; }
        /// <summary>The OAuth 2.0 client identifier.</summary>
        string ClientId { get; set; }
        /// <summary>
        /// The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can
        /// omit this parameter if you set ``UseExistingClientSecret`` to true.
        /// </summary>
        string ClientSecret { get; set; }
        /// <summary>
        /// The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        string Issuer { get; set; }
        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        string OnUnauthenticatedRequest { get; set; }
        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        string Scope { get; set; }
        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        string SessionCookieName { get; set; }
        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        string SessionTimeout { get; set; }
        /// <summary>
        /// The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        string TokenEndpoint { get; set; }
        /// <summary>
        /// Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this
        /// parameter or set it to false.
        /// </summary>
        bool? UseExistingClientSecret { get; set; }
        /// <summary>
        /// The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        string UserInfoEndpoint { get; set; }

    }
}