// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ClusterStatus</summary>
    public partial class ClusterStatus1 :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal
    {

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode? CodeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonInternal)StateChangeReason).CodeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonInternal)StateChangeReason).CodeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode)""); }

        /// <summary>Backing field for <see cref="ErrorDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated[] _errorDetail;

        /// <summary>
        /// <p>A list of tuples that provides information about the errors that caused a cluster to terminate. This structure can
        /// contain up to 10 different <code>ErrorDetail</code> tuples.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated[] ErrorDetail { get => this._errorDetail; set => this._errorDetail = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal.State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStateEnumValue()); set { {_state = value;} } }

        /// <summary>Internal Acessors for StateChangeReason</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReason Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal.StateChangeReason { get => (this._stateChangeReason = this._stateChangeReason ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStateChangeReason()); set { {_stateChangeReason = value;} } }

        /// <summary>Internal Acessors for StateChangeReasonCode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonCodeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal.StateChangeReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonInternal)StateChangeReason).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonInternal)StateChangeReason).Code = value; }

        /// <summary>Internal Acessors for Timeline</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimeline Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal.Timeline { get => (this._timeline = this._timeline ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterTimeline()); set { {_timeline = value;} } }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateEnumValue _state;

        /// <summary><p>The current state of the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateEnumValue State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStateEnumValue()); set => this._state = value; }

        /// <summary>Backing field for <see cref="StateChangeReason" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReason _stateChangeReason;

        /// <summary><p>The reason for the cluster status change.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReason StateChangeReason { get => (this._stateChangeReason = this._stateChangeReason ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStateChangeReason()); set => this._stateChangeReason = value; }

        /// <summary><p>The descriptive message for the state change reason.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string StateChangeReasonMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonInternal)StateChangeReason).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonInternal)StateChangeReason).Message = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState? StateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateEnumValueInternal)State).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateEnumValueInternal)State).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState)""); }

        /// <summary>Backing field for <see cref="Timeline" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimeline _timeline;

        /// <summary>
        /// <p>A timeline that represents the status of a cluster over the lifetime of the cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimeline Timeline { get => (this._timeline = this._timeline ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterTimeline()); set => this._timeline = value; }

        /// <summary><p>The creation date and time of the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? TimelineCreationDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimelineInternal)Timeline).CreationDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimelineInternal)Timeline).CreationDateTime = value ?? default(global::System.DateTime); }

        /// <summary><p>The date and time when the cluster was terminated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? TimelineEndDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimelineInternal)Timeline).EndDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimelineInternal)Timeline).EndDateTime = value ?? default(global::System.DateTime); }

        /// <summary><p>The date and time when the cluster was ready to run steps.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? TimelineReadyDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimelineInternal)Timeline).ReadyDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimelineInternal)Timeline).ReadyDateTime = value ?? default(global::System.DateTime); }

        /// <summary>Creates an new <see cref="ClusterStatus1" /> instance.</summary>
        public ClusterStatus1()
        {

        }
    }
    /// Definition of ClusterStatus
    public partial interface IClusterStatus1 :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode? CodeValue { get; set; }
        /// <summary>
        /// <p>A list of tuples that provides information about the errors that caused a cluster to terminate. This structure can
        /// contain up to 10 different <code>ErrorDetail</code> tuples.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A list of tuples that provides information about the errors that caused a cluster to terminate. This structure can contain up to 10 different <code>ErrorDetail</code> tuples.</p>",
        SerializedName = @"errorDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated[] ErrorDetail { get; set; }
        /// <summary><p>The descriptive message for the state change reason.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The descriptive message for the state change reason.</p>",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string StateChangeReasonMessage { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState? StateValue { get; set; }
        /// <summary><p>The creation date and time of the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The creation date and time of the cluster.</p>",
        SerializedName = @"creationDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimelineCreationDateTime { get; set; }
        /// <summary><p>The date and time when the cluster was terminated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date and time when the cluster was terminated.</p>",
        SerializedName = @"endDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimelineEndDateTime { get; set; }
        /// <summary><p>The date and time when the cluster was ready to run steps.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date and time when the cluster was ready to run steps.</p>",
        SerializedName = @"readyDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimelineReadyDateTime { get; set; }

    }
    /// Definition of ClusterStatus
    internal partial interface IClusterStatus1Internal

    {
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode? CodeValue { get; set; }
        /// <summary>
        /// <p>A list of tuples that provides information about the errors that caused a cluster to terminate. This structure can
        /// contain up to 10 different <code>ErrorDetail</code> tuples.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated[] ErrorDetail { get; set; }
        /// <summary><p>The current state of the cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateEnumValue State { get; set; }
        /// <summary><p>The reason for the cluster status change.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReason StateChangeReason { get; set; }
        /// <summary><p>The programmatic code for the state change reason.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonCodeEnumValue StateChangeReasonCode { get; set; }
        /// <summary><p>The descriptive message for the state change reason.</p></summary>
        string StateChangeReasonMessage { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState? StateValue { get; set; }
        /// <summary>
        /// <p>A timeline that represents the status of a cluster over the lifetime of the cluster.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimeline Timeline { get; set; }
        /// <summary><p>The creation date and time of the cluster.</p></summary>
        global::System.DateTime? TimelineCreationDateTime { get; set; }
        /// <summary><p>The date and time when the cluster was terminated.</p></summary>
        global::System.DateTime? TimelineEndDateTime { get; set; }
        /// <summary><p>The date and time when the cluster was ready to run steps.</p></summary>
        global::System.DateTime? TimelineReadyDateTime { get; set; }

    }
}