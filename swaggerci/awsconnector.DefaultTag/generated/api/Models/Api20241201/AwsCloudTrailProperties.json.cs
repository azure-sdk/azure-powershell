// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsCloudTrailTrail</summary>
    public partial class AwsCloudTrailProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject into a new instance of <see cref="AwsCloudTrailProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AwsCloudTrailProperties(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_advancedEventSelector = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("advancedEventSelectors"), out var __jsonAdvancedEventSelectors) ? If( __jsonAdvancedEventSelectors as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedEventSelector[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedEventSelector) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AdvancedEventSelector.FromJson(__u) )) ))() : null : AdvancedEventSelector;}
            {_arn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("arn"), out var __jsonArn) ? (string)__jsonArn : (string)Arn;}
            {_cloudWatchLogsLogGroupArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("cloudWatchLogsLogGroupArn"), out var __jsonCloudWatchLogsLogGroupArn) ? (string)__jsonCloudWatchLogsLogGroupArn : (string)CloudWatchLogsLogGroupArn;}
            {_cloudWatchLogsRoleArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("cloudWatchLogsRoleArn"), out var __jsonCloudWatchLogsRoleArn) ? (string)__jsonCloudWatchLogsRoleArn : (string)CloudWatchLogsRoleArn;}
            {_enableLogFileValidation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("enableLogFileValidation"), out var __jsonEnableLogFileValidation) ? (bool?)__jsonEnableLogFileValidation : EnableLogFileValidation;}
            {_eventSelector = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("eventSelectors"), out var __jsonEventSelectors) ? If( __jsonEventSelectors as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEventSelector[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEventSelector) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EventSelector.FromJson(__p) )) ))() : null : EventSelector;}
            {_includeGlobalServiceEvent = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("includeGlobalServiceEvents"), out var __jsonIncludeGlobalServiceEvents) ? (bool?)__jsonIncludeGlobalServiceEvents : IncludeGlobalServiceEvent;}
            {_insightSelector = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("insightSelectors"), out var __jsonInsightSelectors) ? If( __jsonInsightSelectors as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInsightSelector[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInsightSelector) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InsightSelector.FromJson(__k) )) ))() : null : InsightSelector;}
            {_isLogging = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("isLogging"), out var __jsonIsLogging) ? (bool?)__jsonIsLogging : IsLogging;}
            {_isMultiRegionTrail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("isMultiRegionTrail"), out var __jsonIsMultiRegionTrail) ? (bool?)__jsonIsMultiRegionTrail : IsMultiRegionTrail;}
            {_isOrganizationTrail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("isOrganizationTrail"), out var __jsonIsOrganizationTrail) ? (bool?)__jsonIsOrganizationTrail : IsOrganizationTrail;}
            {_kmsKeyId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("kmsKeyId"), out var __jsonKmsKeyId) ? (string)__jsonKmsKeyId : (string)KmsKeyId;}
            {_s3BucketName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("s3BucketName"), out var __jsonS3BucketName) ? (string)__jsonS3BucketName : (string)S3BucketName;}
            {_s3KeyPrefix = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("s3KeyPrefix"), out var __jsonS3KeyPrefix) ? (string)__jsonS3KeyPrefix : (string)S3KeyPrefix;}
            {_snsTopicArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("snsTopicArn"), out var __jsonSnsTopicArn) ? (string)__jsonSnsTopicArn : (string)SnsTopicArn;}
            {_snsTopicName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("snsTopicName"), out var __jsonSnsTopicName) ? (string)__jsonSnsTopicName : (string)SnsTopicName;}
            {_tag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("tags"), out var __jsonTags) ? If( __jsonTags as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated6[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated6) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated6.FromJson(__f) )) ))() : null : Tag;}
            {_trailName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("trailName"), out var __jsonTrailName) ? (string)__jsonTrailName : (string)TrailName;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json ? new AwsCloudTrailProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AwsCloudTrailProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AwsCloudTrailProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (null != this._advancedEventSelector)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __x in this._advancedEventSelector )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("advancedEventSelectors",__w);
            }
            AddIf( null != (((object)this._arn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._arn.ToString()) : null, "arn" ,container.Add );
            AddIf( null != (((object)this._cloudWatchLogsLogGroupArn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._cloudWatchLogsLogGroupArn.ToString()) : null, "cloudWatchLogsLogGroupArn" ,container.Add );
            AddIf( null != (((object)this._cloudWatchLogsRoleArn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._cloudWatchLogsRoleArn.ToString()) : null, "cloudWatchLogsRoleArn" ,container.Add );
            AddIf( null != this._enableLogFileValidation ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._enableLogFileValidation) : null, "enableLogFileValidation" ,container.Add );
            if (null != this._eventSelector)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __s in this._eventSelector )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("eventSelectors",__r);
            }
            AddIf( null != this._includeGlobalServiceEvent ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._includeGlobalServiceEvent) : null, "includeGlobalServiceEvents" ,container.Add );
            if (null != this._insightSelector)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __n in this._insightSelector )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("insightSelectors",__m);
            }
            AddIf( null != this._isLogging ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._isLogging) : null, "isLogging" ,container.Add );
            AddIf( null != this._isMultiRegionTrail ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._isMultiRegionTrail) : null, "isMultiRegionTrail" ,container.Add );
            AddIf( null != this._isOrganizationTrail ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._isOrganizationTrail) : null, "isOrganizationTrail" ,container.Add );
            AddIf( null != (((object)this._kmsKeyId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._kmsKeyId.ToString()) : null, "kmsKeyId" ,container.Add );
            AddIf( null != (((object)this._s3BucketName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._s3BucketName.ToString()) : null, "s3BucketName" ,container.Add );
            AddIf( null != (((object)this._s3KeyPrefix)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._s3KeyPrefix.ToString()) : null, "s3KeyPrefix" ,container.Add );
            AddIf( null != (((object)this._snsTopicArn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._snsTopicArn.ToString()) : null, "snsTopicArn" ,container.Add );
            AddIf( null != (((object)this._snsTopicName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._snsTopicName.ToString()) : null, "snsTopicName" ,container.Add );
            if (null != this._tag)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __i in this._tag )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("tags",__h);
            }
            AddIf( null != (((object)this._trailName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._trailName.ToString()) : null, "trailName" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}