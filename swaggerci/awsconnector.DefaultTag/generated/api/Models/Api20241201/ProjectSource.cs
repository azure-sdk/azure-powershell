// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ProjectSource</summary>
    public partial class ProjectSource :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSource,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal
    {

        /// <summary>Backing field for <see cref="Auth" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuth _auth;

        /// <summary>
        /// <p>Information about the authorization settings for CodeBuild to access the source code to be built.</p> <p>This information
        /// is for the CodeBuild console's use only. Your code should not get or set this information directly.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuth Auth { get => (this._auth = this._auth ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SourceAuth()); set => this._auth = value; }

        /// <summary><p>The resource value that applies to the specified authorization type.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuthInternal)Auth).Resource; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuthInternal)Auth).Resource = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceAuthType? AuthTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuthInternal)Auth).TypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuthInternal)Auth).TypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceAuthType)""); }

        /// <summary>Backing field for <see cref="BuildStatusConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBuildStatusConfig _buildStatusConfig;

        /// <summary>
        /// <p>Contains information that defines how the build project reports the build status to the source provider. This option
        /// is only used when the source provider is <code>GITHUB</code>, <code>GITHUB_ENTERPRISE</code>, or <code>BITBUCKET</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBuildStatusConfig BuildStatusConfig { get => (this._buildStatusConfig = this._buildStatusConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BuildStatusConfig()); set => this._buildStatusConfig = value; }

        /// <summary>
        /// <p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>name</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string BuildStatusConfigContext { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBuildStatusConfigInternal)BuildStatusConfig).Context; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBuildStatusConfigInternal)BuildStatusConfig).Context = value ?? null; }

        /// <summary>
        /// <p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>url</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string BuildStatusConfigTargetUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBuildStatusConfigInternal)BuildStatusConfig).TargetUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBuildStatusConfigInternal)BuildStatusConfig).TargetUrl = value ?? null; }

        /// <summary>Backing field for <see cref="Buildspec" /> property.</summary>
        private string _buildspec;

        /// <summary>
        /// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be
        /// either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code>
        /// environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build
        /// project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>).
        /// If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root
        /// directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec
        /// File Name and Storage Location</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Buildspec { get => this._buildspec; set => this._buildspec = value; }

        /// <summary>Backing field for <see cref="GitCloneDepth" /> property.</summary>
        private int? _gitCloneDepth;

        /// <summary><p>Information about the Git clone depth for the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? GitCloneDepth { get => this._gitCloneDepth; set => this._gitCloneDepth = value; }

        /// <summary><p> Set to true to fetch Git submodules for your CodeBuild build project. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? GitSubmoduleConfigFetchSubmodule { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGitSubmodulesConfigInternal)GitSubmodulesConfig).FetchSubmodule; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGitSubmodulesConfigInternal)GitSubmodulesConfig).FetchSubmodule = value ?? default(bool); }

        /// <summary>Backing field for <see cref="GitSubmodulesConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGitSubmodulesConfig _gitSubmodulesConfig;

        /// <summary>
        /// <p> Information about the Git submodules configuration for the build project. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGitSubmodulesConfig GitSubmodulesConfig { get => (this._gitSubmodulesConfig = this._gitSubmodulesConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.GitSubmodulesConfig()); set => this._gitSubmodulesConfig = value; }

        /// <summary>Backing field for <see cref="InsecureSsl" /> property.</summary>
        private bool? _insecureSsl;

        /// <summary>
        /// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? InsecureSsl { get => this._insecureSsl; set => this._insecureSsl = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>
        /// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code
        /// settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified.
        /// If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action
        /// instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository
        /// that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p>
        /// </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP
        /// file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>).
        /// </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>).
        /// </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains
        /// the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild
        /// console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub
        /// <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository
        /// you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected
        /// to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code>
        /// value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS
        /// clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services
        /// account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console
        /// to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>.
        /// Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected
        /// to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's
        /// <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source
        /// code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file.
        /// You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating
        /// a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access
        /// to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not
        /// need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection,
        /// in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p>
        /// </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property.
        /// For all of the other types, you must specify <code>Location</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for Auth</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuth Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal.Auth { get => (this._auth = this._auth ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SourceAuth()); set { {_auth = value;} } }

        /// <summary>Internal Acessors for AuthType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuthTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal.AuthType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuthInternal)Auth).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuthInternal)Auth).Type = value; }

        /// <summary>Internal Acessors for BuildStatusConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBuildStatusConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal.BuildStatusConfig { get => (this._buildStatusConfig = this._buildStatusConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BuildStatusConfig()); set { {_buildStatusConfig = value;} } }

        /// <summary>Internal Acessors for GitSubmodulesConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGitSubmodulesConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal.GitSubmodulesConfig { get => (this._gitSubmodulesConfig = this._gitSubmodulesConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.GitSubmodulesConfig()); set { {_gitSubmodulesConfig = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal.Type { get => (this._type = this._type ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SourceTypeEnumValue()); set { {_type = value;} } }

        /// <summary>Backing field for <see cref="ReportBuildStatus" /> property.</summary>
        private bool? _reportBuildStatus;

        /// <summary>
        /// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only
        /// when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and
        /// you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the
        /// build status to the source provider, the user associated with the source provider must have write access to the repo.
        /// If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source
        /// provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always
        /// reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit
        /// to the repo for a change to this property to take effect.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? ReportBuildStatus { get => this._reportBuildStatus; set => this._reportBuildStatus = value; }

        /// <summary>Backing field for <see cref="SourceIdentifier" /> property.</summary>
        private string _sourceIdentifier;

        /// <summary>
        /// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and
        /// must be less than 128 characters in length. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SourceIdentifier { get => this._sourceIdentifier; set => this._sourceIdentifier = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValue _type;

        /// <summary>
        /// <p>The type of repository that contains the source code to be built. Valid values include:</p> <ul> <li> <p> <code>BITBUCKET</code>:
        /// The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code>: The source code is in an CodeCommit
        /// repository.</p> </li> <li> <p> <code>CODEPIPELINE</code>: The source code settings are specified in the source action
        /// of a pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code>: The source code is in a GitHub repository.</p>
        /// </li> <li> <p> <code>GITHUB_ENTERPRISE</code>: The source code is in a GitHub Enterprise Server repository.</p> </li>
        /// <li> <p> <code>GITLAB</code>: The source code is in a GitLab repository.</p> </li> <li> <p> <code>GITLAB_SELF_MANAGED</code>:
        /// The source code is in a self-managed GitLab repository.</p> </li> <li> <p> <code>NO_SOURCE</code>: The project does not
        /// have input source code.</p> </li> <li> <p> <code>S3</code>: The source code is in an Amazon S3 bucket.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValue Type { get => (this._type = this._type ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SourceTypeEnumValue()); set => this._type = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType? Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValueInternal)Type).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValueInternal)Type).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType)""); }

        /// <summary>Creates an new <see cref="ProjectSource" /> instance.</summary>
        public ProjectSource()
        {

        }
    }
    /// Definition of ProjectSource
    public partial interface IProjectSource :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>The resource value that applies to the specified authorization type.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The resource value that applies to the specified authorization type.</p>",
        SerializedName = @"resource",
        PossibleTypes = new [] { typeof(string) })]
        string AuthResource { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceAuthType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceAuthType? AuthTypeValue { get; set; }
        /// <summary>
        /// <p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>name</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>name</code> parameter in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a> in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create a commit status</a> in the GitHub developer guide.</p> </dd> </dl>",
        SerializedName = @"context",
        PossibleTypes = new [] { typeof(string) })]
        string BuildStatusConfigContext { get; set; }
        /// <summary>
        /// <p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>url</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>url</code> parameter in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a> in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create a commit status</a> in the GitHub developer guide.</p> </dd> </dl>",
        SerializedName = @"targetUrl",
        PossibleTypes = new [] { typeof(string) })]
        string BuildStatusConfigTargetUrl { get; set; }
        /// <summary>
        /// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be
        /// either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code>
        /// environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build
        /// project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>).
        /// If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root
        /// directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec
        /// File Name and Storage Location</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code> environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec File Name and Storage Location</a>. </p>",
        SerializedName = @"buildspec",
        PossibleTypes = new [] { typeof(string) })]
        string Buildspec { get; set; }
        /// <summary><p>Information about the Git clone depth for the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Information about the Git clone depth for the build project.</p>",
        SerializedName = @"gitCloneDepth",
        PossibleTypes = new [] { typeof(int) })]
        int? GitCloneDepth { get; set; }
        /// <summary><p> Set to true to fetch Git submodules for your CodeBuild build project. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> Set to true to fetch Git submodules for your CodeBuild build project. </p>",
        SerializedName = @"fetchSubmodules",
        PossibleTypes = new [] { typeof(bool) })]
        bool? GitSubmoduleConfigFetchSubmodule { get; set; }
        /// <summary>
        /// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>",
        SerializedName = @"insecureSsl",
        PossibleTypes = new [] { typeof(bool) })]
        bool? InsecureSsl { get; set; }
        /// <summary>
        /// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code
        /// settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified.
        /// If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action
        /// instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository
        /// that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p>
        /// </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP
        /// file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>).
        /// </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>).
        /// </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains
        /// the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild
        /// console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub
        /// <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository
        /// you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected
        /// to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code>
        /// value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS
        /// clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services
        /// account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console
        /// to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>.
        /// Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected
        /// to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's
        /// <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source
        /// code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file.
        /// You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating
        /// a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access
        /// to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not
        /// need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection,
        /// in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p>
        /// </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property.
        /// For all of the other types, you must specify <code>Location</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p> </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>). </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>). </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>. Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property. For all of the other types, you must specify <code>Location</code>. </p>",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>
        /// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only
        /// when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and
        /// you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the
        /// build status to the source provider, the user associated with the source provider must have write access to the repo.
        /// If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source
        /// provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always
        /// reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit
        /// to the repo for a change to this property to take effect.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.</p>",
        SerializedName = @"reportBuildStatus",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ReportBuildStatus { get; set; }
        /// <summary>
        /// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and
        /// must be less than 128 characters in length. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>",
        SerializedName = @"sourceIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string SourceIdentifier { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType? Value { get; set; }

    }
    /// Definition of ProjectSource
    internal partial interface IProjectSourceInternal

    {
        /// <summary>
        /// <p>Information about the authorization settings for CodeBuild to access the source code to be built.</p> <p>This information
        /// is for the CodeBuild console's use only. Your code should not get or set this information directly.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuth Auth { get; set; }
        /// <summary><p>The resource value that applies to the specified authorization type.</p></summary>
        string AuthResource { get; set; }
        /// <summary>
        /// <p>The authorization type to use. Valid options are OAUTH or CODECONNECTIONS.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuthTypeEnumValue AuthType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceAuthType? AuthTypeValue { get; set; }
        /// <summary>
        /// <p>Contains information that defines how the build project reports the build status to the source provider. This option
        /// is only used when the source provider is <code>GITHUB</code>, <code>GITHUB_ENTERPRISE</code>, or <code>BITBUCKET</code>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBuildStatusConfig BuildStatusConfig { get; set; }
        /// <summary>
        /// <p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>name</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        string BuildStatusConfigContext { get; set; }
        /// <summary>
        /// <p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>url</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        string BuildStatusConfigTargetUrl { get; set; }
        /// <summary>
        /// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be
        /// either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code>
        /// environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build
        /// project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>).
        /// If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root
        /// directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec
        /// File Name and Storage Location</a>. </p>
        /// </summary>
        string Buildspec { get; set; }
        /// <summary><p>Information about the Git clone depth for the build project.</p></summary>
        int? GitCloneDepth { get; set; }
        /// <summary><p> Set to true to fetch Git submodules for your CodeBuild build project. </p></summary>
        bool? GitSubmoduleConfigFetchSubmodule { get; set; }
        /// <summary>
        /// <p> Information about the Git submodules configuration for the build project. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGitSubmodulesConfig GitSubmodulesConfig { get; set; }
        /// <summary>
        /// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
        /// </summary>
        bool? InsecureSsl { get; set; }
        /// <summary>
        /// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code
        /// settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified.
        /// If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action
        /// instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository
        /// that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p>
        /// </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP
        /// file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>).
        /// </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>).
        /// </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains
        /// the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild
        /// console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub
        /// <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository
        /// you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected
        /// to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code>
        /// value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS
        /// clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services
        /// account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console
        /// to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>.
        /// Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected
        /// to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's
        /// <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source
        /// code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file.
        /// You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating
        /// a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access
        /// to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not
        /// need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection,
        /// in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p>
        /// </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property.
        /// For all of the other types, you must specify <code>Location</code>. </p>
        /// </summary>
        string Location { get; set; }
        /// <summary>
        /// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only
        /// when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and
        /// you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the
        /// build status to the source provider, the user associated with the source provider must have write access to the repo.
        /// If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source
        /// provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always
        /// reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit
        /// to the repo for a change to this property to take effect.</p>
        /// </summary>
        bool? ReportBuildStatus { get; set; }
        /// <summary>
        /// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and
        /// must be less than 128 characters in length. </p>
        /// </summary>
        string SourceIdentifier { get; set; }
        /// <summary>
        /// <p>The type of repository that contains the source code to be built. Valid values include:</p> <ul> <li> <p> <code>BITBUCKET</code>:
        /// The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code>: The source code is in an CodeCommit
        /// repository.</p> </li> <li> <p> <code>CODEPIPELINE</code>: The source code settings are specified in the source action
        /// of a pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code>: The source code is in a GitHub repository.</p>
        /// </li> <li> <p> <code>GITHUB_ENTERPRISE</code>: The source code is in a GitHub Enterprise Server repository.</p> </li>
        /// <li> <p> <code>GITLAB</code>: The source code is in a GitLab repository.</p> </li> <li> <p> <code>GITLAB_SELF_MANAGED</code>:
        /// The source code is in a self-managed GitLab repository.</p> </li> <li> <p> <code>NO_SOURCE</code>: The project does not
        /// have input source code.</p> </li> <li> <p> <code>S3</code>: The source code is in an Amazon S3 bucket.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValue Type { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType? Value { get; set; }

    }
}