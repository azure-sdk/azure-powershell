// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEksNodegroup</summary>
    public partial class AwsEksNodegroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AmiType" /> property.</summary>
        private string _amiType;

        /// <summary>The AMI type for your node group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AmiType { get => this._amiType; set => this._amiType = value; }

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Backing field for <see cref="CapacityType" /> property.</summary>
        private string _capacityType;

        /// <summary>The capacity type of your managed node group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string CapacityType { get => this._capacityType; set => this._capacityType = value; }

        /// <summary>Backing field for <see cref="ClusterName" /> property.</summary>
        private string _clusterName;

        /// <summary>Name of the cluster to create the node group in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ClusterName { get => this._clusterName; set => this._clusterName = value; }

        /// <summary>Backing field for <see cref="DiskSize" /> property.</summary>
        private int? _diskSize;

        /// <summary>The root device disk size (in GiB) for your node group instances.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? DiskSize { get => this._diskSize; set => this._diskSize = value; }

        /// <summary>Backing field for <see cref="ForceUpdateEnabled" /> property.</summary>
        private bool? _forceUpdateEnabled;

        /// <summary>
        /// Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? ForceUpdateEnabled { get => this._forceUpdateEnabled; set => this._forceUpdateEnabled = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="InstanceType" /> property.</summary>
        private string[] _instanceType;

        /// <summary>Specify the instance types for a node group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] InstanceType { get => this._instanceType; set => this._instanceType = value; }

        /// <summary>Backing field for <see cref="Label" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesLabels _label;

        /// <summary>
        /// The Kubernetes labels to be applied to the nodes in the node group when they are created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesLabels Label { get => (this._label = this._label ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEksNodegroupPropertiesLabels()); set => this._label = value; }

        /// <summary>Backing field for <see cref="LaunchTemplate" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationAutoGenerated _launchTemplate;

        /// <summary>
        /// An object representing a node group's launch template specification. An object representing a launch template specification
        /// for AWS EKS Nodegroup.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationAutoGenerated LaunchTemplate { get => (this._launchTemplate = this._launchTemplate ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LaunchTemplateSpecificationAutoGenerated()); set => this._launchTemplate = value; }

        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationAutoGeneratedInternal)LaunchTemplate).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationAutoGeneratedInternal)LaunchTemplate).Id = value ?? null; }

        /// <summary>Property name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationAutoGeneratedInternal)LaunchTemplate).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationAutoGeneratedInternal)LaunchTemplate).Name = value ?? null; }

        /// <summary>Property version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationAutoGeneratedInternal)LaunchTemplate).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationAutoGeneratedInternal)LaunchTemplate).Version = value ?? null; }

        /// <summary>Internal Acessors for LaunchTemplate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesInternal.LaunchTemplate { get => (this._launchTemplate = this._launchTemplate ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LaunchTemplateSpecificationAutoGenerated()); set { {_launchTemplate = value;} } }

        /// <summary>Internal Acessors for RemoteAccess</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRemoteAccess Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesInternal.RemoteAccess { get => (this._remoteAccess = this._remoteAccess ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RemoteAccess()); set { {_remoteAccess = value;} } }

        /// <summary>Internal Acessors for ScalingConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesInternal.ScalingConfig { get => (this._scalingConfig = this._scalingConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ScalingConfig()); set { {_scalingConfig = value;} } }

        /// <summary>Internal Acessors for UpdateConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUpdateConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesInternal.UpdateConfig { get => (this._updateConfig = this._updateConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.UpdateConfig()); set { {_updateConfig = value;} } }

        /// <summary>Backing field for <see cref="NodeRole" /> property.</summary>
        private string _nodeRole;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role to associate with your node group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string NodeRole { get => this._nodeRole; set => this._nodeRole = value; }

        /// <summary>Backing field for <see cref="NodegroupName" /> property.</summary>
        private string _nodegroupName;

        /// <summary>The unique name to give your node group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string NodegroupName { get => this._nodegroupName; set => this._nodegroupName = value; }

        /// <summary>Backing field for <see cref="ReleaseVersion" /> property.</summary>
        private string _releaseVersion;

        /// <summary>The AMI version of the Amazon EKS-optimized AMI to use with your node group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ReleaseVersion { get => this._releaseVersion; set => this._releaseVersion = value; }

        /// <summary>Backing field for <see cref="RemoteAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRemoteAccess _remoteAccess;

        /// <summary>
        /// The remote access (SSH) configuration to use with your node group. An object representing a remote access configuration
        /// specification for AWS EKS Nodegroup.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRemoteAccess RemoteAccess { get => (this._remoteAccess = this._remoteAccess ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RemoteAccess()); set => this._remoteAccess = value; }

        /// <summary>Property ec2SshKey</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RemoteAccessEc2SshKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRemoteAccessInternal)RemoteAccess).Ec2SshKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRemoteAccessInternal)RemoteAccess).Ec2SshKey = value ?? null; }

        /// <summary>Property sourceSecurityGroups</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] RemoteAccessSourceSecurityGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRemoteAccessInternal)RemoteAccess).SourceSecurityGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRemoteAccessInternal)RemoteAccess).SourceSecurityGroup = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ScalingConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfig _scalingConfig;

        /// <summary>
        /// The scaling configuration details for the Auto Scaling group that is created for your node group. An object representing
        /// a auto scaling group specification for AWS EKS Nodegroup.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfig ScalingConfig { get => (this._scalingConfig = this._scalingConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ScalingConfig()); set => this._scalingConfig = value; }

        /// <summary>Property desiredSize</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ScalingConfigDesiredSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfigInternal)ScalingConfig).DesiredSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfigInternal)ScalingConfig).DesiredSize = value ?? default(int); }

        /// <summary>Property maxSize</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ScalingConfigMaxSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfigInternal)ScalingConfig).MaxSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfigInternal)ScalingConfig).MaxSize = value ?? default(int); }

        /// <summary>Property minSize</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ScalingConfigMinSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfigInternal)ScalingConfig).MinSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfigInternal)ScalingConfig).MinSize = value ?? default(int); }

        /// <summary>Backing field for <see cref="Subnet" /> property.</summary>
        private string[] _subnet;

        /// <summary>
        /// The subnets to use for the Auto Scaling group that is created for your node group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Subnet { get => this._subnet; set => this._subnet = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesTags _tag;

        /// <summary>
        /// The metadata, as key-value pairs, to apply to the node group to assist with categorization and organization. Follows same
        /// schema as Labels for consistency.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEksNodegroupPropertiesTags()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Taint" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITaint[] _taint;

        /// <summary>
        /// The Kubernetes taints to be applied to the nodes in the node group when they are created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITaint[] Taint { get => this._taint; set => this._taint = value; }

        /// <summary>Backing field for <see cref="UpdateConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUpdateConfig _updateConfig;

        /// <summary>The node group update configuration. The node group update configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUpdateConfig UpdateConfig { get => (this._updateConfig = this._updateConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.UpdateConfig()); set => this._updateConfig = value; }

        /// <summary>
        /// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value
        /// or maxUnavailablePercentage is required to have a value.The maximum number is 100.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? UpdateConfigMaxUnavailable { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUpdateConfigInternal)UpdateConfig).MaxUnavailable; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUpdateConfigInternal)UpdateConfig).MaxUnavailable = value ?? default(int); }

        /// <summary>
        /// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel,
        /// up to 100 nodes at once. This value or maxUnavailable is required to have a value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? UpdateConfigMaxUnavailablePercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUpdateConfigInternal)UpdateConfig).MaxUnavailablePercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUpdateConfigInternal)UpdateConfig).MaxUnavailablePercentage = value ?? default(int); }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>The Kubernetes version to use for your managed nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="AwsEksNodegroupProperties" /> instance.</summary>
        public AwsEksNodegroupProperties()
        {

        }
    }
    /// Definition of awsEksNodegroup
    public partial interface IAwsEksNodegroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>The AMI type for your node group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AMI type for your node group.",
        SerializedName = @"amiType",
        PossibleTypes = new [] { typeof(string) })]
        string AmiType { get; set; }
        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property arn",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>The capacity type of your managed node group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The capacity type of your managed node group.",
        SerializedName = @"capacityType",
        PossibleTypes = new [] { typeof(string) })]
        string CapacityType { get; set; }
        /// <summary>Name of the cluster to create the node group in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the cluster to create the node group in.",
        SerializedName = @"clusterName",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterName { get; set; }
        /// <summary>The root device disk size (in GiB) for your node group instances.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The root device disk size (in GiB) for your node group instances.",
        SerializedName = @"diskSize",
        PossibleTypes = new [] { typeof(int) })]
        int? DiskSize { get; set; }
        /// <summary>
        /// Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.",
        SerializedName = @"forceUpdateEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ForceUpdateEnabled { get; set; }
        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Specify the instance types for a node group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the instance types for a node group.",
        SerializedName = @"instanceTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] InstanceType { get; set; }
        /// <summary>
        /// The Kubernetes labels to be applied to the nodes in the node group when they are created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Kubernetes labels to be applied to the nodes in the node group when they are created.",
        SerializedName = @"labels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesLabels) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesLabels Label { get; set; }
        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateId { get; set; }
        /// <summary>Property name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateName { get; set; }
        /// <summary>Property version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property version",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateVersion { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role to associate with your node group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the IAM role to associate with your node group.",
        SerializedName = @"nodeRole",
        PossibleTypes = new [] { typeof(string) })]
        string NodeRole { get; set; }
        /// <summary>The unique name to give your node group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique name to give your node group.",
        SerializedName = @"nodegroupName",
        PossibleTypes = new [] { typeof(string) })]
        string NodegroupName { get; set; }
        /// <summary>The AMI version of the Amazon EKS-optimized AMI to use with your node group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AMI version of the Amazon EKS-optimized AMI to use with your node group.",
        SerializedName = @"releaseVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ReleaseVersion { get; set; }
        /// <summary>Property ec2SshKey</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property ec2SshKey",
        SerializedName = @"ec2SshKey",
        PossibleTypes = new [] { typeof(string) })]
        string RemoteAccessEc2SshKey { get; set; }
        /// <summary>Property sourceSecurityGroups</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property sourceSecurityGroups",
        SerializedName = @"sourceSecurityGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] RemoteAccessSourceSecurityGroup { get; set; }
        /// <summary>Property desiredSize</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property desiredSize",
        SerializedName = @"desiredSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ScalingConfigDesiredSize { get; set; }
        /// <summary>Property maxSize</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property maxSize",
        SerializedName = @"maxSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ScalingConfigMaxSize { get; set; }
        /// <summary>Property minSize</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property minSize",
        SerializedName = @"minSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ScalingConfigMinSize { get; set; }
        /// <summary>
        /// The subnets to use for the Auto Scaling group that is created for your node group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The subnets to use for the Auto Scaling group that is created for your node group.",
        SerializedName = @"subnets",
        PossibleTypes = new [] { typeof(string) })]
        string[] Subnet { get; set; }
        /// <summary>
        /// The metadata, as key-value pairs, to apply to the node group to assist with categorization and organization. Follows same
        /// schema as Labels for consistency.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The metadata, as key-value pairs, to apply to the node group to assist with categorization and organization. Follows same schema as Labels for consistency.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesTags Tag { get; set; }
        /// <summary>
        /// The Kubernetes taints to be applied to the nodes in the node group when they are created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Kubernetes taints to be applied to the nodes in the node group when they are created.",
        SerializedName = @"taints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITaint) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITaint[] Taint { get; set; }
        /// <summary>
        /// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value
        /// or maxUnavailablePercentage is required to have a value.The maximum number is 100.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or maxUnavailablePercentage is required to have a value.The maximum number is 100.",
        SerializedName = @"maxUnavailable",
        PossibleTypes = new [] { typeof(int) })]
        int? UpdateConfigMaxUnavailable { get; set; }
        /// <summary>
        /// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel,
        /// up to 100 nodes at once. This value or maxUnavailable is required to have a value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value.",
        SerializedName = @"maxUnavailablePercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? UpdateConfigMaxUnavailablePercentage { get; set; }
        /// <summary>The Kubernetes version to use for your managed nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Kubernetes version to use for your managed nodes.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// Definition of awsEksNodegroup
    internal partial interface IAwsEksNodegroupPropertiesInternal

    {
        /// <summary>The AMI type for your node group.</summary>
        string AmiType { get; set; }
        /// <summary>Property arn</summary>
        string Arn { get; set; }
        /// <summary>The capacity type of your managed node group.</summary>
        string CapacityType { get; set; }
        /// <summary>Name of the cluster to create the node group in.</summary>
        string ClusterName { get; set; }
        /// <summary>The root device disk size (in GiB) for your node group instances.</summary>
        int? DiskSize { get; set; }
        /// <summary>
        /// Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.
        /// </summary>
        bool? ForceUpdateEnabled { get; set; }
        /// <summary>Property id</summary>
        string Id { get; set; }
        /// <summary>Specify the instance types for a node group.</summary>
        string[] InstanceType { get; set; }
        /// <summary>
        /// The Kubernetes labels to be applied to the nodes in the node group when they are created.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesLabels Label { get; set; }
        /// <summary>
        /// An object representing a node group's launch template specification. An object representing a launch template specification
        /// for AWS EKS Nodegroup.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationAutoGenerated LaunchTemplate { get; set; }
        /// <summary>Property id</summary>
        string LaunchTemplateId { get; set; }
        /// <summary>Property name</summary>
        string LaunchTemplateName { get; set; }
        /// <summary>Property version</summary>
        string LaunchTemplateVersion { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role to associate with your node group.
        /// </summary>
        string NodeRole { get; set; }
        /// <summary>The unique name to give your node group.</summary>
        string NodegroupName { get; set; }
        /// <summary>The AMI version of the Amazon EKS-optimized AMI to use with your node group.</summary>
        string ReleaseVersion { get; set; }
        /// <summary>
        /// The remote access (SSH) configuration to use with your node group. An object representing a remote access configuration
        /// specification for AWS EKS Nodegroup.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRemoteAccess RemoteAccess { get; set; }
        /// <summary>Property ec2SshKey</summary>
        string RemoteAccessEc2SshKey { get; set; }
        /// <summary>Property sourceSecurityGroups</summary>
        string[] RemoteAccessSourceSecurityGroup { get; set; }
        /// <summary>
        /// The scaling configuration details for the Auto Scaling group that is created for your node group. An object representing
        /// a auto scaling group specification for AWS EKS Nodegroup.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfig ScalingConfig { get; set; }
        /// <summary>Property desiredSize</summary>
        int? ScalingConfigDesiredSize { get; set; }
        /// <summary>Property maxSize</summary>
        int? ScalingConfigMaxSize { get; set; }
        /// <summary>Property minSize</summary>
        int? ScalingConfigMinSize { get; set; }
        /// <summary>
        /// The subnets to use for the Auto Scaling group that is created for your node group.
        /// </summary>
        string[] Subnet { get; set; }
        /// <summary>
        /// The metadata, as key-value pairs, to apply to the node group to assist with categorization and organization. Follows same
        /// schema as Labels for consistency.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksNodegroupPropertiesTags Tag { get; set; }
        /// <summary>
        /// The Kubernetes taints to be applied to the nodes in the node group when they are created.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITaint[] Taint { get; set; }
        /// <summary>The node group update configuration. The node group update configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUpdateConfig UpdateConfig { get; set; }
        /// <summary>
        /// The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value
        /// or maxUnavailablePercentage is required to have a value.The maximum number is 100.
        /// </summary>
        int? UpdateConfigMaxUnavailable { get; set; }
        /// <summary>
        /// The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel,
        /// up to 100 nodes at once. This value or maxUnavailable is required to have a value.
        /// </summary>
        int? UpdateConfigMaxUnavailablePercentage { get; set; }
        /// <summary>The Kubernetes version to use for your managed nodes.</summary>
        string Version { get; set; }

    }
}