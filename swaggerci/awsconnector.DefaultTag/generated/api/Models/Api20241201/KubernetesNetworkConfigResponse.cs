// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of KubernetesNetworkConfigResponse</summary>
    public partial class KubernetesNetworkConfigResponse :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponse,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponseInternal
    {

        /// <summary>Backing field for <see cref="IPFamily" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPFamilyEnumValue _iPFamily;

        /// <summary>
        /// <p>The IP family used to assign Kubernetes <code>Pod</code> and <code>Service</code> objects IP addresses. The IP family
        /// is always <code>ipv4</code>, unless you have a <code>1.21</code> or later cluster running version <code>1.10.1</code>
        /// or later of the Amazon VPC CNI plugin for Kubernetes and specified <code>ipv6</code> when you created the cluster. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPFamilyEnumValue IPFamily { get => (this._iPFamily = this._iPFamily ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPFamilyEnumValue()); set => this._iPFamily = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily? IPFamilyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPFamilyEnumValueInternal)IPFamily).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPFamilyEnumValueInternal)IPFamily).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily)""); }

        /// <summary>Internal Acessors for IPFamily</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPFamilyEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponseInternal.IPFamily { get => (this._iPFamily = this._iPFamily ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPFamilyEnumValue()); set { {_iPFamily = value;} } }

        /// <summary>Backing field for <see cref="ServiceIpv4Cidr" /> property.</summary>
        private string _serviceIpv4Cidr;

        /// <summary>
        /// <p>The CIDR block that Kubernetes <code>Pod</code> and <code>Service</code> object IP addresses are assigned from. Kubernetes
        /// assigns addresses from an <code>IPv4</code> CIDR block assigned to a subnet that the node is in. If you didn't specify
        /// a CIDR block when you created the cluster, then Kubernetes assigns addresses from either the <code>10.100.0.0/16</code>
        /// or <code>172.20.0.0/16</code> CIDR blocks. If this was specified, then it was specified when the cluster was created and
        /// it can't be changed.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ServiceIpv4Cidr { get => this._serviceIpv4Cidr; set => this._serviceIpv4Cidr = value; }

        /// <summary>Backing field for <see cref="ServiceIpv6Cidr" /> property.</summary>
        private string _serviceIpv6Cidr;

        /// <summary>
        /// <p>The CIDR block that Kubernetes pod and service IP addresses are assigned from if you created a 1.21 or later cluster
        /// with version 1.10.1 or later of the Amazon VPC CNI add-on and specified <code>ipv6</code> for <b>ipFamily</b> when you
        /// created the cluster. Kubernetes assigns service addresses from the unique local address range (<code>fc00::/7</code>)
        /// because you can't specify a custom IPv6 CIDR block when you create the cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ServiceIpv6Cidr { get => this._serviceIpv6Cidr; set => this._serviceIpv6Cidr = value; }

        /// <summary>Creates an new <see cref="KubernetesNetworkConfigResponse" /> instance.</summary>
        public KubernetesNetworkConfigResponse()
        {

        }
    }
    /// Definition of KubernetesNetworkConfigResponse
    public partial interface IKubernetesNetworkConfigResponse :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily? IPFamilyValue { get; set; }
        /// <summary>
        /// <p>The CIDR block that Kubernetes <code>Pod</code> and <code>Service</code> object IP addresses are assigned from. Kubernetes
        /// assigns addresses from an <code>IPv4</code> CIDR block assigned to a subnet that the node is in. If you didn't specify
        /// a CIDR block when you created the cluster, then Kubernetes assigns addresses from either the <code>10.100.0.0/16</code>
        /// or <code>172.20.0.0/16</code> CIDR blocks. If this was specified, then it was specified when the cluster was created and
        /// it can't be changed.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The CIDR block that Kubernetes <code>Pod</code> and <code>Service</code> object IP addresses are assigned from. Kubernetes assigns addresses from an <code>IPv4</code> CIDR block assigned to a subnet that the node is in. If you didn't specify a CIDR block when you created the cluster, then Kubernetes assigns addresses from either the <code>10.100.0.0/16</code> or <code>172.20.0.0/16</code> CIDR blocks. If this was specified, then it was specified when the cluster was created and it can't be changed.</p>",
        SerializedName = @"serviceIpv4Cidr",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceIpv4Cidr { get; set; }
        /// <summary>
        /// <p>The CIDR block that Kubernetes pod and service IP addresses are assigned from if you created a 1.21 or later cluster
        /// with version 1.10.1 or later of the Amazon VPC CNI add-on and specified <code>ipv6</code> for <b>ipFamily</b> when you
        /// created the cluster. Kubernetes assigns service addresses from the unique local address range (<code>fc00::/7</code>)
        /// because you can't specify a custom IPv6 CIDR block when you create the cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The CIDR block that Kubernetes pod and service IP addresses are assigned from if you created a 1.21 or later cluster with version 1.10.1 or later of the Amazon VPC CNI add-on and specified <code>ipv6</code> for <b>ipFamily</b> when you created the cluster. Kubernetes assigns service addresses from the unique local address range (<code>fc00::/7</code>) because you can't specify a custom IPv6 CIDR block when you create the cluster.</p>",
        SerializedName = @"serviceIpv6Cidr",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceIpv6Cidr { get; set; }

    }
    /// Definition of KubernetesNetworkConfigResponse
    internal partial interface IKubernetesNetworkConfigResponseInternal

    {
        /// <summary>
        /// <p>The IP family used to assign Kubernetes <code>Pod</code> and <code>Service</code> objects IP addresses. The IP family
        /// is always <code>ipv4</code>, unless you have a <code>1.21</code> or later cluster running version <code>1.10.1</code>
        /// or later of the Amazon VPC CNI plugin for Kubernetes and specified <code>ipv6</code> when you created the cluster. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPFamilyEnumValue IPFamily { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily? IPFamilyValue { get; set; }
        /// <summary>
        /// <p>The CIDR block that Kubernetes <code>Pod</code> and <code>Service</code> object IP addresses are assigned from. Kubernetes
        /// assigns addresses from an <code>IPv4</code> CIDR block assigned to a subnet that the node is in. If you didn't specify
        /// a CIDR block when you created the cluster, then Kubernetes assigns addresses from either the <code>10.100.0.0/16</code>
        /// or <code>172.20.0.0/16</code> CIDR blocks. If this was specified, then it was specified when the cluster was created and
        /// it can't be changed.</p>
        /// </summary>
        string ServiceIpv4Cidr { get; set; }
        /// <summary>
        /// <p>The CIDR block that Kubernetes pod and service IP addresses are assigned from if you created a 1.21 or later cluster
        /// with version 1.10.1 or later of the Amazon VPC CNI add-on and specified <code>ipv6</code> for <b>ipFamily</b> when you
        /// created the cluster. Kubernetes assigns service addresses from the unique local address range (<code>fc00::/7</code>)
        /// because you can't specify a custom IPv6 CIDR block when you create the cluster.</p>
        /// </summary>
        string ServiceIpv6Cidr { get; set; }

    }
}