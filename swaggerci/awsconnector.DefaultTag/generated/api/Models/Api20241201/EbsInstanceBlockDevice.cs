// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of EbsInstanceBlockDevice</summary>
    public partial class EbsInstanceBlockDevice :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDevice,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal
    {

        /// <summary>Backing field for <see cref="AssociatedResource" /> property.</summary>
        private string _associatedResource;

        /// <summary>
        /// <p>The ARN of the Amazon ECS or Fargate task to which the volume is attached.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AssociatedResource { get => this._associatedResource; set => this._associatedResource = value; }

        /// <summary>Backing field for <see cref="AttachTime" /> property.</summary>
        private global::System.DateTime? _attachTime;

        /// <summary><p>The time stamp when the attachment initiated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? AttachTime { get => this._attachTime; set => this._attachTime = value; }

        /// <summary>Backing field for <see cref="DeleteOnTermination" /> property.</summary>
        private bool? _deleteOnTermination;

        /// <summary><p>Indicates whether the volume is deleted on instance termination.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? DeleteOnTermination { get => this._deleteOnTermination; set => this._deleteOnTermination = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AttachmentStatusEnumValue()); set { {_status = value;} } }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValue _status;

        /// <summary><p>The attachment state.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValue Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AttachmentStatusEnumValue()); set => this._status = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus? StatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValueInternal)Status).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValueInternal)Status).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus)""); }

        /// <summary>Backing field for <see cref="VolumeId" /> property.</summary>
        private string _volumeId;

        /// <summary><p>The ID of the EBS volume.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string VolumeId { get => this._volumeId; set => this._volumeId = value; }

        /// <summary>Backing field for <see cref="VolumeOwnerId" /> property.</summary>
        private string _volumeOwnerId;

        /// <summary>
        /// <p>The ID of the Amazon Web Services account that owns the volume.</p> <p>This parameter is returned only for volumes
        /// that are attached to Fargate tasks.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string VolumeOwnerId { get => this._volumeOwnerId; set => this._volumeOwnerId = value; }

        /// <summary>Creates an new <see cref="EbsInstanceBlockDevice" /> instance.</summary>
        public EbsInstanceBlockDevice()
        {

        }
    }
    /// Definition of EbsInstanceBlockDevice
    public partial interface IEbsInstanceBlockDevice :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>The ARN of the Amazon ECS or Fargate task to which the volume is attached.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN of the Amazon ECS or Fargate task to which the volume is attached.</p>",
        SerializedName = @"associatedResource",
        PossibleTypes = new [] { typeof(string) })]
        string AssociatedResource { get; set; }
        /// <summary><p>The time stamp when the attachment initiated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time stamp when the attachment initiated.</p>",
        SerializedName = @"attachTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AttachTime { get; set; }
        /// <summary><p>Indicates whether the volume is deleted on instance termination.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the volume is deleted on instance termination.</p>",
        SerializedName = @"deleteOnTermination",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeleteOnTermination { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus? StatusValue { get; set; }
        /// <summary><p>The ID of the EBS volume.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the EBS volume.</p>",
        SerializedName = @"volumeId",
        PossibleTypes = new [] { typeof(string) })]
        string VolumeId { get; set; }
        /// <summary>
        /// <p>The ID of the Amazon Web Services account that owns the volume.</p> <p>This parameter is returned only for volumes
        /// that are attached to Fargate tasks.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the Amazon Web Services account that owns the volume.</p> <p>This parameter is returned only for volumes that are attached to Fargate tasks.</p>",
        SerializedName = @"volumeOwnerId",
        PossibleTypes = new [] { typeof(string) })]
        string VolumeOwnerId { get; set; }

    }
    /// Definition of EbsInstanceBlockDevice
    internal partial interface IEbsInstanceBlockDeviceInternal

    {
        /// <summary>
        /// <p>The ARN of the Amazon ECS or Fargate task to which the volume is attached.</p>
        /// </summary>
        string AssociatedResource { get; set; }
        /// <summary><p>The time stamp when the attachment initiated.</p></summary>
        global::System.DateTime? AttachTime { get; set; }
        /// <summary><p>Indicates whether the volume is deleted on instance termination.</p></summary>
        bool? DeleteOnTermination { get; set; }
        /// <summary><p>The attachment state.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValue Status { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus? StatusValue { get; set; }
        /// <summary><p>The ID of the EBS volume.</p></summary>
        string VolumeId { get; set; }
        /// <summary>
        /// <p>The ID of the Amazon Web Services account that owns the volume.</p> <p>This parameter is returned only for volumes
        /// that are attached to Fargate tasks.</p>
        /// </summary>
        string VolumeOwnerId { get; set; }

    }
}