// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of LoggingConfig</summary>
    public partial class LoggingConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfig,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigInternal
    {

        /// <summary>Backing field for <see cref="ApplicationLogLevel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel? _applicationLogLevel;

        /// <summary>
        /// Set this property to filter the application logs for your function that Lambda sends to CloudWatch. Lambda only sends
        /// application logs at the selected level of detail and lower, where ``TRACE`` is the highest level and ``FATAL`` is the
        /// lowest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel? ApplicationLogLevel { get => this._applicationLogLevel; set => this._applicationLogLevel = value; }

        /// <summary>Backing field for <see cref="LogFormat" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat? _logFormat;

        /// <summary>
        /// The format in which Lambda sends your function's application and system logs to CloudWatch. Select between plain text
        /// and structured JSON.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat? LogFormat { get => this._logFormat; set => this._logFormat = value; }

        /// <summary>Backing field for <see cref="LogGroup" /> property.</summary>
        private string _logGroup;

        /// <summary>
        /// The name of the Amazon CloudWatch log group the function sends logs to. By default, Lambda functions send logs to a default
        /// log group named ``/aws/lambda/<function name>``. To use a different log group, enter an existing log group or enter a
        /// new log group name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LogGroup { get => this._logGroup; set => this._logGroup = value; }

        /// <summary>Backing field for <see cref="SystemLogLevel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel? _systemLogLevel;

        /// <summary>
        /// Set this property to filter the system logs for your function that Lambda sends to CloudWatch. Lambda only sends system
        /// logs at the selected level of detail and lower, where ``DEBUG`` is the highest level and ``WARN`` is the lowest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel? SystemLogLevel { get => this._systemLogLevel; set => this._systemLogLevel = value; }

        /// <summary>Creates an new <see cref="LoggingConfig" /> instance.</summary>
        public LoggingConfig()
        {

        }
    }
    /// Definition of LoggingConfig
    public partial interface ILoggingConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Set this property to filter the application logs for your function that Lambda sends to CloudWatch. Lambda only sends
        /// application logs at the selected level of detail and lower, where ``TRACE`` is the highest level and ``FATAL`` is the
        /// lowest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set this property to filter the application logs for your function that Lambda sends to CloudWatch. Lambda only sends application logs at the selected level of detail and lower, where ``TRACE`` is the highest level and ``FATAL`` is the lowest.",
        SerializedName = @"applicationLogLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel? ApplicationLogLevel { get; set; }
        /// <summary>
        /// The format in which Lambda sends your function's application and system logs to CloudWatch. Select between plain text
        /// and structured JSON.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The format in which Lambda sends your function's application and system logs to CloudWatch. Select between plain text and structured JSON.",
        SerializedName = @"logFormat",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat? LogFormat { get; set; }
        /// <summary>
        /// The name of the Amazon CloudWatch log group the function sends logs to. By default, Lambda functions send logs to a default
        /// log group named ``/aws/lambda/<function name>``. To use a different log group, enter an existing log group or enter a
        /// new log group name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the Amazon CloudWatch log group the function sends logs to. By default, Lambda functions send logs to a default log group named ``/aws/lambda/<function name>``. To use a different log group, enter an existing log group or enter a new log group name.",
        SerializedName = @"logGroup",
        PossibleTypes = new [] { typeof(string) })]
        string LogGroup { get; set; }
        /// <summary>
        /// Set this property to filter the system logs for your function that Lambda sends to CloudWatch. Lambda only sends system
        /// logs at the selected level of detail and lower, where ``DEBUG`` is the highest level and ``WARN`` is the lowest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set this property to filter the system logs for your function that Lambda sends to CloudWatch. Lambda only sends system logs at the selected level of detail and lower, where ``DEBUG`` is the highest level and ``WARN`` is the lowest.",
        SerializedName = @"systemLogLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel? SystemLogLevel { get; set; }

    }
    /// Definition of LoggingConfig
    internal partial interface ILoggingConfigInternal

    {
        /// <summary>
        /// Set this property to filter the application logs for your function that Lambda sends to CloudWatch. Lambda only sends
        /// application logs at the selected level of detail and lower, where ``TRACE`` is the highest level and ``FATAL`` is the
        /// lowest.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel? ApplicationLogLevel { get; set; }
        /// <summary>
        /// The format in which Lambda sends your function's application and system logs to CloudWatch. Select between plain text
        /// and structured JSON.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat? LogFormat { get; set; }
        /// <summary>
        /// The name of the Amazon CloudWatch log group the function sends logs to. By default, Lambda functions send logs to a default
        /// log group named ``/aws/lambda/<function name>``. To use a different log group, enter an existing log group or enter a
        /// new log group name.
        /// </summary>
        string LogGroup { get; set; }
        /// <summary>
        /// Set this property to filter the system logs for your function that Lambda sends to CloudWatch. Lambda only sends system
        /// logs at the selected level of detail and lower, where ``DEBUG`` is the highest level and ``WARN`` is the lowest.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel? SystemLogLevel { get; set; }

    }
}