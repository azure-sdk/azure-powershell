// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ReplicationSubnetGroup</summary>
    public partial class ReplicationSubnetGroup :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroup,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal
    {

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary><p>A description for the replication subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="Identifier" /> property.</summary>
        private string _identifier;

        /// <summary><p>The identifier of the replication instance subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Identifier { get => this._identifier; set => this._identifier = value; }

        /// <summary>Backing field for <see cref="Subnet" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISubnet[] _subnet;

        /// <summary><p>The subnets that are in the subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISubnet[] Subnet { get => this._subnet; set => this._subnet = value; }

        /// <summary>Backing field for <see cref="SubnetGroupStatus" /> property.</summary>
        private string _subnetGroupStatus;

        /// <summary><p>The status of the subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SubnetGroupStatus { get => this._subnetGroupStatus; set => this._subnetGroupStatus = value; }

        /// <summary>Backing field for <see cref="SupportedNetworkType" /> property.</summary>
        private string[] _supportedNetworkType;

        /// <summary>
        /// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as
        /// IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] SupportedNetworkType { get => this._supportedNetworkType; set => this._supportedNetworkType = value; }

        /// <summary>Backing field for <see cref="VpcId" /> property.</summary>
        private string _vpcId;

        /// <summary><p>The ID of the VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string VpcId { get => this._vpcId; set => this._vpcId = value; }

        /// <summary>Creates an new <see cref="ReplicationSubnetGroup" /> instance.</summary>
        public ReplicationSubnetGroup()
        {

        }
    }
    /// Definition of ReplicationSubnetGroup
    public partial interface IReplicationSubnetGroup :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>A description for the replication subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A description for the replication subnet group.</p>",
        SerializedName = @"replicationSubnetGroupDescription",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary><p>The identifier of the replication instance subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The identifier of the replication instance subnet group.</p>",
        SerializedName = @"replicationSubnetGroupIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string Identifier { get; set; }
        /// <summary><p>The subnets that are in the subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The subnets that are in the subnet group.</p>",
        SerializedName = @"subnets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISubnet) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISubnet[] Subnet { get; set; }
        /// <summary><p>The status of the subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The status of the subnet group.</p>",
        SerializedName = @"subnetGroupStatus",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetGroupStatus { get; set; }
        /// <summary>
        /// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as
        /// IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>",
        SerializedName = @"supportedNetworkTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedNetworkType { get; set; }
        /// <summary><p>The ID of the VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the VPC.</p>",
        SerializedName = @"vpcId",
        PossibleTypes = new [] { typeof(string) })]
        string VpcId { get; set; }

    }
    /// Definition of ReplicationSubnetGroup
    internal partial interface IReplicationSubnetGroupInternal

    {
        /// <summary><p>A description for the replication subnet group.</p></summary>
        string Description { get; set; }
        /// <summary><p>The identifier of the replication instance subnet group.</p></summary>
        string Identifier { get; set; }
        /// <summary><p>The subnets that are in the subnet group.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISubnet[] Subnet { get; set; }
        /// <summary><p>The status of the subnet group.</p></summary>
        string SubnetGroupStatus { get; set; }
        /// <summary>
        /// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as
        /// IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        string[] SupportedNetworkType { get; set; }
        /// <summary><p>The ID of the VPC.</p></summary>
        string VpcId { get; set; }

    }
}