// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of ProjectEnvironment</summary>
    [System.ComponentModel.TypeConverter(typeof(ProjectEnvironmentTypeConverter))]
    public partial class ProjectEnvironment
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectEnvironment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironment" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironment DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ProjectEnvironment(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectEnvironment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironment" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironment DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ProjectEnvironment(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ProjectEnvironment" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ProjectEnvironment" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironment FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectEnvironment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ProjectEnvironment(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ComputeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ComputeType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IComputeTypeEnumValue) content.GetValueForProperty("ComputeType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ComputeType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ComputeTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Fleet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Fleet = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectFleet) content.GetValueForProperty("Fleet",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Fleet, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectFleetTypeConverter.ConvertFrom);
            }
            if (content.Contains("ImagePullCredentialsType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ImagePullCredentialsType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImagePullCredentialsTypeEnumValue) content.GetValueForProperty("ImagePullCredentialsType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ImagePullCredentialsType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImagePullCredentialsTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("RegistryCredential"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredential = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRegistryCredential) content.GetValueForProperty("RegistryCredential",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredential, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RegistryCredentialTypeConverter.ConvertFrom);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Type = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentTypeEnumValue) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Type, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Certificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Certificate = (string) content.GetValueForProperty("Certificate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Certificate, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentVariable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).EnvironmentVariable = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariable[]) content.GetValueForProperty("EnvironmentVariable",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).EnvironmentVariable, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariable>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentVariableTypeConverter.ConvertFrom));
            }
            if (content.Contains("Image"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Image = (string) content.GetValueForProperty("Image",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Image, global::System.Convert.ToString);
            }
            if (content.Contains("PrivilegedMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).PrivilegedMode = (bool?) content.GetValueForProperty("PrivilegedMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).PrivilegedMode, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ComputeTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ComputeTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ComputeType?) content.GetValueForProperty("ComputeTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ComputeTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ComputeType.CreateFrom);
            }
            if (content.Contains("ImagePullCredentialsTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ImagePullCredentialsTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImagePullCredentialsType?) content.GetValueForProperty("ImagePullCredentialsTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ImagePullCredentialsTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImagePullCredentialsType.CreateFrom);
            }
            if (content.Contains("FleetArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).FleetArn = (string) content.GetValueForProperty("FleetArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).FleetArn, global::System.Convert.ToString);
            }
            if (content.Contains("RegistryCredentialProvider"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredentialProvider = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICredentialProviderTypeEnumValue) content.GetValueForProperty("RegistryCredentialProvider",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredentialProvider, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CredentialProviderTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("RegistryCredentialCredential"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredentialCredential = (string) content.GetValueForProperty("RegistryCredentialCredential",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredentialCredential, global::System.Convert.ToString);
            }
            if (content.Contains("TypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).TypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentType?) content.GetValueForProperty("TypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).TypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentType.CreateFrom);
            }
            if (content.Contains("CredentialProviderValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).CredentialProviderValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType?) content.GetValueForProperty("CredentialProviderValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).CredentialProviderValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectEnvironment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ProjectEnvironment(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ComputeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ComputeType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IComputeTypeEnumValue) content.GetValueForProperty("ComputeType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ComputeType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ComputeTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Fleet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Fleet = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectFleet) content.GetValueForProperty("Fleet",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Fleet, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectFleetTypeConverter.ConvertFrom);
            }
            if (content.Contains("ImagePullCredentialsType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ImagePullCredentialsType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImagePullCredentialsTypeEnumValue) content.GetValueForProperty("ImagePullCredentialsType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ImagePullCredentialsType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImagePullCredentialsTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("RegistryCredential"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredential = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRegistryCredential) content.GetValueForProperty("RegistryCredential",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredential, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RegistryCredentialTypeConverter.ConvertFrom);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Type = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentTypeEnumValue) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Type, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Certificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Certificate = (string) content.GetValueForProperty("Certificate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Certificate, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentVariable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).EnvironmentVariable = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariable[]) content.GetValueForProperty("EnvironmentVariable",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).EnvironmentVariable, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariable>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentVariableTypeConverter.ConvertFrom));
            }
            if (content.Contains("Image"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Image = (string) content.GetValueForProperty("Image",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).Image, global::System.Convert.ToString);
            }
            if (content.Contains("PrivilegedMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).PrivilegedMode = (bool?) content.GetValueForProperty("PrivilegedMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).PrivilegedMode, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ComputeTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ComputeTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ComputeType?) content.GetValueForProperty("ComputeTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ComputeTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ComputeType.CreateFrom);
            }
            if (content.Contains("ImagePullCredentialsTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ImagePullCredentialsTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImagePullCredentialsType?) content.GetValueForProperty("ImagePullCredentialsTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).ImagePullCredentialsTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImagePullCredentialsType.CreateFrom);
            }
            if (content.Contains("FleetArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).FleetArn = (string) content.GetValueForProperty("FleetArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).FleetArn, global::System.Convert.ToString);
            }
            if (content.Contains("RegistryCredentialProvider"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredentialProvider = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICredentialProviderTypeEnumValue) content.GetValueForProperty("RegistryCredentialProvider",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredentialProvider, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CredentialProviderTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("RegistryCredentialCredential"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredentialCredential = (string) content.GetValueForProperty("RegistryCredentialCredential",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).RegistryCredentialCredential, global::System.Convert.ToString);
            }
            if (content.Contains("TypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).TypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentType?) content.GetValueForProperty("TypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).TypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentType.CreateFrom);
            }
            if (content.Contains("CredentialProviderValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).CredentialProviderValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType?) content.GetValueForProperty("CredentialProviderValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)this).CredentialProviderValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of ProjectEnvironment
    [System.ComponentModel.TypeConverter(typeof(ProjectEnvironmentTypeConverter))]
    public partial interface IProjectEnvironment

    {

    }
}