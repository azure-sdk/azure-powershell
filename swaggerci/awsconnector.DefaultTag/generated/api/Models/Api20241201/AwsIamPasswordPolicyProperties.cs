// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsIamPasswordPolicy</summary>
    public partial class AwsIamPasswordPolicyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsIamPasswordPolicyProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsIamPasswordPolicyPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllowUsersToChangePassword" /> property.</summary>
        private bool? _allowUsersToChangePassword;

        /// <summary>
        /// <p>Specifies whether IAM users are allowed to change their own password. Gives IAM users permissions to <code>iam:ChangePassword</code>
        /// for only their user and to the <code>iam:GetAccountPasswordPolicy</code> action. This option does not attach a permissions
        /// policy to each user, rather the permissions are applied at the account-level for all users by IAM.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? AllowUsersToChangePassword { get => this._allowUsersToChangePassword; set => this._allowUsersToChangePassword = value; }

        /// <summary>Backing field for <see cref="ExpirePassword" /> property.</summary>
        private bool? _expirePassword;

        /// <summary>
        /// <p>Indicates whether passwords in the account expire. Returns true if <code>MaxPasswordAge</code> contains a value greater
        /// than 0. Returns false if MaxPasswordAge is 0 or not present.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? ExpirePassword { get => this._expirePassword; set => this._expirePassword = value; }

        /// <summary>Backing field for <see cref="HardExpiry" /> property.</summary>
        private bool? _hardExpiry;

        /// <summary>
        /// <p>Specifies whether IAM users are prevented from setting a new password via the Amazon Web Services Management Console
        /// after their password has expired. The IAM user cannot access the console until an administrator resets the password. IAM
        /// users with <code>iam:ChangePassword</code> permission and active access keys can reset their own expired console password
        /// using the CLI or API.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? HardExpiry { get => this._hardExpiry; set => this._hardExpiry = value; }

        /// <summary>Backing field for <see cref="MaxPasswordAge" /> property.</summary>
        private int? _maxPasswordAge;

        /// <summary><p>The number of days that an IAM user password is valid.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? MaxPasswordAge { get => this._maxPasswordAge; set => this._maxPasswordAge = value; }

        /// <summary>Backing field for <see cref="MinimumPasswordLength" /> property.</summary>
        private int? _minimumPasswordLength;

        /// <summary><p>Minimum length to require for IAM user passwords.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? MinimumPasswordLength { get => this._minimumPasswordLength; set => this._minimumPasswordLength = value; }

        /// <summary>Backing field for <see cref="PasswordReusePrevention" /> property.</summary>
        private int? _passwordReusePrevention;

        /// <summary>
        /// <p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? PasswordReusePrevention { get => this._passwordReusePrevention; set => this._passwordReusePrevention = value; }

        /// <summary>Backing field for <see cref="RequireLowercaseCharacter" /> property.</summary>
        private bool? _requireLowercaseCharacter;

        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one lowercase character (a to z).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? RequireLowercaseCharacter { get => this._requireLowercaseCharacter; set => this._requireLowercaseCharacter = value; }

        /// <summary>Backing field for <see cref="RequireNumber" /> property.</summary>
        private bool? _requireNumber;

        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? RequireNumber { get => this._requireNumber; set => this._requireNumber = value; }

        /// <summary>Backing field for <see cref="RequireSymbol" /> property.</summary>
        private bool? _requireSymbol;

        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one of the following symbols:</p> <p>! @ # $ % ^ &amp; *
        /// ( ) _ + - = [ ] { } | '</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? RequireSymbol { get => this._requireSymbol; set => this._requireSymbol = value; }

        /// <summary>Backing field for <see cref="RequireUppercaseCharacter" /> property.</summary>
        private bool? _requireUppercaseCharacter;

        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one uppercase character (A to Z).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? RequireUppercaseCharacter { get => this._requireUppercaseCharacter; set => this._requireUppercaseCharacter = value; }

        /// <summary>Creates an new <see cref="AwsIamPasswordPolicyProperties" /> instance.</summary>
        public AwsIamPasswordPolicyProperties()
        {

        }
    }
    /// Definition of awsIamPasswordPolicy
    public partial interface IAwsIamPasswordPolicyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>Specifies whether IAM users are allowed to change their own password. Gives IAM users permissions to <code>iam:ChangePassword</code>
        /// for only their user and to the <code>iam:GetAccountPasswordPolicy</code> action. This option does not attach a permissions
        /// policy to each user, rather the permissions are applied at the account-level for all users by IAM.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether IAM users are allowed to change their own password. Gives IAM users permissions to <code>iam:ChangePassword</code> for only their user and to the <code>iam:GetAccountPasswordPolicy</code> action. This option does not attach a permissions policy to each user, rather the permissions are applied at the account-level for all users by IAM.</p>",
        SerializedName = @"allowUsersToChangePassword",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowUsersToChangePassword { get; set; }
        /// <summary>
        /// <p>Indicates whether passwords in the account expire. Returns true if <code>MaxPasswordAge</code> contains a value greater
        /// than 0. Returns false if MaxPasswordAge is 0 or not present.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether passwords in the account expire. Returns true if <code>MaxPasswordAge</code> contains a value greater than 0. Returns false if MaxPasswordAge is 0 or not present.</p>",
        SerializedName = @"expirePasswords",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ExpirePassword { get; set; }
        /// <summary>
        /// <p>Specifies whether IAM users are prevented from setting a new password via the Amazon Web Services Management Console
        /// after their password has expired. The IAM user cannot access the console until an administrator resets the password. IAM
        /// users with <code>iam:ChangePassword</code> permission and active access keys can reset their own expired console password
        /// using the CLI or API.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether IAM users are prevented from setting a new password via the Amazon Web Services Management Console after their password has expired. The IAM user cannot access the console until an administrator resets the password. IAM users with <code>iam:ChangePassword</code> permission and active access keys can reset their own expired console password using the CLI or API.</p>",
        SerializedName = @"hardExpiry",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HardExpiry { get; set; }
        /// <summary><p>The number of days that an IAM user password is valid.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of days that an IAM user password is valid.</p>",
        SerializedName = @"maxPasswordAge",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxPasswordAge { get; set; }
        /// <summary><p>Minimum length to require for IAM user passwords.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Minimum length to require for IAM user passwords.</p>",
        SerializedName = @"minimumPasswordLength",
        PossibleTypes = new [] { typeof(int) })]
        int? MinimumPasswordLength { get; set; }
        /// <summary>
        /// <p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p>",
        SerializedName = @"passwordReusePrevention",
        PossibleTypes = new [] { typeof(int) })]
        int? PasswordReusePrevention { get; set; }
        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one lowercase character (a to z).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether IAM user passwords must contain at least one lowercase character (a to z).</p>",
        SerializedName = @"requireLowercaseCharacters",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequireLowercaseCharacter { get; set; }
        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p>",
        SerializedName = @"requireNumbers",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequireNumber { get; set; }
        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one of the following symbols:</p> <p>! @ # $ % ^ &amp; *
        /// ( ) _ + - = [ ] { } | '</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether IAM user passwords must contain at least one of the following symbols:</p> <p>! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | '</p>",
        SerializedName = @"requireSymbols",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequireSymbol { get; set; }
        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one uppercase character (A to Z).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether IAM user passwords must contain at least one uppercase character (A to Z).</p>",
        SerializedName = @"requireUppercaseCharacters",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequireUppercaseCharacter { get; set; }

    }
    /// Definition of awsIamPasswordPolicy
    internal partial interface IAwsIamPasswordPolicyPropertiesInternal

    {
        /// <summary>
        /// <p>Specifies whether IAM users are allowed to change their own password. Gives IAM users permissions to <code>iam:ChangePassword</code>
        /// for only their user and to the <code>iam:GetAccountPasswordPolicy</code> action. This option does not attach a permissions
        /// policy to each user, rather the permissions are applied at the account-level for all users by IAM.</p>
        /// </summary>
        bool? AllowUsersToChangePassword { get; set; }
        /// <summary>
        /// <p>Indicates whether passwords in the account expire. Returns true if <code>MaxPasswordAge</code> contains a value greater
        /// than 0. Returns false if MaxPasswordAge is 0 or not present.</p>
        /// </summary>
        bool? ExpirePassword { get; set; }
        /// <summary>
        /// <p>Specifies whether IAM users are prevented from setting a new password via the Amazon Web Services Management Console
        /// after their password has expired. The IAM user cannot access the console until an administrator resets the password. IAM
        /// users with <code>iam:ChangePassword</code> permission and active access keys can reset their own expired console password
        /// using the CLI or API.</p>
        /// </summary>
        bool? HardExpiry { get; set; }
        /// <summary><p>The number of days that an IAM user password is valid.</p></summary>
        int? MaxPasswordAge { get; set; }
        /// <summary><p>Minimum length to require for IAM user passwords.</p></summary>
        int? MinimumPasswordLength { get; set; }
        /// <summary>
        /// <p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p>
        /// </summary>
        int? PasswordReusePrevention { get; set; }
        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one lowercase character (a to z).</p>
        /// </summary>
        bool? RequireLowercaseCharacter { get; set; }
        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p>
        /// </summary>
        bool? RequireNumber { get; set; }
        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one of the following symbols:</p> <p>! @ # $ % ^ &amp; *
        /// ( ) _ + - = [ ] { } | '</p>
        /// </summary>
        bool? RequireSymbol { get; set; }
        /// <summary>
        /// <p>Specifies whether IAM user passwords must contain at least one uppercase character (A to Z).</p>
        /// </summary>
        bool? RequireUppercaseCharacter { get; set; }

    }
}