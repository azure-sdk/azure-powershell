// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsGuardDutyDetector</summary>
    public partial class AwsGuardDutyDetectorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsGuardDutyDetectorProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsGuardDutyDetectorPropertiesInternal
    {

        /// <summary>Property enable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AuditLogEnable { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).AuditLogEnable; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).AuditLogEnable = value ?? default(bool); }

        /// <summary>Backing field for <see cref="DataSource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurations _dataSource;

        /// <summary>Property dataSources</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurations DataSource { get => (this._dataSource = this._dataSource ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CfnDataSourceConfigurations()); set => this._dataSource = value; }

        /// <summary>Backing field for <see cref="Enable" /> property.</summary>
        private bool? _enable;

        /// <summary>Property enable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Enable { get => this._enable; set => this._enable = value; }

        /// <summary>Backing field for <see cref="Feature" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnFeatureConfiguration[] _feature;

        /// <summary>Property features</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnFeatureConfiguration[] Feature { get => this._feature; set => this._feature = value; }

        /// <summary>Backing field for <see cref="FindingPublishingFrequency" /> property.</summary>
        private string _findingPublishingFrequency;

        /// <summary>Property findingPublishingFrequency</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string FindingPublishingFrequency { get => this._findingPublishingFrequency; set => this._findingPublishingFrequency = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Internal Acessors for DataSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurations Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsGuardDutyDetectorPropertiesInternal.DataSource { get => (this._dataSource = this._dataSource ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CfnDataSourceConfigurations()); set { {_dataSource = value;} } }

        /// <summary>Internal Acessors for DataSourceKubernete</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsGuardDutyDetectorPropertiesInternal.DataSourceKubernete { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).Kubernete; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).Kubernete = value; }

        /// <summary>Internal Acessors for DataSourceMalwareProtection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsGuardDutyDetectorPropertiesInternal.DataSourceMalwareProtection { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).MalwareProtection; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).MalwareProtection = value; }

        /// <summary>Internal Acessors for DataSourceS3Log</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfns3LogsConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsGuardDutyDetectorPropertiesInternal.DataSourceS3Log { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).S3Log; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).S3Log = value; }

        /// <summary>Internal Acessors for KuberneteAuditLog</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesAuditLogsConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsGuardDutyDetectorPropertiesInternal.KuberneteAuditLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).KuberneteAuditLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).KuberneteAuditLog = value; }

        /// <summary>Internal Acessors for MalwareProtectionScanEc2InstanceWithFinding</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnScanEc2InstanceWithFindingsConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsGuardDutyDetectorPropertiesInternal.MalwareProtectionScanEc2InstanceWithFinding { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).MalwareProtectionScanEc2InstanceWithFinding; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).MalwareProtectionScanEc2InstanceWithFinding = value; }

        /// <summary>Property enable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? S3LogEnable { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).S3LogEnable; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).S3LogEnable = value ?? default(bool); }

        /// <summary>Property ebsVolumes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ScanEc2InstanceWithFindingEbsVolume { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).ScanEc2InstanceWithFindingEbsVolume; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal)DataSource).ScanEc2InstanceWithFindingEbsVolume = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagItem[] _tag;

        /// <summary>Property tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagItem[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Creates an new <see cref="AwsGuardDutyDetectorProperties" /> instance.</summary>
        public AwsGuardDutyDetectorProperties()
        {

        }
    }
    /// Definition of awsGuardDutyDetector
    public partial interface IAwsGuardDutyDetectorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property enable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property enable",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AuditLogEnable { get; set; }
        /// <summary>Property enable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property enable",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enable { get; set; }
        /// <summary>Property features</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property features",
        SerializedName = @"features",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnFeatureConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnFeatureConfiguration[] Feature { get; set; }
        /// <summary>Property findingPublishingFrequency</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property findingPublishingFrequency",
        SerializedName = @"findingPublishingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string FindingPublishingFrequency { get; set; }
        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Property enable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property enable",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? S3LogEnable { get; set; }
        /// <summary>Property ebsVolumes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property ebsVolumes",
        SerializedName = @"ebsVolumes",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ScanEc2InstanceWithFindingEbsVolume { get; set; }
        /// <summary>Property tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property tags",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagItem[] Tag { get; set; }

    }
    /// Definition of awsGuardDutyDetector
    internal partial interface IAwsGuardDutyDetectorPropertiesInternal

    {
        /// <summary>Property enable</summary>
        bool? AuditLogEnable { get; set; }
        /// <summary>Property dataSources</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurations DataSource { get; set; }
        /// <summary>Property kubernetes</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesConfiguration DataSourceKubernete { get; set; }
        /// <summary>Property malwareProtection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfiguration DataSourceMalwareProtection { get; set; }
        /// <summary>Property s3Logs</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfns3LogsConfiguration DataSourceS3Log { get; set; }
        /// <summary>Property enable</summary>
        bool? Enable { get; set; }
        /// <summary>Property features</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnFeatureConfiguration[] Feature { get; set; }
        /// <summary>Property findingPublishingFrequency</summary>
        string FindingPublishingFrequency { get; set; }
        /// <summary>Property id</summary>
        string Id { get; set; }
        /// <summary>Property auditLogs</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesAuditLogsConfiguration KuberneteAuditLog { get; set; }
        /// <summary>Property scanEc2InstanceWithFindings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnScanEc2InstanceWithFindingsConfiguration MalwareProtectionScanEc2InstanceWithFinding { get; set; }
        /// <summary>Property enable</summary>
        bool? S3LogEnable { get; set; }
        /// <summary>Property ebsVolumes</summary>
        bool? ScanEc2InstanceWithFindingEbsVolume { get; set; }
        /// <summary>Property tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagItem[] Tag { get; set; }

    }
}