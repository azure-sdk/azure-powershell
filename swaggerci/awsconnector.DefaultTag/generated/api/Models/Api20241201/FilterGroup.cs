// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of FilterGroup</summary>
    public partial class FilterGroup :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroup,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroupInternal
    {

        /// <summary>Internal Acessors for WebhookFilter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilter Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroupInternal.WebhookFilter { get => (this._webhookFilter = this._webhookFilter ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.WebhookFilter()); set { {_webhookFilter = value;} } }

        /// <summary>Internal Acessors for WebhookFilterType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilterTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroupInternal.WebhookFilterType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilterInternal)WebhookFilter).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilterInternal)WebhookFilter).Type = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookFilterType? TypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilterInternal)WebhookFilter).TypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilterInternal)WebhookFilter).TypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookFilterType)""); }

        /// <summary>Backing field for <see cref="WebhookFilter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilter _webhookFilter;

        /// <summary>Property webhookFilter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilter WebhookFilter { get => (this._webhookFilter = this._webhookFilter ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.WebhookFilter()); set => this._webhookFilter = value; }

        /// <summary>
        /// <p> Used to indicate that the <code>pattern</code> determines which webhook events do not trigger a build. If true, then
        /// a webhook event that does not match the <code>pattern</code> triggers a build. If false, then a webhook event that matches
        /// the <code>pattern</code> triggers a build. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? WebhookFilterExcludeMatchedPattern { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilterInternal)WebhookFilter).ExcludeMatchedPattern; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilterInternal)WebhookFilter).ExcludeMatchedPattern = value ?? default(bool); }

        /// <summary>
        /// <p> For a <code>WebHookFilter</code> that uses <code>EVENT</code> type, a comma-separated string that specifies one or
        /// more events. For example, the webhook filter <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> allows all
        /// push, pull request created, and pull request updated events to trigger a build. </p> <p> For a <code>WebHookFilter</code>
        /// that uses any of the other filter types, a regular expression pattern. For example, a <code>WebHookFilter</code> that
        /// uses <code>HEAD_REF</code> for its <code>type</code> and the pattern <code>^refs/heads/</code> triggers a build when the
        /// head reference is a branch with a reference name <code>refs/heads/branch-name</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string WebhookFilterPattern { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilterInternal)WebhookFilter).Pattern; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilterInternal)WebhookFilter).Pattern = value ?? null; }

        /// <summary>Creates an new <see cref="FilterGroup" /> instance.</summary>
        public FilterGroup()
        {

        }
    }
    /// Definition of FilterGroup
    public partial interface IFilterGroup :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookFilterType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookFilterType? TypeValue { get; set; }
        /// <summary>
        /// <p> Used to indicate that the <code>pattern</code> determines which webhook events do not trigger a build. If true, then
        /// a webhook event that does not match the <code>pattern</code> triggers a build. If false, then a webhook event that matches
        /// the <code>pattern</code> triggers a build. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> Used to indicate that the <code>pattern</code> determines which webhook events do not trigger a build. If true, then a webhook event that does not match the <code>pattern</code> triggers a build. If false, then a webhook event that matches the <code>pattern</code> triggers a build. </p>",
        SerializedName = @"excludeMatchedPattern",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WebhookFilterExcludeMatchedPattern { get; set; }
        /// <summary>
        /// <p> For a <code>WebHookFilter</code> that uses <code>EVENT</code> type, a comma-separated string that specifies one or
        /// more events. For example, the webhook filter <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> allows all
        /// push, pull request created, and pull request updated events to trigger a build. </p> <p> For a <code>WebHookFilter</code>
        /// that uses any of the other filter types, a regular expression pattern. For example, a <code>WebHookFilter</code> that
        /// uses <code>HEAD_REF</code> for its <code>type</code> and the pattern <code>^refs/heads/</code> triggers a build when the
        /// head reference is a branch with a reference name <code>refs/heads/branch-name</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> For a <code>WebHookFilter</code> that uses <code>EVENT</code> type, a comma-separated string that specifies one or more events. For example, the webhook filter <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> allows all push, pull request created, and pull request updated events to trigger a build. </p> <p> For a <code>WebHookFilter</code> that uses any of the other filter types, a regular expression pattern. For example, a <code>WebHookFilter</code> that uses <code>HEAD_REF</code> for its <code>type</code> and the pattern <code>^refs/heads/</code> triggers a build when the head reference is a branch with a reference name <code>refs/heads/branch-name</code>. </p>",
        SerializedName = @"pattern",
        PossibleTypes = new [] { typeof(string) })]
        string WebhookFilterPattern { get; set; }

    }
    /// Definition of FilterGroup
    internal partial interface IFilterGroupInternal

    {
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookFilterType? TypeValue { get; set; }
        /// <summary>Property webhookFilter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilter WebhookFilter { get; set; }
        /// <summary>
        /// <p> Used to indicate that the <code>pattern</code> determines which webhook events do not trigger a build. If true, then
        /// a webhook event that does not match the <code>pattern</code> triggers a build. If false, then a webhook event that matches
        /// the <code>pattern</code> triggers a build. </p>
        /// </summary>
        bool? WebhookFilterExcludeMatchedPattern { get; set; }
        /// <summary>
        /// <p> For a <code>WebHookFilter</code> that uses <code>EVENT</code> type, a comma-separated string that specifies one or
        /// more events. For example, the webhook filter <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code> allows all
        /// push, pull request created, and pull request updated events to trigger a build. </p> <p> For a <code>WebHookFilter</code>
        /// that uses any of the other filter types, a regular expression pattern. For example, a <code>WebHookFilter</code> that
        /// uses <code>HEAD_REF</code> for its <code>type</code> and the pattern <code>^refs/heads/</code> triggers a build when the
        /// head reference is a branch with a reference name <code>refs/heads/branch-name</code>. </p>
        /// </summary>
        string WebhookFilterPattern { get; set; }
        /// <summary>
        /// <p> The type of webhook filter. There are nine webhook filter types: <code>EVENT</code>, <code>ACTOR_ACCOUNT_ID</code>,
        /// <code>HEAD_REF</code>, <code>BASE_REF</code>, <code>FILE_PATH</code>, <code>COMMIT_MESSAGE</code>, <code>TAG_NAME</code>,
        /// <code>RELEASE_NAME</code>, and <code>WORKFLOW_NAME</code>. </p> <ul> <li> <p> EVENT </p> <ul> <li> <p> A webhook event
        /// triggers a build when the provided <code>pattern</code> matches one of nine event types: <code>PUSH</code>, <code>PULL_REQUEST_CREATED</code>,
        /// <code>PULL_REQUEST_UPDATED</code>, <code>PULL_REQUEST_CLOSED</code>, <code>PULL_REQUEST_REOPENED</code>, <code>PULL_REQUEST_MERGED</code>,
        /// <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code>. The <code>EVENT</code> patterns
        /// are specified as a comma-separated string. For example, <code>PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED</code>
        /// filters all push, pull request created, and pull request updated events. </p> <note> <p> The <code>PULL_REQUEST_REOPENED</code>
        /// works with GitHub and GitHub Enterprise only. The <code>RELEASED</code>, <code>PRERELEASED</code>, and <code>WORKFLOW_JOB_QUEUED</code>
        /// work with GitHub only.</p> </note> </li> </ul> </li> <li> <p>ACTOR_ACCOUNT_ID</p> <ul> <li> <p> A webhook event triggers
        /// a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression <code>pattern</code>.
        /// </p> </li> </ul> </li> <li> <p>HEAD_REF</p> <ul> <li> <p> A webhook event triggers a build when the head reference matches
        /// the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code> and <code>refs/tags/tag-name</code>.
        /// </p> <note> <p> Works with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push,
        /// and Bitbucket pull request events.</p> </note> </li> </ul> </li> <li> <p>BASE_REF</p> <ul> <li> <p> A webhook event triggers
        /// a build when the base reference matches the regular expression <code>pattern</code>. For example, <code>refs/heads/branch-name</code>.
        /// </p> <note> <p> Works with pull request events only. </p> </note> </li> </ul> </li> <li> <p>FILE_PATH</p> <ul> <li> <p>
        /// A webhook triggers a build when the path of a changed file matches the regular expression <code>pattern</code>. </p> <note>
        /// <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events,
        /// but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>COMMIT_MESSAGE</p>
        /// <ul> <li> <p>A webhook triggers a build when the head commit message matches the regular expression <code>pattern</code>.</p>
        /// <note> <p> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push
        /// events, but does not work with GitHub Enterprise pull request events. </p> </note> </li> </ul> </li> <li> <p>TAG_NAME</p>
        /// <ul> <li> <p>A webhook triggers a build when the tag name of the release matches the regular expression <code>pattern</code>.</p>
        /// <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li>
        /// <p>RELEASE_NAME</p> <ul> <li> <p>A webhook triggers a build when the release name matches the regular expression <code>pattern</code>.</p>
        /// <note> <p> Works with <code>RELEASED</code> and <code>PRERELEASED</code> events only. </p> </note> </li> </ul> </li> <li>
        /// <p>WORKFLOW_NAME</p> <ul> <li> <p>A webhook triggers a build when the workflow name matches the regular expression <code>pattern</code>.</p>
        /// <note> <p> Works with <code>WORKFLOW_JOB_QUEUED</code> events only. </p> </note> </li> </ul> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookFilterTypeEnumValue WebhookFilterType { get; set; }

    }
}