// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of Code</summary>
    public partial class Code :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICode,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICodeInternal
    {

        /// <summary>Backing field for <see cref="ImageUri" /> property.</summary>
        private string _imageUri;

        /// <summary>
        /// URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html) in the Amazon ECR registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ImageUri { get => this._imageUri; set => this._imageUri = value; }

        /// <summary>Backing field for <see cref="S3Bucket" /> property.</summary>
        private string _s3Bucket;

        /// <summary>
        /// An Amazon S3 bucket in the same AWS-Region as your function. The bucket can be in a different AWS-account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string S3Bucket { get => this._s3Bucket; set => this._s3Bucket = value; }

        /// <summary>Backing field for <see cref="S3Key" /> property.</summary>
        private string _s3Key;

        /// <summary>The Amazon S3 key of the deployment package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string S3Key { get => this._s3Key; set => this._s3Key = value; }

        /// <summary>Backing field for <see cref="S3ObjectVersion" /> property.</summary>
        private string _s3ObjectVersion;

        /// <summary>For versioned objects, the version of the deployment package object to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string S3ObjectVersion { get => this._s3ObjectVersion; set => this._s3ObjectVersion = value; }

        /// <summary>Backing field for <see cref="ZipFile" /> property.</summary>
        private string _zipFile;

        /// <summary>
        /// (Node.js and Python) The source code of your Lambda function. If you include your function source inline with this parameter,
        /// CFN places it in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).
        /// This zip file cannot exceed 4MB. For the ``Handler`` property, the first part of the handler identifier must be ``index``.
        /// For example, ``index.handler``. For JSON, you must escape quotes and special characters such as newline (``\n``) with
        /// a backslash. If you specify a function that interacts with an AWS CloudFormation custom resource, you don't have to write
        /// your own functions to send responses to the custom resource that invoked the function. AWS CloudFormation provides a response
        /// module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))
        /// that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)
        /// for details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ZipFile { get => this._zipFile; set => this._zipFile = value; }

        /// <summary>Creates an new <see cref="Code" /> instance.</summary>
        public Code()
        {

        }
    }
    /// Definition of Code
    public partial interface ICode :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html) in the Amazon ECR registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html) in the Amazon ECR registry.",
        SerializedName = @"imageUri",
        PossibleTypes = new [] { typeof(string) })]
        string ImageUri { get; set; }
        /// <summary>
        /// An Amazon S3 bucket in the same AWS-Region as your function. The bucket can be in a different AWS-account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An Amazon S3 bucket in the same AWS-Region as your function. The bucket can be in a different AWS-account.",
        SerializedName = @"s3Bucket",
        PossibleTypes = new [] { typeof(string) })]
        string S3Bucket { get; set; }
        /// <summary>The Amazon S3 key of the deployment package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon S3 key of the deployment package.",
        SerializedName = @"s3Key",
        PossibleTypes = new [] { typeof(string) })]
        string S3Key { get; set; }
        /// <summary>For versioned objects, the version of the deployment package object to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For versioned objects, the version of the deployment package object to use.",
        SerializedName = @"s3ObjectVersion",
        PossibleTypes = new [] { typeof(string) })]
        string S3ObjectVersion { get; set; }
        /// <summary>
        /// (Node.js and Python) The source code of your Lambda function. If you include your function source inline with this parameter,
        /// CFN places it in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).
        /// This zip file cannot exceed 4MB. For the ``Handler`` property, the first part of the handler identifier must be ``index``.
        /// For example, ``index.handler``. For JSON, you must escape quotes and special characters such as newline (``\n``) with
        /// a backslash. If you specify a function that interacts with an AWS CloudFormation custom resource, you don't have to write
        /// your own functions to send responses to the custom resource that invoked the function. AWS CloudFormation provides a response
        /// module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))
        /// that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)
        /// for details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"(Node.js and Python) The source code of your Lambda function. If you include your function source inline with this parameter, CFN places it in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html). This zip file cannot exceed 4MB. For the ``Handler`` property, the first part of the handler identifier must be ``index``. For example, ``index.handler``.  For JSON, you must escape quotes and special characters such as newline (``\n``) with a backslash. If you specify a function that interacts with an AWS CloudFormation custom resource, you don't have to write your own functions to send responses to the custom resource that invoked the function. AWS CloudFormation provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html)) that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html) for details.",
        SerializedName = @"zipFile",
        PossibleTypes = new [] { typeof(string) })]
        string ZipFile { get; set; }

    }
    /// Definition of Code
    internal partial interface ICodeInternal

    {
        /// <summary>
        /// URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html) in the Amazon ECR registry.
        /// </summary>
        string ImageUri { get; set; }
        /// <summary>
        /// An Amazon S3 bucket in the same AWS-Region as your function. The bucket can be in a different AWS-account.
        /// </summary>
        string S3Bucket { get; set; }
        /// <summary>The Amazon S3 key of the deployment package.</summary>
        string S3Key { get; set; }
        /// <summary>For versioned objects, the version of the deployment package object to use.</summary>
        string S3ObjectVersion { get; set; }
        /// <summary>
        /// (Node.js and Python) The source code of your Lambda function. If you include your function source inline with this parameter,
        /// CFN places it in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).
        /// This zip file cannot exceed 4MB. For the ``Handler`` property, the first part of the handler identifier must be ``index``.
        /// For example, ``index.handler``. For JSON, you must escape quotes and special characters such as newline (``\n``) with
        /// a backslash. If you specify a function that interacts with an AWS CloudFormation custom resource, you don't have to write
        /// your own functions to send responses to the custom resource that invoked the function. AWS CloudFormation provides a response
        /// module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))
        /// that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)
        /// for details.
        /// </summary>
        string ZipFile { get; set; }

    }
}