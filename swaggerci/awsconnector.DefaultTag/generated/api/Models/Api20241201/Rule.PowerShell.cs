// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of Rule</summary>
    [System.ComponentModel.TypeConverter(typeof(RuleTypeConverter))]
    public partial class Rule
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Rule"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRule" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRule DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Rule(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Rule"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRule" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRule DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Rule(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Rule" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Rule" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRule FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Rule"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Rule(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AbortIncompleteMultipartUpload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).AbortIncompleteMultipartUpload = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAbortIncompleteMultipartUpload) content.GetValueForProperty("AbortIncompleteMultipartUpload",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).AbortIncompleteMultipartUpload, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AbortIncompleteMultipartUploadTypeConverter.ConvertFrom);
            }
            if (content.Contains("NoncurrentVersionExpiration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpiration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INoncurrentVersionExpiration) content.GetValueForProperty("NoncurrentVersionExpiration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpiration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NoncurrentVersionExpirationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NoncurrentVersionTransition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransition = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INoncurrentVersionTransition) content.GetValueForProperty("NoncurrentVersionTransition",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransition, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NoncurrentVersionTransitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("Transition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Transition = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITransition) content.GetValueForProperty("Transition",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Transition, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TransitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExpirationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpirationDate = (string) content.GetValueForProperty("ExpirationDate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpirationDate, global::System.Convert.ToString);
            }
            if (content.Contains("ExpirationInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpirationInDay = (int?) content.GetValueForProperty("ExpirationInDay",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpirationInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ExpiredObjectDeleteMarker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpiredObjectDeleteMarker = (bool?) content.GetValueForProperty("ExpiredObjectDeleteMarker",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpiredObjectDeleteMarker, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("NoncurrentVersionExpirationInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationInDay = (int?) content.GetValueForProperty("NoncurrentVersionExpirationInDay",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NoncurrentVersionTransitions"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitions = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INoncurrentVersionTransition[]) content.GetValueForProperty("NoncurrentVersionTransitions",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitions, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INoncurrentVersionTransition>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NoncurrentVersionTransitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ObjectSizeGreaterThan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ObjectSizeGreaterThan = (string) content.GetValueForProperty("ObjectSizeGreaterThan",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ObjectSizeGreaterThan, global::System.Convert.ToString);
            }
            if (content.Contains("ObjectSizeLessThan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ObjectSizeLessThan = (string) content.GetValueForProperty("ObjectSizeLessThan",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ObjectSizeLessThan, global::System.Convert.ToString);
            }
            if (content.Contains("Prefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Prefix = (string) content.GetValueForProperty("Prefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Prefix, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuleStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuleStatus.CreateFrom);
            }
            if (content.Contains("TagFilter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TagFilter = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagFilter[]) content.GetValueForProperty("TagFilter",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TagFilter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagFilter>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagFilterTypeConverter.ConvertFrom));
            }
            if (content.Contains("Transitions"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Transitions = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITransition[]) content.GetValueForProperty("Transitions",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Transitions, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITransition>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TransitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("NoncurrentVersionExpirationNoncurrentDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationNoncurrentDay = (int?) content.GetValueForProperty("NoncurrentVersionExpirationNoncurrentDay",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationNoncurrentDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NoncurrentVersionTransitionStorageClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionStorageClass = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NoncurrentVersionTransitionStorageClass?) content.GetValueForProperty("NoncurrentVersionTransitionStorageClass",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionStorageClass, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NoncurrentVersionTransitionStorageClass.CreateFrom);
            }
            if (content.Contains("TransitionStorageClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionStorageClass = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TransitionStorageClass?) content.GetValueForProperty("TransitionStorageClass",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionStorageClass, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TransitionStorageClass.CreateFrom);
            }
            if (content.Contains("TransitionDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionDate = (string) content.GetValueForProperty("TransitionDate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionDate, global::System.Convert.ToString);
            }
            if (content.Contains("AbortIncompleteMultipartUploadDaysAfterInitiation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).AbortIncompleteMultipartUploadDaysAfterInitiation = (int?) content.GetValueForProperty("AbortIncompleteMultipartUploadDaysAfterInitiation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).AbortIncompleteMultipartUploadDaysAfterInitiation, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NoncurrentVersionExpirationNewerNoncurrentVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationNewerNoncurrentVersion = (int?) content.GetValueForProperty("NoncurrentVersionExpirationNewerNoncurrentVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationNewerNoncurrentVersion, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NoncurrentVersionTransitionNewerNoncurrentVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionNewerNoncurrentVersion = (int?) content.GetValueForProperty("NoncurrentVersionTransitionNewerNoncurrentVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionNewerNoncurrentVersion, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NoncurrentVersionTransitionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionInDay = (int?) content.GetValueForProperty("NoncurrentVersionTransitionInDay",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TransitionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionInDay = (int?) content.GetValueForProperty("TransitionInDay",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Rule"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Rule(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AbortIncompleteMultipartUpload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).AbortIncompleteMultipartUpload = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAbortIncompleteMultipartUpload) content.GetValueForProperty("AbortIncompleteMultipartUpload",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).AbortIncompleteMultipartUpload, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AbortIncompleteMultipartUploadTypeConverter.ConvertFrom);
            }
            if (content.Contains("NoncurrentVersionExpiration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpiration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INoncurrentVersionExpiration) content.GetValueForProperty("NoncurrentVersionExpiration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpiration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NoncurrentVersionExpirationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NoncurrentVersionTransition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransition = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INoncurrentVersionTransition) content.GetValueForProperty("NoncurrentVersionTransition",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransition, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NoncurrentVersionTransitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("Transition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Transition = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITransition) content.GetValueForProperty("Transition",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Transition, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TransitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExpirationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpirationDate = (string) content.GetValueForProperty("ExpirationDate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpirationDate, global::System.Convert.ToString);
            }
            if (content.Contains("ExpirationInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpirationInDay = (int?) content.GetValueForProperty("ExpirationInDay",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpirationInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ExpiredObjectDeleteMarker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpiredObjectDeleteMarker = (bool?) content.GetValueForProperty("ExpiredObjectDeleteMarker",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ExpiredObjectDeleteMarker, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("NoncurrentVersionExpirationInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationInDay = (int?) content.GetValueForProperty("NoncurrentVersionExpirationInDay",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NoncurrentVersionTransitions"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitions = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INoncurrentVersionTransition[]) content.GetValueForProperty("NoncurrentVersionTransitions",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitions, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INoncurrentVersionTransition>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NoncurrentVersionTransitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ObjectSizeGreaterThan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ObjectSizeGreaterThan = (string) content.GetValueForProperty("ObjectSizeGreaterThan",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ObjectSizeGreaterThan, global::System.Convert.ToString);
            }
            if (content.Contains("ObjectSizeLessThan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ObjectSizeLessThan = (string) content.GetValueForProperty("ObjectSizeLessThan",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).ObjectSizeLessThan, global::System.Convert.ToString);
            }
            if (content.Contains("Prefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Prefix = (string) content.GetValueForProperty("Prefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Prefix, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuleStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuleStatus.CreateFrom);
            }
            if (content.Contains("TagFilter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TagFilter = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagFilter[]) content.GetValueForProperty("TagFilter",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TagFilter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagFilter>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagFilterTypeConverter.ConvertFrom));
            }
            if (content.Contains("Transitions"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Transitions = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITransition[]) content.GetValueForProperty("Transitions",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).Transitions, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITransition>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TransitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("NoncurrentVersionExpirationNoncurrentDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationNoncurrentDay = (int?) content.GetValueForProperty("NoncurrentVersionExpirationNoncurrentDay",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationNoncurrentDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NoncurrentVersionTransitionStorageClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionStorageClass = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NoncurrentVersionTransitionStorageClass?) content.GetValueForProperty("NoncurrentVersionTransitionStorageClass",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionStorageClass, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NoncurrentVersionTransitionStorageClass.CreateFrom);
            }
            if (content.Contains("TransitionStorageClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionStorageClass = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TransitionStorageClass?) content.GetValueForProperty("TransitionStorageClass",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionStorageClass, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TransitionStorageClass.CreateFrom);
            }
            if (content.Contains("TransitionDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionDate = (string) content.GetValueForProperty("TransitionDate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionDate, global::System.Convert.ToString);
            }
            if (content.Contains("AbortIncompleteMultipartUploadDaysAfterInitiation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).AbortIncompleteMultipartUploadDaysAfterInitiation = (int?) content.GetValueForProperty("AbortIncompleteMultipartUploadDaysAfterInitiation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).AbortIncompleteMultipartUploadDaysAfterInitiation, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NoncurrentVersionExpirationNewerNoncurrentVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationNewerNoncurrentVersion = (int?) content.GetValueForProperty("NoncurrentVersionExpirationNewerNoncurrentVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionExpirationNewerNoncurrentVersion, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NoncurrentVersionTransitionNewerNoncurrentVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionNewerNoncurrentVersion = (int?) content.GetValueForProperty("NoncurrentVersionTransitionNewerNoncurrentVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionNewerNoncurrentVersion, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NoncurrentVersionTransitionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionInDay = (int?) content.GetValueForProperty("NoncurrentVersionTransitionInDay",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).NoncurrentVersionTransitionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TransitionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionInDay = (int?) content.GetValueForProperty("TransitionInDay",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuleInternal)this).TransitionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of Rule
    [System.ComponentModel.TypeConverter(typeof(RuleTypeConverter))]
    public partial interface IRule

    {

    }
}