// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsRdsDBCluster</summary>
    public partial class AwsRdsDbClusterProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject into a new instance of <see cref="AwsRdsDbClusterProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AwsRdsDbClusterProperties(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_endpoint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("endpoint"), out var __jsonEndpoint) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EndpointAutoGenerated.FromJson(__jsonEndpoint) : Endpoint;}
            {_masterUserSecret = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("masterUserSecret"), out var __jsonMasterUserSecret) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MasterUserSecret.FromJson(__jsonMasterUserSecret) : MasterUserSecret;}
            {_readEndpoint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("readEndpoint"), out var __jsonReadEndpoint) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ReadEndpoint.FromJson(__jsonReadEndpoint) : ReadEndpoint;}
            {_scalingConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("scalingConfiguration"), out var __jsonScalingConfiguration) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ScalingConfiguration.FromJson(__jsonScalingConfiguration) : ScalingConfiguration;}
            {_serverlessV2ScalingConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("serverlessV2ScalingConfiguration"), out var __jsonServerlessV2ScalingConfiguration) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServerlessV2ScalingConfiguration.FromJson(__jsonServerlessV2ScalingConfiguration) : ServerlessV2ScalingConfiguration;}
            {_allocatedStorage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("allocatedStorage"), out var __jsonAllocatedStorage) ? (int?)__jsonAllocatedStorage : AllocatedStorage;}
            {_associatedRole = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("associatedRoles"), out var __jsonAssociatedRoles) ? If( __jsonAssociatedRoles as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDbClusterRole[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDbClusterRole) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DbClusterRole.FromJson(__u) )) ))() : null : AssociatedRole;}
            {_autoMinorVersionUpgrade = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("autoMinorVersionUpgrade"), out var __jsonAutoMinorVersionUpgrade) ? (bool?)__jsonAutoMinorVersionUpgrade : AutoMinorVersionUpgrade;}
            {_availabilityZone = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("availabilityZones"), out var __jsonAvailabilityZones) ? If( __jsonAvailabilityZones as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(string) (__p is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __o ? (string)(__o.ToString()) : null)) ))() : null : AvailabilityZone;}
            {_backtrackWindow = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("backtrackWindow"), out var __jsonBacktrackWindow) ? (int?)__jsonBacktrackWindow : BacktrackWindow;}
            {_backupRetentionPeriod = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("backupRetentionPeriod"), out var __jsonBackupRetentionPeriod) ? (int?)__jsonBackupRetentionPeriod : BackupRetentionPeriod;}
            {_copyTagsToSnapshot = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("copyTagsToSnapshot"), out var __jsonCopyTagsToSnapshot) ? (bool?)__jsonCopyTagsToSnapshot : CopyTagsToSnapshot;}
            {_dbClusterArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("dbClusterArn"), out var __jsonDbClusterArn) ? (string)__jsonDbClusterArn : (string)DbClusterArn;}
            {_dbClusterIdentifier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("dbClusterIdentifier"), out var __jsonDbClusterIdentifier) ? (string)__jsonDbClusterIdentifier : (string)DbClusterIdentifier;}
            {_dbClusterInstanceClass = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("dbClusterInstanceClass"), out var __jsonDbClusterInstanceClass) ? (string)__jsonDbClusterInstanceClass : (string)DbClusterInstanceClass;}
            {_dbClusterParameterGroupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("dbClusterParameterGroupName"), out var __jsonDbClusterParameterGroupName) ? (string)__jsonDbClusterParameterGroupName : (string)DbClusterParameterGroupName;}
            {_dbClusterResourceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("dbClusterResourceId"), out var __jsonDbClusterResourceId) ? (string)__jsonDbClusterResourceId : (string)DbClusterResourceId;}
            {_dbInstanceParameterGroupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("dbInstanceParameterGroupName"), out var __jsonDbInstanceParameterGroupName) ? (string)__jsonDbInstanceParameterGroupName : (string)DbInstanceParameterGroupName;}
            {_dbSubnetGroupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("dbSubnetGroupName"), out var __jsonDbSubnetGroupName) ? (string)__jsonDbSubnetGroupName : (string)DbSubnetGroupName;}
            {_dbSystemId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("dbSystemId"), out var __jsonDbSystemId) ? (string)__jsonDbSystemId : (string)DbSystemId;}
            {_databaseName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("databaseName"), out var __jsonDatabaseName) ? (string)__jsonDatabaseName : (string)DatabaseName;}
            {_deletionProtection = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("deletionProtection"), out var __jsonDeletionProtection) ? (bool?)__jsonDeletionProtection : DeletionProtection;}
            {_domain = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("domain"), out var __jsonDomain) ? (string)__jsonDomain : (string)Domain;}
            {_domainIamRoleName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("domainIAMRoleName"), out var __jsonDomainIamRoleName) ? (string)__jsonDomainIamRoleName : (string)DomainIamRoleName;}
            {_enableCloudwatchLogsExport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("enableCloudwatchLogsExports"), out var __jsonEnableCloudwatchLogsExports) ? If( __jsonEnableCloudwatchLogsExports as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(string) (__k is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __j ? (string)(__j.ToString()) : null)) ))() : null : EnableCloudwatchLogsExport;}
            {_enableGlobalWriteForwarding = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("enableGlobalWriteForwarding"), out var __jsonEnableGlobalWriteForwarding) ? (bool?)__jsonEnableGlobalWriteForwarding : EnableGlobalWriteForwarding;}
            {_enableHttpEndpoint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("enableHttpEndpoint"), out var __jsonEnableHttpEndpoint) ? (bool?)__jsonEnableHttpEndpoint : EnableHttpEndpoint;}
            {_enableIamDatabaseAuthentication = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("enableIAMDatabaseAuthentication"), out var __jsonEnableIamDatabaseAuthentication) ? (bool?)__jsonEnableIamDatabaseAuthentication : EnableIamDatabaseAuthentication;}
            {_engine = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("engine"), out var __jsonEngine) ? (string)__jsonEngine : (string)Engine;}
            {_engineMode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("engineMode"), out var __jsonEngineMode) ? (string)__jsonEngineMode : (string)EngineMode;}
            {_engineVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("engineVersion"), out var __jsonEngineVersion) ? (string)__jsonEngineVersion : (string)EngineVersion;}
            {_globalClusterIdentifier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("globalClusterIdentifier"), out var __jsonGlobalClusterIdentifier) ? (string)__jsonGlobalClusterIdentifier : (string)GlobalClusterIdentifier;}
            {_iop = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("iops"), out var __jsonIops) ? (int?)__jsonIops : Iop;}
            {_kmsKeyId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("kmsKeyId"), out var __jsonKmsKeyId) ? (string)__jsonKmsKeyId : (string)KmsKeyId;}
            {_manageMasterUserPassword = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("manageMasterUserPassword"), out var __jsonManageMasterUserPassword) ? (bool?)__jsonManageMasterUserPassword : ManageMasterUserPassword;}
            {_masterUserPassword = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("masterUserPassword"), out var __jsonMasterUserPassword) ? (string)__jsonMasterUserPassword : (string)MasterUserPassword;}
            {_masterUsername = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("masterUsername"), out var __jsonMasterUsername) ? (string)__jsonMasterUsername : (string)MasterUsername;}
            {_monitoringInterval = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("monitoringInterval"), out var __jsonMonitoringInterval) ? (int?)__jsonMonitoringInterval : MonitoringInterval;}
            {_monitoringRoleArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("monitoringRoleArn"), out var __jsonMonitoringRoleArn) ? (string)__jsonMonitoringRoleArn : (string)MonitoringRoleArn;}
            {_networkType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("networkType"), out var __jsonNetworkType) ? (string)__jsonNetworkType : (string)NetworkType;}
            {_performanceInsightsEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("performanceInsightsEnabled"), out var __jsonPerformanceInsightsEnabled) ? (bool?)__jsonPerformanceInsightsEnabled : PerformanceInsightsEnabled;}
            {_performanceInsightsKmsKeyId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("performanceInsightsKmsKeyId"), out var __jsonPerformanceInsightsKmsKeyId) ? (string)__jsonPerformanceInsightsKmsKeyId : (string)PerformanceInsightsKmsKeyId;}
            {_performanceInsightsRetentionPeriod = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("performanceInsightsRetentionPeriod"), out var __jsonPerformanceInsightsRetentionPeriod) ? (int?)__jsonPerformanceInsightsRetentionPeriod : PerformanceInsightsRetentionPeriod;}
            {_port = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("port"), out var __jsonPort) ? (int?)__jsonPort : Port;}
            {_preferredBackupWindow = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("preferredBackupWindow"), out var __jsonPreferredBackupWindow) ? (string)__jsonPreferredBackupWindow : (string)PreferredBackupWindow;}
            {_preferredMaintenanceWindow = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("preferredMaintenanceWindow"), out var __jsonPreferredMaintenanceWindow) ? (string)__jsonPreferredMaintenanceWindow : (string)PreferredMaintenanceWindow;}
            {_publiclyAccessible = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("publiclyAccessible"), out var __jsonPubliclyAccessible) ? (bool?)__jsonPubliclyAccessible : PubliclyAccessible;}
            {_replicationSourceIdentifier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("replicationSourceIdentifier"), out var __jsonReplicationSourceIdentifier) ? (string)__jsonReplicationSourceIdentifier : (string)ReplicationSourceIdentifier;}
            {_restoreToTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("restoreToTime"), out var __jsonRestoreToTime) ? (string)__jsonRestoreToTime : (string)RestoreToTime;}
            {_restoreType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("restoreType"), out var __jsonRestoreType) ? (string)__jsonRestoreType : (string)RestoreType;}
            {_snapshotIdentifier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("snapshotIdentifier"), out var __jsonSnapshotIdentifier) ? (string)__jsonSnapshotIdentifier : (string)SnapshotIdentifier;}
            {_sourceDbClusterIdentifier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("sourceDBClusterIdentifier"), out var __jsonSourceDbClusterIdentifier) ? (string)__jsonSourceDbClusterIdentifier : (string)SourceDbClusterIdentifier;}
            {_sourceRegion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("sourceRegion"), out var __jsonSourceRegion) ? (string)__jsonSourceRegion : (string)SourceRegion;}
            {_storageEncrypted = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("storageEncrypted"), out var __jsonStorageEncrypted) ? (bool?)__jsonStorageEncrypted : StorageEncrypted;}
            {_storageThroughput = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("storageThroughput"), out var __jsonStorageThroughput) ? (int?)__jsonStorageThroughput : StorageThroughput;}
            {_storageType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("storageType"), out var __jsonStorageType) ? (string)__jsonStorageType : (string)StorageType;}
            {_tag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("tags"), out var __jsonTags) ? If( __jsonTags as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated46[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated46) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated46.FromJson(__f) )) ))() : null : Tag;}
            {_useLatestRestorableTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("useLatestRestorableTime"), out var __jsonUseLatestRestorableTime) ? (bool?)__jsonUseLatestRestorableTime : UseLatestRestorableTime;}
            {_vpcSecurityGroupId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("vpcSecurityGroupIds"), out var __jsonVpcSecurityGroupIds) ? If( __jsonVpcSecurityGroupIds as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__b, (__a)=>(string) (__a is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString ___z ? (string)(___z.ToString()) : null)) ))() : null : VpcSecurityGroupId;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json ? new AwsRdsDbClusterProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AwsRdsDbClusterProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AwsRdsDbClusterProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._endpoint ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._endpoint.ToJson(null,serializationMode) : null, "endpoint" ,container.Add );
            AddIf( null != this._masterUserSecret ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._masterUserSecret.ToJson(null,serializationMode) : null, "masterUserSecret" ,container.Add );
            AddIf( null != this._readEndpoint ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._readEndpoint.ToJson(null,serializationMode) : null, "readEndpoint" ,container.Add );
            AddIf( null != this._scalingConfiguration ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._scalingConfiguration.ToJson(null,serializationMode) : null, "scalingConfiguration" ,container.Add );
            AddIf( null != this._serverlessV2ScalingConfiguration ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._serverlessV2ScalingConfiguration.ToJson(null,serializationMode) : null, "serverlessV2ScalingConfiguration" ,container.Add );
            AddIf( null != this._allocatedStorage ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._allocatedStorage) : null, "allocatedStorage" ,container.Add );
            if (null != this._associatedRole)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __x in this._associatedRole )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("associatedRoles",__w);
            }
            AddIf( null != this._autoMinorVersionUpgrade ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._autoMinorVersionUpgrade) : null, "autoMinorVersionUpgrade" ,container.Add );
            if (null != this._availabilityZone)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __s in this._availabilityZone )
                {
                    AddIf(null != (((object)__s)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__s.ToString()) : null ,__r.Add);
                }
                container.Add("availabilityZones",__r);
            }
            AddIf( null != this._backtrackWindow ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._backtrackWindow) : null, "backtrackWindow" ,container.Add );
            AddIf( null != this._backupRetentionPeriod ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._backupRetentionPeriod) : null, "backupRetentionPeriod" ,container.Add );
            AddIf( null != this._copyTagsToSnapshot ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._copyTagsToSnapshot) : null, "copyTagsToSnapshot" ,container.Add );
            AddIf( null != (((object)this._dbClusterArn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._dbClusterArn.ToString()) : null, "dbClusterArn" ,container.Add );
            AddIf( null != (((object)this._dbClusterIdentifier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._dbClusterIdentifier.ToString()) : null, "dbClusterIdentifier" ,container.Add );
            AddIf( null != (((object)this._dbClusterInstanceClass)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._dbClusterInstanceClass.ToString()) : null, "dbClusterInstanceClass" ,container.Add );
            AddIf( null != (((object)this._dbClusterParameterGroupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._dbClusterParameterGroupName.ToString()) : null, "dbClusterParameterGroupName" ,container.Add );
            AddIf( null != (((object)this._dbClusterResourceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._dbClusterResourceId.ToString()) : null, "dbClusterResourceId" ,container.Add );
            AddIf( null != (((object)this._dbInstanceParameterGroupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._dbInstanceParameterGroupName.ToString()) : null, "dbInstanceParameterGroupName" ,container.Add );
            AddIf( null != (((object)this._dbSubnetGroupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._dbSubnetGroupName.ToString()) : null, "dbSubnetGroupName" ,container.Add );
            AddIf( null != (((object)this._dbSystemId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._dbSystemId.ToString()) : null, "dbSystemId" ,container.Add );
            AddIf( null != (((object)this._databaseName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._databaseName.ToString()) : null, "databaseName" ,container.Add );
            AddIf( null != this._deletionProtection ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._deletionProtection) : null, "deletionProtection" ,container.Add );
            AddIf( null != (((object)this._domain)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._domain.ToString()) : null, "domain" ,container.Add );
            AddIf( null != (((object)this._domainIamRoleName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._domainIamRoleName.ToString()) : null, "domainIAMRoleName" ,container.Add );
            if (null != this._enableCloudwatchLogsExport)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __n in this._enableCloudwatchLogsExport )
                {
                    AddIf(null != (((object)__n)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__n.ToString()) : null ,__m.Add);
                }
                container.Add("enableCloudwatchLogsExports",__m);
            }
            AddIf( null != this._enableGlobalWriteForwarding ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._enableGlobalWriteForwarding) : null, "enableGlobalWriteForwarding" ,container.Add );
            AddIf( null != this._enableHttpEndpoint ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._enableHttpEndpoint) : null, "enableHttpEndpoint" ,container.Add );
            AddIf( null != this._enableIamDatabaseAuthentication ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._enableIamDatabaseAuthentication) : null, "enableIAMDatabaseAuthentication" ,container.Add );
            AddIf( null != (((object)this._engine)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._engine.ToString()) : null, "engine" ,container.Add );
            AddIf( null != (((object)this._engineMode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._engineMode.ToString()) : null, "engineMode" ,container.Add );
            AddIf( null != (((object)this._engineVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._engineVersion.ToString()) : null, "engineVersion" ,container.Add );
            AddIf( null != (((object)this._globalClusterIdentifier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._globalClusterIdentifier.ToString()) : null, "globalClusterIdentifier" ,container.Add );
            AddIf( null != this._iop ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._iop) : null, "iops" ,container.Add );
            AddIf( null != (((object)this._kmsKeyId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._kmsKeyId.ToString()) : null, "kmsKeyId" ,container.Add );
            AddIf( null != this._manageMasterUserPassword ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._manageMasterUserPassword) : null, "manageMasterUserPassword" ,container.Add );
            AddIf( null != (((object)this._masterUserPassword)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._masterUserPassword.ToString()) : null, "masterUserPassword" ,container.Add );
            AddIf( null != (((object)this._masterUsername)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._masterUsername.ToString()) : null, "masterUsername" ,container.Add );
            AddIf( null != this._monitoringInterval ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._monitoringInterval) : null, "monitoringInterval" ,container.Add );
            AddIf( null != (((object)this._monitoringRoleArn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._monitoringRoleArn.ToString()) : null, "monitoringRoleArn" ,container.Add );
            AddIf( null != (((object)this._networkType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._networkType.ToString()) : null, "networkType" ,container.Add );
            AddIf( null != this._performanceInsightsEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._performanceInsightsEnabled) : null, "performanceInsightsEnabled" ,container.Add );
            AddIf( null != (((object)this._performanceInsightsKmsKeyId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._performanceInsightsKmsKeyId.ToString()) : null, "performanceInsightsKmsKeyId" ,container.Add );
            AddIf( null != this._performanceInsightsRetentionPeriod ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._performanceInsightsRetentionPeriod) : null, "performanceInsightsRetentionPeriod" ,container.Add );
            AddIf( null != this._port ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._port) : null, "port" ,container.Add );
            AddIf( null != (((object)this._preferredBackupWindow)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._preferredBackupWindow.ToString()) : null, "preferredBackupWindow" ,container.Add );
            AddIf( null != (((object)this._preferredMaintenanceWindow)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._preferredMaintenanceWindow.ToString()) : null, "preferredMaintenanceWindow" ,container.Add );
            AddIf( null != this._publiclyAccessible ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._publiclyAccessible) : null, "publiclyAccessible" ,container.Add );
            AddIf( null != (((object)this._replicationSourceIdentifier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._replicationSourceIdentifier.ToString()) : null, "replicationSourceIdentifier" ,container.Add );
            AddIf( null != (((object)this._restoreToTime)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._restoreToTime.ToString()) : null, "restoreToTime" ,container.Add );
            AddIf( null != (((object)this._restoreType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._restoreType.ToString()) : null, "restoreType" ,container.Add );
            AddIf( null != (((object)this._snapshotIdentifier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._snapshotIdentifier.ToString()) : null, "snapshotIdentifier" ,container.Add );
            AddIf( null != (((object)this._sourceDbClusterIdentifier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._sourceDbClusterIdentifier.ToString()) : null, "sourceDBClusterIdentifier" ,container.Add );
            AddIf( null != (((object)this._sourceRegion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._sourceRegion.ToString()) : null, "sourceRegion" ,container.Add );
            AddIf( null != this._storageEncrypted ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._storageEncrypted) : null, "storageEncrypted" ,container.Add );
            AddIf( null != this._storageThroughput ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._storageThroughput) : null, "storageThroughput" ,container.Add );
            AddIf( null != (((object)this._storageType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._storageType.ToString()) : null, "storageType" ,container.Add );
            if (null != this._tag)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __i in this._tag )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("tags",__h);
            }
            AddIf( null != this._useLatestRestorableTime ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._useLatestRestorableTime) : null, "useLatestRestorableTime" ,container.Add );
            if (null != this._vpcSecurityGroupId)
            {
                var __c = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __d in this._vpcSecurityGroupId )
                {
                    AddIf(null != (((object)__d)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__d.ToString()) : null ,__c.Add);
                }
                container.Add("vpcSecurityGroupIds",__c);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}