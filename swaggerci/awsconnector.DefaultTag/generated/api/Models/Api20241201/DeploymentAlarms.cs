// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of DeploymentAlarms</summary>
    public partial class DeploymentAlarms :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentAlarms,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentAlarmsInternal
    {

        /// <summary>Backing field for <see cref="AlarmName" /> property.</summary>
        private string[] _alarmName;

        /// <summary>One or more CloudWatch alarm names. Use a ',' to separate the alarms.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] AlarmName { get => this._alarmName; set => this._alarmName = value; }

        /// <summary>Backing field for <see cref="Enable" /> property.</summary>
        private bool? _enable;

        /// <summary>
        /// Determines whether to use the CloudWatch alarm option in the service deployment process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Enable { get => this._enable; set => this._enable = value; }

        /// <summary>Backing field for <see cref="Rollback" /> property.</summary>
        private bool? _rollback;

        /// <summary>
        /// Determines whether to configure Amazon ECS to roll back the service if a service deployment fails. If rollback is used,
        /// when a service deployment fails, the service is rolled back to the last deployment that completed successfully.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Rollback { get => this._rollback; set => this._rollback = value; }

        /// <summary>Creates an new <see cref="DeploymentAlarms" /> instance.</summary>
        public DeploymentAlarms()
        {

        }
    }
    /// Definition of DeploymentAlarms
    public partial interface IDeploymentAlarms :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>One or more CloudWatch alarm names. Use a ',' to separate the alarms.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"One or more CloudWatch alarm names. Use a ',' to separate the alarms.",
        SerializedName = @"alarmNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] AlarmName { get; set; }
        /// <summary>
        /// Determines whether to use the CloudWatch alarm option in the service deployment process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines whether to use the CloudWatch alarm option in the service deployment process.",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enable { get; set; }
        /// <summary>
        /// Determines whether to configure Amazon ECS to roll back the service if a service deployment fails. If rollback is used,
        /// when a service deployment fails, the service is rolled back to the last deployment that completed successfully.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines whether to configure Amazon ECS to roll back the service if a service deployment fails. If rollback is used, when a service deployment fails, the service is rolled back to the last deployment that completed successfully.",
        SerializedName = @"rollback",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Rollback { get; set; }

    }
    /// Definition of DeploymentAlarms
    internal partial interface IDeploymentAlarmsInternal

    {
        /// <summary>One or more CloudWatch alarm names. Use a ',' to separate the alarms.</summary>
        string[] AlarmName { get; set; }
        /// <summary>
        /// Determines whether to use the CloudWatch alarm option in the service deployment process.
        /// </summary>
        bool? Enable { get; set; }
        /// <summary>
        /// Determines whether to configure Amazon ECS to roll back the service if a service deployment fails. If rollback is used,
        /// when a service deployment fails, the service is rolled back to the last deployment that completed successfully.
        /// </summary>
        bool? Rollback { get; set; }

    }
}