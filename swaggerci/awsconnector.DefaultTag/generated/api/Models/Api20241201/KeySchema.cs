// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of KeySchema</summary>
    public partial class KeySchema :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchema,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchemaInternal
    {

        /// <summary>Backing field for <see cref="AttributeName" /> property.</summary>
        private string _attributeName;

        /// <summary>The name of a key attribute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AttributeName { get => this._attributeName; set => this._attributeName = value; }

        /// <summary>Backing field for <see cref="KeyType" /> property.</summary>
        private string _keyType;

        /// <summary>
        /// The role that this key attribute will assume: + ``HASH`` - partition key + ``RANGE`` - sort key The partition key of an
        /// item is also known as its *hash attribute*. The term 'hash attribute' derives from DynamoDB's usage of an internal hash
        /// function to evenly distribute data items across partitions, based on their partition key values. The sort key of an item
        /// is also known as its *range attribute*. The term 'range attribute' derives from the way DynamoDB stores items with the
        /// same partition key physically close together, in sorted order by the sort key value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string KeyType { get => this._keyType; set => this._keyType = value; }

        /// <summary>Creates an new <see cref="KeySchema" /> instance.</summary>
        public KeySchema()
        {

        }
    }
    /// Definition of KeySchema
    public partial interface IKeySchema :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>The name of a key attribute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of a key attribute.",
        SerializedName = @"attributeName",
        PossibleTypes = new [] { typeof(string) })]
        string AttributeName { get; set; }
        /// <summary>
        /// The role that this key attribute will assume: + ``HASH`` - partition key + ``RANGE`` - sort key The partition key of an
        /// item is also known as its *hash attribute*. The term 'hash attribute' derives from DynamoDB's usage of an internal hash
        /// function to evenly distribute data items across partitions, based on their partition key values. The sort key of an item
        /// is also known as its *range attribute*. The term 'range attribute' derives from the way DynamoDB stores items with the
        /// same partition key physically close together, in sorted order by the sort key value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The role that this key attribute will assume:  +   ``HASH`` - partition key  +   ``RANGE`` - sort key    The partition key of an item is also known as its *hash attribute*. The term 'hash attribute' derives from DynamoDB's usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values. The sort key of an item is also known as its *range attribute*. The term 'range attribute' derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.",
        SerializedName = @"keyType",
        PossibleTypes = new [] { typeof(string) })]
        string KeyType { get; set; }

    }
    /// Definition of KeySchema
    internal partial interface IKeySchemaInternal

    {
        /// <summary>The name of a key attribute.</summary>
        string AttributeName { get; set; }
        /// <summary>
        /// The role that this key attribute will assume: + ``HASH`` - partition key + ``RANGE`` - sort key The partition key of an
        /// item is also known as its *hash attribute*. The term 'hash attribute' derives from DynamoDB's usage of an internal hash
        /// function to evenly distribute data items across partitions, based on their partition key values. The sort key of an item
        /// is also known as its *range attribute*. The term 'range attribute' derives from the way DynamoDB stores items with the
        /// same partition key physically close together, in sorted order by the sort key value.
        /// </summary>
        string KeyType { get; set; }

    }
}