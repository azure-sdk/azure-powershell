// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsDaxCluster</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsDaxClusterPropertiesTypeConverter))]
    public partial class AwsDaxClusterProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsDaxClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsDaxClusterProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ClusterDiscoveryEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpoint) content.GetValueForProperty("ClusterDiscoveryEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpoint, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EndpointTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterEndpointEncryptionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterEndpointEncryptionType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterEndpointEncryptionTypeEnumValue) content.GetValueForProperty("ClusterEndpointEncryptionType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterEndpointEncryptionType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterEndpointEncryptionTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("NotificationConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfigurationAutoGenerated) content.GetValueForProperty("NotificationConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NotificationConfigurationAutoGeneratedTypeConverter.ConvertFrom);
            }
            if (content.Contains("ParameterGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroup = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IParameterGroupStatus) content.GetValueForProperty("ParameterGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroup, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ParameterGroupStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("SseDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SseDescription = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseDescription) content.GetValueForProperty("SseDescription",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SseDescription, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SseDescriptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActiveNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ActiveNode = (int?) content.GetValueForProperty("ActiveNode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ActiveNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ClusterArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterArn = (string) content.GetValueForProperty("ClusterArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterArn, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterName = (string) content.GetValueForProperty("ClusterName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("IamRoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).IamRoleArn = (string) content.GetValueForProperty("IamRoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).IamRoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("NodeIdsToRemove"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NodeIdsToRemove = (string[]) content.GetValueForProperty("NodeIdsToRemove",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NodeIdsToRemove, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NodeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NodeType = (string) content.GetValueForProperty("NodeType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NodeType, global::System.Convert.ToString);
            }
            if (content.Contains("Node"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Node = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INode[]) content.GetValueForProperty("Node",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Node, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INode>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NodeTypeConverter.ConvertFrom));
            }
            if (content.Contains("PreferredMaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).PreferredMaintenanceWindow = (string) content.GetValueForProperty("PreferredMaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).PreferredMaintenanceWindow, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SecurityGroup = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecurityGroupMembership[]) content.GetValueForProperty("SecurityGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SecurityGroup, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecurityGroupMembership>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SecurityGroupMembershipTypeConverter.ConvertFrom));
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Status = (string) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SubnetGroup = (string) content.GetValueForProperty("SubnetGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SubnetGroup, global::System.Convert.ToString);
            }
            if (content.Contains("TotalNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).TotalNode = (int?) content.GetValueForProperty("TotalNode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).TotalNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ClusterEndpointEncryptionTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterEndpointEncryptionTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterEndpointEncryptionType?) content.GetValueForProperty("ClusterEndpointEncryptionTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterEndpointEncryptionTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterEndpointEncryptionType.CreateFrom);
            }
            if (content.Contains("NotificationConfigurationTopicArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfigurationTopicArn = (string) content.GetValueForProperty("NotificationConfigurationTopicArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfigurationTopicArn, global::System.Convert.ToString);
            }
            if (content.Contains("NotificationConfigurationTopicStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfigurationTopicStatus = (string) content.GetValueForProperty("NotificationConfigurationTopicStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfigurationTopicStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterDiscoveryEndpointAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointAddress = (string) content.GetValueForProperty("ClusterDiscoveryEndpointAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterDiscoveryEndpointPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointPort = (int?) content.GetValueForProperty("ClusterDiscoveryEndpointPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ClusterDiscoveryEndpointUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointUrl = (string) content.GetValueForProperty("ClusterDiscoveryEndpointUrl",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ParameterGroupNodeIdsToReboot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupNodeIdsToReboot = (string[]) content.GetValueForProperty("ParameterGroupNodeIdsToReboot",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupNodeIdsToReboot, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ParameterGroupParameterApplyStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupParameterApplyStatus = (string) content.GetValueForProperty("ParameterGroupParameterApplyStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupParameterApplyStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ParameterGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupName = (string) content.GetValueForProperty("ParameterGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("SseDescriptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SseDescriptionStatus = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseStatusEnumValue) content.GetValueForProperty("SseDescriptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SseDescriptionStatus, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SseStatusEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StatusValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).StatusValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseStatus?) content.GetValueForProperty("StatusValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).StatusValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseStatus.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsDaxClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsDaxClusterProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ClusterDiscoveryEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpoint) content.GetValueForProperty("ClusterDiscoveryEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpoint, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EndpointTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterEndpointEncryptionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterEndpointEncryptionType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterEndpointEncryptionTypeEnumValue) content.GetValueForProperty("ClusterEndpointEncryptionType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterEndpointEncryptionType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterEndpointEncryptionTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("NotificationConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfigurationAutoGenerated) content.GetValueForProperty("NotificationConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NotificationConfigurationAutoGeneratedTypeConverter.ConvertFrom);
            }
            if (content.Contains("ParameterGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroup = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IParameterGroupStatus) content.GetValueForProperty("ParameterGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroup, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ParameterGroupStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("SseDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SseDescription = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseDescription) content.GetValueForProperty("SseDescription",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SseDescription, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SseDescriptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActiveNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ActiveNode = (int?) content.GetValueForProperty("ActiveNode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ActiveNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ClusterArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterArn = (string) content.GetValueForProperty("ClusterArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterArn, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterName = (string) content.GetValueForProperty("ClusterName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("IamRoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).IamRoleArn = (string) content.GetValueForProperty("IamRoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).IamRoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("NodeIdsToRemove"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NodeIdsToRemove = (string[]) content.GetValueForProperty("NodeIdsToRemove",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NodeIdsToRemove, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NodeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NodeType = (string) content.GetValueForProperty("NodeType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NodeType, global::System.Convert.ToString);
            }
            if (content.Contains("Node"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Node = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INode[]) content.GetValueForProperty("Node",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Node, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INode>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NodeTypeConverter.ConvertFrom));
            }
            if (content.Contains("PreferredMaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).PreferredMaintenanceWindow = (string) content.GetValueForProperty("PreferredMaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).PreferredMaintenanceWindow, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SecurityGroup = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecurityGroupMembership[]) content.GetValueForProperty("SecurityGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SecurityGroup, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecurityGroupMembership>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SecurityGroupMembershipTypeConverter.ConvertFrom));
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Status = (string) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SubnetGroup = (string) content.GetValueForProperty("SubnetGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SubnetGroup, global::System.Convert.ToString);
            }
            if (content.Contains("TotalNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).TotalNode = (int?) content.GetValueForProperty("TotalNode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).TotalNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ClusterEndpointEncryptionTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterEndpointEncryptionTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterEndpointEncryptionType?) content.GetValueForProperty("ClusterEndpointEncryptionTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterEndpointEncryptionTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterEndpointEncryptionType.CreateFrom);
            }
            if (content.Contains("NotificationConfigurationTopicArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfigurationTopicArn = (string) content.GetValueForProperty("NotificationConfigurationTopicArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfigurationTopicArn, global::System.Convert.ToString);
            }
            if (content.Contains("NotificationConfigurationTopicStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfigurationTopicStatus = (string) content.GetValueForProperty("NotificationConfigurationTopicStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).NotificationConfigurationTopicStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterDiscoveryEndpointAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointAddress = (string) content.GetValueForProperty("ClusterDiscoveryEndpointAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterDiscoveryEndpointPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointPort = (int?) content.GetValueForProperty("ClusterDiscoveryEndpointPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ClusterDiscoveryEndpointUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointUrl = (string) content.GetValueForProperty("ClusterDiscoveryEndpointUrl",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ClusterDiscoveryEndpointUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ParameterGroupNodeIdsToReboot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupNodeIdsToReboot = (string[]) content.GetValueForProperty("ParameterGroupNodeIdsToReboot",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupNodeIdsToReboot, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ParameterGroupParameterApplyStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupParameterApplyStatus = (string) content.GetValueForProperty("ParameterGroupParameterApplyStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupParameterApplyStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ParameterGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupName = (string) content.GetValueForProperty("ParameterGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).ParameterGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("SseDescriptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SseDescriptionStatus = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseStatusEnumValue) content.GetValueForProperty("SseDescriptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).SseDescriptionStatus, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SseStatusEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StatusValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).StatusValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseStatus?) content.GetValueForProperty("StatusValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterPropertiesInternal)this).StatusValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseStatus.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsDaxClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsDaxClusterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsDaxClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsDaxClusterProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsDaxClusterProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsDaxClusterProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDaxClusterProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsDaxCluster
    [System.ComponentModel.TypeConverter(typeof(AwsDaxClusterPropertiesTypeConverter))]
    public partial interface IAwsDaxClusterProperties

    {

    }
}