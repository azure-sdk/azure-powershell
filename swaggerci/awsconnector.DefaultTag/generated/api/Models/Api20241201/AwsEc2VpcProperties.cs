// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEc2Vpc</summary>
    public partial class AwsEc2VpcProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CidrBlock" /> property.</summary>
        private string _cidrBlock;

        /// <summary>
        /// The IPv4 network range for the VPC, in CIDR notation. For example, ``10.0.0.0/16``. We modify the specified CIDR block
        /// to its canonical form; for example, if you specify ``100.68.0.18/18``, we modify it to ``100.68.0.0/18``. You must specify
        /// either``CidrBlock`` or ``Ipv4IpamPoolId``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string CidrBlock { get => this._cidrBlock; set => this._cidrBlock = value; }

        /// <summary>Backing field for <see cref="CidrBlockAssociation" /> property.</summary>
        private string[] _cidrBlockAssociation;

        /// <summary>Property cidrBlockAssociations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] CidrBlockAssociation { get => this._cidrBlockAssociation; set => this._cidrBlockAssociation = value; }

        /// <summary>Backing field for <see cref="DefaultNetworkAcl" /> property.</summary>
        private string _defaultNetworkAcl;

        /// <summary>Property defaultNetworkAcl</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DefaultNetworkAcl { get => this._defaultNetworkAcl; set => this._defaultNetworkAcl = value; }

        /// <summary>Backing field for <see cref="DefaultSecurityGroup" /> property.</summary>
        private string _defaultSecurityGroup;

        /// <summary>Property defaultSecurityGroup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DefaultSecurityGroup { get => this._defaultSecurityGroup; set => this._defaultSecurityGroup = value; }

        /// <summary>Backing field for <see cref="EnableDnsHostname" /> property.</summary>
        private bool? _enableDnsHostname;

        /// <summary>
        /// Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames;
        /// otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support).
        /// You can only enable DNS hostnames if you've enabled DNS support.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? EnableDnsHostname { get => this._enableDnsHostname; set => this._enableDnsHostname = value; }

        /// <summary>Backing field for <see cref="EnableDnsSupport" /> property.</summary>
        private bool? _enableDnsSupport;

        /// <summary>
        /// Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at
        /// the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range 'plus two' succeed. If
        /// disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.
        /// Enabled by default. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? EnableDnsSupport { get => this._enableDnsSupport; set => this._enableDnsSupport = value; }

        /// <summary>Backing field for <see cref="InstanceTenancy" /> property.</summary>
        private string _instanceTenancy;

        /// <summary>
        /// The allowed tenancy of instances launched into the VPC. + ``default``: An instance launched into the VPC runs on shared
        /// hardware by default, unless you explicitly specify a different tenancy during instance launch. + ``dedicated``: An instance
        /// launched into the VPC runs on dedicated hardware by default, unless you explicitly specify a tenancy of ``host`` during
        /// instance launch. You cannot specify a tenancy of ``default`` during instance launch. Updating ``InstanceTenancy`` requires
        /// no replacement only if you are updating its value from ``dedicated`` to ``default``. Updating ``InstanceTenancy`` from
        /// ``default`` to ``dedicated`` requires replacement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string InstanceTenancy { get => this._instanceTenancy; set => this._instanceTenancy = value; }

        /// <summary>Backing field for <see cref="Ipv4IpamPoolId" /> property.</summary>
        private string _ipv4IpamPoolId;

        /// <summary>
        /// The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html)
        /// in the *Amazon VPC IPAM User Guide*. You must specify either``CidrBlock`` or ``Ipv4IpamPoolId``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Ipv4IpamPoolId { get => this._ipv4IpamPoolId; set => this._ipv4IpamPoolId = value; }

        /// <summary>Backing field for <see cref="Ipv4NetmaskLength" /> property.</summary>
        private int? _ipv4NetmaskLength;

        /// <summary>
        /// The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool.
        /// For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html)
        /// in the *Amazon VPC IPAM User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? Ipv4NetmaskLength { get => this._ipv4NetmaskLength; set => this._ipv4NetmaskLength = value; }

        /// <summary>Backing field for <see cref="Ipv6CidrBlock" /> property.</summary>
        private string[] _ipv6CidrBlock;

        /// <summary>Property ipv6CidrBlocks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Ipv6CidrBlock { get => this._ipv6CidrBlock; set => this._ipv6CidrBlock = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated23[] _tag;

        /// <summary>The tags for the VPC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated23[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="VpcId" /> property.</summary>
        private string _vpcId;

        /// <summary>Property vpcId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string VpcId { get => this._vpcId; set => this._vpcId = value; }

        /// <summary>Creates an new <see cref="AwsEc2VpcProperties" /> instance.</summary>
        public AwsEc2VpcProperties()
        {

        }
    }
    /// Definition of awsEc2Vpc
    public partial interface IAwsEc2VpcProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The IPv4 network range for the VPC, in CIDR notation. For example, ``10.0.0.0/16``. We modify the specified CIDR block
        /// to its canonical form; for example, if you specify ``100.68.0.18/18``, we modify it to ``100.68.0.0/18``. You must specify
        /// either``CidrBlock`` or ``Ipv4IpamPoolId``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IPv4 network range for the VPC, in CIDR notation. For example, ``10.0.0.0/16``. We modify the specified CIDR block to its canonical form; for example, if you specify ``100.68.0.18/18``, we modify it to ``100.68.0.0/18``. You must specify either``CidrBlock`` or ``Ipv4IpamPoolId``.",
        SerializedName = @"cidrBlock",
        PossibleTypes = new [] { typeof(string) })]
        string CidrBlock { get; set; }
        /// <summary>Property cidrBlockAssociations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property cidrBlockAssociations",
        SerializedName = @"cidrBlockAssociations",
        PossibleTypes = new [] { typeof(string) })]
        string[] CidrBlockAssociation { get; set; }
        /// <summary>Property defaultNetworkAcl</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property defaultNetworkAcl",
        SerializedName = @"defaultNetworkAcl",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultNetworkAcl { get; set; }
        /// <summary>Property defaultSecurityGroup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property defaultSecurityGroup",
        SerializedName = @"defaultSecurityGroup",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultSecurityGroup { get; set; }
        /// <summary>
        /// Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames;
        /// otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support).
        /// You can only enable DNS hostnames if you've enabled DNS support.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support). You can only enable DNS hostnames if you've enabled DNS support.",
        SerializedName = @"enableDnsHostnames",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableDnsHostname { get; set; }
        /// <summary>
        /// Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at
        /// the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range 'plus two' succeed. If
        /// disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.
        /// Enabled by default. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range 'plus two' succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support).",
        SerializedName = @"enableDnsSupport",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableDnsSupport { get; set; }
        /// <summary>
        /// The allowed tenancy of instances launched into the VPC. + ``default``: An instance launched into the VPC runs on shared
        /// hardware by default, unless you explicitly specify a different tenancy during instance launch. + ``dedicated``: An instance
        /// launched into the VPC runs on dedicated hardware by default, unless you explicitly specify a tenancy of ``host`` during
        /// instance launch. You cannot specify a tenancy of ``default`` during instance launch. Updating ``InstanceTenancy`` requires
        /// no replacement only if you are updating its value from ``dedicated`` to ``default``. Updating ``InstanceTenancy`` from
        /// ``default`` to ``dedicated`` requires replacement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The allowed tenancy of instances launched into the VPC.  +  ``default``: An instance launched into the VPC runs on shared hardware by default, unless you explicitly specify a different tenancy during instance launch.  +  ``dedicated``: An instance launched into the VPC runs on dedicated hardware by default, unless you explicitly specify a tenancy of ``host`` during instance launch. You cannot specify a tenancy of ``default`` during instance launch.   Updating ``InstanceTenancy`` requires no replacement only if you are updating its value from ``dedicated`` to ``default``. Updating ``InstanceTenancy`` from ``default`` to ``dedicated`` requires replacement.",
        SerializedName = @"instanceTenancy",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceTenancy { get; set; }
        /// <summary>
        /// The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html)
        /// in the *Amazon VPC IPAM User Guide*. You must specify either``CidrBlock`` or ``Ipv4IpamPoolId``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide*. You must specify either``CidrBlock`` or ``Ipv4IpamPoolId``.",
        SerializedName = @"ipv4IpamPoolId",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv4IpamPoolId { get; set; }
        /// <summary>
        /// The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool.
        /// For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html)
        /// in the *Amazon VPC IPAM User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide*.",
        SerializedName = @"ipv4NetmaskLength",
        PossibleTypes = new [] { typeof(int) })]
        int? Ipv4NetmaskLength { get; set; }
        /// <summary>Property ipv6CidrBlocks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property ipv6CidrBlocks",
        SerializedName = @"ipv6CidrBlocks",
        PossibleTypes = new [] { typeof(string) })]
        string[] Ipv6CidrBlock { get; set; }
        /// <summary>The tags for the VPC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags for the VPC.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated23) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated23[] Tag { get; set; }
        /// <summary>Property vpcId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property vpcId",
        SerializedName = @"vpcId",
        PossibleTypes = new [] { typeof(string) })]
        string VpcId { get; set; }

    }
    /// Definition of awsEc2Vpc
    internal partial interface IAwsEc2VpcPropertiesInternal

    {
        /// <summary>
        /// The IPv4 network range for the VPC, in CIDR notation. For example, ``10.0.0.0/16``. We modify the specified CIDR block
        /// to its canonical form; for example, if you specify ``100.68.0.18/18``, we modify it to ``100.68.0.0/18``. You must specify
        /// either``CidrBlock`` or ``Ipv4IpamPoolId``.
        /// </summary>
        string CidrBlock { get; set; }
        /// <summary>Property cidrBlockAssociations</summary>
        string[] CidrBlockAssociation { get; set; }
        /// <summary>Property defaultNetworkAcl</summary>
        string DefaultNetworkAcl { get; set; }
        /// <summary>Property defaultSecurityGroup</summary>
        string DefaultSecurityGroup { get; set; }
        /// <summary>
        /// Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames;
        /// otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support).
        /// You can only enable DNS hostnames if you've enabled DNS support.
        /// </summary>
        bool? EnableDnsHostname { get; set; }
        /// <summary>
        /// Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at
        /// the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range 'plus two' succeed. If
        /// disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.
        /// Enabled by default. For more information, see [DNS attributes in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support).
        /// </summary>
        bool? EnableDnsSupport { get; set; }
        /// <summary>
        /// The allowed tenancy of instances launched into the VPC. + ``default``: An instance launched into the VPC runs on shared
        /// hardware by default, unless you explicitly specify a different tenancy during instance launch. + ``dedicated``: An instance
        /// launched into the VPC runs on dedicated hardware by default, unless you explicitly specify a tenancy of ``host`` during
        /// instance launch. You cannot specify a tenancy of ``default`` during instance launch. Updating ``InstanceTenancy`` requires
        /// no replacement only if you are updating its value from ``dedicated`` to ``default``. Updating ``InstanceTenancy`` from
        /// ``default`` to ``dedicated`` requires replacement.
        /// </summary>
        string InstanceTenancy { get; set; }
        /// <summary>
        /// The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html)
        /// in the *Amazon VPC IPAM User Guide*. You must specify either``CidrBlock`` or ``Ipv4IpamPoolId``.
        /// </summary>
        string Ipv4IpamPoolId { get; set; }
        /// <summary>
        /// The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool.
        /// For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html)
        /// in the *Amazon VPC IPAM User Guide*.
        /// </summary>
        int? Ipv4NetmaskLength { get; set; }
        /// <summary>Property ipv6CidrBlocks</summary>
        string[] Ipv6CidrBlock { get; set; }
        /// <summary>The tags for the VPC.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated23[] Tag { get; set; }
        /// <summary>Property vpcId</summary>
        string VpcId { get; set; }

    }
}