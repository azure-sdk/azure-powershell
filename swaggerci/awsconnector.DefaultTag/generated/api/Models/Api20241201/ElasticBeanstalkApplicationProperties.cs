// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ElasticBeanstalkApplication</summary>
    public partial class ElasticBeanstalkApplicationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>
        /// A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical
        /// ID and uses that ID for the application name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyApplicationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).ApplicationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).ApplicationName = value ?? null; }

        /// <summary>Your description of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).Description = value ?? null; }

        /// <summary>Backing field for <see cref="AwsAccountId" /> property.</summary>
        private string _awsAccountId;

        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsAccountId { get => this._awsAccountId; set => this._awsAccountId = value; }

        /// <summary>Backing field for <see cref="AwsProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationProperties _awsProperty;

        /// <summary>AWS Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationProperties AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsElasticBeanstalkApplicationProperties()); set => this._awsProperty = value; }

        /// <summary>Backing field for <see cref="AwsRegion" /> property.</summary>
        private string _awsRegion;

        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsRegion { get => this._awsRegion; set => this._awsRegion = value; }

        /// <summary>Backing field for <see cref="AwsSourceSchema" /> property.</summary>
        private string _awsSourceSchema;

        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsSourceSchema { get => this._awsSourceSchema; set => this._awsSourceSchema = value; }

        /// <summary>Backing field for <see cref="AwsTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesAwsTags _awsTag;

        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesAwsTags AwsTag { get => (this._awsTag = this._awsTag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticBeanstalkApplicationPropertiesAwsTags()); set => this._awsTag = value; }

        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxAgeRuleDeleteSourceFromS3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxAgeRuleDeleteSourceFromS3; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxAgeRuleDeleteSourceFromS3 = value ?? default(bool); }

        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxAgeRuleEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxAgeRuleEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxAgeRuleEnabled = value ?? default(bool); }

        /// <summary>Specify the number of days to retain an application versions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? MaxAgeRuleMaxAgeInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxAgeRuleMaxAgeInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxAgeRuleMaxAgeInDay = value ?? default(int); }

        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxCountRuleDeleteSourceFromS3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxCountRuleDeleteSourceFromS3; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxCountRuleDeleteSourceFromS3 = value ?? default(bool); }

        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxCountRuleEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxCountRuleEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxCountRuleEnabled = value ?? default(bool); }

        /// <summary>Specify the maximum number of application versions to retain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? MaxCountRuleMaxCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxCountRuleMaxCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).MaxCountRuleMaxCount = value ?? default(int); }

        /// <summary>Internal Acessors for AwPropertyResourceLifecycleConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesInternal.AwPropertyResourceLifecycleConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).ResourceLifecycleConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).ResourceLifecycleConfig = value; }

        /// <summary>Internal Acessors for AwsProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesInternal.AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsElasticBeanstalkApplicationProperties()); set { {_awsProperty = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ResourceLifecycleConfigVersionLifecycleConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesInternal.ResourceLifecycleConfigVersionLifecycleConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).ResourceLifecycleConfigVersionLifecycleConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).ResourceLifecycleConfigVersionLifecycleConfig = value; }

        /// <summary>Internal Acessors for VersionLifecycleConfigMaxAgeRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRule Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesInternal.VersionLifecycleConfigMaxAgeRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).VersionLifecycleConfigMaxAgeRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).VersionLifecycleConfigMaxAgeRule = value; }

        /// <summary>Internal Acessors for VersionLifecycleConfigMaxCountRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRule Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesInternal.VersionLifecycleConfigMaxCountRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).VersionLifecycleConfigMaxCountRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).VersionLifecycleConfigMaxCountRule = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicCloudConnectorsResourceId" /> property.</summary>
        private string _publicCloudConnectorsResourceId;

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudConnectorsResourceId { get => this._publicCloudConnectorsResourceId; set => this._publicCloudConnectorsResourceId = value; }

        /// <summary>Backing field for <see cref="PublicCloudResourceName" /> property.</summary>
        private string _publicCloudResourceName;

        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudResourceName { get => this._publicCloudResourceName; set => this._publicCloudResourceName = value; }

        /// <summary>
        /// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the
        /// first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk
        /// persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in
        /// subsequent updates to change the Service Role to another value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ResourceLifecycleConfigServiceRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).ResourceLifecycleConfigServiceRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal)AwsProperty).ResourceLifecycleConfigServiceRole = value ?? null; }

        /// <summary>Creates an new <see cref="ElasticBeanstalkApplicationProperties" /> instance.</summary>
        public ElasticBeanstalkApplicationProperties()
        {

        }
    }
    /// Definition of ElasticBeanstalkApplication
    public partial interface IElasticBeanstalkApplicationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical
        /// ID and uses that ID for the application name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the application name.",
        SerializedName = @"applicationName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyApplicationName { get; set; }
        /// <summary>Your description of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Your description of the application.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyDescription { get; set; }
        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AwsAccountId { get; set; }
        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesAwsTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesAwsTags AwsTag { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.",
        SerializedName = @"deleteSourceFromS3",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxAgeRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify true to apply the rule, or false to disable it.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxAgeRuleEnabled { get; set; }
        /// <summary>Specify the number of days to retain an application versions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the number of days to retain an application versions.",
        SerializedName = @"maxAgeInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxAgeRuleMaxAgeInDay { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.",
        SerializedName = @"deleteSourceFromS3",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxCountRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify true to apply the rule, or false to disable it.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxCountRuleEnabled { get; set; }
        /// <summary>Specify the maximum number of application versions to retain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the maximum number of application versions to retain.",
        SerializedName = @"maxCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCountRuleMaxCount { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudResourceName { get; set; }
        /// <summary>
        /// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the
        /// first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk
        /// persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in
        /// subsequent updates to change the Service Role to another value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in subsequent updates to change the Service Role to another value.",
        SerializedName = @"serviceRole",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceLifecycleConfigServiceRole { get; set; }

    }
    /// Definition of ElasticBeanstalkApplication
    internal partial interface IElasticBeanstalkApplicationPropertiesInternal

    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        string Arn { get; set; }
        /// <summary>
        /// A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical
        /// ID and uses that ID for the application name.
        /// </summary>
        string AwPropertyApplicationName { get; set; }
        /// <summary>Your description of the application.</summary>
        string AwPropertyDescription { get; set; }
        /// <summary>
        /// Specifies an application resource lifecycle configuration to prevent your application from accumulating too many versions.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfig AwPropertyResourceLifecycleConfig { get; set; }
        /// <summary>AWS Account ID</summary>
        string AwsAccountId { get; set; }
        /// <summary>AWS Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationProperties AwsProperty { get; set; }
        /// <summary>AWS Region</summary>
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkApplicationPropertiesAwsTags AwsTag { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        bool? MaxAgeRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        bool? MaxAgeRuleEnabled { get; set; }
        /// <summary>Specify the number of days to retain an application versions.</summary>
        int? MaxAgeRuleMaxAgeInDay { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        bool? MaxCountRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        bool? MaxCountRuleEnabled { get; set; }
        /// <summary>Specify the maximum number of application versions to retain.</summary>
        int? MaxCountRuleMaxCount { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        string PublicCloudResourceName { get; set; }
        /// <summary>
        /// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the
        /// first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk
        /// persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in
        /// subsequent updates to change the Service Role to another value.
        /// </summary>
        string ResourceLifecycleConfigServiceRole { get; set; }
        /// <summary>Defines lifecycle settings for application versions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfig ResourceLifecycleConfigVersionLifecycleConfig { get; set; }
        /// <summary>
        /// Specify a max age rule to restrict the length of time that application versions are retained for an application.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRule VersionLifecycleConfigMaxAgeRule { get; set; }
        /// <summary>
        /// Specify a max count rule to restrict the number of application versions that are retained for an application.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRule VersionLifecycleConfigMaxCountRule { get; set; }

    }
}