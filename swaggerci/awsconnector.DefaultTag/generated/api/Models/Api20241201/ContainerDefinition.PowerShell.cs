// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of ContainerDefinition</summary>
    [System.ComponentModel.TypeConverter(typeof(ContainerDefinitionTypeConverter))]
    public partial class ContainerDefinition
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ContainerDefinition"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ContainerDefinition(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("FirelensConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelensConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFirelensConfiguration) content.GetValueForProperty("FirelensConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelensConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.FirelensConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("HealthCheck"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheck = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheck) content.GetValueForProperty("HealthCheck",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheck, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HealthCheckTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameter = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParameters) content.GetValueForProperty("LinuxParameter",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameter, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LinuxParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("LogConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration) content.GetValueForProperty("LogConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("RepositoryCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).RepositoryCredentials = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepositoryCredentials) content.GetValueForProperty("RepositoryCredentials",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).RepositoryCredentials, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RepositoryCredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Command"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Command = (string[]) content.GetValueForProperty("Command",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Command, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Cpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Cpu = (int?) content.GetValueForProperty("Cpu",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Cpu, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CredentialSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CredentialSpec = (string[]) content.GetValueForProperty("CredentialSpec",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CredentialSpec, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DependsOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DependsOn = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDependency[]) content.GetValueForProperty("DependsOn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DependsOn, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDependency>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ContainerDependencyTypeConverter.ConvertFrom));
            }
            if (content.Contains("DisableNetworking"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DisableNetworking = (bool?) content.GetValueForProperty("DisableNetworking",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DisableNetworking, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DnsSearchDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DnsSearchDomain = (string[]) content.GetValueForProperty("DnsSearchDomain",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DnsSearchDomain, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DnsServer = (string[]) content.GetValueForProperty("DnsServer",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DockerLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DockerLabel = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) content.GetValueForProperty("DockerLabel",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DockerLabel, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("DockerSecurityOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DockerSecurityOption = (string[]) content.GetValueForProperty("DockerSecurityOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DockerSecurityOption, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EntryPoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).EntryPoint = (string[]) content.GetValueForProperty("EntryPoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).EntryPoint, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Environment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Environment = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair[]) content.GetValueForProperty("Environment",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Environment, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KeyValuePairTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnvironmentFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).EnvironmentFile = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentFile[]) content.GetValueForProperty("EnvironmentFile",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).EnvironmentFile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentFile>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentFileTypeConverter.ConvertFrom));
            }
            if (content.Contains("Essential"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Essential = (bool?) content.GetValueForProperty("Essential",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Essential, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ExtraHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ExtraHost = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostEntry[]) content.GetValueForProperty("ExtraHost",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ExtraHost, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostEntry>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HostEntryTypeConverter.ConvertFrom));
            }
            if (content.Contains("Hostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Hostname = (string) content.GetValueForProperty("Hostname",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Hostname, global::System.Convert.ToString);
            }
            if (content.Contains("Image"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Image = (string) content.GetValueForProperty("Image",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Image, global::System.Convert.ToString);
            }
            if (content.Contains("Interactive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Interactive = (bool?) content.GetValueForProperty("Interactive",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Interactive, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Link"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Link = (string[]) content.GetValueForProperty("Link",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Link, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Memory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Memory = (int?) content.GetValueForProperty("Memory",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Memory, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MemoryReservation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).MemoryReservation = (int?) content.GetValueForProperty("MemoryReservation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).MemoryReservation, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MountPoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).MountPoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint[]) content.GetValueForProperty("MountPoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).MountPoint, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MountPointTypeConverter.ConvertFrom));
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("PortMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).PortMapping = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPortMapping[]) content.GetValueForProperty("PortMapping",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).PortMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPortMapping>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PortMappingTypeConverter.ConvertFrom));
            }
            if (content.Contains("Privileged"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Privileged = (bool?) content.GetValueForProperty("Privileged",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Privileged, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PseudoTerminal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).PseudoTerminal = (bool?) content.GetValueForProperty("PseudoTerminal",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).PseudoTerminal, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ReadonlyRootFilesystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ReadonlyRootFilesystem = (bool?) content.GetValueForProperty("ReadonlyRootFilesystem",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ReadonlyRootFilesystem, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceRequirement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ResourceRequirement = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceRequirement[]) content.GetValueForProperty("ResourceRequirement",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ResourceRequirement, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ResourceRequirementTypeConverter.ConvertFrom));
            }
            if (content.Contains("Secret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Secret = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[]) content.GetValueForProperty("Secret",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Secret, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SecretTypeConverter.ConvertFrom));
            }
            if (content.Contains("StartTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).StartTimeout = (int?) content.GetValueForProperty("StartTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).StartTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StopTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).StopTimeout = (int?) content.GetValueForProperty("StopTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).StopTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SystemControl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).SystemControl = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISystemControl[]) content.GetValueForProperty("SystemControl",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).SystemControl, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISystemControl>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SystemControlTypeConverter.ConvertFrom));
            }
            if (content.Contains("Ulimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Ulimit = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUlimit[]) content.GetValueForProperty("Ulimit",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Ulimit, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUlimit>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.UlimitTypeConverter.ConvertFrom));
            }
            if (content.Contains("User"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).User = (string) content.GetValueForProperty("User",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).User, global::System.Convert.ToString);
            }
            if (content.Contains("VolumesFrom"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).VolumesFrom = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeFrom[]) content.GetValueForProperty("VolumesFrom",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).VolumesFrom, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeFrom>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VolumeFromTypeConverter.ConvertFrom));
            }
            if (content.Contains("WorkingDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).WorkingDirectory = (string) content.GetValueForProperty("WorkingDirectory",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).WorkingDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("FirelenConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelenConfigurationType = (string) content.GetValueForProperty("FirelenConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelenConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("HealthCheckCommand"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckCommand = (string[]) content.GetValueForProperty("HealthCheckCommand",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckCommand, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("HealthCheckInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckInterval = (int?) content.GetValueForProperty("HealthCheckInterval",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HealthCheckRetry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckRetry = (int?) content.GetValueForProperty("HealthCheckRetry",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckRetry, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HealthCheckStartPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckStartPeriod = (int?) content.GetValueForProperty("HealthCheckStartPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckStartPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HealthCheckTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckTimeout = (int?) content.GetValueForProperty("HealthCheckTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinuxParameterDevice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterDevice = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDevice[]) content.GetValueForProperty("LinuxParameterDevice",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterDevice, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDevice>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeConverter.ConvertFrom));
            }
            if (content.Contains("LinuxParameterMaxSwap"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterMaxSwap = (int?) content.GetValueForProperty("LinuxParameterMaxSwap",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterMaxSwap, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinuxParameterSwappiness"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterSwappiness = (int?) content.GetValueForProperty("LinuxParameterSwappiness",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterSwappiness, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinuxParameterTmpf"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterTmpf = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITmpfs[]) content.GetValueForProperty("LinuxParameterTmpf",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterTmpf, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITmpfs>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TmpfsTypeConverter.ConvertFrom));
            }
            if (content.Contains("LogConfigurationLogDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationLogDriver = (string) content.GetValueForProperty("LogConfigurationLogDriver",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationLogDriver, global::System.Convert.ToString);
            }
            if (content.Contains("LogConfigurationSecretOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationSecretOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[]) content.GetValueForProperty("LogConfigurationSecretOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationSecretOption, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SecretTypeConverter.ConvertFrom));
            }
            if (content.Contains("FirelenConfigurationOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelenConfigurationOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) content.GetValueForProperty("FirelenConfigurationOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelenConfigurationOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxParameterCapability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterCapability = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKernelCapabilities) content.GetValueForProperty("LinuxParameterCapability",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterCapability, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KernelCapabilitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxParameterInitProcessEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterInitProcessEnabled = (bool?) content.GetValueForProperty("LinuxParameterInitProcessEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterInitProcessEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxParameterSharedMemorySize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterSharedMemorySize = (int?) content.GetValueForProperty("LinuxParameterSharedMemorySize",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterSharedMemorySize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LogConfigurationOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) content.GetValueForProperty("LogConfigurationOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("RepositoryCredentialsParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).RepositoryCredentialsParameter = (string) content.GetValueForProperty("RepositoryCredentialsParameter",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).RepositoryCredentialsParameter, global::System.Convert.ToString);
            }
            if (content.Contains("CapabilityAdd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CapabilityAdd = (string[]) content.GetValueForProperty("CapabilityAdd",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CapabilityAdd, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CapabilityDrop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CapabilityDrop = (string[]) content.GetValueForProperty("CapabilityDrop",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CapabilityDrop, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ContainerDefinition"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ContainerDefinition(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("FirelensConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelensConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFirelensConfiguration) content.GetValueForProperty("FirelensConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelensConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.FirelensConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("HealthCheck"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheck = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheck) content.GetValueForProperty("HealthCheck",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheck, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HealthCheckTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameter = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParameters) content.GetValueForProperty("LinuxParameter",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameter, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LinuxParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("LogConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration) content.GetValueForProperty("LogConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("RepositoryCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).RepositoryCredentials = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepositoryCredentials) content.GetValueForProperty("RepositoryCredentials",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).RepositoryCredentials, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RepositoryCredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Command"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Command = (string[]) content.GetValueForProperty("Command",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Command, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Cpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Cpu = (int?) content.GetValueForProperty("Cpu",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Cpu, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CredentialSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CredentialSpec = (string[]) content.GetValueForProperty("CredentialSpec",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CredentialSpec, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DependsOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DependsOn = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDependency[]) content.GetValueForProperty("DependsOn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DependsOn, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDependency>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ContainerDependencyTypeConverter.ConvertFrom));
            }
            if (content.Contains("DisableNetworking"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DisableNetworking = (bool?) content.GetValueForProperty("DisableNetworking",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DisableNetworking, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DnsSearchDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DnsSearchDomain = (string[]) content.GetValueForProperty("DnsSearchDomain",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DnsSearchDomain, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DnsServer = (string[]) content.GetValueForProperty("DnsServer",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DockerLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DockerLabel = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) content.GetValueForProperty("DockerLabel",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DockerLabel, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("DockerSecurityOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DockerSecurityOption = (string[]) content.GetValueForProperty("DockerSecurityOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).DockerSecurityOption, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EntryPoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).EntryPoint = (string[]) content.GetValueForProperty("EntryPoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).EntryPoint, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Environment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Environment = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair[]) content.GetValueForProperty("Environment",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Environment, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KeyValuePairTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnvironmentFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).EnvironmentFile = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentFile[]) content.GetValueForProperty("EnvironmentFile",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).EnvironmentFile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentFile>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentFileTypeConverter.ConvertFrom));
            }
            if (content.Contains("Essential"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Essential = (bool?) content.GetValueForProperty("Essential",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Essential, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ExtraHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ExtraHost = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostEntry[]) content.GetValueForProperty("ExtraHost",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ExtraHost, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostEntry>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HostEntryTypeConverter.ConvertFrom));
            }
            if (content.Contains("Hostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Hostname = (string) content.GetValueForProperty("Hostname",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Hostname, global::System.Convert.ToString);
            }
            if (content.Contains("Image"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Image = (string) content.GetValueForProperty("Image",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Image, global::System.Convert.ToString);
            }
            if (content.Contains("Interactive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Interactive = (bool?) content.GetValueForProperty("Interactive",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Interactive, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Link"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Link = (string[]) content.GetValueForProperty("Link",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Link, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Memory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Memory = (int?) content.GetValueForProperty("Memory",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Memory, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MemoryReservation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).MemoryReservation = (int?) content.GetValueForProperty("MemoryReservation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).MemoryReservation, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MountPoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).MountPoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint[]) content.GetValueForProperty("MountPoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).MountPoint, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MountPointTypeConverter.ConvertFrom));
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("PortMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).PortMapping = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPortMapping[]) content.GetValueForProperty("PortMapping",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).PortMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPortMapping>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PortMappingTypeConverter.ConvertFrom));
            }
            if (content.Contains("Privileged"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Privileged = (bool?) content.GetValueForProperty("Privileged",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Privileged, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PseudoTerminal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).PseudoTerminal = (bool?) content.GetValueForProperty("PseudoTerminal",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).PseudoTerminal, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ReadonlyRootFilesystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ReadonlyRootFilesystem = (bool?) content.GetValueForProperty("ReadonlyRootFilesystem",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ReadonlyRootFilesystem, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceRequirement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ResourceRequirement = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceRequirement[]) content.GetValueForProperty("ResourceRequirement",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).ResourceRequirement, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ResourceRequirementTypeConverter.ConvertFrom));
            }
            if (content.Contains("Secret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Secret = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[]) content.GetValueForProperty("Secret",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Secret, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SecretTypeConverter.ConvertFrom));
            }
            if (content.Contains("StartTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).StartTimeout = (int?) content.GetValueForProperty("StartTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).StartTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StopTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).StopTimeout = (int?) content.GetValueForProperty("StopTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).StopTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SystemControl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).SystemControl = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISystemControl[]) content.GetValueForProperty("SystemControl",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).SystemControl, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISystemControl>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SystemControlTypeConverter.ConvertFrom));
            }
            if (content.Contains("Ulimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Ulimit = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUlimit[]) content.GetValueForProperty("Ulimit",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).Ulimit, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUlimit>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.UlimitTypeConverter.ConvertFrom));
            }
            if (content.Contains("User"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).User = (string) content.GetValueForProperty("User",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).User, global::System.Convert.ToString);
            }
            if (content.Contains("VolumesFrom"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).VolumesFrom = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeFrom[]) content.GetValueForProperty("VolumesFrom",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).VolumesFrom, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeFrom>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VolumeFromTypeConverter.ConvertFrom));
            }
            if (content.Contains("WorkingDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).WorkingDirectory = (string) content.GetValueForProperty("WorkingDirectory",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).WorkingDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("FirelenConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelenConfigurationType = (string) content.GetValueForProperty("FirelenConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelenConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("HealthCheckCommand"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckCommand = (string[]) content.GetValueForProperty("HealthCheckCommand",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckCommand, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("HealthCheckInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckInterval = (int?) content.GetValueForProperty("HealthCheckInterval",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HealthCheckRetry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckRetry = (int?) content.GetValueForProperty("HealthCheckRetry",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckRetry, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HealthCheckStartPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckStartPeriod = (int?) content.GetValueForProperty("HealthCheckStartPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckStartPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HealthCheckTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckTimeout = (int?) content.GetValueForProperty("HealthCheckTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).HealthCheckTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinuxParameterDevice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterDevice = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDevice[]) content.GetValueForProperty("LinuxParameterDevice",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterDevice, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDevice>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeConverter.ConvertFrom));
            }
            if (content.Contains("LinuxParameterMaxSwap"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterMaxSwap = (int?) content.GetValueForProperty("LinuxParameterMaxSwap",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterMaxSwap, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinuxParameterSwappiness"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterSwappiness = (int?) content.GetValueForProperty("LinuxParameterSwappiness",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterSwappiness, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinuxParameterTmpf"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterTmpf = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITmpfs[]) content.GetValueForProperty("LinuxParameterTmpf",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterTmpf, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITmpfs>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TmpfsTypeConverter.ConvertFrom));
            }
            if (content.Contains("LogConfigurationLogDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationLogDriver = (string) content.GetValueForProperty("LogConfigurationLogDriver",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationLogDriver, global::System.Convert.ToString);
            }
            if (content.Contains("LogConfigurationSecretOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationSecretOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[]) content.GetValueForProperty("LogConfigurationSecretOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationSecretOption, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SecretTypeConverter.ConvertFrom));
            }
            if (content.Contains("FirelenConfigurationOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelenConfigurationOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) content.GetValueForProperty("FirelenConfigurationOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).FirelenConfigurationOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxParameterCapability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterCapability = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKernelCapabilities) content.GetValueForProperty("LinuxParameterCapability",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterCapability, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KernelCapabilitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxParameterInitProcessEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterInitProcessEnabled = (bool?) content.GetValueForProperty("LinuxParameterInitProcessEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterInitProcessEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxParameterSharedMemorySize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterSharedMemorySize = (int?) content.GetValueForProperty("LinuxParameterSharedMemorySize",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LinuxParameterSharedMemorySize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LogConfigurationOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) content.GetValueForProperty("LogConfigurationOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).LogConfigurationOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("RepositoryCredentialsParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).RepositoryCredentialsParameter = (string) content.GetValueForProperty("RepositoryCredentialsParameter",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).RepositoryCredentialsParameter, global::System.Convert.ToString);
            }
            if (content.Contains("CapabilityAdd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CapabilityAdd = (string[]) content.GetValueForProperty("CapabilityAdd",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CapabilityAdd, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CapabilityDrop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CapabilityDrop = (string[]) content.GetValueForProperty("CapabilityDrop",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal)this).CapabilityDrop, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ContainerDefinition"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ContainerDefinition(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ContainerDefinition"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ContainerDefinition(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ContainerDefinition" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ContainerDefinition" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of ContainerDefinition
    [System.ComponentModel.TypeConverter(typeof(ContainerDefinitionTypeConverter))]
    public partial interface IContainerDefinition

    {

    }
}