// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of EnvironmentVariable</summary>
    public partial class EnvironmentVariable :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariable,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariableInternal
    {

        /// <summary>Internal Acessors for Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariableTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariableInternal.Type { get => (this._type = this._type ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentVariableTypeEnumValue()); set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary><p>The name or key of the environment variable.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariableTypeEnumValue _type;

        /// <summary>
        /// <p>The type of environment variable. Valid values include:</p> <ul> <li> <p> <code>PARAMETER_STORE</code>: An environment
        /// variable stored in Systems Manager Parameter Store. For environment variables of this type, specify the name of the parameter
        /// as the <code>value</code> of the EnvironmentVariable. The parameter value will be substituted for the name at runtime.
        /// You can also define Parameter Store environment variables in the buildspec. To learn how to do so, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec.env.parameter-store'>env/parameter-store</a>
        /// in the <i>CodeBuild User Guide</i>.</p> </li> <li> <p> <code>PLAINTEXT</code>: An environment variable in plain text format.
        /// This is the default value.</p> </li> <li> <p> <code>SECRETS_MANAGER</code>: An environment variable stored in Secrets
        /// Manager. For environment variables of this type, specify the name of the secret as the <code>value</code> of the EnvironmentVariable.
        /// The secret value will be substituted for the name at runtime. You can also define Secrets Manager environment variables
        /// in the buildspec. To learn how to do so, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec.env.secrets-manager'>env/secrets-manager</a>
        /// in the <i>CodeBuild User Guide</i>.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariableTypeEnumValue Type { get => (this._type = this._type ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentVariableTypeEnumValue()); set => this._type = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentVariableType? TypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariableTypeEnumValueInternal)Type).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariableTypeEnumValueInternal)Type).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentVariableType)""); }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private string _value;

        /// <summary>
        /// <p>The value of the environment variable.</p> <important> <p>We strongly discourage the use of <code>PLAINTEXT</code>
        /// environment variables to store sensitive values, especially Amazon Web Services secret key IDs. <code>PLAINTEXT</code>
        /// environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we
        /// recommend you use an environment variable of type <code>PARAMETER_STORE</code> or <code>SECRETS_MANAGER</code>. </p> </important>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Value { get => this._value; set => this._value = value; }

        /// <summary>Creates an new <see cref="EnvironmentVariable" /> instance.</summary>
        public EnvironmentVariable()
        {

        }
    }
    /// Definition of EnvironmentVariable
    public partial interface IEnvironmentVariable :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>The name or key of the environment variable.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name or key of the environment variable.</p>",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentVariableType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentVariableType? TypeValue { get; set; }
        /// <summary>
        /// <p>The value of the environment variable.</p> <important> <p>We strongly discourage the use of <code>PLAINTEXT</code>
        /// environment variables to store sensitive values, especially Amazon Web Services secret key IDs. <code>PLAINTEXT</code>
        /// environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we
        /// recommend you use an environment variable of type <code>PARAMETER_STORE</code> or <code>SECRETS_MANAGER</code>. </p> </important>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The value of the environment variable.</p> <important> <p>We strongly discourage the use of <code>PLAINTEXT</code> environment variables to store sensitive values, especially Amazon Web Services secret key IDs. <code>PLAINTEXT</code> environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we recommend you use an environment variable of type <code>PARAMETER_STORE</code> or <code>SECRETS_MANAGER</code>. </p> </important>",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string Value { get; set; }

    }
    /// Definition of EnvironmentVariable
    internal partial interface IEnvironmentVariableInternal

    {
        /// <summary><p>The name or key of the environment variable.</p></summary>
        string Name { get; set; }
        /// <summary>
        /// <p>The type of environment variable. Valid values include:</p> <ul> <li> <p> <code>PARAMETER_STORE</code>: An environment
        /// variable stored in Systems Manager Parameter Store. For environment variables of this type, specify the name of the parameter
        /// as the <code>value</code> of the EnvironmentVariable. The parameter value will be substituted for the name at runtime.
        /// You can also define Parameter Store environment variables in the buildspec. To learn how to do so, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec.env.parameter-store'>env/parameter-store</a>
        /// in the <i>CodeBuild User Guide</i>.</p> </li> <li> <p> <code>PLAINTEXT</code>: An environment variable in plain text format.
        /// This is the default value.</p> </li> <li> <p> <code>SECRETS_MANAGER</code>: An environment variable stored in Secrets
        /// Manager. For environment variables of this type, specify the name of the secret as the <code>value</code> of the EnvironmentVariable.
        /// The secret value will be substituted for the name at runtime. You can also define Secrets Manager environment variables
        /// in the buildspec. To learn how to do so, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec.env.secrets-manager'>env/secrets-manager</a>
        /// in the <i>CodeBuild User Guide</i>.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariableTypeEnumValue Type { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentVariableType? TypeValue { get; set; }
        /// <summary>
        /// <p>The value of the environment variable.</p> <important> <p>We strongly discourage the use of <code>PLAINTEXT</code>
        /// environment variables to store sensitive values, especially Amazon Web Services secret key IDs. <code>PLAINTEXT</code>
        /// environment variables can be displayed in plain text using the CodeBuild console and the CLI. For sensitive values, we
        /// recommend you use an environment variable of type <code>PARAMETER_STORE</code> or <code>SECRETS_MANAGER</code>. </p> </important>
        /// </summary>
        string Value { get; set; }

    }
}