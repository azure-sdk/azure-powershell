// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of RdsExportTask</summary>
    public partial class RdsExportTaskProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRdsExportTaskProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRdsExportTaskPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>
        /// <p>The data exported from the snapshot or cluster.</p> <p>Valid Values:</p> <ul> <li> <p> <code>database</code> - Export
        /// all the data from a specified database.</p> </li> <li> <p> <code>database.table</code> <i>table-name</i> - Export a table
        /// of the snapshot or cluster. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.</p> </li>
        /// <li> <p> <code>database.schema</code> <i>schema-name</i> - Export a database schema of the snapshot or cluster. This format
        /// is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> <li> <p> <code>database.schema.table</code> <i>table-name</i>
        /// - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li>
        /// </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] AwPropertyExportOnly { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).ExportOnly; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).ExportOnly = value ?? null /* arrayOf */; }

        /// <summary>
        /// <p>A unique identifier for the snapshot or cluster export task. This ID isn't an identifier for the Amazon S3 bucket where
        /// the data is exported.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyExportTaskIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).ExportTaskIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).ExportTaskIdentifier = value ?? null; }

        /// <summary><p>The reason the export failed, if it failed.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyFailureCause { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).FailureCause; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).FailureCause = value ?? null; }

        /// <summary>
        /// <p>The name of the IAM role that is used to write to Amazon S3 when exporting a snapshot or cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyIamRoleArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).IamRoleArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).IamRoleArn = value ?? null; }

        /// <summary>
        /// <p>The key identifier of the Amazon Web Services KMS key that is used to encrypt the data when it's exported to Amazon
        /// S3. The KMS key identifier is its key ARN, key ID, alias ARN, or alias name. The IAM role used for the export must have
        /// encryption and decryption permissions to use this KMS key.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyKmsKeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).KmsKeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).KmsKeyId = value ?? null; }

        /// <summary><p>The progress of the snapshot or cluster export task as a percentage.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AwPropertyPercentProgress { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).PercentProgress; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).PercentProgress = value ?? default(int); }

        /// <summary><p>The Amazon S3 bucket where the snapshot or cluster is exported to.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyS3Bucket { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).S3Bucket; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).S3Bucket = value ?? null; }

        /// <summary>
        /// <p>The Amazon S3 bucket prefix that is the file name and path of the exported data.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyS3Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).S3Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).S3Prefix = value ?? null; }

        /// <summary><p>The time when the snapshot was created.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? AwPropertySnapshotTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).SnapshotTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).SnapshotTime = value ?? default(global::System.DateTime); }

        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the snapshot or cluster exported to Amazon S3.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertySourceArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).SourceArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).SourceArn = value ?? null; }

        /// <summary>
        /// <p>The progress status of the export task. The status can be one of the following:</p> <ul> <li> <p> <code>CANCELED</code>
        /// </p> </li> <li> <p> <code>CANCELING</code> </p> </li> <li> <p> <code>COMPLETE</code> </p> </li> <li> <p> <code>FAILED</code>
        /// </p> </li> <li> <p> <code>IN_PROGRESS</code> </p> </li> <li> <p> <code>STARTING</code> </p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).Status = value ?? null; }

        /// <summary><p>The time when the snapshot or cluster export task ended.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? AwPropertyTaskEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).TaskEndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).TaskEndTime = value ?? default(global::System.DateTime); }

        /// <summary><p>The time when the snapshot or cluster export task started.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? AwPropertyTaskStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).TaskStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).TaskStartTime = value ?? default(global::System.DateTime); }

        /// <summary><p>The total amount of data exported, in gigabytes.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AwPropertyTotalExtractedDataInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).TotalExtractedDataInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).TotalExtractedDataInGb = value ?? default(int); }

        /// <summary><p>A warning about the snapshot or cluster export task.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyWarningMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).WarningMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).WarningMessage = value ?? null; }

        /// <summary>Backing field for <see cref="AwsAccountId" /> property.</summary>
        private string _awsAccountId;

        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsAccountId { get => this._awsAccountId; set => this._awsAccountId = value; }

        /// <summary>Backing field for <see cref="AwsProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskProperties _awsProperty;

        /// <summary>AWS Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskProperties AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRdsExportTaskProperties()); set => this._awsProperty = value; }

        /// <summary>Backing field for <see cref="AwsRegion" /> property.</summary>
        private string _awsRegion;

        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsRegion { get => this._awsRegion; set => this._awsRegion = value; }

        /// <summary>Backing field for <see cref="AwsSourceSchema" /> property.</summary>
        private string _awsSourceSchema;

        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsSourceSchema { get => this._awsSourceSchema; set => this._awsSourceSchema = value; }

        /// <summary>Backing field for <see cref="AwsTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRdsExportTaskPropertiesAwsTags _awsTag;

        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRdsExportTaskPropertiesAwsTags AwsTag { get => (this._awsTag = this._awsTag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RdsExportTaskPropertiesAwsTags()); set => this._awsTag = value; }

        /// <summary>Internal Acessors for AwPropertySourceType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IExportSourceTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRdsExportTaskPropertiesInternal.AwPropertySourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).SourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).SourceType = value; }

        /// <summary>Internal Acessors for AwsProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRdsExportTaskPropertiesInternal.AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRdsExportTaskProperties()); set { {_awsProperty = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRdsExportTaskPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicCloudConnectorsResourceId" /> property.</summary>
        private string _publicCloudConnectorsResourceId;

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudConnectorsResourceId { get => this._publicCloudConnectorsResourceId; set => this._publicCloudConnectorsResourceId = value; }

        /// <summary>Backing field for <see cref="PublicCloudResourceName" /> property.</summary>
        private string _publicCloudResourceName;

        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudResourceName { get => this._publicCloudResourceName; set => this._publicCloudResourceName = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExportSourceType? SourceTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).SourceTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskPropertiesInternal)AwsProperty).SourceTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExportSourceType)""); }

        /// <summary>Creates an new <see cref="RdsExportTaskProperties" /> instance.</summary>
        public RdsExportTaskProperties()
        {

        }
    }
    /// Definition of RdsExportTask
    public partial interface IRdsExportTaskProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// <p>The data exported from the snapshot or cluster.</p> <p>Valid Values:</p> <ul> <li> <p> <code>database</code> - Export
        /// all the data from a specified database.</p> </li> <li> <p> <code>database.table</code> <i>table-name</i> - Export a table
        /// of the snapshot or cluster. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.</p> </li>
        /// <li> <p> <code>database.schema</code> <i>schema-name</i> - Export a database schema of the snapshot or cluster. This format
        /// is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> <li> <p> <code>database.schema.table</code> <i>table-name</i>
        /// - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li>
        /// </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The data exported from the snapshot or cluster.</p> <p>Valid Values:</p> <ul> <li> <p> <code>database</code> - Export all the data from a specified database.</p> </li> <li> <p> <code>database.table</code> <i>table-name</i> - Export a table of the snapshot or cluster. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.</p> </li> <li> <p> <code>database.schema</code> <i>schema-name</i> - Export a database schema of the snapshot or cluster. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> <li> <p> <code>database.schema.table</code> <i>table-name</i> - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> </ul>",
        SerializedName = @"exportOnly",
        PossibleTypes = new [] { typeof(string) })]
        string[] AwPropertyExportOnly { get; set; }
        /// <summary>
        /// <p>A unique identifier for the snapshot or cluster export task. This ID isn't an identifier for the Amazon S3 bucket where
        /// the data is exported.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A unique identifier for the snapshot or cluster export task. This ID isn't an identifier for the Amazon S3 bucket where the data is exported.</p>",
        SerializedName = @"exportTaskIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyExportTaskIdentifier { get; set; }
        /// <summary><p>The reason the export failed, if it failed.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The reason the export failed, if it failed.</p>",
        SerializedName = @"failureCause",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyFailureCause { get; set; }
        /// <summary>
        /// <p>The name of the IAM role that is used to write to Amazon S3 when exporting a snapshot or cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the IAM role that is used to write to Amazon S3 when exporting a snapshot or cluster.</p>",
        SerializedName = @"iamRoleArn",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyIamRoleArn { get; set; }
        /// <summary>
        /// <p>The key identifier of the Amazon Web Services KMS key that is used to encrypt the data when it's exported to Amazon
        /// S3. The KMS key identifier is its key ARN, key ID, alias ARN, or alias name. The IAM role used for the export must have
        /// encryption and decryption permissions to use this KMS key.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The key identifier of the Amazon Web Services KMS key that is used to encrypt the data when it's exported to Amazon S3. The KMS key identifier is its key ARN, key ID, alias ARN, or alias name. The IAM role used for the export must have encryption and decryption permissions to use this KMS key.</p>",
        SerializedName = @"kmsKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyKmsKeyId { get; set; }
        /// <summary><p>The progress of the snapshot or cluster export task as a percentage.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The progress of the snapshot or cluster export task as a percentage.</p>",
        SerializedName = @"percentProgress",
        PossibleTypes = new [] { typeof(int) })]
        int? AwPropertyPercentProgress { get; set; }
        /// <summary><p>The Amazon S3 bucket where the snapshot or cluster is exported to.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon S3 bucket where the snapshot or cluster is exported to.</p>",
        SerializedName = @"s3Bucket",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyS3Bucket { get; set; }
        /// <summary>
        /// <p>The Amazon S3 bucket prefix that is the file name and path of the exported data.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon S3 bucket prefix that is the file name and path of the exported data.</p>",
        SerializedName = @"s3Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyS3Prefix { get; set; }
        /// <summary><p>The time when the snapshot was created.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time when the snapshot was created.</p>",
        SerializedName = @"snapshotTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AwPropertySnapshotTime { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the snapshot or cluster exported to Amazon S3.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the snapshot or cluster exported to Amazon S3.</p>",
        SerializedName = @"sourceArn",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertySourceArn { get; set; }
        /// <summary>
        /// <p>The progress status of the export task. The status can be one of the following:</p> <ul> <li> <p> <code>CANCELED</code>
        /// </p> </li> <li> <p> <code>CANCELING</code> </p> </li> <li> <p> <code>COMPLETE</code> </p> </li> <li> <p> <code>FAILED</code>
        /// </p> </li> <li> <p> <code>IN_PROGRESS</code> </p> </li> <li> <p> <code>STARTING</code> </p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The progress status of the export task. The status can be one of the following:</p> <ul> <li> <p> <code>CANCELED</code> </p> </li> <li> <p> <code>CANCELING</code> </p> </li> <li> <p> <code>COMPLETE</code> </p> </li> <li> <p> <code>FAILED</code> </p> </li> <li> <p> <code>IN_PROGRESS</code> </p> </li> <li> <p> <code>STARTING</code> </p> </li> </ul>",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyStatus { get; set; }
        /// <summary><p>The time when the snapshot or cluster export task ended.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time when the snapshot or cluster export task ended.</p>",
        SerializedName = @"taskEndTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AwPropertyTaskEndTime { get; set; }
        /// <summary><p>The time when the snapshot or cluster export task started.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time when the snapshot or cluster export task started.</p>",
        SerializedName = @"taskStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AwPropertyTaskStartTime { get; set; }
        /// <summary><p>The total amount of data exported, in gigabytes.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The total amount of data exported, in gigabytes.</p>",
        SerializedName = @"totalExtractedDataInGB",
        PossibleTypes = new [] { typeof(int) })]
        int? AwPropertyTotalExtractedDataInGb { get; set; }
        /// <summary><p>A warning about the snapshot or cluster export task.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A warning about the snapshot or cluster export task.</p>",
        SerializedName = @"warningMessage",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyWarningMessage { get; set; }
        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AwsAccountId { get; set; }
        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRdsExportTaskPropertiesAwsTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRdsExportTaskPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudResourceName { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExportSourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExportSourceType? SourceTypeValue { get; set; }

    }
    /// Definition of RdsExportTask
    internal partial interface IRdsExportTaskPropertiesInternal

    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        string Arn { get; set; }
        /// <summary>
        /// <p>The data exported from the snapshot or cluster.</p> <p>Valid Values:</p> <ul> <li> <p> <code>database</code> - Export
        /// all the data from a specified database.</p> </li> <li> <p> <code>database.table</code> <i>table-name</i> - Export a table
        /// of the snapshot or cluster. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.</p> </li>
        /// <li> <p> <code>database.schema</code> <i>schema-name</i> - Export a database schema of the snapshot or cluster. This format
        /// is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li> <li> <p> <code>database.schema.table</code> <i>table-name</i>
        /// - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li>
        /// </ul>
        /// </summary>
        string[] AwPropertyExportOnly { get; set; }
        /// <summary>
        /// <p>A unique identifier for the snapshot or cluster export task. This ID isn't an identifier for the Amazon S3 bucket where
        /// the data is exported.</p>
        /// </summary>
        string AwPropertyExportTaskIdentifier { get; set; }
        /// <summary><p>The reason the export failed, if it failed.</p></summary>
        string AwPropertyFailureCause { get; set; }
        /// <summary>
        /// <p>The name of the IAM role that is used to write to Amazon S3 when exporting a snapshot or cluster.</p>
        /// </summary>
        string AwPropertyIamRoleArn { get; set; }
        /// <summary>
        /// <p>The key identifier of the Amazon Web Services KMS key that is used to encrypt the data when it's exported to Amazon
        /// S3. The KMS key identifier is its key ARN, key ID, alias ARN, or alias name. The IAM role used for the export must have
        /// encryption and decryption permissions to use this KMS key.</p>
        /// </summary>
        string AwPropertyKmsKeyId { get; set; }
        /// <summary><p>The progress of the snapshot or cluster export task as a percentage.</p></summary>
        int? AwPropertyPercentProgress { get; set; }
        /// <summary><p>The Amazon S3 bucket where the snapshot or cluster is exported to.</p></summary>
        string AwPropertyS3Bucket { get; set; }
        /// <summary>
        /// <p>The Amazon S3 bucket prefix that is the file name and path of the exported data.</p>
        /// </summary>
        string AwPropertyS3Prefix { get; set; }
        /// <summary><p>The time when the snapshot was created.</p></summary>
        global::System.DateTime? AwPropertySnapshotTime { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the snapshot or cluster exported to Amazon S3.</p>
        /// </summary>
        string AwPropertySourceArn { get; set; }
        /// <summary><p>The type of source for the export.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IExportSourceTypeEnumValue AwPropertySourceType { get; set; }
        /// <summary>
        /// <p>The progress status of the export task. The status can be one of the following:</p> <ul> <li> <p> <code>CANCELED</code>
        /// </p> </li> <li> <p> <code>CANCELING</code> </p> </li> <li> <p> <code>COMPLETE</code> </p> </li> <li> <p> <code>FAILED</code>
        /// </p> </li> <li> <p> <code>IN_PROGRESS</code> </p> </li> <li> <p> <code>STARTING</code> </p> </li> </ul>
        /// </summary>
        string AwPropertyStatus { get; set; }
        /// <summary><p>The time when the snapshot or cluster export task ended.</p></summary>
        global::System.DateTime? AwPropertyTaskEndTime { get; set; }
        /// <summary><p>The time when the snapshot or cluster export task started.</p></summary>
        global::System.DateTime? AwPropertyTaskStartTime { get; set; }
        /// <summary><p>The total amount of data exported, in gigabytes.</p></summary>
        int? AwPropertyTotalExtractedDataInGb { get; set; }
        /// <summary><p>A warning about the snapshot or cluster export task.</p></summary>
        string AwPropertyWarningMessage { get; set; }
        /// <summary>AWS Account ID</summary>
        string AwsAccountId { get; set; }
        /// <summary>AWS Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsExportTaskProperties AwsProperty { get; set; }
        /// <summary>AWS Region</summary>
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRdsExportTaskPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        string PublicCloudResourceName { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExportSourceType? SourceTypeValue { get; set; }

    }
}