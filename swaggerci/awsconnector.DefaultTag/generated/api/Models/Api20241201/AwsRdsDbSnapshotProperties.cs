// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsRdsDBSnapshot</summary>
    public partial class AwsRdsDbSnapshotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllocatedStorage" /> property.</summary>
        private int? _allocatedStorage;

        /// <summary><p>Specifies the allocated storage size in gibibytes (GiB).</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? AllocatedStorage { get => this._allocatedStorage; set => this._allocatedStorage = value; }

        /// <summary>Backing field for <see cref="AvailabilityZone" /> property.</summary>
        private string _availabilityZone;

        /// <summary>
        /// <p>Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AvailabilityZone { get => this._availabilityZone; set => this._availabilityZone = value; }

        /// <summary>Backing field for <see cref="DbInstanceIdentifier" /> property.</summary>
        private string _dbInstanceIdentifier;

        /// <summary>
        /// <p>Specifies the DB instance identifier of the DB instance this DB snapshot was created from.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DbInstanceIdentifier { get => this._dbInstanceIdentifier; set => this._dbInstanceIdentifier = value; }

        /// <summary>Backing field for <see cref="DbSnapshotArn" /> property.</summary>
        private string _dbSnapshotArn;

        /// <summary><p>The Amazon Resource Name (ARN) for the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DbSnapshotArn { get => this._dbSnapshotArn; set => this._dbSnapshotArn = value; }

        /// <summary>Backing field for <see cref="DbSnapshotIdentifier" /> property.</summary>
        private string _dbSnapshotIdentifier;

        /// <summary><p>Specifies the identifier for the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DbSnapshotIdentifier { get => this._dbSnapshotIdentifier; set => this._dbSnapshotIdentifier = value; }

        /// <summary>Backing field for <see cref="DbSystemId" /> property.</summary>
        private string _dbSystemId;

        /// <summary>
        /// <p>The Oracle system identifier (SID), which is the name of the Oracle database instance that manages your database files.
        /// The Oracle SID is also the name of your CDB.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DbSystemId { get => this._dbSystemId; set => this._dbSystemId = value; }

        /// <summary>Backing field for <see cref="DbiResourceId" /> property.</summary>
        private string _dbiResourceId;

        /// <summary>
        /// <p>The identifier for the source DB instance, which can't be changed and which is unique to an Amazon Web Services Region.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DbiResourceId { get => this._dbiResourceId; set => this._dbiResourceId = value; }

        /// <summary>Backing field for <see cref="DedicatedLogVolume" /> property.</summary>
        private bool? _dedicatedLogVolume;

        /// <summary>
        /// <p>Indicates whether the DB instance has a dedicated log volume (DLV) enabled.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? DedicatedLogVolume { get => this._dedicatedLogVolume; set => this._dedicatedLogVolume = value; }

        /// <summary>Backing field for <see cref="Encrypted" /> property.</summary>
        private bool? _encrypted;

        /// <summary><p>Indicates whether the DB snapshot is encrypted.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Encrypted { get => this._encrypted; set => this._encrypted = value; }

        /// <summary>Backing field for <see cref="Engine" /> property.</summary>
        private string _engine;

        /// <summary><p>Specifies the name of the database engine.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Engine { get => this._engine; set => this._engine = value; }

        /// <summary>Backing field for <see cref="EngineVersion" /> property.</summary>
        private string _engineVersion;

        /// <summary><p>Specifies the version of the database engine.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string EngineVersion { get => this._engineVersion; set => this._engineVersion = value; }

        /// <summary>Backing field for <see cref="IamDatabaseAuthenticationEnabled" /> property.</summary>
        private bool? _iamDatabaseAuthenticationEnabled;

        /// <summary>
        /// <p>Indicates whether mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts
        /// is enabled.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? IamDatabaseAuthenticationEnabled { get => this._iamDatabaseAuthenticationEnabled; set => this._iamDatabaseAuthenticationEnabled = value; }

        /// <summary>Backing field for <see cref="InstanceCreateTime" /> property.</summary>
        private global::System.DateTime? _instanceCreateTime;

        /// <summary>
        /// <p>Specifies the time in Coordinated Universal Time (UTC) when the DB instance, from which the snapshot was taken, was
        /// created.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? InstanceCreateTime { get => this._instanceCreateTime; set => this._instanceCreateTime = value; }

        /// <summary>Backing field for <see cref="Iop" /> property.</summary>
        private int? _iop;

        /// <summary>
        /// <p>Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? Iop { get => this._iop; set => this._iop = value; }

        /// <summary>Backing field for <see cref="KmsKeyId" /> property.</summary>
        private string _kmsKeyId;

        /// <summary>
        /// <p>If <code>Encrypted</code> is true, the Amazon Web Services KMS key identifier for the encrypted DB snapshot.</p> <p>The
        /// Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string KmsKeyId { get => this._kmsKeyId; set => this._kmsKeyId = value; }

        /// <summary>Backing field for <see cref="LicenseModel" /> property.</summary>
        private string _licenseModel;

        /// <summary><p>License model information for the restored DB instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LicenseModel { get => this._licenseModel; set => this._licenseModel = value; }

        /// <summary>Backing field for <see cref="MasterUsername" /> property.</summary>
        private string _masterUsername;

        /// <summary><p>Provides the master username for the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string MasterUsername { get => this._masterUsername; set => this._masterUsername = value; }

        /// <summary>Backing field for <see cref="MultiTenant" /> property.</summary>
        private bool? _multiTenant;

        /// <summary>
        /// <p>Indicates whether the snapshot is of a DB instance using the multi-tenant configuration (TRUE) or the single-tenant
        /// configuration (FALSE).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? MultiTenant { get => this._multiTenant; set => this._multiTenant = value; }

        /// <summary>Backing field for <see cref="OptionGroupName" /> property.</summary>
        private string _optionGroupName;

        /// <summary><p>Provides the option group name for the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OptionGroupName { get => this._optionGroupName; set => this._optionGroupName = value; }

        /// <summary>Backing field for <see cref="OriginalSnapshotCreateTime" /> property.</summary>
        private global::System.DateTime? _originalSnapshotCreateTime;

        /// <summary>
        /// <p>Specifies the time of the CreateDBSnapshot operation in Coordinated Universal Time (UTC). Doesn't change when the snapshot
        /// is copied.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? OriginalSnapshotCreateTime { get => this._originalSnapshotCreateTime; set => this._originalSnapshotCreateTime = value; }

        /// <summary>Backing field for <see cref="PercentProgress" /> property.</summary>
        private int? _percentProgress;

        /// <summary><p>The percentage of the estimated data that has been transferred.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? PercentProgress { get => this._percentProgress; set => this._percentProgress = value; }

        /// <summary>Backing field for <see cref="Port" /> property.</summary>
        private int? _port;

        /// <summary>
        /// <p>Specifies the port that the database engine was listening on at the time of the snapshot.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? Port { get => this._port; set => this._port = value; }

        /// <summary>Backing field for <see cref="ProcessorFeature" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProcessorFeatureAutoGenerated[] _processorFeature;

        /// <summary>
        /// <p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance when the DB
        /// snapshot was created.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProcessorFeatureAutoGenerated[] ProcessorFeature { get => this._processorFeature; set => this._processorFeature = value; }

        /// <summary>Backing field for <see cref="SnapshotCreateTime" /> property.</summary>
        private global::System.DateTime? _snapshotCreateTime;

        /// <summary>
        /// <p>Specifies when the snapshot was taken in Coordinated Universal Time (UTC). Changes for the copy when the snapshot is
        /// copied.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? SnapshotCreateTime { get => this._snapshotCreateTime; set => this._snapshotCreateTime = value; }

        /// <summary>Backing field for <see cref="SnapshotDatabaseTime" /> property.</summary>
        private global::System.DateTime? _snapshotDatabaseTime;

        /// <summary>
        /// <p>The timestamp of the most recent transaction applied to the database that you're backing up. Thus, if you restore a
        /// snapshot, SnapshotDatabaseTime is the most recent transaction in the restored DB instance. In contrast, originalSnapshotCreateTime
        /// specifies the system time that the snapshot completed.</p> <p>If you back up a read replica, you can determine the replica
        /// lag by comparing SnapshotDatabaseTime with originalSnapshotCreateTime. For example, if originalSnapshotCreateTime is two
        /// hours later than SnapshotDatabaseTime, then the replica lag is two hours.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? SnapshotDatabaseTime { get => this._snapshotDatabaseTime; set => this._snapshotDatabaseTime = value; }

        /// <summary>Backing field for <see cref="SnapshotTarget" /> property.</summary>
        private string _snapshotTarget;

        /// <summary>
        /// <p>Specifies where manual snapshots are stored: Amazon Web Services Outposts or the Amazon Web Services Region.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SnapshotTarget { get => this._snapshotTarget; set => this._snapshotTarget = value; }

        /// <summary>Backing field for <see cref="SnapshotType" /> property.</summary>
        private string _snapshotType;

        /// <summary><p>Provides the type of the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SnapshotType { get => this._snapshotType; set => this._snapshotType = value; }

        /// <summary>Backing field for <see cref="SourceDbSnapshotIdentifier" /> property.</summary>
        private string _sourceDbSnapshotIdentifier;

        /// <summary>
        /// <p>The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has a value in the case of
        /// a cross-account or cross-Region copy.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SourceDbSnapshotIdentifier { get => this._sourceDbSnapshotIdentifier; set => this._sourceDbSnapshotIdentifier = value; }

        /// <summary>Backing field for <see cref="SourceRegion" /> property.</summary>
        private string _sourceRegion;

        /// <summary>
        /// <p>The Amazon Web Services Region that the DB snapshot was created in or copied from.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SourceRegion { get => this._sourceRegion; set => this._sourceRegion = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary><p>Specifies the status of this DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="StorageThroughput" /> property.</summary>
        private int? _storageThroughput;

        /// <summary><p>Specifies the storage throughput for the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? StorageThroughput { get => this._storageThroughput; set => this._storageThroughput = value; }

        /// <summary>Backing field for <see cref="StorageType" /> property.</summary>
        private string _storageType;

        /// <summary><p>Specifies the storage type associated with DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string StorageType { get => this._storageType; set => this._storageType = value; }

        /// <summary>Backing field for <see cref="TagList" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated48[] _tagList;

        /// <summary>Property tagList</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated48[] TagList { get => this._tagList; set => this._tagList = value; }

        /// <summary>Backing field for <see cref="TdeCredentialArn" /> property.</summary>
        private string _tdeCredentialArn;

        /// <summary>
        /// <p>The ARN from the key store with which to associate the instance for TDE encryption.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string TdeCredentialArn { get => this._tdeCredentialArn; set => this._tdeCredentialArn = value; }

        /// <summary>Backing field for <see cref="Timezone" /> property.</summary>
        private string _timezone;

        /// <summary>
        /// <p>The time zone of the DB snapshot. In most cases, the <code>Timezone</code> element is empty. <code>Timezone</code>
        /// content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Timezone { get => this._timezone; set => this._timezone = value; }

        /// <summary>Backing field for <see cref="VpcId" /> property.</summary>
        private string _vpcId;

        /// <summary><p>Provides the VPC ID associated with the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string VpcId { get => this._vpcId; set => this._vpcId = value; }

        /// <summary>Creates an new <see cref="AwsRdsDbSnapshotProperties" /> instance.</summary>
        public AwsRdsDbSnapshotProperties()
        {

        }
    }
    /// Definition of awsRdsDBSnapshot
    public partial interface IAwsRdsDbSnapshotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>Specifies the allocated storage size in gibibytes (GiB).</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the allocated storage size in gibibytes (GiB).</p>",
        SerializedName = @"allocatedStorage",
        PossibleTypes = new [] { typeof(int) })]
        int? AllocatedStorage { get; set; }
        /// <summary>
        /// <p>Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.</p>",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZone { get; set; }
        /// <summary>
        /// <p>Specifies the DB instance identifier of the DB instance this DB snapshot was created from.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the DB instance identifier of the DB instance this DB snapshot was created from.</p>",
        SerializedName = @"dbInstanceIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string DbInstanceIdentifier { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) for the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) for the DB snapshot.</p>",
        SerializedName = @"dbSnapshotArn",
        PossibleTypes = new [] { typeof(string) })]
        string DbSnapshotArn { get; set; }
        /// <summary><p>Specifies the identifier for the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the identifier for the DB snapshot.</p>",
        SerializedName = @"dbSnapshotIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string DbSnapshotIdentifier { get; set; }
        /// <summary>
        /// <p>The Oracle system identifier (SID), which is the name of the Oracle database instance that manages your database files.
        /// The Oracle SID is also the name of your CDB.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Oracle system identifier (SID), which is the name of the Oracle database instance that manages your database files. The Oracle SID is also the name of your CDB.</p>",
        SerializedName = @"dbSystemId",
        PossibleTypes = new [] { typeof(string) })]
        string DbSystemId { get; set; }
        /// <summary>
        /// <p>The identifier for the source DB instance, which can't be changed and which is unique to an Amazon Web Services Region.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The identifier for the source DB instance, which can't be changed and which is unique to an Amazon Web Services Region.</p>",
        SerializedName = @"dbiResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string DbiResourceId { get; set; }
        /// <summary>
        /// <p>Indicates whether the DB instance has a dedicated log volume (DLV) enabled.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the DB instance has a dedicated log volume (DLV) enabled.</p>",
        SerializedName = @"dedicatedLogVolume",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DedicatedLogVolume { get; set; }
        /// <summary><p>Indicates whether the DB snapshot is encrypted.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the DB snapshot is encrypted.</p>",
        SerializedName = @"encrypted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Encrypted { get; set; }
        /// <summary><p>Specifies the name of the database engine.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the name of the database engine.</p>",
        SerializedName = @"engine",
        PossibleTypes = new [] { typeof(string) })]
        string Engine { get; set; }
        /// <summary><p>Specifies the version of the database engine.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the version of the database engine.</p>",
        SerializedName = @"engineVersion",
        PossibleTypes = new [] { typeof(string) })]
        string EngineVersion { get; set; }
        /// <summary>
        /// <p>Indicates whether mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts
        /// is enabled.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts is enabled.</p>",
        SerializedName = @"iamDatabaseAuthenticationEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IamDatabaseAuthenticationEnabled { get; set; }
        /// <summary>
        /// <p>Specifies the time in Coordinated Universal Time (UTC) when the DB instance, from which the snapshot was taken, was
        /// created.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the time in Coordinated Universal Time (UTC) when the DB instance, from which the snapshot was taken, was created.</p>",
        SerializedName = @"instanceCreateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InstanceCreateTime { get; set; }
        /// <summary>
        /// <p>Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.</p>",
        SerializedName = @"iops",
        PossibleTypes = new [] { typeof(int) })]
        int? Iop { get; set; }
        /// <summary>
        /// <p>If <code>Encrypted</code> is true, the Amazon Web Services KMS key identifier for the encrypted DB snapshot.</p> <p>The
        /// Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>If <code>Encrypted</code> is true, the Amazon Web Services KMS key identifier for the encrypted DB snapshot.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p>",
        SerializedName = @"kmsKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string KmsKeyId { get; set; }
        /// <summary><p>License model information for the restored DB instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>License model information for the restored DB instance.</p>",
        SerializedName = @"licenseModel",
        PossibleTypes = new [] { typeof(string) })]
        string LicenseModel { get; set; }
        /// <summary><p>Provides the master username for the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Provides the master username for the DB snapshot.</p>",
        SerializedName = @"masterUsername",
        PossibleTypes = new [] { typeof(string) })]
        string MasterUsername { get; set; }
        /// <summary>
        /// <p>Indicates whether the snapshot is of a DB instance using the multi-tenant configuration (TRUE) or the single-tenant
        /// configuration (FALSE).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the snapshot is of a DB instance using the multi-tenant configuration (TRUE) or the single-tenant configuration (FALSE).</p>",
        SerializedName = @"multiTenant",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MultiTenant { get; set; }
        /// <summary><p>Provides the option group name for the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Provides the option group name for the DB snapshot.</p>",
        SerializedName = @"optionGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string OptionGroupName { get; set; }
        /// <summary>
        /// <p>Specifies the time of the CreateDBSnapshot operation in Coordinated Universal Time (UTC). Doesn't change when the snapshot
        /// is copied.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the time of the CreateDBSnapshot operation in Coordinated Universal Time (UTC). Doesn't change when the snapshot is copied.</p>",
        SerializedName = @"originalSnapshotCreateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? OriginalSnapshotCreateTime { get; set; }
        /// <summary><p>The percentage of the estimated data that has been transferred.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The percentage of the estimated data that has been transferred.</p>",
        SerializedName = @"percentProgress",
        PossibleTypes = new [] { typeof(int) })]
        int? PercentProgress { get; set; }
        /// <summary>
        /// <p>Specifies the port that the database engine was listening on at the time of the snapshot.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the port that the database engine was listening on at the time of the snapshot.</p>",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(int) })]
        int? Port { get; set; }
        /// <summary>
        /// <p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance when the DB
        /// snapshot was created.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance when the DB snapshot was created.</p>",
        SerializedName = @"processorFeatures",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProcessorFeatureAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProcessorFeatureAutoGenerated[] ProcessorFeature { get; set; }
        /// <summary>
        /// <p>Specifies when the snapshot was taken in Coordinated Universal Time (UTC). Changes for the copy when the snapshot is
        /// copied.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies when the snapshot was taken in Coordinated Universal Time (UTC). Changes for the copy when the snapshot is copied.</p>",
        SerializedName = @"snapshotCreateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SnapshotCreateTime { get; set; }
        /// <summary>
        /// <p>The timestamp of the most recent transaction applied to the database that you're backing up. Thus, if you restore a
        /// snapshot, SnapshotDatabaseTime is the most recent transaction in the restored DB instance. In contrast, originalSnapshotCreateTime
        /// specifies the system time that the snapshot completed.</p> <p>If you back up a read replica, you can determine the replica
        /// lag by comparing SnapshotDatabaseTime with originalSnapshotCreateTime. For example, if originalSnapshotCreateTime is two
        /// hours later than SnapshotDatabaseTime, then the replica lag is two hours.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The timestamp of the most recent transaction applied to the database that you're backing up. Thus, if you restore a snapshot, SnapshotDatabaseTime is the most recent transaction in the restored DB instance. In contrast, originalSnapshotCreateTime specifies the system time that the snapshot completed.</p> <p>If you back up a read replica, you can determine the replica lag by comparing SnapshotDatabaseTime with originalSnapshotCreateTime. For example, if originalSnapshotCreateTime is two hours later than SnapshotDatabaseTime, then the replica lag is two hours.</p>",
        SerializedName = @"snapshotDatabaseTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SnapshotDatabaseTime { get; set; }
        /// <summary>
        /// <p>Specifies where manual snapshots are stored: Amazon Web Services Outposts or the Amazon Web Services Region.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies where manual snapshots are stored: Amazon Web Services Outposts or the Amazon Web Services Region.</p>",
        SerializedName = @"snapshotTarget",
        PossibleTypes = new [] { typeof(string) })]
        string SnapshotTarget { get; set; }
        /// <summary><p>Provides the type of the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Provides the type of the DB snapshot.</p>",
        SerializedName = @"snapshotType",
        PossibleTypes = new [] { typeof(string) })]
        string SnapshotType { get; set; }
        /// <summary>
        /// <p>The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has a value in the case of
        /// a cross-account or cross-Region copy.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has a value in the case of a cross-account or cross-Region copy.</p>",
        SerializedName = @"sourceDBSnapshotIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string SourceDbSnapshotIdentifier { get; set; }
        /// <summary>
        /// <p>The Amazon Web Services Region that the DB snapshot was created in or copied from.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Web Services Region that the DB snapshot was created in or copied from.</p>",
        SerializedName = @"sourceRegion",
        PossibleTypes = new [] { typeof(string) })]
        string SourceRegion { get; set; }
        /// <summary><p>Specifies the status of this DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the status of this DB snapshot.</p>",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get; set; }
        /// <summary><p>Specifies the storage throughput for the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the storage throughput for the DB snapshot.</p>",
        SerializedName = @"storageThroughput",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageThroughput { get; set; }
        /// <summary><p>Specifies the storage type associated with DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the storage type associated with DB snapshot.</p>",
        SerializedName = @"storageType",
        PossibleTypes = new [] { typeof(string) })]
        string StorageType { get; set; }
        /// <summary>Property tagList</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property tagList",
        SerializedName = @"tagList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated48) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated48[] TagList { get; set; }
        /// <summary>
        /// <p>The ARN from the key store with which to associate the instance for TDE encryption.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN from the key store with which to associate the instance for TDE encryption.</p>",
        SerializedName = @"tdeCredentialArn",
        PossibleTypes = new [] { typeof(string) })]
        string TdeCredentialArn { get; set; }
        /// <summary>
        /// <p>The time zone of the DB snapshot. In most cases, the <code>Timezone</code> element is empty. <code>Timezone</code>
        /// content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time zone of the DB snapshot. In most cases, the <code>Timezone</code> element is empty. <code>Timezone</code> content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified.</p>",
        SerializedName = @"timezone",
        PossibleTypes = new [] { typeof(string) })]
        string Timezone { get; set; }
        /// <summary><p>Provides the VPC ID associated with the DB snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Provides the VPC ID associated with the DB snapshot.</p>",
        SerializedName = @"vpcId",
        PossibleTypes = new [] { typeof(string) })]
        string VpcId { get; set; }

    }
    /// Definition of awsRdsDBSnapshot
    internal partial interface IAwsRdsDbSnapshotPropertiesInternal

    {
        /// <summary><p>Specifies the allocated storage size in gibibytes (GiB).</p></summary>
        int? AllocatedStorage { get; set; }
        /// <summary>
        /// <p>Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.</p>
        /// </summary>
        string AvailabilityZone { get; set; }
        /// <summary>
        /// <p>Specifies the DB instance identifier of the DB instance this DB snapshot was created from.</p>
        /// </summary>
        string DbInstanceIdentifier { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) for the DB snapshot.</p></summary>
        string DbSnapshotArn { get; set; }
        /// <summary><p>Specifies the identifier for the DB snapshot.</p></summary>
        string DbSnapshotIdentifier { get; set; }
        /// <summary>
        /// <p>The Oracle system identifier (SID), which is the name of the Oracle database instance that manages your database files.
        /// The Oracle SID is also the name of your CDB.</p>
        /// </summary>
        string DbSystemId { get; set; }
        /// <summary>
        /// <p>The identifier for the source DB instance, which can't be changed and which is unique to an Amazon Web Services Region.</p>
        /// </summary>
        string DbiResourceId { get; set; }
        /// <summary>
        /// <p>Indicates whether the DB instance has a dedicated log volume (DLV) enabled.</p>
        /// </summary>
        bool? DedicatedLogVolume { get; set; }
        /// <summary><p>Indicates whether the DB snapshot is encrypted.</p></summary>
        bool? Encrypted { get; set; }
        /// <summary><p>Specifies the name of the database engine.</p></summary>
        string Engine { get; set; }
        /// <summary><p>Specifies the version of the database engine.</p></summary>
        string EngineVersion { get; set; }
        /// <summary>
        /// <p>Indicates whether mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts
        /// is enabled.</p>
        /// </summary>
        bool? IamDatabaseAuthenticationEnabled { get; set; }
        /// <summary>
        /// <p>Specifies the time in Coordinated Universal Time (UTC) when the DB instance, from which the snapshot was taken, was
        /// created.</p>
        /// </summary>
        global::System.DateTime? InstanceCreateTime { get; set; }
        /// <summary>
        /// <p>Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.</p>
        /// </summary>
        int? Iop { get; set; }
        /// <summary>
        /// <p>If <code>Encrypted</code> is true, the Amazon Web Services KMS key identifier for the encrypted DB snapshot.</p> <p>The
        /// Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p>
        /// </summary>
        string KmsKeyId { get; set; }
        /// <summary><p>License model information for the restored DB instance.</p></summary>
        string LicenseModel { get; set; }
        /// <summary><p>Provides the master username for the DB snapshot.</p></summary>
        string MasterUsername { get; set; }
        /// <summary>
        /// <p>Indicates whether the snapshot is of a DB instance using the multi-tenant configuration (TRUE) or the single-tenant
        /// configuration (FALSE).</p>
        /// </summary>
        bool? MultiTenant { get; set; }
        /// <summary><p>Provides the option group name for the DB snapshot.</p></summary>
        string OptionGroupName { get; set; }
        /// <summary>
        /// <p>Specifies the time of the CreateDBSnapshot operation in Coordinated Universal Time (UTC). Doesn't change when the snapshot
        /// is copied.</p>
        /// </summary>
        global::System.DateTime? OriginalSnapshotCreateTime { get; set; }
        /// <summary><p>The percentage of the estimated data that has been transferred.</p></summary>
        int? PercentProgress { get; set; }
        /// <summary>
        /// <p>Specifies the port that the database engine was listening on at the time of the snapshot.</p>
        /// </summary>
        int? Port { get; set; }
        /// <summary>
        /// <p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance when the DB
        /// snapshot was created.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProcessorFeatureAutoGenerated[] ProcessorFeature { get; set; }
        /// <summary>
        /// <p>Specifies when the snapshot was taken in Coordinated Universal Time (UTC). Changes for the copy when the snapshot is
        /// copied.</p>
        /// </summary>
        global::System.DateTime? SnapshotCreateTime { get; set; }
        /// <summary>
        /// <p>The timestamp of the most recent transaction applied to the database that you're backing up. Thus, if you restore a
        /// snapshot, SnapshotDatabaseTime is the most recent transaction in the restored DB instance. In contrast, originalSnapshotCreateTime
        /// specifies the system time that the snapshot completed.</p> <p>If you back up a read replica, you can determine the replica
        /// lag by comparing SnapshotDatabaseTime with originalSnapshotCreateTime. For example, if originalSnapshotCreateTime is two
        /// hours later than SnapshotDatabaseTime, then the replica lag is two hours.</p>
        /// </summary>
        global::System.DateTime? SnapshotDatabaseTime { get; set; }
        /// <summary>
        /// <p>Specifies where manual snapshots are stored: Amazon Web Services Outposts or the Amazon Web Services Region.</p>
        /// </summary>
        string SnapshotTarget { get; set; }
        /// <summary><p>Provides the type of the DB snapshot.</p></summary>
        string SnapshotType { get; set; }
        /// <summary>
        /// <p>The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has a value in the case of
        /// a cross-account or cross-Region copy.</p>
        /// </summary>
        string SourceDbSnapshotIdentifier { get; set; }
        /// <summary>
        /// <p>The Amazon Web Services Region that the DB snapshot was created in or copied from.</p>
        /// </summary>
        string SourceRegion { get; set; }
        /// <summary><p>Specifies the status of this DB snapshot.</p></summary>
        string Status { get; set; }
        /// <summary><p>Specifies the storage throughput for the DB snapshot.</p></summary>
        int? StorageThroughput { get; set; }
        /// <summary><p>Specifies the storage type associated with DB snapshot.</p></summary>
        string StorageType { get; set; }
        /// <summary>Property tagList</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated48[] TagList { get; set; }
        /// <summary>
        /// <p>The ARN from the key store with which to associate the instance for TDE encryption.</p>
        /// </summary>
        string TdeCredentialArn { get; set; }
        /// <summary>
        /// <p>The time zone of the DB snapshot. In most cases, the <code>Timezone</code> element is empty. <code>Timezone</code>
        /// content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified.</p>
        /// </summary>
        string Timezone { get; set; }
        /// <summary><p>Provides the VPC ID associated with the DB snapshot.</p></summary>
        string VpcId { get; set; }

    }
}