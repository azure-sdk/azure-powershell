// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>A Microsoft.AwsConnector resource</summary>
    public partial class EcrImageDetail :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetail,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailInternal,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.TrackedResource();

        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string Arn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).Arn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).Arn = value ?? null; }

        /// <summary><p>The artifact media type of the image.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyArtifactMediaType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyArtifactMediaType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyArtifactMediaType = value ?? null; }

        /// <summary><p>The <code>sha256</code> digest of the image manifest.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyImageDigest { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageDigest; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageDigest = value ?? null; }

        /// <summary><p>The media type of the image manifest.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyImageManifestMediaType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageManifestMediaType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageManifestMediaType = value ?? null; }

        /// <summary>
        /// <p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? AwPropertyImagePushedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImagePushedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImagePushedAt = value ?? default(global::System.DateTime); }

        /// <summary>
        /// <p>The size, in bytes, of the image in the repository.</p> <p>If the image is a manifest list, this will be the max size
        /// of all manifests in the list.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers
        /// before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed
        /// image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public long? AwPropertyImageSizeInByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageSizeInByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageSizeInByte = value ?? default(long); }

        /// <summary><p>The list of tags associated with this image.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] AwPropertyImageTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageTag = value ?? null /* arrayOf */; }

        /// <summary>
        /// <p>The date and time, expressed in standard JavaScript date format, when Amazon ECR recorded the last image pull.</p>
        /// <note> <p>Amazon ECR refreshes the last image pull timestamp at least once every 24 hours. For example, if you pull an
        /// image once a day then the <code>lastRecordedPullTime</code> timestamp will indicate the exact time that the image was
        /// last pulled. However, if you pull an image once an hour, because Amazon ECR refreshes the <code>lastRecordedPullTime</code>
        /// timestamp at least once every 24 hours, the result may not be the exact time that the image was last pulled.</p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? AwPropertyLastRecordedPullTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyLastRecordedPullTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyLastRecordedPullTime = value ?? default(global::System.DateTime); }

        /// <summary>
        /// <p>The Amazon Web Services account ID associated with the registry to which this image belongs.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyRegistryId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyRegistryId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyRegistryId = value ?? null; }

        /// <summary><p>The name of the repository to which this image belongs.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyRepositoryName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyRepositoryName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyRepositoryName = value ?? null; }

        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwsAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwsAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwsAccountId = value ?? null; }

        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwsRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwsRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwsRegion = value ?? null; }

        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwsSourceSchema { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwsSourceSchema; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwsSourceSchema = value ?? null; }

        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesAwsTags AwsTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwsTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwsTag = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="AzureAsyncOperation" /> property.</summary>
        private string _azureAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AzureAsyncOperation { get => this._azureAsyncOperation; set => this._azureAsyncOperation = value; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Id; }

        /// <summary><p>The image vulnerability counts, sorted by severity.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanFindingsSummaryFindingSeverityCounts ImageScanFindingSummaryFindingSeverityCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ImageScanFindingSummaryFindingSeverityCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ImageScanFindingSummaryFindingSeverityCount = value ?? null /* model class */; }

        /// <summary><p>The time of the last completed image scan.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? ImageScanFindingSummaryImageScanCompletedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ImageScanFindingSummaryImageScanCompletedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ImageScanFindingSummaryImageScanCompletedAt = value ?? default(global::System.DateTime); }

        /// <summary><p>The time when the vulnerability data was last scanned.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? ImageScanFindingSummaryVulnerabilitySourceUpdatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ImageScanFindingSummaryVulnerabilitySourceUpdatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ImageScanFindingSummaryVulnerabilitySourceUpdatedAt = value ?? default(global::System.DateTime); }

        /// <summary><p>The description of the image scan status.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ImageScanStatusDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ImageScanStatusDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ImageScanStatusDescription = value ?? null; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for AwPropertyImageScanFindingsSummary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanFindingsSummary Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailInternal.AwPropertyImageScanFindingsSummary { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageScanFindingsSummary; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageScanFindingsSummary = value; }

        /// <summary>Internal Acessors for AwPropertyImageScanStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanStatus Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailInternal.AwPropertyImageScanStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageScanStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwPropertyImageScanStatus = value; }

        /// <summary>Internal Acessors for AwsProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrImageDetailProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailInternal.AwsProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwsProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).AwsProperty = value; }

        /// <summary>Internal Acessors for ImageScanStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScanStatusEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailInternal.ImageScanStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ImageScanStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ImageScanStatus = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EcrImageDetailProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EcrImageDetailProperties()); set => this._property = value; }

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PublicCloudConnectorsResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).PublicCloudConnectorsResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).PublicCloudConnectorsResourceId = value ?? null; }

        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PublicCloudResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).PublicCloudResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).PublicCloudResourceName = value ?? null; }

        /// <summary>Backing field for <see cref="RetryAfter" /> property.</summary>
        private int? _retryAfter;

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? RetryAfter { get => this._retryAfter; set => this._retryAfter = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ScanStatus? StatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).StatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesInternal)Property).StatusValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ScanStatus)""); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="EcrImageDetail" /> instance.</summary>
        public EcrImageDetail()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Azure-AsyncOperation", out var __azureAsyncOperationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailInternal)this).AzureAsyncOperation = System.Linq.Enumerable.FirstOrDefault(__azureAsyncOperationHeader0) is string __headerAzureAsyncOperationHeader0 ? __headerAzureAsyncOperationHeader0 : (string)null;
            }
            if (headers.TryGetValues("Retry-After", out var __retryAfterHeader1))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailInternal)this).RetryAfter = System.Linq.Enumerable.FirstOrDefault(__retryAfterHeader1) is string __headerRetryAfterHeader1 ? int.TryParse( __headerRetryAfterHeader1, out int __headerRetryAfterHeader1Value ) ? __headerRetryAfterHeader1Value : default(int?) : default(int?);
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// A Microsoft.AwsConnector resource
    public partial interface IEcrImageDetail :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResource
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary><p>The artifact media type of the image.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The artifact media type of the image.</p>",
        SerializedName = @"artifactMediaType",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyArtifactMediaType { get; set; }
        /// <summary><p>The <code>sha256</code> digest of the image manifest.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The <code>sha256</code> digest of the image manifest.</p>",
        SerializedName = @"imageDigest",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyImageDigest { get; set; }
        /// <summary><p>The media type of the image manifest.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The media type of the image manifest.</p>",
        SerializedName = @"imageManifestMediaType",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyImageManifestMediaType { get; set; }
        /// <summary>
        /// <p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>",
        SerializedName = @"imagePushedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AwPropertyImagePushedAt { get; set; }
        /// <summary>
        /// <p>The size, in bytes, of the image in the repository.</p> <p>If the image is a manifest list, this will be the max size
        /// of all manifests in the list.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers
        /// before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed
        /// image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The size, in bytes, of the image in the repository.</p> <p>If the image is a manifest list, this will be the max size of all manifests in the list.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>",
        SerializedName = @"imageSizeInBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? AwPropertyImageSizeInByte { get; set; }
        /// <summary><p>The list of tags associated with this image.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The list of tags associated with this image.</p>",
        SerializedName = @"imageTags",
        PossibleTypes = new [] { typeof(string) })]
        string[] AwPropertyImageTag { get; set; }
        /// <summary>
        /// <p>The date and time, expressed in standard JavaScript date format, when Amazon ECR recorded the last image pull.</p>
        /// <note> <p>Amazon ECR refreshes the last image pull timestamp at least once every 24 hours. For example, if you pull an
        /// image once a day then the <code>lastRecordedPullTime</code> timestamp will indicate the exact time that the image was
        /// last pulled. However, if you pull an image once an hour, because Amazon ECR refreshes the <code>lastRecordedPullTime</code>
        /// timestamp at least once every 24 hours, the result may not be the exact time that the image was last pulled.</p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date and time, expressed in standard JavaScript date format, when Amazon ECR recorded the last image pull.</p> <note> <p>Amazon ECR refreshes the last image pull timestamp at least once every 24 hours. For example, if you pull an image once a day then the <code>lastRecordedPullTime</code> timestamp will indicate the exact time that the image was last pulled. However, if you pull an image once an hour, because Amazon ECR refreshes the <code>lastRecordedPullTime</code> timestamp at least once every 24 hours, the result may not be the exact time that the image was last pulled.</p> </note>",
        SerializedName = @"lastRecordedPullTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AwPropertyLastRecordedPullTime { get; set; }
        /// <summary>
        /// <p>The Amazon Web Services account ID associated with the registry to which this image belongs.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Web Services account ID associated with the registry to which this image belongs.</p>",
        SerializedName = @"registryId",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyRegistryId { get; set; }
        /// <summary><p>The name of the repository to which this image belongs.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the repository to which this image belongs.</p>",
        SerializedName = @"repositoryName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyRepositoryName { get; set; }
        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AwsAccountId { get; set; }
        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesAwsTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesAwsTags AwsTag { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Azure-AsyncOperation",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAsyncOperation { get; set; }
        /// <summary><p>The image vulnerability counts, sorted by severity.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The image vulnerability counts, sorted by severity.</p>",
        SerializedName = @"findingSeverityCounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanFindingsSummaryFindingSeverityCounts) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanFindingsSummaryFindingSeverityCounts ImageScanFindingSummaryFindingSeverityCount { get; set; }
        /// <summary><p>The time of the last completed image scan.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time of the last completed image scan.</p>",
        SerializedName = @"imageScanCompletedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ImageScanFindingSummaryImageScanCompletedAt { get; set; }
        /// <summary><p>The time when the vulnerability data was last scanned.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time when the vulnerability data was last scanned.</p>",
        SerializedName = @"vulnerabilitySourceUpdatedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ImageScanFindingSummaryVulnerabilitySourceUpdatedAt { get; set; }
        /// <summary><p>The description of the image scan status.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The description of the image scan status.</p>",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string ImageScanStatusDescription { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudResourceName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Retry-After",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryAfter { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ScanStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ScanStatus? StatusValue { get; set; }

    }
    /// A Microsoft.AwsConnector resource
    internal partial interface IEcrImageDetailInternal :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        string Arn { get; set; }
        /// <summary><p>The artifact media type of the image.</p></summary>
        string AwPropertyArtifactMediaType { get; set; }
        /// <summary><p>The <code>sha256</code> digest of the image manifest.</p></summary>
        string AwPropertyImageDigest { get; set; }
        /// <summary><p>The media type of the image manifest.</p></summary>
        string AwPropertyImageManifestMediaType { get; set; }
        /// <summary>
        /// <p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository.
        /// </p>
        /// </summary>
        global::System.DateTime? AwPropertyImagePushedAt { get; set; }
        /// <summary><p>A summary of the last completed image scan.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanFindingsSummary AwPropertyImageScanFindingsSummary { get; set; }
        /// <summary><p>The current state of the scan.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanStatus AwPropertyImageScanStatus { get; set; }
        /// <summary>
        /// <p>The size, in bytes, of the image in the repository.</p> <p>If the image is a manifest list, this will be the max size
        /// of all manifests in the list.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers
        /// before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed
        /// image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>
        /// </summary>
        long? AwPropertyImageSizeInByte { get; set; }
        /// <summary><p>The list of tags associated with this image.</p></summary>
        string[] AwPropertyImageTag { get; set; }
        /// <summary>
        /// <p>The date and time, expressed in standard JavaScript date format, when Amazon ECR recorded the last image pull.</p>
        /// <note> <p>Amazon ECR refreshes the last image pull timestamp at least once every 24 hours. For example, if you pull an
        /// image once a day then the <code>lastRecordedPullTime</code> timestamp will indicate the exact time that the image was
        /// last pulled. However, if you pull an image once an hour, because Amazon ECR refreshes the <code>lastRecordedPullTime</code>
        /// timestamp at least once every 24 hours, the result may not be the exact time that the image was last pulled.</p> </note>
        /// </summary>
        global::System.DateTime? AwPropertyLastRecordedPullTime { get; set; }
        /// <summary>
        /// <p>The Amazon Web Services account ID associated with the registry to which this image belongs.</p>
        /// </summary>
        string AwPropertyRegistryId { get; set; }
        /// <summary><p>The name of the repository to which this image belongs.</p></summary>
        string AwPropertyRepositoryName { get; set; }
        /// <summary>AWS Account ID</summary>
        string AwsAccountId { get; set; }
        /// <summary>AWS Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrImageDetailProperties AwsProperty { get; set; }
        /// <summary>AWS Region</summary>
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailPropertiesAwsTags AwsTag { get; set; }

        string AzureAsyncOperation { get; set; }
        /// <summary><p>The image vulnerability counts, sorted by severity.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanFindingsSummaryFindingSeverityCounts ImageScanFindingSummaryFindingSeverityCount { get; set; }
        /// <summary><p>The time of the last completed image scan.</p></summary>
        global::System.DateTime? ImageScanFindingSummaryImageScanCompletedAt { get; set; }
        /// <summary><p>The time when the vulnerability data was last scanned.</p></summary>
        global::System.DateTime? ImageScanFindingSummaryVulnerabilitySourceUpdatedAt { get; set; }
        /// <summary><p>The current state of an image scan.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScanStatusEnumValue ImageScanStatus { get; set; }
        /// <summary><p>The description of the image scan status.</p></summary>
        string ImageScanStatusDescription { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEcrImageDetailProperties Property { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        string PublicCloudResourceName { get; set; }

        int? RetryAfter { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ScanStatus? StatusValue { get; set; }

    }
}