// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsCloudWatchAlarm</summary>
    public partial class AwsCloudWatchAlarmProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudWatchAlarmProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudWatchAlarmPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ActionsEnabled" /> property.</summary>
        private bool? _actionsEnabled;

        /// <summary>
        /// Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? ActionsEnabled { get => this._actionsEnabled; set => this._actionsEnabled = value; }

        /// <summary>Backing field for <see cref="AlarmAction" /> property.</summary>
        private string[] _alarmAction;

        /// <summary>
        /// The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action
        /// as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see
        /// [PutMetricAlarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html) in the *API
        /// Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] AlarmAction { get => this._alarmAction; set => this._alarmAction = value; }

        /// <summary>Backing field for <see cref="AlarmDescription" /> property.</summary>
        private string _alarmDescription;

        /// <summary>The description of the alarm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AlarmDescription { get => this._alarmDescription; set => this._alarmDescription = value; }

        /// <summary>Backing field for <see cref="AlarmName" /> property.</summary>
        private string _alarmName;

        /// <summary>
        /// The name of the alarm. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the alarm
        /// name. If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates
        /// that require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AlarmName { get => this._alarmName; set => this._alarmName = value; }

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Backing field for <see cref="ComparisonOperator" /> property.</summary>
        private string _comparisonOperator;

        /// <summary>
        /// The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is
        /// used as the first operand.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ComparisonOperator { get => this._comparisonOperator; set => this._comparisonOperator = value; }

        /// <summary>Backing field for <see cref="DatapointsToAlarm" /> property.</summary>
        private int? _datapointsToAlarm;

        /// <summary>
        /// The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an 'M out of
        /// N' alarm. In that case, this value is the M, and the value that you set for ``EvaluationPeriods`` is the N value. For
        /// more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation)
        /// in the *User Guide*. If you omit this parameter, CW uses the same value here that you set for ``EvaluationPeriods``, and
        /// the alarm goes to alarm state if that many consecutive periods are breaching.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? DatapointsToAlarm { get => this._datapointsToAlarm; set => this._datapointsToAlarm = value; }

        /// <summary>Backing field for <see cref="Dimension" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimension[] _dimension;

        /// <summary>
        /// The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify ``Dimensions``.
        /// Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimension[] Dimension { get => this._dimension; set => this._dimension = value; }

        /// <summary>Backing field for <see cref="EvaluateLowSampleCountPercentile" /> property.</summary>
        private string _evaluateLowSampleCountPercentile;

        /// <summary>
        /// Used only for alarms based on percentiles. If ``ignore``, the alarm state does not change during periods with too few
        /// data points to be statistically significant. If ``evaluate`` or this parameter is not used, the alarm is always evaluated
        /// and possibly changes state no matter how many data points are available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string EvaluateLowSampleCountPercentile { get => this._evaluateLowSampleCountPercentile; set => this._evaluateLowSampleCountPercentile = value; }

        /// <summary>Backing field for <see cref="EvaluationPeriod" /> property.</summary>
        private int? _evaluationPeriod;

        /// <summary>
        /// The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires
        /// that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are
        /// setting an 'M out of N' alarm, this value is the N, and ``DatapointsToAlarm`` is the M. For more information, see [Evaluating
        /// an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in
        /// the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? EvaluationPeriod { get => this._evaluationPeriod; set => this._evaluationPeriod = value; }

        /// <summary>Backing field for <see cref="ExtendedStatistic" /> property.</summary>
        private string _extendedStatistic;

        /// <summary>
        /// The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100. For an alarm
        /// based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm based on
        /// a math expression, you can't specify ``ExtendedStatistic``. Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ExtendedStatistic { get => this._extendedStatistic; set => this._extendedStatistic = value; }

        /// <summary>Backing field for <see cref="InsufficientDataAction" /> property.</summary>
        private string[] _insufficientDataAction;

        /// <summary>
        /// The actions to execute when this alarm transitions to the ``INSUFFICIENT_DATA`` state from any other state. Each action
        /// is specified as an Amazon Resource Name (ARN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] InsufficientDataAction { get => this._insufficientDataAction; set => this._insufficientDataAction = value; }

        /// <summary>Backing field for <see cref="Metric" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricDataQuery[] _metric;

        /// <summary>
        /// An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either
        /// retrieves a metric or performs a math expression. If you specify the ``Metrics`` parameter, you cannot specify ``MetricName``,
        /// ``Dimensions``, ``Period``, ``Namespace``, ``Statistic``, ``ExtendedStatistic``, or ``Unit``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricDataQuery[] Metric { get => this._metric; set => this._metric = value; }

        /// <summary>Backing field for <see cref="MetricName" /> property.</summary>
        private string _metricName;

        /// <summary>
        /// The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you use ``Metrics`` instead and you can't specify ``MetricName``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string MetricName { get => this._metricName; set => this._metricName = value; }

        /// <summary>Backing field for <see cref="Namespace" /> property.</summary>
        private string _namespace;

        /// <summary>
        /// The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you can't specify ``Namespace`` and you use ``Metrics`` instead. For a list of namespaces for metrics
        /// from AWS services, see [Services That Publish Metrics.](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Namespace { get => this._namespace; set => this._namespace = value; }

        /// <summary>Backing field for <see cref="OkAction" /> property.</summary>
        private string[] _okAction;

        /// <summary>
        /// The actions to execute when this alarm transitions to the ``OK`` state from any other state. Each action is specified
        /// as an Amazon Resource Name (ARN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] OkAction { get => this._okAction; set => this._okAction = value; }

        /// <summary>Backing field for <see cref="Period" /> property.</summary>
        private int? _period;

        /// <summary>
        /// The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values
        /// are 10, 30, 60, and any multiple of 60. For an alarm based on a math expression, you can't specify ``Period``, and instead
        /// you use the ``Metrics`` parameter. *Minimum:* 10
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? Period { get => this._period; set => this._period = value; }

        /// <summary>Backing field for <see cref="Statistic" /> property.</summary>
        private string _statistic;

        /// <summary>
        /// The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ``ExtendedStatistic``.
        /// For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm
        /// based on a math expression, you can't specify ``Statistic``. Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Statistic { get => this._statistic; set => this._statistic = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated7[] _tag;

        /// <summary>Property tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated7[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="Threshold" /> property.</summary>
        private float? _threshold;

        /// <summary>The value to compare with the specified statistic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public float? Threshold { get => this._threshold; set => this._threshold = value; }

        /// <summary>Backing field for <see cref="ThresholdMetricId" /> property.</summary>
        private string _thresholdMetricId;

        /// <summary>
        /// In an alarm based on an anomaly detection model, this is the ID of the ``ANOMALY_DETECTION_BAND`` function used as the
        /// threshold for the alarm.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ThresholdMetricId { get => this._thresholdMetricId; set => this._thresholdMetricId = value; }

        /// <summary>Backing field for <see cref="TreatMissingData" /> property.</summary>
        private string _treatMissingData;

        /// <summary>
        /// Sets how this alarm is to handle missing data points. Valid values are ``breaching``, ``notBreaching``, ``ignore``, and
        /// ``missing``. For more information, see [Configuring How Alarms Treat Missing Data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data)
        /// in the *Amazon User Guide*. If you omit this parameter, the default behavior of ``missing`` is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string TreatMissingData { get => this._treatMissingData; set => this._treatMissingData = value; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private string _unit;

        /// <summary>
        /// The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric.
        /// Do not specify this if you are specifying a ``Metrics`` array. You can specify the following values: Seconds, Microseconds,
        /// Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent,
        /// Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second,
        /// Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Unit { get => this._unit; set => this._unit = value; }

        /// <summary>Creates an new <see cref="AwsCloudWatchAlarmProperties" /> instance.</summary>
        public AwsCloudWatchAlarmProperties()
        {

        }
    }
    /// Definition of awsCloudWatchAlarm
    public partial interface IAwsCloudWatchAlarmProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.",
        SerializedName = @"actionsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ActionsEnabled { get; set; }
        /// <summary>
        /// The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action
        /// as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see
        /// [PutMetricAlarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html) in the *API
        /// Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see [PutMetricAlarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html) in the *API Reference*.",
        SerializedName = @"alarmActions",
        PossibleTypes = new [] { typeof(string) })]
        string[] AlarmAction { get; set; }
        /// <summary>The description of the alarm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the alarm.",
        SerializedName = @"alarmDescription",
        PossibleTypes = new [] { typeof(string) })]
        string AlarmDescription { get; set; }
        /// <summary>
        /// The name of the alarm. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the alarm
        /// name. If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates
        /// that require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the alarm. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the alarm name.   If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
        SerializedName = @"alarmName",
        PossibleTypes = new [] { typeof(string) })]
        string AlarmName { get; set; }
        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property arn",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is
        /// used as the first operand.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.",
        SerializedName = @"comparisonOperator",
        PossibleTypes = new [] { typeof(string) })]
        string ComparisonOperator { get; set; }
        /// <summary>
        /// The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an 'M out of
        /// N' alarm. In that case, this value is the M, and the value that you set for ``EvaluationPeriods`` is the N value. For
        /// more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation)
        /// in the *User Guide*. If you omit this parameter, CW uses the same value here that you set for ``EvaluationPeriods``, and
        /// the alarm goes to alarm state if that many consecutive periods are breaching.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an 'M out of N' alarm. In that case, this value is the M, and the value that you set for ``EvaluationPeriods`` is the N value. For more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in the *User Guide*. If you omit this parameter, CW uses the same value here that you set for ``EvaluationPeriods``, and the alarm goes to alarm state if that many consecutive periods are breaching.",
        SerializedName = @"datapointsToAlarm",
        PossibleTypes = new [] { typeof(int) })]
        int? DatapointsToAlarm { get; set; }
        /// <summary>
        /// The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify ``Dimensions``.
        /// Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify ``Dimensions``. Instead, you use ``Metrics``.",
        SerializedName = @"dimensions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimension) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimension[] Dimension { get; set; }
        /// <summary>
        /// Used only for alarms based on percentiles. If ``ignore``, the alarm state does not change during periods with too few
        /// data points to be statistically significant. If ``evaluate`` or this parameter is not used, the alarm is always evaluated
        /// and possibly changes state no matter how many data points are available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used only for alarms based on percentiles. If ``ignore``, the alarm state does not change during periods with too few data points to be statistically significant. If ``evaluate`` or this parameter is not used, the alarm is always evaluated and possibly changes state no matter how many data points are available.",
        SerializedName = @"evaluateLowSampleCountPercentile",
        PossibleTypes = new [] { typeof(string) })]
        string EvaluateLowSampleCountPercentile { get; set; }
        /// <summary>
        /// The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires
        /// that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are
        /// setting an 'M out of N' alarm, this value is the N, and ``DatapointsToAlarm`` is the M. For more information, see [Evaluating
        /// an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in
        /// the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an 'M out of N' alarm, this value is the N, and ``DatapointsToAlarm`` is the M. For more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in the *User Guide*.",
        SerializedName = @"evaluationPeriods",
        PossibleTypes = new [] { typeof(int) })]
        int? EvaluationPeriod { get; set; }
        /// <summary>
        /// The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100. For an alarm
        /// based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm based on
        /// a math expression, you can't specify ``ExtendedStatistic``. Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100. For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm based on a math expression, you can't specify ``ExtendedStatistic``. Instead, you use ``Metrics``.",
        SerializedName = @"extendedStatistic",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedStatistic { get; set; }
        /// <summary>
        /// The actions to execute when this alarm transitions to the ``INSUFFICIENT_DATA`` state from any other state. Each action
        /// is specified as an Amazon Resource Name (ARN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The actions to execute when this alarm transitions to the ``INSUFFICIENT_DATA`` state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
        SerializedName = @"insufficientDataActions",
        PossibleTypes = new [] { typeof(string) })]
        string[] InsufficientDataAction { get; set; }
        /// <summary>
        /// An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either
        /// retrieves a metric or performs a math expression. If you specify the ``Metrics`` parameter, you cannot specify ``MetricName``,
        /// ``Dimensions``, ``Period``, ``Namespace``, ``Statistic``, ``ExtendedStatistic``, or ``Unit``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either retrieves a metric or performs a math expression. If you specify the ``Metrics`` parameter, you cannot specify ``MetricName``, ``Dimensions``, ``Period``, ``Namespace``, ``Statistic``, ``ExtendedStatistic``, or ``Unit``.",
        SerializedName = @"metrics",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricDataQuery) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricDataQuery[] Metric { get; set; }
        /// <summary>
        /// The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you use ``Metrics`` instead and you can't specify ``MetricName``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you use ``Metrics`` instead and you can't specify ``MetricName``.",
        SerializedName = @"metricName",
        PossibleTypes = new [] { typeof(string) })]
        string MetricName { get; set; }
        /// <summary>
        /// The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you can't specify ``Namespace`` and you use ``Metrics`` instead. For a list of namespaces for metrics
        /// from AWS services, see [Services That Publish Metrics.](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you can't specify ``Namespace`` and you use ``Metrics`` instead. For a list of namespaces for metrics from AWS services, see [Services That Publish Metrics.](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)",
        SerializedName = @"namespace",
        PossibleTypes = new [] { typeof(string) })]
        string Namespace { get; set; }
        /// <summary>
        /// The actions to execute when this alarm transitions to the ``OK`` state from any other state. Each action is specified
        /// as an Amazon Resource Name (ARN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The actions to execute when this alarm transitions to the ``OK`` state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
        SerializedName = @"okActions",
        PossibleTypes = new [] { typeof(string) })]
        string[] OkAction { get; set; }
        /// <summary>
        /// The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values
        /// are 10, 30, 60, and any multiple of 60. For an alarm based on a math expression, you can't specify ``Period``, and instead
        /// you use the ``Metrics`` parameter. *Minimum:* 10
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values are 10, 30, 60, and any multiple of 60. For an alarm based on a math expression, you can't specify ``Period``, and instead you use the ``Metrics`` parameter. *Minimum:* 10",
        SerializedName = @"period",
        PossibleTypes = new [] { typeof(int) })]
        int? Period { get; set; }
        /// <summary>
        /// The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ``ExtendedStatistic``.
        /// For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm
        /// based on a math expression, you can't specify ``Statistic``. Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ``ExtendedStatistic``. For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm based on a math expression, you can't specify ``Statistic``. Instead, you use ``Metrics``.",
        SerializedName = @"statistic",
        PossibleTypes = new [] { typeof(string) })]
        string Statistic { get; set; }
        /// <summary>Property tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property tags",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated7) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated7[] Tag { get; set; }
        /// <summary>The value to compare with the specified statistic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value to compare with the specified statistic.",
        SerializedName = @"threshold",
        PossibleTypes = new [] { typeof(float) })]
        float? Threshold { get; set; }
        /// <summary>
        /// In an alarm based on an anomaly detection model, this is the ID of the ``ANOMALY_DETECTION_BAND`` function used as the
        /// threshold for the alarm.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In an alarm based on an anomaly detection model, this is the ID of the ``ANOMALY_DETECTION_BAND`` function used as the threshold for the alarm.",
        SerializedName = @"thresholdMetricId",
        PossibleTypes = new [] { typeof(string) })]
        string ThresholdMetricId { get; set; }
        /// <summary>
        /// Sets how this alarm is to handle missing data points. Valid values are ``breaching``, ``notBreaching``, ``ignore``, and
        /// ``missing``. For more information, see [Configuring How Alarms Treat Missing Data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data)
        /// in the *Amazon User Guide*. If you omit this parameter, the default behavior of ``missing`` is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets how this alarm is to handle missing data points. Valid values are ``breaching``, ``notBreaching``, ``ignore``, and ``missing``. For more information, see [Configuring How Alarms Treat Missing Data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data) in the *Amazon User Guide*. If you omit this parameter, the default behavior of ``missing`` is used.",
        SerializedName = @"treatMissingData",
        PossibleTypes = new [] { typeof(string) })]
        string TreatMissingData { get; set; }
        /// <summary>
        /// The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric.
        /// Do not specify this if you are specifying a ``Metrics`` array. You can specify the following values: Seconds, Microseconds,
        /// Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent,
        /// Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second,
        /// Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric. Do not specify this if you are specifying a ``Metrics`` array.  You can specify the following values: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get; set; }

    }
    /// Definition of awsCloudWatchAlarm
    internal partial interface IAwsCloudWatchAlarmPropertiesInternal

    {
        /// <summary>
        /// Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
        /// </summary>
        bool? ActionsEnabled { get; set; }
        /// <summary>
        /// The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action
        /// as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see
        /// [PutMetricAlarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html) in the *API
        /// Reference*.
        /// </summary>
        string[] AlarmAction { get; set; }
        /// <summary>The description of the alarm.</summary>
        string AlarmDescription { get; set; }
        /// <summary>
        /// The name of the alarm. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the alarm
        /// name. If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates
        /// that require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        string AlarmName { get; set; }
        /// <summary>Property arn</summary>
        string Arn { get; set; }
        /// <summary>
        /// The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is
        /// used as the first operand.
        /// </summary>
        string ComparisonOperator { get; set; }
        /// <summary>
        /// The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an 'M out of
        /// N' alarm. In that case, this value is the M, and the value that you set for ``EvaluationPeriods`` is the N value. For
        /// more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation)
        /// in the *User Guide*. If you omit this parameter, CW uses the same value here that you set for ``EvaluationPeriods``, and
        /// the alarm goes to alarm state if that many consecutive periods are breaching.
        /// </summary>
        int? DatapointsToAlarm { get; set; }
        /// <summary>
        /// The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify ``Dimensions``.
        /// Instead, you use ``Metrics``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimension[] Dimension { get; set; }
        /// <summary>
        /// Used only for alarms based on percentiles. If ``ignore``, the alarm state does not change during periods with too few
        /// data points to be statistically significant. If ``evaluate`` or this parameter is not used, the alarm is always evaluated
        /// and possibly changes state no matter how many data points are available.
        /// </summary>
        string EvaluateLowSampleCountPercentile { get; set; }
        /// <summary>
        /// The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires
        /// that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are
        /// setting an 'M out of N' alarm, this value is the N, and ``DatapointsToAlarm`` is the M. For more information, see [Evaluating
        /// an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in
        /// the *User Guide*.
        /// </summary>
        int? EvaluationPeriod { get; set; }
        /// <summary>
        /// The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100. For an alarm
        /// based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm based on
        /// a math expression, you can't specify ``ExtendedStatistic``. Instead, you use ``Metrics``.
        /// </summary>
        string ExtendedStatistic { get; set; }
        /// <summary>
        /// The actions to execute when this alarm transitions to the ``INSUFFICIENT_DATA`` state from any other state. Each action
        /// is specified as an Amazon Resource Name (ARN).
        /// </summary>
        string[] InsufficientDataAction { get; set; }
        /// <summary>
        /// An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either
        /// retrieves a metric or performs a math expression. If you specify the ``Metrics`` parameter, you cannot specify ``MetricName``,
        /// ``Dimensions``, ``Period``, ``Namespace``, ``Statistic``, ``ExtendedStatistic``, or ``Unit``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricDataQuery[] Metric { get; set; }
        /// <summary>
        /// The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you use ``Metrics`` instead and you can't specify ``MetricName``.
        /// </summary>
        string MetricName { get; set; }
        /// <summary>
        /// The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you can't specify ``Namespace`` and you use ``Metrics`` instead. For a list of namespaces for metrics
        /// from AWS services, see [Services That Publish Metrics.](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)
        /// </summary>
        string Namespace { get; set; }
        /// <summary>
        /// The actions to execute when this alarm transitions to the ``OK`` state from any other state. Each action is specified
        /// as an Amazon Resource Name (ARN).
        /// </summary>
        string[] OkAction { get; set; }
        /// <summary>
        /// The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values
        /// are 10, 30, 60, and any multiple of 60. For an alarm based on a math expression, you can't specify ``Period``, and instead
        /// you use the ``Metrics`` parameter. *Minimum:* 10
        /// </summary>
        int? Period { get; set; }
        /// <summary>
        /// The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ``ExtendedStatistic``.
        /// For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm
        /// based on a math expression, you can't specify ``Statistic``. Instead, you use ``Metrics``.
        /// </summary>
        string Statistic { get; set; }
        /// <summary>Property tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated7[] Tag { get; set; }
        /// <summary>The value to compare with the specified statistic.</summary>
        float? Threshold { get; set; }
        /// <summary>
        /// In an alarm based on an anomaly detection model, this is the ID of the ``ANOMALY_DETECTION_BAND`` function used as the
        /// threshold for the alarm.
        /// </summary>
        string ThresholdMetricId { get; set; }
        /// <summary>
        /// Sets how this alarm is to handle missing data points. Valid values are ``breaching``, ``notBreaching``, ``ignore``, and
        /// ``missing``. For more information, see [Configuring How Alarms Treat Missing Data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data)
        /// in the *Amazon User Guide*. If you omit this parameter, the default behavior of ``missing`` is used.
        /// </summary>
        string TreatMissingData { get; set; }
        /// <summary>
        /// The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric.
        /// Do not specify this if you are specifying a ``Metrics`` array. You can specify the following values: Seconds, Microseconds,
        /// Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent,
        /// Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second,
        /// Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
        /// </summary>
        string Unit { get; set; }

    }
}