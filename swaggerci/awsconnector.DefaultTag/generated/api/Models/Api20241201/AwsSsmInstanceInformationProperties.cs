// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsSsmInstanceInformation</summary>
    public partial class AwsSsmInstanceInformationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmInstanceInformationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmInstanceInformationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ActivationId" /> property.</summary>
        private string _activationId;

        /// <summary>
        /// <p>The activation ID created by Amazon Web Services Systems Manager when the server or virtual machine (VM) was registered.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ActivationId { get => this._activationId; set => this._activationId = value; }

        /// <summary>Backing field for <see cref="AgentVersion" /> property.</summary>
        private string _agentVersion;

        /// <summary><p>The version of SSM Agent running on your Linux managed node. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AgentVersion { get => this._agentVersion; set => this._agentVersion = value; }

        /// <summary>Backing field for <see cref="AssociationOverview" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverview _associationOverview;

        /// <summary><p>Information about the association.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverview AssociationOverview { get => (this._associationOverview = this._associationOverview ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceAggregatedAssociationOverview()); set => this._associationOverview = value; }

        /// <summary><p>Detailed status information about the aggregated associations.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AssociationOverviewDetailedStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverviewInternal)AssociationOverview).DetailedStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverviewInternal)AssociationOverview).DetailedStatus = value ?? null; }

        /// <summary><p>The number of associations for the managed nodes.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverviewInstanceAssociationStatusAggregatedCount AssociationOverviewInstanceAssociationStatusAggregatedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverviewInternal)AssociationOverview).InstanceAssociationStatusAggregatedCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverviewInternal)AssociationOverview).InstanceAssociationStatusAggregatedCount = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="AssociationStatus" /> property.</summary>
        private string _associationStatus;

        /// <summary><p>The status of the association.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AssociationStatus { get => this._associationStatus; set => this._associationStatus = value; }

        /// <summary>Backing field for <see cref="ComputerName" /> property.</summary>
        private string _computerName;

        /// <summary><p>The fully qualified host name of the managed node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ComputerName { get => this._computerName; set => this._computerName = value; }

        /// <summary>Backing field for <see cref="IPAddress" /> property.</summary>
        private string _iPAddress;

        /// <summary><p>The IP address of the managed node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string IPAddress { get => this._iPAddress; set => this._iPAddress = value; }

        /// <summary>Backing field for <see cref="IamRole" /> property.</summary>
        private string _iamRole;

        /// <summary>
        /// <p>The Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed node. This call doesn't
        /// return the IAM role for Amazon Elastic Compute Cloud (Amazon EC2) instances. To retrieve the IAM role for an EC2 instance,
        /// use the Amazon EC2 <code>DescribeInstances</code> operation. For information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html'>DescribeInstances</a>
        /// in the <i>Amazon EC2 API Reference</i> or <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html'>describe-instances</a>
        /// in the <i>Amazon Web Services CLI Command Reference</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string IamRole { get => this._iamRole; set => this._iamRole = value; }

        /// <summary>Backing field for <see cref="InstanceId" /> property.</summary>
        private string _instanceId;

        /// <summary><p>The managed node ID. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string InstanceId { get => this._instanceId; set => this._instanceId = value; }

        /// <summary>Backing field for <see cref="IsLatestVersion" /> property.</summary>
        private bool? _isLatestVersion;

        /// <summary>
        /// <p>Indicates whether the latest version of SSM Agent is running on your Linux managed node. This field doesn't indicate
        /// whether or not the latest version is installed on Windows managed nodes, because some older versions of Windows Server
        /// use the EC2Config service to process Systems Manager requests.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? IsLatestVersion { get => this._isLatestVersion; set => this._isLatestVersion = value; }

        /// <summary>Backing field for <see cref="LastAssociationExecutionDate" /> property.</summary>
        private global::System.DateTime? _lastAssociationExecutionDate;

        /// <summary><p>The date the association was last run.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? LastAssociationExecutionDate { get => this._lastAssociationExecutionDate; set => this._lastAssociationExecutionDate = value; }

        /// <summary>Backing field for <see cref="LastPingDateTime" /> property.</summary>
        private global::System.DateTime? _lastPingDateTime;

        /// <summary>
        /// <p>The date and time when the agent last pinged the Systems Manager service. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? LastPingDateTime { get => this._lastPingDateTime; set => this._lastPingDateTime = value; }

        /// <summary>
        /// Backing field for <see cref="LastSuccessfulAssociationExecutionDate" /> property.
        /// </summary>
        private global::System.DateTime? _lastSuccessfulAssociationExecutionDate;

        /// <summary><p>The last date the association was successfully run.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSuccessfulAssociationExecutionDate { get => this._lastSuccessfulAssociationExecutionDate; set => this._lastSuccessfulAssociationExecutionDate = value; }

        /// <summary>Internal Acessors for AssociationOverview</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverview Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmInstanceInformationPropertiesInternal.AssociationOverview { get => (this._associationOverview = this._associationOverview ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceAggregatedAssociationOverview()); set { {_associationOverview = value;} } }

        /// <summary>Internal Acessors for PingStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPingStatusEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmInstanceInformationPropertiesInternal.PingStatus { get => (this._pingStatus = this._pingStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PingStatusEnumValue()); set { {_pingStatus = value;} } }

        /// <summary>Internal Acessors for PlatformType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmInstanceInformationPropertiesInternal.PlatformType { get => (this._platformType = this._platformType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformTypeEnumValue()); set { {_platformType = value;} } }

        /// <summary>Internal Acessors for ResourceType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmInstanceInformationPropertiesInternal.ResourceType { get => (this._resourceType = this._resourceType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ResourceTypeEnumValue()); set { {_resourceType = value;} } }

        /// <summary>Internal Acessors for SourceType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmInstanceInformationPropertiesInternal.SourceType { get => (this._sourceType = this._sourceType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SourceTypeEnumValue()); set { {_sourceType = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// <p>The name assigned to an on-premises server, edge device, or virtual machine (VM) when it is activated as a Systems
        /// Manager managed node. The name is specified as the <code>DefaultInstanceName</code> property using the <a>CreateActivation</a>
        /// command. It is applied to the managed node by specifying the Activation Code and Activation ID when you install SSM Agent
        /// on the node, as explained in <a href='https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-linux.html'>Install
        /// SSM Agent for a hybrid and multicloud environment (Linux)</a> and <a href='https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-win.html'>Install
        /// SSM Agent for a hybrid and multicloud environment (Windows)</a>. To retrieve the <code>Name</code> tag of an EC2 instance,
        /// use the Amazon EC2 <code>DescribeInstances</code> operation. For information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html'>DescribeInstances</a>
        /// in the <i>Amazon EC2 API Reference</i> or <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html'>describe-instances</a>
        /// in the <i>Amazon Web Services CLI Command Reference</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="PingStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPingStatusEnumValue _pingStatus;

        /// <summary>
        /// <p>Connection status of SSM Agent. </p> <note> <p>The status <code>Inactive</code> has been deprecated and is no longer
        /// in use.</p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPingStatusEnumValue PingStatus { get => (this._pingStatus = this._pingStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PingStatusEnumValue()); set => this._pingStatus = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PingStatus? PingStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPingStatusEnumValueInternal)PingStatus).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPingStatusEnumValueInternal)PingStatus).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PingStatus)""); }

        /// <summary>Backing field for <see cref="PlatformName" /> property.</summary>
        private string _platformName;

        /// <summary><p>The name of the operating system platform running on your managed node. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PlatformName { get => this._platformName; set => this._platformName = value; }

        /// <summary>Backing field for <see cref="PlatformType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformTypeEnumValue _platformType;

        /// <summary><p>The operating system platform type. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformTypeEnumValue PlatformType { get => (this._platformType = this._platformType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformTypeEnumValue()); set => this._platformType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformType? PlatformTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformTypeEnumValueInternal)PlatformType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformTypeEnumValueInternal)PlatformType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformType)""); }

        /// <summary>Backing field for <see cref="PlatformVersion" /> property.</summary>
        private string _platformVersion;

        /// <summary><p>The version of the OS platform running on your managed node. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PlatformVersion { get => this._platformVersion; set => this._platformVersion = value; }

        /// <summary>Backing field for <see cref="RegistrationDate" /> property.</summary>
        private global::System.DateTime? _registrationDate;

        /// <summary>
        /// <p>The date the server or VM was registered with Amazon Web Services as a managed node.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? RegistrationDate { get => this._registrationDate; set => this._registrationDate = value; }

        /// <summary>Backing field for <see cref="ResourceType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceTypeEnumValue _resourceType;

        /// <summary>
        /// <p>The type of instance. Instances are either EC2 instances or managed instances. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceTypeEnumValue ResourceType { get => (this._resourceType = this._resourceType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ResourceTypeEnumValue()); set => this._resourceType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType? ResourceTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceTypeEnumValueInternal)ResourceType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceTypeEnumValueInternal)ResourceType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType)""); }

        /// <summary>Backing field for <see cref="SourceId" /> property.</summary>
        private string _sourceId;

        /// <summary>
        /// <p>The ID of the source resource. For IoT Greengrass devices, <code>SourceId</code> is the Thing name. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SourceId { get => this._sourceId; set => this._sourceId = value; }

        /// <summary>Backing field for <see cref="SourceType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValue _sourceType;

        /// <summary>
        /// <p>The type of the source resource. For IoT Greengrass devices, <code>SourceType</code> is <code>AWS::IoT::Thing</code>.
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValue SourceType { get => (this._sourceType = this._sourceType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SourceTypeEnumValue()); set => this._sourceType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType? SourceTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValueInternal)SourceType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValueInternal)SourceType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType)""); }

        /// <summary>Creates an new <see cref="AwsSsmInstanceInformationProperties" /> instance.</summary>
        public AwsSsmInstanceInformationProperties()
        {

        }
    }
    /// Definition of awsSsmInstanceInformation
    public partial interface IAwsSsmInstanceInformationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>The activation ID created by Amazon Web Services Systems Manager when the server or virtual machine (VM) was registered.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The activation ID created by Amazon Web Services Systems Manager when the server or virtual machine (VM) was registered.</p>",
        SerializedName = @"activationId",
        PossibleTypes = new [] { typeof(string) })]
        string ActivationId { get; set; }
        /// <summary><p>The version of SSM Agent running on your Linux managed node. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The version of SSM Agent running on your Linux managed node. </p>",
        SerializedName = @"agentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string AgentVersion { get; set; }
        /// <summary><p>Detailed status information about the aggregated associations.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Detailed status information about the aggregated associations.</p>",
        SerializedName = @"detailedStatus",
        PossibleTypes = new [] { typeof(string) })]
        string AssociationOverviewDetailedStatus { get; set; }
        /// <summary><p>The number of associations for the managed nodes.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of associations for the managed nodes.</p>",
        SerializedName = @"instanceAssociationStatusAggregatedCount",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverviewInstanceAssociationStatusAggregatedCount) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverviewInstanceAssociationStatusAggregatedCount AssociationOverviewInstanceAssociationStatusAggregatedCount { get; set; }
        /// <summary><p>The status of the association.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The status of the association.</p>",
        SerializedName = @"associationStatus",
        PossibleTypes = new [] { typeof(string) })]
        string AssociationStatus { get; set; }
        /// <summary><p>The fully qualified host name of the managed node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The fully qualified host name of the managed node.</p>",
        SerializedName = @"computerName",
        PossibleTypes = new [] { typeof(string) })]
        string ComputerName { get; set; }
        /// <summary><p>The IP address of the managed node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IP address of the managed node.</p>",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string IPAddress { get; set; }
        /// <summary>
        /// <p>The Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed node. This call doesn't
        /// return the IAM role for Amazon Elastic Compute Cloud (Amazon EC2) instances. To retrieve the IAM role for an EC2 instance,
        /// use the Amazon EC2 <code>DescribeInstances</code> operation. For information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html'>DescribeInstances</a>
        /// in the <i>Amazon EC2 API Reference</i> or <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html'>describe-instances</a>
        /// in the <i>Amazon Web Services CLI Command Reference</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed node. This call doesn't return the IAM role for Amazon Elastic Compute Cloud (Amazon EC2) instances. To retrieve the IAM role for an EC2 instance, use the Amazon EC2 <code>DescribeInstances</code> operation. For information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html'>DescribeInstances</a> in the <i>Amazon EC2 API Reference</i> or <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html'>describe-instances</a> in the <i>Amazon Web Services CLI Command Reference</i>.</p>",
        SerializedName = @"iamRole",
        PossibleTypes = new [] { typeof(string) })]
        string IamRole { get; set; }
        /// <summary><p>The managed node ID. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The managed node ID. </p>",
        SerializedName = @"instanceId",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceId { get; set; }
        /// <summary>
        /// <p>Indicates whether the latest version of SSM Agent is running on your Linux managed node. This field doesn't indicate
        /// whether or not the latest version is installed on Windows managed nodes, because some older versions of Windows Server
        /// use the EC2Config service to process Systems Manager requests.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the latest version of SSM Agent is running on your Linux managed node. This field doesn't indicate whether or not the latest version is installed on Windows managed nodes, because some older versions of Windows Server use the EC2Config service to process Systems Manager requests.</p>",
        SerializedName = @"isLatestVersion",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsLatestVersion { get; set; }
        /// <summary><p>The date the association was last run.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date the association was last run.</p>",
        SerializedName = @"lastAssociationExecutionDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastAssociationExecutionDate { get; set; }
        /// <summary>
        /// <p>The date and time when the agent last pinged the Systems Manager service. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date and time when the agent last pinged the Systems Manager service. </p>",
        SerializedName = @"lastPingDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastPingDateTime { get; set; }
        /// <summary><p>The last date the association was successfully run.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The last date the association was successfully run.</p>",
        SerializedName = @"lastSuccessfulAssociationExecutionDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSuccessfulAssociationExecutionDate { get; set; }
        /// <summary>
        /// <p>The name assigned to an on-premises server, edge device, or virtual machine (VM) when it is activated as a Systems
        /// Manager managed node. The name is specified as the <code>DefaultInstanceName</code> property using the <a>CreateActivation</a>
        /// command. It is applied to the managed node by specifying the Activation Code and Activation ID when you install SSM Agent
        /// on the node, as explained in <a href='https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-linux.html'>Install
        /// SSM Agent for a hybrid and multicloud environment (Linux)</a> and <a href='https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-win.html'>Install
        /// SSM Agent for a hybrid and multicloud environment (Windows)</a>. To retrieve the <code>Name</code> tag of an EC2 instance,
        /// use the Amazon EC2 <code>DescribeInstances</code> operation. For information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html'>DescribeInstances</a>
        /// in the <i>Amazon EC2 API Reference</i> or <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html'>describe-instances</a>
        /// in the <i>Amazon Web Services CLI Command Reference</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name assigned to an on-premises server, edge device, or virtual machine (VM) when it is activated as a Systems Manager managed node. The name is specified as the <code>DefaultInstanceName</code> property using the <a>CreateActivation</a> command. It is applied to the managed node by specifying the Activation Code and Activation ID when you install SSM Agent on the node, as explained in <a href='https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-linux.html'>Install SSM Agent for a hybrid and multicloud environment (Linux)</a> and <a href='https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-win.html'>Install SSM Agent for a hybrid and multicloud environment (Windows)</a>. To retrieve the <code>Name</code> tag of an EC2 instance, use the Amazon EC2 <code>DescribeInstances</code> operation. For information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html'>DescribeInstances</a> in the <i>Amazon EC2 API Reference</i> or <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html'>describe-instances</a> in the <i>Amazon Web Services CLI Command Reference</i>.</p>",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PingStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PingStatus? PingStatusValue { get; set; }
        /// <summary><p>The name of the operating system platform running on your managed node. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the operating system platform running on your managed node. </p>",
        SerializedName = @"platformName",
        PossibleTypes = new [] { typeof(string) })]
        string PlatformName { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformType? PlatformTypeValue { get; set; }
        /// <summary><p>The version of the OS platform running on your managed node. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The version of the OS platform running on your managed node. </p>",
        SerializedName = @"platformVersion",
        PossibleTypes = new [] { typeof(string) })]
        string PlatformVersion { get; set; }
        /// <summary>
        /// <p>The date the server or VM was registered with Amazon Web Services as a managed node.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date the server or VM was registered with Amazon Web Services as a managed node.</p>",
        SerializedName = @"registrationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RegistrationDate { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType? ResourceTypeValue { get; set; }
        /// <summary>
        /// <p>The ID of the source resource. For IoT Greengrass devices, <code>SourceId</code> is the Thing name. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the source resource. For IoT Greengrass devices, <code>SourceId</code> is the Thing name. </p>",
        SerializedName = @"sourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceId { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType? SourceTypeValue { get; set; }

    }
    /// Definition of awsSsmInstanceInformation
    internal partial interface IAwsSsmInstanceInformationPropertiesInternal

    {
        /// <summary>
        /// <p>The activation ID created by Amazon Web Services Systems Manager when the server or virtual machine (VM) was registered.</p>
        /// </summary>
        string ActivationId { get; set; }
        /// <summary><p>The version of SSM Agent running on your Linux managed node. </p></summary>
        string AgentVersion { get; set; }
        /// <summary><p>Information about the association.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverview AssociationOverview { get; set; }
        /// <summary><p>Detailed status information about the aggregated associations.</p></summary>
        string AssociationOverviewDetailedStatus { get; set; }
        /// <summary><p>The number of associations for the managed nodes.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAggregatedAssociationOverviewInstanceAssociationStatusAggregatedCount AssociationOverviewInstanceAssociationStatusAggregatedCount { get; set; }
        /// <summary><p>The status of the association.</p></summary>
        string AssociationStatus { get; set; }
        /// <summary><p>The fully qualified host name of the managed node.</p></summary>
        string ComputerName { get; set; }
        /// <summary><p>The IP address of the managed node.</p></summary>
        string IPAddress { get; set; }
        /// <summary>
        /// <p>The Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed node. This call doesn't
        /// return the IAM role for Amazon Elastic Compute Cloud (Amazon EC2) instances. To retrieve the IAM role for an EC2 instance,
        /// use the Amazon EC2 <code>DescribeInstances</code> operation. For information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html'>DescribeInstances</a>
        /// in the <i>Amazon EC2 API Reference</i> or <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html'>describe-instances</a>
        /// in the <i>Amazon Web Services CLI Command Reference</i>.</p>
        /// </summary>
        string IamRole { get; set; }
        /// <summary><p>The managed node ID. </p></summary>
        string InstanceId { get; set; }
        /// <summary>
        /// <p>Indicates whether the latest version of SSM Agent is running on your Linux managed node. This field doesn't indicate
        /// whether or not the latest version is installed on Windows managed nodes, because some older versions of Windows Server
        /// use the EC2Config service to process Systems Manager requests.</p>
        /// </summary>
        bool? IsLatestVersion { get; set; }
        /// <summary><p>The date the association was last run.</p></summary>
        global::System.DateTime? LastAssociationExecutionDate { get; set; }
        /// <summary>
        /// <p>The date and time when the agent last pinged the Systems Manager service. </p>
        /// </summary>
        global::System.DateTime? LastPingDateTime { get; set; }
        /// <summary><p>The last date the association was successfully run.</p></summary>
        global::System.DateTime? LastSuccessfulAssociationExecutionDate { get; set; }
        /// <summary>
        /// <p>The name assigned to an on-premises server, edge device, or virtual machine (VM) when it is activated as a Systems
        /// Manager managed node. The name is specified as the <code>DefaultInstanceName</code> property using the <a>CreateActivation</a>
        /// command. It is applied to the managed node by specifying the Activation Code and Activation ID when you install SSM Agent
        /// on the node, as explained in <a href='https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-linux.html'>Install
        /// SSM Agent for a hybrid and multicloud environment (Linux)</a> and <a href='https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-win.html'>Install
        /// SSM Agent for a hybrid and multicloud environment (Windows)</a>. To retrieve the <code>Name</code> tag of an EC2 instance,
        /// use the Amazon EC2 <code>DescribeInstances</code> operation. For information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html'>DescribeInstances</a>
        /// in the <i>Amazon EC2 API Reference</i> or <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html'>describe-instances</a>
        /// in the <i>Amazon Web Services CLI Command Reference</i>.</p>
        /// </summary>
        string Name { get; set; }
        /// <summary>
        /// <p>Connection status of SSM Agent. </p> <note> <p>The status <code>Inactive</code> has been deprecated and is no longer
        /// in use.</p> </note>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPingStatusEnumValue PingStatus { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PingStatus? PingStatusValue { get; set; }
        /// <summary><p>The name of the operating system platform running on your managed node. </p></summary>
        string PlatformName { get; set; }
        /// <summary><p>The operating system platform type. </p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformTypeEnumValue PlatformType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformType? PlatformTypeValue { get; set; }
        /// <summary><p>The version of the OS platform running on your managed node. </p></summary>
        string PlatformVersion { get; set; }
        /// <summary>
        /// <p>The date the server or VM was registered with Amazon Web Services as a managed node.</p>
        /// </summary>
        global::System.DateTime? RegistrationDate { get; set; }
        /// <summary>
        /// <p>The type of instance. Instances are either EC2 instances or managed instances. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceTypeEnumValue ResourceType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType? ResourceTypeValue { get; set; }
        /// <summary>
        /// <p>The ID of the source resource. For IoT Greengrass devices, <code>SourceId</code> is the Thing name. </p>
        /// </summary>
        string SourceId { get; set; }
        /// <summary>
        /// <p>The type of the source resource. For IoT Greengrass devices, <code>SourceType</code> is <code>AWS::IoT::Thing</code>.
        /// </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValue SourceType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType? SourceTypeValue { get; set; }

    }
}