// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of Device</summary>
    public partial class Device :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDevice,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceInternal
    {

        /// <summary>Backing field for <see cref="ContainerPath" /> property.</summary>
        private string _containerPath;

        /// <summary>The path inside the container at which to expose the host device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ContainerPath { get => this._containerPath; set => this._containerPath = value; }

        /// <summary>Backing field for <see cref="HostPath" /> property.</summary>
        private string _hostPath;

        /// <summary>The path for the device on the host container instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string HostPath { get => this._hostPath; set => this._hostPath = value; }

        /// <summary>Backing field for <see cref="Permission" /> property.</summary>
        private string[] _permission;

        /// <summary>
        /// The explicit permissions to provide to the container for the device. By default, the container has permissions for ``read``,
        /// ``write``, and ``mknod`` for the device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Permission { get => this._permission; set => this._permission = value; }

        /// <summary>Creates an new <see cref="Device" /> instance.</summary>
        public Device()
        {

        }
    }
    /// Definition of Device
    public partial interface IDevice :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>The path inside the container at which to expose the host device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The path inside the container at which to expose the host device.",
        SerializedName = @"containerPath",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerPath { get; set; }
        /// <summary>The path for the device on the host container instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The path for the device on the host container instance.",
        SerializedName = @"hostPath",
        PossibleTypes = new [] { typeof(string) })]
        string HostPath { get; set; }
        /// <summary>
        /// The explicit permissions to provide to the container for the device. By default, the container has permissions for ``read``,
        /// ``write``, and ``mknod`` for the device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The explicit permissions to provide to the container for the device. By default, the container has permissions for ``read``, ``write``, and ``mknod`` for the device.",
        SerializedName = @"permissions",
        PossibleTypes = new [] { typeof(string) })]
        string[] Permission { get; set; }

    }
    /// Definition of Device
    internal partial interface IDeviceInternal

    {
        /// <summary>The path inside the container at which to expose the host device.</summary>
        string ContainerPath { get; set; }
        /// <summary>The path for the device on the host container instance.</summary>
        string HostPath { get; set; }
        /// <summary>
        /// The explicit permissions to provide to the container for the device. By default, the container has permissions for ``read``,
        /// ``write``, and ``mknod`` for the device.
        /// </summary>
        string[] Permission { get; set; }

    }
}