// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of MaxAgeRule</summary>
    public partial class MaxAgeRule :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRule,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRuleInternal
    {

        /// <summary>Backing field for <see cref="DeleteSourceFromS3" /> property.</summary>
        private bool? _deleteSourceFromS3;

        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? DeleteSourceFromS3 { get => this._deleteSourceFromS3; set => this._deleteSourceFromS3 = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="MaxAgeInDay" /> property.</summary>
        private int? _maxAgeInDay;

        /// <summary>Specify the number of days to retain an application versions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? MaxAgeInDay { get => this._maxAgeInDay; set => this._maxAgeInDay = value; }

        /// <summary>Creates an new <see cref="MaxAgeRule" /> instance.</summary>
        public MaxAgeRule()
        {

        }
    }
    /// Definition of MaxAgeRule
    public partial interface IMaxAgeRule :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.",
        SerializedName = @"deleteSourceFromS3",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify true to apply the rule, or false to disable it.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Specify the number of days to retain an application versions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the number of days to retain an application versions.",
        SerializedName = @"maxAgeInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxAgeInDay { get; set; }

    }
    /// Definition of MaxAgeRule
    internal partial interface IMaxAgeRuleInternal

    {
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        bool? DeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        bool? Enabled { get; set; }
        /// <summary>Specify the number of days to retain an application versions.</summary>
        int? MaxAgeInDay { get; set; }

    }
}