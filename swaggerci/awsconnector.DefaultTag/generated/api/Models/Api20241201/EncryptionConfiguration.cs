// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of EncryptionConfiguration</summary>
    public partial class EncryptionConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfigurationInternal
    {

        /// <summary>Backing field for <see cref="EncryptionType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EncryptionConfigurationEncryptionType? _encryptionType;

        /// <summary>
        /// The encryption type to use. If you use the ``KMS`` encryption type, the contents of the repository will be encrypted using
        /// server-side encryption with KMSlong key stored in KMS. When you use KMS to encrypt your data, you can either use the default
        /// AWS managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see
        /// [Protecting data using server-side encryption with an key stored in (SSE-KMS)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html)
        /// in the *Amazon Simple Storage Service Console Developer Guide*. If you use the ``AES256`` encryption type, Amazon ECR
        /// uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an
        /// AES-256 encryption algorithm. For more information, see [Protecting data using server-side encryption with Amazon S3-managed
        /// encryption keys (SSE-S3)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html) in the *Ama
        /// The encryption type to use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EncryptionConfigurationEncryptionType? EncryptionType { get => this._encryptionType; set => this._encryptionType = value; }

        /// <summary>Backing field for <see cref="KmsKey" /> property.</summary>
        private string _kmsKey;

        /// <summary>
        /// If you use the ``KMS`` encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the
        /// KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default
        /// AWS managed KMS key for Amazon ECR will be used. If you use the KMS encryption type, specify the CMK to use for encryption.
        /// The alias, key ID, or full ARN of the CMK can be specified. The key must exist in the same Region as the repository. If
        /// no key is specified, the default AWS managed CMK for Amazon ECR will be used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string KmsKey { get => this._kmsKey; set => this._kmsKey = value; }

        /// <summary>Creates an new <see cref="EncryptionConfiguration" /> instance.</summary>
        public EncryptionConfiguration()
        {

        }
    }
    /// Definition of EncryptionConfiguration
    public partial interface IEncryptionConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The encryption type to use. If you use the ``KMS`` encryption type, the contents of the repository will be encrypted using
        /// server-side encryption with KMSlong key stored in KMS. When you use KMS to encrypt your data, you can either use the default
        /// AWS managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see
        /// [Protecting data using server-side encryption with an key stored in (SSE-KMS)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html)
        /// in the *Amazon Simple Storage Service Console Developer Guide*. If you use the ``AES256`` encryption type, Amazon ECR
        /// uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an
        /// AES-256 encryption algorithm. For more information, see [Protecting data using server-side encryption with Amazon S3-managed
        /// encryption keys (SSE-S3)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html) in the *Ama
        /// The encryption type to use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The encryption type to use. If you use the ``KMS`` encryption type, the contents of the repository will be encrypted using server-side encryption with KMSlong key stored in KMS. When you use KMS to encrypt your data, you can either use the default AWS managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see [Protecting data using server-side encryption with an key stored in (SSE-KMS)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html) in the *Amazon Simple Storage Service Console Developer Guide*. If you use the ``AES256`` encryption type, Amazon ECR uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an AES-256 encryption algorithm. For more information, see [Protecting data using server-side encryption with Amazon S3-managed encryption keys (SSE-S3)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html) in the *Ama The encryption type to use.",
        SerializedName = @"encryptionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EncryptionConfigurationEncryptionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EncryptionConfigurationEncryptionType? EncryptionType { get; set; }
        /// <summary>
        /// If you use the ``KMS`` encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the
        /// KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default
        /// AWS managed KMS key for Amazon ECR will be used. If you use the KMS encryption type, specify the CMK to use for encryption.
        /// The alias, key ID, or full ARN of the CMK can be specified. The key must exist in the same Region as the repository. If
        /// no key is specified, the default AWS managed CMK for Amazon ECR will be used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If you use the ``KMS`` encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default AWS managed KMS key for Amazon ECR will be used. If you use the KMS encryption type, specify the CMK to use for encryption. The alias, key ID, or full ARN of the CMK can be specified. The key must exist in the same Region as the repository. If no key is specified, the default AWS managed CMK for Amazon ECR will be used.",
        SerializedName = @"kmsKey",
        PossibleTypes = new [] { typeof(string) })]
        string KmsKey { get; set; }

    }
    /// Definition of EncryptionConfiguration
    internal partial interface IEncryptionConfigurationInternal

    {
        /// <summary>
        /// The encryption type to use. If you use the ``KMS`` encryption type, the contents of the repository will be encrypted using
        /// server-side encryption with KMSlong key stored in KMS. When you use KMS to encrypt your data, you can either use the default
        /// AWS managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see
        /// [Protecting data using server-side encryption with an key stored in (SSE-KMS)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html)
        /// in the *Amazon Simple Storage Service Console Developer Guide*. If you use the ``AES256`` encryption type, Amazon ECR
        /// uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an
        /// AES-256 encryption algorithm. For more information, see [Protecting data using server-side encryption with Amazon S3-managed
        /// encryption keys (SSE-S3)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html) in the *Ama
        /// The encryption type to use.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EncryptionConfigurationEncryptionType? EncryptionType { get; set; }
        /// <summary>
        /// If you use the ``KMS`` encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the
        /// KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default
        /// AWS managed KMS key for Amazon ECR will be used. If you use the KMS encryption type, specify the CMK to use for encryption.
        /// The alias, key ID, or full ARN of the CMK can be specified. The key must exist in the same Region as the repository. If
        /// no key is specified, the default AWS managed CMK for Amazon ECR will be used.
        /// </summary>
        string KmsKey { get; set; }

    }
}