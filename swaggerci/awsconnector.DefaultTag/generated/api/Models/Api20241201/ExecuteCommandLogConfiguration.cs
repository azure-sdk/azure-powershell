// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ExecuteCommandLogConfiguration</summary>
    public partial class ExecuteCommandLogConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IExecuteCommandLogConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IExecuteCommandLogConfigurationInternal
    {

        /// <summary>Backing field for <see cref="CloudWatchEncryptionEnabled" /> property.</summary>
        private bool? _cloudWatchEncryptionEnabled;

        /// <summary>
        /// Determines whether to use encryption on the CloudWatch logs. If not specified, encryption will be off.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? CloudWatchEncryptionEnabled { get => this._cloudWatchEncryptionEnabled; set => this._cloudWatchEncryptionEnabled = value; }

        /// <summary>Backing field for <see cref="CloudWatchLogGroupName" /> property.</summary>
        private string _cloudWatchLogGroupName;

        /// <summary>
        /// The name of the CloudWatch log group to send logs to. The CloudWatch log group must already be created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string CloudWatchLogGroupName { get => this._cloudWatchLogGroupName; set => this._cloudWatchLogGroupName = value; }

        /// <summary>Backing field for <see cref="S3BucketName" /> property.</summary>
        private string _s3BucketName;

        /// <summary>
        /// The name of the S3 bucket to send logs to. The S3 bucket must already be created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string S3BucketName { get => this._s3BucketName; set => this._s3BucketName = value; }

        /// <summary>Backing field for <see cref="S3EncryptionEnabled" /> property.</summary>
        private bool? _s3EncryptionEnabled;

        /// <summary>
        /// Determines whether to use encryption on the S3 logs. If not specified, encryption is not used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? S3EncryptionEnabled { get => this._s3EncryptionEnabled; set => this._s3EncryptionEnabled = value; }

        /// <summary>Backing field for <see cref="S3KeyPrefix" /> property.</summary>
        private string _s3KeyPrefix;

        /// <summary>An optional folder in the S3 bucket to place logs in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string S3KeyPrefix { get => this._s3KeyPrefix; set => this._s3KeyPrefix = value; }

        /// <summary>Creates an new <see cref="ExecuteCommandLogConfiguration" /> instance.</summary>
        public ExecuteCommandLogConfiguration()
        {

        }
    }
    /// Definition of ExecuteCommandLogConfiguration
    public partial interface IExecuteCommandLogConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Determines whether to use encryption on the CloudWatch logs. If not specified, encryption will be off.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines whether to use encryption on the CloudWatch logs. If not specified, encryption will be off.",
        SerializedName = @"cloudWatchEncryptionEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CloudWatchEncryptionEnabled { get; set; }
        /// <summary>
        /// The name of the CloudWatch log group to send logs to. The CloudWatch log group must already be created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the CloudWatch log group to send logs to.  The CloudWatch log group must already be created.",
        SerializedName = @"cloudWatchLogGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string CloudWatchLogGroupName { get; set; }
        /// <summary>
        /// The name of the S3 bucket to send logs to. The S3 bucket must already be created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the S3 bucket to send logs to.  The S3 bucket must already be created.",
        SerializedName = @"s3BucketName",
        PossibleTypes = new [] { typeof(string) })]
        string S3BucketName { get; set; }
        /// <summary>
        /// Determines whether to use encryption on the S3 logs. If not specified, encryption is not used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines whether to use encryption on the S3 logs. If not specified, encryption is not used.",
        SerializedName = @"s3EncryptionEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? S3EncryptionEnabled { get; set; }
        /// <summary>An optional folder in the S3 bucket to place logs in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An optional folder in the S3 bucket to place logs in.",
        SerializedName = @"s3KeyPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string S3KeyPrefix { get; set; }

    }
    /// Definition of ExecuteCommandLogConfiguration
    internal partial interface IExecuteCommandLogConfigurationInternal

    {
        /// <summary>
        /// Determines whether to use encryption on the CloudWatch logs. If not specified, encryption will be off.
        /// </summary>
        bool? CloudWatchEncryptionEnabled { get; set; }
        /// <summary>
        /// The name of the CloudWatch log group to send logs to. The CloudWatch log group must already be created.
        /// </summary>
        string CloudWatchLogGroupName { get; set; }
        /// <summary>
        /// The name of the S3 bucket to send logs to. The S3 bucket must already be created.
        /// </summary>
        string S3BucketName { get; set; }
        /// <summary>
        /// Determines whether to use encryption on the S3 logs. If not specified, encryption is not used.
        /// </summary>
        bool? S3EncryptionEnabled { get; set; }
        /// <summary>An optional folder in the S3 bucket to place logs in.</summary>
        string S3KeyPrefix { get; set; }

    }
}