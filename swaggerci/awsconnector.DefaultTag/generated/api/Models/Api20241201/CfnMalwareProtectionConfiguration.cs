// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of CFNMalwareProtectionConfiguration</summary>
    public partial class CfnMalwareProtectionConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfigurationInternal
    {

        /// <summary>Internal Acessors for ScanEc2InstanceWithFinding</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnScanEc2InstanceWithFindingsConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfigurationInternal.ScanEc2InstanceWithFinding { get => (this._scanEc2InstanceWithFinding = this._scanEc2InstanceWithFinding ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CfnScanEc2InstanceWithFindingsConfiguration()); set { {_scanEc2InstanceWithFinding = value;} } }

        /// <summary>Backing field for <see cref="ScanEc2InstanceWithFinding" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnScanEc2InstanceWithFindingsConfiguration _scanEc2InstanceWithFinding;

        /// <summary>Property scanEc2InstanceWithFindings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnScanEc2InstanceWithFindingsConfiguration ScanEc2InstanceWithFinding { get => (this._scanEc2InstanceWithFinding = this._scanEc2InstanceWithFinding ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CfnScanEc2InstanceWithFindingsConfiguration()); set => this._scanEc2InstanceWithFinding = value; }

        /// <summary>Property ebsVolumes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ScanEc2InstanceWithFindingEbsVolume { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnScanEc2InstanceWithFindingsConfigurationInternal)ScanEc2InstanceWithFinding).EbsVolume; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnScanEc2InstanceWithFindingsConfigurationInternal)ScanEc2InstanceWithFinding).EbsVolume = value ?? default(bool); }

        /// <summary>Creates an new <see cref="CfnMalwareProtectionConfiguration" /> instance.</summary>
        public CfnMalwareProtectionConfiguration()
        {

        }
    }
    /// Definition of CFNMalwareProtectionConfiguration
    public partial interface ICfnMalwareProtectionConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property ebsVolumes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property ebsVolumes",
        SerializedName = @"ebsVolumes",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ScanEc2InstanceWithFindingEbsVolume { get; set; }

    }
    /// Definition of CFNMalwareProtectionConfiguration
    internal partial interface ICfnMalwareProtectionConfigurationInternal

    {
        /// <summary>Property scanEc2InstanceWithFindings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnScanEc2InstanceWithFindingsConfiguration ScanEc2InstanceWithFinding { get; set; }
        /// <summary>Property ebsVolumes</summary>
        bool? ScanEc2InstanceWithFindingEbsVolume { get; set; }

    }
}