// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of DistributionConfig</summary>
    [System.ComponentModel.TypeConverter(typeof(DistributionConfigTypeConverter))]
    public partial class DistributionConfig
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DistributionConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfig" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfig DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new DistributionConfig(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DistributionConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfig" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfig DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new DistributionConfig(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DistributionConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal DistributionConfig(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("CustomOrigin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOrigin = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOrigin) content.GetValueForProperty("CustomOrigin",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOrigin, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LegacyCustomOriginTypeConverter.ConvertFrom);
            }
            if (content.Contains("Logging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Logging = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogging) content.GetValueForProperty("Logging",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Logging, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingTypeConverter.ConvertFrom);
            }
            if (content.Contains("OriginGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroup = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroups) content.GetValueForProperty("OriginGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroup, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OriginGroupsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Restriction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Restriction = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictions) content.GetValueForProperty("Restriction",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Restriction, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RestrictionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("S3Origin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3Origin = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyS3Origin) content.GetValueForProperty("S3Origin",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3Origin, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LegacyS3OriginTypeConverter.ConvertFrom);
            }
            if (content.Contains("ViewerCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificate = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificate) content.GetValueForProperty("ViewerCertificate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificate, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ViewerCertificateTypeConverter.ConvertFrom);
            }
            if (content.Contains("Alias"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Alias = (string[]) content.GetValueForProperty("Alias",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Alias, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CnamE"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CnamE = (string[]) content.GetValueForProperty("CnamE",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CnamE, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CacheBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CacheBehavior = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICacheBehavior[]) content.GetValueForProperty("CacheBehavior",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CacheBehavior, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICacheBehavior>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CacheBehaviorTypeConverter.ConvertFrom));
            }
            if (content.Contains("Comment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Comment = (string) content.GetValueForProperty("Comment",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Comment, global::System.Convert.ToString);
            }
            if (content.Contains("ContinuousDeploymentPolicyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ContinuousDeploymentPolicyId = (string) content.GetValueForProperty("ContinuousDeploymentPolicyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ContinuousDeploymentPolicyId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomErrorResponse"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomErrorResponse = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICustomErrorResponse[]) content.GetValueForProperty("CustomErrorResponse",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomErrorResponse, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICustomErrorResponse>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CustomErrorResponseTypeConverter.ConvertFrom));
            }
            if (content.Contains("DefaultRootObject"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).DefaultRootObject = (string) content.GetValueForProperty("DefaultRootObject",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).DefaultRootObject, global::System.Convert.ToString);
            }
            if (content.Contains("Enabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Enabled = (bool?) content.GetValueForProperty("Enabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Enabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HttpVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).HttpVersion = (string) content.GetValueForProperty("HttpVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).HttpVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Ipv6Enabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Ipv6Enabled = (bool?) content.GetValueForProperty("Ipv6Enabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Ipv6Enabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Origin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Origin = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOrigin[]) content.GetValueForProperty("Origin",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Origin, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOrigin>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OriginTypeConverter.ConvertFrom));
            }
            if (content.Contains("PriceClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).PriceClass = (string) content.GetValueForProperty("PriceClass",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).PriceClass, global::System.Convert.ToString);
            }
            if (content.Contains("Staging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Staging = (bool?) content.GetValueForProperty("Staging",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Staging, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WebAclId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).WebAclId = (string) content.GetValueForProperty("WebAclId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).WebAclId, global::System.Convert.ToString);
            }
            if (content.Contains("DefaultCacheBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).DefaultCacheBehavior = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDefaultCacheBehavior) content.GetValueForProperty("DefaultCacheBehavior",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).DefaultCacheBehavior, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DefaultCacheBehaviorTypeConverter.ConvertFrom);
            }
            if (content.Contains("LoggingBucket"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingBucket = (string) content.GetValueForProperty("LoggingBucket",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingBucket, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingPrefix = (string) content.GetValueForProperty("LoggingPrefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingPrefix, global::System.Convert.ToString);
            }
            if (content.Contains("OriginGroupItem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroupItem = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroup[]) content.GetValueForProperty("OriginGroupItem",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroupItem, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroup>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OriginGroupTypeConverter.ConvertFrom));
            }
            if (content.Contains("OriginGroupQuantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroupQuantity = (int?) content.GetValueForProperty("OriginGroupQuantity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroupQuantity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RestrictionGeoRestriction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).RestrictionGeoRestriction = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGeoRestriction) content.GetValueForProperty("RestrictionGeoRestriction",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).RestrictionGeoRestriction, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.GeoRestrictionTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomOriginDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginDnsName = (string) content.GetValueForProperty("CustomOriginDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("CustomOriginHttpPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginHttpPort = (int?) content.GetValueForProperty("CustomOriginHttpPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginHttpPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CustomOriginHttpsPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginHttpsPort = (int?) content.GetValueForProperty("CustomOriginHttpsPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginHttpsPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CustomOriginProtocolPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginProtocolPolicy = (string) content.GetValueForProperty("CustomOriginProtocolPolicy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginProtocolPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("CustomOriginSslProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginSslProtocol = (string[]) content.GetValueForProperty("CustomOriginSslProtocol",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginSslProtocol, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LoggingIncludeCooky"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingIncludeCooky = (bool?) content.GetValueForProperty("LoggingIncludeCooky",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingIncludeCooky, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("GeoRestrictionLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).GeoRestrictionLocation = (string[]) content.GetValueForProperty("GeoRestrictionLocation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).GeoRestrictionLocation, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("S3OriginDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3OriginDnsName = (string) content.GetValueForProperty("S3OriginDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3OriginDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("S3OriginAccessIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3OriginAccessIdentity = (string) content.GetValueForProperty("S3OriginAccessIdentity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3OriginAccessIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("ViewerCertificateAcmCertificateArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateAcmCertificateArn = (string) content.GetValueForProperty("ViewerCertificateAcmCertificateArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateAcmCertificateArn, global::System.Convert.ToString);
            }
            if (content.Contains("ViewerCertificateCloudFrontDefaultCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateCloudFrontDefaultCertificate = (bool?) content.GetValueForProperty("ViewerCertificateCloudFrontDefaultCertificate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateCloudFrontDefaultCertificate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ViewerCertificateIamCertificateId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateIamCertificateId = (string) content.GetValueForProperty("ViewerCertificateIamCertificateId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateIamCertificateId, global::System.Convert.ToString);
            }
            if (content.Contains("ViewerCertificateMinimumProtocolVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateMinimumProtocolVersion = (string) content.GetValueForProperty("ViewerCertificateMinimumProtocolVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateMinimumProtocolVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ViewerCertificateSslSupportMethod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateSslSupportMethod = (string) content.GetValueForProperty("ViewerCertificateSslSupportMethod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateSslSupportMethod, global::System.Convert.ToString);
            }
            if (content.Contains("GeoRestrictionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).GeoRestrictionType = (string) content.GetValueForProperty("GeoRestrictionType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).GeoRestrictionType, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DistributionConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal DistributionConfig(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("CustomOrigin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOrigin = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOrigin) content.GetValueForProperty("CustomOrigin",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOrigin, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LegacyCustomOriginTypeConverter.ConvertFrom);
            }
            if (content.Contains("Logging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Logging = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogging) content.GetValueForProperty("Logging",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Logging, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingTypeConverter.ConvertFrom);
            }
            if (content.Contains("OriginGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroup = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroups) content.GetValueForProperty("OriginGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroup, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OriginGroupsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Restriction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Restriction = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictions) content.GetValueForProperty("Restriction",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Restriction, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RestrictionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("S3Origin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3Origin = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyS3Origin) content.GetValueForProperty("S3Origin",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3Origin, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LegacyS3OriginTypeConverter.ConvertFrom);
            }
            if (content.Contains("ViewerCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificate = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificate) content.GetValueForProperty("ViewerCertificate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificate, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ViewerCertificateTypeConverter.ConvertFrom);
            }
            if (content.Contains("Alias"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Alias = (string[]) content.GetValueForProperty("Alias",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Alias, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CnamE"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CnamE = (string[]) content.GetValueForProperty("CnamE",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CnamE, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CacheBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CacheBehavior = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICacheBehavior[]) content.GetValueForProperty("CacheBehavior",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CacheBehavior, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICacheBehavior>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CacheBehaviorTypeConverter.ConvertFrom));
            }
            if (content.Contains("Comment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Comment = (string) content.GetValueForProperty("Comment",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Comment, global::System.Convert.ToString);
            }
            if (content.Contains("ContinuousDeploymentPolicyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ContinuousDeploymentPolicyId = (string) content.GetValueForProperty("ContinuousDeploymentPolicyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ContinuousDeploymentPolicyId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomErrorResponse"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomErrorResponse = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICustomErrorResponse[]) content.GetValueForProperty("CustomErrorResponse",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomErrorResponse, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICustomErrorResponse>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CustomErrorResponseTypeConverter.ConvertFrom));
            }
            if (content.Contains("DefaultRootObject"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).DefaultRootObject = (string) content.GetValueForProperty("DefaultRootObject",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).DefaultRootObject, global::System.Convert.ToString);
            }
            if (content.Contains("Enabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Enabled = (bool?) content.GetValueForProperty("Enabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Enabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HttpVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).HttpVersion = (string) content.GetValueForProperty("HttpVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).HttpVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Ipv6Enabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Ipv6Enabled = (bool?) content.GetValueForProperty("Ipv6Enabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Ipv6Enabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Origin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Origin = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOrigin[]) content.GetValueForProperty("Origin",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Origin, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOrigin>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OriginTypeConverter.ConvertFrom));
            }
            if (content.Contains("PriceClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).PriceClass = (string) content.GetValueForProperty("PriceClass",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).PriceClass, global::System.Convert.ToString);
            }
            if (content.Contains("Staging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Staging = (bool?) content.GetValueForProperty("Staging",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).Staging, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WebAclId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).WebAclId = (string) content.GetValueForProperty("WebAclId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).WebAclId, global::System.Convert.ToString);
            }
            if (content.Contains("DefaultCacheBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).DefaultCacheBehavior = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDefaultCacheBehavior) content.GetValueForProperty("DefaultCacheBehavior",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).DefaultCacheBehavior, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DefaultCacheBehaviorTypeConverter.ConvertFrom);
            }
            if (content.Contains("LoggingBucket"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingBucket = (string) content.GetValueForProperty("LoggingBucket",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingBucket, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingPrefix = (string) content.GetValueForProperty("LoggingPrefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingPrefix, global::System.Convert.ToString);
            }
            if (content.Contains("OriginGroupItem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroupItem = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroup[]) content.GetValueForProperty("OriginGroupItem",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroupItem, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroup>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OriginGroupTypeConverter.ConvertFrom));
            }
            if (content.Contains("OriginGroupQuantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroupQuantity = (int?) content.GetValueForProperty("OriginGroupQuantity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).OriginGroupQuantity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RestrictionGeoRestriction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).RestrictionGeoRestriction = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGeoRestriction) content.GetValueForProperty("RestrictionGeoRestriction",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).RestrictionGeoRestriction, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.GeoRestrictionTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomOriginDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginDnsName = (string) content.GetValueForProperty("CustomOriginDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("CustomOriginHttpPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginHttpPort = (int?) content.GetValueForProperty("CustomOriginHttpPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginHttpPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CustomOriginHttpsPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginHttpsPort = (int?) content.GetValueForProperty("CustomOriginHttpsPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginHttpsPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CustomOriginProtocolPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginProtocolPolicy = (string) content.GetValueForProperty("CustomOriginProtocolPolicy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginProtocolPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("CustomOriginSslProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginSslProtocol = (string[]) content.GetValueForProperty("CustomOriginSslProtocol",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).CustomOriginSslProtocol, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LoggingIncludeCooky"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingIncludeCooky = (bool?) content.GetValueForProperty("LoggingIncludeCooky",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).LoggingIncludeCooky, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("GeoRestrictionLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).GeoRestrictionLocation = (string[]) content.GetValueForProperty("GeoRestrictionLocation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).GeoRestrictionLocation, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("S3OriginDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3OriginDnsName = (string) content.GetValueForProperty("S3OriginDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3OriginDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("S3OriginAccessIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3OriginAccessIdentity = (string) content.GetValueForProperty("S3OriginAccessIdentity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).S3OriginAccessIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("ViewerCertificateAcmCertificateArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateAcmCertificateArn = (string) content.GetValueForProperty("ViewerCertificateAcmCertificateArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateAcmCertificateArn, global::System.Convert.ToString);
            }
            if (content.Contains("ViewerCertificateCloudFrontDefaultCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateCloudFrontDefaultCertificate = (bool?) content.GetValueForProperty("ViewerCertificateCloudFrontDefaultCertificate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateCloudFrontDefaultCertificate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ViewerCertificateIamCertificateId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateIamCertificateId = (string) content.GetValueForProperty("ViewerCertificateIamCertificateId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateIamCertificateId, global::System.Convert.ToString);
            }
            if (content.Contains("ViewerCertificateMinimumProtocolVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateMinimumProtocolVersion = (string) content.GetValueForProperty("ViewerCertificateMinimumProtocolVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateMinimumProtocolVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ViewerCertificateSslSupportMethod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateSslSupportMethod = (string) content.GetValueForProperty("ViewerCertificateSslSupportMethod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).ViewerCertificateSslSupportMethod, global::System.Convert.ToString);
            }
            if (content.Contains("GeoRestrictionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).GeoRestrictionType = (string) content.GetValueForProperty("GeoRestrictionType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal)this).GeoRestrictionType, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="DistributionConfig" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="DistributionConfig" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfig FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of DistributionConfig
    [System.ComponentModel.TypeConverter(typeof(DistributionConfigTypeConverter))]
    public partial interface IDistributionConfig

    {

    }
}