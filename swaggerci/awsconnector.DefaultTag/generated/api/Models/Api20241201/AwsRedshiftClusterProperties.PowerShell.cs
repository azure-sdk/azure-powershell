// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsRedshiftCluster</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsRedshiftClusterPropertiesTypeConverter))]
    public partial class AwsRedshiftClusterProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRedshiftClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsRedshiftClusterProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Endpoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpointAutoGenerated3) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Endpoint, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EndpointAutoGenerated3TypeConverter.ConvertFrom);
            }
            if (content.Contains("LoggingProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingProperty = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingProperties) content.GetValueForProperty("LoggingProperty",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingProperty, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AllowVersionUpgrade"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AllowVersionUpgrade = (bool?) content.GetValueForProperty("AllowVersionUpgrade",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AllowVersionUpgrade, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AquaConfigurationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AquaConfigurationStatus = (string) content.GetValueForProperty("AquaConfigurationStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AquaConfigurationStatus, global::System.Convert.ToString);
            }
            if (content.Contains("AutomatedSnapshotRetentionPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AutomatedSnapshotRetentionPeriod = (int?) content.GetValueForProperty("AutomatedSnapshotRetentionPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AutomatedSnapshotRetentionPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZone = (string) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("AvailabilityZoneRelocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZoneRelocation = (bool?) content.GetValueForProperty("AvailabilityZoneRelocation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZoneRelocation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AvailabilityZoneRelocationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZoneRelocationStatus = (string) content.GetValueForProperty("AvailabilityZoneRelocationStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZoneRelocationStatus, global::System.Convert.ToString);
            }
            if (content.Contains("Classic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Classic = (bool?) content.GetValueForProperty("Classic",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Classic, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ClusterIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterIdentifier = (string) content.GetValueForProperty("ClusterIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterNamespaceArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterNamespaceArn = (string) content.GetValueForProperty("ClusterNamespaceArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterNamespaceArn, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterParameterGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterParameterGroupName = (string) content.GetValueForProperty("ClusterParameterGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterParameterGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterSecurityGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterSecurityGroup = (string[]) content.GetValueForProperty("ClusterSecurityGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterSecurityGroup, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ClusterSubnetGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterSubnetGroupName = (string) content.GetValueForProperty("ClusterSubnetGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterSubnetGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterType = (string) content.GetValueForProperty("ClusterType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterType, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterVersion = (string) content.GetValueForProperty("ClusterVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterVersion, global::System.Convert.ToString);
            }
            if (content.Contains("DbName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DbName = (string) content.GetValueForProperty("DbName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DbName, global::System.Convert.ToString);
            }
            if (content.Contains("DeferMaintenance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenance = (bool?) content.GetValueForProperty("DeferMaintenance",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenance, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DeferMaintenanceDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceDuration = (int?) content.GetValueForProperty("DeferMaintenanceDuration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceDuration, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DeferMaintenanceEndTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceEndTime = (string) content.GetValueForProperty("DeferMaintenanceEndTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceEndTime, global::System.Convert.ToString);
            }
            if (content.Contains("DeferMaintenanceIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceIdentifier = (string) content.GetValueForProperty("DeferMaintenanceIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("DeferMaintenanceStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceStartTime = (string) content.GetValueForProperty("DeferMaintenanceStartTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceStartTime, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DestinationRegion = (string) content.GetValueForProperty("DestinationRegion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DestinationRegion, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ElasticIP = (string) content.GetValueForProperty("ElasticIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ElasticIP, global::System.Convert.ToString);
            }
            if (content.Contains("Encrypted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Encrypted = (bool?) content.GetValueForProperty("Encrypted",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Encrypted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnhancedVpcRouting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EnhancedVpcRouting = (bool?) content.GetValueForProperty("EnhancedVpcRouting",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EnhancedVpcRouting, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HsmClientCertificateIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).HsmClientCertificateIdentifier = (string) content.GetValueForProperty("HsmClientCertificateIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).HsmClientCertificateIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("HsmConfigurationIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).HsmConfigurationIdentifier = (string) content.GetValueForProperty("HsmConfigurationIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).HsmConfigurationIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("IamRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).IamRole = (string[]) content.GetValueForProperty("IamRole",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).IamRole, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("KmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).KmsKeyId = (string) content.GetValueForProperty("KmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).KmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceTrackName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MaintenanceTrackName = (string) content.GetValueForProperty("MaintenanceTrackName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MaintenanceTrackName, global::System.Convert.ToString);
            }
            if (content.Contains("ManageMasterPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ManageMasterPassword = (bool?) content.GetValueForProperty("ManageMasterPassword",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ManageMasterPassword, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ManualSnapshotRetentionPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ManualSnapshotRetentionPeriod = (int?) content.GetValueForProperty("ManualSnapshotRetentionPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ManualSnapshotRetentionPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MasterPasswordSecretArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterPasswordSecretArn = (string) content.GetValueForProperty("MasterPasswordSecretArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterPasswordSecretArn, global::System.Convert.ToString);
            }
            if (content.Contains("MasterPasswordSecretKmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterPasswordSecretKmsKeyId = (string) content.GetValueForProperty("MasterPasswordSecretKmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterPasswordSecretKmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("MasterUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterUserPassword = (string) content.GetValueForProperty("MasterUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterUserPassword, global::System.Convert.ToString);
            }
            if (content.Contains("MasterUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterUsername = (string) content.GetValueForProperty("MasterUsername",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterUsername, global::System.Convert.ToString);
            }
            if (content.Contains("MultiAz"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MultiAz = (bool?) content.GetValueForProperty("MultiAz",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MultiAz, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NamespaceResourcePolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NamespaceResourcePolicy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) content.GetValueForProperty("NamespaceResourcePolicy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NamespaceResourcePolicy, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NodeType = (string) content.GetValueForProperty("NodeType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NodeType, global::System.Convert.ToString);
            }
            if (content.Contains("NumberOfNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NumberOfNode = (int?) content.GetValueForProperty("NumberOfNode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NumberOfNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OwnerAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).OwnerAccount = (string) content.GetValueForProperty("OwnerAccount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).OwnerAccount, global::System.Convert.ToString);
            }
            if (content.Contains("Port"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Port = (int?) content.GetValueForProperty("Port",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Port, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PreferredMaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).PreferredMaintenanceWindow = (string) content.GetValueForProperty("PreferredMaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).PreferredMaintenanceWindow, global::System.Convert.ToString);
            }
            if (content.Contains("PubliclyAccessible"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).PubliclyAccessible = (bool?) content.GetValueForProperty("PubliclyAccessible",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).PubliclyAccessible, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ResourceAction = (string) content.GetValueForProperty("ResourceAction",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ResourceAction, global::System.Convert.ToString);
            }
            if (content.Contains("RevisionTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).RevisionTarget = (string) content.GetValueForProperty("RevisionTarget",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).RevisionTarget, global::System.Convert.ToString);
            }
            if (content.Contains("RotateEncryptionKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).RotateEncryptionKey = (bool?) content.GetValueForProperty("RotateEncryptionKey",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).RotateEncryptionKey, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SnapshotClusterIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotClusterIdentifier = (string) content.GetValueForProperty("SnapshotClusterIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotClusterIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("SnapshotCopyGrantName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyGrantName = (string) content.GetValueForProperty("SnapshotCopyGrantName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyGrantName, global::System.Convert.ToString);
            }
            if (content.Contains("SnapshotCopyManual"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyManual = (bool?) content.GetValueForProperty("SnapshotCopyManual",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyManual, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SnapshotCopyRetentionPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyRetentionPeriod = (int?) content.GetValueForProperty("SnapshotCopyRetentionPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyRetentionPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SnapshotIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotIdentifier = (string) content.GetValueForProperty("SnapshotIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated50[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated50>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated50TypeConverter.ConvertFrom));
            }
            if (content.Contains("VpcSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).VpcSecurityGroupId = (string[]) content.GetValueForProperty("VpcSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).VpcSecurityGroupId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EndpointAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EndpointAddress = (string) content.GetValueForProperty("EndpointAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EndpointAddress, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EndpointPort = (string) content.GetValueForProperty("EndpointPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EndpointPort, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingPropertyBucketName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingPropertyBucketName = (string) content.GetValueForProperty("LoggingPropertyBucketName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingPropertyBucketName, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingPropertyS3KeyPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingPropertyS3KeyPrefix = (string) content.GetValueForProperty("LoggingPropertyS3KeyPrefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingPropertyS3KeyPrefix, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRedshiftClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsRedshiftClusterProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Endpoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpointAutoGenerated3) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Endpoint, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EndpointAutoGenerated3TypeConverter.ConvertFrom);
            }
            if (content.Contains("LoggingProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingProperty = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingProperties) content.GetValueForProperty("LoggingProperty",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingProperty, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AllowVersionUpgrade"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AllowVersionUpgrade = (bool?) content.GetValueForProperty("AllowVersionUpgrade",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AllowVersionUpgrade, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AquaConfigurationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AquaConfigurationStatus = (string) content.GetValueForProperty("AquaConfigurationStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AquaConfigurationStatus, global::System.Convert.ToString);
            }
            if (content.Contains("AutomatedSnapshotRetentionPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AutomatedSnapshotRetentionPeriod = (int?) content.GetValueForProperty("AutomatedSnapshotRetentionPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AutomatedSnapshotRetentionPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZone = (string) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("AvailabilityZoneRelocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZoneRelocation = (bool?) content.GetValueForProperty("AvailabilityZoneRelocation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZoneRelocation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AvailabilityZoneRelocationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZoneRelocationStatus = (string) content.GetValueForProperty("AvailabilityZoneRelocationStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).AvailabilityZoneRelocationStatus, global::System.Convert.ToString);
            }
            if (content.Contains("Classic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Classic = (bool?) content.GetValueForProperty("Classic",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Classic, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ClusterIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterIdentifier = (string) content.GetValueForProperty("ClusterIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterNamespaceArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterNamespaceArn = (string) content.GetValueForProperty("ClusterNamespaceArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterNamespaceArn, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterParameterGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterParameterGroupName = (string) content.GetValueForProperty("ClusterParameterGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterParameterGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterSecurityGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterSecurityGroup = (string[]) content.GetValueForProperty("ClusterSecurityGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterSecurityGroup, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ClusterSubnetGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterSubnetGroupName = (string) content.GetValueForProperty("ClusterSubnetGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterSubnetGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterType = (string) content.GetValueForProperty("ClusterType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterType, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterVersion = (string) content.GetValueForProperty("ClusterVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ClusterVersion, global::System.Convert.ToString);
            }
            if (content.Contains("DbName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DbName = (string) content.GetValueForProperty("DbName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DbName, global::System.Convert.ToString);
            }
            if (content.Contains("DeferMaintenance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenance = (bool?) content.GetValueForProperty("DeferMaintenance",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenance, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DeferMaintenanceDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceDuration = (int?) content.GetValueForProperty("DeferMaintenanceDuration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceDuration, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DeferMaintenanceEndTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceEndTime = (string) content.GetValueForProperty("DeferMaintenanceEndTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceEndTime, global::System.Convert.ToString);
            }
            if (content.Contains("DeferMaintenanceIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceIdentifier = (string) content.GetValueForProperty("DeferMaintenanceIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("DeferMaintenanceStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceStartTime = (string) content.GetValueForProperty("DeferMaintenanceStartTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DeferMaintenanceStartTime, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DestinationRegion = (string) content.GetValueForProperty("DestinationRegion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).DestinationRegion, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ElasticIP = (string) content.GetValueForProperty("ElasticIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ElasticIP, global::System.Convert.ToString);
            }
            if (content.Contains("Encrypted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Encrypted = (bool?) content.GetValueForProperty("Encrypted",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Encrypted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnhancedVpcRouting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EnhancedVpcRouting = (bool?) content.GetValueForProperty("EnhancedVpcRouting",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EnhancedVpcRouting, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HsmClientCertificateIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).HsmClientCertificateIdentifier = (string) content.GetValueForProperty("HsmClientCertificateIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).HsmClientCertificateIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("HsmConfigurationIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).HsmConfigurationIdentifier = (string) content.GetValueForProperty("HsmConfigurationIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).HsmConfigurationIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("IamRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).IamRole = (string[]) content.GetValueForProperty("IamRole",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).IamRole, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("KmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).KmsKeyId = (string) content.GetValueForProperty("KmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).KmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceTrackName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MaintenanceTrackName = (string) content.GetValueForProperty("MaintenanceTrackName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MaintenanceTrackName, global::System.Convert.ToString);
            }
            if (content.Contains("ManageMasterPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ManageMasterPassword = (bool?) content.GetValueForProperty("ManageMasterPassword",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ManageMasterPassword, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ManualSnapshotRetentionPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ManualSnapshotRetentionPeriod = (int?) content.GetValueForProperty("ManualSnapshotRetentionPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ManualSnapshotRetentionPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MasterPasswordSecretArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterPasswordSecretArn = (string) content.GetValueForProperty("MasterPasswordSecretArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterPasswordSecretArn, global::System.Convert.ToString);
            }
            if (content.Contains("MasterPasswordSecretKmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterPasswordSecretKmsKeyId = (string) content.GetValueForProperty("MasterPasswordSecretKmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterPasswordSecretKmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("MasterUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterUserPassword = (string) content.GetValueForProperty("MasterUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterUserPassword, global::System.Convert.ToString);
            }
            if (content.Contains("MasterUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterUsername = (string) content.GetValueForProperty("MasterUsername",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MasterUsername, global::System.Convert.ToString);
            }
            if (content.Contains("MultiAz"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MultiAz = (bool?) content.GetValueForProperty("MultiAz",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).MultiAz, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NamespaceResourcePolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NamespaceResourcePolicy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) content.GetValueForProperty("NamespaceResourcePolicy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NamespaceResourcePolicy, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NodeType = (string) content.GetValueForProperty("NodeType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NodeType, global::System.Convert.ToString);
            }
            if (content.Contains("NumberOfNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NumberOfNode = (int?) content.GetValueForProperty("NumberOfNode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).NumberOfNode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OwnerAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).OwnerAccount = (string) content.GetValueForProperty("OwnerAccount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).OwnerAccount, global::System.Convert.ToString);
            }
            if (content.Contains("Port"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Port = (int?) content.GetValueForProperty("Port",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Port, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PreferredMaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).PreferredMaintenanceWindow = (string) content.GetValueForProperty("PreferredMaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).PreferredMaintenanceWindow, global::System.Convert.ToString);
            }
            if (content.Contains("PubliclyAccessible"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).PubliclyAccessible = (bool?) content.GetValueForProperty("PubliclyAccessible",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).PubliclyAccessible, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ResourceAction = (string) content.GetValueForProperty("ResourceAction",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).ResourceAction, global::System.Convert.ToString);
            }
            if (content.Contains("RevisionTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).RevisionTarget = (string) content.GetValueForProperty("RevisionTarget",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).RevisionTarget, global::System.Convert.ToString);
            }
            if (content.Contains("RotateEncryptionKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).RotateEncryptionKey = (bool?) content.GetValueForProperty("RotateEncryptionKey",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).RotateEncryptionKey, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SnapshotClusterIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotClusterIdentifier = (string) content.GetValueForProperty("SnapshotClusterIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotClusterIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("SnapshotCopyGrantName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyGrantName = (string) content.GetValueForProperty("SnapshotCopyGrantName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyGrantName, global::System.Convert.ToString);
            }
            if (content.Contains("SnapshotCopyManual"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyManual = (bool?) content.GetValueForProperty("SnapshotCopyManual",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyManual, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SnapshotCopyRetentionPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyRetentionPeriod = (int?) content.GetValueForProperty("SnapshotCopyRetentionPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotCopyRetentionPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SnapshotIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotIdentifier = (string) content.GetValueForProperty("SnapshotIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).SnapshotIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated50[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated50>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated50TypeConverter.ConvertFrom));
            }
            if (content.Contains("VpcSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).VpcSecurityGroupId = (string[]) content.GetValueForProperty("VpcSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).VpcSecurityGroupId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EndpointAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EndpointAddress = (string) content.GetValueForProperty("EndpointAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EndpointAddress, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EndpointPort = (string) content.GetValueForProperty("EndpointPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).EndpointPort, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingPropertyBucketName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingPropertyBucketName = (string) content.GetValueForProperty("LoggingPropertyBucketName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingPropertyBucketName, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingPropertyS3KeyPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingPropertyS3KeyPrefix = (string) content.GetValueForProperty("LoggingPropertyS3KeyPrefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterPropertiesInternal)this).LoggingPropertyS3KeyPrefix, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRedshiftClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsRedshiftClusterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRedshiftClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsRedshiftClusterProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsRedshiftClusterProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsRedshiftClusterProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRedshiftClusterProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsRedshiftCluster
    [System.ComponentModel.TypeConverter(typeof(AwsRedshiftClusterPropertiesTypeConverter))]
    public partial interface IAwsRedshiftClusterProperties

    {

    }
}