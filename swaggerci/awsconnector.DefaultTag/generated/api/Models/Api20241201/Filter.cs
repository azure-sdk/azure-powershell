// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of Filter</summary>
    public partial class Filter :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilter,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterInternal
    {

        /// <summary>Backing field for <see cref="Contain" /> property.</summary>
        private string[] _contain;

        /// <summary>Property contains</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Contain { get => this._contain; set => this._contain = value; }

        /// <summary>Backing field for <see cref="Eq" /> property.</summary>
        private string[] _eq;

        /// <summary>Property eq</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Eq { get => this._eq; set => this._eq = value; }

        /// <summary>Backing field for <see cref="Exist" /> property.</summary>
        private bool? _exist;

        /// <summary>Property exists</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Exist { get => this._exist; set => this._exist = value; }

        /// <summary>Backing field for <see cref="Neq" /> property.</summary>
        private string[] _neq;

        /// <summary>Property neq</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Neq { get => this._neq; set => this._neq = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private string _property;

        /// <summary>Property property</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Property { get => this._property; set => this._property = value; }

        /// <summary>Creates an new <see cref="Filter" /> instance.</summary>
        public Filter()
        {

        }
    }
    /// Definition of Filter
    public partial interface IFilter :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property contains</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property contains",
        SerializedName = @"contains",
        PossibleTypes = new [] { typeof(string) })]
        string[] Contain { get; set; }
        /// <summary>Property eq</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property eq",
        SerializedName = @"eq",
        PossibleTypes = new [] { typeof(string) })]
        string[] Eq { get; set; }
        /// <summary>Property exists</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property exists",
        SerializedName = @"exists",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Exist { get; set; }
        /// <summary>Property neq</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property neq",
        SerializedName = @"neq",
        PossibleTypes = new [] { typeof(string) })]
        string[] Neq { get; set; }
        /// <summary>Property property</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property property",
        SerializedName = @"property",
        PossibleTypes = new [] { typeof(string) })]
        string Property { get; set; }

    }
    /// Definition of Filter
    internal partial interface IFilterInternal

    {
        /// <summary>Property contains</summary>
        string[] Contain { get; set; }
        /// <summary>Property eq</summary>
        string[] Eq { get; set; }
        /// <summary>Property exists</summary>
        bool? Exist { get; set; }
        /// <summary>Property neq</summary>
        string[] Neq { get; set; }
        /// <summary>Property property</summary>
        string Property { get; set; }

    }
}