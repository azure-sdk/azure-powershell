// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ApplicationVersionLifecycleConfig</summary>
    public partial class ApplicationVersionLifecycleConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfig,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal
    {

        /// <summary>Backing field for <see cref="MaxAgeRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRule _maxAgeRule;

        /// <summary>
        /// Specify a max age rule to restrict the length of time that application versions are retained for an application.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRule MaxAgeRule { get => (this._maxAgeRule = this._maxAgeRule ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MaxAgeRule()); set => this._maxAgeRule = value; }

        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxAgeRuleDeleteSourceFromS3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRuleInternal)MaxAgeRule).DeleteSourceFromS3; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRuleInternal)MaxAgeRule).DeleteSourceFromS3 = value ?? default(bool); }

        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxAgeRuleEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRuleInternal)MaxAgeRule).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRuleInternal)MaxAgeRule).Enabled = value ?? default(bool); }

        /// <summary>Specify the number of days to retain an application versions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? MaxAgeRuleMaxAgeInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRuleInternal)MaxAgeRule).MaxAgeInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRuleInternal)MaxAgeRule).MaxAgeInDay = value ?? default(int); }

        /// <summary>Backing field for <see cref="MaxCountRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRule _maxCountRule;

        /// <summary>
        /// Specify a max count rule to restrict the number of application versions that are retained for an application.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRule MaxCountRule { get => (this._maxCountRule = this._maxCountRule ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MaxCountRule()); set => this._maxCountRule = value; }

        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxCountRuleDeleteSourceFromS3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRuleInternal)MaxCountRule).DeleteSourceFromS3; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRuleInternal)MaxCountRule).DeleteSourceFromS3 = value ?? default(bool); }

        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxCountRuleEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRuleInternal)MaxCountRule).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRuleInternal)MaxCountRule).Enabled = value ?? default(bool); }

        /// <summary>Specify the maximum number of application versions to retain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? MaxCountRuleMaxCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRuleInternal)MaxCountRule).MaxCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRuleInternal)MaxCountRule).MaxCount = value ?? default(int); }

        /// <summary>Internal Acessors for MaxAgeRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRule Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal.MaxAgeRule { get => (this._maxAgeRule = this._maxAgeRule ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MaxAgeRule()); set { {_maxAgeRule = value;} } }

        /// <summary>Internal Acessors for MaxCountRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRule Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal.MaxCountRule { get => (this._maxCountRule = this._maxCountRule ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MaxCountRule()); set { {_maxCountRule = value;} } }

        /// <summary>Creates an new <see cref="ApplicationVersionLifecycleConfig" /> instance.</summary>
        public ApplicationVersionLifecycleConfig()
        {

        }
    }
    /// Definition of ApplicationVersionLifecycleConfig
    public partial interface IApplicationVersionLifecycleConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.",
        SerializedName = @"deleteSourceFromS3",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxAgeRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify true to apply the rule, or false to disable it.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxAgeRuleEnabled { get; set; }
        /// <summary>Specify the number of days to retain an application versions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the number of days to retain an application versions.",
        SerializedName = @"maxAgeInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxAgeRuleMaxAgeInDay { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.",
        SerializedName = @"deleteSourceFromS3",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxCountRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify true to apply the rule, or false to disable it.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxCountRuleEnabled { get; set; }
        /// <summary>Specify the maximum number of application versions to retain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the maximum number of application versions to retain.",
        SerializedName = @"maxCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCountRuleMaxCount { get; set; }

    }
    /// Definition of ApplicationVersionLifecycleConfig
    internal partial interface IApplicationVersionLifecycleConfigInternal

    {
        /// <summary>
        /// Specify a max age rule to restrict the length of time that application versions are retained for an application.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRule MaxAgeRule { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        bool? MaxAgeRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        bool? MaxAgeRuleEnabled { get; set; }
        /// <summary>Specify the number of days to retain an application versions.</summary>
        int? MaxAgeRuleMaxAgeInDay { get; set; }
        /// <summary>
        /// Specify a max count rule to restrict the number of application versions that are retained for an application.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRule MaxCountRule { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        bool? MaxCountRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        bool? MaxCountRuleEnabled { get; set; }
        /// <summary>Specify the maximum number of application versions to retain.</summary>
        int? MaxCountRuleMaxCount { get; set; }

    }
}