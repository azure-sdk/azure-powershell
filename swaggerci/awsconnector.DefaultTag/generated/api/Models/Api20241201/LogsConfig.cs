// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of LogsConfig</summary>
    public partial class LogsConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfig,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal
    {

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess? BucketOwnerAccessValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).BucketOwnerAccessValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).BucketOwnerAccessValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess)""); }

        /// <summary>Backing field for <see cref="CloudWatchLog" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfig _cloudWatchLog;

        /// <summary>
        /// <p> Information about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfig CloudWatchLog { get => (this._cloudWatchLog = this._cloudWatchLog ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CloudWatchLogsConfig()); set => this._cloudWatchLog = value; }

        /// <summary>
        /// <p> The group name of the logs in CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CloudWatchLogGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfigInternal)CloudWatchLog).GroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfigInternal)CloudWatchLog).GroupName = value ?? null; }

        /// <summary>
        /// <p> The prefix of the stream name of the CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CloudWatchLogStreamName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfigInternal)CloudWatchLog).StreamName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfigInternal)CloudWatchLog).StreamName = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? CloudWatchLogsStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfigInternal)CloudWatchLog).StatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfigInternal)CloudWatchLog).StatusValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType)""); }

        /// <summary>Internal Acessors for CloudWatchLog</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal.CloudWatchLog { get => (this._cloudWatchLog = this._cloudWatchLog ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CloudWatchLogsConfig()); set { {_cloudWatchLog = value;} } }

        /// <summary>Internal Acessors for CloudWatchLogStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigStatusTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal.CloudWatchLogStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfigInternal)CloudWatchLog).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfigInternal)CloudWatchLog).Status = value; }

        /// <summary>Internal Acessors for S3Log</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal.S3Log { get => (this._s3Log = this._s3Log ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.S3LogsConfig()); set { {_s3Log = value;} } }

        /// <summary>Internal Acessors for S3LogBucketOwnerAccess</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBucketOwnerAccessEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal.S3LogBucketOwnerAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).BucketOwnerAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).BucketOwnerAccess = value; }

        /// <summary>Internal Acessors for S3LogStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigStatusTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal.S3LogStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).Status = value; }

        /// <summary>Backing field for <see cref="S3Log" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfig _s3Log;

        /// <summary>
        /// <p> Information about logs built to an S3 bucket for a build project. S3 logs are not enabled by default. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfig S3Log { get => (this._s3Log = this._s3Log ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.S3LogsConfig()); set => this._s3Log = value; }

        /// <summary>
        /// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? S3LogEncryptionDisabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).EncryptionDisabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).EncryptionDisabled = value ?? default(bool); }

        /// <summary>
        /// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>,
        /// and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>.
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string S3LogLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).Location = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? S3LogsStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).StatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfigInternal)S3Log).StatusValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType)""); }

        /// <summary>Creates an new <see cref="LogsConfig" /> instance.</summary>
        public LogsConfig()
        {

        }
    }
    /// Definition of LogsConfig
    public partial interface ILogsConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess? BucketOwnerAccessValue { get; set; }
        /// <summary>
        /// <p> The group name of the logs in CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> The group name of the logs in CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working with Log Groups and Log Streams</a>. </p>",
        SerializedName = @"groupName",
        PossibleTypes = new [] { typeof(string) })]
        string CloudWatchLogGroupName { get; set; }
        /// <summary>
        /// <p> The prefix of the stream name of the CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> The prefix of the stream name of the CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working with Log Groups and Log Streams</a>. </p>",
        SerializedName = @"streamName",
        PossibleTypes = new [] { typeof(string) })]
        string CloudWatchLogStreamName { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? CloudWatchLogsStatusValue { get; set; }
        /// <summary>
        /// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>",
        SerializedName = @"encryptionDisabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? S3LogEncryptionDisabled { get; set; }
        /// <summary>
        /// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>,
        /// and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>.
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>. </p>",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string S3LogLocation { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? S3LogsStatusValue { get; set; }

    }
    /// Definition of LogsConfig
    internal partial interface ILogsConfigInternal

    {
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess? BucketOwnerAccessValue { get; set; }
        /// <summary>
        /// <p> Information about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfig CloudWatchLog { get; set; }
        /// <summary>
        /// <p> The group name of the logs in CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        string CloudWatchLogGroupName { get; set; }
        /// <summary>
        /// <p>The current status of the logs in CloudWatch Logs for a build project. Valid values are:</p> <ul> <li> <p> <code>ENABLED</code>:
        /// CloudWatch Logs are enabled for this build project.</p> </li> <li> <p> <code>DISABLED</code>: CloudWatch Logs are not
        /// enabled for this build project.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigStatusTypeEnumValue CloudWatchLogStatus { get; set; }
        /// <summary>
        /// <p> The prefix of the stream name of the CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        string CloudWatchLogStreamName { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? CloudWatchLogsStatusValue { get; set; }
        /// <summary>
        /// <p> Information about logs built to an S3 bucket for a build project. S3 logs are not enabled by default. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfig S3Log { get; set; }
        /// <summary>Property bucketOwnerAccess</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBucketOwnerAccessEnumValue S3LogBucketOwnerAccess { get; set; }
        /// <summary>
        /// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
        /// </summary>
        bool? S3LogEncryptionDisabled { get; set; }
        /// <summary>
        /// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>,
        /// and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>.
        /// </p>
        /// </summary>
        string S3LogLocation { get; set; }
        /// <summary>
        /// <p>The current status of the S3 build logs. Valid values are:</p> <ul> <li> <p> <code>ENABLED</code>: S3 build logs are
        /// enabled for this build project.</p> </li> <li> <p> <code>DISABLED</code>: S3 build logs are not enabled for this build
        /// project.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigStatusTypeEnumValue S3LogStatus { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? S3LogsStatusValue { get; set; }

    }
}