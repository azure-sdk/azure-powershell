// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of ClusterStatus</summary>
    [System.ComponentModel.TypeConverter(typeof(ClusterStatus1TypeConverter))]
    public partial class ClusterStatus1
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStatus1"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ClusterStatus1(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateEnumValue) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).State, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StateChangeReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReason = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReason) content.GetValueForProperty("StateChangeReason",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReason, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStateChangeReasonTypeConverter.ConvertFrom);
            }
            if (content.Contains("Timeline"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).Timeline = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimeline) content.GetValueForProperty("Timeline",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).Timeline, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterTimelineTypeConverter.ConvertFrom);
            }
            if (content.Contains("ErrorDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).ErrorDetail = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated[]) content.GetValueForProperty("ErrorDetail",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).ErrorDetail, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ErrorDetailAutoGeneratedTypeConverter.ConvertFrom));
            }
            if (content.Contains("StateValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState?) content.GetValueForProperty("StateValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState.CreateFrom);
            }
            if (content.Contains("StateChangeReasonCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReasonCode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonCodeEnumValue) content.GetValueForProperty("StateChangeReasonCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReasonCode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStateChangeReasonCodeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StateChangeReasonMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReasonMessage = (string) content.GetValueForProperty("StateChangeReasonMessage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReasonMessage, global::System.Convert.ToString);
            }
            if (content.Contains("TimelineCreationDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineCreationDateTime = (global::System.DateTime?) content.GetValueForProperty("TimelineCreationDateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineCreationDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimelineEndDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineEndDateTime = (global::System.DateTime?) content.GetValueForProperty("TimelineEndDateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineEndDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimelineReadyDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineReadyDateTime = (global::System.DateTime?) content.GetValueForProperty("TimelineReadyDateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineReadyDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CodeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).CodeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode?) content.GetValueForProperty("CodeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).CodeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStatus1"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ClusterStatus1(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateEnumValue) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).State, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StateChangeReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReason = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReason) content.GetValueForProperty("StateChangeReason",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReason, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStateChangeReasonTypeConverter.ConvertFrom);
            }
            if (content.Contains("Timeline"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).Timeline = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterTimeline) content.GetValueForProperty("Timeline",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).Timeline, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterTimelineTypeConverter.ConvertFrom);
            }
            if (content.Contains("ErrorDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).ErrorDetail = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated[]) content.GetValueForProperty("ErrorDetail",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).ErrorDetail, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IErrorDetailAutoGenerated>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ErrorDetailAutoGeneratedTypeConverter.ConvertFrom));
            }
            if (content.Contains("StateValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState?) content.GetValueForProperty("StateValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterState.CreateFrom);
            }
            if (content.Contains("StateChangeReasonCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReasonCode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStateChangeReasonCodeEnumValue) content.GetValueForProperty("StateChangeReasonCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReasonCode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStateChangeReasonCodeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StateChangeReasonMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReasonMessage = (string) content.GetValueForProperty("StateChangeReasonMessage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).StateChangeReasonMessage, global::System.Convert.ToString);
            }
            if (content.Contains("TimelineCreationDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineCreationDateTime = (global::System.DateTime?) content.GetValueForProperty("TimelineCreationDateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineCreationDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimelineEndDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineEndDateTime = (global::System.DateTime?) content.GetValueForProperty("TimelineEndDateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineEndDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimelineReadyDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineReadyDateTime = (global::System.DateTime?) content.GetValueForProperty("TimelineReadyDateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).TimelineReadyDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CodeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).CodeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode?) content.GetValueForProperty("CodeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1Internal)this).CodeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStateChangeReasonCode.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStatus1"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1 DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ClusterStatus1(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStatus1"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1 DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ClusterStatus1(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ClusterStatus1" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ClusterStatus1" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatus1 FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of ClusterStatus
    [System.ComponentModel.TypeConverter(typeof(ClusterStatus1TypeConverter))]
    public partial interface IClusterStatus1

    {

    }
}