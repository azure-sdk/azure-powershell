// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of RoutingRule</summary>
    public partial class RoutingRule :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRule,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRuleInternal
    {

        /// <summary>Backing field for <see cref="Condition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRuleCondition _condition;

        /// <summary>
        /// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request
        /// is for pages in the ``/docs`` folder, redirect to the ``/documents`` folder. 2. If request results in HTTP error 4xx,
        /// redirect request to another host where you might process the error. A container for describing a condition that must be
        /// met for the specified redirect to apply. For example, 1. If request is for pages in the ``/docs`` folder, redirect to
        /// the ``/documents`` folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process
        /// the error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRuleCondition Condition { get => (this._condition = this._condition ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RoutingRuleCondition()); set => this._condition = value; }

        /// <summary>
        /// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then
        /// the specified redirect is applied. Required when parent element ``Condition`` is specified and sibling ``KeyPrefixEquals``
        /// is not specified. If both are specified, then both must be true for the redirect to be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ConditionHttpErrorCodeReturnedEqual { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRuleConditionInternal)Condition).HttpErrorCodeReturnedEqual; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRuleConditionInternal)Condition).HttpErrorCodeReturnedEqual = value ?? null; }

        /// <summary>
        /// The object key name prefix when the redirect is applied. For example, to redirect requests for ``ExamplePage.html``, the
        /// key prefix will be ``ExamplePage.html``. To redirect request for all pages with the prefix ``docs/``, the key prefix will
        /// be ``/docs``, which identifies all objects in the docs/ folder. Required when the parent element ``Condition`` is specified
        /// and sibling ``HttpErrorCodeReturnedEquals`` is not specified. If both conditions are specified, both must be true for
        /// the redirect to be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ConditionKeyPrefixEqual { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRuleConditionInternal)Condition).KeyPrefixEqual; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRuleConditionInternal)Condition).KeyPrefixEqual = value ?? null; }

        /// <summary>Internal Acessors for Condition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRuleCondition Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRuleInternal.Condition { get => (this._condition = this._condition ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RoutingRuleCondition()); set { {_condition = value;} } }

        /// <summary>Internal Acessors for RedirectRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRule Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRuleInternal.RedirectRule { get => (this._redirectRule = this._redirectRule ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RedirectRule()); set { {_redirectRule = value;} } }

        /// <summary>Backing field for <see cref="RedirectRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRule _redirectRule;

        /// <summary>
        /// Container for redirect information. You can redirect requests to another host, to another page, or with another protocol.
        /// In the event of an error, you can specify a different error code to return. Specifies how requests are redirected. In
        /// the event of an error, you can specify a different error code to return.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRule RedirectRule { get => (this._redirectRule = this._redirectRule ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RedirectRule()); set => this._redirectRule = value; }

        /// <summary>The host name to use in the redirect request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RedirectRuleHostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRuleInternal)RedirectRule).HostName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRuleInternal)RedirectRule).HostName = value ?? null; }

        /// <summary>
        /// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RedirectRuleHttpRedirectCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRuleInternal)RedirectRule).HttpRedirectCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRuleInternal)RedirectRule).HttpRedirectCode = value ?? null; }

        /// <summary>
        /// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RedirectRuleProtocol? RedirectRuleProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRuleInternal)RedirectRule).Protocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRuleInternal)RedirectRule).Protocol = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RedirectRuleProtocol)""); }

        /// <summary>
        /// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix ``docs/``
        /// (objects in the ``docs/`` folder) to ``documents/``, you can set a condition block with ``KeyPrefixEquals`` set to ``docs/``
        /// and in the Redirect set ``ReplaceKeyPrefixWith`` to ``/documents``. Not required if one of the siblings is present. Can
        /// be present only if ``ReplaceKeyWith`` is not provided. Replacement must be made for object keys containing special characters
        /// (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RedirectRuleReplaceKeyPrefixWith { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRuleInternal)RedirectRule).ReplaceKeyPrefixWith; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRuleInternal)RedirectRule).ReplaceKeyPrefixWith = value ?? null; }

        /// <summary>
        /// The specific object key to use in the redirect request. For example, redirect request to ``error.html``. Not required
        /// if one of the siblings is present. Can be present only if ``ReplaceKeyPrefixWith`` is not provided. Replacement must be
        /// made for object keys containing special characters (such as carriage returns) when using XML requests. For more information,
        /// see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RedirectRuleReplaceKeyWith { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRuleInternal)RedirectRule).ReplaceKeyWith; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRuleInternal)RedirectRule).ReplaceKeyWith = value ?? null; }

        /// <summary>Creates an new <see cref="RoutingRule" /> instance.</summary>
        public RoutingRule()
        {

        }
    }
    /// Definition of RoutingRule
    public partial interface IRoutingRule :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then
        /// the specified redirect is applied. Required when parent element ``Condition`` is specified and sibling ``KeyPrefixEquals``
        /// is not specified. If both are specified, then both must be true for the redirect to be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element ``Condition`` is specified and sibling ``KeyPrefixEquals`` is not specified. If both are specified, then both must be true for the redirect to be applied.",
        SerializedName = @"httpErrorCodeReturnedEquals",
        PossibleTypes = new [] { typeof(string) })]
        string ConditionHttpErrorCodeReturnedEqual { get; set; }
        /// <summary>
        /// The object key name prefix when the redirect is applied. For example, to redirect requests for ``ExamplePage.html``, the
        /// key prefix will be ``ExamplePage.html``. To redirect request for all pages with the prefix ``docs/``, the key prefix will
        /// be ``/docs``, which identifies all objects in the docs/ folder. Required when the parent element ``Condition`` is specified
        /// and sibling ``HttpErrorCodeReturnedEquals`` is not specified. If both conditions are specified, both must be true for
        /// the redirect to be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object key name prefix when the redirect is applied. For example, to redirect requests for ``ExamplePage.html``, the key prefix will be ``ExamplePage.html``. To redirect request for all pages with the prefix ``docs/``, the key prefix will be ``/docs``, which identifies all objects in the docs/ folder. Required when the parent element ``Condition`` is specified and sibling ``HttpErrorCodeReturnedEquals`` is not specified. If both conditions are specified, both must be true for the redirect to be applied.",
        SerializedName = @"keyPrefixEquals",
        PossibleTypes = new [] { typeof(string) })]
        string ConditionKeyPrefixEqual { get; set; }
        /// <summary>The host name to use in the redirect request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The host name to use in the redirect request.",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string RedirectRuleHostName { get; set; }
        /// <summary>
        /// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HTTP redirect code to use on the response. Not required if one of the siblings is present.",
        SerializedName = @"httpRedirectCode",
        PossibleTypes = new [] { typeof(string) })]
        string RedirectRuleHttpRedirectCode { get; set; }
        /// <summary>
        /// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Protocol to use when redirecting requests. The default is the protocol that is used in the original request.",
        SerializedName = @"protocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RedirectRuleProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RedirectRuleProtocol? RedirectRuleProtocol { get; set; }
        /// <summary>
        /// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix ``docs/``
        /// (objects in the ``docs/`` folder) to ``documents/``, you can set a condition block with ``KeyPrefixEquals`` set to ``docs/``
        /// and in the Redirect set ``ReplaceKeyPrefixWith`` to ``/documents``. Not required if one of the siblings is present. Can
        /// be present only if ``ReplaceKeyWith`` is not provided. Replacement must be made for object keys containing special characters
        /// (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix ``docs/`` (objects in the ``docs/`` folder) to ``documents/``, you can set a condition block with ``KeyPrefixEquals`` set to ``docs/`` and in the Redirect set ``ReplaceKeyPrefixWith`` to ``/documents``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyWith`` is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).",
        SerializedName = @"replaceKeyPrefixWith",
        PossibleTypes = new [] { typeof(string) })]
        string RedirectRuleReplaceKeyPrefixWith { get; set; }
        /// <summary>
        /// The specific object key to use in the redirect request. For example, redirect request to ``error.html``. Not required
        /// if one of the siblings is present. Can be present only if ``ReplaceKeyPrefixWith`` is not provided. Replacement must be
        /// made for object keys containing special characters (such as carriage returns) when using XML requests. For more information,
        /// see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The specific object key to use in the redirect request. For example, redirect request to ``error.html``. Not required if one of the siblings is present. Can be present only if ``ReplaceKeyPrefixWith`` is not provided.  Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).",
        SerializedName = @"replaceKeyWith",
        PossibleTypes = new [] { typeof(string) })]
        string RedirectRuleReplaceKeyWith { get; set; }

    }
    /// Definition of RoutingRule
    internal partial interface IRoutingRuleInternal

    {
        /// <summary>
        /// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request
        /// is for pages in the ``/docs`` folder, redirect to the ``/documents`` folder. 2. If request results in HTTP error 4xx,
        /// redirect request to another host where you might process the error. A container for describing a condition that must be
        /// met for the specified redirect to apply. For example, 1. If request is for pages in the ``/docs`` folder, redirect to
        /// the ``/documents`` folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process
        /// the error.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoutingRuleCondition Condition { get; set; }
        /// <summary>
        /// The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then
        /// the specified redirect is applied. Required when parent element ``Condition`` is specified and sibling ``KeyPrefixEquals``
        /// is not specified. If both are specified, then both must be true for the redirect to be applied.
        /// </summary>
        string ConditionHttpErrorCodeReturnedEqual { get; set; }
        /// <summary>
        /// The object key name prefix when the redirect is applied. For example, to redirect requests for ``ExamplePage.html``, the
        /// key prefix will be ``ExamplePage.html``. To redirect request for all pages with the prefix ``docs/``, the key prefix will
        /// be ``/docs``, which identifies all objects in the docs/ folder. Required when the parent element ``Condition`` is specified
        /// and sibling ``HttpErrorCodeReturnedEquals`` is not specified. If both conditions are specified, both must be true for
        /// the redirect to be applied.
        /// </summary>
        string ConditionKeyPrefixEqual { get; set; }
        /// <summary>
        /// Container for redirect information. You can redirect requests to another host, to another page, or with another protocol.
        /// In the event of an error, you can specify a different error code to return. Specifies how requests are redirected. In
        /// the event of an error, you can specify a different error code to return.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectRule RedirectRule { get; set; }
        /// <summary>The host name to use in the redirect request.</summary>
        string RedirectRuleHostName { get; set; }
        /// <summary>
        /// The HTTP redirect code to use on the response. Not required if one of the siblings is present.
        /// </summary>
        string RedirectRuleHttpRedirectCode { get; set; }
        /// <summary>
        /// Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RedirectRuleProtocol? RedirectRuleProtocol { get; set; }
        /// <summary>
        /// The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix ``docs/``
        /// (objects in the ``docs/`` folder) to ``documents/``, you can set a condition block with ``KeyPrefixEquals`` set to ``docs/``
        /// and in the Redirect set ``ReplaceKeyPrefixWith`` to ``/documents``. Not required if one of the siblings is present. Can
        /// be present only if ``ReplaceKeyWith`` is not provided. Replacement must be made for object keys containing special characters
        /// (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
        /// </summary>
        string RedirectRuleReplaceKeyPrefixWith { get; set; }
        /// <summary>
        /// The specific object key to use in the redirect request. For example, redirect request to ``error.html``. Not required
        /// if one of the siblings is present. Can be present only if ``ReplaceKeyPrefixWith`` is not provided. Replacement must be
        /// made for object keys containing special characters (such as carriage returns) when using XML requests. For more information,
        /// see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints).
        /// </summary>
        string RedirectRuleReplaceKeyWith { get; set; }

    }
}