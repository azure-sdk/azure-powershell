// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsOpenSearchDomainStatus</summary>
    public partial class AwsOpenSearchDomainStatusProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccessPolicy" /> property.</summary>
        private string _accessPolicy;

        /// <summary>
        /// <p>Identity and Access Management (IAM) policy document specifying the access policies for the domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AccessPolicy { get => this._accessPolicy; set => this._accessPolicy = value; }

        /// <summary>Backing field for <see cref="AdvancedOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesAdvancedOptions _advancedOption;

        /// <summary><p>Key-value pairs that specify advanced configuration options.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesAdvancedOptions AdvancedOption { get => (this._advancedOption = this._advancedOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsOpenSearchDomainStatusPropertiesAdvancedOptions()); set => this._advancedOption = value; }

        /// <summary>Backing field for <see cref="AdvancedSecurityOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptions _advancedSecurityOption;

        /// <summary><p>Settings for fine-grained access control.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptions AdvancedSecurityOption { get => (this._advancedSecurityOption = this._advancedSecurityOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AdvancedSecurityOptions()); set => this._advancedSecurityOption = value; }

        /// <summary>
        /// <p>Date and time when the migration period will be disabled. Only necessary when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? AdvancedSecurityOptionAnonymousAuthDisableDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).AnonymousAuthDisableDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).AnonymousAuthDisableDate = value ?? default(global::System.DateTime); }

        /// <summary>
        /// <p>True if a 30-day migration period is enabled, during which administrators can create role mappings. Only necessary
        /// when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AdvancedSecurityOptionAnonymousAuthEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).AnonymousAuthEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).AnonymousAuthEnabled = value ?? default(bool); }

        /// <summary><p>True if fine-grained access control is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AdvancedSecurityOptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).Enabled = value ?? default(bool); }

        /// <summary><p>True if the internal user database is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AdvancedSecurityOptionInternalUserDatabaseEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).InternalUserDatabaseEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).InternalUserDatabaseEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the domain. For more information, see <a href='https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html'>IAM
        /// identifiers </a> in the <i>AWS Identity and Access Management User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Backing field for <see cref="AutoTuneOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutput _autoTuneOption;

        /// <summary><p>Auto-Tune settings for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutput AutoTuneOption { get => (this._autoTuneOption = this._autoTuneOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AutoTuneOptionsOutput()); set => this._autoTuneOption = value; }

        /// <summary><p>Any errors that occurred while enabling or disabling Auto-Tune.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AutoTuneOptionErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutputInternal)AutoTuneOption).ErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutputInternal)AutoTuneOption).ErrorMessage = value ?? null; }

        /// <summary>
        /// <p>Whether the domain's off-peak window will be used to deploy Auto-Tune changes rather than a maintenance schedule.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AutoTuneOptionUseOffPeakWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutputInternal)AutoTuneOption).UseOffPeakWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutputInternal)AutoTuneOption).UseOffPeakWindow = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ChangeProgressDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetails _changeProgressDetail;

        /// <summary><p>Information about a configuration change happening on the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetails ChangeProgressDetail { get => (this._changeProgressDetail = this._changeProgressDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ChangeProgressDetails()); set => this._changeProgressDetail = value; }

        /// <summary><p>The ID of the configuration change.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ChangeProgressDetailChangeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).ChangeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).ChangeId = value ?? null; }

        /// <summary><p>The last time that the configuration change was updated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? ChangeProgressDetailLastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).LastUpdatedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).LastUpdatedTime = value ?? default(global::System.DateTime); }

        /// <summary><p>A message corresponding to the status of the configuration change.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ChangeProgressDetailMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).Message = value ?? null; }

        /// <summary>
        /// <p>The time that the configuration change was initiated, in Universal Coordinated Time (UTC).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? ChangeProgressDetailStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).StartTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="ClusterConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfig _clusterConfig;

        /// <summary><p>Container for the cluster configuration of the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfig ClusterConfig { get => (this._clusterConfig = this._clusterConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterConfig()); set => this._clusterConfig = value; }

        /// <summary>
        /// <p>Number of dedicated master nodes in the cluster. This number must be greater than 2 and not 4, otherwise you receive
        /// a validation exception.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ClusterConfigDedicatedMasterCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).DedicatedMasterCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).DedicatedMasterCount = value ?? default(int); }

        /// <summary>
        /// <p>Indicates whether dedicated master nodes are enabled for the cluster.<code>True</code> if the cluster will use a dedicated
        /// master node.<code>False</code> if the cluster will not.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ClusterConfigDedicatedMasterEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).DedicatedMasterEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).DedicatedMasterEnabled = value ?? default(bool); }

        /// <summary>
        /// <p>Number of data nodes in the cluster. This number must be greater than 1, otherwise you receive a validation exception.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ClusterConfigInstanceCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).InstanceCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).InstanceCount = value ?? default(int); }

        /// <summary>
        /// <p>A boolean that indicates whether a multi-AZ domain is turned on with a standby AZ. For more information, see <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html'>Configuring
        /// a multi-AZ domain in Amazon OpenSearch Service</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ClusterConfigMultiAzWithStandbyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).MultiAzWithStandbyEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).MultiAzWithStandbyEnabled = value ?? default(bool); }

        /// <summary><p>The number of warm nodes in the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ClusterConfigWarmCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).WarmCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).WarmCount = value ?? default(int); }

        /// <summary><p>Whether to enable warm storage for the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ClusterConfigWarmEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).WarmEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).WarmEnabled = value ?? default(bool); }

        /// <summary>
        /// <p>Indicates whether multiple Availability Zones are enabled. For more information, see <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html'>Configuring
        /// a multi-AZ domain in Amazon OpenSearch Service</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ClusterConfigZoneAwarenessEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).ZoneAwarenessEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).ZoneAwarenessEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="CognitoOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptions _cognitoOption;

        /// <summary>
        /// <p>Key-value pairs to configure Amazon Cognito authentication for OpenSearch Dashboards.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptions CognitoOption { get => (this._cognitoOption = this._cognitoOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CognitoOptions()); set => this._cognitoOption = value; }

        /// <summary>
        /// <p>Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? CognitoOptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptionsInternal)CognitoOption).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptionsInternal)CognitoOption).Enabled = value ?? default(bool); }

        /// <summary>
        /// <p>The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CognitoOptionIdentityPoolId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptionsInternal)CognitoOption).IdentityPoolId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptionsInternal)CognitoOption).IdentityPoolId = value ?? null; }

        /// <summary>
        /// <p>The <code>AmazonOpenSearchServiceCognitoAccess</code> role that allows OpenSearch Service to configure your user pool
        /// and identity pool.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CognitoOptionRoleArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptionsInternal)CognitoOption).RoleArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptionsInternal)CognitoOption).RoleArn = value ?? null; }

        /// <summary>
        /// <p>The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CognitoOptionUserPoolId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptionsInternal)CognitoOption).UserPoolId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptionsInternal)CognitoOption).UserPoolId = value ?? null; }

        /// <summary>
        /// <p>Whether to enable or disable cold storage on the domain. You must enable UltraWarm storage to enable cold storage.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ColdStorageOptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).ColdStorageOptionEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).ColdStorageOptionEnabled = value ?? default(bool); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ConfigChangeStatus? ConfigChangeStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).ConfigChangeStatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).ConfigChangeStatusValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ConfigChangeStatus)""); }

        /// <summary>Backing field for <see cref="Created" /> property.</summary>
        private bool? _created;

        /// <summary>
        /// <p>Creation status of an OpenSearch Service domain. True if domain creation is complete. False if domain creation is still
        /// in progress.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Created { get => this._created; set => this._created = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchPartitionInstanceType? DedicatedMasterTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).DedicatedMasterTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).DedicatedMasterTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchPartitionInstanceType)""); }

        /// <summary>Backing field for <see cref="Deleted" /> property.</summary>
        private bool? _deleted;

        /// <summary>
        /// <p>Deletion status of an OpenSearch Service domain. True if domain deletion is complete. False if domain deletion is still
        /// in progress. Once deletion is complete, the status of the domain is no longer returned.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Deleted { get => this._deleted; set => this._deleted = value; }

        /// <summary>Backing field for <see cref="DomainEndpointOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptions _domainEndpointOption;

        /// <summary>
        /// <p>Additional options for the domain endpoint, such as whether to require HTTPS for all traffic.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptions DomainEndpointOption { get => (this._domainEndpointOption = this._domainEndpointOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DomainEndpointOptions()); set => this._domainEndpointOption = value; }

        /// <summary><p>The fully qualified URL for the custom endpoint.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string DomainEndpointOptionCustomEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).CustomEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).CustomEndpoint = value ?? null; }

        /// <summary>
        /// <p>The ARN for your security certificate, managed in Amazon Web Services Certificate Manager (ACM).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string DomainEndpointOptionCustomEndpointCertificateArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).CustomEndpointCertificateArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).CustomEndpointCertificateArn = value ?? null; }

        /// <summary><p>Whether to enable a custom endpoint for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? DomainEndpointOptionCustomEndpointEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).CustomEndpointEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).CustomEndpointEnabled = value ?? default(bool); }

        /// <summary><p>True to require that all traffic to the domain arrive over HTTPS.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? DomainEndpointOptionEnforceHttps { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).EnforceHttps; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).EnforceHttps = value ?? default(bool); }

        /// <summary>Backing field for <see cref="DomainId" /> property.</summary>
        private string _domainId;

        /// <summary><p>Unique identifier for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DomainId { get => this._domainId; set => this._domainId = value; }

        /// <summary>Backing field for <see cref="DomainName" /> property.</summary>
        private string _domainName;

        /// <summary>
        /// <p>Name of the domain. Domain names are unique across all domains owned by the same account within an Amazon Web Services
        /// Region.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DomainName { get => this._domainName; set => this._domainName = value; }

        /// <summary>Backing field for <see cref="DomainProcessingStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainProcessingStatusTypeEnumValue _domainProcessingStatus;

        /// <summary><p>The status of any changes that are currently in progress for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainProcessingStatusTypeEnumValue DomainProcessingStatus { get => (this._domainProcessingStatus = this._domainProcessingStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DomainProcessingStatusTypeEnumValue()); set => this._domainProcessingStatus = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DomainProcessingStatusType? DomainProcessingStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainProcessingStatusTypeEnumValueInternal)DomainProcessingStatus).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainProcessingStatusTypeEnumValueInternal)DomainProcessingStatus).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DomainProcessingStatusType)""); }

        /// <summary>
        /// <p>Indicates whether EBS volumes are attached to data nodes in an OpenSearch Service domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? EbOptionEbsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).EbsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).EbsEnabled = value ?? default(bool); }

        /// <summary>
        /// <p>Specifies the baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the
        /// <code>gp3</code> and provisioned IOPS EBS volume types.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? EbOptionIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).Iop; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).Iop = value ?? default(int); }

        /// <summary>
        /// <p>Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the <code>gp3</code>
        /// volume type.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? EbOptionThroughput { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).Throughput; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).Throughput = value ?? default(int); }

        /// <summary><p>Specifies the size (in GiB) of EBS volumes attached to data nodes.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? EbOptionVolumeSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).VolumeSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).VolumeSize = value ?? default(int); }

        /// <summary>Backing field for <see cref="EbsOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptions _ebsOption;

        /// <summary><p>Container for EBS-based storage settings for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptions EbsOption { get => (this._ebsOption = this._ebsOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EbsOptions()); set => this._ebsOption = value; }

        /// <summary>Backing field for <see cref="EncryptionAtRestOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionAtRestOptions _encryptionAtRestOption;

        /// <summary><p>Encryption at rest settings for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionAtRestOptions EncryptionAtRestOption { get => (this._encryptionAtRestOption = this._encryptionAtRestOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EncryptionAtRestOptions()); set => this._encryptionAtRestOption = value; }

        /// <summary><p>True to enable encryption at rest.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? EncryptionAtRestOptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionAtRestOptionsInternal)EncryptionAtRestOption).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionAtRestOptionsInternal)EncryptionAtRestOption).Enabled = value ?? default(bool); }

        /// <summary>
        /// <p>The KMS key ID. Takes the form <code>1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EncryptionAtRestOptionKmsKeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionAtRestOptionsInternal)EncryptionAtRestOption).KmsKeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionAtRestOptionsInternal)EncryptionAtRestOption).KmsKeyId = value ?? null; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private string _endpoint;

        /// <summary>
        /// <p>Domain-specific endpoint used to submit index, search, and data upload requests to the domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Endpoint { get => this._endpoint; set => this._endpoint = value; }

        /// <summary>Backing field for <see cref="EndpointV2" /> property.</summary>
        private string _endpointV2;

        /// <summary>
        /// <p>If <code>IPAddressType</code> to set to <code>dualstack</code>, a version 2 domain endpoint is provisioned. This endpoint
        /// functions like a normal endpoint, except that it works with both IPv4 and IPv6 IP addresses. Normal endpoints work only
        /// with IPv4 IP addresses. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string EndpointV2 { get => this._endpointV2; set => this._endpointV2 = value; }

        /// <summary>Backing field for <see cref="Endpoints" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesEndpoints _endpoints;

        /// <summary>
        /// <p>The key-value pair that exists if the OpenSearch Service domain uses VPC endpoints. Example <code>key, value</code>:
        /// <code>'vpc','vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com'</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesEndpoints Endpoints { get => (this._endpoints = this._endpoints ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsOpenSearchDomainStatusPropertiesEndpoints()); set => this._endpoints = value; }

        /// <summary>Backing field for <see cref="EngineVersion" /> property.</summary>
        private string _engineVersion;

        /// <summary>
        /// <p>Version of OpenSearch or Elasticsearch that the domain is running, in the format <code>Elasticsearch_X.Y</code> or
        /// <code>OpenSearch_X.Y</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string EngineVersion { get => this._engineVersion; set => this._engineVersion = value; }

        /// <summary>Backing field for <see cref="IPAddressType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPAddressTypeEnumValue _iPAddressType;

        /// <summary><p>The type of IP addresses supported by the endpoint for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPAddressTypeEnumValue IPAddressType { get => (this._iPAddressType = this._iPAddressType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPAddressTypeEnumValue()); set => this._iPAddressType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPAddressType? IPAddressTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPAddressTypeEnumValueInternal)IPAddressType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPAddressTypeEnumValueInternal)IPAddressType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPAddressType)""); }

        /// <summary><p>The unique entity ID of the application in the SAML identity provider.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string IdpEntityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).IdpEntityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).IdpEntityId = value ?? null; }

        /// <summary><p>The metadata of the SAML application, in XML format.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string IdpMetadataContent { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).IdpMetadataContent; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).IdpMetadataContent = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InitiatedBy? InitiatedByValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).InitiatedByValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).InitiatedByValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InitiatedBy)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchPartitionInstanceType? InstanceTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).InstanceTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).InstanceTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchPartitionInstanceType)""); }

        /// <summary>Backing field for <see cref="LogPublishingOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesLogPublishingOptions _logPublishingOption;

        /// <summary><p>Log publishing options for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesLogPublishingOptions LogPublishingOption { get => (this._logPublishingOption = this._logPublishingOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsOpenSearchDomainStatusPropertiesLogPublishingOptions()); set => this._logPublishingOption = value; }

        /// <summary>Internal Acessors for AdvancedSecurityOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.AdvancedSecurityOption { get => (this._advancedSecurityOption = this._advancedSecurityOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AdvancedSecurityOptions()); set { {_advancedSecurityOption = value;} } }

        /// <summary>Internal Acessors for AdvancedSecurityOptionSamlOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutput Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.AdvancedSecurityOptionSamlOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOption = value; }

        /// <summary>Internal Acessors for AutoTuneOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutput Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.AutoTuneOption { get => (this._autoTuneOption = this._autoTuneOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AutoTuneOptionsOutput()); set { {_autoTuneOption = value;} } }

        /// <summary>Internal Acessors for AutoTuneOptionState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.AutoTuneOptionState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutputInternal)AutoTuneOption).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutputInternal)AutoTuneOption).State = value; }

        /// <summary>Internal Acessors for ChangeProgressDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetails Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.ChangeProgressDetail { get => (this._changeProgressDetail = this._changeProgressDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ChangeProgressDetails()); set { {_changeProgressDetail = value;} } }

        /// <summary>Internal Acessors for ChangeProgressDetailConfigChangeStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfigChangeStatusEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.ChangeProgressDetailConfigChangeStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).ConfigChangeStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).ConfigChangeStatus = value; }

        /// <summary>Internal Acessors for ChangeProgressDetailInitiatedBy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInitiatedByEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.ChangeProgressDetailInitiatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).InitiatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetailsInternal)ChangeProgressDetail).InitiatedBy = value; }

        /// <summary>Internal Acessors for ClusterConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.ClusterConfig { get => (this._clusterConfig = this._clusterConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterConfig()); set { {_clusterConfig = value;} } }

        /// <summary>Internal Acessors for ClusterConfigColdStorageOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IColdStorageOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.ClusterConfigColdStorageOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).ColdStorageOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).ColdStorageOption = value; }

        /// <summary>Internal Acessors for ClusterConfigDedicatedMasterType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenSearchPartitionInstanceTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.ClusterConfigDedicatedMasterType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).DedicatedMasterType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).DedicatedMasterType = value; }

        /// <summary>Internal Acessors for ClusterConfigInstanceType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenSearchPartitionInstanceTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.ClusterConfigInstanceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).InstanceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).InstanceType = value; }

        /// <summary>Internal Acessors for ClusterConfigWarmType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenSearchWarmPartitionInstanceTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.ClusterConfigWarmType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).WarmType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).WarmType = value; }

        /// <summary>Internal Acessors for ClusterConfigZoneAwarenessConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IZoneAwarenessConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.ClusterConfigZoneAwarenessConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).ZoneAwarenessConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).ZoneAwarenessConfig = value; }

        /// <summary>Internal Acessors for CognitoOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.CognitoOption { get => (this._cognitoOption = this._cognitoOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CognitoOptions()); set { {_cognitoOption = value;} } }

        /// <summary>Internal Acessors for DomainEndpointOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.DomainEndpointOption { get => (this._domainEndpointOption = this._domainEndpointOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DomainEndpointOptions()); set { {_domainEndpointOption = value;} } }

        /// <summary>Internal Acessors for DomainEndpointOptionTlsSecurityPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITlsSecurityPolicyEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.DomainEndpointOptionTlsSecurityPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).TlsSecurityPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).TlsSecurityPolicy = value; }

        /// <summary>Internal Acessors for DomainProcessingStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainProcessingStatusTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.DomainProcessingStatus { get => (this._domainProcessingStatus = this._domainProcessingStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DomainProcessingStatusTypeEnumValue()); set { {_domainProcessingStatus = value;} } }

        /// <summary>Internal Acessors for EbOptionVolumeType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.EbOptionVolumeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).VolumeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).VolumeType = value; }

        /// <summary>Internal Acessors for EbsOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.EbsOption { get => (this._ebsOption = this._ebsOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EbsOptions()); set { {_ebsOption = value;} } }

        /// <summary>Internal Acessors for EncryptionAtRestOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionAtRestOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.EncryptionAtRestOption { get => (this._encryptionAtRestOption = this._encryptionAtRestOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EncryptionAtRestOptions()); set { {_encryptionAtRestOption = value;} } }

        /// <summary>Internal Acessors for IPAddressType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPAddressTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.IPAddressType { get => (this._iPAddressType = this._iPAddressType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPAddressTypeEnumValue()); set { {_iPAddressType = value;} } }

        /// <summary>Internal Acessors for NodeToNodeEncryptionOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INodeToNodeEncryptionOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.NodeToNodeEncryptionOption { get => (this._nodeToNodeEncryptionOption = this._nodeToNodeEncryptionOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NodeToNodeEncryptionOptions()); set { {_nodeToNodeEncryptionOption = value;} } }

        /// <summary>Internal Acessors for OffPeakWindowOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.OffPeakWindowOption { get => (this._offPeakWindowOption = this._offPeakWindowOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OffPeakWindowOptions()); set { {_offPeakWindowOption = value;} } }

        /// <summary>Internal Acessors for OffPeakWindowOptionOffPeakWindow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindow Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.OffPeakWindowOptionOffPeakWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal)OffPeakWindowOption).OffPeakWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal)OffPeakWindowOption).OffPeakWindow = value; }

        /// <summary>Internal Acessors for OffPeakWindowStartTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWindowStartTime Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.OffPeakWindowStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal)OffPeakWindowOption).OffPeakWindowStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal)OffPeakWindowOption).OffPeakWindowStartTime = value; }

        /// <summary>Internal Acessors for SamlOptionIdp</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlIdp Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.SamlOptionIdp { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOptionIdp; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOptionIdp = value; }

        /// <summary>Internal Acessors for ServiceSoftwareOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.ServiceSoftwareOption { get => (this._serviceSoftwareOption = this._serviceSoftwareOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceSoftwareOptions()); set { {_serviceSoftwareOption = value;} } }

        /// <summary>Internal Acessors for ServiceSoftwareOptionUpdateStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentStatusEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.ServiceSoftwareOptionUpdateStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).UpdateStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).UpdateStatus = value; }

        /// <summary>Internal Acessors for SnapshotOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.SnapshotOption { get => (this._snapshotOption = this._snapshotOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapshotOptions()); set { {_snapshotOption = value;} } }

        /// <summary>Internal Acessors for SoftwareUpdateOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISoftwareUpdateOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.SoftwareUpdateOption { get => (this._softwareUpdateOption = this._softwareUpdateOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SoftwareUpdateOptions()); set { {_softwareUpdateOption = value;} } }

        /// <summary>Internal Acessors for VpcOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfo Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesInternal.VpcOption { get => (this._vpcOption = this._vpcOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcDerivedInfo()); set { {_vpcOption = value;} } }

        /// <summary>Backing field for <see cref="ModifyingProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IModifyingProperties[] _modifyingProperty;

        /// <summary>
        /// <p>Information about the domain properties that are currently being modified.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IModifyingProperties[] ModifyingProperty { get => this._modifyingProperty; set => this._modifyingProperty = value; }

        /// <summary>Backing field for <see cref="NodeToNodeEncryptionOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INodeToNodeEncryptionOptions _nodeToNodeEncryptionOption;

        /// <summary><p>Whether node-to-node encryption is enabled or disabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INodeToNodeEncryptionOptions NodeToNodeEncryptionOption { get => (this._nodeToNodeEncryptionOption = this._nodeToNodeEncryptionOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NodeToNodeEncryptionOptions()); set => this._nodeToNodeEncryptionOption = value; }

        /// <summary><p>True to enable node-to-node encryption.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? NodeToNodeEncryptionOptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INodeToNodeEncryptionOptionsInternal)NodeToNodeEncryptionOption).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INodeToNodeEncryptionOptionsInternal)NodeToNodeEncryptionOption).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="OffPeakWindowOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptions _offPeakWindowOption;

        /// <summary>
        /// <p>Options that specify a custom 10-hour window during which OpenSearch Service can perform configuration changes on the
        /// domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptions OffPeakWindowOption { get => (this._offPeakWindowOption = this._offPeakWindowOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OffPeakWindowOptions()); set => this._offPeakWindowOption = value; }

        /// <summary>
        /// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to
        /// February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled
        /// by default. You can't disable the off-peak window after it's enabled for a domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? OffPeakWindowOptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal)OffPeakWindowOption).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal)OffPeakWindowOption).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Processing" /> property.</summary>
        private bool? _processing;

        /// <summary>
        /// <p>The status of the domain configuration. True if OpenSearch Service is processing configuration changes. False if the
        /// configuration is active.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Processing { get => this._processing; set => this._processing = value; }

        /// <summary><p>True if SAML is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? SamlOptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOptionEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOptionEnabled = value ?? default(bool); }

        /// <summary><p>The key used for matching the SAML roles attribute.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string SamlOptionRolesKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOptionRolesKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOptionRolesKey = value ?? null; }

        /// <summary><p>The duration, in minutes, after which a user session becomes inactive.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? SamlOptionSessionTimeoutMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOptionSessionTimeoutMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOptionSessionTimeoutMinute = value ?? default(int); }

        /// <summary><p>The key used for matching the SAML subject attribute.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string SamlOptionSubjectKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOptionSubjectKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal)AdvancedSecurityOption).SamlOptionSubjectKey = value ?? null; }

        /// <summary>Backing field for <see cref="ServiceSoftwareOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptions _serviceSoftwareOption;

        /// <summary><p>The current status of the domain's service software.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptions ServiceSoftwareOption { get => (this._serviceSoftwareOption = this._serviceSoftwareOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceSoftwareOptions()); set => this._serviceSoftwareOption = value; }

        /// <summary>
        /// <p>The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically
        /// update your service software.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? ServiceSoftwareOptionAutomatedUpdateDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).AutomatedUpdateDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).AutomatedUpdateDate = value ?? default(global::System.DateTime); }

        /// <summary>
        /// <p> True if you're able to cancel your service software version update. False if you can't cancel your service software
        /// update.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ServiceSoftwareOptionCancellable { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).Cancellable; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).Cancellable = value ?? default(bool); }

        /// <summary><p>The current service software version present on the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ServiceSoftwareOptionCurrentVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).CurrentVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).CurrentVersion = value ?? null; }

        /// <summary><p>A description of the service software update status.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ServiceSoftwareOptionDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).Description = value ?? null; }

        /// <summary><p>The new service software version, if one is available.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ServiceSoftwareOptionNewVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).NewVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).NewVersion = value ?? null; }

        /// <summary>
        /// <p>True if a service software is never automatically updated. False if a service software is automatically updated after
        /// the automated update date.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ServiceSoftwareOptionOptionalDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).OptionalDeployment; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).OptionalDeployment = value ?? default(bool); }

        /// <summary>
        /// <p>True if you're able to update your service software version. False if you can't update your service software version.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ServiceSoftwareOptionUpdateAvailable { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).UpdateAvailable; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).UpdateAvailable = value ?? default(bool); }

        /// <summary>Backing field for <see cref="SnapshotOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotOptions _snapshotOption;

        /// <summary>
        /// <p>DEPRECATED. Container for parameters required to configure automated snapshots of domain indexes.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotOptions SnapshotOption { get => (this._snapshotOption = this._snapshotOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapshotOptions()); set => this._snapshotOption = value; }

        /// <summary>
        /// <p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default
        /// is <code>0</code> hours.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? SnapshotOptionAutomatedSnapshotStartHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotOptionsInternal)SnapshotOption).AutomatedSnapshotStartHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotOptionsInternal)SnapshotOption).AutomatedSnapshotStartHour = value ?? default(int); }

        /// <summary>Backing field for <see cref="SoftwareUpdateOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISoftwareUpdateOptions _softwareUpdateOption;

        /// <summary><p>Service software update options for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISoftwareUpdateOptions SoftwareUpdateOption { get => (this._softwareUpdateOption = this._softwareUpdateOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SoftwareUpdateOptions()); set => this._softwareUpdateOption = value; }

        /// <summary><p>Whether automatic service software updates are enabled for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? SoftwareUpdateOptionAutoSoftwareUpdateEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISoftwareUpdateOptionsInternal)SoftwareUpdateOption).AutoSoftwareUpdateEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISoftwareUpdateOptionsInternal)SoftwareUpdateOption).AutoSoftwareUpdateEnabled = value ?? default(bool); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AutoTuneState? StateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutputInternal)AutoTuneOption).StateValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutputInternal)AutoTuneOption).StateValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AutoTuneState)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TlsSecurityPolicy? TlSecurityPolicyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).TlSecurityPolicyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal)DomainEndpointOption).TlSecurityPolicyValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TlsSecurityPolicy)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentStatus? UpdateStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).UpdateStatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptionsInternal)ServiceSoftwareOption).UpdateStatusValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentStatus)""); }

        /// <summary>Backing field for <see cref="UpgradeProcessing" /> property.</summary>
        private bool? _upgradeProcessing;

        /// <summary>
        /// <p>The status of a domain version upgrade to a new version of OpenSearch or Elasticsearch. True if OpenSearch Service
        /// is in the process of a version upgrade. False if the configuration is active.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? UpgradeProcessing { get => this._upgradeProcessing; set => this._upgradeProcessing = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType? VolumeTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).VolumeTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptionsInternal)EbsOption).VolumeTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType)""); }

        /// <summary>Backing field for <see cref="VpcOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfo _vpcOption;

        /// <summary><p>The VPC configuration for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfo VpcOption { get => (this._vpcOption = this._vpcOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcDerivedInfo()); set => this._vpcOption = value; }

        /// <summary><p>The list of Availability Zones associated with the VPC subnets.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] VpcOptionAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfoInternal)VpcOption).AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfoInternal)VpcOption).AvailabilityZone = value ?? null /* arrayOf */; }

        /// <summary>
        /// <p>The list of security group IDs associated with the VPC endpoints for the domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] VpcOptionSecurityGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfoInternal)VpcOption).SecurityGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfoInternal)VpcOption).SecurityGroupId = value ?? null /* arrayOf */; }

        /// <summary><p>A list of subnet IDs associated with the VPC endpoints for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] VpcOptionSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfoInternal)VpcOption).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfoInternal)VpcOption).SubnetId = value ?? null /* arrayOf */; }

        /// <summary>
        /// <p>The ID for your VPC. Amazon VPC generates this value when you create a VPC.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string VpcOptionVpcId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfoInternal)VpcOption).VpcId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfoInternal)VpcOption).VpcId = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchWarmPartitionInstanceType? WarmTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).WarmTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).WarmTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchWarmPartitionInstanceType)""); }

        /// <summary>
        /// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code>
        /// refers to 5:00 P.M. UTC.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public long? WindowStartTimeHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal)OffPeakWindowOption).WindowStartTimeHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal)OffPeakWindowOption).WindowStartTimeHour = value ?? default(long); }

        /// <summary><p>The start minute of the window, in UTC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public long? WindowStartTimeMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal)OffPeakWindowOption).WindowStartTimeMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal)OffPeakWindowOption).WindowStartTimeMinute = value ?? default(long); }

        /// <summary>
        /// <p>If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid
        /// values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number
        /// of subnets.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ZoneAwarenessConfigAvailabilityZoneCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).ZoneAwarenessConfigAvailabilityZoneCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfigInternal)ClusterConfig).ZoneAwarenessConfigAvailabilityZoneCount = value ?? default(int); }

        /// <summary>Creates an new <see cref="AwsOpenSearchDomainStatusProperties" /> instance.</summary>
        public AwsOpenSearchDomainStatusProperties()
        {

        }
    }
    /// Definition of awsOpenSearchDomainStatus
    public partial interface IAwsOpenSearchDomainStatusProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>Identity and Access Management (IAM) policy document specifying the access policies for the domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Identity and Access Management (IAM) policy document specifying the access policies for the domain.</p>",
        SerializedName = @"accessPolicies",
        PossibleTypes = new [] { typeof(string) })]
        string AccessPolicy { get; set; }
        /// <summary><p>Key-value pairs that specify advanced configuration options.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Key-value pairs that specify advanced configuration options.</p>",
        SerializedName = @"advancedOptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesAdvancedOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesAdvancedOptions AdvancedOption { get; set; }
        /// <summary>
        /// <p>Date and time when the migration period will be disabled. Only necessary when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Date and time when the migration period will be disabled. Only necessary when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling fine-grained access control on an existing domain</a>.</p>",
        SerializedName = @"anonymousAuthDisableDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AdvancedSecurityOptionAnonymousAuthDisableDate { get; set; }
        /// <summary>
        /// <p>True if a 30-day migration period is enabled, during which administrators can create role mappings. Only necessary
        /// when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True if a 30-day migration period is enabled, during which administrators can create role mappings. Only necessary when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling fine-grained access control on an existing domain</a>.</p>",
        SerializedName = @"anonymousAuthEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AdvancedSecurityOptionAnonymousAuthEnabled { get; set; }
        /// <summary><p>True if fine-grained access control is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True if fine-grained access control is enabled.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AdvancedSecurityOptionEnabled { get; set; }
        /// <summary><p>True if the internal user database is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True if the internal user database is enabled.</p>",
        SerializedName = @"internalUserDatabaseEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AdvancedSecurityOptionInternalUserDatabaseEnabled { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the domain. For more information, see <a href='https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html'>IAM
        /// identifiers </a> in the <i>AWS Identity and Access Management User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the domain. For more information, see <a href='https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html'>IAM identifiers </a> in the <i>AWS Identity and Access Management User Guide</i>.</p>",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary><p>Any errors that occurred while enabling or disabling Auto-Tune.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Any errors that occurred while enabling or disabling Auto-Tune.</p>",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string AutoTuneOptionErrorMessage { get; set; }
        /// <summary>
        /// <p>Whether the domain's off-peak window will be used to deploy Auto-Tune changes rather than a maintenance schedule.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether the domain's off-peak window will be used to deploy Auto-Tune changes rather than a maintenance schedule.</p>",
        SerializedName = @"useOffPeakWindow",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoTuneOptionUseOffPeakWindow { get; set; }
        /// <summary><p>The ID of the configuration change.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the configuration change.</p>",
        SerializedName = @"changeId",
        PossibleTypes = new [] { typeof(string) })]
        string ChangeProgressDetailChangeId { get; set; }
        /// <summary><p>The last time that the configuration change was updated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The last time that the configuration change was updated.</p>",
        SerializedName = @"lastUpdatedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ChangeProgressDetailLastUpdatedTime { get; set; }
        /// <summary><p>A message corresponding to the status of the configuration change.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A message corresponding to the status of the configuration change.</p>",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ChangeProgressDetailMessage { get; set; }
        /// <summary>
        /// <p>The time that the configuration change was initiated, in Universal Coordinated Time (UTC).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time that the configuration change was initiated, in Universal Coordinated Time (UTC).</p>",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ChangeProgressDetailStartTime { get; set; }
        /// <summary>
        /// <p>Number of dedicated master nodes in the cluster. This number must be greater than 2 and not 4, otherwise you receive
        /// a validation exception.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Number of dedicated master nodes in the cluster. This number must be greater than 2 and not 4, otherwise you receive a validation exception.</p>",
        SerializedName = @"dedicatedMasterCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ClusterConfigDedicatedMasterCount { get; set; }
        /// <summary>
        /// <p>Indicates whether dedicated master nodes are enabled for the cluster.<code>True</code> if the cluster will use a dedicated
        /// master node.<code>False</code> if the cluster will not.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether dedicated master nodes are enabled for the cluster.<code>True</code> if the cluster will use a dedicated master node.<code>False</code> if the cluster will not.</p>",
        SerializedName = @"dedicatedMasterEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ClusterConfigDedicatedMasterEnabled { get; set; }
        /// <summary>
        /// <p>Number of data nodes in the cluster. This number must be greater than 1, otherwise you receive a validation exception.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Number of data nodes in the cluster. This number must be greater than 1, otherwise you receive a validation exception.</p>",
        SerializedName = @"instanceCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ClusterConfigInstanceCount { get; set; }
        /// <summary>
        /// <p>A boolean that indicates whether a multi-AZ domain is turned on with a standby AZ. For more information, see <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html'>Configuring
        /// a multi-AZ domain in Amazon OpenSearch Service</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A boolean that indicates whether a multi-AZ domain is turned on with a standby AZ. For more information, see <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html'>Configuring a multi-AZ domain in Amazon OpenSearch Service</a>. </p>",
        SerializedName = @"multiAZWithStandbyEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ClusterConfigMultiAzWithStandbyEnabled { get; set; }
        /// <summary><p>The number of warm nodes in the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of warm nodes in the cluster.</p>",
        SerializedName = @"warmCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ClusterConfigWarmCount { get; set; }
        /// <summary><p>Whether to enable warm storage for the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether to enable warm storage for the cluster.</p>",
        SerializedName = @"warmEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ClusterConfigWarmEnabled { get; set; }
        /// <summary>
        /// <p>Indicates whether multiple Availability Zones are enabled. For more information, see <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html'>Configuring
        /// a multi-AZ domain in Amazon OpenSearch Service</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether multiple Availability Zones are enabled. For more information, see <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html'>Configuring a multi-AZ domain in Amazon OpenSearch Service</a>.</p>",
        SerializedName = @"zoneAwarenessEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ClusterConfigZoneAwarenessEnabled { get; set; }
        /// <summary>
        /// <p>Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CognitoOptionEnabled { get; set; }
        /// <summary>
        /// <p>The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>",
        SerializedName = @"identityPoolId",
        PossibleTypes = new [] { typeof(string) })]
        string CognitoOptionIdentityPoolId { get; set; }
        /// <summary>
        /// <p>The <code>AmazonOpenSearchServiceCognitoAccess</code> role that allows OpenSearch Service to configure your user pool
        /// and identity pool.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The <code>AmazonOpenSearchServiceCognitoAccess</code> role that allows OpenSearch Service to configure your user pool and identity pool.</p>",
        SerializedName = @"roleArn",
        PossibleTypes = new [] { typeof(string) })]
        string CognitoOptionRoleArn { get; set; }
        /// <summary>
        /// <p>The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>",
        SerializedName = @"userPoolId",
        PossibleTypes = new [] { typeof(string) })]
        string CognitoOptionUserPoolId { get; set; }
        /// <summary>
        /// <p>Whether to enable or disable cold storage on the domain. You must enable UltraWarm storage to enable cold storage.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether to enable or disable cold storage on the domain. You must enable UltraWarm storage to enable cold storage.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ColdStorageOptionEnabled { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ConfigChangeStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ConfigChangeStatus? ConfigChangeStatusValue { get; set; }
        /// <summary>
        /// <p>Creation status of an OpenSearch Service domain. True if domain creation is complete. False if domain creation is still
        /// in progress.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Creation status of an OpenSearch Service domain. True if domain creation is complete. False if domain creation is still in progress.</p>",
        SerializedName = @"created",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Created { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchPartitionInstanceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchPartitionInstanceType? DedicatedMasterTypeValue { get; set; }
        /// <summary>
        /// <p>Deletion status of an OpenSearch Service domain. True if domain deletion is complete. False if domain deletion is still
        /// in progress. Once deletion is complete, the status of the domain is no longer returned.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Deletion status of an OpenSearch Service domain. True if domain deletion is complete. False if domain deletion is still in progress. Once deletion is complete, the status of the domain is no longer returned.</p>",
        SerializedName = @"deleted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Deleted { get; set; }
        /// <summary><p>The fully qualified URL for the custom endpoint.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The fully qualified URL for the custom endpoint.</p>",
        SerializedName = @"customEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string DomainEndpointOptionCustomEndpoint { get; set; }
        /// <summary>
        /// <p>The ARN for your security certificate, managed in Amazon Web Services Certificate Manager (ACM).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN for your security certificate, managed in Amazon Web Services Certificate Manager (ACM).</p>",
        SerializedName = @"customEndpointCertificateArn",
        PossibleTypes = new [] { typeof(string) })]
        string DomainEndpointOptionCustomEndpointCertificateArn { get; set; }
        /// <summary><p>Whether to enable a custom endpoint for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether to enable a custom endpoint for the domain.</p>",
        SerializedName = @"customEndpointEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DomainEndpointOptionCustomEndpointEnabled { get; set; }
        /// <summary><p>True to require that all traffic to the domain arrive over HTTPS.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True to require that all traffic to the domain arrive over HTTPS.</p>",
        SerializedName = @"enforceHTTPS",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DomainEndpointOptionEnforceHttps { get; set; }
        /// <summary><p>Unique identifier for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Unique identifier for the domain.</p>",
        SerializedName = @"domainId",
        PossibleTypes = new [] { typeof(string) })]
        string DomainId { get; set; }
        /// <summary>
        /// <p>Name of the domain. Domain names are unique across all domains owned by the same account within an Amazon Web Services
        /// Region.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Name of the domain. Domain names are unique across all domains owned by the same account within an Amazon Web Services Region.</p>",
        SerializedName = @"domainName",
        PossibleTypes = new [] { typeof(string) })]
        string DomainName { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DomainProcessingStatusType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DomainProcessingStatusType? DomainProcessingStatusValue { get; set; }
        /// <summary>
        /// <p>Indicates whether EBS volumes are attached to data nodes in an OpenSearch Service domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether EBS volumes are attached to data nodes in an OpenSearch Service domain.</p>",
        SerializedName = @"ebsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EbOptionEbsEnabled { get; set; }
        /// <summary>
        /// <p>Specifies the baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the
        /// <code>gp3</code> and provisioned IOPS EBS volume types.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the <code>gp3</code> and provisioned IOPS EBS volume types.</p>",
        SerializedName = @"iops",
        PossibleTypes = new [] { typeof(int) })]
        int? EbOptionIop { get; set; }
        /// <summary>
        /// <p>Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the <code>gp3</code>
        /// volume type.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the <code>gp3</code> volume type.</p>",
        SerializedName = @"throughput",
        PossibleTypes = new [] { typeof(int) })]
        int? EbOptionThroughput { get; set; }
        /// <summary><p>Specifies the size (in GiB) of EBS volumes attached to data nodes.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the size (in GiB) of EBS volumes attached to data nodes.</p>",
        SerializedName = @"volumeSize",
        PossibleTypes = new [] { typeof(int) })]
        int? EbOptionVolumeSize { get; set; }
        /// <summary><p>True to enable encryption at rest.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True to enable encryption at rest.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EncryptionAtRestOptionEnabled { get; set; }
        /// <summary>
        /// <p>The KMS key ID. Takes the form <code>1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The KMS key ID. Takes the form <code>1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a</code>.</p>",
        SerializedName = @"kmsKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionAtRestOptionKmsKeyId { get; set; }
        /// <summary>
        /// <p>Domain-specific endpoint used to submit index, search, and data upload requests to the domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Domain-specific endpoint used to submit index, search, and data upload requests to the domain.</p>",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get; set; }
        /// <summary>
        /// <p>If <code>IPAddressType</code> to set to <code>dualstack</code>, a version 2 domain endpoint is provisioned. This endpoint
        /// functions like a normal endpoint, except that it works with both IPv4 and IPv6 IP addresses. Normal endpoints work only
        /// with IPv4 IP addresses. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>If <code>IPAddressType</code> to set to <code>dualstack</code>, a version 2 domain endpoint is provisioned. This endpoint functions like a normal endpoint, except that it works with both IPv4 and IPv6 IP addresses. Normal endpoints work only with IPv4 IP addresses. </p>",
        SerializedName = @"endpointV2",
        PossibleTypes = new [] { typeof(string) })]
        string EndpointV2 { get; set; }
        /// <summary>
        /// <p>The key-value pair that exists if the OpenSearch Service domain uses VPC endpoints. Example <code>key, value</code>:
        /// <code>'vpc','vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com'</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The key-value pair that exists if the OpenSearch Service domain uses VPC endpoints. Example <code>key, value</code>: <code>'vpc','vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com'</code>.</p>",
        SerializedName = @"endpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesEndpoints) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesEndpoints Endpoints { get; set; }
        /// <summary>
        /// <p>Version of OpenSearch or Elasticsearch that the domain is running, in the format <code>Elasticsearch_X.Y</code> or
        /// <code>OpenSearch_X.Y</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Version of OpenSearch or Elasticsearch that the domain is running, in the format <code>Elasticsearch_X.Y</code> or <code>OpenSearch_X.Y</code>.</p>",
        SerializedName = @"engineVersion",
        PossibleTypes = new [] { typeof(string) })]
        string EngineVersion { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPAddressType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPAddressType? IPAddressTypeValue { get; set; }
        /// <summary><p>The unique entity ID of the application in the SAML identity provider.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The unique entity ID of the application in the SAML identity provider.</p>",
        SerializedName = @"entityId",
        PossibleTypes = new [] { typeof(string) })]
        string IdpEntityId { get; set; }
        /// <summary><p>The metadata of the SAML application, in XML format.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The metadata of the SAML application, in XML format.</p>",
        SerializedName = @"metadataContent",
        PossibleTypes = new [] { typeof(string) })]
        string IdpMetadataContent { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InitiatedBy) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InitiatedBy? InitiatedByValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchPartitionInstanceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchPartitionInstanceType? InstanceTypeValue { get; set; }
        /// <summary><p>Log publishing options for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Log publishing options for the domain.</p>",
        SerializedName = @"logPublishingOptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesLogPublishingOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesLogPublishingOptions LogPublishingOption { get; set; }
        /// <summary>
        /// <p>Information about the domain properties that are currently being modified.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Information about the domain properties that are currently being modified.</p>",
        SerializedName = @"modifyingProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IModifyingProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IModifyingProperties[] ModifyingProperty { get; set; }
        /// <summary><p>True to enable node-to-node encryption.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True to enable node-to-node encryption.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NodeToNodeEncryptionOptionEnabled { get; set; }
        /// <summary>
        /// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to
        /// February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled
        /// by default. You can't disable the off-peak window after it's enabled for a domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can't disable the off-peak window after it's enabled for a domain.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OffPeakWindowOptionEnabled { get; set; }
        /// <summary>
        /// <p>The status of the domain configuration. True if OpenSearch Service is processing configuration changes. False if the
        /// configuration is active.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The status of the domain configuration. True if OpenSearch Service is processing configuration changes. False if the configuration is active.</p>",
        SerializedName = @"processing",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Processing { get; set; }
        /// <summary><p>True if SAML is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True if SAML is enabled.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SamlOptionEnabled { get; set; }
        /// <summary><p>The key used for matching the SAML roles attribute.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The key used for matching the SAML roles attribute.</p>",
        SerializedName = @"rolesKey",
        PossibleTypes = new [] { typeof(string) })]
        string SamlOptionRolesKey { get; set; }
        /// <summary><p>The duration, in minutes, after which a user session becomes inactive.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The duration, in minutes, after which a user session becomes inactive.</p>",
        SerializedName = @"sessionTimeoutMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? SamlOptionSessionTimeoutMinute { get; set; }
        /// <summary><p>The key used for matching the SAML subject attribute.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The key used for matching the SAML subject attribute.</p>",
        SerializedName = @"subjectKey",
        PossibleTypes = new [] { typeof(string) })]
        string SamlOptionSubjectKey { get; set; }
        /// <summary>
        /// <p>The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically
        /// update your service software.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.</p>",
        SerializedName = @"automatedUpdateDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ServiceSoftwareOptionAutomatedUpdateDate { get; set; }
        /// <summary>
        /// <p> True if you're able to cancel your service software version update. False if you can't cancel your service software
        /// update.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> True if you're able to cancel your service software version update. False if you can't cancel your service software update.</p>",
        SerializedName = @"cancellable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ServiceSoftwareOptionCancellable { get; set; }
        /// <summary><p>The current service software version present on the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The current service software version present on the domain.</p>",
        SerializedName = @"currentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceSoftwareOptionCurrentVersion { get; set; }
        /// <summary><p>A description of the service software update status.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A description of the service software update status.</p>",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceSoftwareOptionDescription { get; set; }
        /// <summary><p>The new service software version, if one is available.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The new service software version, if one is available.</p>",
        SerializedName = @"newVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceSoftwareOptionNewVersion { get; set; }
        /// <summary>
        /// <p>True if a service software is never automatically updated. False if a service software is automatically updated after
        /// the automated update date.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.</p>",
        SerializedName = @"optionalDeployment",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ServiceSoftwareOptionOptionalDeployment { get; set; }
        /// <summary>
        /// <p>True if you're able to update your service software version. False if you can't update your service software version.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True if you're able to update your service software version. False if you can't update your service software version.</p>",
        SerializedName = @"updateAvailable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ServiceSoftwareOptionUpdateAvailable { get; set; }
        /// <summary>
        /// <p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default
        /// is <code>0</code> hours.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.</p>",
        SerializedName = @"automatedSnapshotStartHour",
        PossibleTypes = new [] { typeof(int) })]
        int? SnapshotOptionAutomatedSnapshotStartHour { get; set; }
        /// <summary><p>Whether automatic service software updates are enabled for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether automatic service software updates are enabled for the domain.</p>",
        SerializedName = @"autoSoftwareUpdateEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SoftwareUpdateOptionAutoSoftwareUpdateEnabled { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AutoTuneState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AutoTuneState? StateValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TlsSecurityPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TlsSecurityPolicy? TlSecurityPolicyValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentStatus? UpdateStatusValue { get; set; }
        /// <summary>
        /// <p>The status of a domain version upgrade to a new version of OpenSearch or Elasticsearch. True if OpenSearch Service
        /// is in the process of a version upgrade. False if the configuration is active.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The status of a domain version upgrade to a new version of OpenSearch or Elasticsearch. True if OpenSearch Service is in the process of a version upgrade. False if the configuration is active.</p>",
        SerializedName = @"upgradeProcessing",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UpgradeProcessing { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType? VolumeTypeValue { get; set; }
        /// <summary><p>The list of Availability Zones associated with the VPC subnets.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The list of Availability Zones associated with the VPC subnets.</p>",
        SerializedName = @"availabilityZones",
        PossibleTypes = new [] { typeof(string) })]
        string[] VpcOptionAvailabilityZone { get; set; }
        /// <summary>
        /// <p>The list of security group IDs associated with the VPC endpoints for the domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The list of security group IDs associated with the VPC endpoints for the domain.</p>",
        SerializedName = @"securityGroupIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] VpcOptionSecurityGroupId { get; set; }
        /// <summary><p>A list of subnet IDs associated with the VPC endpoints for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A list of subnet IDs associated with the VPC endpoints for the domain.</p>",
        SerializedName = @"subnetIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] VpcOptionSubnetId { get; set; }
        /// <summary>
        /// <p>The ID for your VPC. Amazon VPC generates this value when you create a VPC.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID for your VPC. Amazon VPC generates this value when you create a VPC.</p>",
        SerializedName = @"vpcId",
        PossibleTypes = new [] { typeof(string) })]
        string VpcOptionVpcId { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchWarmPartitionInstanceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchWarmPartitionInstanceType? WarmTypeValue { get; set; }
        /// <summary>
        /// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code>
        /// refers to 5:00 P.M. UTC.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code> refers to 5:00 P.M. UTC.</p>",
        SerializedName = @"hours",
        PossibleTypes = new [] { typeof(long) })]
        long? WindowStartTimeHour { get; set; }
        /// <summary><p>The start minute of the window, in UTC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The start minute of the window, in UTC.</p>",
        SerializedName = @"minutes",
        PossibleTypes = new [] { typeof(long) })]
        long? WindowStartTimeMinute { get; set; }
        /// <summary>
        /// <p>If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid
        /// values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number
        /// of subnets.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number of subnets.</p>",
        SerializedName = @"availabilityZoneCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ZoneAwarenessConfigAvailabilityZoneCount { get; set; }

    }
    /// Definition of awsOpenSearchDomainStatus
    internal partial interface IAwsOpenSearchDomainStatusPropertiesInternal

    {
        /// <summary>
        /// <p>Identity and Access Management (IAM) policy document specifying the access policies for the domain.</p>
        /// </summary>
        string AccessPolicy { get; set; }
        /// <summary><p>Key-value pairs that specify advanced configuration options.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesAdvancedOptions AdvancedOption { get; set; }
        /// <summary><p>Settings for fine-grained access control.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptions AdvancedSecurityOption { get; set; }
        /// <summary>
        /// <p>Date and time when the migration period will be disabled. Only necessary when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        global::System.DateTime? AdvancedSecurityOptionAnonymousAuthDisableDate { get; set; }
        /// <summary>
        /// <p>True if a 30-day migration period is enabled, during which administrators can create role mappings. Only necessary
        /// when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        bool? AdvancedSecurityOptionAnonymousAuthEnabled { get; set; }
        /// <summary><p>True if fine-grained access control is enabled.</p></summary>
        bool? AdvancedSecurityOptionEnabled { get; set; }
        /// <summary><p>True if the internal user database is enabled.</p></summary>
        bool? AdvancedSecurityOptionInternalUserDatabaseEnabled { get; set; }
        /// <summary>
        /// <p>Container for information about the SAML configuration for OpenSearch Dashboards.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutput AdvancedSecurityOptionSamlOption { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the domain. For more information, see <a href='https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html'>IAM
        /// identifiers </a> in the <i>AWS Identity and Access Management User Guide</i>.</p>
        /// </summary>
        string Arn { get; set; }
        /// <summary><p>Auto-Tune settings for the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutput AutoTuneOption { get; set; }
        /// <summary><p>Any errors that occurred while enabling or disabling Auto-Tune.</p></summary>
        string AutoTuneOptionErrorMessage { get; set; }
        /// <summary><p>The current state of Auto-Tune on the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneStateEnumValue AutoTuneOptionState { get; set; }
        /// <summary>
        /// <p>Whether the domain's off-peak window will be used to deploy Auto-Tune changes rather than a maintenance schedule.</p>
        /// </summary>
        bool? AutoTuneOptionUseOffPeakWindow { get; set; }
        /// <summary><p>Information about a configuration change happening on the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IChangeProgressDetails ChangeProgressDetail { get; set; }
        /// <summary><p>The ID of the configuration change.</p></summary>
        string ChangeProgressDetailChangeId { get; set; }
        /// <summary><p>The current status of the configuration change.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfigChangeStatusEnumValue ChangeProgressDetailConfigChangeStatus { get; set; }
        /// <summary><p>The IAM principal who initiated the configuration change.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInitiatedByEnumValue ChangeProgressDetailInitiatedBy { get; set; }
        /// <summary><p>The last time that the configuration change was updated.</p></summary>
        global::System.DateTime? ChangeProgressDetailLastUpdatedTime { get; set; }
        /// <summary><p>A message corresponding to the status of the configuration change.</p></summary>
        string ChangeProgressDetailMessage { get; set; }
        /// <summary>
        /// <p>The time that the configuration change was initiated, in Universal Coordinated Time (UTC).</p>
        /// </summary>
        global::System.DateTime? ChangeProgressDetailStartTime { get; set; }
        /// <summary><p>Container for the cluster configuration of the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfig ClusterConfig { get; set; }
        /// <summary><p>Container for cold storage configuration options.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IColdStorageOptions ClusterConfigColdStorageOption { get; set; }
        /// <summary>
        /// <p>Number of dedicated master nodes in the cluster. This number must be greater than 2 and not 4, otherwise you receive
        /// a validation exception.</p>
        /// </summary>
        int? ClusterConfigDedicatedMasterCount { get; set; }
        /// <summary>
        /// <p>Indicates whether dedicated master nodes are enabled for the cluster.<code>True</code> if the cluster will use a dedicated
        /// master node.<code>False</code> if the cluster will not.</p>
        /// </summary>
        bool? ClusterConfigDedicatedMasterEnabled { get; set; }
        /// <summary>
        /// <p>OpenSearch Service instance type of the dedicated master nodes in the cluster.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenSearchPartitionInstanceTypeEnumValue ClusterConfigDedicatedMasterType { get; set; }
        /// <summary>
        /// <p>Number of data nodes in the cluster. This number must be greater than 1, otherwise you receive a validation exception.</p>
        /// </summary>
        int? ClusterConfigInstanceCount { get; set; }
        /// <summary><p>Instance type of data nodes in the cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenSearchPartitionInstanceTypeEnumValue ClusterConfigInstanceType { get; set; }
        /// <summary>
        /// <p>A boolean that indicates whether a multi-AZ domain is turned on with a standby AZ. For more information, see <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html'>Configuring
        /// a multi-AZ domain in Amazon OpenSearch Service</a>. </p>
        /// </summary>
        bool? ClusterConfigMultiAzWithStandbyEnabled { get; set; }
        /// <summary><p>The number of warm nodes in the cluster.</p></summary>
        int? ClusterConfigWarmCount { get; set; }
        /// <summary><p>Whether to enable warm storage for the cluster.</p></summary>
        bool? ClusterConfigWarmEnabled { get; set; }
        /// <summary><p>The instance type for the cluster's warm nodes.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenSearchWarmPartitionInstanceTypeEnumValue ClusterConfigWarmType { get; set; }
        /// <summary>
        /// <p>Container for zone awareness configuration options. Only required if <code>ZoneAwarenessEnabled</code> is <code>true</code>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IZoneAwarenessConfig ClusterConfigZoneAwarenessConfig { get; set; }
        /// <summary>
        /// <p>Indicates whether multiple Availability Zones are enabled. For more information, see <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html'>Configuring
        /// a multi-AZ domain in Amazon OpenSearch Service</a>.</p>
        /// </summary>
        bool? ClusterConfigZoneAwarenessEnabled { get; set; }
        /// <summary>
        /// <p>Key-value pairs to configure Amazon Cognito authentication for OpenSearch Dashboards.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptions CognitoOption { get; set; }
        /// <summary>
        /// <p>Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards.</p>
        /// </summary>
        bool? CognitoOptionEnabled { get; set; }
        /// <summary>
        /// <p>The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        string CognitoOptionIdentityPoolId { get; set; }
        /// <summary>
        /// <p>The <code>AmazonOpenSearchServiceCognitoAccess</code> role that allows OpenSearch Service to configure your user pool
        /// and identity pool.</p>
        /// </summary>
        string CognitoOptionRoleArn { get; set; }
        /// <summary>
        /// <p>The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        string CognitoOptionUserPoolId { get; set; }
        /// <summary>
        /// <p>Whether to enable or disable cold storage on the domain. You must enable UltraWarm storage to enable cold storage.</p>
        /// </summary>
        bool? ColdStorageOptionEnabled { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ConfigChangeStatus? ConfigChangeStatusValue { get; set; }
        /// <summary>
        /// <p>Creation status of an OpenSearch Service domain. True if domain creation is complete. False if domain creation is still
        /// in progress.</p>
        /// </summary>
        bool? Created { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchPartitionInstanceType? DedicatedMasterTypeValue { get; set; }
        /// <summary>
        /// <p>Deletion status of an OpenSearch Service domain. True if domain deletion is complete. False if domain deletion is still
        /// in progress. Once deletion is complete, the status of the domain is no longer returned.</p>
        /// </summary>
        bool? Deleted { get; set; }
        /// <summary>
        /// <p>Additional options for the domain endpoint, such as whether to require HTTPS for all traffic.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptions DomainEndpointOption { get; set; }
        /// <summary><p>The fully qualified URL for the custom endpoint.</p></summary>
        string DomainEndpointOptionCustomEndpoint { get; set; }
        /// <summary>
        /// <p>The ARN for your security certificate, managed in Amazon Web Services Certificate Manager (ACM).</p>
        /// </summary>
        string DomainEndpointOptionCustomEndpointCertificateArn { get; set; }
        /// <summary><p>Whether to enable a custom endpoint for the domain.</p></summary>
        bool? DomainEndpointOptionCustomEndpointEnabled { get; set; }
        /// <summary><p>True to require that all traffic to the domain arrive over HTTPS.</p></summary>
        bool? DomainEndpointOptionEnforceHttps { get; set; }
        /// <summary>
        /// <p>Specify the TLS security policy to apply to the HTTPS endpoint of the domain. The policy can be one of the following
        /// values:</p> <ul> <li> <p> <b>Policy-Min-TLS-1-0-2019-07:</b> TLS security policy that supports TLS version 1.0 to TLS
        /// version 1.2</p> </li> <li> <p> <b>Policy-Min-TLS-1-2-2019-07:</b> TLS security policy that supports only TLS version 1.2</p>
        /// </li> <li> <p> <b>Policy-Min-TLS-1-2-PFS-2023-10:</b> TLS security policy that supports TLS version 1.2 to TLS version
        /// 1.3 with perfect forward secrecy cipher suites</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITlsSecurityPolicyEnumValue DomainEndpointOptionTlsSecurityPolicy { get; set; }
        /// <summary><p>Unique identifier for the domain.</p></summary>
        string DomainId { get; set; }
        /// <summary>
        /// <p>Name of the domain. Domain names are unique across all domains owned by the same account within an Amazon Web Services
        /// Region.</p>
        /// </summary>
        string DomainName { get; set; }
        /// <summary><p>The status of any changes that are currently in progress for the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainProcessingStatusTypeEnumValue DomainProcessingStatus { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DomainProcessingStatusType? DomainProcessingStatusValue { get; set; }
        /// <summary>
        /// <p>Indicates whether EBS volumes are attached to data nodes in an OpenSearch Service domain.</p>
        /// </summary>
        bool? EbOptionEbsEnabled { get; set; }
        /// <summary>
        /// <p>Specifies the baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the
        /// <code>gp3</code> and provisioned IOPS EBS volume types.</p>
        /// </summary>
        int? EbOptionIop { get; set; }
        /// <summary>
        /// <p>Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the <code>gp3</code>
        /// volume type.</p>
        /// </summary>
        int? EbOptionThroughput { get; set; }
        /// <summary><p>Specifies the size (in GiB) of EBS volumes attached to data nodes.</p></summary>
        int? EbOptionVolumeSize { get; set; }
        /// <summary><p>Specifies the type of EBS volumes attached to data nodes.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeTypeEnumValue EbOptionVolumeType { get; set; }
        /// <summary><p>Container for EBS-based storage settings for the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsOptions EbsOption { get; set; }
        /// <summary><p>Encryption at rest settings for the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionAtRestOptions EncryptionAtRestOption { get; set; }
        /// <summary><p>True to enable encryption at rest.</p></summary>
        bool? EncryptionAtRestOptionEnabled { get; set; }
        /// <summary>
        /// <p>The KMS key ID. Takes the form <code>1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a</code>.</p>
        /// </summary>
        string EncryptionAtRestOptionKmsKeyId { get; set; }
        /// <summary>
        /// <p>Domain-specific endpoint used to submit index, search, and data upload requests to the domain.</p>
        /// </summary>
        string Endpoint { get; set; }
        /// <summary>
        /// <p>If <code>IPAddressType</code> to set to <code>dualstack</code>, a version 2 domain endpoint is provisioned. This endpoint
        /// functions like a normal endpoint, except that it works with both IPv4 and IPv6 IP addresses. Normal endpoints work only
        /// with IPv4 IP addresses. </p>
        /// </summary>
        string EndpointV2 { get; set; }
        /// <summary>
        /// <p>The key-value pair that exists if the OpenSearch Service domain uses VPC endpoints. Example <code>key, value</code>:
        /// <code>'vpc','vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com'</code>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesEndpoints Endpoints { get; set; }
        /// <summary>
        /// <p>Version of OpenSearch or Elasticsearch that the domain is running, in the format <code>Elasticsearch_X.Y</code> or
        /// <code>OpenSearch_X.Y</code>.</p>
        /// </summary>
        string EngineVersion { get; set; }
        /// <summary><p>The type of IP addresses supported by the endpoint for the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPAddressTypeEnumValue IPAddressType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPAddressType? IPAddressTypeValue { get; set; }
        /// <summary><p>The unique entity ID of the application in the SAML identity provider.</p></summary>
        string IdpEntityId { get; set; }
        /// <summary><p>The metadata of the SAML application, in XML format.</p></summary>
        string IdpMetadataContent { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InitiatedBy? InitiatedByValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchPartitionInstanceType? InstanceTypeValue { get; set; }
        /// <summary><p>Log publishing options for the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsOpenSearchDomainStatusPropertiesLogPublishingOptions LogPublishingOption { get; set; }
        /// <summary>
        /// <p>Information about the domain properties that are currently being modified.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IModifyingProperties[] ModifyingProperty { get; set; }
        /// <summary><p>Whether node-to-node encryption is enabled or disabled.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INodeToNodeEncryptionOptions NodeToNodeEncryptionOption { get; set; }
        /// <summary><p>True to enable node-to-node encryption.</p></summary>
        bool? NodeToNodeEncryptionOptionEnabled { get; set; }
        /// <summary>
        /// <p>Options that specify a custom 10-hour window during which OpenSearch Service can perform configuration changes on the
        /// domain.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptions OffPeakWindowOption { get; set; }
        /// <summary>
        /// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to
        /// February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled
        /// by default. You can't disable the off-peak window after it's enabled for a domain.</p>
        /// </summary>
        bool? OffPeakWindowOptionEnabled { get; set; }
        /// <summary><p>Off-peak window settings for the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindow OffPeakWindowOptionOffPeakWindow { get; set; }
        /// <summary>
        /// <p>A custom start time for the off-peak window, in Coordinated Universal Time (UTC). The window length will always be
        /// 10 hours, so you can't specify an end time. For example, if you specify 11:00 P.M. UTC as a start time, the end time will
        /// automatically be set to 9:00 A.M.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWindowStartTime OffPeakWindowStartTime { get; set; }
        /// <summary>
        /// <p>The status of the domain configuration. True if OpenSearch Service is processing configuration changes. False if the
        /// configuration is active.</p>
        /// </summary>
        bool? Processing { get; set; }
        /// <summary><p>True if SAML is enabled.</p></summary>
        bool? SamlOptionEnabled { get; set; }
        /// <summary><p>Describes the SAML identity provider's information.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlIdp SamlOptionIdp { get; set; }
        /// <summary><p>The key used for matching the SAML roles attribute.</p></summary>
        string SamlOptionRolesKey { get; set; }
        /// <summary><p>The duration, in minutes, after which a user session becomes inactive.</p></summary>
        int? SamlOptionSessionTimeoutMinute { get; set; }
        /// <summary><p>The key used for matching the SAML subject attribute.</p></summary>
        string SamlOptionSubjectKey { get; set; }
        /// <summary><p>The current status of the domain's service software.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceSoftwareOptions ServiceSoftwareOption { get; set; }
        /// <summary>
        /// <p>The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically
        /// update your service software.</p>
        /// </summary>
        global::System.DateTime? ServiceSoftwareOptionAutomatedUpdateDate { get; set; }
        /// <summary>
        /// <p> True if you're able to cancel your service software version update. False if you can't cancel your service software
        /// update.</p>
        /// </summary>
        bool? ServiceSoftwareOptionCancellable { get; set; }
        /// <summary><p>The current service software version present on the domain.</p></summary>
        string ServiceSoftwareOptionCurrentVersion { get; set; }
        /// <summary><p>A description of the service software update status.</p></summary>
        string ServiceSoftwareOptionDescription { get; set; }
        /// <summary><p>The new service software version, if one is available.</p></summary>
        string ServiceSoftwareOptionNewVersion { get; set; }
        /// <summary>
        /// <p>True if a service software is never automatically updated. False if a service software is automatically updated after
        /// the automated update date.</p>
        /// </summary>
        bool? ServiceSoftwareOptionOptionalDeployment { get; set; }
        /// <summary>
        /// <p>True if you're able to update your service software version. False if you can't update your service software version.</p>
        /// </summary>
        bool? ServiceSoftwareOptionUpdateAvailable { get; set; }
        /// <summary><p>The status of your service software update.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentStatusEnumValue ServiceSoftwareOptionUpdateStatus { get; set; }
        /// <summary>
        /// <p>DEPRECATED. Container for parameters required to configure automated snapshots of domain indexes.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotOptions SnapshotOption { get; set; }
        /// <summary>
        /// <p>The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default
        /// is <code>0</code> hours.</p>
        /// </summary>
        int? SnapshotOptionAutomatedSnapshotStartHour { get; set; }
        /// <summary><p>Service software update options for the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISoftwareUpdateOptions SoftwareUpdateOption { get; set; }
        /// <summary><p>Whether automatic service software updates are enabled for the domain.</p></summary>
        bool? SoftwareUpdateOptionAutoSoftwareUpdateEnabled { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AutoTuneState? StateValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TlsSecurityPolicy? TlSecurityPolicyValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentStatus? UpdateStatusValue { get; set; }
        /// <summary>
        /// <p>The status of a domain version upgrade to a new version of OpenSearch or Elasticsearch. True if OpenSearch Service
        /// is in the process of a version upgrade. False if the configuration is active.</p>
        /// </summary>
        bool? UpgradeProcessing { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType? VolumeTypeValue { get; set; }
        /// <summary><p>The VPC configuration for the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcDerivedInfo VpcOption { get; set; }
        /// <summary><p>The list of Availability Zones associated with the VPC subnets.</p></summary>
        string[] VpcOptionAvailabilityZone { get; set; }
        /// <summary>
        /// <p>The list of security group IDs associated with the VPC endpoints for the domain.</p>
        /// </summary>
        string[] VpcOptionSecurityGroupId { get; set; }
        /// <summary><p>A list of subnet IDs associated with the VPC endpoints for the domain.</p></summary>
        string[] VpcOptionSubnetId { get; set; }
        /// <summary>
        /// <p>The ID for your VPC. Amazon VPC generates this value when you create a VPC.</p>
        /// </summary>
        string VpcOptionVpcId { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OpenSearchWarmPartitionInstanceType? WarmTypeValue { get; set; }
        /// <summary>
        /// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code>
        /// refers to 5:00 P.M. UTC.</p>
        /// </summary>
        long? WindowStartTimeHour { get; set; }
        /// <summary><p>The start minute of the window, in UTC.</p></summary>
        long? WindowStartTimeMinute { get; set; }
        /// <summary>
        /// <p>If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid
        /// values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number
        /// of subnets.</p>
        /// </summary>
        int? ZoneAwarenessConfigAvailabilityZoneCount { get; set; }

    }
}