// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of MetricsCollection</summary>
    public partial class MetricsCollection :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricsCollection,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricsCollectionInternal
    {

        /// <summary>Backing field for <see cref="Granularity" /> property.</summary>
        private string _granularity;

        /// <summary>
        /// The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is ``1Minute``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Granularity { get => this._granularity; set => this._granularity = value; }

        /// <summary>Backing field for <see cref="Metric" /> property.</summary>
        private string[] _metric;

        /// <summary>
        /// Identifies the metrics to enable. You can specify one or more of the following metrics: + ``GroupMinSize`` + ``GroupMaxSize``
        /// + ``GroupDesiredCapacity`` + ``GroupInServiceInstances`` + ``GroupPendingInstances`` + ``GroupStandbyInstances`` + ``GroupTerminatingInstances``
        /// + ``GroupTotalInstances`` + ``GroupInServiceCapacity`` + ``GroupPendingCapacity`` + ``GroupStandbyCapacity`` + ``GroupTerminatingCapacity``
        /// + ``GroupTotalCapacity`` + ``WarmPoolDesiredCapacity`` + ``WarmPoolWarmedCapacity`` + ``WarmPoolPendingCapacity`` + ``WarmPoolTerminatingCapacity``
        /// + ``WarmPoolTotalCapacity`` + ``GroupAndWarmPoolDesiredCapacity`` + ``GroupAndWarmPoolTotalCapacity`` If you specify ``Granularity``
        /// and don't specify any metrics, all metrics are enabled. For more information, see [Auto Scaling group metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Metric { get => this._metric; set => this._metric = value; }

        /// <summary>Creates an new <see cref="MetricsCollection" /> instance.</summary>
        public MetricsCollection()
        {

        }
    }
    /// Definition of MetricsCollection
    public partial interface IMetricsCollection :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is ``1Minute``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is ``1Minute``.",
        SerializedName = @"granularity",
        PossibleTypes = new [] { typeof(string) })]
        string Granularity { get; set; }
        /// <summary>
        /// Identifies the metrics to enable. You can specify one or more of the following metrics: + ``GroupMinSize`` + ``GroupMaxSize``
        /// + ``GroupDesiredCapacity`` + ``GroupInServiceInstances`` + ``GroupPendingInstances`` + ``GroupStandbyInstances`` + ``GroupTerminatingInstances``
        /// + ``GroupTotalInstances`` + ``GroupInServiceCapacity`` + ``GroupPendingCapacity`` + ``GroupStandbyCapacity`` + ``GroupTerminatingCapacity``
        /// + ``GroupTotalCapacity`` + ``WarmPoolDesiredCapacity`` + ``WarmPoolWarmedCapacity`` + ``WarmPoolPendingCapacity`` + ``WarmPoolTerminatingCapacity``
        /// + ``WarmPoolTotalCapacity`` + ``GroupAndWarmPoolDesiredCapacity`` + ``GroupAndWarmPoolTotalCapacity`` If you specify ``Granularity``
        /// and don't specify any metrics, all metrics are enabled. For more information, see [Auto Scaling group metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies the metrics to enable. You can specify one or more of the following metrics:  +   ``GroupMinSize``   +   ``GroupMaxSize``   +   ``GroupDesiredCapacity``   +   ``GroupInServiceInstances``   +   ``GroupPendingInstances``   +   ``GroupStandbyInstances``   +   ``GroupTerminatingInstances``   +   ``GroupTotalInstances``   +   ``GroupInServiceCapacity``   +   ``GroupPendingCapacity``   +   ``GroupStandbyCapacity``   +   ``GroupTerminatingCapacity``   +   ``GroupTotalCapacity``   +   ``WarmPoolDesiredCapacity``   +   ``WarmPoolWarmedCapacity``   +   ``WarmPoolPendingCapacity``   +   ``WarmPoolTerminatingCapacity``   +   ``WarmPoolTotalCapacity``   +   ``GroupAndWarmPoolDesiredCapacity``   +   ``GroupAndWarmPoolTotalCapacity``    If you specify ``Granularity`` and don't specify any metrics, all metrics are enabled. For more information, see [Auto Scaling group metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics) in the *Amazon EC2 Auto Scaling User Guide*.",
        SerializedName = @"metrics",
        PossibleTypes = new [] { typeof(string) })]
        string[] Metric { get; set; }

    }
    /// Definition of MetricsCollection
    internal partial interface IMetricsCollectionInternal

    {
        /// <summary>
        /// The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is ``1Minute``.
        /// </summary>
        string Granularity { get; set; }
        /// <summary>
        /// Identifies the metrics to enable. You can specify one or more of the following metrics: + ``GroupMinSize`` + ``GroupMaxSize``
        /// + ``GroupDesiredCapacity`` + ``GroupInServiceInstances`` + ``GroupPendingInstances`` + ``GroupStandbyInstances`` + ``GroupTerminatingInstances``
        /// + ``GroupTotalInstances`` + ``GroupInServiceCapacity`` + ``GroupPendingCapacity`` + ``GroupStandbyCapacity`` + ``GroupTerminatingCapacity``
        /// + ``GroupTotalCapacity`` + ``WarmPoolDesiredCapacity`` + ``WarmPoolWarmedCapacity`` + ``WarmPoolPendingCapacity`` + ``WarmPoolTerminatingCapacity``
        /// + ``WarmPoolTotalCapacity`` + ``GroupAndWarmPoolDesiredCapacity`` + ``GroupAndWarmPoolTotalCapacity`` If you specify ``Granularity``
        /// and don't specify any metrics, all metrics are enabled. For more information, see [Auto Scaling group metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        string[] Metric { get; set; }

    }
}