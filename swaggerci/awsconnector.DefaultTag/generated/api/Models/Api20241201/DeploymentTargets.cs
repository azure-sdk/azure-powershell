// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of DeploymentTargets</summary>
    public partial class DeploymentTargets :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentTargets,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentTargetsInternal
    {

        /// <summary>Backing field for <see cref="Account" /> property.</summary>
        private string[] _account;

        /// <summary>
        /// AWS accounts that you want to create stack instances in the specified Region(s) for.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Account { get => this._account; set => this._account = value; }

        /// <summary>Backing field for <see cref="AccountFilterType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentTargetsAccountFilterType? _accountFilterType;

        /// <summary>The filter type you want to apply on organizational units and accounts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentTargetsAccountFilterType? AccountFilterType { get => this._accountFilterType; set => this._accountFilterType = value; }

        /// <summary>Backing field for <see cref="AccountsUrl" /> property.</summary>
        private string _accountsUrl;

        /// <summary>Returns the value of the AccountsUrl property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AccountsUrl { get => this._accountsUrl; set => this._accountsUrl = value; }

        /// <summary>Backing field for <see cref="OrganizationalUnitId" /> property.</summary>
        private string[] _organizationalUnitId;

        /// <summary>
        /// The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] OrganizationalUnitId { get => this._organizationalUnitId; set => this._organizationalUnitId = value; }

        /// <summary>Creates an new <see cref="DeploymentTargets" /> instance.</summary>
        public DeploymentTargets()
        {

        }
    }
    /// Definition of DeploymentTargets
    public partial interface IDeploymentTargets :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// AWS accounts that you want to create stack instances in the specified Region(s) for.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS accounts that you want to create stack instances in the specified Region(s) for.",
        SerializedName = @"accounts",
        PossibleTypes = new [] { typeof(string) })]
        string[] Account { get; set; }
        /// <summary>The filter type you want to apply on organizational units and accounts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The filter type you want to apply on organizational units and accounts.",
        SerializedName = @"accountFilterType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentTargetsAccountFilterType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentTargetsAccountFilterType? AccountFilterType { get; set; }
        /// <summary>Returns the value of the AccountsUrl property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Returns the value of the AccountsUrl property.",
        SerializedName = @"accountsUrl",
        PossibleTypes = new [] { typeof(string) })]
        string AccountsUrl { get; set; }
        /// <summary>
        /// The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The organization root ID or organizational unit (OU) IDs to which StackSets deploys.",
        SerializedName = @"organizationalUnitIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] OrganizationalUnitId { get; set; }

    }
    /// Definition of DeploymentTargets
    internal partial interface IDeploymentTargetsInternal

    {
        /// <summary>
        /// AWS accounts that you want to create stack instances in the specified Region(s) for.
        /// </summary>
        string[] Account { get; set; }
        /// <summary>The filter type you want to apply on organizational units and accounts.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentTargetsAccountFilterType? AccountFilterType { get; set; }
        /// <summary>Returns the value of the AccountsUrl property.</summary>
        string AccountsUrl { get; set; }
        /// <summary>
        /// The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
        /// </summary>
        string[] OrganizationalUnitId { get; set; }

    }
}