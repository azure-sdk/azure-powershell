// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsLightsailInstance</summary>
    public partial class AwsLightsailInstanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstanceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AddOn" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAddOn[] _addOn;

        /// <summary>An array of objects representing the add-ons to enable for the new instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAddOn[] AddOn { get => this._addOn; set => this._addOn = value; }

        /// <summary>Backing field for <see cref="AvailabilityZone" /> property.</summary>
        private string _availabilityZone;

        /// <summary>
        /// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure
        /// to add the include Availability Zones parameter to your request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AvailabilityZone { get => this._availabilityZone; set => this._availabilityZone = value; }

        /// <summary>Backing field for <see cref="BlueprintId" /> property.</summary>
        private string _blueprintId;

        /// <summary>
        /// The ID for a virtual private server image (e.g., app_wordpress_4_4 or app_lamp_7_0 ). Use the get blueprints operation
        /// to return a list of available images (or blueprints ).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string BlueprintId { get => this._blueprintId; set => this._blueprintId = value; }

        /// <summary>Backing field for <see cref="BundleId" /> property.</summary>
        private string _bundleId;

        /// <summary>
        /// The bundle of specification information for your virtual private server (or instance ), including the pricing plan (e.g.,
        /// micro_1_0 ).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string BundleId { get => this._bundleId; set => this._bundleId = value; }

        /// <summary>Backing field for <see cref="Hardware" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardware _hardware;

        /// <summary>Hardware of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardware Hardware { get => (this._hardware = this._hardware ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Hardware()); set => this._hardware = value; }

        /// <summary>CPU count of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? HardwareCpuCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardwareInternal)Hardware).CpuCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardwareInternal)Hardware).CpuCount = value ?? default(int); }

        /// <summary>Disks attached to the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDisk[] HardwareDisk { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardwareInternal)Hardware).Disk; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardwareInternal)Hardware).Disk = value ?? null /* arrayOf */; }

        /// <summary>RAM Size of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? HardwareRamSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardwareInternal)Hardware).RamSizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardwareInternal)Hardware).RamSizeInGb = value ?? default(int); }

        /// <summary>Backing field for <see cref="InstanceArn" /> property.</summary>
        private string _instanceArn;

        /// <summary>Property instanceArn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string InstanceArn { get => this._instanceArn; set => this._instanceArn = value; }

        /// <summary>Backing field for <see cref="InstanceName" /> property.</summary>
        private string _instanceName;

        /// <summary>The names to use for your new Lightsail instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string InstanceName { get => this._instanceName; set => this._instanceName = value; }

        /// <summary>Backing field for <see cref="IsStaticIP" /> property.</summary>
        private bool? _isStaticIP;

        /// <summary>Is the IP Address of the Instance is the static IP</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? IsStaticIP { get => this._isStaticIP; set => this._isStaticIP = value; }

        /// <summary>Backing field for <see cref="KeyPairName" /> property.</summary>
        private string _keyPairName;

        /// <summary>The name of your key pair.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string KeyPairName { get => this._keyPairName; set => this._keyPairName = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocation _location;

        /// <summary>Location of a resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocation Location { get => (this._location = this._location ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Location()); set => this._location = value; }

        /// <summary>
        /// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure
        /// to add the include Availability Zones parameter to your request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LocationAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocationInternal)Location).AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocationInternal)Location).AvailabilityZone = value ?? null; }

        /// <summary>The Region Name in which to create your instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LocationRegionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocationInternal)Location).RegionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocationInternal)Location).RegionName = value ?? null; }

        /// <summary>Internal Acessors for Hardware</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardware Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal.Hardware { get => (this._hardware = this._hardware ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Hardware()); set { {_hardware = value;} } }

        /// <summary>Internal Acessors for Location</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocation Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal.Location { get => (this._location = this._location ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Location()); set { {_location = value;} } }

        /// <summary>Internal Acessors for Networking</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworking Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal.Networking { get => (this._networking = this._networking ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Networking()); set { {_networking = value;} } }

        /// <summary>Internal Acessors for NetworkingMonthlyTransfer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonthlyTransfer Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal.NetworkingMonthlyTransfer { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkingInternal)Networking).MonthlyTransfer; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkingInternal)Networking).MonthlyTransfer = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IState Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal.State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.State()); set { {_state = value;} } }

        /// <summary>GbPerMonthAllocated of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string MonthlyTransferGbPerMonthAllocated { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkingInternal)Networking).MonthlyTransferGbPerMonthAllocated; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkingInternal)Networking).MonthlyTransferGbPerMonthAllocated = value ?? null; }

        /// <summary>Backing field for <see cref="Networking" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworking _networking;

        /// <summary>Networking of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworking Networking { get => (this._networking = this._networking ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Networking()); set => this._networking = value; }

        /// <summary>Ports to the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPort[] NetworkingPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkingInternal)Networking).Port; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkingInternal)Networking).Port = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="PrivateIPAddress" /> property.</summary>
        private string _privateIPAddress;

        /// <summary>Private IP Address of the Instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PrivateIPAddress { get => this._privateIPAddress; set => this._privateIPAddress = value; }

        /// <summary>Backing field for <see cref="PublicIPAddress" /> property.</summary>
        private string _publicIPAddress;

        /// <summary>Public IP Address of the Instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicIPAddress { get => this._publicIPAddress; set => this._publicIPAddress = value; }

        /// <summary>Backing field for <see cref="ResourceType" /> property.</summary>
        private string _resourceType;

        /// <summary>Resource type of Lightsail instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ResourceType { get => this._resourceType; set => this._resourceType = value; }

        /// <summary>Backing field for <see cref="SshKeyName" /> property.</summary>
        private string _sshKeyName;

        /// <summary>SSH Key Name of the Lightsail instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SshKeyName { get => this._sshKeyName; set => this._sshKeyName = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IState _state;

        /// <summary>Current State of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IState State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.State()); set => this._state = value; }

        /// <summary>Status code of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? StateCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateInternal)State).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateInternal)State).Code = value ?? default(int); }

        /// <summary>Status code of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string StateName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateInternal)State).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateInternal)State).Name = value ?? null; }

        /// <summary>Backing field for <see cref="SupportCode" /> property.</summary>
        private string _supportCode;

        /// <summary>Support code to help identify any issues</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SupportCode { get => this._supportCode; set => this._supportCode = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated39[] _tag;

        /// <summary>An array of key-value pairs to apply to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated39[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="UserData" /> property.</summary>
        private string _userData;

        /// <summary>
        /// A launch script you can create that configures a server with additional user data. For example, you might want to run
        /// apt-get -y update.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string UserData { get => this._userData; set => this._userData = value; }

        /// <summary>Backing field for <see cref="UserName" /> property.</summary>
        private string _userName;

        /// <summary>Username of the Lightsail instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string UserName { get => this._userName; set => this._userName = value; }

        /// <summary>Creates an new <see cref="AwsLightsailInstanceProperties" /> instance.</summary>
        public AwsLightsailInstanceProperties()
        {

        }
    }
    /// Definition of awsLightsailInstance
    public partial interface IAwsLightsailInstanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>An array of objects representing the add-ons to enable for the new instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array of objects representing the add-ons to enable for the new instance.",
        SerializedName = @"addOns",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAddOn) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAddOn[] AddOn { get; set; }
        /// <summary>
        /// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure
        /// to add the include Availability Zones parameter to your request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZone { get; set; }
        /// <summary>
        /// The ID for a virtual private server image (e.g., app_wordpress_4_4 or app_lamp_7_0 ). Use the get blueprints operation
        /// to return a list of available images (or blueprints ).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID for a virtual private server image (e.g., app_wordpress_4_4 or app_lamp_7_0 ). Use the get blueprints operation to return a list of available images (or blueprints ).",
        SerializedName = @"blueprintId",
        PossibleTypes = new [] { typeof(string) })]
        string BlueprintId { get; set; }
        /// <summary>
        /// The bundle of specification information for your virtual private server (or instance ), including the pricing plan (e.g.,
        /// micro_1_0 ).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The bundle of specification information for your virtual private server (or instance ), including the pricing plan (e.g., micro_1_0 ).",
        SerializedName = @"bundleId",
        PossibleTypes = new [] { typeof(string) })]
        string BundleId { get; set; }
        /// <summary>CPU count of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CPU count of the Instance.",
        SerializedName = @"cpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? HardwareCpuCount { get; set; }
        /// <summary>Disks attached to the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Disks attached to the Instance.",
        SerializedName = @"disks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDisk) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDisk[] HardwareDisk { get; set; }
        /// <summary>RAM Size of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"RAM Size of the Instance.",
        SerializedName = @"ramSizeInGb",
        PossibleTypes = new [] { typeof(int) })]
        int? HardwareRamSizeInGb { get; set; }
        /// <summary>Property instanceArn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property instanceArn",
        SerializedName = @"instanceArn",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceArn { get; set; }
        /// <summary>The names to use for your new Lightsail instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The names to use for your new Lightsail instance.",
        SerializedName = @"instanceName",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceName { get; set; }
        /// <summary>Is the IP Address of the Instance is the static IP</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is the IP Address of the Instance is the static IP",
        SerializedName = @"isStaticIp",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsStaticIP { get; set; }
        /// <summary>The name of your key pair.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of your key pair.",
        SerializedName = @"keyPairName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyPairName { get; set; }
        /// <summary>
        /// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure
        /// to add the include Availability Zones parameter to your request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string LocationAvailabilityZone { get; set; }
        /// <summary>The Region Name in which to create your instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Region Name in which to create your instance.",
        SerializedName = @"regionName",
        PossibleTypes = new [] { typeof(string) })]
        string LocationRegionName { get; set; }
        /// <summary>GbPerMonthAllocated of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"GbPerMonthAllocated of the Instance.",
        SerializedName = @"gbPerMonthAllocated",
        PossibleTypes = new [] { typeof(string) })]
        string MonthlyTransferGbPerMonthAllocated { get; set; }
        /// <summary>Ports to the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ports to the Instance.",
        SerializedName = @"ports",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPort) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPort[] NetworkingPort { get; set; }
        /// <summary>Private IP Address of the Instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private IP Address of the Instance",
        SerializedName = @"privateIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateIPAddress { get; set; }
        /// <summary>Public IP Address of the Instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public IP Address of the Instance",
        SerializedName = @"publicIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIPAddress { get; set; }
        /// <summary>Resource type of Lightsail instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource type of Lightsail instance.",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get; set; }
        /// <summary>SSH Key Name of the Lightsail instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SSH Key Name of the  Lightsail instance.",
        SerializedName = @"sshKeyName",
        PossibleTypes = new [] { typeof(string) })]
        string SshKeyName { get; set; }
        /// <summary>Status code of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status code of the Instance.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(int) })]
        int? StateCode { get; set; }
        /// <summary>Status code of the Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status code of the Instance.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string StateName { get; set; }
        /// <summary>Support code to help identify any issues</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Support code to help identify any issues",
        SerializedName = @"supportCode",
        PossibleTypes = new [] { typeof(string) })]
        string SupportCode { get; set; }
        /// <summary>An array of key-value pairs to apply to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array of key-value pairs to apply to this resource.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated39) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated39[] Tag { get; set; }
        /// <summary>
        /// A launch script you can create that configures a server with additional user data. For example, you might want to run
        /// apt-get -y update.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A launch script you can create that configures a server with additional user data. For example, you might want to run apt-get -y update.",
        SerializedName = @"userData",
        PossibleTypes = new [] { typeof(string) })]
        string UserData { get; set; }
        /// <summary>Username of the Lightsail instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username of the  Lightsail instance.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }

    }
    /// Definition of awsLightsailInstance
    internal partial interface IAwsLightsailInstancePropertiesInternal

    {
        /// <summary>An array of objects representing the add-ons to enable for the new instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAddOn[] AddOn { get; set; }
        /// <summary>
        /// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure
        /// to add the include Availability Zones parameter to your request.
        /// </summary>
        string AvailabilityZone { get; set; }
        /// <summary>
        /// The ID for a virtual private server image (e.g., app_wordpress_4_4 or app_lamp_7_0 ). Use the get blueprints operation
        /// to return a list of available images (or blueprints ).
        /// </summary>
        string BlueprintId { get; set; }
        /// <summary>
        /// The bundle of specification information for your virtual private server (or instance ), including the pricing plan (e.g.,
        /// micro_1_0 ).
        /// </summary>
        string BundleId { get; set; }
        /// <summary>Hardware of the Instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardware Hardware { get; set; }
        /// <summary>CPU count of the Instance.</summary>
        int? HardwareCpuCount { get; set; }
        /// <summary>Disks attached to the Instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDisk[] HardwareDisk { get; set; }
        /// <summary>RAM Size of the Instance.</summary>
        int? HardwareRamSizeInGb { get; set; }
        /// <summary>Property instanceArn</summary>
        string InstanceArn { get; set; }
        /// <summary>The names to use for your new Lightsail instance.</summary>
        string InstanceName { get; set; }
        /// <summary>Is the IP Address of the Instance is the static IP</summary>
        bool? IsStaticIP { get; set; }
        /// <summary>The name of your key pair.</summary>
        string KeyPairName { get; set; }
        /// <summary>Location of a resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocation Location { get; set; }
        /// <summary>
        /// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure
        /// to add the include Availability Zones parameter to your request.
        /// </summary>
        string LocationAvailabilityZone { get; set; }
        /// <summary>The Region Name in which to create your instance.</summary>
        string LocationRegionName { get; set; }
        /// <summary>GbPerMonthAllocated of the Instance.</summary>
        string MonthlyTransferGbPerMonthAllocated { get; set; }
        /// <summary>Networking of the Instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworking Networking { get; set; }
        /// <summary>Monthly Transfer of the Instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonthlyTransfer NetworkingMonthlyTransfer { get; set; }
        /// <summary>Ports to the Instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPort[] NetworkingPort { get; set; }
        /// <summary>Private IP Address of the Instance</summary>
        string PrivateIPAddress { get; set; }
        /// <summary>Public IP Address of the Instance</summary>
        string PublicIPAddress { get; set; }
        /// <summary>Resource type of Lightsail instance.</summary>
        string ResourceType { get; set; }
        /// <summary>SSH Key Name of the Lightsail instance.</summary>
        string SshKeyName { get; set; }
        /// <summary>Current State of the Instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IState State { get; set; }
        /// <summary>Status code of the Instance.</summary>
        int? StateCode { get; set; }
        /// <summary>Status code of the Instance.</summary>
        string StateName { get; set; }
        /// <summary>Support code to help identify any issues</summary>
        string SupportCode { get; set; }
        /// <summary>An array of key-value pairs to apply to this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated39[] Tag { get; set; }
        /// <summary>
        /// A launch script you can create that configures a server with additional user data. For example, you might want to run
        /// apt-get -y update.
        /// </summary>
        string UserData { get; set; }
        /// <summary>Username of the Lightsail instance.</summary>
        string UserName { get; set; }

    }
}