// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsElasticBeanstalkApplication</summary>
    public partial class AwsElasticBeanstalkApplicationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApplicationName" /> property.</summary>
        private string _applicationName;

        /// <summary>
        /// A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical
        /// ID and uses that ID for the application name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ApplicationName { get => this._applicationName; set => this._applicationName = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Your description of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxAgeRuleDeleteSourceFromS3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxAgeRuleDeleteSourceFromS3; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxAgeRuleDeleteSourceFromS3 = value ?? default(bool); }

        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxAgeRuleEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxAgeRuleEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxAgeRuleEnabled = value ?? default(bool); }

        /// <summary>Specify the number of days to retain an application versions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? MaxAgeRuleMaxAgeInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxAgeRuleMaxAgeInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxAgeRuleMaxAgeInDay = value ?? default(int); }

        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxCountRuleDeleteSourceFromS3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxCountRuleDeleteSourceFromS3; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxCountRuleDeleteSourceFromS3 = value ?? default(bool); }

        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxCountRuleEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxCountRuleEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxCountRuleEnabled = value ?? default(bool); }

        /// <summary>Specify the maximum number of application versions to retain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? MaxCountRuleMaxCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxCountRuleMaxCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).MaxCountRuleMaxCount = value ?? default(int); }

        /// <summary>Internal Acessors for ResourceLifecycleConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal.ResourceLifecycleConfig { get => (this._resourceLifecycleConfig = this._resourceLifecycleConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ApplicationResourceLifecycleConfig()); set { {_resourceLifecycleConfig = value;} } }

        /// <summary>Internal Acessors for ResourceLifecycleConfigVersionLifecycleConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal.ResourceLifecycleConfigVersionLifecycleConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).VersionLifecycleConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).VersionLifecycleConfig = value; }

        /// <summary>Internal Acessors for VersionLifecycleConfigMaxAgeRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRule Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal.VersionLifecycleConfigMaxAgeRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).VersionLifecycleConfigMaxAgeRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).VersionLifecycleConfigMaxAgeRule = value; }

        /// <summary>Internal Acessors for VersionLifecycleConfigMaxCountRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRule Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkApplicationPropertiesInternal.VersionLifecycleConfigMaxCountRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).VersionLifecycleConfigMaxCountRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).VersionLifecycleConfigMaxCountRule = value; }

        /// <summary>Backing field for <see cref="ResourceLifecycleConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfig _resourceLifecycleConfig;

        /// <summary>
        /// Specifies an application resource lifecycle configuration to prevent your application from accumulating too many versions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfig ResourceLifecycleConfig { get => (this._resourceLifecycleConfig = this._resourceLifecycleConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ApplicationResourceLifecycleConfig()); set => this._resourceLifecycleConfig = value; }

        /// <summary>
        /// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the
        /// first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk
        /// persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in
        /// subsequent updates to change the Service Role to another value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ResourceLifecycleConfigServiceRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).ServiceRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal)ResourceLifecycleConfig).ServiceRole = value ?? null; }

        /// <summary>
        /// Creates an new <see cref="AwsElasticBeanstalkApplicationProperties" /> instance.
        /// </summary>
        public AwsElasticBeanstalkApplicationProperties()
        {

        }
    }
    /// Definition of awsElasticBeanstalkApplication
    public partial interface IAwsElasticBeanstalkApplicationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical
        /// ID and uses that ID for the application name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the application name.",
        SerializedName = @"applicationName",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationName { get; set; }
        /// <summary>Your description of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Your description of the application.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.",
        SerializedName = @"deleteSourceFromS3",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxAgeRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify true to apply the rule, or false to disable it.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxAgeRuleEnabled { get; set; }
        /// <summary>Specify the number of days to retain an application versions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the number of days to retain an application versions.",
        SerializedName = @"maxAgeInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxAgeRuleMaxAgeInDay { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.",
        SerializedName = @"deleteSourceFromS3",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxCountRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify true to apply the rule, or false to disable it.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxCountRuleEnabled { get; set; }
        /// <summary>Specify the maximum number of application versions to retain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the maximum number of application versions to retain.",
        SerializedName = @"maxCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCountRuleMaxCount { get; set; }
        /// <summary>
        /// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the
        /// first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk
        /// persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in
        /// subsequent updates to change the Service Role to another value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in subsequent updates to change the Service Role to another value.",
        SerializedName = @"serviceRole",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceLifecycleConfigServiceRole { get; set; }

    }
    /// Definition of awsElasticBeanstalkApplication
    internal partial interface IAwsElasticBeanstalkApplicationPropertiesInternal

    {
        /// <summary>
        /// A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical
        /// ID and uses that ID for the application name.
        /// </summary>
        string ApplicationName { get; set; }
        /// <summary>Your description of the application.</summary>
        string Description { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        bool? MaxAgeRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        bool? MaxAgeRuleEnabled { get; set; }
        /// <summary>Specify the number of days to retain an application versions.</summary>
        int? MaxAgeRuleMaxAgeInDay { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        bool? MaxCountRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        bool? MaxCountRuleEnabled { get; set; }
        /// <summary>Specify the maximum number of application versions to retain.</summary>
        int? MaxCountRuleMaxCount { get; set; }
        /// <summary>
        /// Specifies an application resource lifecycle configuration to prevent your application from accumulating too many versions.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfig ResourceLifecycleConfig { get; set; }
        /// <summary>
        /// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the
        /// first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk
        /// persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in
        /// subsequent updates to change the Service Role to another value.
        /// </summary>
        string ResourceLifecycleConfigServiceRole { get; set; }
        /// <summary>Defines lifecycle settings for application versions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfig ResourceLifecycleConfigVersionLifecycleConfig { get; set; }
        /// <summary>
        /// Specify a max age rule to restrict the length of time that application versions are retained for an application.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRule VersionLifecycleConfigMaxAgeRule { get; set; }
        /// <summary>
        /// Specify a max count rule to restrict the number of application versions that are retained for an application.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRule VersionLifecycleConfigMaxCountRule { get; set; }

    }
}