// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of OperationPreferences</summary>
    public partial class OperationPreferences :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOperationPreferences,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOperationPreferencesInternal
    {

        /// <summary>Backing field for <see cref="FailureToleranceCount" /> property.</summary>
        private int? _failureToleranceCount;

        /// <summary>Property failureToleranceCount</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? FailureToleranceCount { get => this._failureToleranceCount; set => this._failureToleranceCount = value; }

        /// <summary>Backing field for <see cref="FailureTolerancePercentage" /> property.</summary>
        private int? _failureTolerancePercentage;

        /// <summary>Property failureTolerancePercentage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? FailureTolerancePercentage { get => this._failureTolerancePercentage; set => this._failureTolerancePercentage = value; }

        /// <summary>Backing field for <see cref="MaxConcurrentCount" /> property.</summary>
        private int? _maxConcurrentCount;

        /// <summary>Property maxConcurrentCount</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? MaxConcurrentCount { get => this._maxConcurrentCount; set => this._maxConcurrentCount = value; }

        /// <summary>Backing field for <see cref="MaxConcurrentPercentage" /> property.</summary>
        private int? _maxConcurrentPercentage;

        /// <summary>Property maxConcurrentPercentage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? MaxConcurrentPercentage { get => this._maxConcurrentPercentage; set => this._maxConcurrentPercentage = value; }

        /// <summary>Backing field for <see cref="RegionConcurrencyType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OperationPreferencesRegionConcurrencyType? _regionConcurrencyType;

        /// <summary>
        /// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OperationPreferencesRegionConcurrencyType? RegionConcurrencyType { get => this._regionConcurrencyType; set => this._regionConcurrencyType = value; }

        /// <summary>Backing field for <see cref="RegionOrder" /> property.</summary>
        private string[] _regionOrder;

        /// <summary>Property regionOrder</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] RegionOrder { get => this._regionOrder; set => this._regionOrder = value; }

        /// <summary>Creates an new <see cref="OperationPreferences" /> instance.</summary>
        public OperationPreferences()
        {

        }
    }
    /// Definition of OperationPreferences
    public partial interface IOperationPreferences :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property failureToleranceCount</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property failureToleranceCount",
        SerializedName = @"failureToleranceCount",
        PossibleTypes = new [] { typeof(int) })]
        int? FailureToleranceCount { get; set; }
        /// <summary>Property failureTolerancePercentage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property failureTolerancePercentage",
        SerializedName = @"failureTolerancePercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? FailureTolerancePercentage { get; set; }
        /// <summary>Property maxConcurrentCount</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property maxConcurrentCount",
        SerializedName = @"maxConcurrentCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxConcurrentCount { get; set; }
        /// <summary>Property maxConcurrentPercentage</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property maxConcurrentPercentage",
        SerializedName = @"maxConcurrentPercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxConcurrentPercentage { get; set; }
        /// <summary>
        /// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time",
        SerializedName = @"regionConcurrencyType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OperationPreferencesRegionConcurrencyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OperationPreferencesRegionConcurrencyType? RegionConcurrencyType { get; set; }
        /// <summary>Property regionOrder</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property regionOrder",
        SerializedName = @"regionOrder",
        PossibleTypes = new [] { typeof(string) })]
        string[] RegionOrder { get; set; }

    }
    /// Definition of OperationPreferences
    internal partial interface IOperationPreferencesInternal

    {
        /// <summary>Property failureToleranceCount</summary>
        int? FailureToleranceCount { get; set; }
        /// <summary>Property failureTolerancePercentage</summary>
        int? FailureTolerancePercentage { get; set; }
        /// <summary>Property maxConcurrentCount</summary>
        int? MaxConcurrentCount { get; set; }
        /// <summary>Property maxConcurrentPercentage</summary>
        int? MaxConcurrentPercentage { get; set; }
        /// <summary>
        /// The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.OperationPreferencesRegionConcurrencyType? RegionConcurrencyType { get; set; }
        /// <summary>Property regionOrder</summary>
        string[] RegionOrder { get; set; }

    }
}