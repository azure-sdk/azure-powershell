// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of LambdaAuthorizerConfig</summary>
    public partial class LambdaAuthorizerConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfig,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfigInternal
    {

        /// <summary>Backing field for <see cref="AuthorizerResultTtlInSecond" /> property.</summary>
        private int? _authorizerResultTtlInSecond;

        /// <summary>
        /// <p>The number of seconds a response should be cached for. The default is 0 seconds, which disables caching. If you don't
        /// specify a value for <code>authorizerResultTtlInSeconds</code>, the default value is used. The maximum value is one hour
        /// (3600 seconds). The Lambda function can override this by returning a <code>ttlOverride</code> key in its response.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? AuthorizerResultTtlInSecond { get => this._authorizerResultTtlInSecond; set => this._authorizerResultTtlInSecond = value; }

        /// <summary>Backing field for <see cref="AuthorizerUri" /> property.</summary>
        private string _authorizerUri;

        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the Lambda function to be called for authorization. This can be a standard Lambda
        /// ARN, a version ARN (<code>.../v3</code>), or an alias ARN. </p> <p> <b>Note</b>: This Lambda function must have the following
        /// resource-based policy assigned to it. When configuring Lambda authorizers in the console, this is done for you. To use
        /// the Command Line Interface (CLI), run the following:</p> <p> <code>aws lambda add-permission --function-name 'arn:aws:lambda:us-east-2:111122223333:function:my-function'
        /// --statement-id 'appsync' --principal appsync.amazonaws.com --action lambda:InvokeFunction</code> </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AuthorizerUri { get => this._authorizerUri; set => this._authorizerUri = value; }

        /// <summary>Backing field for <see cref="IdentityValidationExpression" /> property.</summary>
        private string _identityValidationExpression;

        /// <summary>
        /// <p>A regular expression for validation of tokens before the Lambda function is called.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string IdentityValidationExpression { get => this._identityValidationExpression; set => this._identityValidationExpression = value; }

        /// <summary>Creates an new <see cref="LambdaAuthorizerConfig" /> instance.</summary>
        public LambdaAuthorizerConfig()
        {

        }
    }
    /// Definition of LambdaAuthorizerConfig
    public partial interface ILambdaAuthorizerConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>The number of seconds a response should be cached for. The default is 0 seconds, which disables caching. If you don't
        /// specify a value for <code>authorizerResultTtlInSeconds</code>, the default value is used. The maximum value is one hour
        /// (3600 seconds). The Lambda function can override this by returning a <code>ttlOverride</code> key in its response.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of seconds a response should be cached for. The default is 0 seconds, which disables caching. If you don't specify a value for <code>authorizerResultTtlInSeconds</code>, the default value is used. The maximum value is one hour (3600 seconds). The Lambda function can override this by returning a <code>ttlOverride</code> key in its response.</p>",
        SerializedName = @"authorizerResultTtlInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? AuthorizerResultTtlInSecond { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the Lambda function to be called for authorization. This can be a standard Lambda
        /// ARN, a version ARN (<code>.../v3</code>), or an alias ARN. </p> <p> <b>Note</b>: This Lambda function must have the following
        /// resource-based policy assigned to it. When configuring Lambda authorizers in the console, this is done for you. To use
        /// the Command Line Interface (CLI), run the following:</p> <p> <code>aws lambda add-permission --function-name 'arn:aws:lambda:us-east-2:111122223333:function:my-function'
        /// --statement-id 'appsync' --principal appsync.amazonaws.com --action lambda:InvokeFunction</code> </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the Lambda function to be called for authorization. This can be a standard Lambda ARN, a version ARN (<code>.../v3</code>), or an alias ARN. </p> <p> <b>Note</b>: This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the console, this is done for you. To use the Command Line Interface (CLI), run the following:</p> <p> <code>aws lambda add-permission --function-name 'arn:aws:lambda:us-east-2:111122223333:function:my-function' --statement-id 'appsync' --principal appsync.amazonaws.com --action lambda:InvokeFunction</code> </p>",
        SerializedName = @"authorizerUri",
        PossibleTypes = new [] { typeof(string) })]
        string AuthorizerUri { get; set; }
        /// <summary>
        /// <p>A regular expression for validation of tokens before the Lambda function is called.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A regular expression for validation of tokens before the Lambda function is called.</p>",
        SerializedName = @"identityValidationExpression",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityValidationExpression { get; set; }

    }
    /// Definition of LambdaAuthorizerConfig
    internal partial interface ILambdaAuthorizerConfigInternal

    {
        /// <summary>
        /// <p>The number of seconds a response should be cached for. The default is 0 seconds, which disables caching. If you don't
        /// specify a value for <code>authorizerResultTtlInSeconds</code>, the default value is used. The maximum value is one hour
        /// (3600 seconds). The Lambda function can override this by returning a <code>ttlOverride</code> key in its response.</p>
        /// </summary>
        int? AuthorizerResultTtlInSecond { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the Lambda function to be called for authorization. This can be a standard Lambda
        /// ARN, a version ARN (<code>.../v3</code>), or an alias ARN. </p> <p> <b>Note</b>: This Lambda function must have the following
        /// resource-based policy assigned to it. When configuring Lambda authorizers in the console, this is done for you. To use
        /// the Command Line Interface (CLI), run the following:</p> <p> <code>aws lambda add-permission --function-name 'arn:aws:lambda:us-east-2:111122223333:function:my-function'
        /// --statement-id 'appsync' --principal appsync.amazonaws.com --action lambda:InvokeFunction</code> </p>
        /// </summary>
        string AuthorizerUri { get; set; }
        /// <summary>
        /// <p>A regular expression for validation of tokens before the Lambda function is called.</p>
        /// </summary>
        string IdentityValidationExpression { get; set; }

    }
}