// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEc2Instance</summary>
    public partial class AwsEc2InstanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal
    {

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AmdSevSnpSpecification? AmdSevSnpValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptionsInternal)CpuOption).AmdSevSnpValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptionsInternal)CpuOption).AmdSevSnpValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AmdSevSnpSpecification)""); }

        /// <summary>Backing field for <see cref="AmiLaunchIndex" /> property.</summary>
        private int? _amiLaunchIndex;

        /// <summary>
        /// <p>The AMI launch index, which can be used to find this instance in the launch group.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? AmiLaunchIndex { get => this._amiLaunchIndex; set => this._amiLaunchIndex = value; }

        /// <summary>Backing field for <see cref="Architecture" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue _architecture;

        /// <summary><p>The architecture of the image.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue Architecture { get => (this._architecture = this._architecture ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ArchitectureValuesEnumValue()); set => this._architecture = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues? ArchitectureValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValueInternal)Architecture).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValueInternal)Architecture).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceAutoRecoveryState? AutoRecoveryValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenanceOptionsInternal)MaintenanceOption).AutoRecoveryValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenanceOptionsInternal)MaintenanceOption).AutoRecoveryValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceAutoRecoveryState)""); }

        /// <summary>Backing field for <see cref="BlockDeviceMapping" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping[] _blockDeviceMapping;

        /// <summary><p>Any block device mapping entries for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping[] BlockDeviceMapping { get => this._blockDeviceMapping; set => this._blockDeviceMapping = value; }

        /// <summary>Backing field for <see cref="BootMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue _bootMode;

        /// <summary>
        /// <p>The boot mode that was specified by the AMI. If the value is <code>uefi-preferred</code>, the AMI supports both UEFI
        /// and Legacy BIOS. The <code>currentInstanceBootMode</code> parameter is the boot mode that is used to boot the instance
        /// at launch or start.</p> <note> <p>The operating system contained in the AMI must be configured to support the specified
        /// boot mode.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html'>Boot
        /// modes</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue BootMode { get => (this._bootMode = this._bootMode ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BootModeValuesEnumValue()); set => this._bootMode = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues? BootModeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValueInternal)BootMode).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValueInternal)BootMode).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues)""); }

        /// <summary>Backing field for <see cref="CapacityReservationId" /> property.</summary>
        private string _capacityReservationId;

        /// <summary><p>The ID of the Capacity Reservation.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string CapacityReservationId { get => this._capacityReservationId; set => this._capacityReservationId = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CapacityReservationPreference? CapacityReservationPreferenceValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponseInternal)CapacityReservationSpecification).CapacityReservationPreferenceValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponseInternal)CapacityReservationSpecification).CapacityReservationPreferenceValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CapacityReservationPreference)""); }

        /// <summary>Backing field for <see cref="CapacityReservationSpecification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponse _capacityReservationSpecification;

        /// <summary><p>Information about the Capacity Reservation targeting option.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponse CapacityReservationSpecification { get => (this._capacityReservationSpecification = this._capacityReservationSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CapacityReservationSpecificationResponse()); set => this._capacityReservationSpecification = value; }

        /// <summary><p>The ID of the targeted Capacity Reservation.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CapacityReservationTargetCapacityReservationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponseInternal)CapacityReservationSpecification).CapacityReservationTargetCapacityReservationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponseInternal)CapacityReservationSpecification).CapacityReservationTargetCapacityReservationId = value ?? null; }

        /// <summary><p>The ARN of the targeted Capacity Reservation group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CapacityReservationTargetCapacityReservationResourceGroupArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponseInternal)CapacityReservationSpecification).CapacityReservationTargetCapacityReservationResourceGroupArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponseInternal)CapacityReservationSpecification).CapacityReservationTargetCapacityReservationResourceGroupArn = value ?? null; }

        /// <summary>Backing field for <see cref="ClientToken" /> property.</summary>
        private string _clientToken;

        /// <summary>
        /// <p>The idempotency token you provided when you launched the instance, if applicable.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ClientToken { get => this._clientToken; set => this._clientToken = value; }

        /// <summary>Backing field for <see cref="CpuOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptions _cpuOption;

        /// <summary><p>The CPU options for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptions CpuOption { get => (this._cpuOption = this._cpuOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CpuOptions()); set => this._cpuOption = value; }

        /// <summary><p>The number of CPU cores for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? CpuOptionCoreCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptionsInternal)CpuOption).CoreCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptionsInternal)CpuOption).CoreCount = value ?? default(int); }

        /// <summary><p>The number of threads per CPU core.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? CpuOptionThreadsPerCore { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptionsInternal)CpuOption).ThreadsPerCore; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptionsInternal)CpuOption).ThreadsPerCore = value ?? default(int); }

        /// <summary>Backing field for <see cref="CurrentInstanceBootMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBootModeValuesEnumValue _currentInstanceBootMode;

        /// <summary>
        /// <p>The boot mode that is used to boot the instance at launch or start. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html'>Boot
        /// modes</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBootModeValuesEnumValue CurrentInstanceBootMode { get => (this._currentInstanceBootMode = this._currentInstanceBootMode ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceBootModeValuesEnumValue()); set => this._currentInstanceBootMode = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceBootModeValues? CurrentInstanceBootModeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBootModeValuesEnumValueInternal)CurrentInstanceBootMode).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBootModeValuesEnumValueInternal)CurrentInstanceBootMode).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceBootModeValues)""); }

        /// <summary>Backing field for <see cref="EbsOptimized" /> property.</summary>
        private bool? _ebsOptimized;

        /// <summary>
        /// <p>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to
        /// Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available
        /// with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? EbsOptimized { get => this._ebsOptimized; set => this._ebsOptimized = value; }

        /// <summary>Backing field for <see cref="ElasticGpuAssociation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticGpuAssociation[] _elasticGpuAssociation;

        /// <summary>
        /// <p>Deprecated.</p> <note> <p>Amazon Elastic Graphics reached end of life on January 8, 2024. For workloads that require
        /// graphics acceleration, we recommend that you use Amazon EC2 G4ad, G4dn, or G5 instances.</p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticGpuAssociation[] ElasticGpuAssociation { get => this._elasticGpuAssociation; set => this._elasticGpuAssociation = value; }

        /// <summary>
        /// Backing field for <see cref="ElasticInferenceAcceleratorAssociation" /> property.
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticInferenceAcceleratorAssociation[] _elasticInferenceAcceleratorAssociation;

        /// <summary><p>The elastic inference accelerator associated with the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticInferenceAcceleratorAssociation[] ElasticInferenceAcceleratorAssociation { get => this._elasticInferenceAcceleratorAssociation; set => this._elasticInferenceAcceleratorAssociation = value; }

        /// <summary>Backing field for <see cref="EnaSupport" /> property.</summary>
        private bool? _enaSupport;

        /// <summary><p>Specifies whether enhanced networking with ENA is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? EnaSupport { get => this._enaSupport; set => this._enaSupport = value; }

        /// <summary>Backing field for <see cref="EnclaveOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnclaveOptions _enclaveOption;

        /// <summary>
        /// <p>Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnclaveOptions EnclaveOption { get => (this._enclaveOption = this._enclaveOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnclaveOptions()); set => this._enclaveOption = value; }

        /// <summary>
        /// <p>If this parameter is set to <code>true</code>, the instance is enabled for Amazon Web Services Nitro Enclaves; otherwise,
        /// it is not enabled for Amazon Web Services Nitro Enclaves.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? EnclaveOptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnclaveOptionsInternal)EnclaveOption).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnclaveOptionsInternal)EnclaveOption).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="HibernationOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHibernationOptions _hibernationOption;

        /// <summary><p>Indicates whether the instance is enabled for hibernation.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHibernationOptions HibernationOption { get => (this._hibernationOption = this._hibernationOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HibernationOptions()); set => this._hibernationOption = value; }

        /// <summary>
        /// <p>If <code>true</code>, your instance is enabled for hibernation; otherwise, it is not enabled for hibernation.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? HibernationOptionConfigured { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHibernationOptionsInternal)HibernationOption).Configured; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHibernationOptionsInternal)HibernationOption).Configured = value ?? default(bool); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HostnameType? HostnameTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponseInternal)PrivateDnsNameOption).HostnameTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponseInternal)PrivateDnsNameOption).HostnameTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HostnameType)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState? HttpEndpointValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpEndpointValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpEndpointValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState? HttpProtocolIpv6Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpProtocolIpv6Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpProtocolIpv6Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState? HttpTokenValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpTokenValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpTokenValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState)""); }

        /// <summary>Backing field for <see cref="Hypervisor" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue _hypervisor;

        /// <summary>
        /// <p>The hypervisor type of the instance. The value <code>xen</code> is used for both Xen and Nitro hypervisors.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue Hypervisor { get => (this._hypervisor = this._hypervisor ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HypervisorTypeEnumValue()); set => this._hypervisor = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType? HypervisorValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValueInternal)Hypervisor).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValueInternal)Hypervisor).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType)""); }

        /// <summary>Backing field for <see cref="IamInstanceProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIamInstanceProfile _iamInstanceProfile;

        /// <summary><p>The IAM instance profile associated with the instance, if applicable.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIamInstanceProfile IamInstanceProfile { get => (this._iamInstanceProfile = this._iamInstanceProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IamInstanceProfile()); set => this._iamInstanceProfile = value; }

        /// <summary><p>The Amazon Resource Name (ARN) of the instance profile.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string IamInstanceProfileArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIamInstanceProfileInternal)IamInstanceProfile).Arn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIamInstanceProfileInternal)IamInstanceProfile).Arn = value ?? null; }

        /// <summary><p>The ID of the instance profile.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string IamInstanceProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIamInstanceProfileInternal)IamInstanceProfile).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIamInstanceProfileInternal)IamInstanceProfile).Id = value ?? null; }

        /// <summary>Backing field for <see cref="ImageId" /> property.</summary>
        private string _imageId;

        /// <summary><p>The ID of the AMI used to launch the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ImageId { get => this._imageId; set => this._imageId = value; }

        /// <summary>Backing field for <see cref="InstanceId" /> property.</summary>
        private string _instanceId;

        /// <summary><p>The ID of the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string InstanceId { get => this._instanceId; set => this._instanceId = value; }

        /// <summary>Backing field for <see cref="InstanceLifecycle" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceLifecycleTypeEnumValue _instanceLifecycle;

        /// <summary><p>Indicates whether this is a Spot Instance or a Scheduled Instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceLifecycleTypeEnumValue InstanceLifecycle { get => (this._instanceLifecycle = this._instanceLifecycle ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceLifecycleTypeEnumValue()); set => this._instanceLifecycle = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceLifecycleType? InstanceLifecycleValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceLifecycleTypeEnumValueInternal)InstanceLifecycle).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceLifecycleTypeEnumValueInternal)InstanceLifecycle).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceLifecycleType)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState? InstanceMetadataTagValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).InstanceMetadataTagValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).InstanceMetadataTagValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState)""); }

        /// <summary>Backing field for <see cref="InstanceType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceTypeEnumValue _instanceType;

        /// <summary><p>The instance type.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceTypeEnumValue InstanceType { get => (this._instanceType = this._instanceType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceTypeEnumValue()); set => this._instanceType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceType? InstanceTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceTypeEnumValueInternal)InstanceType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceTypeEnumValueInternal)InstanceType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceType)""); }

        /// <summary>Backing field for <see cref="Ipv6Address" /> property.</summary>
        private string _ipv6Address;

        /// <summary><p>The IPv6 address assigned to the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Ipv6Address { get => this._ipv6Address; set => this._ipv6Address = value; }

        /// <summary>Backing field for <see cref="KernelId" /> property.</summary>
        private string _kernelId;

        /// <summary><p>The kernel associated with this instance, if applicable.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string KernelId { get => this._kernelId; set => this._kernelId = value; }

        /// <summary>Backing field for <see cref="KeyName" /> property.</summary>
        private string _keyName;

        /// <summary>
        /// <p>The name of the key pair, if this instance was launched with an associated key pair.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string KeyName { get => this._keyName; set => this._keyName = value; }

        /// <summary>Backing field for <see cref="LaunchTime" /> property.</summary>
        private global::System.DateTime? _launchTime;

        /// <summary><p>The time the instance was launched.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? LaunchTime { get => this._launchTime; set => this._launchTime = value; }

        /// <summary>Backing field for <see cref="License" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILicenseConfiguration[] _license;

        /// <summary><p>The license configurations for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILicenseConfiguration[] License { get => this._license; set => this._license = value; }

        /// <summary>Backing field for <see cref="MaintenanceOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenanceOptions _maintenanceOption;

        /// <summary>
        /// <p>Provides information on the recovery and maintenance options of your instance.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenanceOptions MaintenanceOption { get => (this._maintenanceOption = this._maintenanceOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMaintenanceOptions()); set => this._maintenanceOption = value; }

        /// <summary>Backing field for <see cref="MetadataOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponse _metadataOption;

        /// <summary><p>The metadata options for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponse MetadataOption { get => (this._metadataOption = this._metadataOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataOptionsResponse()); set => this._metadataOption = value; }

        /// <summary>
        /// <p>The maximum number of hops that the metadata token can travel.</p> <p>Possible values: Integers from <code>1</code>
        /// to <code>64</code> </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? MetadataOptionHttpPutResponseHopLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpPutResponseHopLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpPutResponseHopLimit = value ?? default(int); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState? MetadataOptionsStateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).StateValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).StateValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState)""); }

        /// <summary>Internal Acessors for Architecture</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.Architecture { get => (this._architecture = this._architecture ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ArchitectureValuesEnumValue()); set { {_architecture = value;} } }

        /// <summary>Internal Acessors for BootMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.BootMode { get => (this._bootMode = this._bootMode ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BootModeValuesEnumValue()); set { {_bootMode = value;} } }

        /// <summary>Internal Acessors for CapacityReservationSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.CapacityReservationSpecification { get => (this._capacityReservationSpecification = this._capacityReservationSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CapacityReservationSpecificationResponse()); set { {_capacityReservationSpecification = value;} } }

        /// <summary>
        /// Internal Acessors for CapacityReservationSpecificationCapacityReservationPreference
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationPreferenceEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.CapacityReservationSpecificationCapacityReservationPreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponseInternal)CapacityReservationSpecification).CapacityReservationPreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponseInternal)CapacityReservationSpecification).CapacityReservationPreference = value; }

        /// <summary>Internal Acessors for CapacityReservationSpecificationCapacityReservationTarget</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationTargetResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.CapacityReservationSpecificationCapacityReservationTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponseInternal)CapacityReservationSpecification).CapacityReservationTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponseInternal)CapacityReservationSpecification).CapacityReservationTarget = value; }

        /// <summary>Internal Acessors for CpuOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.CpuOption { get => (this._cpuOption = this._cpuOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CpuOptions()); set { {_cpuOption = value;} } }

        /// <summary>Internal Acessors for CpuOptionAmdSevSnp</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAmdSevSnpSpecificationEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.CpuOptionAmdSevSnp { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptionsInternal)CpuOption).AmdSevSnp; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptionsInternal)CpuOption).AmdSevSnp = value; }

        /// <summary>Internal Acessors for CurrentInstanceBootMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBootModeValuesEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.CurrentInstanceBootMode { get => (this._currentInstanceBootMode = this._currentInstanceBootMode ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceBootModeValuesEnumValue()); set { {_currentInstanceBootMode = value;} } }

        /// <summary>Internal Acessors for EnclaveOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnclaveOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.EnclaveOption { get => (this._enclaveOption = this._enclaveOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnclaveOptions()); set { {_enclaveOption = value;} } }

        /// <summary>Internal Acessors for HibernationOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHibernationOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.HibernationOption { get => (this._hibernationOption = this._hibernationOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HibernationOptions()); set { {_hibernationOption = value;} } }

        /// <summary>Internal Acessors for Hypervisor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.Hypervisor { get => (this._hypervisor = this._hypervisor ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HypervisorTypeEnumValue()); set { {_hypervisor = value;} } }

        /// <summary>Internal Acessors for IamInstanceProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIamInstanceProfile Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.IamInstanceProfile { get => (this._iamInstanceProfile = this._iamInstanceProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IamInstanceProfile()); set { {_iamInstanceProfile = value;} } }

        /// <summary>Internal Acessors for InstanceLifecycle</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceLifecycleTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.InstanceLifecycle { get => (this._instanceLifecycle = this._instanceLifecycle ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceLifecycleTypeEnumValue()); set { {_instanceLifecycle = value;} } }

        /// <summary>Internal Acessors for InstanceType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.InstanceType { get => (this._instanceType = this._instanceType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceTypeEnumValue()); set { {_instanceType = value;} } }

        /// <summary>Internal Acessors for MaintenanceOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenanceOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.MaintenanceOption { get => (this._maintenanceOption = this._maintenanceOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMaintenanceOptions()); set { {_maintenanceOption = value;} } }

        /// <summary>Internal Acessors for MaintenanceOptionAutoRecovery</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAutoRecoveryStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.MaintenanceOptionAutoRecovery { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenanceOptionsInternal)MaintenanceOption).AutoRecovery; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenanceOptionsInternal)MaintenanceOption).AutoRecovery = value; }

        /// <summary>Internal Acessors for MetadataOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.MetadataOption { get => (this._metadataOption = this._metadataOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataOptionsResponse()); set { {_metadataOption = value;} } }

        /// <summary>Internal Acessors for MetadataOptionHttpEndpoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataEndpointStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.MetadataOptionHttpEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpEndpoint = value; }

        /// <summary>Internal Acessors for MetadataOptionHttpProtocolIpv6</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataProtocolStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.MetadataOptionHttpProtocolIpv6 { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpProtocolIpv6; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpProtocolIpv6 = value; }

        /// <summary>Internal Acessors for MetadataOptionHttpToken</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHttpTokensStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.MetadataOptionHttpToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).HttpToken = value; }

        /// <summary>Internal Acessors for MetadataOptionInstanceMetadataTag</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataTagsStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.MetadataOptionInstanceMetadataTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).InstanceMetadataTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).InstanceMetadataTag = value; }

        /// <summary>Internal Acessors for MetadataOptionState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.MetadataOptionState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal)MetadataOption).State = value; }

        /// <summary>Internal Acessors for Monitoring</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoring Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.Monitoring { get => (this._monitoring = this._monitoring ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Monitoring()); set { {_monitoring = value;} } }

        /// <summary>Internal Acessors for MonitoringState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoringStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.MonitoringState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoringInternal)Monitoring).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoringInternal)Monitoring).State = value; }

        /// <summary>Internal Acessors for Placement</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacement Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.Placement { get => (this._placement = this._placement ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Placement()); set { {_placement = value;} } }

        /// <summary>Internal Acessors for PlacementTenancy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITenancyEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.PlacementTenancy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).Tenancy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).Tenancy = value; }

        /// <summary>Internal Acessors for Platform</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.Platform { get => (this._platform = this._platform ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformValuesEnumValue()); set { {_platform = value;} } }

        /// <summary>Internal Acessors for PrivateDnsNameOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.PrivateDnsNameOption { get => (this._privateDnsNameOption = this._privateDnsNameOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PrivateDnsNameOptionsResponse()); set { {_privateDnsNameOption = value;} } }

        /// <summary>Internal Acessors for PrivateDnsNameOptionHostnameType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostnameTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.PrivateDnsNameOptionHostnameType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponseInternal)PrivateDnsNameOption).HostnameType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponseInternal)PrivateDnsNameOption).HostnameType = value; }

        /// <summary>Internal Acessors for RootDeviceType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.RootDeviceType { get => (this._rootDeviceType = this._rootDeviceType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeEnumValue()); set { {_rootDeviceType = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceState Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceState()); set { {_state = value;} } }

        /// <summary>Internal Acessors for StateName</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateNameEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.StateName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)State).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)State).Name = value; }

        /// <summary>Internal Acessors for StateReason</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.StateReason { get => (this._stateReason = this._stateReason ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateReason()); set { {_stateReason = value;} } }

        /// <summary>Internal Acessors for VirtualizationType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal.VirtualizationType { get => (this._virtualizationType = this._virtualizationType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VirtualizationTypeEnumValue()); set { {_virtualizationType = value;} } }

        /// <summary>Backing field for <see cref="Monitoring" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoring _monitoring;

        /// <summary><p>The monitoring for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoring Monitoring { get => (this._monitoring = this._monitoring ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Monitoring()); set => this._monitoring = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MonitoringState? MonitoringStateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoringInternal)Monitoring).StateValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoringInternal)Monitoring).StateValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MonitoringState)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName? NameValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)State).NameValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)State).NameValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName)""); }

        /// <summary>Backing field for <see cref="NetworkInterface" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface[] _networkInterface;

        /// <summary><p>The network interfaces for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface[] NetworkInterface { get => this._networkInterface; set => this._networkInterface = value; }

        /// <summary>Backing field for <see cref="OutpostArn" /> property.</summary>
        private string _outpostArn;

        /// <summary><p>The Amazon Resource Name (ARN) of the Outpost.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OutpostArn { get => this._outpostArn; set => this._outpostArn = value; }

        /// <summary>Backing field for <see cref="Placement" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacement _placement;

        /// <summary><p>The location where the instance launched, if applicable.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacement Placement { get => (this._placement = this._placement ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Placement()); set => this._placement = value; }

        /// <summary>
        /// <p>The affinity setting for the instance on the Dedicated Host.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>
        /// or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PlacementAffinity { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).Affinity; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).Affinity = value ?? null; }

        /// <summary>
        /// <p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for
        /// you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PlacementAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).AvailabilityZone = value ?? null; }

        /// <summary>
        /// <p>The ID of the placement group that the instance is in. If you specify <code>GroupId</code>, you can't specify <code>GroupName</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PlacementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).GroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).GroupId = value ?? null; }

        /// <summary>
        /// <p>The name of the placement group that the instance is in. If you specify <code>GroupName</code>, you can't specify <code>GroupId</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PlacementGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).GroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).GroupName = value ?? null; }

        /// <summary>
        /// <p>The ID of the Dedicated Host on which the instance resides.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>
        /// or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PlacementHostId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).HostId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).HostId = value ?? null; }

        /// <summary>
        /// <p>The ARN of the host resource group in which to launch the instances.</p> <p>If you specify this parameter, either omit
        /// the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PlacementHostResourceGroupArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).HostResourceGroupArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).HostResourceGroupArn = value ?? null; }

        /// <summary>
        /// <p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p>
        /// <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? PlacementPartitionNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).PartitionNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).PartitionNumber = value ?? default(int); }

        /// <summary><p>Reserved for future use.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PlacementSpreadDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).SpreadDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).SpreadDomain = value ?? null; }

        /// <summary>Backing field for <see cref="Platform" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue _platform;

        /// <summary>
        /// <p>The platform. This value is <code>windows</code> for Windows instances; otherwise, it is empty.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue Platform { get => (this._platform = this._platform ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformValuesEnumValue()); set => this._platform = value; }

        /// <summary>Backing field for <see cref="PlatformDetail" /> property.</summary>
        private string _platformDetail;

        /// <summary>
        /// <p>The platform details value for the instance. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html'>AMI
        /// billing information fields</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PlatformDetail { get => this._platformDetail; set => this._platformDetail = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues? PlatformValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValueInternal)Platform).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValueInternal)Platform).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues)""); }

        /// <summary>Backing field for <see cref="PrivateDnsName" /> property.</summary>
        private string _privateDnsName;

        /// <summary>
        /// <p>[IPv4 only] The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon
        /// EC2 network. This name is not available until the instance enters the <code>running</code> state. </p> <p>The Amazon-provided
        /// DNS server resolves Amazon-provided private DNS hostnames if you've enabled DNS resolution and DNS hostnames in your VPC.
        /// If you are not using the Amazon-provided DNS server in your VPC, your custom domain name servers must resolve the hostname
        /// as appropriate.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PrivateDnsName { get => this._privateDnsName; set => this._privateDnsName = value; }

        /// <summary>Backing field for <see cref="PrivateDnsNameOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponse _privateDnsNameOption;

        /// <summary><p>The options for the instance hostname.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponse PrivateDnsNameOption { get => (this._privateDnsNameOption = this._privateDnsNameOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PrivateDnsNameOptionsResponse()); set => this._privateDnsNameOption = value; }

        /// <summary>
        /// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? PrivateDnsNameOptionEnableResourceNameDnsARecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponseInternal)PrivateDnsNameOption).EnableResourceNameDnsARecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponseInternal)PrivateDnsNameOption).EnableResourceNameDnsARecord = value ?? default(bool); }

        /// <summary>
        /// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? PrivateDnsNameOptionEnableResourceNameDnsAaaaRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponseInternal)PrivateDnsNameOption).EnableResourceNameDnsAaaaRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponseInternal)PrivateDnsNameOption).EnableResourceNameDnsAaaaRecord = value ?? default(bool); }

        /// <summary>Backing field for <see cref="PrivateIPAddress" /> property.</summary>
        private string _privateIPAddress;

        /// <summary><p>The private IPv4 address assigned to the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PrivateIPAddress { get => this._privateIPAddress; set => this._privateIPAddress = value; }

        /// <summary>Backing field for <see cref="ProductCode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[] _productCode;

        /// <summary><p>The product codes attached to this instance, if applicable.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[] ProductCode { get => this._productCode; set => this._productCode = value; }

        /// <summary>Backing field for <see cref="PublicDnsName" /> property.</summary>
        private string _publicDnsName;

        /// <summary>
        /// <p>[IPv4 only] The public DNS name assigned to the instance. This name is not available until the instance enters the
        /// <code>running</code> state. This name is only available if you've enabled DNS hostnames for your VPC.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicDnsName { get => this._publicDnsName; set => this._publicDnsName = value; }

        /// <summary>Backing field for <see cref="PublicIPAddress" /> property.</summary>
        private string _publicIPAddress;

        /// <summary>
        /// <p>The public IPv4 address, or the Carrier IP address assigned to the instance, if applicable.</p> <p>A Carrier IP address
        /// only applies to an instance launched in a subnet associated with a Wavelength Zone.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicIPAddress { get => this._publicIPAddress; set => this._publicIPAddress = value; }

        /// <summary>Backing field for <see cref="RamdiskId" /> property.</summary>
        private string _ramdiskId;

        /// <summary><p>The RAM disk associated with this instance, if applicable.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RamdiskId { get => this._ramdiskId; set => this._ramdiskId = value; }

        /// <summary>Backing field for <see cref="RootDeviceName" /> property.</summary>
        private string _rootDeviceName;

        /// <summary>
        /// <p>The device name of the root device volume (for example, <code>/dev/sda1</code>).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RootDeviceName { get => this._rootDeviceName; set => this._rootDeviceName = value; }

        /// <summary>Backing field for <see cref="RootDeviceType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue _rootDeviceType;

        /// <summary>
        /// <p>The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue RootDeviceType { get => (this._rootDeviceType = this._rootDeviceType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeEnumValue()); set => this._rootDeviceType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType? RootDeviceTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValueInternal)RootDeviceType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValueInternal)RootDeviceType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType)""); }

        /// <summary>Backing field for <see cref="SecurityGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[] _securityGroup;

        /// <summary><p>The security groups for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[] SecurityGroup { get => this._securityGroup; set => this._securityGroup = value; }

        /// <summary>Backing field for <see cref="SourceDestCheck" /> property.</summary>
        private bool? _sourceDestCheck;

        /// <summary><p>Indicates whether source/destination checking is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? SourceDestCheck { get => this._sourceDestCheck; set => this._sourceDestCheck = value; }

        /// <summary>Backing field for <see cref="SpotInstanceRequestId" /> property.</summary>
        private string _spotInstanceRequestId;

        /// <summary><p>If the request is a Spot Instance request, the ID of the request.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SpotInstanceRequestId { get => this._spotInstanceRequestId; set => this._spotInstanceRequestId = value; }

        /// <summary>Backing field for <see cref="SriovNetSupport" /> property.</summary>
        private string _sriovNetSupport;

        /// <summary>
        /// <p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SriovNetSupport { get => this._sriovNetSupport; set => this._sriovNetSupport = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceState _state;

        /// <summary><p>The current state of the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceState State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceState()); set => this._state = value; }

        /// <summary>
        /// <p>The state of the instance as a 16-bit unsigned integer. </p> <p>The high byte is all of the bits between 2^8 and (2^16)-1,
        /// which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be
        /// ignored.</p> <p>The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
        /// </p> <p>The valid values for instance-state-code will all be in the range of the low byte and they are:</p> <ul> <li>
        /// <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p>
        /// <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li>
        /// <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li>
        /// </ul> <p>You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? StateCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)State).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateInternal)State).Code = value ?? default(int); }

        /// <summary>Backing field for <see cref="StateReason" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason _stateReason;

        /// <summary><p>The reason for the most recent state transition.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason StateReason { get => (this._stateReason = this._stateReason ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateReason()); set => this._stateReason = value; }

        /// <summary><p>The reason code for the state change.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string StateReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReasonInternal)StateReason).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReasonInternal)StateReason).Code = value ?? null; }

        /// <summary>
        /// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient
        /// capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error
        /// caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was
        /// stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped
        /// because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity
        /// or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance
        /// was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded
        /// available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>:
        /// The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>:
        /// The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client
        /// error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>:
        /// The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated
        /// on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon
        /// EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage
        /// was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string StateReasonMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReasonInternal)StateReason).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReasonInternal)StateReason).Message = value ?? null; }

        /// <summary>Backing field for <see cref="StateTransitionReason" /> property.</summary>
        private string _stateTransitionReason;

        /// <summary>
        /// <p>The reason for the most recent state transition. This might be an empty string.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string StateTransitionReason { get => this._stateTransitionReason; set => this._stateTransitionReason = value; }

        /// <summary>Backing field for <see cref="SubnetId" /> property.</summary>
        private string _subnetId;

        /// <summary><p>The ID of the subnet in which the instance is running.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SubnetId { get => this._subnetId; set => this._subnetId = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated13[] _tag;

        /// <summary><p>Any tags assigned to the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated13[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tenancy? TenancyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).TenancyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementInternal)Placement).TenancyValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tenancy)""); }

        /// <summary>Backing field for <see cref="TpmSupport" /> property.</summary>
        private string _tpmSupport;

        /// <summary>
        /// <p>If the instance is configured for NitroTPM support, the value is <code>v2.0</code>. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html'>NitroTPM</a>
        /// in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string TpmSupport { get => this._tpmSupport; set => this._tpmSupport = value; }

        /// <summary>Backing field for <see cref="UsageOperation" /> property.</summary>
        private string _usageOperation;

        /// <summary>
        /// <p>The usage operation value for the instance. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html'>AMI
        /// billing information fields</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string UsageOperation { get => this._usageOperation; set => this._usageOperation = value; }

        /// <summary>Backing field for <see cref="UsageOperationUpdateTime" /> property.</summary>
        private global::System.DateTime? _usageOperationUpdateTime;

        /// <summary><p>The time that the usage operation was last updated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? UsageOperationUpdateTime { get => this._usageOperationUpdateTime; set => this._usageOperationUpdateTime = value; }

        /// <summary>Backing field for <see cref="VirtualizationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue _virtualizationType;

        /// <summary><p>The virtualization type of the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue VirtualizationType { get => (this._virtualizationType = this._virtualizationType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VirtualizationTypeEnumValue()); set => this._virtualizationType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType? VirtualizationTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValueInternal)VirtualizationType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValueInternal)VirtualizationType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType)""); }

        /// <summary>Backing field for <see cref="VpcId" /> property.</summary>
        private string _vpcId;

        /// <summary><p>The ID of the VPC in which the instance is running.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string VpcId { get => this._vpcId; set => this._vpcId = value; }

        /// <summary>Creates an new <see cref="AwsEc2InstanceProperties" /> instance.</summary>
        public AwsEc2InstanceProperties()
        {

        }
    }
    /// Definition of awsEc2Instance
    public partial interface IAwsEc2InstanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AmdSevSnpSpecification) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AmdSevSnpSpecification? AmdSevSnpValue { get; set; }
        /// <summary>
        /// <p>The AMI launch index, which can be used to find this instance in the launch group.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The AMI launch index, which can be used to find this instance in the launch group.</p>",
        SerializedName = @"amiLaunchIndex",
        PossibleTypes = new [] { typeof(int) })]
        int? AmiLaunchIndex { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues? ArchitectureValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceAutoRecoveryState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceAutoRecoveryState? AutoRecoveryValue { get; set; }
        /// <summary><p>Any block device mapping entries for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Any block device mapping entries for the instance.</p>",
        SerializedName = @"blockDeviceMappings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping[] BlockDeviceMapping { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues? BootModeValue { get; set; }
        /// <summary><p>The ID of the Capacity Reservation.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the Capacity Reservation.</p>",
        SerializedName = @"capacityReservationId",
        PossibleTypes = new [] { typeof(string) })]
        string CapacityReservationId { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CapacityReservationPreference) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CapacityReservationPreference? CapacityReservationPreferenceValue { get; set; }
        /// <summary><p>The ID of the targeted Capacity Reservation.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the targeted Capacity Reservation.</p>",
        SerializedName = @"capacityReservationId",
        PossibleTypes = new [] { typeof(string) })]
        string CapacityReservationTargetCapacityReservationId { get; set; }
        /// <summary><p>The ARN of the targeted Capacity Reservation group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN of the targeted Capacity Reservation group.</p>",
        SerializedName = @"capacityReservationResourceGroupArn",
        PossibleTypes = new [] { typeof(string) })]
        string CapacityReservationTargetCapacityReservationResourceGroupArn { get; set; }
        /// <summary>
        /// <p>The idempotency token you provided when you launched the instance, if applicable.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The idempotency token you provided when you launched the instance, if applicable.</p>",
        SerializedName = @"clientToken",
        PossibleTypes = new [] { typeof(string) })]
        string ClientToken { get; set; }
        /// <summary><p>The number of CPU cores for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of CPU cores for the instance.</p>",
        SerializedName = @"coreCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuOptionCoreCount { get; set; }
        /// <summary><p>The number of threads per CPU core.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of threads per CPU core.</p>",
        SerializedName = @"threadsPerCore",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuOptionThreadsPerCore { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceBootModeValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceBootModeValues? CurrentInstanceBootModeValue { get; set; }
        /// <summary>
        /// <p>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to
        /// Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available
        /// with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p>",
        SerializedName = @"ebsOptimized",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EbsOptimized { get; set; }
        /// <summary>
        /// <p>Deprecated.</p> <note> <p>Amazon Elastic Graphics reached end of life on January 8, 2024. For workloads that require
        /// graphics acceleration, we recommend that you use Amazon EC2 G4ad, G4dn, or G5 instances.</p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Deprecated.</p> <note> <p>Amazon Elastic Graphics reached end of life on January 8, 2024. For workloads that require graphics acceleration, we recommend that you use Amazon EC2 G4ad, G4dn, or G5 instances.</p> </note>",
        SerializedName = @"elasticGpuAssociations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticGpuAssociation) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticGpuAssociation[] ElasticGpuAssociation { get; set; }
        /// <summary><p>The elastic inference accelerator associated with the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The elastic inference accelerator associated with the instance.</p>",
        SerializedName = @"elasticInferenceAcceleratorAssociations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticInferenceAcceleratorAssociation) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticInferenceAcceleratorAssociation[] ElasticInferenceAcceleratorAssociation { get; set; }
        /// <summary><p>Specifies whether enhanced networking with ENA is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether enhanced networking with ENA is enabled.</p>",
        SerializedName = @"enaSupport",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnaSupport { get; set; }
        /// <summary>
        /// <p>If this parameter is set to <code>true</code>, the instance is enabled for Amazon Web Services Nitro Enclaves; otherwise,
        /// it is not enabled for Amazon Web Services Nitro Enclaves.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>If this parameter is set to <code>true</code>, the instance is enabled for Amazon Web Services Nitro Enclaves; otherwise, it is not enabled for Amazon Web Services Nitro Enclaves.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnclaveOptionEnabled { get; set; }
        /// <summary>
        /// <p>If <code>true</code>, your instance is enabled for hibernation; otherwise, it is not enabled for hibernation.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>If <code>true</code>, your instance is enabled for hibernation; otherwise, it is not enabled for hibernation.</p>",
        SerializedName = @"configured",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HibernationOptionConfigured { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HostnameType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HostnameType? HostnameTypeValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState? HttpEndpointValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState? HttpProtocolIpv6Value { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState? HttpTokenValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType? HypervisorValue { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) of the instance profile.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the instance profile.</p>",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string IamInstanceProfileArn { get; set; }
        /// <summary><p>The ID of the instance profile.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the instance profile.</p>",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string IamInstanceProfileId { get; set; }
        /// <summary><p>The ID of the AMI used to launch the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the AMI used to launch the instance.</p>",
        SerializedName = @"imageId",
        PossibleTypes = new [] { typeof(string) })]
        string ImageId { get; set; }
        /// <summary><p>The ID of the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the instance.</p>",
        SerializedName = @"instanceId",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceId { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceLifecycleType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceLifecycleType? InstanceLifecycleValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState? InstanceMetadataTagValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceType? InstanceTypeValue { get; set; }
        /// <summary><p>The IPv6 address assigned to the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IPv6 address assigned to the instance.</p>",
        SerializedName = @"ipv6Address",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv6Address { get; set; }
        /// <summary><p>The kernel associated with this instance, if applicable.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The kernel associated with this instance, if applicable.</p>",
        SerializedName = @"kernelId",
        PossibleTypes = new [] { typeof(string) })]
        string KernelId { get; set; }
        /// <summary>
        /// <p>The name of the key pair, if this instance was launched with an associated key pair.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the key pair, if this instance was launched with an associated key pair.</p>",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyName { get; set; }
        /// <summary><p>The time the instance was launched.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time the instance was launched.</p>",
        SerializedName = @"launchTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LaunchTime { get; set; }
        /// <summary><p>The license configurations for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The license configurations for the instance.</p>",
        SerializedName = @"licenses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILicenseConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILicenseConfiguration[] License { get; set; }
        /// <summary>
        /// <p>The maximum number of hops that the metadata token can travel.</p> <p>Possible values: Integers from <code>1</code>
        /// to <code>64</code> </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The maximum number of hops that the metadata token can travel.</p> <p>Possible values: Integers from <code>1</code> to <code>64</code> </p>",
        SerializedName = @"httpPutResponseHopLimit",
        PossibleTypes = new [] { typeof(int) })]
        int? MetadataOptionHttpPutResponseHopLimit { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState? MetadataOptionsStateValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MonitoringState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MonitoringState? MonitoringStateValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName? NameValue { get; set; }
        /// <summary><p>The network interfaces for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The network interfaces for the instance.</p>",
        SerializedName = @"networkInterfaces",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface[] NetworkInterface { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) of the Outpost.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the Outpost.</p>",
        SerializedName = @"outpostArn",
        PossibleTypes = new [] { typeof(string) })]
        string OutpostArn { get; set; }
        /// <summary>
        /// <p>The affinity setting for the instance on the Dedicated Host.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>
        /// or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The affinity setting for the instance on the Dedicated Host.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>",
        SerializedName = @"affinity",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementAffinity { get; set; }
        /// <summary>
        /// <p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for
        /// you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementAvailabilityZone { get; set; }
        /// <summary>
        /// <p>The ID of the placement group that the instance is in. If you specify <code>GroupId</code>, you can't specify <code>GroupName</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the placement group that the instance is in. If you specify <code>GroupId</code>, you can't specify <code>GroupName</code>.</p>",
        SerializedName = @"groupId",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementGroupId { get; set; }
        /// <summary>
        /// <p>The name of the placement group that the instance is in. If you specify <code>GroupName</code>, you can't specify <code>GroupId</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the placement group that the instance is in. If you specify <code>GroupName</code>, you can't specify <code>GroupId</code>.</p>",
        SerializedName = @"groupName",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementGroupName { get; set; }
        /// <summary>
        /// <p>The ID of the Dedicated Host on which the instance resides.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>
        /// or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the Dedicated Host on which the instance resides.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a> or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>",
        SerializedName = @"hostId",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementHostId { get; set; }
        /// <summary>
        /// <p>The ARN of the host resource group in which to launch the instances.</p> <p>If you specify this parameter, either omit
        /// the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN of the host resource group in which to launch the instances.</p> <p>If you specify this parameter, either omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>",
        SerializedName = @"hostResourceGroupArn",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementHostResourceGroupArn { get; set; }
        /// <summary>
        /// <p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p>
        /// <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>",
        SerializedName = @"partitionNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? PlacementPartitionNumber { get; set; }
        /// <summary><p>Reserved for future use.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Reserved for future use.</p>",
        SerializedName = @"spreadDomain",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementSpreadDomain { get; set; }
        /// <summary>
        /// <p>The platform details value for the instance. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html'>AMI
        /// billing information fields</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The platform details value for the instance. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html'>AMI billing information fields</a> in the <i>Amazon EC2 User Guide</i>.</p>",
        SerializedName = @"platformDetails",
        PossibleTypes = new [] { typeof(string) })]
        string PlatformDetail { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues? PlatformValue { get; set; }
        /// <summary>
        /// <p>[IPv4 only] The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon
        /// EC2 network. This name is not available until the instance enters the <code>running</code> state. </p> <p>The Amazon-provided
        /// DNS server resolves Amazon-provided private DNS hostnames if you've enabled DNS resolution and DNS hostnames in your VPC.
        /// If you are not using the Amazon-provided DNS server in your VPC, your custom domain name servers must resolve the hostname
        /// as appropriate.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>[IPv4 only] The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon EC2 network. This name is not available until the instance enters the <code>running</code> state. </p> <p>The Amazon-provided DNS server resolves Amazon-provided private DNS hostnames if you've enabled DNS resolution and DNS hostnames in your VPC. If you are not using the Amazon-provided DNS server in your VPC, your custom domain name servers must resolve the hostname as appropriate.</p>",
        SerializedName = @"privateDnsName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateDnsName { get; set; }
        /// <summary>
        /// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>",
        SerializedName = @"enableResourceNameDnsARecord",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PrivateDnsNameOptionEnableResourceNameDnsARecord { get; set; }
        /// <summary>
        /// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>",
        SerializedName = @"enableResourceNameDnsAAAARecord",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PrivateDnsNameOptionEnableResourceNameDnsAaaaRecord { get; set; }
        /// <summary><p>The private IPv4 address assigned to the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The private IPv4 address assigned to the instance.</p>",
        SerializedName = @"privateIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateIPAddress { get; set; }
        /// <summary><p>The product codes attached to this instance, if applicable.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The product codes attached to this instance, if applicable.</p>",
        SerializedName = @"productCodes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[] ProductCode { get; set; }
        /// <summary>
        /// <p>[IPv4 only] The public DNS name assigned to the instance. This name is not available until the instance enters the
        /// <code>running</code> state. This name is only available if you've enabled DNS hostnames for your VPC.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>[IPv4 only] The public DNS name assigned to the instance. This name is not available until the instance enters the <code>running</code> state. This name is only available if you've enabled DNS hostnames for your VPC.</p>",
        SerializedName = @"publicDnsName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicDnsName { get; set; }
        /// <summary>
        /// <p>The public IPv4 address, or the Carrier IP address assigned to the instance, if applicable.</p> <p>A Carrier IP address
        /// only applies to an instance launched in a subnet associated with a Wavelength Zone.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The public IPv4 address, or the Carrier IP address assigned to the instance, if applicable.</p> <p>A Carrier IP address only applies to an instance launched in a subnet associated with a Wavelength Zone.</p>",
        SerializedName = @"publicIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIPAddress { get; set; }
        /// <summary><p>The RAM disk associated with this instance, if applicable.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The RAM disk associated with this instance, if applicable.</p>",
        SerializedName = @"ramdiskId",
        PossibleTypes = new [] { typeof(string) })]
        string RamdiskId { get; set; }
        /// <summary>
        /// <p>The device name of the root device volume (for example, <code>/dev/sda1</code>).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The device name of the root device volume (for example, <code>/dev/sda1</code>).</p>",
        SerializedName = @"rootDeviceName",
        PossibleTypes = new [] { typeof(string) })]
        string RootDeviceName { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType? RootDeviceTypeValue { get; set; }
        /// <summary><p>The security groups for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The security groups for the instance.</p>",
        SerializedName = @"securityGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[] SecurityGroup { get; set; }
        /// <summary><p>Indicates whether source/destination checking is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether source/destination checking is enabled.</p>",
        SerializedName = @"sourceDestCheck",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceDestCheck { get; set; }
        /// <summary><p>If the request is a Spot Instance request, the ID of the request.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>If the request is a Spot Instance request, the ID of the request.</p>",
        SerializedName = @"spotInstanceRequestId",
        PossibleTypes = new [] { typeof(string) })]
        string SpotInstanceRequestId { get; set; }
        /// <summary>
        /// <p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>",
        SerializedName = @"sriovNetSupport",
        PossibleTypes = new [] { typeof(string) })]
        string SriovNetSupport { get; set; }
        /// <summary>
        /// <p>The state of the instance as a 16-bit unsigned integer. </p> <p>The high byte is all of the bits between 2^8 and (2^16)-1,
        /// which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be
        /// ignored.</p> <p>The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
        /// </p> <p>The valid values for instance-state-code will all be in the range of the low byte and they are:</p> <ul> <li>
        /// <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p>
        /// <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li>
        /// <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li>
        /// </ul> <p>You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The state of the instance as a 16-bit unsigned integer. </p> <p>The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.</p> <p>The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255. </p> <p>The valid values for instance-state-code will all be in the range of the low byte and they are:</p> <ul> <li> <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p> <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li> <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li> </ul> <p>You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.</p>",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(int) })]
        int? StateCode { get; set; }
        /// <summary><p>The reason code for the state change.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The reason code for the state change.</p>",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string StateReasonCode { get; set; }
        /// <summary>
        /// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient
        /// capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error
        /// caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was
        /// stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped
        /// because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity
        /// or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance
        /// was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded
        /// available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>:
        /// The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>:
        /// The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client
        /// error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>:
        /// The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated
        /// on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon
        /// EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage
        /// was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string StateReasonMessage { get; set; }
        /// <summary>
        /// <p>The reason for the most recent state transition. This might be an empty string.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The reason for the most recent state transition. This might be an empty string.</p>",
        SerializedName = @"stateTransitionReason",
        PossibleTypes = new [] { typeof(string) })]
        string StateTransitionReason { get; set; }
        /// <summary><p>The ID of the subnet in which the instance is running.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the subnet in which the instance is running.</p>",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get; set; }
        /// <summary><p>Any tags assigned to the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Any tags assigned to the instance.</p>",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated13) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated13[] Tag { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tenancy) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tenancy? TenancyValue { get; set; }
        /// <summary>
        /// <p>If the instance is configured for NitroTPM support, the value is <code>v2.0</code>. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html'>NitroTPM</a>
        /// in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>If the instance is configured for NitroTPM support, the value is <code>v2.0</code>. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html'>NitroTPM</a> in the <i>Amazon EC2 User Guide</i>.</p>",
        SerializedName = @"tpmSupport",
        PossibleTypes = new [] { typeof(string) })]
        string TpmSupport { get; set; }
        /// <summary>
        /// <p>The usage operation value for the instance. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html'>AMI
        /// billing information fields</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The usage operation value for the instance. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html'>AMI billing information fields</a> in the <i>Amazon EC2 User Guide</i>.</p>",
        SerializedName = @"usageOperation",
        PossibleTypes = new [] { typeof(string) })]
        string UsageOperation { get; set; }
        /// <summary><p>The time that the usage operation was last updated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time that the usage operation was last updated.</p>",
        SerializedName = @"usageOperationUpdateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UsageOperationUpdateTime { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType? VirtualizationTypeValue { get; set; }
        /// <summary><p>The ID of the VPC in which the instance is running.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the VPC in which the instance is running.</p>",
        SerializedName = @"vpcId",
        PossibleTypes = new [] { typeof(string) })]
        string VpcId { get; set; }

    }
    /// Definition of awsEc2Instance
    internal partial interface IAwsEc2InstancePropertiesInternal

    {
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AmdSevSnpSpecification? AmdSevSnpValue { get; set; }
        /// <summary>
        /// <p>The AMI launch index, which can be used to find this instance in the launch group.</p>
        /// </summary>
        int? AmiLaunchIndex { get; set; }
        /// <summary><p>The architecture of the image.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue Architecture { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues? ArchitectureValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceAutoRecoveryState? AutoRecoveryValue { get; set; }
        /// <summary><p>Any block device mapping entries for the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping[] BlockDeviceMapping { get; set; }
        /// <summary>
        /// <p>The boot mode that was specified by the AMI. If the value is <code>uefi-preferred</code>, the AMI supports both UEFI
        /// and Legacy BIOS. The <code>currentInstanceBootMode</code> parameter is the boot mode that is used to boot the instance
        /// at launch or start.</p> <note> <p>The operating system contained in the AMI must be configured to support the specified
        /// boot mode.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html'>Boot
        /// modes</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue BootMode { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues? BootModeValue { get; set; }
        /// <summary><p>The ID of the Capacity Reservation.</p></summary>
        string CapacityReservationId { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CapacityReservationPreference? CapacityReservationPreferenceValue { get; set; }
        /// <summary><p>Information about the Capacity Reservation targeting option.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponse CapacityReservationSpecification { get; set; }
        /// <summary>
        /// <p>Describes the instance's Capacity Reservation preferences. Possible preferences include:</p> <ul> <li> <p> <code>open</code>
        /// - The instance can run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform,
        /// Availability Zone).</p> </li> <li> <p> <code>none</code> - The instance avoids running in a Capacity Reservation even
        /// if one is available. The instance runs in On-Demand capacity.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationPreferenceEnumValue CapacityReservationSpecificationCapacityReservationPreference { get; set; }
        /// <summary>
        /// <p>Information about the targeted Capacity Reservation or Capacity Reservation group.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationTargetResponse CapacityReservationSpecificationCapacityReservationTarget { get; set; }
        /// <summary><p>The ID of the targeted Capacity Reservation.</p></summary>
        string CapacityReservationTargetCapacityReservationId { get; set; }
        /// <summary><p>The ARN of the targeted Capacity Reservation group.</p></summary>
        string CapacityReservationTargetCapacityReservationResourceGroupArn { get; set; }
        /// <summary>
        /// <p>The idempotency token you provided when you launched the instance, if applicable.</p>
        /// </summary>
        string ClientToken { get; set; }
        /// <summary><p>The CPU options for the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptions CpuOption { get; set; }
        /// <summary>
        /// <p>Indicates whether the instance is enabled for AMD SEV-SNP. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sev-snp.html'>AMD
        /// SEV-SNP</a>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAmdSevSnpSpecificationEnumValue CpuOptionAmdSevSnp { get; set; }
        /// <summary><p>The number of CPU cores for the instance.</p></summary>
        int? CpuOptionCoreCount { get; set; }
        /// <summary><p>The number of threads per CPU core.</p></summary>
        int? CpuOptionThreadsPerCore { get; set; }
        /// <summary>
        /// <p>The boot mode that is used to boot the instance at launch or start. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html'>Boot
        /// modes</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBootModeValuesEnumValue CurrentInstanceBootMode { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceBootModeValues? CurrentInstanceBootModeValue { get; set; }
        /// <summary>
        /// <p>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to
        /// Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available
        /// with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p>
        /// </summary>
        bool? EbsOptimized { get; set; }
        /// <summary>
        /// <p>Deprecated.</p> <note> <p>Amazon Elastic Graphics reached end of life on January 8, 2024. For workloads that require
        /// graphics acceleration, we recommend that you use Amazon EC2 G4ad, G4dn, or G5 instances.</p> </note>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticGpuAssociation[] ElasticGpuAssociation { get; set; }
        /// <summary><p>The elastic inference accelerator associated with the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticInferenceAcceleratorAssociation[] ElasticInferenceAcceleratorAssociation { get; set; }
        /// <summary><p>Specifies whether enhanced networking with ENA is enabled.</p></summary>
        bool? EnaSupport { get; set; }
        /// <summary>
        /// <p>Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnclaveOptions EnclaveOption { get; set; }
        /// <summary>
        /// <p>If this parameter is set to <code>true</code>, the instance is enabled for Amazon Web Services Nitro Enclaves; otherwise,
        /// it is not enabled for Amazon Web Services Nitro Enclaves.</p>
        /// </summary>
        bool? EnclaveOptionEnabled { get; set; }
        /// <summary><p>Indicates whether the instance is enabled for hibernation.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHibernationOptions HibernationOption { get; set; }
        /// <summary>
        /// <p>If <code>true</code>, your instance is enabled for hibernation; otherwise, it is not enabled for hibernation.</p>
        /// </summary>
        bool? HibernationOptionConfigured { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HostnameType? HostnameTypeValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState? HttpEndpointValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState? HttpProtocolIpv6Value { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState? HttpTokenValue { get; set; }
        /// <summary>
        /// <p>The hypervisor type of the instance. The value <code>xen</code> is used for both Xen and Nitro hypervisors.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue Hypervisor { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType? HypervisorValue { get; set; }
        /// <summary><p>The IAM instance profile associated with the instance, if applicable.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIamInstanceProfile IamInstanceProfile { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) of the instance profile.</p></summary>
        string IamInstanceProfileArn { get; set; }
        /// <summary><p>The ID of the instance profile.</p></summary>
        string IamInstanceProfileId { get; set; }
        /// <summary><p>The ID of the AMI used to launch the instance.</p></summary>
        string ImageId { get; set; }
        /// <summary><p>The ID of the instance.</p></summary>
        string InstanceId { get; set; }
        /// <summary><p>Indicates whether this is a Spot Instance or a Scheduled Instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceLifecycleTypeEnumValue InstanceLifecycle { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceLifecycleType? InstanceLifecycleValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState? InstanceMetadataTagValue { get; set; }
        /// <summary><p>The instance type.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceTypeEnumValue InstanceType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceType? InstanceTypeValue { get; set; }
        /// <summary><p>The IPv6 address assigned to the instance.</p></summary>
        string Ipv6Address { get; set; }
        /// <summary><p>The kernel associated with this instance, if applicable.</p></summary>
        string KernelId { get; set; }
        /// <summary>
        /// <p>The name of the key pair, if this instance was launched with an associated key pair.</p>
        /// </summary>
        string KeyName { get; set; }
        /// <summary><p>The time the instance was launched.</p></summary>
        global::System.DateTime? LaunchTime { get; set; }
        /// <summary><p>The license configurations for the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILicenseConfiguration[] License { get; set; }
        /// <summary>
        /// <p>Provides information on the recovery and maintenance options of your instance.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenanceOptions MaintenanceOption { get; set; }
        /// <summary>
        /// <p>Provides information on the current automatic recovery behavior of your instance.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAutoRecoveryStateEnumValue MaintenanceOptionAutoRecovery { get; set; }
        /// <summary><p>The metadata options for the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponse MetadataOption { get; set; }
        /// <summary>
        /// <p>Indicates whether the HTTP metadata endpoint on your instances is enabled or disabled.</p> <p>If the value is <code>disabled</code>,
        /// you cannot access your instance metadata.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataEndpointStateEnumValue MetadataOptionHttpEndpoint { get; set; }
        /// <summary>
        /// <p>Indicates whether the IPv6 endpoint for the instance metadata service is enabled or disabled.</p> <p>Default: <code>disabled</code>
        /// </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataProtocolStateEnumValue MetadataOptionHttpProtocolIpv6 { get; set; }
        /// <summary>
        /// <p>The maximum number of hops that the metadata token can travel.</p> <p>Possible values: Integers from <code>1</code>
        /// to <code>64</code> </p>
        /// </summary>
        int? MetadataOptionHttpPutResponseHopLimit { get; set; }
        /// <summary>
        /// <p>Indicates whether IMDSv2 is required.</p> <ul> <li> <p> <code>optional</code> - IMDSv2 is optional, which means that
        /// you can use either IMDSv2 or IMDSv1.</p> </li> <li> <p> <code>required</code> - IMDSv2 is required, which means that IMDSv1
        /// is disabled, and you must use IMDSv2.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHttpTokensStateEnumValue MetadataOptionHttpToken { get; set; }
        /// <summary>
        /// <p>Indicates whether access to instance tags from the instance metadata is enabled or disabled. For more information,
        /// see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS'>Work with instance
        /// tags using the instance metadata</a>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataTagsStateEnumValue MetadataOptionInstanceMetadataTag { get; set; }
        /// <summary>
        /// <p>The state of the metadata option changes.</p> <p> <code>pending</code> - The metadata options are being updated and
        /// the instance is not ready to process metadata traffic with the new selection.</p> <p> <code>applied</code> - The metadata
        /// options have been successfully applied on the instance.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsStateEnumValue MetadataOptionState { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState? MetadataOptionsStateValue { get; set; }
        /// <summary><p>The monitoring for the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoring Monitoring { get; set; }
        /// <summary>
        /// <p>Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoringStateEnumValue MonitoringState { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MonitoringState? MonitoringStateValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName? NameValue { get; set; }
        /// <summary><p>The network interfaces for the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface[] NetworkInterface { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) of the Outpost.</p></summary>
        string OutpostArn { get; set; }
        /// <summary><p>The location where the instance launched, if applicable.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacement Placement { get; set; }
        /// <summary>
        /// <p>The affinity setting for the instance on the Dedicated Host.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>
        /// or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
        /// </summary>
        string PlacementAffinity { get; set; }
        /// <summary>
        /// <p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for
        /// you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
        /// </summary>
        string PlacementAvailabilityZone { get; set; }
        /// <summary>
        /// <p>The ID of the placement group that the instance is in. If you specify <code>GroupId</code>, you can't specify <code>GroupName</code>.</p>
        /// </summary>
        string PlacementGroupId { get; set; }
        /// <summary>
        /// <p>The name of the placement group that the instance is in. If you specify <code>GroupName</code>, you can't specify <code>GroupId</code>.</p>
        /// </summary>
        string PlacementGroupName { get; set; }
        /// <summary>
        /// <p>The ID of the Dedicated Host on which the instance resides.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>
        /// or <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>.</p>
        /// </summary>
        string PlacementHostId { get; set; }
        /// <summary>
        /// <p>The ARN of the host resource group in which to launch the instances.</p> <p>If you specify this parameter, either omit
        /// the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
        /// </summary>
        string PlacementHostResourceGroupArn { get; set; }
        /// <summary>
        /// <p>The number of the partition that the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p>
        /// <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.</p>
        /// </summary>
        int? PlacementPartitionNumber { get; set; }
        /// <summary><p>Reserved for future use.</p></summary>
        string PlacementSpreadDomain { get; set; }
        /// <summary>
        /// <p>The tenancy of the instance. An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware.</p>
        /// <p>This parameter is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet'>CreateFleet</a>.
        /// The <code>host</code> tenancy is not supported for <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html'>ImportInstance</a>
        /// or for T3 instances that are configured for the <code>unlimited</code> CPU credit option.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITenancyEnumValue PlacementTenancy { get; set; }
        /// <summary>
        /// <p>The platform. This value is <code>windows</code> for Windows instances; otherwise, it is empty.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue Platform { get; set; }
        /// <summary>
        /// <p>The platform details value for the instance. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html'>AMI
        /// billing information fields</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        string PlatformDetail { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues? PlatformValue { get; set; }
        /// <summary>
        /// <p>[IPv4 only] The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon
        /// EC2 network. This name is not available until the instance enters the <code>running</code> state. </p> <p>The Amazon-provided
        /// DNS server resolves Amazon-provided private DNS hostnames if you've enabled DNS resolution and DNS hostnames in your VPC.
        /// If you are not using the Amazon-provided DNS server in your VPC, your custom domain name servers must resolve the hostname
        /// as appropriate.</p>
        /// </summary>
        string PrivateDnsName { get; set; }
        /// <summary><p>The options for the instance hostname.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponse PrivateDnsNameOption { get; set; }
        /// <summary>
        /// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS A records.</p>
        /// </summary>
        bool? PrivateDnsNameOptionEnableResourceNameDnsARecord { get; set; }
        /// <summary>
        /// <p>Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.</p>
        /// </summary>
        bool? PrivateDnsNameOptionEnableResourceNameDnsAaaaRecord { get; set; }
        /// <summary><p>The type of hostname to assign to an instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostnameTypeEnumValue PrivateDnsNameOptionHostnameType { get; set; }
        /// <summary><p>The private IPv4 address assigned to the instance.</p></summary>
        string PrivateIPAddress { get; set; }
        /// <summary><p>The product codes attached to this instance, if applicable.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[] ProductCode { get; set; }
        /// <summary>
        /// <p>[IPv4 only] The public DNS name assigned to the instance. This name is not available until the instance enters the
        /// <code>running</code> state. This name is only available if you've enabled DNS hostnames for your VPC.</p>
        /// </summary>
        string PublicDnsName { get; set; }
        /// <summary>
        /// <p>The public IPv4 address, or the Carrier IP address assigned to the instance, if applicable.</p> <p>A Carrier IP address
        /// only applies to an instance launched in a subnet associated with a Wavelength Zone.</p>
        /// </summary>
        string PublicIPAddress { get; set; }
        /// <summary><p>The RAM disk associated with this instance, if applicable.</p></summary>
        string RamdiskId { get; set; }
        /// <summary>
        /// <p>The device name of the root device volume (for example, <code>/dev/sda1</code>).</p>
        /// </summary>
        string RootDeviceName { get; set; }
        /// <summary>
        /// <p>The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue RootDeviceType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType? RootDeviceTypeValue { get; set; }
        /// <summary><p>The security groups for the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[] SecurityGroup { get; set; }
        /// <summary><p>Indicates whether source/destination checking is enabled.</p></summary>
        bool? SourceDestCheck { get; set; }
        /// <summary><p>If the request is a Spot Instance request, the ID of the request.</p></summary>
        string SpotInstanceRequestId { get; set; }
        /// <summary>
        /// <p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
        /// </summary>
        string SriovNetSupport { get; set; }
        /// <summary><p>The current state of the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceState State { get; set; }
        /// <summary>
        /// <p>The state of the instance as a 16-bit unsigned integer. </p> <p>The high byte is all of the bits between 2^8 and (2^16)-1,
        /// which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be
        /// ignored.</p> <p>The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255.
        /// </p> <p>The valid values for instance-state-code will all be in the range of the low byte and they are:</p> <ul> <li>
        /// <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p>
        /// <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li>
        /// <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li>
        /// </ul> <p>You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.</p>
        /// </summary>
        int? StateCode { get; set; }
        /// <summary><p>The current state of the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateNameEnumValue StateName { get; set; }
        /// <summary><p>The reason for the most recent state transition.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason StateReason { get; set; }
        /// <summary><p>The reason code for the state change.</p></summary>
        string StateReasonCode { get; set; }
        /// <summary>
        /// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient
        /// capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error
        /// caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was
        /// stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped
        /// because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity
        /// or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance
        /// was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded
        /// available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>:
        /// The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>:
        /// The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client
        /// error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>:
        /// The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated
        /// on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon
        /// EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage
        /// was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
        /// </summary>
        string StateReasonMessage { get; set; }
        /// <summary>
        /// <p>The reason for the most recent state transition. This might be an empty string.</p>
        /// </summary>
        string StateTransitionReason { get; set; }
        /// <summary><p>The ID of the subnet in which the instance is running.</p></summary>
        string SubnetId { get; set; }
        /// <summary><p>Any tags assigned to the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated13[] Tag { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tenancy? TenancyValue { get; set; }
        /// <summary>
        /// <p>If the instance is configured for NitroTPM support, the value is <code>v2.0</code>. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html'>NitroTPM</a>
        /// in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        string TpmSupport { get; set; }
        /// <summary>
        /// <p>The usage operation value for the instance. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html'>AMI
        /// billing information fields</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        string UsageOperation { get; set; }
        /// <summary><p>The time that the usage operation was last updated.</p></summary>
        global::System.DateTime? UsageOperationUpdateTime { get; set; }
        /// <summary><p>The virtualization type of the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue VirtualizationType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType? VirtualizationTypeValue { get; set; }
        /// <summary><p>The ID of the VPC in which the instance is running.</p></summary>
        string VpcId { get; set; }

    }
}