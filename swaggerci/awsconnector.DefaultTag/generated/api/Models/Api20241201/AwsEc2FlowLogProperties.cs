// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEc2FlowLog</summary>
    public partial class AwsEc2FlowLogProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2FlowLogProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2FlowLogPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DeliverCrossAccountRole" /> property.</summary>
        private string _deliverCrossAccountRole;

        /// <summary>
        /// The ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DeliverCrossAccountRole { get => this._deliverCrossAccountRole; set => this._deliverCrossAccountRole = value; }

        /// <summary>Backing field for <see cref="DeliverLogsPermissionArn" /> property.</summary>
        private string _deliverLogsPermissionArn;

        /// <summary>
        /// The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.
        /// If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DeliverLogsPermissionArn { get => this._deliverLogsPermissionArn; set => this._deliverLogsPermissionArn = value; }

        /// <summary>Backing field for <see cref="DestinationOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDestinationOptionsModelProperties _destinationOption;

        /// <summary>Property destinationOptions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDestinationOptionsModelProperties DestinationOption { get => (this._destinationOption = this._destinationOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DestinationOptionsModelProperties()); set => this._destinationOption = value; }

        /// <summary>Property fileFormat</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.FileFormat? DestinationOptionFileFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDestinationOptionsModelPropertiesInternal)DestinationOption).FileFormat; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDestinationOptionsModelPropertiesInternal)DestinationOption).FileFormat = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.FileFormat)""); }

        /// <summary>Property hiveCompatiblePartitions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? DestinationOptionHiveCompatiblePartition { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDestinationOptionsModelPropertiesInternal)DestinationOption).HiveCompatiblePartition; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDestinationOptionsModelPropertiesInternal)DestinationOption).HiveCompatiblePartition = value ?? default(bool); }

        /// <summary>Property perHourPartition</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? DestinationOptionPerHourPartition { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDestinationOptionsModelPropertiesInternal)DestinationOption).PerHourPartition; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDestinationOptionsModelPropertiesInternal)DestinationOption).PerHourPartition = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The Flow Log ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="LogDestination" /> property.</summary>
        private string _logDestination;

        /// <summary>
        /// Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch
        /// Logs log group, an Amazon S3 bucket, or a Kinesis Firehose stream. The value specified for this parameter depends on the
        /// value specified for LogDestinationType.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LogDestination { get => this._logDestination; set => this._logDestination = value; }

        /// <summary>Backing field for <see cref="LogDestinationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogDestinationType? _logDestinationType;

        /// <summary>
        /// Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch
        /// Logs or Amazon S3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogDestinationType? LogDestinationType { get => this._logDestinationType; set => this._logDestinationType = value; }

        /// <summary>Backing field for <see cref="LogFormat" /> property.</summary>
        private string _logFormat;

        /// <summary>
        /// The fields to include in the flow log record, in the order in which they should appear.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LogFormat { get => this._logFormat; set => this._logFormat = value; }

        /// <summary>Backing field for <see cref="LogGroupName" /> property.</summary>
        private string _logGroupName;

        /// <summary>
        /// The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs. If you specify LogDestinationType
        /// as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LogGroupName { get => this._logGroupName; set => this._logGroupName = value; }

        /// <summary>Backing field for <see cref="MaxAggregationInterval" /> property.</summary>
        private int? _maxAggregationInterval;

        /// <summary>
        /// The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can
        /// specify 60 seconds (1 minute) or 600 seconds (10 minutes).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? MaxAggregationInterval { get => this._maxAggregationInterval; set => this._maxAggregationInterval = value; }

        /// <summary>Internal Acessors for DestinationOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDestinationOptionsModelProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2FlowLogPropertiesInternal.DestinationOption { get => (this._destinationOption = this._destinationOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DestinationOptionsModelProperties()); set { {_destinationOption = value;} } }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>
        /// The ID of the subnet, network interface, or VPC for which you want to create a flow log.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="ResourceType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType? _resourceType;

        /// <summary>
        /// The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property,
        /// specify VPC for this property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType? ResourceType { get => this._resourceType; set => this._resourceType = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated11[] _tag;

        /// <summary>The tags to apply to the flow logs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated11[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="TrafficType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TrafficType? _trafficType;

        /// <summary>
        /// The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TrafficType? TrafficType { get => this._trafficType; set => this._trafficType = value; }

        /// <summary>Creates an new <see cref="AwsEc2FlowLogProperties" /> instance.</summary>
        public AwsEc2FlowLogProperties()
        {

        }
    }
    /// Definition of awsEc2FlowLog
    public partial interface IAwsEc2FlowLogProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.",
        SerializedName = @"deliverCrossAccountRole",
        PossibleTypes = new [] { typeof(string) })]
        string DeliverCrossAccountRole { get; set; }
        /// <summary>
        /// The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.
        /// If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account. If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.",
        SerializedName = @"deliverLogsPermissionArn",
        PossibleTypes = new [] { typeof(string) })]
        string DeliverLogsPermissionArn { get; set; }
        /// <summary>Property fileFormat</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property fileFormat",
        SerializedName = @"fileFormat",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.FileFormat) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.FileFormat? DestinationOptionFileFormat { get; set; }
        /// <summary>Property hiveCompatiblePartitions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property hiveCompatiblePartitions",
        SerializedName = @"hiveCompatiblePartitions",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DestinationOptionHiveCompatiblePartition { get; set; }
        /// <summary>Property perHourPartition</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property perHourPartition",
        SerializedName = @"perHourPartition",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DestinationOptionPerHourPartition { get; set; }
        /// <summary>The Flow Log ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Flow Log ID",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>
        /// Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch
        /// Logs log group, an Amazon S3 bucket, or a Kinesis Firehose stream. The value specified for this parameter depends on the
        /// value specified for LogDestinationType.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group, an Amazon S3 bucket, or a Kinesis Firehose stream. The value specified for this parameter depends on the value specified for LogDestinationType.",
        SerializedName = @"logDestination",
        PossibleTypes = new [] { typeof(string) })]
        string LogDestination { get; set; }
        /// <summary>
        /// Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch
        /// Logs or Amazon S3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3.",
        SerializedName = @"logDestinationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogDestinationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogDestinationType? LogDestinationType { get; set; }
        /// <summary>
        /// The fields to include in the flow log record, in the order in which they should appear.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The fields to include in the flow log record, in the order in which they should appear.",
        SerializedName = @"logFormat",
        PossibleTypes = new [] { typeof(string) })]
        string LogFormat { get; set; }
        /// <summary>
        /// The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs. If you specify LogDestinationType
        /// as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs. If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.",
        SerializedName = @"logGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string LogGroupName { get; set; }
        /// <summary>
        /// The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can
        /// specify 60 seconds (1 minute) or 600 seconds (10 minutes).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).",
        SerializedName = @"maxAggregationInterval",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxAggregationInterval { get; set; }
        /// <summary>
        /// The ID of the subnet, network interface, or VPC for which you want to create a flow log.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the subnet, network interface, or VPC for which you want to create a flow log.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>
        /// The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property,
        /// specify VPC for this property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property, specify VPC for this property.",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType? ResourceType { get; set; }
        /// <summary>The tags to apply to the flow logs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags to apply to the flow logs.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated11) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated11[] Tag { get; set; }
        /// <summary>
        /// The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.",
        SerializedName = @"trafficType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TrafficType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TrafficType? TrafficType { get; set; }

    }
    /// Definition of awsEc2FlowLog
    internal partial interface IAwsEc2FlowLogPropertiesInternal

    {
        /// <summary>
        /// The ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
        /// </summary>
        string DeliverCrossAccountRole { get; set; }
        /// <summary>
        /// The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.
        /// If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.
        /// </summary>
        string DeliverLogsPermissionArn { get; set; }
        /// <summary>Property destinationOptions</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDestinationOptionsModelProperties DestinationOption { get; set; }
        /// <summary>Property fileFormat</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.FileFormat? DestinationOptionFileFormat { get; set; }
        /// <summary>Property hiveCompatiblePartitions</summary>
        bool? DestinationOptionHiveCompatiblePartition { get; set; }
        /// <summary>Property perHourPartition</summary>
        bool? DestinationOptionPerHourPartition { get; set; }
        /// <summary>The Flow Log ID</summary>
        string Id { get; set; }
        /// <summary>
        /// Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch
        /// Logs log group, an Amazon S3 bucket, or a Kinesis Firehose stream. The value specified for this parameter depends on the
        /// value specified for LogDestinationType.
        /// </summary>
        string LogDestination { get; set; }
        /// <summary>
        /// Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch
        /// Logs or Amazon S3.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogDestinationType? LogDestinationType { get; set; }
        /// <summary>
        /// The fields to include in the flow log record, in the order in which they should appear.
        /// </summary>
        string LogFormat { get; set; }
        /// <summary>
        /// The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs. If you specify LogDestinationType
        /// as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.
        /// </summary>
        string LogGroupName { get; set; }
        /// <summary>
        /// The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can
        /// specify 60 seconds (1 minute) or 600 seconds (10 minutes).
        /// </summary>
        int? MaxAggregationInterval { get; set; }
        /// <summary>
        /// The ID of the subnet, network interface, or VPC for which you want to create a flow log.
        /// </summary>
        string ResourceId { get; set; }
        /// <summary>
        /// The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property,
        /// specify VPC for this property.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType? ResourceType { get; set; }
        /// <summary>The tags to apply to the flow logs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated11[] Tag { get; set; }
        /// <summary>
        /// The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TrafficType? TrafficType { get; set; }

    }
}