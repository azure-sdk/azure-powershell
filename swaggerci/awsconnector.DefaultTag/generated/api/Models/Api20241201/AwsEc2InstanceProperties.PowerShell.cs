// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsEc2Instance</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsEc2InstancePropertiesTypeConverter))]
    public partial class AwsEc2InstanceProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2InstanceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsEc2InstanceProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Architecture"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Architecture = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue) content.GetValueForProperty("Architecture",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Architecture, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ArchitectureValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("BootMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BootMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue) content.GetValueForProperty("BootMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BootMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BootModeValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("CapacityReservationSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecification = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponse) content.GetValueForProperty("CapacityReservationSpecification",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecification, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CapacityReservationSpecificationResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("CpuOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptions) content.GetValueForProperty("CpuOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CpuOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CurrentInstanceBootMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CurrentInstanceBootMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBootModeValuesEnumValue) content.GetValueForProperty("CurrentInstanceBootMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CurrentInstanceBootMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceBootModeValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnclaveOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnclaveOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnclaveOptions) content.GetValueForProperty("EnclaveOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnclaveOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnclaveOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("HibernationOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HibernationOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHibernationOptions) content.GetValueForProperty("HibernationOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HibernationOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HibernationOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Hypervisor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Hypervisor = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue) content.GetValueForProperty("Hypervisor",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Hypervisor, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HypervisorTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("IamInstanceProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfile = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIamInstanceProfile) content.GetValueForProperty("IamInstanceProfile",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfile, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IamInstanceProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("InstanceLifecycle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceLifecycle = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceLifecycleTypeEnumValue) content.GetValueForProperty("InstanceLifecycle",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceLifecycle, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceLifecycleTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("InstanceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceTypeEnumValue) content.GetValueForProperty("InstanceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MaintenanceOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MaintenanceOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenanceOptions) content.GetValueForProperty("MaintenanceOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MaintenanceOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMaintenanceOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponse) content.GetValueForProperty("MetadataOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataOptionsResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("Monitoring"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Monitoring = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoring) content.GetValueForProperty("Monitoring",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Monitoring, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MonitoringTypeConverter.ConvertFrom);
            }
            if (content.Contains("Placement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Placement = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacement) content.GetValueForProperty("Placement",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Placement, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlacementTypeConverter.ConvertFrom);
            }
            if (content.Contains("Platform"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Platform = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue) content.GetValueForProperty("Platform",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Platform, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrivateDnsNameOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponse) content.GetValueForProperty("PrivateDnsNameOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PrivateDnsNameOptionsResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("RootDeviceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue) content.GetValueForProperty("RootDeviceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceState) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceStateTypeConverter.ConvertFrom);
            }
            if (content.Contains("StateReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReason = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason) content.GetValueForProperty("StateReason",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReason, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateReasonTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualizationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VirtualizationType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue) content.GetValueForProperty("VirtualizationType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VirtualizationType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VirtualizationTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("AmiLaunchIndex"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AmiLaunchIndex = (int?) content.GetValueForProperty("AmiLaunchIndex",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AmiLaunchIndex, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("BlockDeviceMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BlockDeviceMapping = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping[]) content.GetValueForProperty("BlockDeviceMapping",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BlockDeviceMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceBlockDeviceMappingTypeConverter.ConvertFrom));
            }
            if (content.Contains("CapacityReservationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationId = (string) content.GetValueForProperty("CapacityReservationId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationId, global::System.Convert.ToString);
            }
            if (content.Contains("ClientToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ClientToken = (string) content.GetValueForProperty("ClientToken",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ClientToken, global::System.Convert.ToString);
            }
            if (content.Contains("EbsOptimized"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EbsOptimized = (bool?) content.GetValueForProperty("EbsOptimized",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EbsOptimized, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ElasticGpuAssociation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ElasticGpuAssociation = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticGpuAssociation[]) content.GetValueForProperty("ElasticGpuAssociation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ElasticGpuAssociation, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticGpuAssociation>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticGpuAssociationTypeConverter.ConvertFrom));
            }
            if (content.Contains("ElasticInferenceAcceleratorAssociation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ElasticInferenceAcceleratorAssociation = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticInferenceAcceleratorAssociation[]) content.GetValueForProperty("ElasticInferenceAcceleratorAssociation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ElasticInferenceAcceleratorAssociation, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticInferenceAcceleratorAssociation>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticInferenceAcceleratorAssociationTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnaSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnaSupport = (bool?) content.GetValueForProperty("EnaSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnaSupport, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ImageId = (string) content.GetValueForProperty("ImageId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ImageId, global::System.Convert.ToString);
            }
            if (content.Contains("InstanceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceId = (string) content.GetValueForProperty("InstanceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceId, global::System.Convert.ToString);
            }
            if (content.Contains("Ipv6Address"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Ipv6Address = (string) content.GetValueForProperty("Ipv6Address",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Ipv6Address, global::System.Convert.ToString);
            }
            if (content.Contains("KernelId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).KernelId = (string) content.GetValueForProperty("KernelId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).KernelId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).KeyName = (string) content.GetValueForProperty("KeyName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).KeyName, global::System.Convert.ToString);
            }
            if (content.Contains("LaunchTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).LaunchTime = (global::System.DateTime?) content.GetValueForProperty("LaunchTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).LaunchTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("License"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).License = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILicenseConfiguration[]) content.GetValueForProperty("License",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).License, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILicenseConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LicenseConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkInterface"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).NetworkInterface = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface[]) content.GetValueForProperty("NetworkInterface",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).NetworkInterface, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterfaceTypeConverter.ConvertFrom));
            }
            if (content.Contains("OutpostArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).OutpostArn = (string) content.GetValueForProperty("OutpostArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).OutpostArn, global::System.Convert.ToString);
            }
            if (content.Contains("PlatformDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlatformDetail = (string) content.GetValueForProperty("PlatformDetail",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlatformDetail, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsName = (string) content.GetValueForProperty("PrivateDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateIPAddress = (string) content.GetValueForProperty("PrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ProductCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ProductCode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[]) content.GetValueForProperty("ProductCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ProductCode, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProductCodeTypeConverter.ConvertFrom));
            }
            if (content.Contains("PublicDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PublicDnsName = (string) content.GetValueForProperty("PublicDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PublicDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("PublicIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PublicIPAddress = (string) content.GetValueForProperty("PublicIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PublicIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("RamdiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RamdiskId = (string) content.GetValueForProperty("RamdiskId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RamdiskId, global::System.Convert.ToString);
            }
            if (content.Contains("RootDeviceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceName = (string) content.GetValueForProperty("RootDeviceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceName, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SecurityGroup = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[]) content.GetValueForProperty("SecurityGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SecurityGroup, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.GroupIdentifierTypeConverter.ConvertFrom));
            }
            if (content.Contains("SourceDestCheck"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SourceDestCheck = (bool?) content.GetValueForProperty("SourceDestCheck",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SourceDestCheck, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SpotInstanceRequestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SpotInstanceRequestId = (string) content.GetValueForProperty("SpotInstanceRequestId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SpotInstanceRequestId, global::System.Convert.ToString);
            }
            if (content.Contains("SriovNetSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SriovNetSupport = (string) content.GetValueForProperty("SriovNetSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SriovNetSupport, global::System.Convert.ToString);
            }
            if (content.Contains("StateTransitionReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateTransitionReason = (string) content.GetValueForProperty("StateTransitionReason",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateTransitionReason, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated13[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated13>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated13TypeConverter.ConvertFrom));
            }
            if (content.Contains("TpmSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).TpmSupport = (string) content.GetValueForProperty("TpmSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).TpmSupport, global::System.Convert.ToString);
            }
            if (content.Contains("UsageOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).UsageOperation = (string) content.GetValueForProperty("UsageOperation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).UsageOperation, global::System.Convert.ToString);
            }
            if (content.Contains("UsageOperationUpdateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).UsageOperationUpdateTime = (global::System.DateTime?) content.GetValueForProperty("UsageOperationUpdateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).UsageOperationUpdateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("VpcId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VpcId = (string) content.GetValueForProperty("VpcId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VpcId, global::System.Convert.ToString);
            }
            if (content.Contains("CpuOptionCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionCoreCount = (int?) content.GetValueForProperty("CpuOptionCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionCoreCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IamInstanceProfileArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfileArn = (string) content.GetValueForProperty("IamInstanceProfileArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfileArn, global::System.Convert.ToString);
            }
            if (content.Contains("IamInstanceProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfileId = (string) content.GetValueForProperty("IamInstanceProfileId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("InstanceTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceType?) content.GetValueForProperty("InstanceTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceType.CreateFrom);
            }
            if (content.Contains("PlacementAffinity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementAffinity = (string) content.GetValueForProperty("PlacementAffinity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementAffinity, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementAvailabilityZone = (string) content.GetValueForProperty("PlacementAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementGroupId = (string) content.GetValueForProperty("PlacementGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementGroupName = (string) content.GetValueForProperty("PlacementGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementHostId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementHostId = (string) content.GetValueForProperty("PlacementHostId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementHostId, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementPartitionNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementPartitionNumber = (int?) content.GetValueForProperty("PlacementPartitionNumber",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementPartitionNumber, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PlacementSpreadDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementSpreadDomain = (string) content.GetValueForProperty("PlacementSpreadDomain",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementSpreadDomain, global::System.Convert.ToString);
            }
            if (content.Contains("StateReasonCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReasonCode = (string) content.GetValueForProperty("StateReasonCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReasonCode, global::System.Convert.ToString);
            }
            if (content.Contains("StateReasonMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReasonMessage = (string) content.GetValueForProperty("StateReasonMessage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReasonMessage, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualizationTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VirtualizationTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType?) content.GetValueForProperty("VirtualizationTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VirtualizationTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType.CreateFrom);
            }
            if (content.Contains("ArchitectureValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ArchitectureValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues?) content.GetValueForProperty("ArchitectureValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ArchitectureValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues.CreateFrom);
            }
            if (content.Contains("BootModeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BootModeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues?) content.GetValueForProperty("BootModeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BootModeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues.CreateFrom);
            }
            if (content.Contains("CapacityReservationSpecificationCapacityReservationPreference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecificationCapacityReservationPreference = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationPreferenceEnumValue) content.GetValueForProperty("CapacityReservationSpecificationCapacityReservationPreference",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecificationCapacityReservationPreference, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CapacityReservationPreferenceEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("CapacityReservationSpecificationCapacityReservationTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecificationCapacityReservationTarget = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationTargetResponse) content.GetValueForProperty("CapacityReservationSpecificationCapacityReservationTarget",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecificationCapacityReservationTarget, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CapacityReservationTargetResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("CapacityReservationPreferenceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationPreferenceValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CapacityReservationPreference?) content.GetValueForProperty("CapacityReservationPreferenceValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationPreferenceValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CapacityReservationPreference.CreateFrom);
            }
            if (content.Contains("CpuOptionAmdSevSnp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionAmdSevSnp = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAmdSevSnpSpecificationEnumValue) content.GetValueForProperty("CpuOptionAmdSevSnp",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionAmdSevSnp, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AmdSevSnpSpecificationEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("CpuOptionThreadsPerCore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionThreadsPerCore = (int?) content.GetValueForProperty("CpuOptionThreadsPerCore",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionThreadsPerCore, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CurrentInstanceBootModeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CurrentInstanceBootModeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceBootModeValues?) content.GetValueForProperty("CurrentInstanceBootModeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CurrentInstanceBootModeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceBootModeValues.CreateFrom);
            }
            if (content.Contains("EnclaveOptionEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnclaveOptionEnabled = (bool?) content.GetValueForProperty("EnclaveOptionEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnclaveOptionEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HibernationOptionConfigured"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HibernationOptionConfigured = (bool?) content.GetValueForProperty("HibernationOptionConfigured",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HibernationOptionConfigured, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HypervisorValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HypervisorValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType?) content.GetValueForProperty("HypervisorValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HypervisorValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType.CreateFrom);
            }
            if (content.Contains("InstanceLifecycleValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceLifecycleValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceLifecycleType?) content.GetValueForProperty("InstanceLifecycleValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceLifecycleValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceLifecycleType.CreateFrom);
            }
            if (content.Contains("MaintenanceOptionAutoRecovery"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MaintenanceOptionAutoRecovery = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAutoRecoveryStateEnumValue) content.GetValueForProperty("MaintenanceOptionAutoRecovery",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MaintenanceOptionAutoRecovery, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceAutoRecoveryStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionHttpEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataEndpointStateEnumValue) content.GetValueForProperty("MetadataOptionHttpEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpEndpoint, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataEndpointStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionHttpProtocolIpv6"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpProtocolIpv6 = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataProtocolStateEnumValue) content.GetValueForProperty("MetadataOptionHttpProtocolIpv6",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpProtocolIpv6, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataProtocolStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionHttpToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpToken = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHttpTokensStateEnumValue) content.GetValueForProperty("MetadataOptionHttpToken",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpToken, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HttpTokensStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionInstanceMetadataTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionInstanceMetadataTag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataTagsStateEnumValue) content.GetValueForProperty("MetadataOptionInstanceMetadataTag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionInstanceMetadataTag, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataTagsStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionState = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsStateEnumValue) content.GetValueForProperty("MetadataOptionState",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionState, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataOptionsStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionHttpPutResponseHopLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpPutResponseHopLimit = (int?) content.GetValueForProperty("MetadataOptionHttpPutResponseHopLimit",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpPutResponseHopLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MonitoringState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MonitoringState = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoringStateEnumValue) content.GetValueForProperty("MonitoringState",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MonitoringState, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MonitoringStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MonitoringStateValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MonitoringStateValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MonitoringState?) content.GetValueForProperty("MonitoringStateValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MonitoringStateValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MonitoringState.CreateFrom);
            }
            if (content.Contains("PlacementTenancy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementTenancy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITenancyEnumValue) content.GetValueForProperty("PlacementTenancy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementTenancy, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TenancyEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("PlacementHostResourceGroupArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementHostResourceGroupArn = (string) content.GetValueForProperty("PlacementHostResourceGroupArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementHostResourceGroupArn, global::System.Convert.ToString);
            }
            if (content.Contains("TenancyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).TenancyValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tenancy?) content.GetValueForProperty("TenancyValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).TenancyValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tenancy.CreateFrom);
            }
            if (content.Contains("PlatformValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlatformValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues?) content.GetValueForProperty("PlatformValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlatformValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues.CreateFrom);
            }
            if (content.Contains("PrivateDnsNameOptionHostnameType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionHostnameType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostnameTypeEnumValue) content.GetValueForProperty("PrivateDnsNameOptionHostnameType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionHostnameType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HostnameTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrivateDnsNameOptionEnableResourceNameDnsAaaaRecord"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionEnableResourceNameDnsAaaaRecord = (bool?) content.GetValueForProperty("PrivateDnsNameOptionEnableResourceNameDnsAaaaRecord",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionEnableResourceNameDnsAaaaRecord, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PrivateDnsNameOptionEnableResourceNameDnsARecord"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionEnableResourceNameDnsARecord = (bool?) content.GetValueForProperty("PrivateDnsNameOptionEnableResourceNameDnsARecord",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionEnableResourceNameDnsARecord, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HostnameTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HostnameTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HostnameType?) content.GetValueForProperty("HostnameTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HostnameTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HostnameType.CreateFrom);
            }
            if (content.Contains("RootDeviceTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType?) content.GetValueForProperty("RootDeviceTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType.CreateFrom);
            }
            if (content.Contains("StateName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateName = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateNameEnumValue) content.GetValueForProperty("StateName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateName, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceStateNameEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StateCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateCode = (int?) content.GetValueForProperty("StateCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateCode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CapacityReservationTargetCapacityReservationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationTargetCapacityReservationId = (string) content.GetValueForProperty("CapacityReservationTargetCapacityReservationId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationTargetCapacityReservationId, global::System.Convert.ToString);
            }
            if (content.Contains("CapacityReservationTargetCapacityReservationResourceGroupArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationTargetCapacityReservationResourceGroupArn = (string) content.GetValueForProperty("CapacityReservationTargetCapacityReservationResourceGroupArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationTargetCapacityReservationResourceGroupArn, global::System.Convert.ToString);
            }
            if (content.Contains("AmdSevSnpValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AmdSevSnpValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AmdSevSnpSpecification?) content.GetValueForProperty("AmdSevSnpValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AmdSevSnpValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AmdSevSnpSpecification.CreateFrom);
            }
            if (content.Contains("AutoRecoveryValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AutoRecoveryValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceAutoRecoveryState?) content.GetValueForProperty("AutoRecoveryValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AutoRecoveryValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceAutoRecoveryState.CreateFrom);
            }
            if (content.Contains("HttpEndpointValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpEndpointValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState?) content.GetValueForProperty("HttpEndpointValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpEndpointValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState.CreateFrom);
            }
            if (content.Contains("HttpProtocolIpv6Value"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpProtocolIpv6Value = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState?) content.GetValueForProperty("HttpProtocolIpv6Value",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpProtocolIpv6Value, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState.CreateFrom);
            }
            if (content.Contains("HttpTokenValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpTokenValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState?) content.GetValueForProperty("HttpTokenValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpTokenValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState.CreateFrom);
            }
            if (content.Contains("InstanceMetadataTagValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceMetadataTagValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState?) content.GetValueForProperty("InstanceMetadataTagValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceMetadataTagValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState.CreateFrom);
            }
            if (content.Contains("MetadataOptionsStateValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionsStateValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState?) content.GetValueForProperty("MetadataOptionsStateValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionsStateValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState.CreateFrom);
            }
            if (content.Contains("NameValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).NameValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName?) content.GetValueForProperty("NameValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).NameValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2InstanceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsEc2InstanceProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Architecture"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Architecture = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue) content.GetValueForProperty("Architecture",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Architecture, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ArchitectureValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("BootMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BootMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue) content.GetValueForProperty("BootMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BootMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BootModeValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("CapacityReservationSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecification = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationSpecificationResponse) content.GetValueForProperty("CapacityReservationSpecification",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecification, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CapacityReservationSpecificationResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("CpuOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICpuOptions) content.GetValueForProperty("CpuOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CpuOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CurrentInstanceBootMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CurrentInstanceBootMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBootModeValuesEnumValue) content.GetValueForProperty("CurrentInstanceBootMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CurrentInstanceBootMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceBootModeValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnclaveOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnclaveOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnclaveOptions) content.GetValueForProperty("EnclaveOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnclaveOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnclaveOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("HibernationOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HibernationOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHibernationOptions) content.GetValueForProperty("HibernationOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HibernationOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HibernationOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Hypervisor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Hypervisor = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue) content.GetValueForProperty("Hypervisor",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Hypervisor, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HypervisorTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("IamInstanceProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfile = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIamInstanceProfile) content.GetValueForProperty("IamInstanceProfile",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfile, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IamInstanceProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("InstanceLifecycle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceLifecycle = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceLifecycleTypeEnumValue) content.GetValueForProperty("InstanceLifecycle",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceLifecycle, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceLifecycleTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("InstanceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceTypeEnumValue) content.GetValueForProperty("InstanceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MaintenanceOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MaintenanceOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenanceOptions) content.GetValueForProperty("MaintenanceOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MaintenanceOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMaintenanceOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponse) content.GetValueForProperty("MetadataOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataOptionsResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("Monitoring"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Monitoring = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoring) content.GetValueForProperty("Monitoring",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Monitoring, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MonitoringTypeConverter.ConvertFrom);
            }
            if (content.Contains("Placement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Placement = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacement) content.GetValueForProperty("Placement",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Placement, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlacementTypeConverter.ConvertFrom);
            }
            if (content.Contains("Platform"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Platform = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue) content.GetValueForProperty("Platform",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Platform, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrivateDnsNameOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateDnsNameOptionsResponse) content.GetValueForProperty("PrivateDnsNameOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PrivateDnsNameOptionsResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("RootDeviceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue) content.GetValueForProperty("RootDeviceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceState) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceStateTypeConverter.ConvertFrom);
            }
            if (content.Contains("StateReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReason = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason) content.GetValueForProperty("StateReason",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReason, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateReasonTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualizationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VirtualizationType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue) content.GetValueForProperty("VirtualizationType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VirtualizationType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VirtualizationTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("AmiLaunchIndex"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AmiLaunchIndex = (int?) content.GetValueForProperty("AmiLaunchIndex",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AmiLaunchIndex, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("BlockDeviceMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BlockDeviceMapping = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping[]) content.GetValueForProperty("BlockDeviceMapping",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BlockDeviceMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceBlockDeviceMappingTypeConverter.ConvertFrom));
            }
            if (content.Contains("CapacityReservationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationId = (string) content.GetValueForProperty("CapacityReservationId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationId, global::System.Convert.ToString);
            }
            if (content.Contains("ClientToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ClientToken = (string) content.GetValueForProperty("ClientToken",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ClientToken, global::System.Convert.ToString);
            }
            if (content.Contains("EbsOptimized"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EbsOptimized = (bool?) content.GetValueForProperty("EbsOptimized",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EbsOptimized, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ElasticGpuAssociation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ElasticGpuAssociation = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticGpuAssociation[]) content.GetValueForProperty("ElasticGpuAssociation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ElasticGpuAssociation, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticGpuAssociation>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticGpuAssociationTypeConverter.ConvertFrom));
            }
            if (content.Contains("ElasticInferenceAcceleratorAssociation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ElasticInferenceAcceleratorAssociation = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticInferenceAcceleratorAssociation[]) content.GetValueForProperty("ElasticInferenceAcceleratorAssociation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ElasticInferenceAcceleratorAssociation, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticInferenceAcceleratorAssociation>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticInferenceAcceleratorAssociationTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnaSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnaSupport = (bool?) content.GetValueForProperty("EnaSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnaSupport, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ImageId = (string) content.GetValueForProperty("ImageId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ImageId, global::System.Convert.ToString);
            }
            if (content.Contains("InstanceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceId = (string) content.GetValueForProperty("InstanceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceId, global::System.Convert.ToString);
            }
            if (content.Contains("Ipv6Address"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Ipv6Address = (string) content.GetValueForProperty("Ipv6Address",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Ipv6Address, global::System.Convert.ToString);
            }
            if (content.Contains("KernelId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).KernelId = (string) content.GetValueForProperty("KernelId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).KernelId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).KeyName = (string) content.GetValueForProperty("KeyName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).KeyName, global::System.Convert.ToString);
            }
            if (content.Contains("LaunchTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).LaunchTime = (global::System.DateTime?) content.GetValueForProperty("LaunchTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).LaunchTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("License"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).License = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILicenseConfiguration[]) content.GetValueForProperty("License",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).License, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILicenseConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LicenseConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkInterface"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).NetworkInterface = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface[]) content.GetValueForProperty("NetworkInterface",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).NetworkInterface, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterfaceTypeConverter.ConvertFrom));
            }
            if (content.Contains("OutpostArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).OutpostArn = (string) content.GetValueForProperty("OutpostArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).OutpostArn, global::System.Convert.ToString);
            }
            if (content.Contains("PlatformDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlatformDetail = (string) content.GetValueForProperty("PlatformDetail",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlatformDetail, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsName = (string) content.GetValueForProperty("PrivateDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateIPAddress = (string) content.GetValueForProperty("PrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ProductCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ProductCode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[]) content.GetValueForProperty("ProductCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ProductCode, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProductCodeTypeConverter.ConvertFrom));
            }
            if (content.Contains("PublicDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PublicDnsName = (string) content.GetValueForProperty("PublicDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PublicDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("PublicIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PublicIPAddress = (string) content.GetValueForProperty("PublicIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PublicIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("RamdiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RamdiskId = (string) content.GetValueForProperty("RamdiskId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RamdiskId, global::System.Convert.ToString);
            }
            if (content.Contains("RootDeviceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceName = (string) content.GetValueForProperty("RootDeviceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceName, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SecurityGroup = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[]) content.GetValueForProperty("SecurityGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SecurityGroup, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.GroupIdentifierTypeConverter.ConvertFrom));
            }
            if (content.Contains("SourceDestCheck"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SourceDestCheck = (bool?) content.GetValueForProperty("SourceDestCheck",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SourceDestCheck, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SpotInstanceRequestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SpotInstanceRequestId = (string) content.GetValueForProperty("SpotInstanceRequestId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SpotInstanceRequestId, global::System.Convert.ToString);
            }
            if (content.Contains("SriovNetSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SriovNetSupport = (string) content.GetValueForProperty("SriovNetSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SriovNetSupport, global::System.Convert.ToString);
            }
            if (content.Contains("StateTransitionReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateTransitionReason = (string) content.GetValueForProperty("StateTransitionReason",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateTransitionReason, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated13[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated13>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated13TypeConverter.ConvertFrom));
            }
            if (content.Contains("TpmSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).TpmSupport = (string) content.GetValueForProperty("TpmSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).TpmSupport, global::System.Convert.ToString);
            }
            if (content.Contains("UsageOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).UsageOperation = (string) content.GetValueForProperty("UsageOperation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).UsageOperation, global::System.Convert.ToString);
            }
            if (content.Contains("UsageOperationUpdateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).UsageOperationUpdateTime = (global::System.DateTime?) content.GetValueForProperty("UsageOperationUpdateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).UsageOperationUpdateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("VpcId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VpcId = (string) content.GetValueForProperty("VpcId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VpcId, global::System.Convert.ToString);
            }
            if (content.Contains("CpuOptionCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionCoreCount = (int?) content.GetValueForProperty("CpuOptionCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionCoreCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IamInstanceProfileArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfileArn = (string) content.GetValueForProperty("IamInstanceProfileArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfileArn, global::System.Convert.ToString);
            }
            if (content.Contains("IamInstanceProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfileId = (string) content.GetValueForProperty("IamInstanceProfileId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).IamInstanceProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("InstanceTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceType?) content.GetValueForProperty("InstanceTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceType.CreateFrom);
            }
            if (content.Contains("PlacementAffinity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementAffinity = (string) content.GetValueForProperty("PlacementAffinity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementAffinity, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementAvailabilityZone = (string) content.GetValueForProperty("PlacementAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementGroupId = (string) content.GetValueForProperty("PlacementGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementGroupName = (string) content.GetValueForProperty("PlacementGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementHostId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementHostId = (string) content.GetValueForProperty("PlacementHostId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementHostId, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementPartitionNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementPartitionNumber = (int?) content.GetValueForProperty("PlacementPartitionNumber",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementPartitionNumber, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PlacementSpreadDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementSpreadDomain = (string) content.GetValueForProperty("PlacementSpreadDomain",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementSpreadDomain, global::System.Convert.ToString);
            }
            if (content.Contains("StateReasonCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReasonCode = (string) content.GetValueForProperty("StateReasonCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReasonCode, global::System.Convert.ToString);
            }
            if (content.Contains("StateReasonMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReasonMessage = (string) content.GetValueForProperty("StateReasonMessage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateReasonMessage, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualizationTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VirtualizationTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType?) content.GetValueForProperty("VirtualizationTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).VirtualizationTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType.CreateFrom);
            }
            if (content.Contains("ArchitectureValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ArchitectureValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues?) content.GetValueForProperty("ArchitectureValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).ArchitectureValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues.CreateFrom);
            }
            if (content.Contains("BootModeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BootModeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues?) content.GetValueForProperty("BootModeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).BootModeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues.CreateFrom);
            }
            if (content.Contains("CapacityReservationSpecificationCapacityReservationPreference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecificationCapacityReservationPreference = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationPreferenceEnumValue) content.GetValueForProperty("CapacityReservationSpecificationCapacityReservationPreference",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecificationCapacityReservationPreference, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CapacityReservationPreferenceEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("CapacityReservationSpecificationCapacityReservationTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecificationCapacityReservationTarget = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityReservationTargetResponse) content.GetValueForProperty("CapacityReservationSpecificationCapacityReservationTarget",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationSpecificationCapacityReservationTarget, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CapacityReservationTargetResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("CapacityReservationPreferenceValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationPreferenceValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CapacityReservationPreference?) content.GetValueForProperty("CapacityReservationPreferenceValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationPreferenceValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CapacityReservationPreference.CreateFrom);
            }
            if (content.Contains("CpuOptionAmdSevSnp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionAmdSevSnp = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAmdSevSnpSpecificationEnumValue) content.GetValueForProperty("CpuOptionAmdSevSnp",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionAmdSevSnp, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AmdSevSnpSpecificationEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("CpuOptionThreadsPerCore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionThreadsPerCore = (int?) content.GetValueForProperty("CpuOptionThreadsPerCore",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CpuOptionThreadsPerCore, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CurrentInstanceBootModeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CurrentInstanceBootModeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceBootModeValues?) content.GetValueForProperty("CurrentInstanceBootModeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CurrentInstanceBootModeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceBootModeValues.CreateFrom);
            }
            if (content.Contains("EnclaveOptionEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnclaveOptionEnabled = (bool?) content.GetValueForProperty("EnclaveOptionEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).EnclaveOptionEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HibernationOptionConfigured"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HibernationOptionConfigured = (bool?) content.GetValueForProperty("HibernationOptionConfigured",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HibernationOptionConfigured, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HypervisorValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HypervisorValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType?) content.GetValueForProperty("HypervisorValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HypervisorValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType.CreateFrom);
            }
            if (content.Contains("InstanceLifecycleValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceLifecycleValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceLifecycleType?) content.GetValueForProperty("InstanceLifecycleValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceLifecycleValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceLifecycleType.CreateFrom);
            }
            if (content.Contains("MaintenanceOptionAutoRecovery"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MaintenanceOptionAutoRecovery = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAutoRecoveryStateEnumValue) content.GetValueForProperty("MaintenanceOptionAutoRecovery",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MaintenanceOptionAutoRecovery, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceAutoRecoveryStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionHttpEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataEndpointStateEnumValue) content.GetValueForProperty("MetadataOptionHttpEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpEndpoint, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataEndpointStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionHttpProtocolIpv6"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpProtocolIpv6 = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataProtocolStateEnumValue) content.GetValueForProperty("MetadataOptionHttpProtocolIpv6",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpProtocolIpv6, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataProtocolStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionHttpToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpToken = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHttpTokensStateEnumValue) content.GetValueForProperty("MetadataOptionHttpToken",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpToken, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HttpTokensStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionInstanceMetadataTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionInstanceMetadataTag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataTagsStateEnumValue) content.GetValueForProperty("MetadataOptionInstanceMetadataTag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionInstanceMetadataTag, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataTagsStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionState = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsStateEnumValue) content.GetValueForProperty("MetadataOptionState",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionState, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataOptionsStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataOptionHttpPutResponseHopLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpPutResponseHopLimit = (int?) content.GetValueForProperty("MetadataOptionHttpPutResponseHopLimit",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionHttpPutResponseHopLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MonitoringState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MonitoringState = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonitoringStateEnumValue) content.GetValueForProperty("MonitoringState",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MonitoringState, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MonitoringStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("MonitoringStateValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MonitoringStateValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MonitoringState?) content.GetValueForProperty("MonitoringStateValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MonitoringStateValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MonitoringState.CreateFrom);
            }
            if (content.Contains("PlacementTenancy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementTenancy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITenancyEnumValue) content.GetValueForProperty("PlacementTenancy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementTenancy, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TenancyEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("PlacementHostResourceGroupArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementHostResourceGroupArn = (string) content.GetValueForProperty("PlacementHostResourceGroupArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlacementHostResourceGroupArn, global::System.Convert.ToString);
            }
            if (content.Contains("TenancyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).TenancyValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tenancy?) content.GetValueForProperty("TenancyValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).TenancyValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tenancy.CreateFrom);
            }
            if (content.Contains("PlatformValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlatformValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues?) content.GetValueForProperty("PlatformValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PlatformValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues.CreateFrom);
            }
            if (content.Contains("PrivateDnsNameOptionHostnameType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionHostnameType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostnameTypeEnumValue) content.GetValueForProperty("PrivateDnsNameOptionHostnameType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionHostnameType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HostnameTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrivateDnsNameOptionEnableResourceNameDnsAaaaRecord"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionEnableResourceNameDnsAaaaRecord = (bool?) content.GetValueForProperty("PrivateDnsNameOptionEnableResourceNameDnsAaaaRecord",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionEnableResourceNameDnsAaaaRecord, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PrivateDnsNameOptionEnableResourceNameDnsARecord"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionEnableResourceNameDnsARecord = (bool?) content.GetValueForProperty("PrivateDnsNameOptionEnableResourceNameDnsARecord",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).PrivateDnsNameOptionEnableResourceNameDnsARecord, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HostnameTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HostnameTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HostnameType?) content.GetValueForProperty("HostnameTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HostnameTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HostnameType.CreateFrom);
            }
            if (content.Contains("RootDeviceTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType?) content.GetValueForProperty("RootDeviceTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).RootDeviceTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType.CreateFrom);
            }
            if (content.Contains("StateName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateName = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceStateNameEnumValue) content.GetValueForProperty("StateName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateName, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceStateNameEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StateCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateCode = (int?) content.GetValueForProperty("StateCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).StateCode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CapacityReservationTargetCapacityReservationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationTargetCapacityReservationId = (string) content.GetValueForProperty("CapacityReservationTargetCapacityReservationId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationTargetCapacityReservationId, global::System.Convert.ToString);
            }
            if (content.Contains("CapacityReservationTargetCapacityReservationResourceGroupArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationTargetCapacityReservationResourceGroupArn = (string) content.GetValueForProperty("CapacityReservationTargetCapacityReservationResourceGroupArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).CapacityReservationTargetCapacityReservationResourceGroupArn, global::System.Convert.ToString);
            }
            if (content.Contains("AmdSevSnpValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AmdSevSnpValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AmdSevSnpSpecification?) content.GetValueForProperty("AmdSevSnpValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AmdSevSnpValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AmdSevSnpSpecification.CreateFrom);
            }
            if (content.Contains("AutoRecoveryValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AutoRecoveryValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceAutoRecoveryState?) content.GetValueForProperty("AutoRecoveryValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).AutoRecoveryValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceAutoRecoveryState.CreateFrom);
            }
            if (content.Contains("HttpEndpointValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpEndpointValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState?) content.GetValueForProperty("HttpEndpointValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpEndpointValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState.CreateFrom);
            }
            if (content.Contains("HttpProtocolIpv6Value"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpProtocolIpv6Value = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState?) content.GetValueForProperty("HttpProtocolIpv6Value",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpProtocolIpv6Value, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState.CreateFrom);
            }
            if (content.Contains("HttpTokenValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpTokenValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState?) content.GetValueForProperty("HttpTokenValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).HttpTokenValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState.CreateFrom);
            }
            if (content.Contains("InstanceMetadataTagValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceMetadataTagValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState?) content.GetValueForProperty("InstanceMetadataTagValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).InstanceMetadataTagValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState.CreateFrom);
            }
            if (content.Contains("MetadataOptionsStateValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionsStateValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState?) content.GetValueForProperty("MetadataOptionsStateValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).MetadataOptionsStateValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState.CreateFrom);
            }
            if (content.Contains("NameValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).NameValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName?) content.GetValueForProperty("NameValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstancePropertiesInternal)this).NameValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceStateName.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2InstanceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsEc2InstanceProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2InstanceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsEc2InstanceProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsEc2InstanceProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsEc2InstanceProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsEc2Instance
    [System.ComponentModel.TypeConverter(typeof(AwsEc2InstancePropertiesTypeConverter))]
    public partial interface IAwsEc2InstanceProperties

    {

    }
}