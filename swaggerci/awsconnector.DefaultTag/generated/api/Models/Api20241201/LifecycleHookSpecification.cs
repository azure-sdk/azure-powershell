// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of LifecycleHookSpecification</summary>
    public partial class LifecycleHookSpecification :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecycleHookSpecification,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecycleHookSpecificationInternal
    {

        /// <summary>Backing field for <see cref="DefaultResult" /> property.</summary>
        private string _defaultResult;

        /// <summary>
        /// The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The
        /// default value is ``ABANDON``. Valid values: ``CONTINUE`` | ``ABANDON``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DefaultResult { get => this._defaultResult; set => this._defaultResult = value; }

        /// <summary>Backing field for <see cref="HeartbeatTimeout" /> property.</summary>
        private int? _heartbeatTimeout;

        /// <summary>
        /// The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from ``30`` to ``7200``
        /// seconds. The default value is ``3600`` seconds (1 hour).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? HeartbeatTimeout { get => this._heartbeatTimeout; set => this._heartbeatTimeout = value; }

        /// <summary>Backing field for <see cref="LifecycleHookName" /> property.</summary>
        private string _lifecycleHookName;

        /// <summary>The name of the lifecycle hook.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LifecycleHookName { get => this._lifecycleHookName; set => this._lifecycleHookName = value; }

        /// <summary>Backing field for <see cref="LifecycleTransition" /> property.</summary>
        private string _lifecycleTransition;

        /// <summary>
        /// The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions. + To create a lifecycle
        /// hook for scale-out events, specify ``autoscaling:EC2_INSTANCE_LAUNCHING``. + To create a lifecycle hook for scale-in events,
        /// specify ``autoscaling:EC2_INSTANCE_TERMINATING``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LifecycleTransition { get => this._lifecycleTransition; set => this._lifecycleTransition = value; }

        /// <summary>Backing field for <see cref="NotificationMetadata" /> property.</summary>
        private string _notificationMetadata;

        /// <summary>
        /// Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string NotificationMetadata { get => this._notificationMetadata; set => this._notificationMetadata = value; }

        /// <summary>Backing field for <see cref="NotificationTargetArn" /> property.</summary>
        private string _notificationTargetArn;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling sends notifications to when an
        /// instance is in a wait state for the lifecycle hook. You can specify an Amazon SNS topic or an Amazon SQS queue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string NotificationTargetArn { get => this._notificationTargetArn; set => this._notificationTargetArn = value; }

        /// <summary>Backing field for <see cref="RoleArn" /> property.</summary>
        private string _roleArn;

        /// <summary>
        /// The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target. For information
        /// about creating this role, see [Configure a notification target for a lifecycle hook](https://docs.aws.amazon.com/autoscaling/ec2/userguide/prepare-for-lifecycle-notifications.html#lifecycle-hook-notification-target)
        /// in the *Amazon EC2 Auto Scaling User Guide*. Valid only if the notification target is an Amazon SNS topic or an Amazon
        /// SQS queue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RoleArn { get => this._roleArn; set => this._roleArn = value; }

        /// <summary>Creates an new <see cref="LifecycleHookSpecification" /> instance.</summary>
        public LifecycleHookSpecification()
        {

        }
    }
    /// Definition of LifecycleHookSpecification
    public partial interface ILifecycleHookSpecification :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The
        /// default value is ``ABANDON``. Valid values: ``CONTINUE`` | ``ABANDON``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The default value is ``ABANDON``. Valid values: ``CONTINUE`` | ``ABANDON``",
        SerializedName = @"defaultResult",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultResult { get; set; }
        /// <summary>
        /// The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from ``30`` to ``7200``
        /// seconds. The default value is ``3600`` seconds (1 hour).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from ``30`` to ``7200`` seconds. The default value is ``3600`` seconds (1 hour).",
        SerializedName = @"heartbeatTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? HeartbeatTimeout { get; set; }
        /// <summary>The name of the lifecycle hook.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the lifecycle hook.",
        SerializedName = @"lifecycleHookName",
        PossibleTypes = new [] { typeof(string) })]
        string LifecycleHookName { get; set; }
        /// <summary>
        /// The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions. + To create a lifecycle
        /// hook for scale-out events, specify ``autoscaling:EC2_INSTANCE_LAUNCHING``. + To create a lifecycle hook for scale-in events,
        /// specify ``autoscaling:EC2_INSTANCE_TERMINATING``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions.  +  To create a lifecycle hook for scale-out events, specify ``autoscaling:EC2_INSTANCE_LAUNCHING``.  +  To create a lifecycle hook for scale-in events, specify ``autoscaling:EC2_INSTANCE_TERMINATING``.",
        SerializedName = @"lifecycleTransition",
        PossibleTypes = new [] { typeof(string) })]
        string LifecycleTransition { get; set; }
        /// <summary>
        /// Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.",
        SerializedName = @"notificationMetadata",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationMetadata { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling sends notifications to when an
        /// instance is in a wait state for the lifecycle hook. You can specify an Amazon SNS topic or an Amazon SQS queue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling sends notifications to when an instance is in a wait state for the lifecycle hook. You can specify an Amazon SNS topic or an Amazon SQS queue.",
        SerializedName = @"notificationTargetARN",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationTargetArn { get; set; }
        /// <summary>
        /// The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target. For information
        /// about creating this role, see [Configure a notification target for a lifecycle hook](https://docs.aws.amazon.com/autoscaling/ec2/userguide/prepare-for-lifecycle-notifications.html#lifecycle-hook-notification-target)
        /// in the *Amazon EC2 Auto Scaling User Guide*. Valid only if the notification target is an Amazon SNS topic or an Amazon
        /// SQS queue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target. For information about creating this role, see [Configure a notification target for a lifecycle hook](https://docs.aws.amazon.com/autoscaling/ec2/userguide/prepare-for-lifecycle-notifications.html#lifecycle-hook-notification-target) in the *Amazon EC2 Auto Scaling User Guide*. Valid only if the notification target is an Amazon SNS topic or an Amazon SQS queue.",
        SerializedName = @"roleARN",
        PossibleTypes = new [] { typeof(string) })]
        string RoleArn { get; set; }

    }
    /// Definition of LifecycleHookSpecification
    internal partial interface ILifecycleHookSpecificationInternal

    {
        /// <summary>
        /// The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The
        /// default value is ``ABANDON``. Valid values: ``CONTINUE`` | ``ABANDON``
        /// </summary>
        string DefaultResult { get; set; }
        /// <summary>
        /// The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from ``30`` to ``7200``
        /// seconds. The default value is ``3600`` seconds (1 hour).
        /// </summary>
        int? HeartbeatTimeout { get; set; }
        /// <summary>The name of the lifecycle hook.</summary>
        string LifecycleHookName { get; set; }
        /// <summary>
        /// The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions. + To create a lifecycle
        /// hook for scale-out events, specify ``autoscaling:EC2_INSTANCE_LAUNCHING``. + To create a lifecycle hook for scale-in events,
        /// specify ``autoscaling:EC2_INSTANCE_TERMINATING``.
        /// </summary>
        string LifecycleTransition { get; set; }
        /// <summary>
        /// Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
        /// </summary>
        string NotificationMetadata { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling sends notifications to when an
        /// instance is in a wait state for the lifecycle hook. You can specify an Amazon SNS topic or an Amazon SQS queue.
        /// </summary>
        string NotificationTargetArn { get; set; }
        /// <summary>
        /// The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target. For information
        /// about creating this role, see [Configure a notification target for a lifecycle hook](https://docs.aws.amazon.com/autoscaling/ec2/userguide/prepare-for-lifecycle-notifications.html#lifecycle-hook-notification-target)
        /// in the *Amazon EC2 Auto Scaling User Guide*. Valid only if the notification target is an Amazon SNS topic or an Amazon
        /// SQS queue.
        /// </summary>
        string RoleArn { get; set; }

    }
}