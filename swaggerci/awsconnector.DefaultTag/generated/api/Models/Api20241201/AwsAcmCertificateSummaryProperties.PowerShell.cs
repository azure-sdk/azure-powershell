// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsAcmCertificateSummary</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsAcmCertificateSummaryPropertiesTypeConverter))]
    public partial class AwsAcmCertificateSummaryProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsAcmCertificateSummaryProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsAcmCertificateSummaryProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("KeyAlgorithm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyAlgorithm = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyAlgorithmEnumValue) content.GetValueForProperty("KeyAlgorithm",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyAlgorithm, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KeyAlgorithmEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("RenewalEligibility"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RenewalEligibility = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRenewalEligibilityEnumValue) content.GetValueForProperty("RenewalEligibility",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RenewalEligibility, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RenewalEligibilityEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificateStatusEnumValue) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CertificateStatusEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Type = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificateTypeEnumValue) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Type, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CertificateTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("CertificateArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).CertificateArn = (string) content.GetValueForProperty("CertificateArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).CertificateArn, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).CreatedAt = (global::System.DateTime?) content.GetValueForProperty("CreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).CreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).DomainName = (string) content.GetValueForProperty("DomainName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).DomainName, global::System.Convert.ToString);
            }
            if (content.Contains("Exported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Exported = (bool?) content.GetValueForProperty("Exported",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Exported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ExtendedKeyUsage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).ExtendedKeyUsage = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExtendedKeyUsageName[]) content.GetValueForProperty("ExtendedKeyUsage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).ExtendedKeyUsage, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExtendedKeyUsageName>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExtendedKeyUsageName.CreateFrom));
            }
            if (content.Contains("HasAdditionalSubjectAlternativeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).HasAdditionalSubjectAlternativeName = (bool?) content.GetValueForProperty("HasAdditionalSubjectAlternativeName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).HasAdditionalSubjectAlternativeName, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ImportedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).ImportedAt = (global::System.DateTime?) content.GetValueForProperty("ImportedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).ImportedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("InUse"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).InUse = (bool?) content.GetValueForProperty("InUse",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).InUse, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IssuedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).IssuedAt = (global::System.DateTime?) content.GetValueForProperty("IssuedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).IssuedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("KeyUsage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyUsage = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsageName[]) content.GetValueForProperty("KeyUsage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyUsage, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsageName>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsageName.CreateFrom));
            }
            if (content.Contains("NotAfter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).NotAfter = (global::System.DateTime?) content.GetValueForProperty("NotAfter",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).NotAfter, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NotBefore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).NotBefore = (global::System.DateTime?) content.GetValueForProperty("NotBefore",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).NotBefore, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RevokedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RevokedAt = (global::System.DateTime?) content.GetValueForProperty("RevokedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RevokedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SubjectAlternativeNameSummary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).SubjectAlternativeNameSummary = (string[]) content.GetValueForProperty("SubjectAlternativeNameSummary",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).SubjectAlternativeNameSummary, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("KeyAlgorithmValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyAlgorithmValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyAlgorithm?) content.GetValueForProperty("KeyAlgorithmValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyAlgorithmValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyAlgorithm.CreateFrom);
            }
            if (content.Contains("RenewalEligibilityValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RenewalEligibilityValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RenewalEligibility?) content.GetValueForProperty("RenewalEligibilityValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RenewalEligibilityValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RenewalEligibility.CreateFrom);
            }
            if (content.Contains("StatusValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).StatusValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CertificateStatus?) content.GetValueForProperty("StatusValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).StatusValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CertificateStatus.CreateFrom);
            }
            if (content.Contains("TypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).TypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CertificateType?) content.GetValueForProperty("TypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).TypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CertificateType.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsAcmCertificateSummaryProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsAcmCertificateSummaryProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("KeyAlgorithm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyAlgorithm = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyAlgorithmEnumValue) content.GetValueForProperty("KeyAlgorithm",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyAlgorithm, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KeyAlgorithmEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("RenewalEligibility"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RenewalEligibility = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRenewalEligibilityEnumValue) content.GetValueForProperty("RenewalEligibility",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RenewalEligibility, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RenewalEligibilityEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificateStatusEnumValue) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CertificateStatusEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Type = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificateTypeEnumValue) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Type, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CertificateTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("CertificateArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).CertificateArn = (string) content.GetValueForProperty("CertificateArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).CertificateArn, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).CreatedAt = (global::System.DateTime?) content.GetValueForProperty("CreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).CreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).DomainName = (string) content.GetValueForProperty("DomainName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).DomainName, global::System.Convert.ToString);
            }
            if (content.Contains("Exported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Exported = (bool?) content.GetValueForProperty("Exported",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).Exported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ExtendedKeyUsage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).ExtendedKeyUsage = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExtendedKeyUsageName[]) content.GetValueForProperty("ExtendedKeyUsage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).ExtendedKeyUsage, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExtendedKeyUsageName>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExtendedKeyUsageName.CreateFrom));
            }
            if (content.Contains("HasAdditionalSubjectAlternativeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).HasAdditionalSubjectAlternativeName = (bool?) content.GetValueForProperty("HasAdditionalSubjectAlternativeName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).HasAdditionalSubjectAlternativeName, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ImportedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).ImportedAt = (global::System.DateTime?) content.GetValueForProperty("ImportedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).ImportedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("InUse"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).InUse = (bool?) content.GetValueForProperty("InUse",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).InUse, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IssuedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).IssuedAt = (global::System.DateTime?) content.GetValueForProperty("IssuedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).IssuedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("KeyUsage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyUsage = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsageName[]) content.GetValueForProperty("KeyUsage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyUsage, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsageName>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsageName.CreateFrom));
            }
            if (content.Contains("NotAfter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).NotAfter = (global::System.DateTime?) content.GetValueForProperty("NotAfter",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).NotAfter, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NotBefore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).NotBefore = (global::System.DateTime?) content.GetValueForProperty("NotBefore",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).NotBefore, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RevokedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RevokedAt = (global::System.DateTime?) content.GetValueForProperty("RevokedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RevokedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SubjectAlternativeNameSummary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).SubjectAlternativeNameSummary = (string[]) content.GetValueForProperty("SubjectAlternativeNameSummary",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).SubjectAlternativeNameSummary, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("KeyAlgorithmValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyAlgorithmValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyAlgorithm?) content.GetValueForProperty("KeyAlgorithmValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).KeyAlgorithmValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyAlgorithm.CreateFrom);
            }
            if (content.Contains("RenewalEligibilityValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RenewalEligibilityValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RenewalEligibility?) content.GetValueForProperty("RenewalEligibilityValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).RenewalEligibilityValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RenewalEligibility.CreateFrom);
            }
            if (content.Contains("StatusValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).StatusValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CertificateStatus?) content.GetValueForProperty("StatusValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).StatusValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CertificateStatus.CreateFrom);
            }
            if (content.Contains("TypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).TypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CertificateType?) content.GetValueForProperty("TypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryPropertiesInternal)this).TypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CertificateType.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsAcmCertificateSummaryProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsAcmCertificateSummaryProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsAcmCertificateSummaryProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsAcmCertificateSummaryProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsAcmCertificateSummaryProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="AwsAcmCertificateSummaryProperties" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAcmCertificateSummaryProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsAcmCertificateSummary
    [System.ComponentModel.TypeConverter(typeof(AwsAcmCertificateSummaryPropertiesTypeConverter))]
    public partial interface IAwsAcmCertificateSummaryProperties

    {

    }
}