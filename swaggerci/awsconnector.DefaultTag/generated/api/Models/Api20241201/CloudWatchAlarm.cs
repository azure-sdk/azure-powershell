// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>A Microsoft.AwsConnector resource</summary>
    public partial class CloudWatchAlarm :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarm,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmInternal,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.TrackedResource();

        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string Arn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).Arn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).Arn = value ?? null; }

        /// <summary>
        /// Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyActionsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyActionsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyActionsEnabled = value ?? default(bool); }

        /// <summary>
        /// The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action
        /// as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see
        /// [PutMetricAlarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html) in the *API
        /// Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] AwPropertyAlarmAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyAlarmAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyAlarmAction = value ?? null /* arrayOf */; }

        /// <summary>The description of the alarm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyAlarmDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyAlarmDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyAlarmDescription = value ?? null; }

        /// <summary>
        /// The name of the alarm. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the alarm
        /// name. If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates
        /// that require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyAlarmName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyAlarmName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyAlarmName = value ?? null; }

        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyArn = value ?? null; }

        /// <summary>
        /// The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is
        /// used as the first operand.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyComparisonOperator { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyComparisonOperator; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyComparisonOperator = value ?? null; }

        /// <summary>
        /// The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an 'M out of
        /// N' alarm. In that case, this value is the M, and the value that you set for ``EvaluationPeriods`` is the N value. For
        /// more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation)
        /// in the *User Guide*. If you omit this parameter, CW uses the same value here that you set for ``EvaluationPeriods``, and
        /// the alarm goes to alarm state if that many consecutive periods are breaching.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AwPropertyDatapointsToAlarm { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyDatapointsToAlarm; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyDatapointsToAlarm = value ?? default(int); }

        /// <summary>
        /// The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify ``Dimensions``.
        /// Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimension[] AwPropertyDimension { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyDimension; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyDimension = value ?? null /* arrayOf */; }

        /// <summary>
        /// Used only for alarms based on percentiles. If ``ignore``, the alarm state does not change during periods with too few
        /// data points to be statistically significant. If ``evaluate`` or this parameter is not used, the alarm is always evaluated
        /// and possibly changes state no matter how many data points are available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyEvaluateLowSampleCountPercentile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyEvaluateLowSampleCountPercentile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyEvaluateLowSampleCountPercentile = value ?? null; }

        /// <summary>
        /// The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires
        /// that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are
        /// setting an 'M out of N' alarm, this value is the N, and ``DatapointsToAlarm`` is the M. For more information, see [Evaluating
        /// an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in
        /// the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AwPropertyEvaluationPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyEvaluationPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyEvaluationPeriod = value ?? default(int); }

        /// <summary>
        /// The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100. For an alarm
        /// based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm based on
        /// a math expression, you can't specify ``ExtendedStatistic``. Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyExtendedStatistic { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyExtendedStatistic; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyExtendedStatistic = value ?? null; }

        /// <summary>
        /// The actions to execute when this alarm transitions to the ``INSUFFICIENT_DATA`` state from any other state. Each action
        /// is specified as an Amazon Resource Name (ARN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] AwPropertyInsufficientDataAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyInsufficientDataAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyInsufficientDataAction = value ?? null /* arrayOf */; }

        /// <summary>
        /// An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either
        /// retrieves a metric or performs a math expression. If you specify the ``Metrics`` parameter, you cannot specify ``MetricName``,
        /// ``Dimensions``, ``Period``, ``Namespace``, ``Statistic``, ``ExtendedStatistic``, or ``Unit``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricDataQuery[] AwPropertyMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyMetric = value ?? null /* arrayOf */; }

        /// <summary>
        /// The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you use ``Metrics`` instead and you can't specify ``MetricName``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyMetricName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyMetricName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyMetricName = value ?? null; }

        /// <summary>
        /// The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you can't specify ``Namespace`` and you use ``Metrics`` instead. For a list of namespaces for metrics
        /// from AWS services, see [Services That Publish Metrics.](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyNamespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyNamespace = value ?? null; }

        /// <summary>
        /// The actions to execute when this alarm transitions to the ``OK`` state from any other state. Each action is specified
        /// as an Amazon Resource Name (ARN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] AwPropertyOkAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyOkAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyOkAction = value ?? null /* arrayOf */; }

        /// <summary>
        /// The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values
        /// are 10, 30, 60, and any multiple of 60. For an alarm based on a math expression, you can't specify ``Period``, and instead
        /// you use the ``Metrics`` parameter. *Minimum:* 10
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AwPropertyPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyPeriod = value ?? default(int); }

        /// <summary>
        /// The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ``ExtendedStatistic``.
        /// For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm
        /// based on a math expression, you can't specify ``Statistic``. Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyStatistic { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyStatistic; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyStatistic = value ?? null; }

        /// <summary>Property tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated7[] AwPropertyTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyTag = value ?? null /* arrayOf */; }

        /// <summary>The value to compare with the specified statistic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public float? AwPropertyThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyThreshold = value ?? default(float); }

        /// <summary>
        /// In an alarm based on an anomaly detection model, this is the ID of the ``ANOMALY_DETECTION_BAND`` function used as the
        /// threshold for the alarm.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyThresholdMetricId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyThresholdMetricId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyThresholdMetricId = value ?? null; }

        /// <summary>
        /// Sets how this alarm is to handle missing data points. Valid values are ``breaching``, ``notBreaching``, ``ignore``, and
        /// ``missing``. For more information, see [Configuring How Alarms Treat Missing Data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data)
        /// in the *Amazon User Guide*. If you omit this parameter, the default behavior of ``missing`` is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyTreatMissingData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyTreatMissingData; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyTreatMissingData = value ?? null; }

        /// <summary>
        /// The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric.
        /// Do not specify this if you are specifying a ``Metrics`` array. You can specify the following values: Seconds, Microseconds,
        /// Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent,
        /// Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second,
        /// Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwPropertyUnit = value ?? null; }

        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwsAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwsAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwsAccountId = value ?? null; }

        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwsRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwsRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwsRegion = value ?? null; }

        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwsSourceSchema { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwsSourceSchema; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwsSourceSchema = value ?? null; }

        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesAwsTags AwsTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwsTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwsTag = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="AzureAsyncOperation" /> property.</summary>
        private string _azureAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AzureAsyncOperation { get => this._azureAsyncOperation; set => this._azureAsyncOperation = value; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for AwsProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudWatchAlarmProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmInternal.AwsProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwsProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).AwsProperty = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CloudWatchAlarmProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CloudWatchAlarmProperties()); set => this._property = value; }

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PublicCloudConnectorsResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).PublicCloudConnectorsResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).PublicCloudConnectorsResourceId = value ?? null; }

        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PublicCloudResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).PublicCloudResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesInternal)Property).PublicCloudResourceName = value ?? null; }

        /// <summary>Backing field for <see cref="RetryAfter" /> property.</summary>
        private int? _retryAfter;

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? RetryAfter { get => this._retryAfter; set => this._retryAfter = value; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="CloudWatchAlarm" /> instance.</summary>
        public CloudWatchAlarm()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Azure-AsyncOperation", out var __azureAsyncOperationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmInternal)this).AzureAsyncOperation = System.Linq.Enumerable.FirstOrDefault(__azureAsyncOperationHeader0) is string __headerAzureAsyncOperationHeader0 ? __headerAzureAsyncOperationHeader0 : (string)null;
            }
            if (headers.TryGetValues("Retry-After", out var __retryAfterHeader1))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmInternal)this).RetryAfter = System.Linq.Enumerable.FirstOrDefault(__retryAfterHeader1) is string __headerRetryAfterHeader1 ? int.TryParse( __headerRetryAfterHeader1, out int __headerRetryAfterHeader1Value ) ? __headerRetryAfterHeader1Value : default(int?) : default(int?);
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// A Microsoft.AwsConnector resource
    public partial interface ICloudWatchAlarm :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResource
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.",
        SerializedName = @"actionsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyActionsEnabled { get; set; }
        /// <summary>
        /// The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action
        /// as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see
        /// [PutMetricAlarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html) in the *API
        /// Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see [PutMetricAlarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html) in the *API Reference*.",
        SerializedName = @"alarmActions",
        PossibleTypes = new [] { typeof(string) })]
        string[] AwPropertyAlarmAction { get; set; }
        /// <summary>The description of the alarm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the alarm.",
        SerializedName = @"alarmDescription",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyAlarmDescription { get; set; }
        /// <summary>
        /// The name of the alarm. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the alarm
        /// name. If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates
        /// that require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the alarm. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the alarm name.   If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
        SerializedName = @"alarmName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyAlarmName { get; set; }
        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property arn",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyArn { get; set; }
        /// <summary>
        /// The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is
        /// used as the first operand.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.",
        SerializedName = @"comparisonOperator",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyComparisonOperator { get; set; }
        /// <summary>
        /// The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an 'M out of
        /// N' alarm. In that case, this value is the M, and the value that you set for ``EvaluationPeriods`` is the N value. For
        /// more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation)
        /// in the *User Guide*. If you omit this parameter, CW uses the same value here that you set for ``EvaluationPeriods``, and
        /// the alarm goes to alarm state if that many consecutive periods are breaching.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an 'M out of N' alarm. In that case, this value is the M, and the value that you set for ``EvaluationPeriods`` is the N value. For more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in the *User Guide*. If you omit this parameter, CW uses the same value here that you set for ``EvaluationPeriods``, and the alarm goes to alarm state if that many consecutive periods are breaching.",
        SerializedName = @"datapointsToAlarm",
        PossibleTypes = new [] { typeof(int) })]
        int? AwPropertyDatapointsToAlarm { get; set; }
        /// <summary>
        /// The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify ``Dimensions``.
        /// Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify ``Dimensions``. Instead, you use ``Metrics``.",
        SerializedName = @"dimensions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimension) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimension[] AwPropertyDimension { get; set; }
        /// <summary>
        /// Used only for alarms based on percentiles. If ``ignore``, the alarm state does not change during periods with too few
        /// data points to be statistically significant. If ``evaluate`` or this parameter is not used, the alarm is always evaluated
        /// and possibly changes state no matter how many data points are available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used only for alarms based on percentiles. If ``ignore``, the alarm state does not change during periods with too few data points to be statistically significant. If ``evaluate`` or this parameter is not used, the alarm is always evaluated and possibly changes state no matter how many data points are available.",
        SerializedName = @"evaluateLowSampleCountPercentile",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyEvaluateLowSampleCountPercentile { get; set; }
        /// <summary>
        /// The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires
        /// that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are
        /// setting an 'M out of N' alarm, this value is the N, and ``DatapointsToAlarm`` is the M. For more information, see [Evaluating
        /// an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in
        /// the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an 'M out of N' alarm, this value is the N, and ``DatapointsToAlarm`` is the M. For more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in the *User Guide*.",
        SerializedName = @"evaluationPeriods",
        PossibleTypes = new [] { typeof(int) })]
        int? AwPropertyEvaluationPeriod { get; set; }
        /// <summary>
        /// The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100. For an alarm
        /// based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm based on
        /// a math expression, you can't specify ``ExtendedStatistic``. Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100. For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm based on a math expression, you can't specify ``ExtendedStatistic``. Instead, you use ``Metrics``.",
        SerializedName = @"extendedStatistic",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyExtendedStatistic { get; set; }
        /// <summary>
        /// The actions to execute when this alarm transitions to the ``INSUFFICIENT_DATA`` state from any other state. Each action
        /// is specified as an Amazon Resource Name (ARN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The actions to execute when this alarm transitions to the ``INSUFFICIENT_DATA`` state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
        SerializedName = @"insufficientDataActions",
        PossibleTypes = new [] { typeof(string) })]
        string[] AwPropertyInsufficientDataAction { get; set; }
        /// <summary>
        /// An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either
        /// retrieves a metric or performs a math expression. If you specify the ``Metrics`` parameter, you cannot specify ``MetricName``,
        /// ``Dimensions``, ``Period``, ``Namespace``, ``Statistic``, ``ExtendedStatistic``, or ``Unit``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either retrieves a metric or performs a math expression. If you specify the ``Metrics`` parameter, you cannot specify ``MetricName``, ``Dimensions``, ``Period``, ``Namespace``, ``Statistic``, ``ExtendedStatistic``, or ``Unit``.",
        SerializedName = @"metrics",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricDataQuery) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricDataQuery[] AwPropertyMetric { get; set; }
        /// <summary>
        /// The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you use ``Metrics`` instead and you can't specify ``MetricName``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you use ``Metrics`` instead and you can't specify ``MetricName``.",
        SerializedName = @"metricName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyMetricName { get; set; }
        /// <summary>
        /// The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you can't specify ``Namespace`` and you use ``Metrics`` instead. For a list of namespaces for metrics
        /// from AWS services, see [Services That Publish Metrics.](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you can't specify ``Namespace`` and you use ``Metrics`` instead. For a list of namespaces for metrics from AWS services, see [Services That Publish Metrics.](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)",
        SerializedName = @"namespace",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyNamespace { get; set; }
        /// <summary>
        /// The actions to execute when this alarm transitions to the ``OK`` state from any other state. Each action is specified
        /// as an Amazon Resource Name (ARN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The actions to execute when this alarm transitions to the ``OK`` state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
        SerializedName = @"okActions",
        PossibleTypes = new [] { typeof(string) })]
        string[] AwPropertyOkAction { get; set; }
        /// <summary>
        /// The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values
        /// are 10, 30, 60, and any multiple of 60. For an alarm based on a math expression, you can't specify ``Period``, and instead
        /// you use the ``Metrics`` parameter. *Minimum:* 10
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values are 10, 30, 60, and any multiple of 60. For an alarm based on a math expression, you can't specify ``Period``, and instead you use the ``Metrics`` parameter. *Minimum:* 10",
        SerializedName = @"period",
        PossibleTypes = new [] { typeof(int) })]
        int? AwPropertyPeriod { get; set; }
        /// <summary>
        /// The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ``ExtendedStatistic``.
        /// For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm
        /// based on a math expression, you can't specify ``Statistic``. Instead, you use ``Metrics``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ``ExtendedStatistic``. For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm based on a math expression, you can't specify ``Statistic``. Instead, you use ``Metrics``.",
        SerializedName = @"statistic",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyStatistic { get; set; }
        /// <summary>Property tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property tags",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated7) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated7[] AwPropertyTag { get; set; }
        /// <summary>The value to compare with the specified statistic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value to compare with the specified statistic.",
        SerializedName = @"threshold",
        PossibleTypes = new [] { typeof(float) })]
        float? AwPropertyThreshold { get; set; }
        /// <summary>
        /// In an alarm based on an anomaly detection model, this is the ID of the ``ANOMALY_DETECTION_BAND`` function used as the
        /// threshold for the alarm.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In an alarm based on an anomaly detection model, this is the ID of the ``ANOMALY_DETECTION_BAND`` function used as the threshold for the alarm.",
        SerializedName = @"thresholdMetricId",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyThresholdMetricId { get; set; }
        /// <summary>
        /// Sets how this alarm is to handle missing data points. Valid values are ``breaching``, ``notBreaching``, ``ignore``, and
        /// ``missing``. For more information, see [Configuring How Alarms Treat Missing Data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data)
        /// in the *Amazon User Guide*. If you omit this parameter, the default behavior of ``missing`` is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets how this alarm is to handle missing data points. Valid values are ``breaching``, ``notBreaching``, ``ignore``, and ``missing``. For more information, see [Configuring How Alarms Treat Missing Data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data) in the *Amazon User Guide*. If you omit this parameter, the default behavior of ``missing`` is used.",
        SerializedName = @"treatMissingData",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyTreatMissingData { get; set; }
        /// <summary>
        /// The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric.
        /// Do not specify this if you are specifying a ``Metrics`` array. You can specify the following values: Seconds, Microseconds,
        /// Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent,
        /// Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second,
        /// Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric. Do not specify this if you are specifying a ``Metrics`` array.  You can specify the following values: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyUnit { get; set; }
        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AwsAccountId { get; set; }
        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesAwsTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesAwsTags AwsTag { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Azure-AsyncOperation",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAsyncOperation { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudResourceName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Retry-After",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryAfter { get; set; }

    }
    /// A Microsoft.AwsConnector resource
    internal partial interface ICloudWatchAlarmInternal :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        string Arn { get; set; }
        /// <summary>
        /// Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
        /// </summary>
        bool? AwPropertyActionsEnabled { get; set; }
        /// <summary>
        /// The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action
        /// as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see
        /// [PutMetricAlarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html) in the *API
        /// Reference*.
        /// </summary>
        string[] AwPropertyAlarmAction { get; set; }
        /// <summary>The description of the alarm.</summary>
        string AwPropertyAlarmDescription { get; set; }
        /// <summary>
        /// The name of the alarm. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the alarm
        /// name. If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates
        /// that require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        string AwPropertyAlarmName { get; set; }
        /// <summary>Property arn</summary>
        string AwPropertyArn { get; set; }
        /// <summary>
        /// The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is
        /// used as the first operand.
        /// </summary>
        string AwPropertyComparisonOperator { get; set; }
        /// <summary>
        /// The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an 'M out of
        /// N' alarm. In that case, this value is the M, and the value that you set for ``EvaluationPeriods`` is the N value. For
        /// more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation)
        /// in the *User Guide*. If you omit this parameter, CW uses the same value here that you set for ``EvaluationPeriods``, and
        /// the alarm goes to alarm state if that many consecutive periods are breaching.
        /// </summary>
        int? AwPropertyDatapointsToAlarm { get; set; }
        /// <summary>
        /// The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify ``Dimensions``.
        /// Instead, you use ``Metrics``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimension[] AwPropertyDimension { get; set; }
        /// <summary>
        /// Used only for alarms based on percentiles. If ``ignore``, the alarm state does not change during periods with too few
        /// data points to be statistically significant. If ``evaluate`` or this parameter is not used, the alarm is always evaluated
        /// and possibly changes state no matter how many data points are available.
        /// </summary>
        string AwPropertyEvaluateLowSampleCountPercentile { get; set; }
        /// <summary>
        /// The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires
        /// that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are
        /// setting an 'M out of N' alarm, this value is the N, and ``DatapointsToAlarm`` is the M. For more information, see [Evaluating
        /// an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in
        /// the *User Guide*.
        /// </summary>
        int? AwPropertyEvaluationPeriod { get; set; }
        /// <summary>
        /// The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100. For an alarm
        /// based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm based on
        /// a math expression, you can't specify ``ExtendedStatistic``. Instead, you use ``Metrics``.
        /// </summary>
        string AwPropertyExtendedStatistic { get; set; }
        /// <summary>
        /// The actions to execute when this alarm transitions to the ``INSUFFICIENT_DATA`` state from any other state. Each action
        /// is specified as an Amazon Resource Name (ARN).
        /// </summary>
        string[] AwPropertyInsufficientDataAction { get; set; }
        /// <summary>
        /// An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either
        /// retrieves a metric or performs a math expression. If you specify the ``Metrics`` parameter, you cannot specify ``MetricName``,
        /// ``Dimensions``, ``Period``, ``Namespace``, ``Statistic``, ``ExtendedStatistic``, or ``Unit``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricDataQuery[] AwPropertyMetric { get; set; }
        /// <summary>
        /// The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you use ``Metrics`` instead and you can't specify ``MetricName``.
        /// </summary>
        string AwPropertyMetricName { get; set; }
        /// <summary>
        /// The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based
        /// on a math expression, you can't specify ``Namespace`` and you use ``Metrics`` instead. For a list of namespaces for metrics
        /// from AWS services, see [Services That Publish Metrics.](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)
        /// </summary>
        string AwPropertyNamespace { get; set; }
        /// <summary>
        /// The actions to execute when this alarm transitions to the ``OK`` state from any other state. Each action is specified
        /// as an Amazon Resource Name (ARN).
        /// </summary>
        string[] AwPropertyOkAction { get; set; }
        /// <summary>
        /// The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values
        /// are 10, 30, 60, and any multiple of 60. For an alarm based on a math expression, you can't specify ``Period``, and instead
        /// you use the ``Metrics`` parameter. *Minimum:* 10
        /// </summary>
        int? AwPropertyPeriod { get; set; }
        /// <summary>
        /// The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ``ExtendedStatistic``.
        /// For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both. For an alarm
        /// based on a math expression, you can't specify ``Statistic``. Instead, you use ``Metrics``.
        /// </summary>
        string AwPropertyStatistic { get; set; }
        /// <summary>Property tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated7[] AwPropertyTag { get; set; }
        /// <summary>The value to compare with the specified statistic.</summary>
        float? AwPropertyThreshold { get; set; }
        /// <summary>
        /// In an alarm based on an anomaly detection model, this is the ID of the ``ANOMALY_DETECTION_BAND`` function used as the
        /// threshold for the alarm.
        /// </summary>
        string AwPropertyThresholdMetricId { get; set; }
        /// <summary>
        /// Sets how this alarm is to handle missing data points. Valid values are ``breaching``, ``notBreaching``, ``ignore``, and
        /// ``missing``. For more information, see [Configuring How Alarms Treat Missing Data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data)
        /// in the *Amazon User Guide*. If you omit this parameter, the default behavior of ``missing`` is used.
        /// </summary>
        string AwPropertyTreatMissingData { get; set; }
        /// <summary>
        /// The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric.
        /// Do not specify this if you are specifying a ``Metrics`` array. You can specify the following values: Seconds, Microseconds,
        /// Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent,
        /// Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second,
        /// Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
        /// </summary>
        string AwPropertyUnit { get; set; }
        /// <summary>AWS Account ID</summary>
        string AwsAccountId { get; set; }
        /// <summary>AWS Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudWatchAlarmProperties AwsProperty { get; set; }
        /// <summary>AWS Region</summary>
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmPropertiesAwsTags AwsTag { get; set; }

        string AzureAsyncOperation { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchAlarmProperties Property { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        string PublicCloudResourceName { get; set; }

        int? RetryAfter { get; set; }

    }
}