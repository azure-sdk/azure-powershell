// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsLambdaFunction</summary>
    public partial class AwsLambdaFunctionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Architecture" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures[] _architecture;

        /// <summary>
        /// The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64
        /// or x86_64). The default value is ``x86_64``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures[] Architecture { get => this._architecture; set => this._architecture = value; }

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Backing field for <see cref="Code" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICode _code;

        /// <summary>
        /// The code for the function. The [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html)
        /// for a Lambda function. To deploy a function defined as a container image, you specify the location of a container image
        /// in the Amazon ECR registry. For a .zip file deployment package, you can specify the location of an object in Amazon S3.
        /// For Node.js and Python functions, you can specify the function code inline in the template. Changes to a deployment package
        /// in Amazon S3 or a container image in ECR are not detected automatically during stack updates. To update the function code,
        /// change the object key or version in the template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICode Code { get => (this._code = this._code ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Code()); set => this._code = value; }

        /// <summary>
        /// URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html) in the Amazon ECR registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CodeImageUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICodeInternal)Code).ImageUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICodeInternal)Code).ImageUri = value ?? null; }

        /// <summary>
        /// An Amazon S3 bucket in the same AWS-Region as your function. The bucket can be in a different AWS-account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CodeS3Bucket { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICodeInternal)Code).S3Bucket; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICodeInternal)Code).S3Bucket = value ?? null; }

        /// <summary>The Amazon S3 key of the deployment package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CodeS3Key { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICodeInternal)Code).S3Key; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICodeInternal)Code).S3Key = value ?? null; }

        /// <summary>For versioned objects, the version of the deployment package object to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CodeS3ObjectVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICodeInternal)Code).S3ObjectVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICodeInternal)Code).S3ObjectVersion = value ?? null; }

        /// <summary>Backing field for <see cref="CodeSigningConfigArn" /> property.</summary>
        private string _codeSigningConfigArn;

        /// <summary>
        /// To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration
        /// includes a set of signing profiles, which define the trusted publishers for this function.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string CodeSigningConfigArn { get => this._codeSigningConfigArn; set => this._codeSigningConfigArn = value; }

        /// <summary>
        /// (Node.js and Python) The source code of your Lambda function. If you include your function source inline with this parameter,
        /// CFN places it in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).
        /// This zip file cannot exceed 4MB. For the ``Handler`` property, the first part of the handler identifier must be ``index``.
        /// For example, ``index.handler``. For JSON, you must escape quotes and special characters such as newline (``\n``) with
        /// a backslash. If you specify a function that interacts with an AWS CloudFormation custom resource, you don't have to write
        /// your own functions to send responses to the custom resource that invoked the function. AWS CloudFormation provides a response
        /// module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))
        /// that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)
        /// for details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CodeZipFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICodeInternal)Code).ZipFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICodeInternal)Code).ZipFile = value ?? null; }

        /// <summary>Backing field for <see cref="DeadLetterConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeadLetterConfig _deadLetterConfig;

        /// <summary>
        /// A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail
        /// processing. For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq).
        /// The [dead-letter queue](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq) for failed asynchronous
        /// invocations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeadLetterConfig DeadLetterConfig { get => (this._deadLetterConfig = this._deadLetterConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeadLetterConfig()); set => this._deadLetterConfig = value; }

        /// <summary>The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string DeadLetterConfigTargetArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeadLetterConfigInternal)DeadLetterConfig).TargetArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeadLetterConfigInternal)DeadLetterConfig).TargetArn = value ?? null; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>A description of the function.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="Environment" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironment _environment;

        /// <summary>
        /// Environment variables that are accessible from function code during execution. A function's environment variable settings.
        /// You can use environment variables to adjust your function's behavior without updating code. An environment variable is
        /// a pair of strings that are stored in a function's version-specific configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironment Environment { get => (this._environment = this._environment ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Environment()); set => this._environment = value; }

        /// <summary>
        /// Environment variable key-value pairs. For more information, see [Using Lambda environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariables EnvironmentVariable { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentInternal)Environment).Variable; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentInternal)Environment).Variable = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="EphemeralStorage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorageAutoGenerated _ephemeralStorage;

        /// <summary>
        /// The size of the function's ``/tmp`` directory in MB. The default value is 512, but it can be any whole number between
        /// 512 and 10,240 MB. The size of the function's ``/tmp`` directory in MB. The default value is 512, but it can be any whole
        /// number between 512 and 10,240 MB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorageAutoGenerated EphemeralStorage { get => (this._ephemeralStorage = this._ephemeralStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EphemeralStorageAutoGenerated()); set => this._ephemeralStorage = value; }

        /// <summary>The size of the function's ``/tmp`` directory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? EphemeralStorageSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorageAutoGeneratedInternal)EphemeralStorage).Size; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorageAutoGeneratedInternal)EphemeralStorage).Size = value ?? default(int); }

        /// <summary>Backing field for <see cref="FileSystemConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFileSystemConfig[] _fileSystemConfig;

        /// <summary>
        /// Connection settings for an Amazon EFS file system. To connect a function to a file system, a mount target must be available
        /// in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html)
        /// resource, you must also specify a ``DependsOn`` attribute to ensure that the mount target is created or updated before
        /// the function. For more information about using the ``DependsOn`` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFileSystemConfig[] FileSystemConfig { get => this._fileSystemConfig; set => this._fileSystemConfig = value; }

        /// <summary>Backing field for <see cref="FunctionName" /> property.</summary>
        private string _functionName;

        /// <summary>
        /// The name of the Lambda function, up to 64 characters in length. If you don't specify a name, CFN generates one. If you
        /// specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require
        /// no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string FunctionName { get => this._functionName; set => this._functionName = value; }

        /// <summary>Backing field for <see cref="Handler" /> property.</summary>
        private string _handler;

        /// <summary>
        /// The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment
        /// package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers,
        /// depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Handler { get => this._handler; set => this._handler = value; }

        /// <summary>Backing field for <see cref="ImageConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfig _imageConfig;

        /// <summary>
        /// Configuration values that override the container image Dockerfile settings. For more information, see [Container image
        /// settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms). Configuration values that override
        /// the container image Dockerfile settings. For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfig ImageConfig { get => (this._imageConfig = this._imageConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageConfig()); set => this._imageConfig = value; }

        /// <summary>
        /// Specifies parameters that you want to pass in with ENTRYPOINT. You can specify a maximum of 1,500 parameters in the list.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] ImageConfigCommand { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfigInternal)ImageConfig).Command; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfigInternal)ImageConfig).Command = value ?? null /* arrayOf */; }

        /// <summary>
        /// Specifies the entry point to their application, which is typically the location of the runtime executable. You can specify
        /// a maximum of 1,500 string entries in the list.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] ImageConfigEntryPoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfigInternal)ImageConfig).EntryPoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfigInternal)ImageConfig).EntryPoint = value ?? null /* arrayOf */; }

        /// <summary>
        /// Specifies the working directory. The length of the directory string cannot exceed 1,000 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ImageConfigWorkingDirectory { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfigInternal)ImageConfig).WorkingDirectory; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfigInternal)ImageConfig).WorkingDirectory = value ?? null; }

        /// <summary>Backing field for <see cref="KmsKeyArn" /> property.</summary>
        private string _kmsKeyArn;

        /// <summary>
        /// The ARN of the KMSlong (KMS) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption).
        /// When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, Lambda also
        /// uses this key is to encrypt your function's snapshot. If you deploy your function using a container image, Lambda also
        /// uses this key to encrypt your function when it's deployed. Note that this is not the same key that's used to protect your
        /// container image in the Amazon Elastic Container Registry (Amazon ECR). If you don't provide a customer managed key, Lambda
        /// uses a default service key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string KmsKeyArn { get => this._kmsKeyArn; set => this._kmsKeyArn = value; }

        /// <summary>Backing field for <see cref="Layer" /> property.</summary>
        private string[] _layer;

        /// <summary>
        /// A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's
        /// execution environment. Specify each layer by its ARN, including the version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Layer { get => this._layer; set => this._layer = value; }

        /// <summary>Backing field for <see cref="LoggingConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfig _loggingConfig;

        /// <summary>
        /// The function's Amazon CloudWatch Logs configuration settings. The function's Amazon CloudWatch Logs configuration settings.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfig LoggingConfig { get => (this._loggingConfig = this._loggingConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingConfig()); set => this._loggingConfig = value; }

        /// <summary>
        /// Set this property to filter the application logs for your function that Lambda sends to CloudWatch. Lambda only sends
        /// application logs at the selected level of detail and lower, where ``TRACE`` is the highest level and ``FATAL`` is the
        /// lowest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel? LoggingConfigApplicationLogLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigInternal)LoggingConfig).ApplicationLogLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigInternal)LoggingConfig).ApplicationLogLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel)""); }

        /// <summary>
        /// The format in which Lambda sends your function's application and system logs to CloudWatch. Select between plain text
        /// and structured JSON.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat? LoggingConfigLogFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigInternal)LoggingConfig).LogFormat; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigInternal)LoggingConfig).LogFormat = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat)""); }

        /// <summary>
        /// The name of the Amazon CloudWatch log group the function sends logs to. By default, Lambda functions send logs to a default
        /// log group named ``/aws/lambda/<function name>``. To use a different log group, enter an existing log group or enter a
        /// new log group name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LoggingConfigLogGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigInternal)LoggingConfig).LogGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigInternal)LoggingConfig).LogGroup = value ?? null; }

        /// <summary>
        /// Set this property to filter the system logs for your function that Lambda sends to CloudWatch. Lambda only sends system
        /// logs at the selected level of detail and lower, where ``DEBUG`` is the highest level and ``WARN`` is the lowest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel? LoggingConfigSystemLogLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigInternal)LoggingConfig).SystemLogLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfigInternal)LoggingConfig).SystemLogLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel)""); }

        /// <summary>Backing field for <see cref="MemorySize" /> property.</summary>
        private int? _memorySize;

        /// <summary>
        /// The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console)
        /// at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can
        /// be any multiple of 1 MB. Note that new AWS accounts have reduced concurrency and memory quotas. AWS raises these quotas
        /// automatically based on your usage. You can also request a quota increase.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? MemorySize { get => this._memorySize; set => this._memorySize = value; }

        /// <summary>Internal Acessors for Code</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICode Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal.Code { get => (this._code = this._code ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Code()); set { {_code = value;} } }

        /// <summary>Internal Acessors for DeadLetterConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeadLetterConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal.DeadLetterConfig { get => (this._deadLetterConfig = this._deadLetterConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeadLetterConfig()); set { {_deadLetterConfig = value;} } }

        /// <summary>Internal Acessors for Environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironment Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal.Environment { get => (this._environment = this._environment ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Environment()); set { {_environment = value;} } }

        /// <summary>Internal Acessors for EphemeralStorage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorageAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal.EphemeralStorage { get => (this._ephemeralStorage = this._ephemeralStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EphemeralStorageAutoGenerated()); set { {_ephemeralStorage = value;} } }

        /// <summary>Internal Acessors for ImageConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal.ImageConfig { get => (this._imageConfig = this._imageConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageConfig()); set { {_imageConfig = value;} } }

        /// <summary>Internal Acessors for LoggingConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal.LoggingConfig { get => (this._loggingConfig = this._loggingConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingConfig()); set { {_loggingConfig = value;} } }

        /// <summary>Internal Acessors for RuntimeManagementConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal.RuntimeManagementConfig { get => (this._runtimeManagementConfig = this._runtimeManagementConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RuntimeManagementConfig()); set { {_runtimeManagementConfig = value;} } }

        /// <summary>Internal Acessors for SnapStart</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStart Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal.SnapStart { get => (this._snapStart = this._snapStart ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapStart()); set { {_snapStart = value;} } }

        /// <summary>Internal Acessors for SnapStartResponse</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal.SnapStartResponse { get => (this._snapStartResponse = this._snapStartResponse ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapStartResponse()); set { {_snapStartResponse = value;} } }

        /// <summary>Internal Acessors for TracingConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITracingConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal.TracingConfig { get => (this._tracingConfig = this._tracingConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TracingConfig()); set { {_tracingConfig = value;} } }

        /// <summary>Internal Acessors for VpcConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal.VpcConfig { get => (this._vpcConfig = this._vpcConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcConfigAutoGenerated()); set { {_vpcConfig = value;} } }

        /// <summary>Backing field for <see cref="PackageType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PackageType? _packageType;

        /// <summary>
        /// The type of deployment package. Set to ``Image`` for container image and set ``Zip`` for .zip file archive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PackageType? PackageType { get => this._packageType; set => this._packageType = value; }

        /// <summary>Backing field for <see cref="ReservedConcurrentExecution" /> property.</summary>
        private int? _reservedConcurrentExecution;

        /// <summary>The number of simultaneous executions to reserve for the function.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? ReservedConcurrentExecution { get => this._reservedConcurrentExecution; set => this._reservedConcurrentExecution = value; }

        /// <summary>Backing field for <see cref="Role" /> property.</summary>
        private string _role;

        /// <summary>The Amazon Resource Name (ARN) of the function's execution role.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Role { get => this._role; set => this._role = value; }

        /// <summary>Backing field for <see cref="Runtime" /> property.</summary>
        private string _runtime;

        /// <summary>
        /// The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html). Runtime
        /// is required if the deployment package is a .zip file archive. The following list includes deprecated runtimes. For more
        /// information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Runtime { get => this._runtime; set => this._runtime = value; }

        /// <summary>Backing field for <see cref="RuntimeManagementConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfig _runtimeManagementConfig;

        /// <summary>
        /// Sets the runtime management configuration for a function's version. For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html).
        /// Sets the runtime management configuration for a function's version. For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfig RuntimeManagementConfig { get => (this._runtimeManagementConfig = this._runtimeManagementConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RuntimeManagementConfig()); set => this._runtimeManagementConfig = value; }

        /// <summary>
        /// The ARN of the runtime version you want the function to use. This is only required if you're using the *Manual* runtime
        /// update mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RuntimeManagementConfigRuntimeVersionArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfigInternal)RuntimeManagementConfig).RuntimeVersionArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfigInternal)RuntimeManagementConfig).RuntimeVersionArn = value ?? null; }

        /// <summary>
        /// Specify the runtime update mode. + *Auto (default)* - Automatically update to the most recent and secure runtime version
        /// using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase).
        /// This is the best choice for most customers to ensure they always benefit from runtime updates. + *FunctionUpdate* - LAM
        /// updates the runtime of you function to the most recent and secure runtime version when you update your function. This
        /// approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied
        /// and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need
        /// to regularly update your functions to keep their runtime up-to-date. + *Manual* - You specify a runtime version in your
        /// function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime
        /// version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version.
        /// For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).
        /// *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn? RuntimeManagementConfigUpdateRuntimeOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfigInternal)RuntimeManagementConfig).UpdateRuntimeOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfigInternal)RuntimeManagementConfig).UpdateRuntimeOn = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn)""); }

        /// <summary>Backing field for <see cref="SnapStart" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStart _snapStart;

        /// <summary>
        /// The function's [SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting. The function's [SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html)
        /// setting.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStart SnapStart { get => (this._snapStart = this._snapStart ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapStart()); set => this._snapStart = value; }

        /// <summary>
        /// Set ``ApplyOn`` to ``PublishedVersions`` to create a snapshot of the initialized execution environment when you publish
        /// a function version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartApplyOn? SnapStartApplyOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartInternal)SnapStart).ApplyOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartInternal)SnapStart).ApplyOn = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartApplyOn)""); }

        /// <summary>Backing field for <see cref="SnapStartResponse" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponse _snapStartResponse;

        /// <summary>
        /// The function's [SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponse SnapStartResponse { get => (this._snapStartResponse = this._snapStartResponse ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapStartResponse()); set => this._snapStartResponse = value; }

        /// <summary>
        /// When set to ``PublishedVersions``, Lambda creates a snapshot of the execution environment when you publish a function
        /// version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn? SnapStartResponseApplyOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponseInternal)SnapStartResponse).ApplyOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponseInternal)SnapStartResponse).ApplyOn = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn)""); }

        /// <summary>
        /// When you provide a [qualified Amazon Resource Name (ARN)](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html#versioning-versions-using),
        /// this response element indicates whether SnapStart is activated for the specified function version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus? SnapStartResponseOptimizationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponseInternal)SnapStartResponse).OptimizationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponseInternal)SnapStartResponse).OptimizationStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated37[] _tag;

        /// <summary>
        /// A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated37[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="Timeout" /> property.</summary>
        private int? _timeout;

        /// <summary>
        /// The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The
        /// maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? Timeout { get => this._timeout; set => this._timeout = value; }

        /// <summary>Backing field for <see cref="TracingConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITracingConfig _tracingConfig;

        /// <summary>
        /// Set ``Mode`` to ``Active`` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html).
        /// The function's [](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) tracing configuration. To sample and
        /// record incoming requests, set ``Mode`` to ``Active``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITracingConfig TracingConfig { get => (this._tracingConfig = this._tracingConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TracingConfig()); set => this._tracingConfig = value; }

        /// <summary>The tracing mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TracingConfigMode? TracingConfigMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITracingConfigInternal)TracingConfig).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITracingConfigInternal)TracingConfig).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TracingConfigMode)""); }

        /// <summary>Backing field for <see cref="VpcConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGenerated _vpcConfig;

        /// <summary>
        /// For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC. When you
        /// connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see
        /// [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).
        /// The VPC security groups and subnets that are attached to a Lambda function. When you connect a function to a VPC, Lambda
        /// creates an elastic network interface for each combination of security group and subnet in the function's VPC configuration.
        /// The function can only access resources and the internet through that VPC. For more information, see [VPC Settings](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).
        /// When you delete a function, CFN monitors the state of its network interfaces and waits for Lambda to delete them before
        /// proceeding. If the VPC is defined in the same stack, the network interfaces need to be deleted by Lambda before CFN can
        /// delete the VPC's resources. To monitor network interfaces, CFN needs the ``ec2:DescribeNetworkInterfaces`` permission.
        /// It obtains this from the user or role that modifies the stack. If you don't provide this permission, CFN does not wait
        /// for network interfaces to be deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGenerated VpcConfig { get => (this._vpcConfig = this._vpcConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcConfigAutoGenerated()); set => this._vpcConfig = value; }

        /// <summary>
        /// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? VpcConfigIpv6AllowedForDualStack { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGeneratedInternal)VpcConfig).Ipv6AllowedForDualStack; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGeneratedInternal)VpcConfig).Ipv6AllowedForDualStack = value ?? default(bool); }

        /// <summary>A list of VPC security group IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] VpcConfigSecurityGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGeneratedInternal)VpcConfig).SecurityGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGeneratedInternal)VpcConfig).SecurityGroupId = value ?? null /* arrayOf */; }

        /// <summary>A list of VPC subnet IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] VpcConfigSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGeneratedInternal)VpcConfig).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGeneratedInternal)VpcConfig).SubnetId = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="AwsLambdaFunctionProperties" /> instance.</summary>
        public AwsLambdaFunctionProperties()
        {

        }
    }
    /// Definition of awsLambdaFunction
    public partial interface IAwsLambdaFunctionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64
        /// or x86_64). The default value is ``x86_64``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is ``x86_64``.",
        SerializedName = @"architectures",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures[] Architecture { get; set; }
        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property arn",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html) in the Amazon ECR registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html) in the Amazon ECR registry.",
        SerializedName = @"imageUri",
        PossibleTypes = new [] { typeof(string) })]
        string CodeImageUri { get; set; }
        /// <summary>
        /// An Amazon S3 bucket in the same AWS-Region as your function. The bucket can be in a different AWS-account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An Amazon S3 bucket in the same AWS-Region as your function. The bucket can be in a different AWS-account.",
        SerializedName = @"s3Bucket",
        PossibleTypes = new [] { typeof(string) })]
        string CodeS3Bucket { get; set; }
        /// <summary>The Amazon S3 key of the deployment package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon S3 key of the deployment package.",
        SerializedName = @"s3Key",
        PossibleTypes = new [] { typeof(string) })]
        string CodeS3Key { get; set; }
        /// <summary>For versioned objects, the version of the deployment package object to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For versioned objects, the version of the deployment package object to use.",
        SerializedName = @"s3ObjectVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CodeS3ObjectVersion { get; set; }
        /// <summary>
        /// To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration
        /// includes a set of signing profiles, which define the trusted publishers for this function.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.",
        SerializedName = @"codeSigningConfigArn",
        PossibleTypes = new [] { typeof(string) })]
        string CodeSigningConfigArn { get; set; }
        /// <summary>
        /// (Node.js and Python) The source code of your Lambda function. If you include your function source inline with this parameter,
        /// CFN places it in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).
        /// This zip file cannot exceed 4MB. For the ``Handler`` property, the first part of the handler identifier must be ``index``.
        /// For example, ``index.handler``. For JSON, you must escape quotes and special characters such as newline (``\n``) with
        /// a backslash. If you specify a function that interacts with an AWS CloudFormation custom resource, you don't have to write
        /// your own functions to send responses to the custom resource that invoked the function. AWS CloudFormation provides a response
        /// module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))
        /// that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)
        /// for details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"(Node.js and Python) The source code of your Lambda function. If you include your function source inline with this parameter, CFN places it in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html). This zip file cannot exceed 4MB. For the ``Handler`` property, the first part of the handler identifier must be ``index``. For example, ``index.handler``.  For JSON, you must escape quotes and special characters such as newline (``\n``) with a backslash. If you specify a function that interacts with an AWS CloudFormation custom resource, you don't have to write your own functions to send responses to the custom resource that invoked the function. AWS CloudFormation provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html)) that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html) for details.",
        SerializedName = @"zipFile",
        PossibleTypes = new [] { typeof(string) })]
        string CodeZipFile { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.",
        SerializedName = @"targetArn",
        PossibleTypes = new [] { typeof(string) })]
        string DeadLetterConfigTargetArn { get; set; }
        /// <summary>A description of the function.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A description of the function.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// Environment variable key-value pairs. For more information, see [Using Lambda environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Environment variable key-value pairs. For more information, see [Using Lambda environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html).",
        SerializedName = @"variables",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariables) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariables EnvironmentVariable { get; set; }
        /// <summary>The size of the function's ``/tmp`` directory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size of the function's ``/tmp`` directory.",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(int) })]
        int? EphemeralStorageSize { get; set; }
        /// <summary>
        /// Connection settings for an Amazon EFS file system. To connect a function to a file system, a mount target must be available
        /// in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html)
        /// resource, you must also specify a ``DependsOn`` attribute to ensure that the mount target is created or updated before
        /// the function. For more information about using the ``DependsOn`` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Connection settings for an Amazon EFS file system. To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html) resource, you must also specify a ``DependsOn`` attribute to ensure that the mount target is created or updated before the function. For more information about using the ``DependsOn`` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html).",
        SerializedName = @"fileSystemConfigs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFileSystemConfig) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFileSystemConfig[] FileSystemConfig { get; set; }
        /// <summary>
        /// The name of the Lambda function, up to 64 characters in length. If you don't specify a name, CFN generates one. If you
        /// specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require
        /// no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the Lambda function, up to 64 characters in length. If you don't specify a name, CFN generates one. If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
        SerializedName = @"functionName",
        PossibleTypes = new [] { typeof(string) })]
        string FunctionName { get; set; }
        /// <summary>
        /// The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment
        /// package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers,
        /// depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html).",
        SerializedName = @"handler",
        PossibleTypes = new [] { typeof(string) })]
        string Handler { get; set; }
        /// <summary>
        /// Specifies parameters that you want to pass in with ENTRYPOINT. You can specify a maximum of 1,500 parameters in the list.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies parameters that you want to pass in with ENTRYPOINT. You can specify a maximum of 1,500 parameters in the list.",
        SerializedName = @"command",
        PossibleTypes = new [] { typeof(string) })]
        string[] ImageConfigCommand { get; set; }
        /// <summary>
        /// Specifies the entry point to their application, which is typically the location of the runtime executable. You can specify
        /// a maximum of 1,500 string entries in the list.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the entry point to their application, which is typically the location of the runtime executable. You can specify a maximum of 1,500 string entries in the list.",
        SerializedName = @"entryPoint",
        PossibleTypes = new [] { typeof(string) })]
        string[] ImageConfigEntryPoint { get; set; }
        /// <summary>
        /// Specifies the working directory. The length of the directory string cannot exceed 1,000 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the working directory. The length of the directory string cannot exceed 1,000 characters.",
        SerializedName = @"workingDirectory",
        PossibleTypes = new [] { typeof(string) })]
        string ImageConfigWorkingDirectory { get; set; }
        /// <summary>
        /// The ARN of the KMSlong (KMS) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption).
        /// When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, Lambda also
        /// uses this key is to encrypt your function's snapshot. If you deploy your function using a container image, Lambda also
        /// uses this key to encrypt your function when it's deployed. Note that this is not the same key that's used to protect your
        /// container image in the Amazon Elastic Container Registry (Amazon ECR). If you don't provide a customer managed key, Lambda
        /// uses a default service key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of the KMSlong (KMS) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption). When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, Lambda also uses this key is to encrypt your function's snapshot. If you deploy your function using a container image, Lambda also uses this key to encrypt your function when it's deployed. Note that this is not the same key that's used to protect your container image in the Amazon Elastic Container Registry (Amazon ECR). If you don't provide a customer managed key, Lambda uses a default service key.",
        SerializedName = @"kmsKeyArn",
        PossibleTypes = new [] { typeof(string) })]
        string KmsKeyArn { get; set; }
        /// <summary>
        /// A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's
        /// execution environment. Specify each layer by its ARN, including the version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.",
        SerializedName = @"layers",
        PossibleTypes = new [] { typeof(string) })]
        string[] Layer { get; set; }
        /// <summary>
        /// Set this property to filter the application logs for your function that Lambda sends to CloudWatch. Lambda only sends
        /// application logs at the selected level of detail and lower, where ``TRACE`` is the highest level and ``FATAL`` is the
        /// lowest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set this property to filter the application logs for your function that Lambda sends to CloudWatch. Lambda only sends application logs at the selected level of detail and lower, where ``TRACE`` is the highest level and ``FATAL`` is the lowest.",
        SerializedName = @"applicationLogLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel? LoggingConfigApplicationLogLevel { get; set; }
        /// <summary>
        /// The format in which Lambda sends your function's application and system logs to CloudWatch. Select between plain text
        /// and structured JSON.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The format in which Lambda sends your function's application and system logs to CloudWatch. Select between plain text and structured JSON.",
        SerializedName = @"logFormat",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat? LoggingConfigLogFormat { get; set; }
        /// <summary>
        /// The name of the Amazon CloudWatch log group the function sends logs to. By default, Lambda functions send logs to a default
        /// log group named ``/aws/lambda/<function name>``. To use a different log group, enter an existing log group or enter a
        /// new log group name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the Amazon CloudWatch log group the function sends logs to. By default, Lambda functions send logs to a default log group named ``/aws/lambda/<function name>``. To use a different log group, enter an existing log group or enter a new log group name.",
        SerializedName = @"logGroup",
        PossibleTypes = new [] { typeof(string) })]
        string LoggingConfigLogGroup { get; set; }
        /// <summary>
        /// Set this property to filter the system logs for your function that Lambda sends to CloudWatch. Lambda only sends system
        /// logs at the selected level of detail and lower, where ``DEBUG`` is the highest level and ``WARN`` is the lowest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set this property to filter the system logs for your function that Lambda sends to CloudWatch. Lambda only sends system logs at the selected level of detail and lower, where ``DEBUG`` is the highest level and ``WARN`` is the lowest.",
        SerializedName = @"systemLogLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel? LoggingConfigSystemLogLevel { get; set; }
        /// <summary>
        /// The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console)
        /// at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can
        /// be any multiple of 1 MB. Note that new AWS accounts have reduced concurrency and memory quotas. AWS raises these quotas
        /// automatically based on your usage. You can also request a quota increase.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB. Note that new AWS accounts have reduced concurrency and memory quotas. AWS raises these quotas automatically based on your usage. You can also request a quota increase.",
        SerializedName = @"memorySize",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySize { get; set; }
        /// <summary>
        /// The type of deployment package. Set to ``Image`` for container image and set ``Zip`` for .zip file archive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of deployment package. Set to ``Image`` for container image and set ``Zip`` for .zip file archive.",
        SerializedName = @"packageType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PackageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PackageType? PackageType { get; set; }
        /// <summary>The number of simultaneous executions to reserve for the function.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of simultaneous executions to reserve for the function.",
        SerializedName = @"reservedConcurrentExecutions",
        PossibleTypes = new [] { typeof(int) })]
        int? ReservedConcurrentExecution { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of the function's execution role.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the function's execution role.",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(string) })]
        string Role { get; set; }
        /// <summary>
        /// The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html). Runtime
        /// is required if the deployment package is a .zip file archive. The following list includes deprecated runtimes. For more
        /// information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html). Runtime is required if the deployment package is a .zip file archive. The following list includes deprecated runtimes. For more information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy).",
        SerializedName = @"runtime",
        PossibleTypes = new [] { typeof(string) })]
        string Runtime { get; set; }
        /// <summary>
        /// The ARN of the runtime version you want the function to use. This is only required if you're using the *Manual* runtime
        /// update mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of the runtime version you want the function to use.  This is only required if you're using the *Manual* runtime update mode.",
        SerializedName = @"runtimeVersionArn",
        PossibleTypes = new [] { typeof(string) })]
        string RuntimeManagementConfigRuntimeVersionArn { get; set; }
        /// <summary>
        /// Specify the runtime update mode. + *Auto (default)* - Automatically update to the most recent and secure runtime version
        /// using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase).
        /// This is the best choice for most customers to ensure they always benefit from runtime updates. + *FunctionUpdate* - LAM
        /// updates the runtime of you function to the most recent and secure runtime version when you update your function. This
        /// approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied
        /// and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need
        /// to regularly update your functions to keep their runtime up-to-date. + *Manual* - You specify a runtime version in your
        /// function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime
        /// version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version.
        /// For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).
        /// *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the runtime update mode.  +   *Auto (default)* - Automatically update to the most recent and secure runtime version using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase). This is the best choice for most customers to ensure they always benefit from runtime updates.  +   *FunctionUpdate* - LAM updates the runtime of you function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.  +   *Manual* - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).    *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``",
        SerializedName = @"updateRuntimeOn",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn? RuntimeManagementConfigUpdateRuntimeOn { get; set; }
        /// <summary>
        /// Set ``ApplyOn`` to ``PublishedVersions`` to create a snapshot of the initialized execution environment when you publish
        /// a function version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set ``ApplyOn`` to ``PublishedVersions`` to create a snapshot of the initialized execution environment when you publish a function version.",
        SerializedName = @"applyOn",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartApplyOn) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartApplyOn? SnapStartApplyOn { get; set; }
        /// <summary>
        /// When set to ``PublishedVersions``, Lambda creates a snapshot of the execution environment when you publish a function
        /// version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When set to ``PublishedVersions``, Lambda creates a snapshot of the execution environment when you publish a function version.",
        SerializedName = @"applyOn",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn? SnapStartResponseApplyOn { get; set; }
        /// <summary>
        /// When you provide a [qualified Amazon Resource Name (ARN)](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html#versioning-versions-using),
        /// this response element indicates whether SnapStart is activated for the specified function version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When you provide a [qualified Amazon Resource Name (ARN)](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html#versioning-versions-using), this response element indicates whether SnapStart is activated for the specified function version.",
        SerializedName = @"optimizationStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus? SnapStartResponseOptimizationStatus { get; set; }
        /// <summary>
        /// A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated37) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated37[] Tag { get; set; }
        /// <summary>
        /// The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The
        /// maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html).",
        SerializedName = @"timeout",
        PossibleTypes = new [] { typeof(int) })]
        int? Timeout { get; set; }
        /// <summary>The tracing mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tracing mode.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TracingConfigMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TracingConfigMode? TracingConfigMode { get; set; }
        /// <summary>
        /// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.",
        SerializedName = @"ipv6AllowedForDualStack",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VpcConfigIpv6AllowedForDualStack { get; set; }
        /// <summary>A list of VPC security group IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of VPC security group IDs.",
        SerializedName = @"securityGroupIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] VpcConfigSecurityGroupId { get; set; }
        /// <summary>A list of VPC subnet IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of VPC subnet IDs.",
        SerializedName = @"subnetIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] VpcConfigSubnetId { get; set; }

    }
    /// Definition of awsLambdaFunction
    internal partial interface IAwsLambdaFunctionPropertiesInternal

    {
        /// <summary>
        /// The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64
        /// or x86_64). The default value is ``x86_64``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures[] Architecture { get; set; }
        /// <summary>Property arn</summary>
        string Arn { get; set; }
        /// <summary>
        /// The code for the function. The [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html)
        /// for a Lambda function. To deploy a function defined as a container image, you specify the location of a container image
        /// in the Amazon ECR registry. For a .zip file deployment package, you can specify the location of an object in Amazon S3.
        /// For Node.js and Python functions, you can specify the function code inline in the template. Changes to a deployment package
        /// in Amazon S3 or a container image in ECR are not detected automatically during stack updates. To update the function code,
        /// change the object key or version in the template.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICode Code { get; set; }
        /// <summary>
        /// URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html) in the Amazon ECR registry.
        /// </summary>
        string CodeImageUri { get; set; }
        /// <summary>
        /// An Amazon S3 bucket in the same AWS-Region as your function. The bucket can be in a different AWS-account.
        /// </summary>
        string CodeS3Bucket { get; set; }
        /// <summary>The Amazon S3 key of the deployment package.</summary>
        string CodeS3Key { get; set; }
        /// <summary>For versioned objects, the version of the deployment package object to use.</summary>
        string CodeS3ObjectVersion { get; set; }
        /// <summary>
        /// To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration
        /// includes a set of signing profiles, which define the trusted publishers for this function.
        /// </summary>
        string CodeSigningConfigArn { get; set; }
        /// <summary>
        /// (Node.js and Python) The source code of your Lambda function. If you include your function source inline with this parameter,
        /// CFN places it in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).
        /// This zip file cannot exceed 4MB. For the ``Handler`` property, the first part of the handler identifier must be ``index``.
        /// For example, ``index.handler``. For JSON, you must escape quotes and special characters such as newline (``\n``) with
        /// a backslash. If you specify a function that interacts with an AWS CloudFormation custom resource, you don't have to write
        /// your own functions to send responses to the custom resource that invoked the function. AWS CloudFormation provides a response
        /// module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))
        /// that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)
        /// for details.
        /// </summary>
        string CodeZipFile { get; set; }
        /// <summary>
        /// A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail
        /// processing. For more information, see [Dead-letter queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq).
        /// The [dead-letter queue](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq) for failed asynchronous
        /// invocations.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeadLetterConfig DeadLetterConfig { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.</summary>
        string DeadLetterConfigTargetArn { get; set; }
        /// <summary>A description of the function.</summary>
        string Description { get; set; }
        /// <summary>
        /// Environment variables that are accessible from function code during execution. A function's environment variable settings.
        /// You can use environment variables to adjust your function's behavior without updating code. An environment variable is
        /// a pair of strings that are stored in a function's version-specific configuration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironment Environment { get; set; }
        /// <summary>
        /// Environment variable key-value pairs. For more information, see [Using Lambda environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariables EnvironmentVariable { get; set; }
        /// <summary>
        /// The size of the function's ``/tmp`` directory in MB. The default value is 512, but it can be any whole number between
        /// 512 and 10,240 MB. The size of the function's ``/tmp`` directory in MB. The default value is 512, but it can be any whole
        /// number between 512 and 10,240 MB.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorageAutoGenerated EphemeralStorage { get; set; }
        /// <summary>The size of the function's ``/tmp`` directory.</summary>
        int? EphemeralStorageSize { get; set; }
        /// <summary>
        /// Connection settings for an Amazon EFS file system. To connect a function to a file system, a mount target must be available
        /// in every Availability Zone that your function connects to. If your template contains an [AWS::EFS::MountTarget](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html)
        /// resource, you must also specify a ``DependsOn`` attribute to ensure that the mount target is created or updated before
        /// the function. For more information about using the ``DependsOn`` attribute, see [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFileSystemConfig[] FileSystemConfig { get; set; }
        /// <summary>
        /// The name of the Lambda function, up to 64 characters in length. If you don't specify a name, CFN generates one. If you
        /// specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require
        /// no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        string FunctionName { get; set; }
        /// <summary>
        /// The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment
        /// package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers,
        /// depending on the runtime. For more information, see [Lambda programming model](https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html).
        /// </summary>
        string Handler { get; set; }
        /// <summary>
        /// Configuration values that override the container image Dockerfile settings. For more information, see [Container image
        /// settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms). Configuration values that override
        /// the container image Dockerfile settings. For more information, see [Container image settings](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfig ImageConfig { get; set; }
        /// <summary>
        /// Specifies parameters that you want to pass in with ENTRYPOINT. You can specify a maximum of 1,500 parameters in the list.
        /// </summary>
        string[] ImageConfigCommand { get; set; }
        /// <summary>
        /// Specifies the entry point to their application, which is typically the location of the runtime executable. You can specify
        /// a maximum of 1,500 string entries in the list.
        /// </summary>
        string[] ImageConfigEntryPoint { get; set; }
        /// <summary>
        /// Specifies the working directory. The length of the directory string cannot exceed 1,000 characters.
        /// </summary>
        string ImageConfigWorkingDirectory { get; set; }
        /// <summary>
        /// The ARN of the KMSlong (KMS) customer managed key that's used to encrypt your function's [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption).
        /// When [Lambda SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html) is activated, Lambda also
        /// uses this key is to encrypt your function's snapshot. If you deploy your function using a container image, Lambda also
        /// uses this key to encrypt your function when it's deployed. Note that this is not the same key that's used to protect your
        /// container image in the Amazon Elastic Container Registry (Amazon ECR). If you don't provide a customer managed key, Lambda
        /// uses a default service key.
        /// </summary>
        string KmsKeyArn { get; set; }
        /// <summary>
        /// A list of [function layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's
        /// execution environment. Specify each layer by its ARN, including the version.
        /// </summary>
        string[] Layer { get; set; }
        /// <summary>
        /// The function's Amazon CloudWatch Logs configuration settings. The function's Amazon CloudWatch Logs configuration settings.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfig LoggingConfig { get; set; }
        /// <summary>
        /// Set this property to filter the application logs for your function that Lambda sends to CloudWatch. Lambda only sends
        /// application logs at the selected level of detail and lower, where ``TRACE`` is the highest level and ``FATAL`` is the
        /// lowest.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel? LoggingConfigApplicationLogLevel { get; set; }
        /// <summary>
        /// The format in which Lambda sends your function's application and system logs to CloudWatch. Select between plain text
        /// and structured JSON.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat? LoggingConfigLogFormat { get; set; }
        /// <summary>
        /// The name of the Amazon CloudWatch log group the function sends logs to. By default, Lambda functions send logs to a default
        /// log group named ``/aws/lambda/<function name>``. To use a different log group, enter an existing log group or enter a
        /// new log group name.
        /// </summary>
        string LoggingConfigLogGroup { get; set; }
        /// <summary>
        /// Set this property to filter the system logs for your function that Lambda sends to CloudWatch. Lambda only sends system
        /// logs at the selected level of detail and lower, where ``DEBUG`` is the highest level and ``WARN`` is the lowest.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel? LoggingConfigSystemLogLevel { get; set; }
        /// <summary>
        /// The amount of [memory available to the function](https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console)
        /// at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can
        /// be any multiple of 1 MB. Note that new AWS accounts have reduced concurrency and memory quotas. AWS raises these quotas
        /// automatically based on your usage. You can also request a quota increase.
        /// </summary>
        int? MemorySize { get; set; }
        /// <summary>
        /// The type of deployment package. Set to ``Image`` for container image and set ``Zip`` for .zip file archive.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PackageType? PackageType { get; set; }
        /// <summary>The number of simultaneous executions to reserve for the function.</summary>
        int? ReservedConcurrentExecution { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of the function's execution role.</summary>
        string Role { get; set; }
        /// <summary>
        /// The identifier of the function's [runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html). Runtime
        /// is required if the deployment package is a .zip file archive. The following list includes deprecated runtimes. For more
        /// information, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy).
        /// </summary>
        string Runtime { get; set; }
        /// <summary>
        /// Sets the runtime management configuration for a function's version. For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html).
        /// Sets the runtime management configuration for a function's version. For more information, see [Runtime updates](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfig RuntimeManagementConfig { get; set; }
        /// <summary>
        /// The ARN of the runtime version you want the function to use. This is only required if you're using the *Manual* runtime
        /// update mode.
        /// </summary>
        string RuntimeManagementConfigRuntimeVersionArn { get; set; }
        /// <summary>
        /// Specify the runtime update mode. + *Auto (default)* - Automatically update to the most recent and secure runtime version
        /// using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase).
        /// This is the best choice for most customers to ensure they always benefit from runtime updates. + *FunctionUpdate* - LAM
        /// updates the runtime of you function to the most recent and secure runtime version when you update your function. This
        /// approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied
        /// and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need
        /// to regularly update your functions to keep their runtime up-to-date. + *Manual* - You specify a runtime version in your
        /// function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime
        /// version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version.
        /// For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).
        /// *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn? RuntimeManagementConfigUpdateRuntimeOn { get; set; }
        /// <summary>
        /// The function's [SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting. The function's [SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html)
        /// setting.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStart SnapStart { get; set; }
        /// <summary>
        /// Set ``ApplyOn`` to ``PublishedVersions`` to create a snapshot of the initialized execution environment when you publish
        /// a function version.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartApplyOn? SnapStartApplyOn { get; set; }
        /// <summary>
        /// The function's [SnapStart](https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponse SnapStartResponse { get; set; }
        /// <summary>
        /// When set to ``PublishedVersions``, Lambda creates a snapshot of the execution environment when you publish a function
        /// version.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn? SnapStartResponseApplyOn { get; set; }
        /// <summary>
        /// When you provide a [qualified Amazon Resource Name (ARN)](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html#versioning-versions-using),
        /// this response element indicates whether SnapStart is activated for the specified function version.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus? SnapStartResponseOptimizationStatus { get; set; }
        /// <summary>
        /// A list of [tags](https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated37[] Tag { get; set; }
        /// <summary>
        /// The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The
        /// maximum allowed value is 900 seconds. For more information, see [Lambda execution environment](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html).
        /// </summary>
        int? Timeout { get; set; }
        /// <summary>
        /// Set ``Mode`` to ``Active`` to sample and trace a subset of incoming requests with [X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html).
        /// The function's [](https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html) tracing configuration. To sample and
        /// record incoming requests, set ``Mode`` to ``Active``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITracingConfig TracingConfig { get; set; }
        /// <summary>The tracing mode.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TracingConfigMode? TracingConfigMode { get; set; }
        /// <summary>
        /// For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC. When you
        /// connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see
        /// [Configuring a Lambda function to access resources in a VPC](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).
        /// The VPC security groups and subnets that are attached to a Lambda function. When you connect a function to a VPC, Lambda
        /// creates an elastic network interface for each combination of security group and subnet in the function's VPC configuration.
        /// The function can only access resources and the internet through that VPC. For more information, see [VPC Settings](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).
        /// When you delete a function, CFN monitors the state of its network interfaces and waits for Lambda to delete them before
        /// proceeding. If the VPC is defined in the same stack, the network interfaces need to be deleted by Lambda before CFN can
        /// delete the VPC's resources. To monitor network interfaces, CFN needs the ``ec2:DescribeNetworkInterfaces`` permission.
        /// It obtains this from the user or role that modifies the stack. If you don't provide this permission, CFN does not wait
        /// for network interfaces to be deleted.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGenerated VpcConfig { get; set; }
        /// <summary>
        /// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
        /// </summary>
        bool? VpcConfigIpv6AllowedForDualStack { get; set; }
        /// <summary>A list of VPC security group IDs.</summary>
        string[] VpcConfigSecurityGroupId { get; set; }
        /// <summary>A list of VPC subnet IDs.</summary>
        string[] VpcConfigSubnetId { get; set; }

    }
}