// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsLightsailInstance</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsLightsailInstancePropertiesTypeConverter))]
    public partial class AwsLightsailInstanceProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsLightsailInstanceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsLightsailInstanceProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Hardware"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Hardware = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardware) content.GetValueForProperty("Hardware",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Hardware, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HardwareTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Location = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocation) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Location, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Networking"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Networking = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworking) content.GetValueForProperty("Networking",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Networking, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NetworkingTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IState) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateTypeConverter.ConvertFrom);
            }
            if (content.Contains("AddOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).AddOn = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAddOn[]) content.GetValueForProperty("AddOn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).AddOn, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAddOn>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AddOnTypeConverter.ConvertFrom));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).AvailabilityZone = (string) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).AvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("BlueprintId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).BlueprintId = (string) content.GetValueForProperty("BlueprintId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).BlueprintId, global::System.Convert.ToString);
            }
            if (content.Contains("BundleId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).BundleId = (string) content.GetValueForProperty("BundleId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).BundleId, global::System.Convert.ToString);
            }
            if (content.Contains("InstanceArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).InstanceArn = (string) content.GetValueForProperty("InstanceArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).InstanceArn, global::System.Convert.ToString);
            }
            if (content.Contains("InstanceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).InstanceName = (string) content.GetValueForProperty("InstanceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).InstanceName, global::System.Convert.ToString);
            }
            if (content.Contains("IsStaticIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).IsStaticIP = (bool?) content.GetValueForProperty("IsStaticIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).IsStaticIP, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KeyPairName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).KeyPairName = (string) content.GetValueForProperty("KeyPairName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).KeyPairName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).PrivateIPAddress = (string) content.GetValueForProperty("PrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).PrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PublicIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).PublicIPAddress = (string) content.GetValueForProperty("PublicIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).PublicIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).ResourceType = (string) content.GetValueForProperty("ResourceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).ResourceType, global::System.Convert.ToString);
            }
            if (content.Contains("SshKeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).SshKeyName = (string) content.GetValueForProperty("SshKeyName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).SshKeyName, global::System.Convert.ToString);
            }
            if (content.Contains("SupportCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).SupportCode = (string) content.GetValueForProperty("SupportCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).SupportCode, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated39[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated39>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated39TypeConverter.ConvertFrom));
            }
            if (content.Contains("UserData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).UserData = (string) content.GetValueForProperty("UserData",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).UserData, global::System.Convert.ToString);
            }
            if (content.Contains("UserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).UserName = (string) content.GetValueForProperty("UserName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).UserName, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareCpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareCpuCount = (int?) content.GetValueForProperty("HardwareCpuCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareCpuCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HardwareDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareDisk = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDisk[]) content.GetValueForProperty("HardwareDisk",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareDisk, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDisk>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DiskTypeConverter.ConvertFrom));
            }
            if (content.Contains("LocationAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).LocationAvailabilityZone = (string) content.GetValueForProperty("LocationAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).LocationAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("LocationRegionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).LocationRegionName = (string) content.GetValueForProperty("LocationRegionName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).LocationRegionName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingMonthlyTransfer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).NetworkingMonthlyTransfer = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonthlyTransfer) content.GetValueForProperty("NetworkingMonthlyTransfer",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).NetworkingMonthlyTransfer, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MonthlyTransferTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkingPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).NetworkingPort = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPort[]) content.GetValueForProperty("NetworkingPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).NetworkingPort, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPort>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PortTypeConverter.ConvertFrom));
            }
            if (content.Contains("StateCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).StateCode = (int?) content.GetValueForProperty("StateCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).StateCode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StateName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).StateName = (string) content.GetValueForProperty("StateName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).StateName, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareRamSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareRamSizeInGb = (int?) content.GetValueForProperty("HardwareRamSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareRamSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MonthlyTransferGbPerMonthAllocated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).MonthlyTransferGbPerMonthAllocated = (string) content.GetValueForProperty("MonthlyTransferGbPerMonthAllocated",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).MonthlyTransferGbPerMonthAllocated, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsLightsailInstanceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsLightsailInstanceProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Hardware"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Hardware = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHardware) content.GetValueForProperty("Hardware",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Hardware, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HardwareTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Location = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocation) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Location, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Networking"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Networking = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworking) content.GetValueForProperty("Networking",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Networking, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NetworkingTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IState) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateTypeConverter.ConvertFrom);
            }
            if (content.Contains("AddOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).AddOn = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAddOn[]) content.GetValueForProperty("AddOn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).AddOn, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAddOn>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AddOnTypeConverter.ConvertFrom));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).AvailabilityZone = (string) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).AvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("BlueprintId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).BlueprintId = (string) content.GetValueForProperty("BlueprintId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).BlueprintId, global::System.Convert.ToString);
            }
            if (content.Contains("BundleId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).BundleId = (string) content.GetValueForProperty("BundleId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).BundleId, global::System.Convert.ToString);
            }
            if (content.Contains("InstanceArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).InstanceArn = (string) content.GetValueForProperty("InstanceArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).InstanceArn, global::System.Convert.ToString);
            }
            if (content.Contains("InstanceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).InstanceName = (string) content.GetValueForProperty("InstanceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).InstanceName, global::System.Convert.ToString);
            }
            if (content.Contains("IsStaticIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).IsStaticIP = (bool?) content.GetValueForProperty("IsStaticIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).IsStaticIP, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KeyPairName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).KeyPairName = (string) content.GetValueForProperty("KeyPairName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).KeyPairName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).PrivateIPAddress = (string) content.GetValueForProperty("PrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).PrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PublicIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).PublicIPAddress = (string) content.GetValueForProperty("PublicIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).PublicIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).ResourceType = (string) content.GetValueForProperty("ResourceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).ResourceType, global::System.Convert.ToString);
            }
            if (content.Contains("SshKeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).SshKeyName = (string) content.GetValueForProperty("SshKeyName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).SshKeyName, global::System.Convert.ToString);
            }
            if (content.Contains("SupportCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).SupportCode = (string) content.GetValueForProperty("SupportCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).SupportCode, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated39[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated39>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated39TypeConverter.ConvertFrom));
            }
            if (content.Contains("UserData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).UserData = (string) content.GetValueForProperty("UserData",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).UserData, global::System.Convert.ToString);
            }
            if (content.Contains("UserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).UserName = (string) content.GetValueForProperty("UserName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).UserName, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareCpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareCpuCount = (int?) content.GetValueForProperty("HardwareCpuCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareCpuCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HardwareDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareDisk = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDisk[]) content.GetValueForProperty("HardwareDisk",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareDisk, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDisk>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DiskTypeConverter.ConvertFrom));
            }
            if (content.Contains("LocationAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).LocationAvailabilityZone = (string) content.GetValueForProperty("LocationAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).LocationAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("LocationRegionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).LocationRegionName = (string) content.GetValueForProperty("LocationRegionName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).LocationRegionName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingMonthlyTransfer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).NetworkingMonthlyTransfer = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMonthlyTransfer) content.GetValueForProperty("NetworkingMonthlyTransfer",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).NetworkingMonthlyTransfer, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MonthlyTransferTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkingPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).NetworkingPort = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPort[]) content.GetValueForProperty("NetworkingPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).NetworkingPort, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPort>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PortTypeConverter.ConvertFrom));
            }
            if (content.Contains("StateCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).StateCode = (int?) content.GetValueForProperty("StateCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).StateCode, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StateName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).StateName = (string) content.GetValueForProperty("StateName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).StateName, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareRamSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareRamSizeInGb = (int?) content.GetValueForProperty("HardwareRamSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).HardwareRamSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MonthlyTransferGbPerMonthAllocated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).MonthlyTransferGbPerMonthAllocated = (string) content.GetValueForProperty("MonthlyTransferGbPerMonthAllocated",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstancePropertiesInternal)this).MonthlyTransferGbPerMonthAllocated, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsLightsailInstanceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstanceProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstanceProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsLightsailInstanceProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsLightsailInstanceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstanceProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstanceProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsLightsailInstanceProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsLightsailInstanceProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsLightsailInstanceProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLightsailInstanceProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsLightsailInstance
    [System.ComponentModel.TypeConverter(typeof(AwsLightsailInstancePropertiesTypeConverter))]
    public partial interface IAwsLightsailInstanceProperties

    {

    }
}