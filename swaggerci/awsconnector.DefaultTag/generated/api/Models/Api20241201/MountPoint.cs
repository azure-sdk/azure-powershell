// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of MountPoint</summary>
    public partial class MountPoint :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPointInternal
    {

        /// <summary>Backing field for <see cref="ContainerPath" /> property.</summary>
        private string _containerPath;

        /// <summary>The path on the container to mount the host volume at.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ContainerPath { get => this._containerPath; set => this._containerPath = value; }

        /// <summary>Backing field for <see cref="ReadOnly" /> property.</summary>
        private bool? _readOnly;

        /// <summary>
        /// If this value is ``true``, the container has read-only access to the volume. If this value is ``false``, then the container
        /// can write to the volume. The default value is ``false``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? ReadOnly { get => this._readOnly; set => this._readOnly = value; }

        /// <summary>Backing field for <see cref="SourceVolume" /> property.</summary>
        private string _sourceVolume;

        /// <summary>
        /// The name of the volume to mount. Must be a volume name referenced in the ``name`` parameter of task definition ``volume``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SourceVolume { get => this._sourceVolume; set => this._sourceVolume = value; }

        /// <summary>Creates an new <see cref="MountPoint" /> instance.</summary>
        public MountPoint()
        {

        }
    }
    /// Definition of MountPoint
    public partial interface IMountPoint :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>The path on the container to mount the host volume at.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The path on the container to mount the host volume at.",
        SerializedName = @"containerPath",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerPath { get; set; }
        /// <summary>
        /// If this value is ``true``, the container has read-only access to the volume. If this value is ``false``, then the container
        /// can write to the volume. The default value is ``false``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If this value is ``true``, the container has read-only access to the volume. If this value is ``false``, then the container can write to the volume. The default value is ``false``.",
        SerializedName = @"readOnly",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ReadOnly { get; set; }
        /// <summary>
        /// The name of the volume to mount. Must be a volume name referenced in the ``name`` parameter of task definition ``volume``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the volume to mount. Must be a volume name referenced in the ``name`` parameter of task definition ``volume``.",
        SerializedName = @"sourceVolume",
        PossibleTypes = new [] { typeof(string) })]
        string SourceVolume { get; set; }

    }
    /// Definition of MountPoint
    internal partial interface IMountPointInternal

    {
        /// <summary>The path on the container to mount the host volume at.</summary>
        string ContainerPath { get; set; }
        /// <summary>
        /// If this value is ``true``, the container has read-only access to the volume. If this value is ``false``, then the container
        /// can write to the volume. The default value is ``false``.
        /// </summary>
        bool? ReadOnly { get; set; }
        /// <summary>
        /// The name of the volume to mount. Must be a volume name referenced in the ``name`` parameter of task definition ``volume``.
        /// </summary>
        string SourceVolume { get; set; }

    }
}