// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of PlacementConstraint</summary>
    public partial class PlacementConstraint :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementConstraint,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementConstraintInternal
    {

        /// <summary>Backing field for <see cref="Expression" /> property.</summary>
        private string _expression;

        /// <summary>
        /// A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters.
        /// You can't specify an expression if the constraint type is ``distinctInstance``. For more information, see [Cluster query
        /// language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic
        /// Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Expression { get => this._expression; set => this._expression = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlacementConstraintType? _type;

        /// <summary>
        /// The type of constraint. Use ``distinctInstance`` to ensure that each task in a particular group is running on a different
        /// container instance. Use ``memberOf`` to restrict the selection to a group of valid candidates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlacementConstraintType? Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="PlacementConstraint" /> instance.</summary>
        public PlacementConstraint()
        {

        }
    }
    /// Definition of PlacementConstraint
    public partial interface IPlacementConstraint :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters.
        /// You can't specify an expression if the constraint type is ``distinctInstance``. For more information, see [Cluster query
        /// language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic
        /// Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters. You can't specify an expression if the constraint type is ``distinctInstance``. For more information, see [Cluster query language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic Container Service Developer Guide*.",
        SerializedName = @"expression",
        PossibleTypes = new [] { typeof(string) })]
        string Expression { get; set; }
        /// <summary>
        /// The type of constraint. Use ``distinctInstance`` to ensure that each task in a particular group is running on a different
        /// container instance. Use ``memberOf`` to restrict the selection to a group of valid candidates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of constraint. Use ``distinctInstance`` to ensure that each task in a particular group is running on a different container instance. Use ``memberOf`` to restrict the selection to a group of valid candidates.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlacementConstraintType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlacementConstraintType? Type { get; set; }

    }
    /// Definition of PlacementConstraint
    internal partial interface IPlacementConstraintInternal

    {
        /// <summary>
        /// A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters.
        /// You can't specify an expression if the constraint type is ``distinctInstance``. For more information, see [Cluster query
        /// language](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html) in the *Amazon Elastic
        /// Container Service Developer Guide*.
        /// </summary>
        string Expression { get; set; }
        /// <summary>
        /// The type of constraint. Use ``distinctInstance`` to ensure that each task in a particular group is running on a different
        /// container instance. Use ``memberOf`` to restrict the selection to a group of valid candidates.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlacementConstraintType? Type { get; set; }

    }
}