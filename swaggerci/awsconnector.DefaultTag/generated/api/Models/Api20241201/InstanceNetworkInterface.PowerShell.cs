// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of InstanceNetworkInterface</summary>
    [System.ComponentModel.TypeConverter(typeof(InstanceNetworkInterfaceTypeConverter))]
    public partial class InstanceNetworkInterface
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterface"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new InstanceNetworkInterface(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterface"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new InstanceNetworkInterface(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="InstanceNetworkInterface" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="InstanceNetworkInterface" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterface"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal InstanceNetworkInterface(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Association"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Association = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociation) content.GetValueForProperty("Association",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Association, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterfaceAssociationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Attachment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Attachment = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachment) content.GetValueForProperty("Attachment",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Attachment, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterfaceAttachmentTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectionTrackingConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponse) content.GetValueForProperty("ConnectionTrackingConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ConnectionTrackingSpecificationResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkInterfaceStatusEnumValue) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NetworkInterfaceStatusEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Group"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Group = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[]) content.GetValueForProperty("Group",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Group, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.GroupIdentifierTypeConverter.ConvertFrom));
            }
            if (content.Contains("InterfaceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).InterfaceType = (string) content.GetValueForProperty("InterfaceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).InterfaceType, global::System.Convert.ToString);
            }
            if (content.Contains("Ipv4Prefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv4Prefix = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv4Prefix[]) content.GetValueForProperty("Ipv4Prefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv4Prefix, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv4Prefix>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceIpv4PrefixTypeConverter.ConvertFrom));
            }
            if (content.Contains("Ipv6Address"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv6Address = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Address[]) content.GetValueForProperty("Ipv6Address",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv6Address, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Address>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceIpv6AddressTypeConverter.ConvertFrom));
            }
            if (content.Contains("Ipv6Prefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv6Prefix = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Prefix[]) content.GetValueForProperty("Ipv6Prefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv6Prefix, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Prefix>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceIpv6PrefixTypeConverter.ConvertFrom));
            }
            if (content.Contains("MacAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).MacAddress = (string) content.GetValueForProperty("MacAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).MacAddress, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).NetworkInterfaceId = (string) content.GetValueForProperty("NetworkInterfaceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).NetworkInterfaceId, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).OwnerId = (string) content.GetValueForProperty("OwnerId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).OwnerId, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateDnsName = (string) content.GetValueForProperty("PrivateDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateIPAddress = (string) content.GetValueForProperty("PrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddresses"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateIPAddresses = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancePrivateIPAddress[]) content.GetValueForProperty("PrivateIPAddresses",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateIPAddresses, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancePrivateIPAddress>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstancePrivateIPAddressTypeConverter.ConvertFrom));
            }
            if (content.Contains("SourceDestCheck"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).SourceDestCheck = (bool?) content.GetValueForProperty("SourceDestCheck",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).SourceDestCheck, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("VpcId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).VpcId = (string) content.GetValueForProperty("VpcId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).VpcId, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationCarrierIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationCarrierIP = (string) content.GetValueForProperty("AssociationCarrierIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationCarrierIP, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationCustomerOwnedIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationCustomerOwnedIP = (string) content.GetValueForProperty("AssociationCustomerOwnedIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationCustomerOwnedIP, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationIPOwnerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationIPOwnerId = (string) content.GetValueForProperty("AssociationIPOwnerId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationIPOwnerId, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationPublicDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationPublicDnsName = (string) content.GetValueForProperty("AssociationPublicDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationPublicDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationPublicIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationPublicIP = (string) content.GetValueForProperty("AssociationPublicIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationPublicIP, global::System.Convert.ToString);
            }
            if (content.Contains("AttachmentEnaSrdSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentEnaSrdSpecification = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAttachmentEnaSrdSpecification) content.GetValueForProperty("AttachmentEnaSrdSpecification",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentEnaSrdSpecification, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceAttachmentEnaSrdSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttachmentStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentStatus = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValue) content.GetValueForProperty("AttachmentStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentStatus, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AttachmentStatusEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttachmentAttachTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentAttachTime = (global::System.DateTime?) content.GetValueForProperty("AttachmentAttachTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentAttachTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AttachmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentId = (string) content.GetValueForProperty("AttachmentId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentId, global::System.Convert.ToString);
            }
            if (content.Contains("AttachmentDeleteOnTermination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentDeleteOnTermination = (bool?) content.GetValueForProperty("AttachmentDeleteOnTermination",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentDeleteOnTermination, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AttachmentDeviceIndex"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentDeviceIndex = (int?) content.GetValueForProperty("AttachmentDeviceIndex",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentDeviceIndex, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AttachmentNetworkCardIndex"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentNetworkCardIndex = (int?) content.GetValueForProperty("AttachmentNetworkCardIndex",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentNetworkCardIndex, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AttachmentStatusValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentStatusValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus?) content.GetValueForProperty("AttachmentStatusValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentStatusValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus.CreateFrom);
            }
            if (content.Contains("ConnectionTrackingConfigurationTcpEstablishedTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationTcpEstablishedTimeout = (int?) content.GetValueForProperty("ConnectionTrackingConfigurationTcpEstablishedTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationTcpEstablishedTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ConnectionTrackingConfigurationUdpStreamTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationUdpStreamTimeout = (int?) content.GetValueForProperty("ConnectionTrackingConfigurationUdpStreamTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationUdpStreamTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ConnectionTrackingConfigurationUdpTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationUdpTimeout = (int?) content.GetValueForProperty("ConnectionTrackingConfigurationUdpTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationUdpTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Value"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Value = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NetworkInterfaceStatus?) content.GetValueForProperty("Value",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Value, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NetworkInterfaceStatus.CreateFrom);
            }
            if (content.Contains("EnaSrdSpecificationEnaSrdUdpSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdSpecificationEnaSrdUdpSpecification = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAttachmentEnaSrdUdpSpecification) content.GetValueForProperty("EnaSrdSpecificationEnaSrdUdpSpecification",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdSpecificationEnaSrdUdpSpecification, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceAttachmentEnaSrdUdpSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnaSrdSpecificationEnaSrdEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdSpecificationEnaSrdEnabled = (bool?) content.GetValueForProperty("EnaSrdSpecificationEnaSrdEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdSpecificationEnaSrdEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnaSrdUdpSpecificationEnaSrdUdpEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdUdpSpecificationEnaSrdUdpEnabled = (bool?) content.GetValueForProperty("EnaSrdUdpSpecificationEnaSrdUdpEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdUdpSpecificationEnaSrdUdpEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterface"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal InstanceNetworkInterface(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Association"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Association = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociation) content.GetValueForProperty("Association",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Association, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterfaceAssociationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Attachment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Attachment = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachment) content.GetValueForProperty("Attachment",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Attachment, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterfaceAttachmentTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectionTrackingConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponse) content.GetValueForProperty("ConnectionTrackingConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ConnectionTrackingSpecificationResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkInterfaceStatusEnumValue) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NetworkInterfaceStatusEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Group"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Group = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[]) content.GetValueForProperty("Group",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Group, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.GroupIdentifierTypeConverter.ConvertFrom));
            }
            if (content.Contains("InterfaceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).InterfaceType = (string) content.GetValueForProperty("InterfaceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).InterfaceType, global::System.Convert.ToString);
            }
            if (content.Contains("Ipv4Prefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv4Prefix = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv4Prefix[]) content.GetValueForProperty("Ipv4Prefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv4Prefix, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv4Prefix>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceIpv4PrefixTypeConverter.ConvertFrom));
            }
            if (content.Contains("Ipv6Address"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv6Address = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Address[]) content.GetValueForProperty("Ipv6Address",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv6Address, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Address>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceIpv6AddressTypeConverter.ConvertFrom));
            }
            if (content.Contains("Ipv6Prefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv6Prefix = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Prefix[]) content.GetValueForProperty("Ipv6Prefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Ipv6Prefix, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Prefix>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceIpv6PrefixTypeConverter.ConvertFrom));
            }
            if (content.Contains("MacAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).MacAddress = (string) content.GetValueForProperty("MacAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).MacAddress, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).NetworkInterfaceId = (string) content.GetValueForProperty("NetworkInterfaceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).NetworkInterfaceId, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).OwnerId = (string) content.GetValueForProperty("OwnerId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).OwnerId, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateDnsName = (string) content.GetValueForProperty("PrivateDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateIPAddress = (string) content.GetValueForProperty("PrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddresses"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateIPAddresses = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancePrivateIPAddress[]) content.GetValueForProperty("PrivateIPAddresses",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).PrivateIPAddresses, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancePrivateIPAddress>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstancePrivateIPAddressTypeConverter.ConvertFrom));
            }
            if (content.Contains("SourceDestCheck"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).SourceDestCheck = (bool?) content.GetValueForProperty("SourceDestCheck",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).SourceDestCheck, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("VpcId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).VpcId = (string) content.GetValueForProperty("VpcId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).VpcId, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationCarrierIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationCarrierIP = (string) content.GetValueForProperty("AssociationCarrierIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationCarrierIP, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationCustomerOwnedIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationCustomerOwnedIP = (string) content.GetValueForProperty("AssociationCustomerOwnedIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationCustomerOwnedIP, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationIPOwnerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationIPOwnerId = (string) content.GetValueForProperty("AssociationIPOwnerId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationIPOwnerId, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationPublicDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationPublicDnsName = (string) content.GetValueForProperty("AssociationPublicDnsName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationPublicDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("AssociationPublicIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationPublicIP = (string) content.GetValueForProperty("AssociationPublicIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AssociationPublicIP, global::System.Convert.ToString);
            }
            if (content.Contains("AttachmentEnaSrdSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentEnaSrdSpecification = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAttachmentEnaSrdSpecification) content.GetValueForProperty("AttachmentEnaSrdSpecification",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentEnaSrdSpecification, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceAttachmentEnaSrdSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttachmentStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentStatus = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValue) content.GetValueForProperty("AttachmentStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentStatus, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AttachmentStatusEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttachmentAttachTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentAttachTime = (global::System.DateTime?) content.GetValueForProperty("AttachmentAttachTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentAttachTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AttachmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentId = (string) content.GetValueForProperty("AttachmentId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentId, global::System.Convert.ToString);
            }
            if (content.Contains("AttachmentDeleteOnTermination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentDeleteOnTermination = (bool?) content.GetValueForProperty("AttachmentDeleteOnTermination",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentDeleteOnTermination, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AttachmentDeviceIndex"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentDeviceIndex = (int?) content.GetValueForProperty("AttachmentDeviceIndex",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentDeviceIndex, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AttachmentNetworkCardIndex"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentNetworkCardIndex = (int?) content.GetValueForProperty("AttachmentNetworkCardIndex",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentNetworkCardIndex, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AttachmentStatusValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentStatusValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus?) content.GetValueForProperty("AttachmentStatusValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).AttachmentStatusValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus.CreateFrom);
            }
            if (content.Contains("ConnectionTrackingConfigurationTcpEstablishedTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationTcpEstablishedTimeout = (int?) content.GetValueForProperty("ConnectionTrackingConfigurationTcpEstablishedTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationTcpEstablishedTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ConnectionTrackingConfigurationUdpStreamTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationUdpStreamTimeout = (int?) content.GetValueForProperty("ConnectionTrackingConfigurationUdpStreamTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationUdpStreamTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ConnectionTrackingConfigurationUdpTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationUdpTimeout = (int?) content.GetValueForProperty("ConnectionTrackingConfigurationUdpTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).ConnectionTrackingConfigurationUdpTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Value"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Value = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NetworkInterfaceStatus?) content.GetValueForProperty("Value",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).Value, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NetworkInterfaceStatus.CreateFrom);
            }
            if (content.Contains("EnaSrdSpecificationEnaSrdUdpSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdSpecificationEnaSrdUdpSpecification = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAttachmentEnaSrdUdpSpecification) content.GetValueForProperty("EnaSrdSpecificationEnaSrdUdpSpecification",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdSpecificationEnaSrdUdpSpecification, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceAttachmentEnaSrdUdpSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnaSrdSpecificationEnaSrdEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdSpecificationEnaSrdEnabled = (bool?) content.GetValueForProperty("EnaSrdSpecificationEnaSrdEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdSpecificationEnaSrdEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnaSrdUdpSpecificationEnaSrdUdpEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdUdpSpecificationEnaSrdUdpEnabled = (bool?) content.GetValueForProperty("EnaSrdUdpSpecificationEnaSrdUdpEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal)this).EnaSrdUdpSpecificationEnaSrdUdpEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of InstanceNetworkInterface
    [System.ComponentModel.TypeConverter(typeof(InstanceNetworkInterfaceTypeConverter))]
    public partial interface IInstanceNetworkInterface

    {

    }
}