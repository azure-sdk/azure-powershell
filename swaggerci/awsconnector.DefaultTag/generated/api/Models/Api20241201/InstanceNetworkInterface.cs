// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of InstanceNetworkInterface</summary>
    public partial class InstanceNetworkInterface :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal
    {

        /// <summary>Backing field for <see cref="Association" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociation _association;

        /// <summary>
        /// <p>The association information for an Elastic IPv4 associated with the network interface.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociation Association { get => (this._association = this._association ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterfaceAssociation()); set => this._association = value; }

        /// <summary><p>The carrier IP address associated with the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AssociationCarrierIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociationInternal)Association).CarrierIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociationInternal)Association).CarrierIP = value ?? null; }

        /// <summary><p>The customer-owned IP address associated with the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AssociationCustomerOwnedIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociationInternal)Association).CustomerOwnedIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociationInternal)Association).CustomerOwnedIP = value ?? null; }

        /// <summary><p>The ID of the owner of the Elastic IP address.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AssociationIPOwnerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociationInternal)Association).IPOwnerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociationInternal)Association).IPOwnerId = value ?? null; }

        /// <summary><p>The public DNS name.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AssociationPublicDnsName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociationInternal)Association).PublicDnsName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociationInternal)Association).PublicDnsName = value ?? null; }

        /// <summary>
        /// <p>The public IP address or Elastic IP address bound to the network interface.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AssociationPublicIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociationInternal)Association).PublicIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociationInternal)Association).PublicIP = value ?? null; }

        /// <summary>Backing field for <see cref="Attachment" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachment _attachment;

        /// <summary><p>The network interface attachment.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachment Attachment { get => (this._attachment = this._attachment ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterfaceAttachment()); set => this._attachment = value; }

        /// <summary><p>The time stamp when the attachment initiated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? AttachmentAttachTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).AttachTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).AttachTime = value ?? default(global::System.DateTime); }

        /// <summary>
        /// <p>Indicates whether the network interface is deleted when the instance is terminated.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AttachmentDeleteOnTermination { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).DeleteOnTermination; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).DeleteOnTermination = value ?? default(bool); }

        /// <summary>
        /// <p>The index of the device on the instance for the network interface attachment.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AttachmentDeviceIndex { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).DeviceIndex; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).DeviceIndex = value ?? default(int); }

        /// <summary><p>The ID of the network interface attachment.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AttachmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).AttachmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).AttachmentId = value ?? null; }

        /// <summary><p>The index of the network card.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AttachmentNetworkCardIndex { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).NetworkCardIndex; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).NetworkCardIndex = value ?? default(int); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus? AttachmentStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).StatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).StatusValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus)""); }

        /// <summary>Backing field for <see cref="ConnectionTrackingConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponse _connectionTrackingConfiguration;

        /// <summary>
        /// <p>A security group connection tracking configuration that enables you to set the timeout for connection tracking on an
        /// Elastic network interface. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-connection-tracking.html#connection-tracking-timeouts'>Connection
        /// tracking timeouts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponse ConnectionTrackingConfiguration { get => (this._connectionTrackingConfiguration = this._connectionTrackingConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ConnectionTrackingSpecificationResponse()); set => this._connectionTrackingConfiguration = value; }

        /// <summary>
        /// <p>Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days).
        /// Default: 432000 seconds. Recommended: Less than 432000 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ConnectionTrackingConfigurationTcpEstablishedTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponseInternal)ConnectionTrackingConfiguration).TcpEstablishedTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponseInternal)ConnectionTrackingConfiguration).TcpEstablishedTimeout = value ?? default(int); }

        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction.
        /// Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ConnectionTrackingConfigurationUdpStreamTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponseInternal)ConnectionTrackingConfiguration).UdpStreamTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponseInternal)ConnectionTrackingConfiguration).UdpStreamTimeout = value ?? default(int); }

        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response
        /// transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ConnectionTrackingConfigurationUdpTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponseInternal)ConnectionTrackingConfiguration).UdpTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponseInternal)ConnectionTrackingConfiguration).UdpTimeout = value ?? default(int); }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary><p>The description.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary><p>Indicates whether ENA Express is enabled for the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? EnaSrdSpecificationEnaSrdEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).EnaSrdSpecificationEnaSrdEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).EnaSrdSpecificationEnaSrdEnabled = value ?? default(bool); }

        /// <summary>
        /// <p>Indicates whether UDP traffic to and from the instance uses ENA Express. To specify this setting, you must first enable
        /// ENA Express.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? EnaSrdUdpSpecificationEnaSrdUdpEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).EnaSrdUdpSpecificationEnaSrdUdpEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).EnaSrdUdpSpecificationEnaSrdUdpEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Group" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[] _group;

        /// <summary><p>The security groups.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[] Group { get => this._group; set => this._group = value; }

        /// <summary>Backing field for <see cref="InterfaceType" /> property.</summary>
        private string _interfaceType;

        /// <summary>
        /// <p>The type of network interface.</p> <p>Valid values: <code>interface</code> | <code>efa</code> | <code>trunk</code>
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string InterfaceType { get => this._interfaceType; set => this._interfaceType = value; }

        /// <summary>Backing field for <see cref="Ipv4Prefix" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv4Prefix[] _ipv4Prefix;

        /// <summary><p>The IPv4 delegated prefixes that are assigned to the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv4Prefix[] Ipv4Prefix { get => this._ipv4Prefix; set => this._ipv4Prefix = value; }

        /// <summary>Backing field for <see cref="Ipv6Address" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Address[] _ipv6Address;

        /// <summary><p>The IPv6 addresses associated with the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Address[] Ipv6Address { get => this._ipv6Address; set => this._ipv6Address = value; }

        /// <summary>Backing field for <see cref="Ipv6Prefix" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Prefix[] _ipv6Prefix;

        /// <summary><p>The IPv6 delegated prefixes that are assigned to the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Prefix[] Ipv6Prefix { get => this._ipv6Prefix; set => this._ipv6Prefix = value; }

        /// <summary>Backing field for <see cref="MacAddress" /> property.</summary>
        private string _macAddress;

        /// <summary><p>The MAC address.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string MacAddress { get => this._macAddress; set => this._macAddress = value; }

        /// <summary>Internal Acessors for Association</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociation Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal.Association { get => (this._association = this._association ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterfaceAssociation()); set { {_association = value;} } }

        /// <summary>Internal Acessors for Attachment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachment Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal.Attachment { get => (this._attachment = this._attachment ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterfaceAttachment()); set { {_attachment = value;} } }

        /// <summary>Internal Acessors for AttachmentEnaSrdSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAttachmentEnaSrdSpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal.AttachmentEnaSrdSpecification { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).EnaSrdSpecification; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).EnaSrdSpecification = value; }

        /// <summary>Internal Acessors for AttachmentStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal.AttachmentStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).Status = value; }

        /// <summary>Internal Acessors for ConnectionTrackingConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal.ConnectionTrackingConfiguration { get => (this._connectionTrackingConfiguration = this._connectionTrackingConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ConnectionTrackingSpecificationResponse()); set { {_connectionTrackingConfiguration = value;} } }

        /// <summary>Internal Acessors for EnaSrdSpecificationEnaSrdUdpSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAttachmentEnaSrdUdpSpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal.EnaSrdSpecificationEnaSrdUdpSpecification { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).EnaSrdSpecificationEnaSrdUdpSpecification; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachmentInternal)Attachment).EnaSrdSpecificationEnaSrdUdpSpecification = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkInterfaceStatusEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NetworkInterfaceStatusEnumValue()); set { {_status = value;} } }

        /// <summary>Backing field for <see cref="NetworkInterfaceId" /> property.</summary>
        private string _networkInterfaceId;

        /// <summary><p>The ID of the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string NetworkInterfaceId { get => this._networkInterfaceId; set => this._networkInterfaceId = value; }

        /// <summary>Backing field for <see cref="OwnerId" /> property.</summary>
        private string _ownerId;

        /// <summary>
        /// <p>The ID of the Amazon Web Services account that created the network interface.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OwnerId { get => this._ownerId; set => this._ownerId = value; }

        /// <summary>Backing field for <see cref="PrivateDnsName" /> property.</summary>
        private string _privateDnsName;

        /// <summary><p>The private DNS name.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PrivateDnsName { get => this._privateDnsName; set => this._privateDnsName = value; }

        /// <summary>Backing field for <see cref="PrivateIPAddress" /> property.</summary>
        private string _privateIPAddress;

        /// <summary><p>The IPv4 address of the network interface within the subnet.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PrivateIPAddress { get => this._privateIPAddress; set => this._privateIPAddress = value; }

        /// <summary>Backing field for <see cref="PrivateIPAddresses" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancePrivateIPAddress[] _privateIPAddresses;

        /// <summary><p>The private IPv4 addresses associated with the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancePrivateIPAddress[] PrivateIPAddresses { get => this._privateIPAddresses; set => this._privateIPAddresses = value; }

        /// <summary>Backing field for <see cref="SourceDestCheck" /> property.</summary>
        private bool? _sourceDestCheck;

        /// <summary><p>Indicates whether source/destination checking is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? SourceDestCheck { get => this._sourceDestCheck; set => this._sourceDestCheck = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkInterfaceStatusEnumValue _status;

        /// <summary><p>The status of the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkInterfaceStatusEnumValue Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NetworkInterfaceStatusEnumValue()); set => this._status = value; }

        /// <summary>Backing field for <see cref="SubnetId" /> property.</summary>
        private string _subnetId;

        /// <summary><p>The ID of the subnet.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SubnetId { get => this._subnetId; set => this._subnetId = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NetworkInterfaceStatus? Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkInterfaceStatusEnumValueInternal)Status).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkInterfaceStatusEnumValueInternal)Status).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NetworkInterfaceStatus)""); }

        /// <summary>Backing field for <see cref="VpcId" /> property.</summary>
        private string _vpcId;

        /// <summary><p>The ID of the VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string VpcId { get => this._vpcId; set => this._vpcId = value; }

        /// <summary>Creates an new <see cref="InstanceNetworkInterface" /> instance.</summary>
        public InstanceNetworkInterface()
        {

        }
    }
    /// Definition of InstanceNetworkInterface
    public partial interface IInstanceNetworkInterface :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>The carrier IP address associated with the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The carrier IP address associated with the network interface.</p>",
        SerializedName = @"carrierIp",
        PossibleTypes = new [] { typeof(string) })]
        string AssociationCarrierIP { get; set; }
        /// <summary><p>The customer-owned IP address associated with the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The customer-owned IP address associated with the network interface.</p>",
        SerializedName = @"customerOwnedIp",
        PossibleTypes = new [] { typeof(string) })]
        string AssociationCustomerOwnedIP { get; set; }
        /// <summary><p>The ID of the owner of the Elastic IP address.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the owner of the Elastic IP address.</p>",
        SerializedName = @"ipOwnerId",
        PossibleTypes = new [] { typeof(string) })]
        string AssociationIPOwnerId { get; set; }
        /// <summary><p>The public DNS name.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The public DNS name.</p>",
        SerializedName = @"publicDnsName",
        PossibleTypes = new [] { typeof(string) })]
        string AssociationPublicDnsName { get; set; }
        /// <summary>
        /// <p>The public IP address or Elastic IP address bound to the network interface.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The public IP address or Elastic IP address bound to the network interface.</p>",
        SerializedName = @"publicIp",
        PossibleTypes = new [] { typeof(string) })]
        string AssociationPublicIP { get; set; }
        /// <summary><p>The time stamp when the attachment initiated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time stamp when the attachment initiated.</p>",
        SerializedName = @"attachTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AttachmentAttachTime { get; set; }
        /// <summary>
        /// <p>Indicates whether the network interface is deleted when the instance is terminated.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the network interface is deleted when the instance is terminated.</p>",
        SerializedName = @"deleteOnTermination",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AttachmentDeleteOnTermination { get; set; }
        /// <summary>
        /// <p>The index of the device on the instance for the network interface attachment.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The index of the device on the instance for the network interface attachment.</p>",
        SerializedName = @"deviceIndex",
        PossibleTypes = new [] { typeof(int) })]
        int? AttachmentDeviceIndex { get; set; }
        /// <summary><p>The ID of the network interface attachment.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the network interface attachment.</p>",
        SerializedName = @"attachmentId",
        PossibleTypes = new [] { typeof(string) })]
        string AttachmentId { get; set; }
        /// <summary><p>The index of the network card.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The index of the network card.</p>",
        SerializedName = @"networkCardIndex",
        PossibleTypes = new [] { typeof(int) })]
        int? AttachmentNetworkCardIndex { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus? AttachmentStatusValue { get; set; }
        /// <summary>
        /// <p>Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days).
        /// Default: 432000 seconds. Recommended: Less than 432000 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days). Default: 432000 seconds. Recommended: Less than 432000 seconds.</p>",
        SerializedName = @"tcpEstablishedTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? ConnectionTrackingConfigurationTcpEstablishedTimeout { get; set; }
        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction.
        /// Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction. Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.</p>",
        SerializedName = @"udpStreamTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? ConnectionTrackingConfigurationUdpStreamTimeout { get; set; }
        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response
        /// transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.</p>",
        SerializedName = @"udpTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? ConnectionTrackingConfigurationUdpTimeout { get; set; }
        /// <summary><p>The description.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The description.</p>",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary><p>Indicates whether ENA Express is enabled for the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether ENA Express is enabled for the network interface.</p>",
        SerializedName = @"enaSrdEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnaSrdSpecificationEnaSrdEnabled { get; set; }
        /// <summary>
        /// <p>Indicates whether UDP traffic to and from the instance uses ENA Express. To specify this setting, you must first enable
        /// ENA Express.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether UDP traffic to and from the instance uses ENA Express. To specify this setting, you must first enable ENA Express.</p>",
        SerializedName = @"enaSrdUdpEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnaSrdUdpSpecificationEnaSrdUdpEnabled { get; set; }
        /// <summary><p>The security groups.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The security groups.</p>",
        SerializedName = @"groups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[] Group { get; set; }
        /// <summary>
        /// <p>The type of network interface.</p> <p>Valid values: <code>interface</code> | <code>efa</code> | <code>trunk</code>
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The type of network interface.</p> <p>Valid values: <code>interface</code> | <code>efa</code> | <code>trunk</code> </p>",
        SerializedName = @"interfaceType",
        PossibleTypes = new [] { typeof(string) })]
        string InterfaceType { get; set; }
        /// <summary><p>The IPv4 delegated prefixes that are assigned to the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IPv4 delegated prefixes that are assigned to the network interface.</p>",
        SerializedName = @"ipv4Prefixes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv4Prefix) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv4Prefix[] Ipv4Prefix { get; set; }
        /// <summary><p>The IPv6 addresses associated with the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IPv6 addresses associated with the network interface.</p>",
        SerializedName = @"ipv6Addresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Address) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Address[] Ipv6Address { get; set; }
        /// <summary><p>The IPv6 delegated prefixes that are assigned to the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IPv6 delegated prefixes that are assigned to the network interface.</p>",
        SerializedName = @"ipv6Prefixes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Prefix) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Prefix[] Ipv6Prefix { get; set; }
        /// <summary><p>The MAC address.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The MAC address.</p>",
        SerializedName = @"macAddress",
        PossibleTypes = new [] { typeof(string) })]
        string MacAddress { get; set; }
        /// <summary><p>The ID of the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the network interface.</p>",
        SerializedName = @"networkInterfaceId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceId { get; set; }
        /// <summary>
        /// <p>The ID of the Amazon Web Services account that created the network interface.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the Amazon Web Services account that created the network interface.</p>",
        SerializedName = @"ownerId",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerId { get; set; }
        /// <summary><p>The private DNS name.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The private DNS name.</p>",
        SerializedName = @"privateDnsName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateDnsName { get; set; }
        /// <summary><p>The IPv4 address of the network interface within the subnet.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IPv4 address of the network interface within the subnet.</p>",
        SerializedName = @"privateIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateIPAddress { get; set; }
        /// <summary><p>The private IPv4 addresses associated with the network interface.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The private IPv4 addresses associated with the network interface.</p>",
        SerializedName = @"privateIpAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancePrivateIPAddress) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancePrivateIPAddress[] PrivateIPAddresses { get; set; }
        /// <summary><p>Indicates whether source/destination checking is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether source/destination checking is enabled.</p>",
        SerializedName = @"sourceDestCheck",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceDestCheck { get; set; }
        /// <summary><p>The ID of the subnet.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the subnet.</p>",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NetworkInterfaceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NetworkInterfaceStatus? Value { get; set; }
        /// <summary><p>The ID of the VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the VPC.</p>",
        SerializedName = @"vpcId",
        PossibleTypes = new [] { typeof(string) })]
        string VpcId { get; set; }

    }
    /// Definition of InstanceNetworkInterface
    internal partial interface IInstanceNetworkInterfaceInternal

    {
        /// <summary>
        /// <p>The association information for an Elastic IPv4 associated with the network interface.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAssociation Association { get; set; }
        /// <summary><p>The carrier IP address associated with the network interface.</p></summary>
        string AssociationCarrierIP { get; set; }
        /// <summary><p>The customer-owned IP address associated with the network interface.</p></summary>
        string AssociationCustomerOwnedIP { get; set; }
        /// <summary><p>The ID of the owner of the Elastic IP address.</p></summary>
        string AssociationIPOwnerId { get; set; }
        /// <summary><p>The public DNS name.</p></summary>
        string AssociationPublicDnsName { get; set; }
        /// <summary>
        /// <p>The public IP address or Elastic IP address bound to the network interface.</p>
        /// </summary>
        string AssociationPublicIP { get; set; }
        /// <summary><p>The network interface attachment.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterfaceAttachment Attachment { get; set; }
        /// <summary><p>The time stamp when the attachment initiated.</p></summary>
        global::System.DateTime? AttachmentAttachTime { get; set; }
        /// <summary>
        /// <p>Indicates whether the network interface is deleted when the instance is terminated.</p>
        /// </summary>
        bool? AttachmentDeleteOnTermination { get; set; }
        /// <summary>
        /// <p>The index of the device on the instance for the network interface attachment.</p>
        /// </summary>
        int? AttachmentDeviceIndex { get; set; }
        /// <summary>
        /// <p>Contains the ENA Express settings for the network interface that's attached to the instance.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAttachmentEnaSrdSpecification AttachmentEnaSrdSpecification { get; set; }
        /// <summary><p>The ID of the network interface attachment.</p></summary>
        string AttachmentId { get; set; }
        /// <summary><p>The index of the network card.</p></summary>
        int? AttachmentNetworkCardIndex { get; set; }
        /// <summary><p>The attachment state.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValue AttachmentStatus { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus? AttachmentStatusValue { get; set; }
        /// <summary>
        /// <p>A security group connection tracking configuration that enables you to set the timeout for connection tracking on an
        /// Elastic network interface. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-connection-tracking.html#connection-tracking-timeouts'>Connection
        /// tracking timeouts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponse ConnectionTrackingConfiguration { get; set; }
        /// <summary>
        /// <p>Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days).
        /// Default: 432000 seconds. Recommended: Less than 432000 seconds.</p>
        /// </summary>
        int? ConnectionTrackingConfigurationTcpEstablishedTimeout { get; set; }
        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction.
        /// Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.</p>
        /// </summary>
        int? ConnectionTrackingConfigurationUdpStreamTimeout { get; set; }
        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response
        /// transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.</p>
        /// </summary>
        int? ConnectionTrackingConfigurationUdpTimeout { get; set; }
        /// <summary><p>The description.</p></summary>
        string Description { get; set; }
        /// <summary><p>Indicates whether ENA Express is enabled for the network interface.</p></summary>
        bool? EnaSrdSpecificationEnaSrdEnabled { get; set; }
        /// <summary><p>Configures ENA Express for UDP network traffic.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceAttachmentEnaSrdUdpSpecification EnaSrdSpecificationEnaSrdUdpSpecification { get; set; }
        /// <summary>
        /// <p>Indicates whether UDP traffic to and from the instance uses ENA Express. To specify this setting, you must first enable
        /// ENA Express.</p>
        /// </summary>
        bool? EnaSrdUdpSpecificationEnaSrdUdpEnabled { get; set; }
        /// <summary><p>The security groups.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[] Group { get; set; }
        /// <summary>
        /// <p>The type of network interface.</p> <p>Valid values: <code>interface</code> | <code>efa</code> | <code>trunk</code>
        /// </p>
        /// </summary>
        string InterfaceType { get; set; }
        /// <summary><p>The IPv4 delegated prefixes that are assigned to the network interface.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv4Prefix[] Ipv4Prefix { get; set; }
        /// <summary><p>The IPv6 addresses associated with the network interface.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Address[] Ipv6Address { get; set; }
        /// <summary><p>The IPv6 delegated prefixes that are assigned to the network interface.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6Prefix[] Ipv6Prefix { get; set; }
        /// <summary><p>The MAC address.</p></summary>
        string MacAddress { get; set; }
        /// <summary><p>The ID of the network interface.</p></summary>
        string NetworkInterfaceId { get; set; }
        /// <summary>
        /// <p>The ID of the Amazon Web Services account that created the network interface.</p>
        /// </summary>
        string OwnerId { get; set; }
        /// <summary><p>The private DNS name.</p></summary>
        string PrivateDnsName { get; set; }
        /// <summary><p>The IPv4 address of the network interface within the subnet.</p></summary>
        string PrivateIPAddress { get; set; }
        /// <summary><p>The private IPv4 addresses associated with the network interface.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancePrivateIPAddress[] PrivateIPAddresses { get; set; }
        /// <summary><p>Indicates whether source/destination checking is enabled.</p></summary>
        bool? SourceDestCheck { get; set; }
        /// <summary><p>The status of the network interface.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkInterfaceStatusEnumValue Status { get; set; }
        /// <summary><p>The ID of the subnet.</p></summary>
        string SubnetId { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NetworkInterfaceStatus? Value { get; set; }
        /// <summary><p>The ID of the VPC.</p></summary>
        string VpcId { get; set; }

    }
}