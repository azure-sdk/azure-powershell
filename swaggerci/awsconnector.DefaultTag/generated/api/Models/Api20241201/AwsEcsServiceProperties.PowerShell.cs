// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsEcsService</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsEcsServicePropertiesTypeConverter))]
    public partial class AwsEcsServiceProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEcsServiceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsEcsServiceProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DeploymentConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentConfiguration) content.GetValueForProperty("DeploymentConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeploymentConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeploymentController"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentController = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentController) content.GetValueForProperty("DeploymentController",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentController, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeploymentControllerTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).NetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkConfiguration) content.GetValueForProperty("NetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).NetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceConnectConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectConfiguration) content.GetValueForProperty("ServiceConnectConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceConnectConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CapacityProviderStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).CapacityProviderStrategy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityProviderStrategyItem[]) content.GetValueForProperty("CapacityProviderStrategy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).CapacityProviderStrategy, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityProviderStrategyItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CapacityProviderStrategyItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("Cluster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Cluster = (string) content.GetValueForProperty("Cluster",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Cluster, global::System.Convert.ToString);
            }
            if (content.Contains("DesiredCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DesiredCount = (int?) content.GetValueForProperty("DesiredCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DesiredCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EnableEcsManagedTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).EnableEcsManagedTag = (bool?) content.GetValueForProperty("EnableEcsManagedTag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).EnableEcsManagedTag, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableExecuteCommand"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).EnableExecuteCommand = (bool?) content.GetValueForProperty("EnableExecuteCommand",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).EnableExecuteCommand, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HealthCheckGracePeriodSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).HealthCheckGracePeriodSecond = (int?) content.GetValueForProperty("HealthCheckGracePeriodSecond",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).HealthCheckGracePeriodSecond, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LaunchType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LaunchType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LaunchType?) content.GetValueForProperty("LaunchType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LaunchType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LaunchType.CreateFrom);
            }
            if (content.Contains("LoadBalancer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LoadBalancer = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoadBalancer[]) content.GetValueForProperty("LoadBalancer",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LoadBalancer, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoadBalancer>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoadBalancerTypeConverter.ConvertFrom));
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementConstraint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlacementConstraint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementConstraint[]) content.GetValueForProperty("PlacementConstraint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlacementConstraint, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementConstraint>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlacementConstraintTypeConverter.ConvertFrom));
            }
            if (content.Contains("PlacementStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlacementStrategy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementStrategy[]) content.GetValueForProperty("PlacementStrategy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlacementStrategy, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementStrategy>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlacementStrategyTypeConverter.ConvertFrom));
            }
            if (content.Contains("PlatformVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlatformVersion = (string) content.GetValueForProperty("PlatformVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlatformVersion, global::System.Convert.ToString);
            }
            if (content.Contains("PropagateTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PropagateTag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PropagateTags?) content.GetValueForProperty("PropagateTag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PropagateTag, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PropagateTags.CreateFrom);
            }
            if (content.Contains("Role"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Role = (string) content.GetValueForProperty("Role",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Role, global::System.Convert.ToString);
            }
            if (content.Contains("SchedulingStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).SchedulingStrategy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SchedulingStrategy?) content.GetValueForProperty("SchedulingStrategy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).SchedulingStrategy, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SchedulingStrategy.CreateFrom);
            }
            if (content.Contains("ServiceArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceArn = (string) content.GetValueForProperty("ServiceArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceArn, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceName = (string) content.GetValueForProperty("ServiceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceName, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceRegistry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceRegistry = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceRegistry[]) content.GetValueForProperty("ServiceRegistry",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceRegistry, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceRegistry>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceRegistryTypeConverter.ConvertFrom));
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated27[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated27>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated27TypeConverter.ConvertFrom));
            }
            if (content.Contains("TaskDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).TaskDefinition = (string) content.GetValueForProperty("TaskDefinition",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).TaskDefinition, global::System.Convert.ToString);
            }
            if (content.Contains("VolumeConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).VolumeConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceVolumeConfiguration[]) content.GetValueForProperty("VolumeConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).VolumeConfiguration, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceVolumeConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceVolumeConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DeploymentConfigurationMaximumPercent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationMaximumPercent = (int?) content.GetValueForProperty("DeploymentConfigurationMaximumPercent",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationMaximumPercent, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DeploymentControllerType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentControllerType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentControllerType?) content.GetValueForProperty("DeploymentControllerType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentControllerType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentControllerType.CreateFrom);
            }
            if (content.Contains("ServiceConnectConfigurationLogConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationLogConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration) content.GetValueForProperty("ServiceConnectConfigurationLogConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationLogConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceConnectConfigurationNamespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationNamespace = (string) content.GetValueForProperty("ServiceConnectConfigurationNamespace",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationNamespace, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceConnectConfigurationService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationService = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectService[]) content.GetValueForProperty("ServiceConnectConfigurationService",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationService, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectService>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceConnectServiceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DeploymentConfigurationAlarm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationAlarm = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentAlarms) content.GetValueForProperty("DeploymentConfigurationAlarm",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationAlarm, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeploymentAlarmsTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeploymentConfigurationDeploymentCircuitBreaker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationDeploymentCircuitBreaker = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentCircuitBreaker) content.GetValueForProperty("DeploymentConfigurationDeploymentCircuitBreaker",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationDeploymentCircuitBreaker, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeploymentCircuitBreakerTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeploymentConfigurationMinimumHealthyPercent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationMinimumHealthyPercent = (int?) content.GetValueForProperty("DeploymentConfigurationMinimumHealthyPercent",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationMinimumHealthyPercent, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkConfigurationAwsvpcConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).NetworkConfigurationAwsvpcConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsVpcConfiguration) content.GetValueForProperty("NetworkConfigurationAwsvpcConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).NetworkConfigurationAwsvpcConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsVpcConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceConnectConfigurationEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationEnabled = (bool?) content.GetValueForProperty("ServiceConnectConfigurationEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LogConfigurationLogDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationLogDriver = (string) content.GetValueForProperty("LogConfigurationLogDriver",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationLogDriver, global::System.Convert.ToString);
            }
            if (content.Contains("LogConfigurationSecretOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationSecretOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[]) content.GetValueForProperty("LogConfigurationSecretOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationSecretOption, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SecretTypeConverter.ConvertFrom));
            }
            if (content.Contains("AlarmName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmName = (string[]) content.GetValueForProperty("AlarmName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AlarmEnable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmEnable = (bool?) content.GetValueForProperty("AlarmEnable",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmEnable, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AlarmRollback"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmRollback = (bool?) content.GetValueForProperty("AlarmRollback",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmRollback, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DeploymentCircuitBreakerEnable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentCircuitBreakerEnable = (bool?) content.GetValueForProperty("DeploymentCircuitBreakerEnable",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentCircuitBreakerEnable, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DeploymentCircuitBreakerRollback"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentCircuitBreakerRollback = (bool?) content.GetValueForProperty("DeploymentCircuitBreakerRollback",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentCircuitBreakerRollback, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AwsvpcConfigurationAssignPublicIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationAssignPublicIP = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AwsVpcConfigurationAssignPublicIP?) content.GetValueForProperty("AwsvpcConfigurationAssignPublicIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationAssignPublicIP, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AwsVpcConfigurationAssignPublicIP.CreateFrom);
            }
            if (content.Contains("AwsvpcConfigurationSecurityGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationSecurityGroup = (string[]) content.GetValueForProperty("AwsvpcConfigurationSecurityGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationSecurityGroup, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AwsvpcConfigurationSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationSubnet = (string[]) content.GetValueForProperty("AwsvpcConfigurationSubnet",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationSubnet, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LogConfigurationOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) content.GetValueForProperty("LogConfigurationOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.AnyTypeConverter.ConvertFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEcsServiceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsEcsServiceProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DeploymentConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentConfiguration) content.GetValueForProperty("DeploymentConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeploymentConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeploymentController"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentController = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentController) content.GetValueForProperty("DeploymentController",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentController, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeploymentControllerTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).NetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INetworkConfiguration) content.GetValueForProperty("NetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).NetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceConnectConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectConfiguration) content.GetValueForProperty("ServiceConnectConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceConnectConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CapacityProviderStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).CapacityProviderStrategy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityProviderStrategyItem[]) content.GetValueForProperty("CapacityProviderStrategy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).CapacityProviderStrategy, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICapacityProviderStrategyItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CapacityProviderStrategyItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("Cluster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Cluster = (string) content.GetValueForProperty("Cluster",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Cluster, global::System.Convert.ToString);
            }
            if (content.Contains("DesiredCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DesiredCount = (int?) content.GetValueForProperty("DesiredCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DesiredCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EnableEcsManagedTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).EnableEcsManagedTag = (bool?) content.GetValueForProperty("EnableEcsManagedTag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).EnableEcsManagedTag, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableExecuteCommand"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).EnableExecuteCommand = (bool?) content.GetValueForProperty("EnableExecuteCommand",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).EnableExecuteCommand, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HealthCheckGracePeriodSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).HealthCheckGracePeriodSecond = (int?) content.GetValueForProperty("HealthCheckGracePeriodSecond",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).HealthCheckGracePeriodSecond, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LaunchType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LaunchType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LaunchType?) content.GetValueForProperty("LaunchType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LaunchType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LaunchType.CreateFrom);
            }
            if (content.Contains("LoadBalancer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LoadBalancer = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoadBalancer[]) content.GetValueForProperty("LoadBalancer",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LoadBalancer, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoadBalancer>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoadBalancerTypeConverter.ConvertFrom));
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementConstraint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlacementConstraint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementConstraint[]) content.GetValueForProperty("PlacementConstraint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlacementConstraint, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementConstraint>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlacementConstraintTypeConverter.ConvertFrom));
            }
            if (content.Contains("PlacementStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlacementStrategy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementStrategy[]) content.GetValueForProperty("PlacementStrategy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlacementStrategy, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementStrategy>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlacementStrategyTypeConverter.ConvertFrom));
            }
            if (content.Contains("PlatformVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlatformVersion = (string) content.GetValueForProperty("PlatformVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PlatformVersion, global::System.Convert.ToString);
            }
            if (content.Contains("PropagateTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PropagateTag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PropagateTags?) content.GetValueForProperty("PropagateTag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).PropagateTag, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PropagateTags.CreateFrom);
            }
            if (content.Contains("Role"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Role = (string) content.GetValueForProperty("Role",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Role, global::System.Convert.ToString);
            }
            if (content.Contains("SchedulingStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).SchedulingStrategy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SchedulingStrategy?) content.GetValueForProperty("SchedulingStrategy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).SchedulingStrategy, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SchedulingStrategy.CreateFrom);
            }
            if (content.Contains("ServiceArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceArn = (string) content.GetValueForProperty("ServiceArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceArn, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceName = (string) content.GetValueForProperty("ServiceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceName, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceRegistry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceRegistry = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceRegistry[]) content.GetValueForProperty("ServiceRegistry",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceRegistry, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceRegistry>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceRegistryTypeConverter.ConvertFrom));
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated27[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated27>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated27TypeConverter.ConvertFrom));
            }
            if (content.Contains("TaskDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).TaskDefinition = (string) content.GetValueForProperty("TaskDefinition",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).TaskDefinition, global::System.Convert.ToString);
            }
            if (content.Contains("VolumeConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).VolumeConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceVolumeConfiguration[]) content.GetValueForProperty("VolumeConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).VolumeConfiguration, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceVolumeConfiguration>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceVolumeConfigurationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DeploymentConfigurationMaximumPercent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationMaximumPercent = (int?) content.GetValueForProperty("DeploymentConfigurationMaximumPercent",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationMaximumPercent, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DeploymentControllerType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentControllerType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentControllerType?) content.GetValueForProperty("DeploymentControllerType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentControllerType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeploymentControllerType.CreateFrom);
            }
            if (content.Contains("ServiceConnectConfigurationLogConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationLogConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration) content.GetValueForProperty("ServiceConnectConfigurationLogConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationLogConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceConnectConfigurationNamespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationNamespace = (string) content.GetValueForProperty("ServiceConnectConfigurationNamespace",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationNamespace, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceConnectConfigurationService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationService = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectService[]) content.GetValueForProperty("ServiceConnectConfigurationService",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationService, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectService>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceConnectServiceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DeploymentConfigurationAlarm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationAlarm = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentAlarms) content.GetValueForProperty("DeploymentConfigurationAlarm",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationAlarm, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeploymentAlarmsTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeploymentConfigurationDeploymentCircuitBreaker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationDeploymentCircuitBreaker = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeploymentCircuitBreaker) content.GetValueForProperty("DeploymentConfigurationDeploymentCircuitBreaker",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationDeploymentCircuitBreaker, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeploymentCircuitBreakerTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeploymentConfigurationMinimumHealthyPercent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationMinimumHealthyPercent = (int?) content.GetValueForProperty("DeploymentConfigurationMinimumHealthyPercent",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentConfigurationMinimumHealthyPercent, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkConfigurationAwsvpcConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).NetworkConfigurationAwsvpcConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsVpcConfiguration) content.GetValueForProperty("NetworkConfigurationAwsvpcConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).NetworkConfigurationAwsvpcConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsVpcConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceConnectConfigurationEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationEnabled = (bool?) content.GetValueForProperty("ServiceConnectConfigurationEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).ServiceConnectConfigurationEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LogConfigurationLogDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationLogDriver = (string) content.GetValueForProperty("LogConfigurationLogDriver",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationLogDriver, global::System.Convert.ToString);
            }
            if (content.Contains("LogConfigurationSecretOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationSecretOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[]) content.GetValueForProperty("LogConfigurationSecretOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationSecretOption, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SecretTypeConverter.ConvertFrom));
            }
            if (content.Contains("AlarmName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmName = (string[]) content.GetValueForProperty("AlarmName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AlarmEnable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmEnable = (bool?) content.GetValueForProperty("AlarmEnable",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmEnable, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AlarmRollback"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmRollback = (bool?) content.GetValueForProperty("AlarmRollback",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AlarmRollback, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DeploymentCircuitBreakerEnable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentCircuitBreakerEnable = (bool?) content.GetValueForProperty("DeploymentCircuitBreakerEnable",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentCircuitBreakerEnable, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DeploymentCircuitBreakerRollback"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentCircuitBreakerRollback = (bool?) content.GetValueForProperty("DeploymentCircuitBreakerRollback",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).DeploymentCircuitBreakerRollback, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AwsvpcConfigurationAssignPublicIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationAssignPublicIP = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AwsVpcConfigurationAssignPublicIP?) content.GetValueForProperty("AwsvpcConfigurationAssignPublicIP",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationAssignPublicIP, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AwsVpcConfigurationAssignPublicIP.CreateFrom);
            }
            if (content.Contains("AwsvpcConfigurationSecurityGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationSecurityGroup = (string[]) content.GetValueForProperty("AwsvpcConfigurationSecurityGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationSecurityGroup, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AwsvpcConfigurationSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationSubnet = (string[]) content.GetValueForProperty("AwsvpcConfigurationSubnet",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).AwsvpcConfigurationSubnet, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LogConfigurationOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationOption = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) content.GetValueForProperty("LogConfigurationOption",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServicePropertiesInternal)this).LogConfigurationOption, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.AnyTypeConverter.ConvertFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEcsServiceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServiceProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServiceProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsEcsServiceProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEcsServiceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServiceProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServiceProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsEcsServiceProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsEcsServiceProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsEcsServiceProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsServiceProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsEcsService
    [System.ComponentModel.TypeConverter(typeof(AwsEcsServicePropertiesTypeConverter))]
    public partial interface IAwsEcsServiceProperties

    {

    }
}