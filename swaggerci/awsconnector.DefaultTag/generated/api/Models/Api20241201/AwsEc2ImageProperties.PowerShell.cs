// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsEc2Image</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsEc2ImagePropertiesTypeConverter))]
    public partial class AwsEc2ImageProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2ImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsEc2ImageProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Architecture"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Architecture = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue) content.GetValueForProperty("Architecture",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Architecture, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ArchitectureValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("BootMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BootMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue) content.GetValueForProperty("BootMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BootMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BootModeValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Hypervisor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Hypervisor = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue) content.GetValueForProperty("Hypervisor",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Hypervisor, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HypervisorTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("ImageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageTypeValuesEnumValue) content.GetValueForProperty("ImageType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageTypeValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("ImdsSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImdsSupport = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImdsSupportValuesEnumValue) content.GetValueForProperty("ImdsSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImdsSupport, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImdsSupportValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Platform"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Platform = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue) content.GetValueForProperty("Platform",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Platform, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("RootDeviceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue) content.GetValueForProperty("RootDeviceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageStateEnumValue) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StateReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReason = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason) content.GetValueForProperty("StateReason",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReason, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateReasonTypeConverter.ConvertFrom);
            }
            if (content.Contains("TpmSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).TpmSupport = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITpmSupportValuesEnumValue) content.GetValueForProperty("TpmSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).TpmSupport, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TpmSupportValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualizationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).VirtualizationType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue) content.GetValueForProperty("VirtualizationType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).VirtualizationType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VirtualizationTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("BlockDeviceMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BlockDeviceMapping = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping[]) content.GetValueForProperty("BlockDeviceMapping",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BlockDeviceMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BlockDeviceMappingTypeConverter.ConvertFrom));
            }
            if (content.Contains("CreationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).CreationDate = (string) content.GetValueForProperty("CreationDate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).CreationDate, global::System.Convert.ToString);
            }
            if (content.Contains("DeprecationTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).DeprecationTime = (string) content.GetValueForProperty("DeprecationTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).DeprecationTime, global::System.Convert.ToString);
            }
            if (content.Contains("DeregistrationProtection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).DeregistrationProtection = (string) content.GetValueForProperty("DeregistrationProtection",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).DeregistrationProtection, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("EnaSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).EnaSupport = (bool?) content.GetValueForProperty("EnaSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).EnaSupport, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageId = (string) content.GetValueForProperty("ImageId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageId, global::System.Convert.ToString);
            }
            if (content.Contains("ImageLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageLocation = (string) content.GetValueForProperty("ImageLocation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ImageOwnerAlias"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageOwnerAlias = (string) content.GetValueForProperty("ImageOwnerAlias",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageOwnerAlias, global::System.Convert.ToString);
            }
            if (content.Contains("KernelId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).KernelId = (string) content.GetValueForProperty("KernelId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).KernelId, global::System.Convert.ToString);
            }
            if (content.Contains("LastLaunchedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).LastLaunchedTime = (string) content.GetValueForProperty("LastLaunchedTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).LastLaunchedTime, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).OwnerId = (string) content.GetValueForProperty("OwnerId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).OwnerId, global::System.Convert.ToString);
            }
            if (content.Contains("PlatformDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).PlatformDetail = (string) content.GetValueForProperty("PlatformDetail",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).PlatformDetail, global::System.Convert.ToString);
            }
            if (content.Contains("ProductCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ProductCode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[]) content.GetValueForProperty("ProductCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ProductCode, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProductCodeTypeConverter.ConvertFrom));
            }
            if (content.Contains("Public"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Public = (bool?) content.GetValueForProperty("Public",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Public, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RamdiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RamdiskId = (string) content.GetValueForProperty("RamdiskId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RamdiskId, global::System.Convert.ToString);
            }
            if (content.Contains("RootDeviceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceName = (string) content.GetValueForProperty("RootDeviceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceInstanceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).SourceInstanceId = (string) content.GetValueForProperty("SourceInstanceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).SourceInstanceId, global::System.Convert.ToString);
            }
            if (content.Contains("SriovNetSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).SriovNetSupport = (string) content.GetValueForProperty("SriovNetSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).SriovNetSupport, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated12[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated12>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated12TypeConverter.ConvertFrom));
            }
            if (content.Contains("UsageOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).UsageOperation = (string) content.GetValueForProperty("UsageOperation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).UsageOperation, global::System.Convert.ToString);
            }
            if (content.Contains("StateReasonCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReasonCode = (string) content.GetValueForProperty("StateReasonCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReasonCode, global::System.Convert.ToString);
            }
            if (content.Contains("StateReasonMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReasonMessage = (string) content.GetValueForProperty("StateReasonMessage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReasonMessage, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualizationTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).VirtualizationTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType?) content.GetValueForProperty("VirtualizationTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).VirtualizationTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType.CreateFrom);
            }
            if (content.Contains("ArchitectureValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ArchitectureValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues?) content.GetValueForProperty("ArchitectureValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ArchitectureValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues.CreateFrom);
            }
            if (content.Contains("BootModeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BootModeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues?) content.GetValueForProperty("BootModeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BootModeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues.CreateFrom);
            }
            if (content.Contains("HypervisorValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).HypervisorValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType?) content.GetValueForProperty("HypervisorValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).HypervisorValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType.CreateFrom);
            }
            if (content.Contains("ImageTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTypeValues?) content.GetValueForProperty("ImageTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTypeValues.CreateFrom);
            }
            if (content.Contains("ImdSupportValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImdSupportValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImdsSupportValues?) content.GetValueForProperty("ImdSupportValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImdSupportValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImdsSupportValues.CreateFrom);
            }
            if (content.Contains("PlatformValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).PlatformValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues?) content.GetValueForProperty("PlatformValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).PlatformValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues.CreateFrom);
            }
            if (content.Contains("RootDeviceTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType?) content.GetValueForProperty("RootDeviceTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType.CreateFrom);
            }
            if (content.Contains("StateValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageState?) content.GetValueForProperty("StateValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageState.CreateFrom);
            }
            if (content.Contains("TpmSupportValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).TpmSupportValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TpmSupportValues?) content.GetValueForProperty("TpmSupportValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).TpmSupportValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TpmSupportValues.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2ImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsEc2ImageProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Architecture"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Architecture = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue) content.GetValueForProperty("Architecture",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Architecture, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ArchitectureValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("BootMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BootMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue) content.GetValueForProperty("BootMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BootMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BootModeValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Hypervisor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Hypervisor = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue) content.GetValueForProperty("Hypervisor",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Hypervisor, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HypervisorTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("ImageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageTypeValuesEnumValue) content.GetValueForProperty("ImageType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageTypeValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("ImdsSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImdsSupport = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImdsSupportValuesEnumValue) content.GetValueForProperty("ImdsSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImdsSupport, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImdsSupportValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Platform"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Platform = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue) content.GetValueForProperty("Platform",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Platform, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("RootDeviceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue) content.GetValueForProperty("RootDeviceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageStateEnumValue) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageStateEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("StateReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReason = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason) content.GetValueForProperty("StateReason",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReason, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateReasonTypeConverter.ConvertFrom);
            }
            if (content.Contains("TpmSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).TpmSupport = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITpmSupportValuesEnumValue) content.GetValueForProperty("TpmSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).TpmSupport, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TpmSupportValuesEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualizationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).VirtualizationType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue) content.GetValueForProperty("VirtualizationType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).VirtualizationType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VirtualizationTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("BlockDeviceMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BlockDeviceMapping = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping[]) content.GetValueForProperty("BlockDeviceMapping",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BlockDeviceMapping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BlockDeviceMappingTypeConverter.ConvertFrom));
            }
            if (content.Contains("CreationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).CreationDate = (string) content.GetValueForProperty("CreationDate",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).CreationDate, global::System.Convert.ToString);
            }
            if (content.Contains("DeprecationTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).DeprecationTime = (string) content.GetValueForProperty("DeprecationTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).DeprecationTime, global::System.Convert.ToString);
            }
            if (content.Contains("DeregistrationProtection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).DeregistrationProtection = (string) content.GetValueForProperty("DeregistrationProtection",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).DeregistrationProtection, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("EnaSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).EnaSupport = (bool?) content.GetValueForProperty("EnaSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).EnaSupport, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageId = (string) content.GetValueForProperty("ImageId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageId, global::System.Convert.ToString);
            }
            if (content.Contains("ImageLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageLocation = (string) content.GetValueForProperty("ImageLocation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ImageOwnerAlias"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageOwnerAlias = (string) content.GetValueForProperty("ImageOwnerAlias",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageOwnerAlias, global::System.Convert.ToString);
            }
            if (content.Contains("KernelId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).KernelId = (string) content.GetValueForProperty("KernelId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).KernelId, global::System.Convert.ToString);
            }
            if (content.Contains("LastLaunchedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).LastLaunchedTime = (string) content.GetValueForProperty("LastLaunchedTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).LastLaunchedTime, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).OwnerId = (string) content.GetValueForProperty("OwnerId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).OwnerId, global::System.Convert.ToString);
            }
            if (content.Contains("PlatformDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).PlatformDetail = (string) content.GetValueForProperty("PlatformDetail",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).PlatformDetail, global::System.Convert.ToString);
            }
            if (content.Contains("ProductCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ProductCode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[]) content.GetValueForProperty("ProductCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ProductCode, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProductCodeTypeConverter.ConvertFrom));
            }
            if (content.Contains("Public"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Public = (bool?) content.GetValueForProperty("Public",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Public, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RamdiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RamdiskId = (string) content.GetValueForProperty("RamdiskId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RamdiskId, global::System.Convert.ToString);
            }
            if (content.Contains("RootDeviceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceName = (string) content.GetValueForProperty("RootDeviceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceInstanceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).SourceInstanceId = (string) content.GetValueForProperty("SourceInstanceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).SourceInstanceId, global::System.Convert.ToString);
            }
            if (content.Contains("SriovNetSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).SriovNetSupport = (string) content.GetValueForProperty("SriovNetSupport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).SriovNetSupport, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated12[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated12>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated12TypeConverter.ConvertFrom));
            }
            if (content.Contains("UsageOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).UsageOperation = (string) content.GetValueForProperty("UsageOperation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).UsageOperation, global::System.Convert.ToString);
            }
            if (content.Contains("StateReasonCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReasonCode = (string) content.GetValueForProperty("StateReasonCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReasonCode, global::System.Convert.ToString);
            }
            if (content.Contains("StateReasonMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReasonMessage = (string) content.GetValueForProperty("StateReasonMessage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateReasonMessage, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualizationTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).VirtualizationTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType?) content.GetValueForProperty("VirtualizationTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).VirtualizationTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType.CreateFrom);
            }
            if (content.Contains("ArchitectureValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ArchitectureValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues?) content.GetValueForProperty("ArchitectureValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ArchitectureValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues.CreateFrom);
            }
            if (content.Contains("BootModeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BootModeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues?) content.GetValueForProperty("BootModeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).BootModeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues.CreateFrom);
            }
            if (content.Contains("HypervisorValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).HypervisorValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType?) content.GetValueForProperty("HypervisorValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).HypervisorValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType.CreateFrom);
            }
            if (content.Contains("ImageTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTypeValues?) content.GetValueForProperty("ImageTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImageTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTypeValues.CreateFrom);
            }
            if (content.Contains("ImdSupportValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImdSupportValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImdsSupportValues?) content.GetValueForProperty("ImdSupportValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).ImdSupportValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImdsSupportValues.CreateFrom);
            }
            if (content.Contains("PlatformValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).PlatformValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues?) content.GetValueForProperty("PlatformValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).PlatformValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues.CreateFrom);
            }
            if (content.Contains("RootDeviceTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType?) content.GetValueForProperty("RootDeviceTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).RootDeviceTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType.CreateFrom);
            }
            if (content.Contains("StateValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageState?) content.GetValueForProperty("StateValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).StateValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageState.CreateFrom);
            }
            if (content.Contains("TpmSupportValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).TpmSupportValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TpmSupportValues?) content.GetValueForProperty("TpmSupportValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal)this).TpmSupportValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TpmSupportValues.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2ImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImageProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImageProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsEc2ImageProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2ImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImageProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImageProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsEc2ImageProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsEc2ImageProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsEc2ImageProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImageProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsEc2Image
    [System.ComponentModel.TypeConverter(typeof(AwsEc2ImagePropertiesTypeConverter))]
    public partial interface IAwsEc2ImageProperties

    {

    }
}