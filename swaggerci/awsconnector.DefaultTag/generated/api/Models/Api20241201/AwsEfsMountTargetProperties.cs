// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEfsMountTarget</summary>
    public partial class AwsEfsMountTargetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEfsMountTargetProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEfsMountTargetPropertiesInternal
    {

        /// <summary>Backing field for <see cref="FileSystemId" /> property.</summary>
        private string _fileSystemId;

        /// <summary>The ID of the file system for which to create the mount target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string FileSystemId { get => this._fileSystemId; set => this._fileSystemId = value; }

        /// <summary>Backing field for <see cref="IPAddress" /> property.</summary>
        private string _iPAddress;

        /// <summary>Valid IPv4 address within the address range of the specified subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string IPAddress { get => this._iPAddress; set => this._iPAddress = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="SecurityGroup" /> property.</summary>
        private string[] _securityGroup;

        /// <summary>
        /// Up to five VPC security group IDs, of the form ``sg-xxxxxxxx``. These must be for the same VPC as subnet specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] SecurityGroup { get => this._securityGroup; set => this._securityGroup = value; }

        /// <summary>Backing field for <see cref="SubnetId" /> property.</summary>
        private string _subnetId;

        /// <summary>
        /// The ID of the subnet to add the mount target in. For One Zone file systems, use the subnet that is associated with the
        /// file system's Availability Zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SubnetId { get => this._subnetId; set => this._subnetId = value; }

        /// <summary>Creates an new <see cref="AwsEfsMountTargetProperties" /> instance.</summary>
        public AwsEfsMountTargetProperties()
        {

        }
    }
    /// Definition of awsEfsMountTarget
    public partial interface IAwsEfsMountTargetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>The ID of the file system for which to create the mount target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the file system for which to create the mount target.",
        SerializedName = @"fileSystemId",
        PossibleTypes = new [] { typeof(string) })]
        string FileSystemId { get; set; }
        /// <summary>Valid IPv4 address within the address range of the specified subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Valid IPv4 address within the address range of the specified subnet.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string IPAddress { get; set; }
        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>
        /// Up to five VPC security group IDs, of the form ``sg-xxxxxxxx``. These must be for the same VPC as subnet specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Up to five VPC security group IDs, of the form ``sg-xxxxxxxx``. These must be for the same VPC as subnet specified.",
        SerializedName = @"securityGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] SecurityGroup { get; set; }
        /// <summary>
        /// The ID of the subnet to add the mount target in. For One Zone file systems, use the subnet that is associated with the
        /// file system's Availability Zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the subnet to add the mount target in. For One Zone file systems, use the subnet that is associated with the file system's Availability Zone.",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get; set; }

    }
    /// Definition of awsEfsMountTarget
    internal partial interface IAwsEfsMountTargetPropertiesInternal

    {
        /// <summary>The ID of the file system for which to create the mount target.</summary>
        string FileSystemId { get; set; }
        /// <summary>Valid IPv4 address within the address range of the specified subnet.</summary>
        string IPAddress { get; set; }
        /// <summary>Property id</summary>
        string Id { get; set; }
        /// <summary>
        /// Up to five VPC security group IDs, of the form ``sg-xxxxxxxx``. These must be for the same VPC as subnet specified.
        /// </summary>
        string[] SecurityGroup { get; set; }
        /// <summary>
        /// The ID of the subnet to add the mount target in. For One Zone file systems, use the subnet that is associated with the
        /// file system's Availability Zone.
        /// </summary>
        string SubnetId { get; set; }

    }
}