// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ViewerCertificate</summary>
    public partial class ViewerCertificate :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificate,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificateInternal
    {

        /// <summary>Backing field for <see cref="AcmCertificateArn" /> property.</summary>
        private string _acmCertificateArn;

        /// <summary>
        /// In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html),
        /// provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East
        /// (N. Virginia) Region (``us-east-1``). If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AcmCertificateArn { get => this._acmCertificateArn; set => this._acmCertificateArn = value; }

        /// <summary>Backing field for <see cref="CloudFrontDefaultCertificate" /> property.</summary>
        private bool? _cloudFrontDefaultCertificate;

        /// <summary>
        /// If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``.
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following
        /// fields: + ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both) + ``MinimumProtocolVersion``
        /// + ``SslSupportMethod``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? CloudFrontDefaultCertificate { get => this._cloudFrontDefaultCertificate; set => this._cloudFrontDefaultCertificate = value; }

        /// <summary>Backing field for <see cref="IamCertificateId" /> property.</summary>
        private string _iamCertificateId;

        /// <summary>
        /// In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html),
        /// provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string IamCertificateId { get => this._iamCertificateId; set => this._iamCertificateId = value; }

        /// <summary>Backing field for <see cref="MinimumProtocolVersion" /> property.</summary>
        private string _minimumProtocolVersion;

        /// <summary>
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront
        /// to use for HTTPS connections with viewers. The security policy determines two settings: + The minimum SSL/TLS protocol
        /// that CloudFront can use to communicate with viewers. + The ciphers that CloudFront can use to encrypt the content that
        /// it returns to viewers. For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy)
        /// and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers)
        /// in the *Amazon CloudFront Developer Guide*. On the CloudFront console, this setting is called *Security Policy*. When
        /// you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation,
        /// the field name is ``SslSupportMethod``. Note the different capitalization.) If the distribution uses the CloudFront domain
        /// name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically
        /// sets the security policy to ``TLSv1`` regardless of the value that you set here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string MinimumProtocolVersion { get => this._minimumProtocolVersion; set => this._minimumProtocolVersion = value; }

        /// <summary>Backing field for <see cref="SslSupportMethod" /> property.</summary>
        private string _sslSupportMethod;

        /// <summary>
        /// In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.
        /// + ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication).
        /// This is recommended. Most browsers and clients support SNI. + ``vip`` – The distribution accepts HTTPS connections from
        /// all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges
        /// from CloudFront. + ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature
        /// by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront
        /// through the [Center](https://docs.aws.amazon.com/support/home). If the distribution uses the CloudFront domain name such
        /// as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SslSupportMethod { get => this._sslSupportMethod; set => this._sslSupportMethod = value; }

        /// <summary>Creates an new <see cref="ViewerCertificate" /> instance.</summary>
        public ViewerCertificate()
        {

        }
    }
    /// Definition of ViewerCertificate
    public partial interface IViewerCertificate :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html),
        /// provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East
        /// (N. Virginia) Region (``us-east-1``). If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (``us-east-1``). If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)",
        SerializedName = @"acmCertificateArn",
        PossibleTypes = new [] { typeof(string) })]
        string AcmCertificateArn { get; set; }
        /// <summary>
        /// If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``.
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following
        /// fields: + ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both) + ``MinimumProtocolVersion``
        /// + ``SslSupportMethod``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``. If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following fields:  +   ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both)   +   ``MinimumProtocolVersion``   +   ``SslSupportMethod``",
        SerializedName = @"cloudFrontDefaultCertificate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CloudFrontDefaultCertificate { get; set; }
        /// <summary>
        /// In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html),
        /// provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)",
        SerializedName = @"iamCertificateId",
        PossibleTypes = new [] { typeof(string) })]
        string IamCertificateId { get; set; }
        /// <summary>
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront
        /// to use for HTTPS connections with viewers. The security policy determines two settings: + The minimum SSL/TLS protocol
        /// that CloudFront can use to communicate with viewers. + The ciphers that CloudFront can use to encrypt the content that
        /// it returns to viewers. For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy)
        /// and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers)
        /// in the *Amazon CloudFront Developer Guide*. On the CloudFront console, this setting is called *Security Policy*. When
        /// you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation,
        /// the field name is ``SslSupportMethod``. Note the different capitalization.) If the distribution uses the CloudFront domain
        /// name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically
        /// sets the security policy to ``TLSv1`` regardless of the value that you set here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:  +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.  +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.   For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.  On the CloudFront console, this setting is called *Security Policy*.  When you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.) If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically sets the security policy to ``TLSv1`` regardless of the value that you set here.",
        SerializedName = @"minimumProtocolVersion",
        PossibleTypes = new [] { typeof(string) })]
        string MinimumProtocolVersion { get; set; }
        /// <summary>
        /// In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.
        /// + ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication).
        /// This is recommended. Most browsers and clients support SNI. + ``vip`` – The distribution accepts HTTPS connections from
        /// all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges
        /// from CloudFront. + ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature
        /// by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront
        /// through the [Center](https://docs.aws.amazon.com/support/home). If the distribution uses the CloudFront domain name such
        /// as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.  +   ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.  +   ``vip`` – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.  +   ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).   If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.",
        SerializedName = @"sslSupportMethod",
        PossibleTypes = new [] { typeof(string) })]
        string SslSupportMethod { get; set; }

    }
    /// Definition of ViewerCertificate
    internal partial interface IViewerCertificateInternal

    {
        /// <summary>
        /// In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html),
        /// provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East
        /// (N. Virginia) Region (``us-east-1``). If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        string AcmCertificateArn { get; set; }
        /// <summary>
        /// If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``.
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following
        /// fields: + ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both) + ``MinimumProtocolVersion``
        /// + ``SslSupportMethod``
        /// </summary>
        bool? CloudFrontDefaultCertificate { get; set; }
        /// <summary>
        /// In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html),
        /// provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        string IamCertificateId { get; set; }
        /// <summary>
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront
        /// to use for HTTPS connections with viewers. The security policy determines two settings: + The minimum SSL/TLS protocol
        /// that CloudFront can use to communicate with viewers. + The ciphers that CloudFront can use to encrypt the content that
        /// it returns to viewers. For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy)
        /// and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers)
        /// in the *Amazon CloudFront Developer Guide*. On the CloudFront console, this setting is called *Security Policy*. When
        /// you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation,
        /// the field name is ``SslSupportMethod``. Note the different capitalization.) If the distribution uses the CloudFront domain
        /// name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically
        /// sets the security policy to ``TLSv1`` regardless of the value that you set here.
        /// </summary>
        string MinimumProtocolVersion { get; set; }
        /// <summary>
        /// In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.
        /// + ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication).
        /// This is recommended. Most browsers and clients support SNI. + ``vip`` – The distribution accepts HTTPS connections from
        /// all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges
        /// from CloudFront. + ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature
        /// by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront
        /// through the [Center](https://docs.aws.amazon.com/support/home). If the distribution uses the CloudFront domain name such
        /// as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.
        /// </summary>
        string SslSupportMethod { get; set; }

    }
}