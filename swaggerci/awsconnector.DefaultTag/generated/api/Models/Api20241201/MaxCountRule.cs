// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of MaxCountRule</summary>
    public partial class MaxCountRule :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRule,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRuleInternal
    {

        /// <summary>Backing field for <see cref="DeleteSourceFromS3" /> property.</summary>
        private bool? _deleteSourceFromS3;

        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? DeleteSourceFromS3 { get => this._deleteSourceFromS3; set => this._deleteSourceFromS3 = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="MaxCount" /> property.</summary>
        private int? _maxCount;

        /// <summary>Specify the maximum number of application versions to retain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? MaxCount { get => this._maxCount; set => this._maxCount = value; }

        /// <summary>Creates an new <see cref="MaxCountRule" /> instance.</summary>
        public MaxCountRule()
        {

        }
    }
    /// Definition of MaxCountRule
    public partial interface IMaxCountRule :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.",
        SerializedName = @"deleteSourceFromS3",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify true to apply the rule, or false to disable it.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Specify the maximum number of application versions to retain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the maximum number of application versions to retain.",
        SerializedName = @"maxCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCount { get; set; }

    }
    /// Definition of MaxCountRule
    internal partial interface IMaxCountRuleInternal

    {
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        bool? DeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        bool? Enabled { get; set; }
        /// <summary>Specify the maximum number of application versions to retain.</summary>
        int? MaxCount { get; set; }

    }
}