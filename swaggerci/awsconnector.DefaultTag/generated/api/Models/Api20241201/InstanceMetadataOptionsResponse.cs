// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of InstanceMetadataOptionsResponse</summary>
    public partial class InstanceMetadataOptionsResponse :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponse,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal
    {

        /// <summary>Backing field for <see cref="HttpEndpoint" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataEndpointStateEnumValue _httpEndpoint;

        /// <summary>
        /// <p>Indicates whether the HTTP metadata endpoint on your instances is enabled or disabled.</p> <p>If the value is <code>disabled</code>,
        /// you cannot access your instance metadata.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataEndpointStateEnumValue HttpEndpoint { get => (this._httpEndpoint = this._httpEndpoint ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataEndpointStateEnumValue()); set => this._httpEndpoint = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState? HttpEndpointValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataEndpointStateEnumValueInternal)HttpEndpoint).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataEndpointStateEnumValueInternal)HttpEndpoint).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState)""); }

        /// <summary>Backing field for <see cref="HttpProtocolIpv6" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataProtocolStateEnumValue _httpProtocolIpv6;

        /// <summary>
        /// <p>Indicates whether the IPv6 endpoint for the instance metadata service is enabled or disabled.</p> <p>Default: <code>disabled</code>
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataProtocolStateEnumValue HttpProtocolIpv6 { get => (this._httpProtocolIpv6 = this._httpProtocolIpv6 ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataProtocolStateEnumValue()); set => this._httpProtocolIpv6 = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState? HttpProtocolIpv6Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataProtocolStateEnumValueInternal)HttpProtocolIpv6).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataProtocolStateEnumValueInternal)HttpProtocolIpv6).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState)""); }

        /// <summary>Backing field for <see cref="HttpPutResponseHopLimit" /> property.</summary>
        private int? _httpPutResponseHopLimit;

        /// <summary>
        /// <p>The maximum number of hops that the metadata token can travel.</p> <p>Possible values: Integers from <code>1</code>
        /// to <code>64</code> </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? HttpPutResponseHopLimit { get => this._httpPutResponseHopLimit; set => this._httpPutResponseHopLimit = value; }

        /// <summary>Backing field for <see cref="HttpToken" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHttpTokensStateEnumValue _httpToken;

        /// <summary>
        /// <p>Indicates whether IMDSv2 is required.</p> <ul> <li> <p> <code>optional</code> - IMDSv2 is optional, which means that
        /// you can use either IMDSv2 or IMDSv1.</p> </li> <li> <p> <code>required</code> - IMDSv2 is required, which means that IMDSv1
        /// is disabled, and you must use IMDSv2.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHttpTokensStateEnumValue HttpToken { get => (this._httpToken = this._httpToken ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HttpTokensStateEnumValue()); set => this._httpToken = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState? HttpTokenValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHttpTokensStateEnumValueInternal)HttpToken).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHttpTokensStateEnumValueInternal)HttpToken).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState)""); }

        /// <summary>Backing field for <see cref="InstanceMetadataTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataTagsStateEnumValue _instanceMetadataTag;

        /// <summary>
        /// <p>Indicates whether access to instance tags from the instance metadata is enabled or disabled. For more information,
        /// see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS'>Work with instance
        /// tags using the instance metadata</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataTagsStateEnumValue InstanceMetadataTag { get => (this._instanceMetadataTag = this._instanceMetadataTag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataTagsStateEnumValue()); set => this._instanceMetadataTag = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState? InstanceMetadataTagValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataTagsStateEnumValueInternal)InstanceMetadataTag).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataTagsStateEnumValueInternal)InstanceMetadataTag).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState)""); }

        /// <summary>Internal Acessors for HttpEndpoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataEndpointStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal.HttpEndpoint { get => (this._httpEndpoint = this._httpEndpoint ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataEndpointStateEnumValue()); set { {_httpEndpoint = value;} } }

        /// <summary>Internal Acessors for HttpProtocolIpv6</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataProtocolStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal.HttpProtocolIpv6 { get => (this._httpProtocolIpv6 = this._httpProtocolIpv6 ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataProtocolStateEnumValue()); set { {_httpProtocolIpv6 = value;} } }

        /// <summary>Internal Acessors for HttpToken</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHttpTokensStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal.HttpToken { get => (this._httpToken = this._httpToken ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HttpTokensStateEnumValue()); set { {_httpToken = value;} } }

        /// <summary>Internal Acessors for InstanceMetadataTag</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataTagsStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal.InstanceMetadataTag { get => (this._instanceMetadataTag = this._instanceMetadataTag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataTagsStateEnumValue()); set { {_instanceMetadataTag = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsResponseInternal.State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataOptionsStateEnumValue()); set { {_state = value;} } }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsStateEnumValue _state;

        /// <summary>
        /// <p>The state of the metadata option changes.</p> <p> <code>pending</code> - The metadata options are being updated and
        /// the instance is not ready to process metadata traffic with the new selection.</p> <p> <code>applied</code> - The metadata
        /// options have been successfully applied on the instance.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsStateEnumValue State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataOptionsStateEnumValue()); set => this._state = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState? StateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsStateEnumValueInternal)State).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsStateEnumValueInternal)State).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState)""); }

        /// <summary>Creates an new <see cref="InstanceMetadataOptionsResponse" /> instance.</summary>
        public InstanceMetadataOptionsResponse()
        {

        }
    }
    /// Definition of InstanceMetadataOptionsResponse
    public partial interface IInstanceMetadataOptionsResponse :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState? HttpEndpointValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState? HttpProtocolIpv6Value { get; set; }
        /// <summary>
        /// <p>The maximum number of hops that the metadata token can travel.</p> <p>Possible values: Integers from <code>1</code>
        /// to <code>64</code> </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The maximum number of hops that the metadata token can travel.</p> <p>Possible values: Integers from <code>1</code> to <code>64</code> </p>",
        SerializedName = @"httpPutResponseHopLimit",
        PossibleTypes = new [] { typeof(int) })]
        int? HttpPutResponseHopLimit { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState? HttpTokenValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState? InstanceMetadataTagValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState? StateValue { get; set; }

    }
    /// Definition of InstanceMetadataOptionsResponse
    internal partial interface IInstanceMetadataOptionsResponseInternal

    {
        /// <summary>
        /// <p>Indicates whether the HTTP metadata endpoint on your instances is enabled or disabled.</p> <p>If the value is <code>disabled</code>,
        /// you cannot access your instance metadata.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataEndpointStateEnumValue HttpEndpoint { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataEndpointState? HttpEndpointValue { get; set; }
        /// <summary>
        /// <p>Indicates whether the IPv6 endpoint for the instance metadata service is enabled or disabled.</p> <p>Default: <code>disabled</code>
        /// </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataProtocolStateEnumValue HttpProtocolIpv6 { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataProtocolState? HttpProtocolIpv6Value { get; set; }
        /// <summary>
        /// <p>The maximum number of hops that the metadata token can travel.</p> <p>Possible values: Integers from <code>1</code>
        /// to <code>64</code> </p>
        /// </summary>
        int? HttpPutResponseHopLimit { get; set; }
        /// <summary>
        /// <p>Indicates whether IMDSv2 is required.</p> <ul> <li> <p> <code>optional</code> - IMDSv2 is optional, which means that
        /// you can use either IMDSv2 or IMDSv1.</p> </li> <li> <p> <code>required</code> - IMDSv2 is required, which means that IMDSv1
        /// is disabled, and you must use IMDSv2.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHttpTokensStateEnumValue HttpToken { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HttpTokensState? HttpTokenValue { get; set; }
        /// <summary>
        /// <p>Indicates whether access to instance tags from the instance metadata is enabled or disabled. For more information,
        /// see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS'>Work with instance
        /// tags using the instance metadata</a>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataTagsStateEnumValue InstanceMetadataTag { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataTagsState? InstanceMetadataTagValue { get; set; }
        /// <summary>
        /// <p>The state of the metadata option changes.</p> <p> <code>pending</code> - The metadata options are being updated and
        /// the instance is not ready to process metadata traffic with the new selection.</p> <p> <code>applied</code> - The metadata
        /// options have been successfully applied on the instance.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMetadataOptionsStateEnumValue State { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.InstanceMetadataOptionsState? StateValue { get; set; }

    }
}