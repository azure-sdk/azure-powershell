// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEc2Image</summary>
    public partial class AwsEc2ImageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImageProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Architecture" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue _architecture;

        /// <summary><p>The architecture of the image.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue Architecture { get => (this._architecture = this._architecture ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ArchitectureValuesEnumValue()); set => this._architecture = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues? ArchitectureValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValueInternal)Architecture).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValueInternal)Architecture).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues)""); }

        /// <summary>Backing field for <see cref="BlockDeviceMapping" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping[] _blockDeviceMapping;

        /// <summary><p>Any block device mapping entries.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping[] BlockDeviceMapping { get => this._blockDeviceMapping; set => this._blockDeviceMapping = value; }

        /// <summary>Backing field for <see cref="BootMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue _bootMode;

        /// <summary>
        /// <p>The boot mode of the image. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html'>Boot
        /// modes</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue BootMode { get => (this._bootMode = this._bootMode ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BootModeValuesEnumValue()); set => this._bootMode = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues? BootModeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValueInternal)BootMode).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValueInternal)BootMode).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues)""); }

        /// <summary>Backing field for <see cref="CreationDate" /> property.</summary>
        private string _creationDate;

        /// <summary><p>The date and time the image was created.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string CreationDate { get => this._creationDate; set => this._creationDate = value; }

        /// <summary>Backing field for <see cref="DeprecationTime" /> property.</summary>
        private string _deprecationTime;

        /// <summary>
        /// <p>The date and time to deprecate the AMI, in UTC, in the following format: <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z.
        /// If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DeprecationTime { get => this._deprecationTime; set => this._deprecationTime = value; }

        /// <summary>Backing field for <see cref="DeregistrationProtection" /> property.</summary>
        private string _deregistrationProtection;

        /// <summary><p>Indicates whether deregistration protection is enabled for the AMI.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DeregistrationProtection { get => this._deregistrationProtection; set => this._deregistrationProtection = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary><p>The description of the AMI that was provided during image creation.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="EnaSupport" /> property.</summary>
        private bool? _enaSupport;

        /// <summary><p>Specifies whether enhanced networking with ENA is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? EnaSupport { get => this._enaSupport; set => this._enaSupport = value; }

        /// <summary>Backing field for <see cref="Hypervisor" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue _hypervisor;

        /// <summary>
        /// <p>The hypervisor type of the image. Only <code>xen</code> is supported. <code>ovm</code> is not supported.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue Hypervisor { get => (this._hypervisor = this._hypervisor ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HypervisorTypeEnumValue()); set => this._hypervisor = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType? HypervisorValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValueInternal)Hypervisor).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValueInternal)Hypervisor).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType)""); }

        /// <summary>Backing field for <see cref="ImageId" /> property.</summary>
        private string _imageId;

        /// <summary><p>The ID of the AMI.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ImageId { get => this._imageId; set => this._imageId = value; }

        /// <summary>Backing field for <see cref="ImageLocation" /> property.</summary>
        private string _imageLocation;

        /// <summary><p>The location of the AMI.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ImageLocation { get => this._imageLocation; set => this._imageLocation = value; }

        /// <summary>Backing field for <see cref="ImageOwnerAlias" /> property.</summary>
        private string _imageOwnerAlias;

        /// <summary><p>The owner alias (<code>amazon</code> | <code>aws-marketplace</code>).</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ImageOwnerAlias { get => this._imageOwnerAlias; set => this._imageOwnerAlias = value; }

        /// <summary>Backing field for <see cref="ImageType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageTypeValuesEnumValue _imageType;

        /// <summary><p>The type of image.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageTypeValuesEnumValue ImageType { get => (this._imageType = this._imageType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageTypeValuesEnumValue()); set => this._imageType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTypeValues? ImageTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageTypeValuesEnumValueInternal)ImageType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageTypeValuesEnumValueInternal)ImageType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTypeValues)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImdsSupportValues? ImdSupportValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImdsSupportValuesEnumValueInternal)ImdsSupport).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImdsSupportValuesEnumValueInternal)ImdsSupport).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImdsSupportValues)""); }

        /// <summary>Backing field for <see cref="ImdsSupport" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImdsSupportValuesEnumValue _imdsSupport;

        /// <summary>
        /// <p>If <code>v2.0</code>, it indicates that IMDSv2 is specified in the AMI. Instances launched from this AMI will have
        /// <code>HttpTokens</code> automatically set to <code>required</code> so that, by default, the instance requires that IMDSv2
        /// is used when requesting instance metadata. In addition, <code>HttpPutResponseHopLimit</code> is set to <code>2</code>.
        /// For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration'>Configure
        /// the AMI</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImdsSupportValuesEnumValue ImdsSupport { get => (this._imdsSupport = this._imdsSupport ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImdsSupportValuesEnumValue()); set => this._imdsSupport = value; }

        /// <summary>Backing field for <see cref="KernelId" /> property.</summary>
        private string _kernelId;

        /// <summary>
        /// <p>The kernel associated with the image, if any. Only applicable for machine images.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string KernelId { get => this._kernelId; set => this._kernelId = value; }

        /// <summary>Backing field for <see cref="LastLaunchedTime" /> property.</summary>
        private string _lastLaunchedTime;

        /// <summary>
        /// <p>The date and time, in <a href='http://www.iso.org/iso/iso8601'>ISO 8601 date-time format</a>, when the AMI was last
        /// used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage
        /// is reported.</p> <note> <p> <code>lastLaunchedTime</code> data is available starting April 2017.</p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LastLaunchedTime { get => this._lastLaunchedTime; set => this._lastLaunchedTime = value; }

        /// <summary>Internal Acessors for Architecture</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal.Architecture { get => (this._architecture = this._architecture ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ArchitectureValuesEnumValue()); set { {_architecture = value;} } }

        /// <summary>Internal Acessors for BootMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal.BootMode { get => (this._bootMode = this._bootMode ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BootModeValuesEnumValue()); set { {_bootMode = value;} } }

        /// <summary>Internal Acessors for Hypervisor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal.Hypervisor { get => (this._hypervisor = this._hypervisor ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HypervisorTypeEnumValue()); set { {_hypervisor = value;} } }

        /// <summary>Internal Acessors for ImageType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageTypeValuesEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal.ImageType { get => (this._imageType = this._imageType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageTypeValuesEnumValue()); set { {_imageType = value;} } }

        /// <summary>Internal Acessors for ImdsSupport</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImdsSupportValuesEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal.ImdsSupport { get => (this._imdsSupport = this._imdsSupport ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImdsSupportValuesEnumValue()); set { {_imdsSupport = value;} } }

        /// <summary>Internal Acessors for Platform</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal.Platform { get => (this._platform = this._platform ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformValuesEnumValue()); set { {_platform = value;} } }

        /// <summary>Internal Acessors for RootDeviceType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal.RootDeviceType { get => (this._rootDeviceType = this._rootDeviceType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeEnumValue()); set { {_rootDeviceType = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal.State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageStateEnumValue()); set { {_state = value;} } }

        /// <summary>Internal Acessors for StateReason</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal.StateReason { get => (this._stateReason = this._stateReason ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateReason()); set { {_stateReason = value;} } }

        /// <summary>Internal Acessors for TpmSupport</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITpmSupportValuesEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal.TpmSupport { get => (this._tpmSupport = this._tpmSupport ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TpmSupportValuesEnumValue()); set { {_tpmSupport = value;} } }

        /// <summary>Internal Acessors for VirtualizationType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2ImagePropertiesInternal.VirtualizationType { get => (this._virtualizationType = this._virtualizationType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VirtualizationTypeEnumValue()); set { {_virtualizationType = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary><p>The name of the AMI that was provided during image creation.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="OwnerId" /> property.</summary>
        private string _ownerId;

        /// <summary><p>The ID of the Amazon Web Services account that owns the image.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OwnerId { get => this._ownerId; set => this._ownerId = value; }

        /// <summary>Backing field for <see cref="Platform" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue _platform;

        /// <summary>
        /// <p>This value is set to <code>windows</code> for Windows AMIs; otherwise, it is blank.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue Platform { get => (this._platform = this._platform ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformValuesEnumValue()); set => this._platform = value; }

        /// <summary>Backing field for <see cref="PlatformDetail" /> property.</summary>
        private string _platformDetail;

        /// <summary>
        /// <p>The platform details associated with the billing code of the AMI. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html'>Understand
        /// AMI billing information</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PlatformDetail { get => this._platformDetail; set => this._platformDetail = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues? PlatformValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValueInternal)Platform).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValueInternal)Platform).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues)""); }

        /// <summary>Backing field for <see cref="ProductCode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[] _productCode;

        /// <summary><p>Any product codes associated with the AMI.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[] ProductCode { get => this._productCode; set => this._productCode = value; }

        /// <summary>Backing field for <see cref="Public" /> property.</summary>
        private bool? _public;

        /// <summary>
        /// <p>Indicates whether the image has public launch permissions. The value is <code>true</code> if this image has public
        /// launch permissions or <code>false</code> if it has only implicit and explicit launch permissions.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Public { get => this._public; set => this._public = value; }

        /// <summary>Backing field for <see cref="RamdiskId" /> property.</summary>
        private string _ramdiskId;

        /// <summary>
        /// <p>The RAM disk associated with the image, if any. Only applicable for machine images.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RamdiskId { get => this._ramdiskId; set => this._ramdiskId = value; }

        /// <summary>Backing field for <see cref="RootDeviceName" /> property.</summary>
        private string _rootDeviceName;

        /// <summary>
        /// <p>The device name of the root device volume (for example, <code>/dev/sda1</code>).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RootDeviceName { get => this._rootDeviceName; set => this._rootDeviceName = value; }

        /// <summary>Backing field for <see cref="RootDeviceType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue _rootDeviceType;

        /// <summary>
        /// <p>The type of root device used by the AMI. The AMI can use an Amazon EBS volume or an instance store volume.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue RootDeviceType { get => (this._rootDeviceType = this._rootDeviceType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeEnumValue()); set => this._rootDeviceType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType? RootDeviceTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValueInternal)RootDeviceType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValueInternal)RootDeviceType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType)""); }

        /// <summary>Backing field for <see cref="SourceInstanceId" /> property.</summary>
        private string _sourceInstanceId;

        /// <summary>
        /// <p>The ID of the instance that the AMI was created from if the AMI was created using <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html'>CreateImage</a>.
        /// This field only appears if the AMI was created using CreateImage.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SourceInstanceId { get => this._sourceInstanceId; set => this._sourceInstanceId = value; }

        /// <summary>Backing field for <see cref="SriovNetSupport" /> property.</summary>
        private string _sriovNetSupport;

        /// <summary>
        /// <p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SriovNetSupport { get => this._sriovNetSupport; set => this._sriovNetSupport = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageStateEnumValue _state;

        /// <summary>
        /// <p>The current state of the AMI. If the state is <code>available</code>, the image is successfully registered and can
        /// be used to launch an instance.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageStateEnumValue State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageStateEnumValue()); set => this._state = value; }

        /// <summary>Backing field for <see cref="StateReason" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason _stateReason;

        /// <summary><p>The reason for the state change.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason StateReason { get => (this._stateReason = this._stateReason ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateReason()); set => this._stateReason = value; }

        /// <summary><p>The reason code for the state change.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string StateReasonCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReasonInternal)StateReason).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReasonInternal)StateReason).Code = value ?? null; }

        /// <summary>
        /// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient
        /// capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error
        /// caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was
        /// stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped
        /// because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity
        /// or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance
        /// was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded
        /// available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>:
        /// The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>:
        /// The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client
        /// error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>:
        /// The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated
        /// on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon
        /// EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage
        /// was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string StateReasonMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReasonInternal)StateReason).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReasonInternal)StateReason).Message = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageState? StateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageStateEnumValueInternal)State).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageStateEnumValueInternal)State).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageState)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated12[] _tag;

        /// <summary><p>Any tags assigned to the image.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated12[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="TpmSupport" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITpmSupportValuesEnumValue _tpmSupport;

        /// <summary>
        /// <p>If the image is configured for NitroTPM support, the value is <code>v2.0</code>. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html'>NitroTPM</a>
        /// in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITpmSupportValuesEnumValue TpmSupport { get => (this._tpmSupport = this._tpmSupport ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TpmSupportValuesEnumValue()); set => this._tpmSupport = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TpmSupportValues? TpmSupportValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITpmSupportValuesEnumValueInternal)TpmSupport).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITpmSupportValuesEnumValueInternal)TpmSupport).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TpmSupportValues)""); }

        /// <summary>Backing field for <see cref="UsageOperation" /> property.</summary>
        private string _usageOperation;

        /// <summary>
        /// <p>The operation of the Amazon EC2 instance and the billing code that is associated with the AMI. <code>usageOperation</code>
        /// corresponds to the <a href='https://docs.aws.amazon.com/cur/latest/userguide/Lineitem-columns.html#Lineitem-details-O-Operation'>lineitem/Operation</a>
        /// column on your Amazon Web Services Cost and Usage Report and in the <a href='https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/price-changes.html'>Amazon
        /// Web Services Price List API</a>. You can view these fields on the <b>Instances</b> or <b>AMIs</b> pages in the Amazon
        /// EC2 console, or in the responses that are returned by the <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html'>DescribeImages</a>
        /// command in the Amazon EC2 API, or the <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html'>describe-images</a>
        /// command in the CLI.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string UsageOperation { get => this._usageOperation; set => this._usageOperation = value; }

        /// <summary>Backing field for <see cref="VirtualizationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue _virtualizationType;

        /// <summary><p>The type of virtualization of the AMI.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue VirtualizationType { get => (this._virtualizationType = this._virtualizationType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VirtualizationTypeEnumValue()); set => this._virtualizationType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType? VirtualizationTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValueInternal)VirtualizationType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValueInternal)VirtualizationType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType)""); }

        /// <summary>Creates an new <see cref="AwsEc2ImageProperties" /> instance.</summary>
        public AwsEc2ImageProperties()
        {

        }
    }
    /// Definition of awsEc2Image
    public partial interface IAwsEc2ImageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues? ArchitectureValue { get; set; }
        /// <summary><p>Any block device mapping entries.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Any block device mapping entries.</p>",
        SerializedName = @"blockDeviceMappings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping[] BlockDeviceMapping { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues? BootModeValue { get; set; }
        /// <summary><p>The date and time the image was created.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date and time the image was created.</p>",
        SerializedName = @"creationDate",
        PossibleTypes = new [] { typeof(string) })]
        string CreationDate { get; set; }
        /// <summary>
        /// <p>The date and time to deprecate the AMI, in UTC, in the following format: <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z.
        /// If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date and time to deprecate the AMI, in UTC, in the following format: <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute.</p>",
        SerializedName = @"deprecationTime",
        PossibleTypes = new [] { typeof(string) })]
        string DeprecationTime { get; set; }
        /// <summary><p>Indicates whether deregistration protection is enabled for the AMI.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether deregistration protection is enabled for the AMI.</p>",
        SerializedName = @"deregistrationProtection",
        PossibleTypes = new [] { typeof(string) })]
        string DeregistrationProtection { get; set; }
        /// <summary><p>The description of the AMI that was provided during image creation.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The description of the AMI that was provided during image creation.</p>",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary><p>Specifies whether enhanced networking with ENA is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether enhanced networking with ENA is enabled.</p>",
        SerializedName = @"enaSupport",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnaSupport { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType? HypervisorValue { get; set; }
        /// <summary><p>The ID of the AMI.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the AMI.</p>",
        SerializedName = @"imageId",
        PossibleTypes = new [] { typeof(string) })]
        string ImageId { get; set; }
        /// <summary><p>The location of the AMI.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The location of the AMI.</p>",
        SerializedName = @"imageLocation",
        PossibleTypes = new [] { typeof(string) })]
        string ImageLocation { get; set; }
        /// <summary><p>The owner alias (<code>amazon</code> | <code>aws-marketplace</code>).</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The owner alias (<code>amazon</code> | <code>aws-marketplace</code>).</p>",
        SerializedName = @"imageOwnerAlias",
        PossibleTypes = new [] { typeof(string) })]
        string ImageOwnerAlias { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTypeValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTypeValues? ImageTypeValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImdsSupportValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImdsSupportValues? ImdSupportValue { get; set; }
        /// <summary>
        /// <p>The kernel associated with the image, if any. Only applicable for machine images.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The kernel associated with the image, if any. Only applicable for machine images.</p>",
        SerializedName = @"kernelId",
        PossibleTypes = new [] { typeof(string) })]
        string KernelId { get; set; }
        /// <summary>
        /// <p>The date and time, in <a href='http://www.iso.org/iso/iso8601'>ISO 8601 date-time format</a>, when the AMI was last
        /// used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage
        /// is reported.</p> <note> <p> <code>lastLaunchedTime</code> data is available starting April 2017.</p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date and time, in <a href='http://www.iso.org/iso/iso8601'>ISO 8601 date-time format</a>, when the AMI was last used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage is reported.</p> <note> <p> <code>lastLaunchedTime</code> data is available starting April 2017.</p> </note>",
        SerializedName = @"lastLaunchedTime",
        PossibleTypes = new [] { typeof(string) })]
        string LastLaunchedTime { get; set; }
        /// <summary><p>The name of the AMI that was provided during image creation.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the AMI that was provided during image creation.</p>",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary><p>The ID of the Amazon Web Services account that owns the image.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the Amazon Web Services account that owns the image.</p>",
        SerializedName = @"ownerId",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerId { get; set; }
        /// <summary>
        /// <p>The platform details associated with the billing code of the AMI. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html'>Understand
        /// AMI billing information</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The platform details associated with the billing code of the AMI. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html'>Understand AMI billing information</a> in the <i>Amazon EC2 User Guide</i>.</p>",
        SerializedName = @"platformDetails",
        PossibleTypes = new [] { typeof(string) })]
        string PlatformDetail { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues? PlatformValue { get; set; }
        /// <summary><p>Any product codes associated with the AMI.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Any product codes associated with the AMI.</p>",
        SerializedName = @"productCodes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[] ProductCode { get; set; }
        /// <summary>
        /// <p>Indicates whether the image has public launch permissions. The value is <code>true</code> if this image has public
        /// launch permissions or <code>false</code> if it has only implicit and explicit launch permissions.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the image has public launch permissions. The value is <code>true</code> if this image has public launch permissions or <code>false</code> if it has only implicit and explicit launch permissions.</p>",
        SerializedName = @"public",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Public { get; set; }
        /// <summary>
        /// <p>The RAM disk associated with the image, if any. Only applicable for machine images.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The RAM disk associated with the image, if any. Only applicable for machine images.</p>",
        SerializedName = @"ramdiskId",
        PossibleTypes = new [] { typeof(string) })]
        string RamdiskId { get; set; }
        /// <summary>
        /// <p>The device name of the root device volume (for example, <code>/dev/sda1</code>).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The device name of the root device volume (for example, <code>/dev/sda1</code>).</p>",
        SerializedName = @"rootDeviceName",
        PossibleTypes = new [] { typeof(string) })]
        string RootDeviceName { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType? RootDeviceTypeValue { get; set; }
        /// <summary>
        /// <p>The ID of the instance that the AMI was created from if the AMI was created using <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html'>CreateImage</a>.
        /// This field only appears if the AMI was created using CreateImage.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the instance that the AMI was created from if the AMI was created using <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html'>CreateImage</a>. This field only appears if the AMI was created using CreateImage.</p>",
        SerializedName = @"sourceInstanceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceInstanceId { get; set; }
        /// <summary>
        /// <p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>",
        SerializedName = @"sriovNetSupport",
        PossibleTypes = new [] { typeof(string) })]
        string SriovNetSupport { get; set; }
        /// <summary><p>The reason code for the state change.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The reason code for the state change.</p>",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string StateReasonCode { get; set; }
        /// <summary>
        /// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient
        /// capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error
        /// caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was
        /// stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped
        /// because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity
        /// or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance
        /// was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded
        /// available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>:
        /// The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>:
        /// The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client
        /// error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>:
        /// The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated
        /// on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon
        /// EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage
        /// was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string StateReasonMessage { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageState? StateValue { get; set; }
        /// <summary><p>Any tags assigned to the image.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Any tags assigned to the image.</p>",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated12) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated12[] Tag { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TpmSupportValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TpmSupportValues? TpmSupportValue { get; set; }
        /// <summary>
        /// <p>The operation of the Amazon EC2 instance and the billing code that is associated with the AMI. <code>usageOperation</code>
        /// corresponds to the <a href='https://docs.aws.amazon.com/cur/latest/userguide/Lineitem-columns.html#Lineitem-details-O-Operation'>lineitem/Operation</a>
        /// column on your Amazon Web Services Cost and Usage Report and in the <a href='https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/price-changes.html'>Amazon
        /// Web Services Price List API</a>. You can view these fields on the <b>Instances</b> or <b>AMIs</b> pages in the Amazon
        /// EC2 console, or in the responses that are returned by the <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html'>DescribeImages</a>
        /// command in the Amazon EC2 API, or the <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html'>describe-images</a>
        /// command in the CLI.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The operation of the Amazon EC2 instance and the billing code that is associated with the AMI. <code>usageOperation</code> corresponds to the <a href='https://docs.aws.amazon.com/cur/latest/userguide/Lineitem-columns.html#Lineitem-details-O-Operation'>lineitem/Operation</a> column on your Amazon Web Services Cost and Usage Report and in the <a href='https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/price-changes.html'>Amazon Web Services Price List API</a>. You can view these fields on the <b>Instances</b> or <b>AMIs</b> pages in the Amazon EC2 console, or in the responses that are returned by the <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html'>DescribeImages</a> command in the Amazon EC2 API, or the <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html'>describe-images</a> command in the CLI.</p>",
        SerializedName = @"usageOperation",
        PossibleTypes = new [] { typeof(string) })]
        string UsageOperation { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType? VirtualizationTypeValue { get; set; }

    }
    /// Definition of awsEc2Image
    internal partial interface IAwsEc2ImagePropertiesInternal

    {
        /// <summary><p>The architecture of the image.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArchitectureValuesEnumValue Architecture { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArchitectureValues? ArchitectureValue { get; set; }
        /// <summary><p>Any block device mapping entries.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping[] BlockDeviceMapping { get; set; }
        /// <summary>
        /// <p>The boot mode of the image. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html'>Boot
        /// modes</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBootModeValuesEnumValue BootMode { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BootModeValues? BootModeValue { get; set; }
        /// <summary><p>The date and time the image was created.</p></summary>
        string CreationDate { get; set; }
        /// <summary>
        /// <p>The date and time to deprecate the AMI, in UTC, in the following format: <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z.
        /// If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute.</p>
        /// </summary>
        string DeprecationTime { get; set; }
        /// <summary><p>Indicates whether deregistration protection is enabled for the AMI.</p></summary>
        string DeregistrationProtection { get; set; }
        /// <summary><p>The description of the AMI that was provided during image creation.</p></summary>
        string Description { get; set; }
        /// <summary><p>Specifies whether enhanced networking with ENA is enabled.</p></summary>
        bool? EnaSupport { get; set; }
        /// <summary>
        /// <p>The hypervisor type of the image. Only <code>xen</code> is supported. <code>ovm</code> is not supported.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHypervisorTypeEnumValue Hypervisor { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HypervisorType? HypervisorValue { get; set; }
        /// <summary><p>The ID of the AMI.</p></summary>
        string ImageId { get; set; }
        /// <summary><p>The location of the AMI.</p></summary>
        string ImageLocation { get; set; }
        /// <summary><p>The owner alias (<code>amazon</code> | <code>aws-marketplace</code>).</p></summary>
        string ImageOwnerAlias { get; set; }
        /// <summary><p>The type of image.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageTypeValuesEnumValue ImageType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTypeValues? ImageTypeValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImdsSupportValues? ImdSupportValue { get; set; }
        /// <summary>
        /// <p>If <code>v2.0</code>, it indicates that IMDSv2 is specified in the AMI. Instances launched from this AMI will have
        /// <code>HttpTokens</code> automatically set to <code>required</code> so that, by default, the instance requires that IMDSv2
        /// is used when requesting instance metadata. In addition, <code>HttpPutResponseHopLimit</code> is set to <code>2</code>.
        /// For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration'>Configure
        /// the AMI</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImdsSupportValuesEnumValue ImdsSupport { get; set; }
        /// <summary>
        /// <p>The kernel associated with the image, if any. Only applicable for machine images.</p>
        /// </summary>
        string KernelId { get; set; }
        /// <summary>
        /// <p>The date and time, in <a href='http://www.iso.org/iso/iso8601'>ISO 8601 date-time format</a>, when the AMI was last
        /// used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage
        /// is reported.</p> <note> <p> <code>lastLaunchedTime</code> data is available starting April 2017.</p> </note>
        /// </summary>
        string LastLaunchedTime { get; set; }
        /// <summary><p>The name of the AMI that was provided during image creation.</p></summary>
        string Name { get; set; }
        /// <summary><p>The ID of the Amazon Web Services account that owns the image.</p></summary>
        string OwnerId { get; set; }
        /// <summary>
        /// <p>This value is set to <code>windows</code> for Windows AMIs; otherwise, it is blank.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlatformValuesEnumValue Platform { get; set; }
        /// <summary>
        /// <p>The platform details associated with the billing code of the AMI. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html'>Understand
        /// AMI billing information</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        string PlatformDetail { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PlatformValues? PlatformValue { get; set; }
        /// <summary><p>Any product codes associated with the AMI.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[] ProductCode { get; set; }
        /// <summary>
        /// <p>Indicates whether the image has public launch permissions. The value is <code>true</code> if this image has public
        /// launch permissions or <code>false</code> if it has only implicit and explicit launch permissions.</p>
        /// </summary>
        bool? Public { get; set; }
        /// <summary>
        /// <p>The RAM disk associated with the image, if any. Only applicable for machine images.</p>
        /// </summary>
        string RamdiskId { get; set; }
        /// <summary>
        /// <p>The device name of the root device volume (for example, <code>/dev/sda1</code>).</p>
        /// </summary>
        string RootDeviceName { get; set; }
        /// <summary>
        /// <p>The type of root device used by the AMI. The AMI can use an Amazon EBS volume or an instance store volume.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeviceTypeEnumValue RootDeviceType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DeviceType? RootDeviceTypeValue { get; set; }
        /// <summary>
        /// <p>The ID of the instance that the AMI was created from if the AMI was created using <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html'>CreateImage</a>.
        /// This field only appears if the AMI was created using CreateImage.</p>
        /// </summary>
        string SourceInstanceId { get; set; }
        /// <summary>
        /// <p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
        /// </summary>
        string SriovNetSupport { get; set; }
        /// <summary>
        /// <p>The current state of the AMI. If the state is <code>available</code>, the image is successfully registered and can
        /// be used to launch an instance.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageStateEnumValue State { get; set; }
        /// <summary><p>The reason for the state change.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStateReason StateReason { get; set; }
        /// <summary><p>The reason code for the state change.</p></summary>
        string StateReasonCode { get; set; }
        /// <summary>
        /// <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient
        /// capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error
        /// caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was
        /// stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped
        /// because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity
        /// or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance
        /// was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded
        /// available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>:
        /// The instance was shut down from the operating system of the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>:
        /// The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client
        /// error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>:
        /// The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated
        /// on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon
        /// EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage
        /// was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>
        /// </summary>
        string StateReasonMessage { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageState? StateValue { get; set; }
        /// <summary><p>Any tags assigned to the image.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated12[] Tag { get; set; }
        /// <summary>
        /// <p>If the image is configured for NitroTPM support, the value is <code>v2.0</code>. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html'>NitroTPM</a>
        /// in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITpmSupportValuesEnumValue TpmSupport { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TpmSupportValues? TpmSupportValue { get; set; }
        /// <summary>
        /// <p>The operation of the Amazon EC2 instance and the billing code that is associated with the AMI. <code>usageOperation</code>
        /// corresponds to the <a href='https://docs.aws.amazon.com/cur/latest/userguide/Lineitem-columns.html#Lineitem-details-O-Operation'>lineitem/Operation</a>
        /// column on your Amazon Web Services Cost and Usage Report and in the <a href='https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/price-changes.html'>Amazon
        /// Web Services Price List API</a>. You can view these fields on the <b>Instances</b> or <b>AMIs</b> pages in the Amazon
        /// EC2 console, or in the responses that are returned by the <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html'>DescribeImages</a>
        /// command in the Amazon EC2 API, or the <a href='https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html'>describe-images</a>
        /// command in the CLI.</p>
        /// </summary>
        string UsageOperation { get; set; }
        /// <summary><p>The type of virtualization of the AMI.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVirtualizationTypeEnumValue VirtualizationType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VirtualizationType? VirtualizationTypeValue { get; set; }

    }
}