// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of RuntimeManagementConfig</summary>
    public partial class RuntimeManagementConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfig,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfigInternal
    {

        /// <summary>Backing field for <see cref="RuntimeVersionArn" /> property.</summary>
        private string _runtimeVersionArn;

        /// <summary>
        /// The ARN of the runtime version you want the function to use. This is only required if you're using the *Manual* runtime
        /// update mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RuntimeVersionArn { get => this._runtimeVersionArn; set => this._runtimeVersionArn = value; }

        /// <summary>Backing field for <see cref="UpdateRuntimeOn" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn? _updateRuntimeOn;

        /// <summary>
        /// Specify the runtime update mode. + *Auto (default)* - Automatically update to the most recent and secure runtime version
        /// using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase).
        /// This is the best choice for most customers to ensure they always benefit from runtime updates. + *FunctionUpdate* - LAM
        /// updates the runtime of you function to the most recent and secure runtime version when you update your function. This
        /// approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied
        /// and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need
        /// to regularly update your functions to keep their runtime up-to-date. + *Manual* - You specify a runtime version in your
        /// function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime
        /// version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version.
        /// For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).
        /// *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn? UpdateRuntimeOn { get => this._updateRuntimeOn; set => this._updateRuntimeOn = value; }

        /// <summary>Creates an new <see cref="RuntimeManagementConfig" /> instance.</summary>
        public RuntimeManagementConfig()
        {

        }
    }
    /// Definition of RuntimeManagementConfig
    public partial interface IRuntimeManagementConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The ARN of the runtime version you want the function to use. This is only required if you're using the *Manual* runtime
        /// update mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of the runtime version you want the function to use.  This is only required if you're using the *Manual* runtime update mode.",
        SerializedName = @"runtimeVersionArn",
        PossibleTypes = new [] { typeof(string) })]
        string RuntimeVersionArn { get; set; }
        /// <summary>
        /// Specify the runtime update mode. + *Auto (default)* - Automatically update to the most recent and secure runtime version
        /// using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase).
        /// This is the best choice for most customers to ensure they always benefit from runtime updates. + *FunctionUpdate* - LAM
        /// updates the runtime of you function to the most recent and secure runtime version when you update your function. This
        /// approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied
        /// and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need
        /// to regularly update your functions to keep their runtime up-to-date. + *Manual* - You specify a runtime version in your
        /// function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime
        /// version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version.
        /// For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).
        /// *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the runtime update mode.  +   *Auto (default)* - Automatically update to the most recent and secure runtime version using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase). This is the best choice for most customers to ensure they always benefit from runtime updates.  +   *FunctionUpdate* - LAM updates the runtime of you function to the most recent and secure runtime version when you update your function. This approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need to regularly update your functions to keep their runtime up-to-date.  +   *Manual* - You specify a runtime version in your function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version. For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).    *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``",
        SerializedName = @"updateRuntimeOn",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn? UpdateRuntimeOn { get; set; }

    }
    /// Definition of RuntimeManagementConfig
    internal partial interface IRuntimeManagementConfigInternal

    {
        /// <summary>
        /// The ARN of the runtime version you want the function to use. This is only required if you're using the *Manual* runtime
        /// update mode.
        /// </summary>
        string RuntimeVersionArn { get; set; }
        /// <summary>
        /// Specify the runtime update mode. + *Auto (default)* - Automatically update to the most recent and secure runtime version
        /// using a [Two-phase runtime version rollout](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-two-phase).
        /// This is the best choice for most customers to ensure they always benefit from runtime updates. + *FunctionUpdate* - LAM
        /// updates the runtime of you function to the most recent and secure runtime version when you update your function. This
        /// approach synchronizes runtime updates with function deployments, giving you control over when runtime updates are applied
        /// and allowing you to detect and mitigate rare runtime update incompatibilities early. When using this setting, you need
        /// to regularly update your functions to keep their runtime up-to-date. + *Manual* - You specify a runtime version in your
        /// function configuration. The function will use this runtime version indefinitely. In the rare case where a new runtime
        /// version is incompatible with an existing function, this allows you to roll back your function to an earlier runtime version.
        /// For more information, see [Roll back a runtime version](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html#runtime-management-rollback).
        /// *Valid Values*: ``Auto`` | ``FunctionUpdate`` | ``Manual``
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn? UpdateRuntimeOn { get; set; }

    }
}