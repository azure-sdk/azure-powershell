// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsLogsLogGroup</summary>
    public partial class AwsLogsLogGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLogsLogGroupProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLogsLogGroupPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Backing field for <see cref="DataProtectionPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny _dataProtectionPolicy;

        /// <summary>
        /// Creates a data protection policy and assigns it to the log group. A data protection policy can help safeguard sensitive
        /// data that's ingested by the log group by auditing and masking the sensitive log data. When a user who does not have permission
        /// to view masked data views a log event that includes masked data, the sensitive data is replaced by asterisks. For more
        /// information, including a list of types of data that can be audited and masked, see [Protect sensitive log data with masking](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny DataProtectionPolicy { get => (this._dataProtectionPolicy = this._dataProtectionPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Any()); set => this._dataProtectionPolicy = value; }

        /// <summary>Backing field for <see cref="KmsKeyId" /> property.</summary>
        private string _kmsKeyId;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data. To associate an KMS key with the log group,
        /// specify the ARN of that KMS key here. If you do so, ingested data is encrypted using this key. This association is stored
        /// as long as the data encrypted with the KMS key is still within CWL. This enables CWL to decrypt this data whenever it
        /// is requested. If you attempt to associate a KMS key with the log group but the KMS key doesn't exist or is deactivated,
        /// you will receive an ``InvalidParameterException`` error. Log group data is always encrypted in CWL. If you omit this key,
        /// the encryption does not use KMS. For more information, see [Encrypt log data in using](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string KmsKeyId { get => this._kmsKeyId; set => this._kmsKeyId = value; }

        /// <summary>Backing field for <see cref="LogGroupClass" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogGroupClass? _logGroupClass;

        /// <summary>
        /// Specifies the log group class for this log group. There are two classes: + The ``Standard`` log class supports all CWL
        /// features. + The ``Infrequent Access`` log class supports a subset of CWL features and incurs lower costs. For details
        /// about the features supported by each class, see [Log classes](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogGroupClass? LogGroupClass { get => this._logGroupClass; set => this._logGroupClass = value; }

        /// <summary>Backing field for <see cref="LogGroupName" /> property.</summary>
        private string _logGroupName;

        /// <summary>
        /// The name of the log group. If you don't specify a name, CFNlong generates a unique ID for the log group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LogGroupName { get => this._logGroupName; set => this._logGroupName = value; }

        /// <summary>Backing field for <see cref="RetentionInDay" /> property.</summary>
        private int? _retentionInDay;

        /// <summary>
        /// The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90,
        /// 120, 150, 180, 365, 400, 545, 731, 1096, 1827, 2192, 2557, 2922, 3288, and 3653. To set a log group so that its log events
        /// do not expire, use [DeleteRetentionPolicy](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DeleteRetentionPolicy.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? RetentionInDay { get => this._retentionInDay; set => this._retentionInDay = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated40[] _tag;

        /// <summary>
        /// An array of key-value pairs to apply to the log group. For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated40[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Creates an new <see cref="AwsLogsLogGroupProperties" /> instance.</summary>
        public AwsLogsLogGroupProperties()
        {

        }
    }
    /// Definition of awsLogsLogGroup
    public partial interface IAwsLogsLogGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property arn",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// Creates a data protection policy and assigns it to the log group. A data protection policy can help safeguard sensitive
        /// data that's ingested by the log group by auditing and masking the sensitive log data. When a user who does not have permission
        /// to view masked data views a log event that includes masked data, the sensitive data is replaced by asterisks. For more
        /// information, including a list of types of data that can be audited and masked, see [Protect sensitive log data with masking](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Creates a data protection policy and assigns it to the log group. A data protection policy can help safeguard sensitive data that's ingested by the log group by auditing and masking the sensitive log data. When a user who does not have permission to view masked data views a log event that includes masked data, the sensitive data is replaced by asterisks. For more information, including a list of types of data that can be audited and masked, see [Protect sensitive log data with masking](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html).",
        SerializedName = @"dataProtectionPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny DataProtectionPolicy { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data. To associate an KMS key with the log group,
        /// specify the ARN of that KMS key here. If you do so, ingested data is encrypted using this key. This association is stored
        /// as long as the data encrypted with the KMS key is still within CWL. This enables CWL to decrypt this data whenever it
        /// is requested. If you attempt to associate a KMS key with the log group but the KMS key doesn't exist or is deactivated,
        /// you will receive an ``InvalidParameterException`` error. Log group data is always encrypted in CWL. If you omit this key,
        /// the encryption does not use KMS. For more information, see [Encrypt log data in using](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data. To associate an KMS key with the log group, specify the ARN of that KMS key here. If you do so, ingested data is encrypted using this key. This association is stored as long as the data encrypted with the KMS key is still within CWL. This enables CWL to decrypt this data whenever it is requested. If you attempt to associate a KMS key with the log group but the KMS key doesn't exist or is deactivated, you will receive an ``InvalidParameterException`` error. Log group data is always encrypted in CWL. If you omit this key, the encryption does not use KMS. For more information, see [Encrypt log data in using](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)",
        SerializedName = @"kmsKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string KmsKeyId { get; set; }
        /// <summary>
        /// Specifies the log group class for this log group. There are two classes: + The ``Standard`` log class supports all CWL
        /// features. + The ``Infrequent Access`` log class supports a subset of CWL features and incurs lower costs. For details
        /// about the features supported by each class, see [Log classes](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the log group class for this log group. There are two classes:  +  The ``Standard`` log class supports all CWL features.  +  The ``Infrequent Access`` log class supports a subset of CWL features and incurs lower costs.   For details about the features supported by each class, see [Log classes](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html)",
        SerializedName = @"logGroupClass",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogGroupClass) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogGroupClass? LogGroupClass { get; set; }
        /// <summary>
        /// The name of the log group. If you don't specify a name, CFNlong generates a unique ID for the log group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the log group. If you don't specify a name, CFNlong generates a unique ID for the log group.",
        SerializedName = @"logGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string LogGroupName { get; set; }
        /// <summary>
        /// The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90,
        /// 120, 150, 180, 365, 400, 545, 731, 1096, 1827, 2192, 2557, 2922, 3288, and 3653. To set a log group so that its log events
        /// do not expire, use [DeleteRetentionPolicy](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DeleteRetentionPolicy.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1096, 1827, 2192, 2557, 2922, 3288, and 3653. To set a log group so that its log events do not expire, use [DeleteRetentionPolicy](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DeleteRetentionPolicy.html).",
        SerializedName = @"retentionInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? RetentionInDay { get; set; }
        /// <summary>
        /// An array of key-value pairs to apply to the log group. For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array of key-value pairs to apply to the log group. For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated40) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated40[] Tag { get; set; }

    }
    /// Definition of awsLogsLogGroup
    internal partial interface IAwsLogsLogGroupPropertiesInternal

    {
        /// <summary>Property arn</summary>
        string Arn { get; set; }
        /// <summary>
        /// Creates a data protection policy and assigns it to the log group. A data protection policy can help safeguard sensitive
        /// data that's ingested by the log group by auditing and masking the sensitive log data. When a user who does not have permission
        /// to view masked data views a log event that includes masked data, the sensitive data is replaced by asterisks. For more
        /// information, including a list of types of data that can be audited and masked, see [Protect sensitive log data with masking](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny DataProtectionPolicy { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data. To associate an KMS key with the log group,
        /// specify the ARN of that KMS key here. If you do so, ingested data is encrypted using this key. This association is stored
        /// as long as the data encrypted with the KMS key is still within CWL. This enables CWL to decrypt this data whenever it
        /// is requested. If you attempt to associate a KMS key with the log group but the KMS key doesn't exist or is deactivated,
        /// you will receive an ``InvalidParameterException`` error. Log group data is always encrypted in CWL. If you omit this key,
        /// the encryption does not use KMS. For more information, see [Encrypt log data in using](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)
        /// </summary>
        string KmsKeyId { get; set; }
        /// <summary>
        /// Specifies the log group class for this log group. There are two classes: + The ``Standard`` log class supports all CWL
        /// features. + The ``Infrequent Access`` log class supports a subset of CWL features and incurs lower costs. For details
        /// about the features supported by each class, see [Log classes](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html)
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogGroupClass? LogGroupClass { get; set; }
        /// <summary>
        /// The name of the log group. If you don't specify a name, CFNlong generates a unique ID for the log group.
        /// </summary>
        string LogGroupName { get; set; }
        /// <summary>
        /// The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90,
        /// 120, 150, 180, 365, 400, 545, 731, 1096, 1827, 2192, 2557, 2922, 3288, and 3653. To set a log group so that its log events
        /// do not expire, use [DeleteRetentionPolicy](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DeleteRetentionPolicy.html).
        /// </summary>
        int? RetentionInDay { get; set; }
        /// <summary>
        /// An array of key-value pairs to apply to the log group. For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated40[] Tag { get; set; }

    }
}