// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of CFNDataSourceConfigurations</summary>
    public partial class CfnDataSourceConfigurations :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurations,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal
    {

        /// <summary>Property enable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AuditLogEnable { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesConfigurationInternal)Kubernete).AuditLogEnable; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesConfigurationInternal)Kubernete).AuditLogEnable = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Kubernete" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesConfiguration _kubernete;

        /// <summary>Property kubernetes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesConfiguration Kubernete { get => (this._kubernete = this._kubernete ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CfnKubernetesConfiguration()); set => this._kubernete = value; }

        /// <summary>Backing field for <see cref="MalwareProtection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfiguration _malwareProtection;

        /// <summary>Property malwareProtection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfiguration MalwareProtection { get => (this._malwareProtection = this._malwareProtection ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CfnMalwareProtectionConfiguration()); set => this._malwareProtection = value; }

        /// <summary>Internal Acessors for Kubernete</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal.Kubernete { get => (this._kubernete = this._kubernete ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CfnKubernetesConfiguration()); set { {_kubernete = value;} } }

        /// <summary>Internal Acessors for KuberneteAuditLog</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesAuditLogsConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal.KuberneteAuditLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesConfigurationInternal)Kubernete).AuditLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesConfigurationInternal)Kubernete).AuditLog = value; }

        /// <summary>Internal Acessors for MalwareProtection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal.MalwareProtection { get => (this._malwareProtection = this._malwareProtection ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CfnMalwareProtectionConfiguration()); set { {_malwareProtection = value;} } }

        /// <summary>Internal Acessors for MalwareProtectionScanEc2InstanceWithFinding</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnScanEc2InstanceWithFindingsConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal.MalwareProtectionScanEc2InstanceWithFinding { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfigurationInternal)MalwareProtection).ScanEc2InstanceWithFinding; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfigurationInternal)MalwareProtection).ScanEc2InstanceWithFinding = value; }

        /// <summary>Internal Acessors for S3Log</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfns3LogsConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnDataSourceConfigurationsInternal.S3Log { get => (this._s3Log = this._s3Log ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Cfns3LogsConfiguration()); set { {_s3Log = value;} } }

        /// <summary>Backing field for <see cref="S3Log" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfns3LogsConfiguration _s3Log;

        /// <summary>Property s3Logs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfns3LogsConfiguration S3Log { get => (this._s3Log = this._s3Log ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Cfns3LogsConfiguration()); set => this._s3Log = value; }

        /// <summary>Property enable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? S3LogEnable { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfns3LogsConfigurationInternal)S3Log).Enable; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfns3LogsConfigurationInternal)S3Log).Enable = value ?? default(bool); }

        /// <summary>Property ebsVolumes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ScanEc2InstanceWithFindingEbsVolume { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfigurationInternal)MalwareProtection).ScanEc2InstanceWithFindingEbsVolume; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfigurationInternal)MalwareProtection).ScanEc2InstanceWithFindingEbsVolume = value ?? default(bool); }

        /// <summary>Creates an new <see cref="CfnDataSourceConfigurations" /> instance.</summary>
        public CfnDataSourceConfigurations()
        {

        }
    }
    /// Definition of CFNDataSourceConfigurations
    public partial interface ICfnDataSourceConfigurations :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property enable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property enable",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AuditLogEnable { get; set; }
        /// <summary>Property enable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property enable",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? S3LogEnable { get; set; }
        /// <summary>Property ebsVolumes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property ebsVolumes",
        SerializedName = @"ebsVolumes",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ScanEc2InstanceWithFindingEbsVolume { get; set; }

    }
    /// Definition of CFNDataSourceConfigurations
    internal partial interface ICfnDataSourceConfigurationsInternal

    {
        /// <summary>Property enable</summary>
        bool? AuditLogEnable { get; set; }
        /// <summary>Property kubernetes</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesConfiguration Kubernete { get; set; }
        /// <summary>Property auditLogs</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnKubernetesAuditLogsConfiguration KuberneteAuditLog { get; set; }
        /// <summary>Property malwareProtection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnMalwareProtectionConfiguration MalwareProtection { get; set; }
        /// <summary>Property scanEc2InstanceWithFindings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfnScanEc2InstanceWithFindingsConfiguration MalwareProtectionScanEc2InstanceWithFinding { get; set; }
        /// <summary>Property s3Logs</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICfns3LogsConfiguration S3Log { get; set; }
        /// <summary>Property enable</summary>
        bool? S3LogEnable { get; set; }
        /// <summary>Property ebsVolumes</summary>
        bool? ScanEc2InstanceWithFindingEbsVolume { get; set; }

    }
}