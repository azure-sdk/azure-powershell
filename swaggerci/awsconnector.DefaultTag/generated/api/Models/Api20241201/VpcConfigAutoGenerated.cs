// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of VpcConfig</summary>
    public partial class VpcConfigAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGenerated,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGeneratedInternal
    {

        /// <summary>Backing field for <see cref="Ipv6AllowedForDualStack" /> property.</summary>
        private bool? _ipv6AllowedForDualStack;

        /// <summary>
        /// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Ipv6AllowedForDualStack { get => this._ipv6AllowedForDualStack; set => this._ipv6AllowedForDualStack = value; }

        /// <summary>Backing field for <see cref="SecurityGroupId" /> property.</summary>
        private string[] _securityGroupId;

        /// <summary>A list of VPC security group IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] SecurityGroupId { get => this._securityGroupId; set => this._securityGroupId = value; }

        /// <summary>Backing field for <see cref="SubnetId" /> property.</summary>
        private string[] _subnetId;

        /// <summary>A list of VPC subnet IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] SubnetId { get => this._subnetId; set => this._subnetId = value; }

        /// <summary>Creates an new <see cref="VpcConfigAutoGenerated" /> instance.</summary>
        public VpcConfigAutoGenerated()
        {

        }
    }
    /// Definition of VpcConfig
    public partial interface IVpcConfigAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.",
        SerializedName = @"ipv6AllowedForDualStack",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Ipv6AllowedForDualStack { get; set; }
        /// <summary>A list of VPC security group IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of VPC security group IDs.",
        SerializedName = @"securityGroupIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] SecurityGroupId { get; set; }
        /// <summary>A list of VPC subnet IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of VPC subnet IDs.",
        SerializedName = @"subnetIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] SubnetId { get; set; }

    }
    /// Definition of VpcConfig
    internal partial interface IVpcConfigAutoGeneratedInternal

    {
        /// <summary>
        /// Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets.
        /// </summary>
        bool? Ipv6AllowedForDualStack { get; set; }
        /// <summary>A list of VPC security group IDs.</summary>
        string[] SecurityGroupId { get; set; }
        /// <summary>A list of VPC subnet IDs.</summary>
        string[] SubnetId { get; set; }

    }
}