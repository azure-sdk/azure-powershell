// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of Node</summary>
    public partial class Node :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INode,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INodeInternal
    {

        /// <summary>Backing field for <see cref="AvailabilityZone" /> property.</summary>
        private string _availabilityZone;

        /// <summary><p>The Availability Zone (AZ) in which the node has been deployed.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AvailabilityZone { get => this._availabilityZone; set => this._availabilityZone = value; }

        /// <summary>Backing field for <see cref="CreateTime" /> property.</summary>
        private global::System.DateTime? _createTime;

        /// <summary><p>The date and time (in UNIX epoch format) when the node was launched.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? CreateTime { get => this._createTime; set => this._createTime = value; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpoint _endpoint;

        /// <summary>
        /// <p>The endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to
        /// a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses
        /// to nodes in the DAX cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpoint Endpoint { get => (this._endpoint = this._endpoint ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Endpoint()); set => this._endpoint = value; }

        /// <summary><p>The DNS hostname of the endpoint.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EndpointAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpointInternal)Endpoint).Address; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpointInternal)Endpoint).Address = value ?? null; }

        /// <summary><p>The port number that applications should use to connect to the endpoint.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? EndpointPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpointInternal)Endpoint).Port; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpointInternal)Endpoint).Port = value ?? default(int); }

        /// <summary>
        /// <p>The URL that applications should use to connect to the endpoint. The default ports are 8111 for the 'dax' protocol
        /// and 9111 for the 'daxs' protocol.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EndpointUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpointInternal)Endpoint).Url; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpointInternal)Endpoint).Url = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary><p>A system-generated identifier for the node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Internal Acessors for Endpoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpoint Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INodeInternal.Endpoint { get => (this._endpoint = this._endpoint ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Endpoint()); set { {_endpoint = value;} } }

        /// <summary>Backing field for <see cref="ParameterGroupStatus" /> property.</summary>
        private string _parameterGroupStatus;

        /// <summary>
        /// <p>The status of the parameter group associated with this node. For example, <code>in-sync</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ParameterGroupStatus { get => this._parameterGroupStatus; set => this._parameterGroupStatus = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary><p>The current status of the node. For example: <code>available</code>.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Creates an new <see cref="Node" /> instance.</summary>
        public Node()
        {

        }
    }
    /// Definition of Node
    public partial interface INode :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>The Availability Zone (AZ) in which the node has been deployed.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Availability Zone (AZ) in which the node has been deployed.</p>",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZone { get; set; }
        /// <summary><p>The date and time (in UNIX epoch format) when the node was launched.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The date and time (in UNIX epoch format) when the node was launched.</p>",
        SerializedName = @"nodeCreateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreateTime { get; set; }
        /// <summary><p>The DNS hostname of the endpoint.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The DNS hostname of the endpoint.</p>",
        SerializedName = @"address",
        PossibleTypes = new [] { typeof(string) })]
        string EndpointAddress { get; set; }
        /// <summary><p>The port number that applications should use to connect to the endpoint.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The port number that applications should use to connect to the endpoint.</p>",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(int) })]
        int? EndpointPort { get; set; }
        /// <summary>
        /// <p>The URL that applications should use to connect to the endpoint. The default ports are 8111 for the 'dax' protocol
        /// and 9111 for the 'daxs' protocol.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The URL that applications should use to connect to the endpoint. The default ports are 8111 for the 'dax' protocol and 9111 for the 'daxs' protocol.</p>",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string EndpointUrl { get; set; }
        /// <summary><p>A system-generated identifier for the node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A system-generated identifier for the node.</p>",
        SerializedName = @"nodeId",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>
        /// <p>The status of the parameter group associated with this node. For example, <code>in-sync</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The status of the parameter group associated with this node. For example, <code>in-sync</code>.</p>",
        SerializedName = @"parameterGroupStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ParameterGroupStatus { get; set; }
        /// <summary><p>The current status of the node. For example: <code>available</code>.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The current status of the node. For example: <code>available</code>.</p>",
        SerializedName = @"nodeStatus",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get; set; }

    }
    /// Definition of Node
    internal partial interface INodeInternal

    {
        /// <summary><p>The Availability Zone (AZ) in which the node has been deployed.</p></summary>
        string AvailabilityZone { get; set; }
        /// <summary><p>The date and time (in UNIX epoch format) when the node was launched.</p></summary>
        global::System.DateTime? CreateTime { get; set; }
        /// <summary>
        /// <p>The endpoint for the node, consisting of a DNS name and a port number. Client applications can connect directly to
        /// a node endpoint, if desired (as an alternative to allowing DAX client software to intelligently route requests and responses
        /// to nodes in the DAX cluster.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpoint Endpoint { get; set; }
        /// <summary><p>The DNS hostname of the endpoint.</p></summary>
        string EndpointAddress { get; set; }
        /// <summary><p>The port number that applications should use to connect to the endpoint.</p></summary>
        int? EndpointPort { get; set; }
        /// <summary>
        /// <p>The URL that applications should use to connect to the endpoint. The default ports are 8111 for the 'dax' protocol
        /// and 9111 for the 'daxs' protocol.</p>
        /// </summary>
        string EndpointUrl { get; set; }
        /// <summary><p>A system-generated identifier for the node.</p></summary>
        string Id { get; set; }
        /// <summary>
        /// <p>The status of the parameter group associated with this node. For example, <code>in-sync</code>.</p>
        /// </summary>
        string ParameterGroupStatus { get; set; }
        /// <summary><p>The current status of the node. For example: <code>available</code>.</p></summary>
        string Status { get; set; }

    }
}