// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEc2Snapshot</summary>
    public partial class AwsEc2SnapshotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DataEncryptionKeyId" /> property.</summary>
        private string _dataEncryptionKeyId;

        /// <summary>
        /// <p>The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data
        /// encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited
        /// by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they
        /// belong to the same volume/snapshot lineage. This parameter is only returned by <a>DescribeSnapshots</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DataEncryptionKeyId { get => this._dataEncryptionKeyId; set => this._dataEncryptionKeyId = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary><p>The description for the snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="Encrypted" /> property.</summary>
        private bool? _encrypted;

        /// <summary><p>Indicates whether the snapshot is encrypted.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Encrypted { get => this._encrypted; set => this._encrypted = value; }

        /// <summary>Backing field for <see cref="KmsKeyId" /> property.</summary>
        private string _kmsKeyId;

        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the Key Management Service (KMS) KMS key that was used to protect the volume encryption
        /// key for the parent volume.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string KmsKeyId { get => this._kmsKeyId; set => this._kmsKeyId = value; }

        /// <summary>Internal Acessors for SseType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal.SseType { get => (this._sseType = this._sseType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SseTypeEnumValue()); set { {_sseType = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal.State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapshotStateEnumValue()); set { {_state = value;} } }

        /// <summary>Internal Acessors for StorageTier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStorageTierEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2SnapshotPropertiesInternal.StorageTier { get => (this._storageTier = this._storageTier ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StorageTierEnumValue()); set { {_storageTier = value;} } }

        /// <summary>Backing field for <see cref="OutpostArn" /> property.</summary>
        private string _outpostArn;

        /// <summary>
        /// <p>The ARN of the Outpost on which the snapshot is stored. For more information, see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/snapshots-outposts.html'>Amazon
        /// EBS local snapshots on Outposts</a> in the <i>Amazon EBS User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OutpostArn { get => this._outpostArn; set => this._outpostArn = value; }

        /// <summary>Backing field for <see cref="OwnerAlias" /> property.</summary>
        private string _ownerAlias;

        /// <summary>
        /// <p>The Amazon Web Services owner alias, from an Amazon-maintained list (<code>amazon</code>). This is not the user-configured
        /// Amazon Web Services account alias set using the IAM console.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OwnerAlias { get => this._ownerAlias; set => this._ownerAlias = value; }

        /// <summary>Backing field for <see cref="OwnerId" /> property.</summary>
        private string _ownerId;

        /// <summary><p>The ID of the Amazon Web Services account that owns the EBS snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OwnerId { get => this._ownerId; set => this._ownerId = value; }

        /// <summary>Backing field for <see cref="Progress" /> property.</summary>
        private string _progress;

        /// <summary><p>The progress of the snapshot, as a percentage.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Progress { get => this._progress; set => this._progress = value; }

        /// <summary>Backing field for <see cref="RestoreExpiryTime" /> property.</summary>
        private global::System.DateTime? _restoreExpiryTime;

        /// <summary>
        /// <p>Only for archived snapshots that are temporarily restored. Indicates the date and time when a temporarily restored
        /// snapshot will be automatically re-archived.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? RestoreExpiryTime { get => this._restoreExpiryTime; set => this._restoreExpiryTime = value; }

        /// <summary>Backing field for <see cref="SnapshotId" /> property.</summary>
        private string _snapshotId;

        /// <summary>
        /// <p>The ID of the snapshot. Each snapshot receives a unique identifier when it is created.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SnapshotId { get => this._snapshotId; set => this._snapshotId = value; }

        /// <summary>Backing field for <see cref="SseType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseTypeEnumValue _sseType;

        /// <summary><p>Reserved for future use.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseTypeEnumValue SseType { get => (this._sseType = this._sseType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SseTypeEnumValue()); set => this._sseType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseType? SseTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseTypeEnumValueInternal)SseType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseTypeEnumValueInternal)SseType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseType)""); }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary><p>The time stamp when the snapshot was initiated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotStateEnumValue _state;

        /// <summary><p>The snapshot state.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotStateEnumValue State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapshotStateEnumValue()); set => this._state = value; }

        /// <summary>Backing field for <see cref="StateMessage" /> property.</summary>
        private string _stateMessage;

        /// <summary>
        /// <p>Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper
        /// Key Management Service (KMS) permissions are not obtained) this field displays error state details to help you diagnose
        /// why the error occurred. This parameter is only returned by <a>DescribeSnapshots</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string StateMessage { get => this._stateMessage; set => this._stateMessage = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapshotState? StateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotStateEnumValueInternal)State).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotStateEnumValueInternal)State).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapshotState)""); }

        /// <summary>Backing field for <see cref="StorageTier" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStorageTierEnumValue _storageTier;

        /// <summary>
        /// <p>The storage tier in which the snapshot is stored. <code>standard</code> indicates that the snapshot is stored in the
        /// standard snapshot storage tier and that it is ready for use. <code>archive</code> indicates that the snapshot is currently
        /// archived and that it must be restored before it can be used.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStorageTierEnumValue StorageTier { get => (this._storageTier = this._storageTier ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StorageTierEnumValue()); set => this._storageTier = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.StorageTier? StorageTierValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStorageTierEnumValueInternal)StorageTier).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStorageTierEnumValueInternal)StorageTier).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.StorageTier)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated20[] _tag;

        /// <summary><p>Any tags assigned to the snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated20[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="VolumeId" /> property.</summary>
        private string _volumeId;

        /// <summary>
        /// <p>The ID of the volume that was used to create the snapshot. Snapshots created by the <a>CopySnapshot</a> action have
        /// an arbitrary volume ID that should not be used for any purpose.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string VolumeId { get => this._volumeId; set => this._volumeId = value; }

        /// <summary>Backing field for <see cref="VolumeSize" /> property.</summary>
        private int? _volumeSize;

        /// <summary><p>The size of the volume, in GiB.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? VolumeSize { get => this._volumeSize; set => this._volumeSize = value; }

        /// <summary>Creates an new <see cref="AwsEc2SnapshotProperties" /> instance.</summary>
        public AwsEc2SnapshotProperties()
        {

        }
    }
    /// Definition of awsEc2Snapshot
    public partial interface IAwsEc2SnapshotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data
        /// encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited
        /// by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they
        /// belong to the same volume/snapshot lineage. This parameter is only returned by <a>DescribeSnapshots</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by <a>DescribeSnapshots</a>.</p>",
        SerializedName = @"dataEncryptionKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionKeyId { get; set; }
        /// <summary><p>The description for the snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The description for the snapshot.</p>",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary><p>Indicates whether the snapshot is encrypted.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the snapshot is encrypted.</p>",
        SerializedName = @"encrypted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Encrypted { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the Key Management Service (KMS) KMS key that was used to protect the volume encryption
        /// key for the parent volume.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the Key Management Service (KMS) KMS key that was used to protect the volume encryption key for the parent volume.</p>",
        SerializedName = @"kmsKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string KmsKeyId { get; set; }
        /// <summary>
        /// <p>The ARN of the Outpost on which the snapshot is stored. For more information, see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/snapshots-outposts.html'>Amazon
        /// EBS local snapshots on Outposts</a> in the <i>Amazon EBS User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN of the Outpost on which the snapshot is stored. For more information, see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/snapshots-outposts.html'>Amazon EBS local snapshots on Outposts</a> in the <i>Amazon EBS User Guide</i>.</p>",
        SerializedName = @"outpostArn",
        PossibleTypes = new [] { typeof(string) })]
        string OutpostArn { get; set; }
        /// <summary>
        /// <p>The Amazon Web Services owner alias, from an Amazon-maintained list (<code>amazon</code>). This is not the user-configured
        /// Amazon Web Services account alias set using the IAM console.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Web Services owner alias, from an Amazon-maintained list (<code>amazon</code>). This is not the user-configured Amazon Web Services account alias set using the IAM console.</p>",
        SerializedName = @"ownerAlias",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerAlias { get; set; }
        /// <summary><p>The ID of the Amazon Web Services account that owns the EBS snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the Amazon Web Services account that owns the EBS snapshot.</p>",
        SerializedName = @"ownerId",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerId { get; set; }
        /// <summary><p>The progress of the snapshot, as a percentage.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The progress of the snapshot, as a percentage.</p>",
        SerializedName = @"progress",
        PossibleTypes = new [] { typeof(string) })]
        string Progress { get; set; }
        /// <summary>
        /// <p>Only for archived snapshots that are temporarily restored. Indicates the date and time when a temporarily restored
        /// snapshot will be automatically re-archived.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Only for archived snapshots that are temporarily restored. Indicates the date and time when a temporarily restored snapshot will be automatically re-archived.</p>",
        SerializedName = @"restoreExpiryTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RestoreExpiryTime { get; set; }
        /// <summary>
        /// <p>The ID of the snapshot. Each snapshot receives a unique identifier when it is created.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the snapshot. Each snapshot receives a unique identifier when it is created.</p>",
        SerializedName = @"snapshotId",
        PossibleTypes = new [] { typeof(string) })]
        string SnapshotId { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseType? SseTypeValue { get; set; }
        /// <summary><p>The time stamp when the snapshot was initiated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time stamp when the snapshot was initiated.</p>",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>
        /// <p>Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper
        /// Key Management Service (KMS) permissions are not obtained) this field displays error state details to help you diagnose
        /// why the error occurred. This parameter is only returned by <a>DescribeSnapshots</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper Key Management Service (KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by <a>DescribeSnapshots</a>.</p>",
        SerializedName = @"stateMessage",
        PossibleTypes = new [] { typeof(string) })]
        string StateMessage { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapshotState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapshotState? StateValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.StorageTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.StorageTier? StorageTierValue { get; set; }
        /// <summary><p>Any tags assigned to the snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Any tags assigned to the snapshot.</p>",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated20) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated20[] Tag { get; set; }
        /// <summary>
        /// <p>The ID of the volume that was used to create the snapshot. Snapshots created by the <a>CopySnapshot</a> action have
        /// an arbitrary volume ID that should not be used for any purpose.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the volume that was used to create the snapshot. Snapshots created by the <a>CopySnapshot</a> action have an arbitrary volume ID that should not be used for any purpose.</p>",
        SerializedName = @"volumeId",
        PossibleTypes = new [] { typeof(string) })]
        string VolumeId { get; set; }
        /// <summary><p>The size of the volume, in GiB.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The size of the volume, in GiB.</p>",
        SerializedName = @"volumeSize",
        PossibleTypes = new [] { typeof(int) })]
        int? VolumeSize { get; set; }

    }
    /// Definition of awsEc2Snapshot
    internal partial interface IAwsEc2SnapshotPropertiesInternal

    {
        /// <summary>
        /// <p>The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data
        /// encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited
        /// by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they
        /// belong to the same volume/snapshot lineage. This parameter is only returned by <a>DescribeSnapshots</a>.</p>
        /// </summary>
        string DataEncryptionKeyId { get; set; }
        /// <summary><p>The description for the snapshot.</p></summary>
        string Description { get; set; }
        /// <summary><p>Indicates whether the snapshot is encrypted.</p></summary>
        bool? Encrypted { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the Key Management Service (KMS) KMS key that was used to protect the volume encryption
        /// key for the parent volume.</p>
        /// </summary>
        string KmsKeyId { get; set; }
        /// <summary>
        /// <p>The ARN of the Outpost on which the snapshot is stored. For more information, see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/snapshots-outposts.html'>Amazon
        /// EBS local snapshots on Outposts</a> in the <i>Amazon EBS User Guide</i>.</p>
        /// </summary>
        string OutpostArn { get; set; }
        /// <summary>
        /// <p>The Amazon Web Services owner alias, from an Amazon-maintained list (<code>amazon</code>). This is not the user-configured
        /// Amazon Web Services account alias set using the IAM console.</p>
        /// </summary>
        string OwnerAlias { get; set; }
        /// <summary><p>The ID of the Amazon Web Services account that owns the EBS snapshot.</p></summary>
        string OwnerId { get; set; }
        /// <summary><p>The progress of the snapshot, as a percentage.</p></summary>
        string Progress { get; set; }
        /// <summary>
        /// <p>Only for archived snapshots that are temporarily restored. Indicates the date and time when a temporarily restored
        /// snapshot will be automatically re-archived.</p>
        /// </summary>
        global::System.DateTime? RestoreExpiryTime { get; set; }
        /// <summary>
        /// <p>The ID of the snapshot. Each snapshot receives a unique identifier when it is created.</p>
        /// </summary>
        string SnapshotId { get; set; }
        /// <summary><p>Reserved for future use.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISseTypeEnumValue SseType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SseType? SseTypeValue { get; set; }
        /// <summary><p>The time stamp when the snapshot was initiated.</p></summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary><p>The snapshot state.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapshotStateEnumValue State { get; set; }
        /// <summary>
        /// <p>Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper
        /// Key Management Service (KMS) permissions are not obtained) this field displays error state details to help you diagnose
        /// why the error occurred. This parameter is only returned by <a>DescribeSnapshots</a>.</p>
        /// </summary>
        string StateMessage { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapshotState? StateValue { get; set; }
        /// <summary>
        /// <p>The storage tier in which the snapshot is stored. <code>standard</code> indicates that the snapshot is stored in the
        /// standard snapshot storage tier and that it is ready for use. <code>archive</code> indicates that the snapshot is currently
        /// archived and that it must be restored before it can be used.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IStorageTierEnumValue StorageTier { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.StorageTier? StorageTierValue { get; set; }
        /// <summary><p>Any tags assigned to the snapshot.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated20[] Tag { get; set; }
        /// <summary>
        /// <p>The ID of the volume that was used to create the snapshot. Snapshots created by the <a>CopySnapshot</a> action have
        /// an arbitrary volume ID that should not be used for any purpose.</p>
        /// </summary>
        string VolumeId { get; set; }
        /// <summary><p>The size of the volume, in GiB.</p></summary>
        int? VolumeSize { get; set; }

    }
}