// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of Ec2Volume</summary>
    public partial class Ec2VolumeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VolumeProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VolumePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>
        /// Indicates whether the volume is auto-enabled for I/O operations. By default, Amazon EBS disables I/O to the volume from
        /// attached EC2 instances when it determines that a volume's data is potentially inconsistent. If the consistency of the
        /// volume is not a concern, and you prefer that the volume be made available immediately if it's impaired, you can configure
        /// the volume to automatically enable I/O.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyAutoEnableIo { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).AutoEnableIo; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).AutoEnableIo = value ?? default(bool); }

        /// <summary>
        /// The ID of the Availability Zone in which to create the volume. For example, ``us-east-1a``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).AvailabilityZone = value ?? null; }

        /// <summary>
        /// Indicates whether the volume should be encrypted. The effect of setting the encryption state to ``true`` depends on the
        /// volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled.
        /// For more information, see [Encryption by default](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default)
        /// in the *Amazon Elastic Compute Cloud User Guide*. Encrypted Amazon EBS volumes must be attached to instances that support
        /// Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyEncrypted { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).Encrypted; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).Encrypted = value ?? default(bool); }

        /// <summary>
        /// The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number
        /// of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume
        /// and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each
        /// volume type: + ``gp3``: 3,000 - 16,000 IOPS + ``io1``: 100 - 64,000 IOPS + ``io2``: 100 - 256,000 IOPS For ``io2`` volumes,
        /// you can achieve up to 256,000 IOPS on [instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances).
        /// On other instances, you can achieve performance up to 32,000 IOPS. This parameter is required for ``io1`` and ``io2``
        /// volumes. The default for ``gp3`` volumes is 3,000 IOPS. This parameter is not supported for ``gp2``, ``st1``, ``sc1``,
        /// or ``standard`` volumes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AwPropertyIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).Iop; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).Iop = value ?? default(int); }

        /// <summary>
        /// The identifier of the kms-key-long to use for Amazon EBS encryption. If ``KmsKeyId`` is specified, the encrypted state
        /// must be ``true``. If you omit this property and your account is enabled for encryption by default, or *Encrypted* is set
        /// to ``true``, then the volume is encrypted using the default key specified for your account. If your account does not have
        /// a default key, then the volume is encrypted using the aws-managed-key. Alternatively, if you want to specify a different
        /// key, you can specify one of the following: + Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab. + Key alias. Specify
        /// the alias for the key, prefixed with ``alias/``. For example, for a key with the alias ``my_cmk``, use ``alias/my_cmk``.
        /// Or to specify the aws-managed-key, use ``alias/aws/ebs``. + Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.
        /// + Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyKmsKeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).KmsKeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).KmsKeyId = value ?? null; }

        /// <summary>
        /// Indicates whether Amazon EBS Multi-Attach is enabled. CFNlong does not currently support updating a single-attach volume
        /// to be multi-attach enabled, updating a multi-attach enabled volume to be single-attach, or updating the size or number
        /// of I/O operations per second (IOPS) of a multi-attach enabled volume.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyMultiAttachEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).MultiAttachEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).MultiAttachEnabled = value ?? default(bool); }

        /// <summary>The Amazon Resource Name (ARN) of the Outpost.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyOutpostArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).OutpostArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).OutpostArn = value ?? null; }

        /// <summary>
        /// The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the
        /// default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size. The following
        /// are the supported volumes sizes for each volume type: + ``gp2`` and ``gp3``: 1 - 16,384 GiB + ``io1``: 4 - 16,384 GiB
        /// + ``io2``: 4 - 65,536 GiB + ``st1`` and ``sc1``: 125 - 16,384 GiB + ``standard``: 1 - 1024 GiB
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AwPropertySize { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).Size; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).Size = value ?? default(int); }

        /// <summary>
        /// The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertySnapshotId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).SnapshotId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).SnapshotId = value ?? null; }

        /// <summary>The tags to apply to the volume during creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated22[] AwPropertyTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).Tag = value ?? null /* arrayOf */; }

        /// <summary>
        /// The throughput to provision for a volume, with a maximum of 1,000 MiB/s. This parameter is valid only for ``gp3`` volumes.
        /// The default value is 125. Valid Range: Minimum value of 125. Maximum value of 1000.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? AwPropertyThroughput { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).Throughput; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).Throughput = value ?? default(int); }

        /// <summary>Property volumeId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyVolumeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).VolumeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).VolumeId = value ?? null; }

        /// <summary>
        /// The volume type. This parameter can be one of the following values: + General Purpose SSD: ``gp2`` | ``gp3`` + Provisioned
        /// IOPS SSD: ``io1`` | ``io2`` + Throughput Optimized HDD: ``st1`` + Cold HDD: ``sc1`` + Magnetic: ``standard`` For more
        /// information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in
        /// the *Amazon Elastic Compute Cloud User Guide*. Default: ``gp2``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyVolumeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).VolumeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumePropertiesInternal)AwsProperty).VolumeType = value ?? null; }

        /// <summary>Backing field for <see cref="AwsAccountId" /> property.</summary>
        private string _awsAccountId;

        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsAccountId { get => this._awsAccountId; set => this._awsAccountId = value; }

        /// <summary>Backing field for <see cref="AwsProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumeProperties _awsProperty;

        /// <summary>AWS Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumeProperties AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2VolumeProperties()); set => this._awsProperty = value; }

        /// <summary>Backing field for <see cref="AwsRegion" /> property.</summary>
        private string _awsRegion;

        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsRegion { get => this._awsRegion; set => this._awsRegion = value; }

        /// <summary>Backing field for <see cref="AwsSourceSchema" /> property.</summary>
        private string _awsSourceSchema;

        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsSourceSchema { get => this._awsSourceSchema; set => this._awsSourceSchema = value; }

        /// <summary>Backing field for <see cref="AwsTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VolumePropertiesAwsTags _awsTag;

        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VolumePropertiesAwsTags AwsTag { get => (this._awsTag = this._awsTag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Ec2VolumePropertiesAwsTags()); set => this._awsTag = value; }

        /// <summary>Internal Acessors for AwsProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumeProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VolumePropertiesInternal.AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2VolumeProperties()); set { {_awsProperty = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VolumePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicCloudConnectorsResourceId" /> property.</summary>
        private string _publicCloudConnectorsResourceId;

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudConnectorsResourceId { get => this._publicCloudConnectorsResourceId; set => this._publicCloudConnectorsResourceId = value; }

        /// <summary>Backing field for <see cref="PublicCloudResourceName" /> property.</summary>
        private string _publicCloudResourceName;

        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudResourceName { get => this._publicCloudResourceName; set => this._publicCloudResourceName = value; }

        /// <summary>Creates an new <see cref="Ec2VolumeProperties" /> instance.</summary>
        public Ec2VolumeProperties()
        {

        }
    }
    /// Definition of Ec2Volume
    public partial interface IEc2VolumeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// Indicates whether the volume is auto-enabled for I/O operations. By default, Amazon EBS disables I/O to the volume from
        /// attached EC2 instances when it determines that a volume's data is potentially inconsistent. If the consistency of the
        /// volume is not a concern, and you prefer that the volume be made available immediately if it's impaired, you can configure
        /// the volume to automatically enable I/O.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the volume is auto-enabled for I/O operations. By default, Amazon EBS disables I/O to the volume from attached EC2 instances when it determines that a volume's data is potentially inconsistent. If the consistency of the volume is not a concern, and you prefer that the volume be made available immediately if it's impaired, you can configure the volume to automatically enable I/O.",
        SerializedName = @"autoEnableIO",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyAutoEnableIo { get; set; }
        /// <summary>
        /// The ID of the Availability Zone in which to create the volume. For example, ``us-east-1a``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the Availability Zone in which to create the volume. For example, ``us-east-1a``.",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyAvailabilityZone { get; set; }
        /// <summary>
        /// Indicates whether the volume should be encrypted. The effect of setting the encryption state to ``true`` depends on the
        /// volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled.
        /// For more information, see [Encryption by default](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default)
        /// in the *Amazon Elastic Compute Cloud User Guide*. Encrypted Amazon EBS volumes must be attached to instances that support
        /// Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the volume should be encrypted. The effect of setting the encryption state to ``true`` depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see [Encryption by default](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default) in the *Amazon Elastic Compute Cloud User Guide*. Encrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances).",
        SerializedName = @"encrypted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyEncrypted { get; set; }
        /// <summary>
        /// The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number
        /// of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume
        /// and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each
        /// volume type: + ``gp3``: 3,000 - 16,000 IOPS + ``io1``: 100 - 64,000 IOPS + ``io2``: 100 - 256,000 IOPS For ``io2`` volumes,
        /// you can achieve up to 256,000 IOPS on [instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances).
        /// On other instances, you can achieve performance up to 32,000 IOPS. This parameter is required for ``io1`` and ``io2``
        /// volumes. The default for ``gp3`` volumes is 3,000 IOPS. This parameter is not supported for ``gp2``, ``st1``, ``sc1``,
        /// or ``standard`` volumes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each volume type:  +   ``gp3``: 3,000 - 16,000 IOPS  +   ``io1``: 100 - 64,000 IOPS  +   ``io2``: 100 - 256,000 IOPS   For ``io2`` volumes, you can achieve up to 256,000 IOPS on [instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances). On other instances, you can achieve performance up to 32,000 IOPS. This parameter is required for ``io1`` and ``io2`` volumes. The default for ``gp3`` volumes is 3,000 IOPS. This parameter is not supported for ``gp2``, ``st1``, ``sc1``, or ``standard`` volumes.",
        SerializedName = @"iops",
        PossibleTypes = new [] { typeof(int) })]
        int? AwPropertyIop { get; set; }
        /// <summary>
        /// The identifier of the kms-key-long to use for Amazon EBS encryption. If ``KmsKeyId`` is specified, the encrypted state
        /// must be ``true``. If you omit this property and your account is enabled for encryption by default, or *Encrypted* is set
        /// to ``true``, then the volume is encrypted using the default key specified for your account. If your account does not have
        /// a default key, then the volume is encrypted using the aws-managed-key. Alternatively, if you want to specify a different
        /// key, you can specify one of the following: + Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab. + Key alias. Specify
        /// the alias for the key, prefixed with ``alias/``. For example, for a key with the alias ``my_cmk``, use ``alias/my_cmk``.
        /// Or to specify the aws-managed-key, use ``alias/aws/ebs``. + Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.
        /// + Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identifier of the kms-key-long to use for Amazon EBS encryption. If ``KmsKeyId`` is specified, the encrypted state must be ``true``. If you omit this property and your account is enabled for encryption by default, or *Encrypted* is set to ``true``, then the volume is encrypted using the default key specified for your account. If your account does not have a default key, then the volume is encrypted using the aws-managed-key. Alternatively, if you want to specify a different key, you can specify one of the following:  +  Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.  +  Key alias. Specify the alias for the key, prefixed with ``alias/``. For example, for a key with the alias ``my_cmk``, use ``alias/my_cmk``. Or to specify the aws-managed-key, use ``alias/aws/ebs``.  +  Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.  +  Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.",
        SerializedName = @"kmsKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyKmsKeyId { get; set; }
        /// <summary>
        /// Indicates whether Amazon EBS Multi-Attach is enabled. CFNlong does not currently support updating a single-attach volume
        /// to be multi-attach enabled, updating a multi-attach enabled volume to be single-attach, or updating the size or number
        /// of I/O operations per second (IOPS) of a multi-attach enabled volume.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether Amazon EBS Multi-Attach is enabled. CFNlong does not currently support updating a single-attach volume to be multi-attach enabled, updating a multi-attach enabled volume to be single-attach, or updating the size or number of I/O operations per second (IOPS) of a multi-attach enabled volume.",
        SerializedName = @"multiAttachEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyMultiAttachEnabled { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of the Outpost.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the Outpost.",
        SerializedName = @"outpostArn",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyOutpostArn { get; set; }
        /// <summary>
        /// The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the
        /// default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size. The following
        /// are the supported volumes sizes for each volume type: + ``gp2`` and ``gp3``: 1 - 16,384 GiB + ``io1``: 4 - 16,384 GiB
        /// + ``io2``: 4 - 65,536 GiB + ``st1`` and ``sc1``: 125 - 16,384 GiB + ``standard``: 1 - 1024 GiB
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size. The following are the supported volumes sizes for each volume type:  +   ``gp2`` and ``gp3``: 1 - 16,384 GiB  +   ``io1``: 4 - 16,384 GiB  +   ``io2``: 4 - 65,536 GiB  +   ``st1`` and ``sc1``: 125 - 16,384 GiB  +   ``standard``: 1 - 1024 GiB",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(int) })]
        int? AwPropertySize { get; set; }
        /// <summary>
        /// The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.",
        SerializedName = @"snapshotId",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertySnapshotId { get; set; }
        /// <summary>The tags to apply to the volume during creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags to apply to the volume during creation.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated22) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated22[] AwPropertyTag { get; set; }
        /// <summary>
        /// The throughput to provision for a volume, with a maximum of 1,000 MiB/s. This parameter is valid only for ``gp3`` volumes.
        /// The default value is 125. Valid Range: Minimum value of 125. Maximum value of 1000.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The throughput to provision for a volume, with a maximum of 1,000 MiB/s. This parameter is valid only for ``gp3`` volumes. The default value is 125. Valid Range: Minimum value of 125. Maximum value of 1000.",
        SerializedName = @"throughput",
        PossibleTypes = new [] { typeof(int) })]
        int? AwPropertyThroughput { get; set; }
        /// <summary>Property volumeId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property volumeId",
        SerializedName = @"volumeId",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyVolumeId { get; set; }
        /// <summary>
        /// The volume type. This parameter can be one of the following values: + General Purpose SSD: ``gp2`` | ``gp3`` + Provisioned
        /// IOPS SSD: ``io1`` | ``io2`` + Throughput Optimized HDD: ``st1`` + Cold HDD: ``sc1`` + Magnetic: ``standard`` For more
        /// information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in
        /// the *Amazon Elastic Compute Cloud User Guide*. Default: ``gp2``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The volume type. This parameter can be one of the following values:  +  General Purpose SSD: ``gp2`` | ``gp3``   +  Provisioned IOPS SSD: ``io1`` | ``io2``   +  Throughput Optimized HDD: ``st1``   +  Cold HDD: ``sc1``   +  Magnetic: ``standard``    For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon Elastic Compute Cloud User Guide*. Default: ``gp2``",
        SerializedName = @"volumeType",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyVolumeType { get; set; }
        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AwsAccountId { get; set; }
        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VolumePropertiesAwsTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VolumePropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudResourceName { get; set; }

    }
    /// Definition of Ec2Volume
    internal partial interface IEc2VolumePropertiesInternal

    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        string Arn { get; set; }
        /// <summary>
        /// Indicates whether the volume is auto-enabled for I/O operations. By default, Amazon EBS disables I/O to the volume from
        /// attached EC2 instances when it determines that a volume's data is potentially inconsistent. If the consistency of the
        /// volume is not a concern, and you prefer that the volume be made available immediately if it's impaired, you can configure
        /// the volume to automatically enable I/O.
        /// </summary>
        bool? AwPropertyAutoEnableIo { get; set; }
        /// <summary>
        /// The ID of the Availability Zone in which to create the volume. For example, ``us-east-1a``.
        /// </summary>
        string AwPropertyAvailabilityZone { get; set; }
        /// <summary>
        /// Indicates whether the volume should be encrypted. The effect of setting the encryption state to ``true`` depends on the
        /// volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled.
        /// For more information, see [Encryption by default](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default)
        /// in the *Amazon Elastic Compute Cloud User Guide*. Encrypted Amazon EBS volumes must be attached to instances that support
        /// Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances).
        /// </summary>
        bool? AwPropertyEncrypted { get; set; }
        /// <summary>
        /// The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number
        /// of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume
        /// and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each
        /// volume type: + ``gp3``: 3,000 - 16,000 IOPS + ``io1``: 100 - 64,000 IOPS + ``io2``: 100 - 256,000 IOPS For ``io2`` volumes,
        /// you can achieve up to 256,000 IOPS on [instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances).
        /// On other instances, you can achieve performance up to 32,000 IOPS. This parameter is required for ``io1`` and ``io2``
        /// volumes. The default for ``gp3`` volumes is 3,000 IOPS. This parameter is not supported for ``gp2``, ``st1``, ``sc1``,
        /// or ``standard`` volumes.
        /// </summary>
        int? AwPropertyIop { get; set; }
        /// <summary>
        /// The identifier of the kms-key-long to use for Amazon EBS encryption. If ``KmsKeyId`` is specified, the encrypted state
        /// must be ``true``. If you omit this property and your account is enabled for encryption by default, or *Encrypted* is set
        /// to ``true``, then the volume is encrypted using the default key specified for your account. If your account does not have
        /// a default key, then the volume is encrypted using the aws-managed-key. Alternatively, if you want to specify a different
        /// key, you can specify one of the following: + Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab. + Key alias. Specify
        /// the alias for the key, prefixed with ``alias/``. For example, for a key with the alias ``my_cmk``, use ``alias/my_cmk``.
        /// Or to specify the aws-managed-key, use ``alias/aws/ebs``. + Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.
        /// + Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.
        /// </summary>
        string AwPropertyKmsKeyId { get; set; }
        /// <summary>
        /// Indicates whether Amazon EBS Multi-Attach is enabled. CFNlong does not currently support updating a single-attach volume
        /// to be multi-attach enabled, updating a multi-attach enabled volume to be single-attach, or updating the size or number
        /// of I/O operations per second (IOPS) of a multi-attach enabled volume.
        /// </summary>
        bool? AwPropertyMultiAttachEnabled { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of the Outpost.</summary>
        string AwPropertyOutpostArn { get; set; }
        /// <summary>
        /// The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the
        /// default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size. The following
        /// are the supported volumes sizes for each volume type: + ``gp2`` and ``gp3``: 1 - 16,384 GiB + ``io1``: 4 - 16,384 GiB
        /// + ``io2``: 4 - 65,536 GiB + ``st1`` and ``sc1``: 125 - 16,384 GiB + ``standard``: 1 - 1024 GiB
        /// </summary>
        int? AwPropertySize { get; set; }
        /// <summary>
        /// The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.
        /// </summary>
        string AwPropertySnapshotId { get; set; }
        /// <summary>The tags to apply to the volume during creation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated22[] AwPropertyTag { get; set; }
        /// <summary>
        /// The throughput to provision for a volume, with a maximum of 1,000 MiB/s. This parameter is valid only for ``gp3`` volumes.
        /// The default value is 125. Valid Range: Minimum value of 125. Maximum value of 1000.
        /// </summary>
        int? AwPropertyThroughput { get; set; }
        /// <summary>Property volumeId</summary>
        string AwPropertyVolumeId { get; set; }
        /// <summary>
        /// The volume type. This parameter can be one of the following values: + General Purpose SSD: ``gp2`` | ``gp3`` + Provisioned
        /// IOPS SSD: ``io1`` | ``io2`` + Throughput Optimized HDD: ``st1`` + Cold HDD: ``sc1`` + Magnetic: ``standard`` For more
        /// information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in
        /// the *Amazon Elastic Compute Cloud User Guide*. Default: ``gp2``
        /// </summary>
        string AwPropertyVolumeType { get; set; }
        /// <summary>AWS Account ID</summary>
        string AwsAccountId { get; set; }
        /// <summary>AWS Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VolumeProperties AwsProperty { get; set; }
        /// <summary>AWS Region</summary>
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VolumePropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        string PublicCloudResourceName { get; set; }

    }
}