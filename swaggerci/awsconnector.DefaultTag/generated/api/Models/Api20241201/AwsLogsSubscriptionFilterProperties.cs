// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsLogsSubscriptionFilter</summary>
    public partial class AwsLogsSubscriptionFilterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLogsSubscriptionFilterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLogsSubscriptionFilterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DestinationArn" /> property.</summary>
        private string _destinationArn;

        /// <summary>The Amazon Resource Name (ARN) of the destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DestinationArn { get => this._destinationArn; set => this._destinationArn = value; }

        /// <summary>Backing field for <see cref="Distribution" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Distribution? _distribution;

        /// <summary>
        /// The method used to distribute log data to the destination, which can be either random or grouped by log stream.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Distribution? Distribution { get => this._distribution; set => this._distribution = value; }

        /// <summary>Backing field for <see cref="FilterName" /> property.</summary>
        private string _filterName;

        /// <summary>The name of the subscription filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string FilterName { get => this._filterName; set => this._filterName = value; }

        /// <summary>Backing field for <see cref="FilterPattern" /> property.</summary>
        private string _filterPattern;

        /// <summary>
        /// The filtering expressions that restrict what gets delivered to the destination AWS resource. For more information about
        /// the filter pattern syntax, see [Filter and Pattern Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string FilterPattern { get => this._filterPattern; set => this._filterPattern = value; }

        /// <summary>Backing field for <see cref="LogGroupName" /> property.</summary>
        private string _logGroupName;

        /// <summary>
        /// The log group to associate with the subscription filter. All log events that are uploaded to this log group are filtered
        /// and delivered to the specified AWS resource if the filter pattern matches the log events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LogGroupName { get => this._logGroupName; set => this._logGroupName = value; }

        /// <summary>Backing field for <see cref="RoleArn" /> property.</summary>
        private string _roleArn;

        /// <summary>
        /// The ARN of an IAM role that grants CWL permissions to deliver ingested log events to the destination stream. You don't
        /// need to provide the ARN when you are working with a logical destination for cross-account delivery.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RoleArn { get => this._roleArn; set => this._roleArn = value; }

        /// <summary>Creates an new <see cref="AwsLogsSubscriptionFilterProperties" /> instance.</summary>
        public AwsLogsSubscriptionFilterProperties()
        {

        }
    }
    /// Definition of awsLogsSubscriptionFilter
    public partial interface IAwsLogsSubscriptionFilterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>The Amazon Resource Name (ARN) of the destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the destination.",
        SerializedName = @"destinationArn",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationArn { get; set; }
        /// <summary>
        /// The method used to distribute log data to the destination, which can be either random or grouped by log stream.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The method used to distribute log data to the destination, which can be either random or grouped by log stream.",
        SerializedName = @"distribution",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Distribution) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Distribution? Distribution { get; set; }
        /// <summary>The name of the subscription filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the subscription filter.",
        SerializedName = @"filterName",
        PossibleTypes = new [] { typeof(string) })]
        string FilterName { get; set; }
        /// <summary>
        /// The filtering expressions that restrict what gets delivered to the destination AWS resource. For more information about
        /// the filter pattern syntax, see [Filter and Pattern Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The filtering expressions that restrict what gets delivered to the destination AWS resource. For more information about the filter pattern syntax, see [Filter and Pattern Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html).",
        SerializedName = @"filterPattern",
        PossibleTypes = new [] { typeof(string) })]
        string FilterPattern { get; set; }
        /// <summary>
        /// The log group to associate with the subscription filter. All log events that are uploaded to this log group are filtered
        /// and delivered to the specified AWS resource if the filter pattern matches the log events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The log group to associate with the subscription filter. All log events that are uploaded to this log group are filtered and delivered to the specified AWS resource if the filter pattern matches the log events.",
        SerializedName = @"logGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string LogGroupName { get; set; }
        /// <summary>
        /// The ARN of an IAM role that grants CWL permissions to deliver ingested log events to the destination stream. You don't
        /// need to provide the ARN when you are working with a logical destination for cross-account delivery.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of an IAM role that grants CWL permissions to deliver ingested log events to the destination stream. You don't need to provide the ARN when you are working with a logical destination for cross-account delivery.",
        SerializedName = @"roleArn",
        PossibleTypes = new [] { typeof(string) })]
        string RoleArn { get; set; }

    }
    /// Definition of awsLogsSubscriptionFilter
    internal partial interface IAwsLogsSubscriptionFilterPropertiesInternal

    {
        /// <summary>The Amazon Resource Name (ARN) of the destination.</summary>
        string DestinationArn { get; set; }
        /// <summary>
        /// The method used to distribute log data to the destination, which can be either random or grouped by log stream.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Distribution? Distribution { get; set; }
        /// <summary>The name of the subscription filter.</summary>
        string FilterName { get; set; }
        /// <summary>
        /// The filtering expressions that restrict what gets delivered to the destination AWS resource. For more information about
        /// the filter pattern syntax, see [Filter and Pattern Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html).
        /// </summary>
        string FilterPattern { get; set; }
        /// <summary>
        /// The log group to associate with the subscription filter. All log events that are uploaded to this log group are filtered
        /// and delivered to the specified AWS resource if the filter pattern matches the log events.
        /// </summary>
        string LogGroupName { get; set; }
        /// <summary>
        /// The ARN of an IAM role that grants CWL permissions to deliver ingested log events to the destination stream. You don't
        /// need to provide the ARN when you are working with a logical destination for cross-account delivery.
        /// </summary>
        string RoleArn { get; set; }

    }
}