// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of DomainEndpointOptions</summary>
    public partial class DomainEndpointOptions :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptions,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal
    {

        /// <summary>Backing field for <see cref="CustomEndpoint" /> property.</summary>
        private string _customEndpoint;

        /// <summary><p>The fully qualified URL for the custom endpoint.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string CustomEndpoint { get => this._customEndpoint; set => this._customEndpoint = value; }

        /// <summary>Backing field for <see cref="CustomEndpointCertificateArn" /> property.</summary>
        private string _customEndpointCertificateArn;

        /// <summary>
        /// <p>The ARN for your security certificate, managed in Amazon Web Services Certificate Manager (ACM).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string CustomEndpointCertificateArn { get => this._customEndpointCertificateArn; set => this._customEndpointCertificateArn = value; }

        /// <summary>Backing field for <see cref="CustomEndpointEnabled" /> property.</summary>
        private bool? _customEndpointEnabled;

        /// <summary><p>Whether to enable a custom endpoint for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? CustomEndpointEnabled { get => this._customEndpointEnabled; set => this._customEndpointEnabled = value; }

        /// <summary>Backing field for <see cref="EnforceHttps" /> property.</summary>
        private bool? _enforceHttps;

        /// <summary><p>True to require that all traffic to the domain arrive over HTTPS.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? EnforceHttps { get => this._enforceHttps; set => this._enforceHttps = value; }

        /// <summary>Internal Acessors for TlsSecurityPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITlsSecurityPolicyEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDomainEndpointOptionsInternal.TlsSecurityPolicy { get => (this._tlsSecurityPolicy = this._tlsSecurityPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TlsSecurityPolicyEnumValue()); set { {_tlsSecurityPolicy = value;} } }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TlsSecurityPolicy? TlSecurityPolicyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITlsSecurityPolicyEnumValueInternal)TlsSecurityPolicy).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITlsSecurityPolicyEnumValueInternal)TlsSecurityPolicy).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TlsSecurityPolicy)""); }

        /// <summary>Backing field for <see cref="TlsSecurityPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITlsSecurityPolicyEnumValue _tlsSecurityPolicy;

        /// <summary>
        /// <p>Specify the TLS security policy to apply to the HTTPS endpoint of the domain. The policy can be one of the following
        /// values:</p> <ul> <li> <p> <b>Policy-Min-TLS-1-0-2019-07:</b> TLS security policy that supports TLS version 1.0 to TLS
        /// version 1.2</p> </li> <li> <p> <b>Policy-Min-TLS-1-2-2019-07:</b> TLS security policy that supports only TLS version 1.2</p>
        /// </li> <li> <p> <b>Policy-Min-TLS-1-2-PFS-2023-10:</b> TLS security policy that supports TLS version 1.2 to TLS version
        /// 1.3 with perfect forward secrecy cipher suites</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITlsSecurityPolicyEnumValue TlsSecurityPolicy { get => (this._tlsSecurityPolicy = this._tlsSecurityPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TlsSecurityPolicyEnumValue()); set => this._tlsSecurityPolicy = value; }

        /// <summary>Creates an new <see cref="DomainEndpointOptions" /> instance.</summary>
        public DomainEndpointOptions()
        {

        }
    }
    /// Definition of DomainEndpointOptions
    public partial interface IDomainEndpointOptions :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>The fully qualified URL for the custom endpoint.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The fully qualified URL for the custom endpoint.</p>",
        SerializedName = @"customEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string CustomEndpoint { get; set; }
        /// <summary>
        /// <p>The ARN for your security certificate, managed in Amazon Web Services Certificate Manager (ACM).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN for your security certificate, managed in Amazon Web Services Certificate Manager (ACM).</p>",
        SerializedName = @"customEndpointCertificateArn",
        PossibleTypes = new [] { typeof(string) })]
        string CustomEndpointCertificateArn { get; set; }
        /// <summary><p>Whether to enable a custom endpoint for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether to enable a custom endpoint for the domain.</p>",
        SerializedName = @"customEndpointEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CustomEndpointEnabled { get; set; }
        /// <summary><p>True to require that all traffic to the domain arrive over HTTPS.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True to require that all traffic to the domain arrive over HTTPS.</p>",
        SerializedName = @"enforceHTTPS",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnforceHttps { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TlsSecurityPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TlsSecurityPolicy? TlSecurityPolicyValue { get; set; }

    }
    /// Definition of DomainEndpointOptions
    internal partial interface IDomainEndpointOptionsInternal

    {
        /// <summary><p>The fully qualified URL for the custom endpoint.</p></summary>
        string CustomEndpoint { get; set; }
        /// <summary>
        /// <p>The ARN for your security certificate, managed in Amazon Web Services Certificate Manager (ACM).</p>
        /// </summary>
        string CustomEndpointCertificateArn { get; set; }
        /// <summary><p>Whether to enable a custom endpoint for the domain.</p></summary>
        bool? CustomEndpointEnabled { get; set; }
        /// <summary><p>True to require that all traffic to the domain arrive over HTTPS.</p></summary>
        bool? EnforceHttps { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TlsSecurityPolicy? TlSecurityPolicyValue { get; set; }
        /// <summary>
        /// <p>Specify the TLS security policy to apply to the HTTPS endpoint of the domain. The policy can be one of the following
        /// values:</p> <ul> <li> <p> <b>Policy-Min-TLS-1-0-2019-07:</b> TLS security policy that supports TLS version 1.0 to TLS
        /// version 1.2</p> </li> <li> <p> <b>Policy-Min-TLS-1-2-2019-07:</b> TLS security policy that supports only TLS version 1.2</p>
        /// </li> <li> <p> <b>Policy-Min-TLS-1-2-PFS-2023-10:</b> TLS security policy that supports TLS version 1.2 to TLS version
        /// 1.3 with perfect forward secrecy cipher suites</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITlsSecurityPolicyEnumValue TlsSecurityPolicy { get; set; }

    }
}