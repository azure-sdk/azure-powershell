// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ServerlessV2ScalingConfiguration</summary>
    public partial class ServerlessV2ScalingConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerlessV2ScalingConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerlessV2ScalingConfigurationInternal
    {

        /// <summary>Backing field for <see cref="MaxCapacity" /> property.</summary>
        private float? _maxCapacity;

        /// <summary>
        /// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify
        /// ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public float? MaxCapacity { get => this._maxCapacity; set => this._maxCapacity = value; }

        /// <summary>Backing field for <see cref="MinCapacity" /> property.</summary>
        private float? _minCapacity;

        /// <summary>
        /// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify
        /// ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public float? MinCapacity { get => this._minCapacity; set => this._minCapacity = value; }

        /// <summary>Creates an new <see cref="ServerlessV2ScalingConfiguration" /> instance.</summary>
        public ServerlessV2ScalingConfiguration()
        {

        }
    }
    /// Definition of ServerlessV2ScalingConfiguration
    public partial interface IServerlessV2ScalingConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify
        /// ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.",
        SerializedName = @"maxCapacity",
        PossibleTypes = new [] { typeof(float) })]
        float? MaxCapacity { get; set; }
        /// <summary>
        /// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify
        /// ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.",
        SerializedName = @"minCapacity",
        PossibleTypes = new [] { typeof(float) })]
        float? MinCapacity { get; set; }

    }
    /// Definition of ServerlessV2ScalingConfiguration
    internal partial interface IServerlessV2ScalingConfigurationInternal

    {
        /// <summary>
        /// The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify
        /// ACU values in half-step increments, such as 40, 40.5, 41, and so on. The largest value that you can use is 128.
        /// </summary>
        float? MaxCapacity { get; set; }
        /// <summary>
        /// The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster. You can specify
        /// ACU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value that you can use is 0.5.
        /// </summary>
        float? MinCapacity { get; set; }

    }
}