// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsIamRole</summary>
    public partial class AwsIamRoleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsIamRoleProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsIamRolePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Backing field for <see cref="AssumeRolePolicyDocument" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsIamRolePropertiesAssumeRolePolicyDocument _assumeRolePolicyDocument;

        /// <summary>
        /// The trust policy that is associated with this role. Trust policies define which entities can assume the role. You can
        /// associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template
        /// Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples).
        /// For more information about the elements that you can use in an IAM policy, see [Policy Elements Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html)
        /// in the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsIamRolePropertiesAssumeRolePolicyDocument AssumeRolePolicyDocument { get => (this._assumeRolePolicyDocument = this._assumeRolePolicyDocument ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsIamRolePropertiesAssumeRolePolicyDocument()); set => this._assumeRolePolicyDocument = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>A description of the role that you provide.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="ManagedPolicyArn" /> property.</summary>
        private string[] _managedPolicyArn;

        /// <summary>
        /// A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role. For more information
        /// about ARNs, see [Amazon Resource Names (ARNs) and Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
        /// in the *General Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] ManagedPolicyArn { get => this._managedPolicyArn; set => this._managedPolicyArn = value; }

        /// <summary>Backing field for <see cref="MaxSessionDuration" /> property.</summary>
        private int? _maxSessionDuration;

        /// <summary>
        /// The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for
        /// this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours. Anyone
        /// who assumes the role from the CLI or API can use the ``DurationSeconds`` API parameter or the ``duration-seconds`` CLI
        /// parameter to request a longer session. The ``MaxSessionDuration`` setting determines the maximum duration that can be
        /// requested using the ``DurationSeconds`` parameter. If users don't specify a value for the ``DurationSeconds`` parameter,
        /// their security credentials are valid for one hour by default. This applies when you use the ``AssumeRole*`` API operations
        /// or the ``assume-role*`` CLI operations but does not apply when you use those operations to create a console URL. For more
        /// information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in the *IAM User
        /// Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? MaxSessionDuration { get => this._maxSessionDuration; set => this._maxSessionDuration = value; }

        /// <summary>Backing field for <see cref="Path" /> property.</summary>
        private string _path;

        /// <summary>
        /// The path to the role. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
        /// in the *IAM User Guide*. This parameter is optional. If it is not included, it defaults to a slash (/). This parameter
        /// allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters
        /// consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition,
        /// it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation
        /// characters, digits, and upper and lowercased letters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Path { get => this._path; set => this._path = value; }

        /// <summary>Backing field for <see cref="PermissionsBoundary" /> property.</summary>
        private string _permissionsBoundary;

        /// <summary>
        /// The ARN of the policy used to set the permissions boundary for the role. For more information about permissions boundaries,
        /// see [Permissions boundaries for IAM identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html)
        /// in the *IAM User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PermissionsBoundary { get => this._permissionsBoundary; set => this._permissionsBoundary = value; }

        /// <summary>Backing field for <see cref="Policy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPolicyAutoGenerated[] _policy;

        /// <summary>
        /// Adds or updates an inline policy document that is embedded in the specified IAM role. When you embed an inline policy
        /// in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created
        /// at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to
        /// [Using Roles to Delegate Permissions and Federate Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html).
        /// A role can also have an attached managed policy. For information about policies, see [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html)
        /// in the *User Guide*. For information about limits on the number of inline policies that you can embed with a role, see
        /// [Limitations on Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*.
        /// If an external policy (such as ``AWS::IAM::Policy`` or
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPolicyAutoGenerated[] Policy { get => this._policy; set => this._policy = value; }

        /// <summary>Backing field for <see cref="RoleId" /> property.</summary>
        private string _roleId;

        /// <summary>Property roleId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RoleId { get => this._roleId; set => this._roleId = value; }

        /// <summary>Backing field for <see cref="RoleName" /> property.</summary>
        private string _roleName;

        /// <summary>
        /// A name for the IAM role, up to 64 characters in length. For valid values, see the ``RoleName`` parameter for the [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html)
        /// action in the *User Guide*. This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex))
        /// a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include
        /// any of the following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished
        /// by case. For example, you cannot create roles named both 'Role1' and 'role1'. If you don't specify a name, CFN generates
        /// a unique physical ID and uses that ID for the role name. If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM``
        /// value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/Use
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RoleName { get => this._roleName; set => this._roleName = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated33[] _tag;

        /// <summary>
        /// A list of tags that are attached to the role. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
        /// in the *IAM User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated33[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Creates an new <see cref="AwsIamRoleProperties" /> instance.</summary>
        public AwsIamRoleProperties()
        {

        }
    }
    /// Definition of awsIamRole
    public partial interface IAwsIamRoleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property arn",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// The trust policy that is associated with this role. Trust policies define which entities can assume the role. You can
        /// associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template
        /// Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples).
        /// For more information about the elements that you can use in an IAM policy, see [Policy Elements Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html)
        /// in the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The trust policy that is associated with this role. Trust policies define which entities can assume the role. You can associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples). For more information about the elements that you can use in an IAM policy, see [Policy Elements Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html) in the *User Guide*.",
        SerializedName = @"assumeRolePolicyDocument",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsIamRolePropertiesAssumeRolePolicyDocument) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsIamRolePropertiesAssumeRolePolicyDocument AssumeRolePolicyDocument { get; set; }
        /// <summary>A description of the role that you provide.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A description of the role that you provide.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role. For more information
        /// about ARNs, see [Amazon Resource Names (ARNs) and Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
        /// in the *General Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role. For more information about ARNs, see [Amazon Resource Names (ARNs) and Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.",
        SerializedName = @"managedPolicyArns",
        PossibleTypes = new [] { typeof(string) })]
        string[] ManagedPolicyArn { get; set; }
        /// <summary>
        /// The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for
        /// this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours. Anyone
        /// who assumes the role from the CLI or API can use the ``DurationSeconds`` API parameter or the ``duration-seconds`` CLI
        /// parameter to request a longer session. The ``MaxSessionDuration`` setting determines the maximum duration that can be
        /// requested using the ``DurationSeconds`` parameter. If users don't specify a value for the ``DurationSeconds`` parameter,
        /// their security credentials are valid for one hour by default. This applies when you use the ``AssumeRole*`` API operations
        /// or the ``assume-role*`` CLI operations but does not apply when you use those operations to create a console URL. For more
        /// information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in the *IAM User
        /// Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours. Anyone who assumes the role from the CLI or API can use the ``DurationSeconds`` API parameter or the ``duration-seconds`` CLI parameter to request a longer session. The ``MaxSessionDuration`` setting determines the maximum duration that can be requested using the ``DurationSeconds`` parameter. If users don't specify a value for the ``DurationSeconds`` parameter, their security credentials are valid for one hour by default. This applies when you use the ``AssumeRole*`` API operations or the ``assume-role*`` CLI operations but does not apply when you use those operations to create a console URL. For more information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in the *IAM User Guide*.",
        SerializedName = @"maxSessionDuration",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxSessionDuration { get; set; }
        /// <summary>
        /// The path to the role. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
        /// in the *IAM User Guide*. This parameter is optional. If it is not included, it defaults to a slash (/). This parameter
        /// allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters
        /// consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition,
        /// it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation
        /// characters, digits, and upper and lowercased letters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The path to the role. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*. This parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters, digits, and upper and lowercased letters.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string Path { get; set; }
        /// <summary>
        /// The ARN of the policy used to set the permissions boundary for the role. For more information about permissions boundaries,
        /// see [Permissions boundaries for IAM identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html)
        /// in the *IAM User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of the policy used to set the permissions boundary for the role. For more information about permissions boundaries, see [Permissions boundaries for IAM identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide*.",
        SerializedName = @"permissionsBoundary",
        PossibleTypes = new [] { typeof(string) })]
        string PermissionsBoundary { get; set; }
        /// <summary>
        /// Adds or updates an inline policy document that is embedded in the specified IAM role. When you embed an inline policy
        /// in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created
        /// at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to
        /// [Using Roles to Delegate Permissions and Federate Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html).
        /// A role can also have an attached managed policy. For information about policies, see [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html)
        /// in the *User Guide*. For information about limits on the number of inline policies that you can embed with a role, see
        /// [Limitations on Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*.
        /// If an external policy (such as ``AWS::IAM::Policy`` or
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Adds or updates an inline policy document that is embedded in the specified IAM role. When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to [Using Roles to Delegate Permissions and Federate Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html). A role can also have an attached managed policy. For information about policies, see [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*. For information about limits on the number of inline policies that you can embed with a role, see [Limitations on Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*.  If an external policy (such as ``AWS::IAM::Policy`` or",
        SerializedName = @"policies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPolicyAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPolicyAutoGenerated[] Policy { get; set; }
        /// <summary>Property roleId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property roleId",
        SerializedName = @"roleId",
        PossibleTypes = new [] { typeof(string) })]
        string RoleId { get; set; }
        /// <summary>
        /// A name for the IAM role, up to 64 characters in length. For valid values, see the ``RoleName`` parameter for the [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html)
        /// action in the *User Guide*. This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex))
        /// a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include
        /// any of the following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished
        /// by case. For example, you cannot create roles named both 'Role1' and 'role1'. If you don't specify a name, CFN generates
        /// a unique physical ID and uses that ID for the role name. If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM``
        /// value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/Use
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A name for the IAM role, up to 64 characters in length. For valid values, see the ``RoleName`` parameter for the [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) action in the *User Guide*. This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished by case. For example, you cannot create roles named both 'Role1' and 'role1'. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the role name. If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/Use",
        SerializedName = @"roleName",
        PossibleTypes = new [] { typeof(string) })]
        string RoleName { get; set; }
        /// <summary>
        /// A list of tags that are attached to the role. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
        /// in the *IAM User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of tags that are attached to the role. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide*.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated33) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated33[] Tag { get; set; }

    }
    /// Definition of awsIamRole
    internal partial interface IAwsIamRolePropertiesInternal

    {
        /// <summary>Property arn</summary>
        string Arn { get; set; }
        /// <summary>
        /// The trust policy that is associated with this role. Trust policies define which entities can assume the role. You can
        /// associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template
        /// Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples).
        /// For more information about the elements that you can use in an IAM policy, see [Policy Elements Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html)
        /// in the *User Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsIamRolePropertiesAssumeRolePolicyDocument AssumeRolePolicyDocument { get; set; }
        /// <summary>A description of the role that you provide.</summary>
        string Description { get; set; }
        /// <summary>
        /// A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role. For more information
        /// about ARNs, see [Amazon Resource Names (ARNs) and Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
        /// in the *General Reference*.
        /// </summary>
        string[] ManagedPolicyArn { get; set; }
        /// <summary>
        /// The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for
        /// this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours. Anyone
        /// who assumes the role from the CLI or API can use the ``DurationSeconds`` API parameter or the ``duration-seconds`` CLI
        /// parameter to request a longer session. The ``MaxSessionDuration`` setting determines the maximum duration that can be
        /// requested using the ``DurationSeconds`` parameter. If users don't specify a value for the ``DurationSeconds`` parameter,
        /// their security credentials are valid for one hour by default. This applies when you use the ``AssumeRole*`` API operations
        /// or the ``assume-role*`` CLI operations but does not apply when you use those operations to create a console URL. For more
        /// information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in the *IAM User
        /// Guide*.
        /// </summary>
        int? MaxSessionDuration { get; set; }
        /// <summary>
        /// The path to the role. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
        /// in the *IAM User Guide*. This parameter is optional. If it is not included, it defaults to a slash (/). This parameter
        /// allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters
        /// consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition,
        /// it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation
        /// characters, digits, and upper and lowercased letters.
        /// </summary>
        string Path { get; set; }
        /// <summary>
        /// The ARN of the policy used to set the permissions boundary for the role. For more information about permissions boundaries,
        /// see [Permissions boundaries for IAM identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html)
        /// in the *IAM User Guide*.
        /// </summary>
        string PermissionsBoundary { get; set; }
        /// <summary>
        /// Adds or updates an inline policy document that is embedded in the specified IAM role. When you embed an inline policy
        /// in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created
        /// at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to
        /// [Using Roles to Delegate Permissions and Federate Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html).
        /// A role can also have an attached managed policy. For information about policies, see [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html)
        /// in the *User Guide*. For information about limits on the number of inline policies that you can embed with a role, see
        /// [Limitations on Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*.
        /// If an external policy (such as ``AWS::IAM::Policy`` or
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPolicyAutoGenerated[] Policy { get; set; }
        /// <summary>Property roleId</summary>
        string RoleId { get; set; }
        /// <summary>
        /// A name for the IAM role, up to 64 characters in length. For valid values, see the ``RoleName`` parameter for the [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html)
        /// action in the *User Guide*. This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex))
        /// a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include
        /// any of the following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished
        /// by case. For example, you cannot create roles named both 'Role1' and 'role1'. If you don't specify a name, CFN generates
        /// a unique physical ID and uses that ID for the role name. If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM``
        /// value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/Use
        /// </summary>
        string RoleName { get; set; }
        /// <summary>
        /// A list of tags that are attached to the role. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
        /// in the *IAM User Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated33[] Tag { get; set; }

    }
}