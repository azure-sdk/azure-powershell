// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of CognitoOptions</summary>
    public partial class CognitoOptions :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptions,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoOptionsInternal
    {

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>
        /// <p>Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="IdentityPoolId" /> property.</summary>
        private string _identityPoolId;

        /// <summary>
        /// <p>The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string IdentityPoolId { get => this._identityPoolId; set => this._identityPoolId = value; }

        /// <summary>Backing field for <see cref="RoleArn" /> property.</summary>
        private string _roleArn;

        /// <summary>
        /// <p>The <code>AmazonOpenSearchServiceCognitoAccess</code> role that allows OpenSearch Service to configure your user pool
        /// and identity pool.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RoleArn { get => this._roleArn; set => this._roleArn = value; }

        /// <summary>Backing field for <see cref="UserPoolId" /> property.</summary>
        private string _userPoolId;

        /// <summary>
        /// <p>The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string UserPoolId { get => this._userPoolId; set => this._userPoolId = value; }

        /// <summary>Creates an new <see cref="CognitoOptions" /> instance.</summary>
        public CognitoOptions()
        {

        }
    }
    /// Definition of CognitoOptions
    public partial interface ICognitoOptions :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>
        /// <p>The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>",
        SerializedName = @"identityPoolId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPoolId { get; set; }
        /// <summary>
        /// <p>The <code>AmazonOpenSearchServiceCognitoAccess</code> role that allows OpenSearch Service to configure your user pool
        /// and identity pool.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The <code>AmazonOpenSearchServiceCognitoAccess</code> role that allows OpenSearch Service to configure your user pool and identity pool.</p>",
        SerializedName = @"roleArn",
        PossibleTypes = new [] { typeof(string) })]
        string RoleArn { get; set; }
        /// <summary>
        /// <p>The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>",
        SerializedName = @"userPoolId",
        PossibleTypes = new [] { typeof(string) })]
        string UserPoolId { get; set; }

    }
    /// Definition of CognitoOptions
    internal partial interface ICognitoOptionsInternal

    {
        /// <summary>
        /// <p>Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards.</p>
        /// </summary>
        bool? Enabled { get; set; }
        /// <summary>
        /// <p>The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        string IdentityPoolId { get; set; }
        /// <summary>
        /// <p>The <code>AmazonOpenSearchServiceCognitoAccess</code> role that allows OpenSearch Service to configure your user pool
        /// and identity pool.</p>
        /// </summary>
        string RoleArn { get; set; }
        /// <summary>
        /// <p>The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.</p>
        /// </summary>
        string UserPoolId { get; set; }

    }
}