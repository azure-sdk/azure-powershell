// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsDatabaseMigrationServiceReplicationInstance</summary>
    public partial class AwsDatabaseMigrationServiceReplicationInstanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDatabaseMigrationServiceReplicationInstanceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDatabaseMigrationServiceReplicationInstancePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllocatedStorage" /> property.</summary>
        private int? _allocatedStorage;

        /// <summary>
        /// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? AllocatedStorage { get => this._allocatedStorage; set => this._allocatedStorage = value; }

        /// <summary>Backing field for <see cref="AutoMinorVersionUpgrade" /> property.</summary>
        private bool? _autoMinorVersionUpgrade;

        /// <summary>
        /// <p>Boolean value indicating if minor version upgrades will be automatically applied to the instance.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? AutoMinorVersionUpgrade { get => this._autoMinorVersionUpgrade; set => this._autoMinorVersionUpgrade = value; }

        /// <summary>Backing field for <see cref="AvailabilityZone" /> property.</summary>
        private string _availabilityZone;

        /// <summary><p>The Availability Zone for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AvailabilityZone { get => this._availabilityZone; set => this._availabilityZone = value; }

        /// <summary>Backing field for <see cref="DnsNameServer" /> property.</summary>
        private string _dnsNameServer;

        /// <summary>
        /// <p>The DNS name servers supported for the replication instance to access your on-premise source or target database.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DnsNameServer { get => this._dnsNameServer; set => this._dnsNameServer = value; }

        /// <summary>Backing field for <see cref="EngineVersion" /> property.</summary>
        private string _engineVersion;

        /// <summary>
        /// <p>The engine version number of the replication instance.</p> <p>If an engine version number is not specified when a replication
        /// instance is created, the default is the latest engine version available.</p> <p>When modifying a major engine version
        /// of an instance, also set <code>AllowMajorVersionUpgrade</code> to <code>true</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string EngineVersion { get => this._engineVersion; set => this._engineVersion = value; }

        /// <summary>Backing field for <see cref="FreeUntil" /> property.</summary>
        private global::System.DateTime? _freeUntil;

        /// <summary>
        /// <p> The expiration date of the free replication instance that is part of the Free DMS program. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? FreeUntil { get => this._freeUntil; set => this._freeUntil = value; }

        /// <summary>Backing field for <see cref="InstanceCreateTime" /> property.</summary>
        private global::System.DateTime? _instanceCreateTime;

        /// <summary><p>The time the replication instance was created.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? InstanceCreateTime { get => this._instanceCreateTime; set => this._instanceCreateTime = value; }

        /// <summary>Backing field for <see cref="KmsKeyId" /> property.</summary>
        private string _kmsKeyId;

        /// <summary>
        /// <p>An KMS key identifier that is used to encrypt the data on the replication instance.</p> <p>If you don't specify a value
        /// for the <code>KmsKeyId</code> parameter, then DMS uses your default encryption key.</p> <p>KMS creates the default encryption
        /// key for your Amazon Web Services account. Your Amazon Web Services account has a different default encryption key for
        /// each Amazon Web Services Region.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string KmsKeyId { get => this._kmsKeyId; set => this._kmsKeyId = value; }

        /// <summary>Internal Acessors for PendingModifiedValue</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValues Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDatabaseMigrationServiceReplicationInstancePropertiesInternal.PendingModifiedValue { get => (this._pendingModifiedValue = this._pendingModifiedValue ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ReplicationPendingModifiedValues()); set { {_pendingModifiedValue = value;} } }

        /// <summary>Internal Acessors for ReplicationSubnetGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroup Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsDatabaseMigrationServiceReplicationInstancePropertiesInternal.ReplicationSubnetGroup { get => (this._replicationSubnetGroup = this._replicationSubnetGroup ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ReplicationSubnetGroup()); set { {_replicationSubnetGroup = value;} } }

        /// <summary>Backing field for <see cref="MultiAz" /> property.</summary>
        private bool? _multiAz;

        /// <summary>
        /// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code>
        /// parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? MultiAz { get => this._multiAz; set => this._multiAz = value; }

        /// <summary>Backing field for <see cref="NetworkType" /> property.</summary>
        private string _networkType;

        /// <summary>
        /// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both
        /// IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string NetworkType { get => this._networkType; set => this._networkType = value; }

        /// <summary>Backing field for <see cref="PendingModifiedValue" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValues _pendingModifiedValue;

        /// <summary><p>The pending modification values.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValues PendingModifiedValue { get => (this._pendingModifiedValue = this._pendingModifiedValue ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ReplicationPendingModifiedValues()); set => this._pendingModifiedValue = value; }

        /// <summary>
        /// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? PendingModifiedValueAllocatedStorage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValuesInternal)PendingModifiedValue).AllocatedStorage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValuesInternal)PendingModifiedValue).AllocatedStorage = value ?? default(int); }

        /// <summary><p>The engine version number of the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PendingModifiedValueEngineVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValuesInternal)PendingModifiedValue).EngineVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValuesInternal)PendingModifiedValue).EngineVersion = value ?? null; }

        /// <summary>
        /// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code>
        /// parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? PendingModifiedValueMultiAz { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValuesInternal)PendingModifiedValue).MultiAz; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValuesInternal)PendingModifiedValue).MultiAz = value ?? default(bool); }

        /// <summary>
        /// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both
        /// IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PendingModifiedValueNetworkType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValuesInternal)PendingModifiedValue).NetworkType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValuesInternal)PendingModifiedValue).NetworkType = value ?? null; }

        /// <summary>
        /// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p>
        /// <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'>
        /// Selecting the right DMS replication instance for your migration</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PendingModifiedValueReplicationInstanceClass { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValuesInternal)PendingModifiedValue).ReplicationInstanceClass; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValuesInternal)PendingModifiedValue).ReplicationInstanceClass = value ?? null; }

        /// <summary>Backing field for <see cref="PreferredMaintenanceWindow" /> property.</summary>
        private string _preferredMaintenanceWindow;

        /// <summary>
        /// <p>The maintenance window times for the replication instance. Any pending upgrades to the replication instance are performed
        /// during this time.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PreferredMaintenanceWindow { get => this._preferredMaintenanceWindow; set => this._preferredMaintenanceWindow = value; }

        /// <summary>Backing field for <see cref="PubliclyAccessible" /> property.</summary>
        private bool? _publiclyAccessible;

        /// <summary>
        /// <p> Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance
        /// with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default
        /// value is <code>true</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? PubliclyAccessible { get => this._publiclyAccessible; set => this._publiclyAccessible = value; }

        /// <summary>Backing field for <see cref="ReplicationInstanceArn" /> property.</summary>
        private string _replicationInstanceArn;

        /// <summary><p>The Amazon Resource Name (ARN) of the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ReplicationInstanceArn { get => this._replicationInstanceArn; set => this._replicationInstanceArn = value; }

        /// <summary>Backing field for <see cref="ReplicationInstanceClass" /> property.</summary>
        private string _replicationInstanceClass;

        /// <summary>
        /// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.
        /// It is a required parameter, although a default value is pre-selected in the DMS console.</p> <p>For more information on
        /// the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'>
        /// Selecting the right DMS replication instance for your migration</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ReplicationInstanceClass { get => this._replicationInstanceClass; set => this._replicationInstanceClass = value; }

        /// <summary>Backing field for <see cref="ReplicationInstanceIdentifier" /> property.</summary>
        private string _replicationInstanceIdentifier;

        /// <summary>
        /// <p>The replication instance identifier is a required parameter. This parameter is stored as a lowercase string.</p> <p>Constraints:</p>
        /// <ul> <li> <p>Must contain 1-63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p>
        /// </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code>
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ReplicationInstanceIdentifier { get => this._replicationInstanceIdentifier; set => this._replicationInstanceIdentifier = value; }

        /// <summary>Backing field for <see cref="ReplicationInstanceIpv6Address" /> property.</summary>
        private string[] _replicationInstanceIpv6Address;

        /// <summary><p>One or more IPv6 addresses for the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] ReplicationInstanceIpv6Address { get => this._replicationInstanceIpv6Address; set => this._replicationInstanceIpv6Address = value; }

        /// <summary>Backing field for <see cref="ReplicationInstancePrivateIPAddress" /> property.</summary>
        private string _replicationInstancePrivateIPAddress;

        /// <summary><p>The private IP address of the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ReplicationInstancePrivateIPAddress { get => this._replicationInstancePrivateIPAddress; set => this._replicationInstancePrivateIPAddress = value; }

        /// <summary>
        /// Backing field for <see cref="ReplicationInstancePrivateIPAddresses" /> property.
        /// </summary>
        private string[] _replicationInstancePrivateIPAddresses;

        /// <summary><p>One or more private IP addresses for the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] ReplicationInstancePrivateIPAddresses { get => this._replicationInstancePrivateIPAddresses; set => this._replicationInstancePrivateIPAddresses = value; }

        /// <summary>Backing field for <see cref="ReplicationInstancePublicIPAddress" /> property.</summary>
        private string _replicationInstancePublicIPAddress;

        /// <summary><p>The public IP address of the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ReplicationInstancePublicIPAddress { get => this._replicationInstancePublicIPAddress; set => this._replicationInstancePublicIPAddress = value; }

        /// <summary>Backing field for <see cref="ReplicationInstancePublicIPAddresses" /> property.</summary>
        private string[] _replicationInstancePublicIPAddresses;

        /// <summary><p>One or more public IP addresses for the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] ReplicationInstancePublicIPAddresses { get => this._replicationInstancePublicIPAddresses; set => this._replicationInstancePublicIPAddresses = value; }

        /// <summary>Backing field for <see cref="ReplicationInstanceStatus" /> property.</summary>
        private string _replicationInstanceStatus;

        /// <summary>
        /// <p>The status of the replication instance. The possible return values include:</p> <ul> <li> <p> <code>'available'</code>
        /// </p> </li> <li> <p> <code>'creating'</code> </p> </li> <li> <p> <code>'deleted'</code> </p> </li> <li> <p> <code>'deleting'</code>
        /// </p> </li> <li> <p> <code>'failed'</code> </p> </li> <li> <p> <code>'modifying'</code> </p> </li> <li> <p> <code>'upgrading'</code>
        /// </p> </li> <li> <p> <code>'rebooting'</code> </p> </li> <li> <p> <code>'resetting-master-credentials'</code> </p> </li>
        /// <li> <p> <code>'storage-full'</code> </p> </li> <li> <p> <code>'incompatible-credentials'</code> </p> </li> <li> <p> <code>'incompatible-network'</code>
        /// </p> </li> <li> <p> <code>'maintenance'</code> </p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ReplicationInstanceStatus { get => this._replicationInstanceStatus; set => this._replicationInstanceStatus = value; }

        /// <summary>Backing field for <see cref="ReplicationSubnetGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroup _replicationSubnetGroup;

        /// <summary><p>The subnet group for the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroup ReplicationSubnetGroup { get => (this._replicationSubnetGroup = this._replicationSubnetGroup ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ReplicationSubnetGroup()); set => this._replicationSubnetGroup = value; }

        /// <summary><p>A description for the replication subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ReplicationSubnetGroupReplicationSubnetGroupDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).Description = value ?? null; }

        /// <summary><p>The identifier of the replication instance subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ReplicationSubnetGroupReplicationSubnetGroupIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).Identifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).Identifier = value ?? null; }

        /// <summary><p>The status of the subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ReplicationSubnetGroupStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).SubnetGroupStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).SubnetGroupStatus = value ?? null; }

        /// <summary><p>The subnets that are in the subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISubnet[] ReplicationSubnetGroupSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).Subnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).Subnet = value ?? null /* arrayOf */; }

        /// <summary>
        /// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as
        /// IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] ReplicationSubnetGroupSupportedNetworkType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).SupportedNetworkType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).SupportedNetworkType = value ?? null /* arrayOf */; }

        /// <summary><p>The ID of the VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ReplicationSubnetGroupVpcId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).VpcId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroupInternal)ReplicationSubnetGroup).VpcId = value ?? null; }

        /// <summary>Backing field for <see cref="SecondaryAvailabilityZone" /> property.</summary>
        private string _secondaryAvailabilityZone;

        /// <summary>
        /// <p>The Availability Zone of the standby replication instance in a Multi-AZ deployment.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SecondaryAvailabilityZone { get => this._secondaryAvailabilityZone; set => this._secondaryAvailabilityZone = value; }

        /// <summary>Backing field for <see cref="VpcSecurityGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcSecurityGroupMembership[] _vpcSecurityGroup;

        /// <summary><p>The VPC security group for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcSecurityGroupMembership[] VpcSecurityGroup { get => this._vpcSecurityGroup; set => this._vpcSecurityGroup = value; }

        /// <summary>
        /// Creates an new <see cref="AwsDatabaseMigrationServiceReplicationInstanceProperties" /> instance.
        /// </summary>
        public AwsDatabaseMigrationServiceReplicationInstanceProperties()
        {

        }
    }
    /// Definition of awsDatabaseMigrationServiceReplicationInstance
    public partial interface IAwsDatabaseMigrationServiceReplicationInstanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>",
        SerializedName = @"allocatedStorage",
        PossibleTypes = new [] { typeof(int) })]
        int? AllocatedStorage { get; set; }
        /// <summary>
        /// <p>Boolean value indicating if minor version upgrades will be automatically applied to the instance.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Boolean value indicating if minor version upgrades will be automatically applied to the instance.</p>",
        SerializedName = @"autoMinorVersionUpgrade",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoMinorVersionUpgrade { get; set; }
        /// <summary><p>The Availability Zone for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Availability Zone for the instance.</p>",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZone { get; set; }
        /// <summary>
        /// <p>The DNS name servers supported for the replication instance to access your on-premise source or target database.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The DNS name servers supported for the replication instance to access your on-premise source or target database.</p>",
        SerializedName = @"dnsNameServers",
        PossibleTypes = new [] { typeof(string) })]
        string DnsNameServer { get; set; }
        /// <summary>
        /// <p>The engine version number of the replication instance.</p> <p>If an engine version number is not specified when a replication
        /// instance is created, the default is the latest engine version available.</p> <p>When modifying a major engine version
        /// of an instance, also set <code>AllowMajorVersionUpgrade</code> to <code>true</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The engine version number of the replication instance.</p> <p>If an engine version number is not specified when a replication instance is created, the default is the latest engine version available.</p> <p>When modifying a major engine version of an instance, also set <code>AllowMajorVersionUpgrade</code> to <code>true</code>.</p>",
        SerializedName = @"engineVersion",
        PossibleTypes = new [] { typeof(string) })]
        string EngineVersion { get; set; }
        /// <summary>
        /// <p> The expiration date of the free replication instance that is part of the Free DMS program. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> The expiration date of the free replication instance that is part of the Free DMS program. </p>",
        SerializedName = @"freeUntil",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FreeUntil { get; set; }
        /// <summary><p>The time the replication instance was created.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time the replication instance was created.</p>",
        SerializedName = @"instanceCreateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InstanceCreateTime { get; set; }
        /// <summary>
        /// <p>An KMS key identifier that is used to encrypt the data on the replication instance.</p> <p>If you don't specify a value
        /// for the <code>KmsKeyId</code> parameter, then DMS uses your default encryption key.</p> <p>KMS creates the default encryption
        /// key for your Amazon Web Services account. Your Amazon Web Services account has a different default encryption key for
        /// each Amazon Web Services Region.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An KMS key identifier that is used to encrypt the data on the replication instance.</p> <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then DMS uses your default encryption key.</p> <p>KMS creates the default encryption key for your Amazon Web Services account. Your Amazon Web Services account has a different default encryption key for each Amazon Web Services Region.</p>",
        SerializedName = @"kmsKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string KmsKeyId { get; set; }
        /// <summary>
        /// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code>
        /// parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>",
        SerializedName = @"multiAZ",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MultiAz { get; set; }
        /// <summary>
        /// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both
        /// IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>",
        SerializedName = @"networkType",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkType { get; set; }
        /// <summary>
        /// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>",
        SerializedName = @"allocatedStorage",
        PossibleTypes = new [] { typeof(int) })]
        int? PendingModifiedValueAllocatedStorage { get; set; }
        /// <summary><p>The engine version number of the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The engine version number of the replication instance.</p>",
        SerializedName = @"engineVersion",
        PossibleTypes = new [] { typeof(string) })]
        string PendingModifiedValueEngineVersion { get; set; }
        /// <summary>
        /// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code>
        /// parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>",
        SerializedName = @"multiAZ",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PendingModifiedValueMultiAz { get; set; }
        /// <summary>
        /// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both
        /// IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>",
        SerializedName = @"networkType",
        PossibleTypes = new [] { typeof(string) })]
        string PendingModifiedValueNetworkType { get; set; }
        /// <summary>
        /// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p>
        /// <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'>
        /// Selecting the right DMS replication instance for your migration</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'> Selecting the right DMS replication instance for your migration</a>. </p>",
        SerializedName = @"replicationInstanceClass",
        PossibleTypes = new [] { typeof(string) })]
        string PendingModifiedValueReplicationInstanceClass { get; set; }
        /// <summary>
        /// <p>The maintenance window times for the replication instance. Any pending upgrades to the replication instance are performed
        /// during this time.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The maintenance window times for the replication instance. Any pending upgrades to the replication instance are performed during this time.</p>",
        SerializedName = @"preferredMaintenanceWindow",
        PossibleTypes = new [] { typeof(string) })]
        string PreferredMaintenanceWindow { get; set; }
        /// <summary>
        /// <p> Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance
        /// with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default
        /// value is <code>true</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. </p>",
        SerializedName = @"publiclyAccessible",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PubliclyAccessible { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) of the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the replication instance.</p>",
        SerializedName = @"replicationInstanceArn",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationInstanceArn { get; set; }
        /// <summary>
        /// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.
        /// It is a required parameter, although a default value is pre-selected in the DMS console.</p> <p>For more information on
        /// the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'>
        /// Selecting the right DMS replication instance for your migration</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The compute and memory capacity of the replication instance as defined for the specified replication instance class. It is a required parameter, although a default value is pre-selected in the DMS console.</p> <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'> Selecting the right DMS replication instance for your migration</a>. </p>",
        SerializedName = @"replicationInstanceClass",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationInstanceClass { get; set; }
        /// <summary>
        /// <p>The replication instance identifier is a required parameter. This parameter is stored as a lowercase string.</p> <p>Constraints:</p>
        /// <ul> <li> <p>Must contain 1-63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p>
        /// </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code>
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The replication instance identifier is a required parameter. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1-63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>",
        SerializedName = @"replicationInstanceIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationInstanceIdentifier { get; set; }
        /// <summary><p>One or more IPv6 addresses for the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>One or more IPv6 addresses for the replication instance.</p>",
        SerializedName = @"replicationInstanceIpv6Addresses",
        PossibleTypes = new [] { typeof(string) })]
        string[] ReplicationInstanceIpv6Address { get; set; }
        /// <summary><p>The private IP address of the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The private IP address of the replication instance.</p>",
        SerializedName = @"replicationInstancePrivateIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationInstancePrivateIPAddress { get; set; }
        /// <summary><p>One or more private IP addresses for the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>One or more private IP addresses for the replication instance.</p>",
        SerializedName = @"replicationInstancePrivateIpAddresses",
        PossibleTypes = new [] { typeof(string) })]
        string[] ReplicationInstancePrivateIPAddresses { get; set; }
        /// <summary><p>The public IP address of the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The public IP address of the replication instance.</p>",
        SerializedName = @"replicationInstancePublicIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationInstancePublicIPAddress { get; set; }
        /// <summary><p>One or more public IP addresses for the replication instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>One or more public IP addresses for the replication instance.</p>",
        SerializedName = @"replicationInstancePublicIpAddresses",
        PossibleTypes = new [] { typeof(string) })]
        string[] ReplicationInstancePublicIPAddresses { get; set; }
        /// <summary>
        /// <p>The status of the replication instance. The possible return values include:</p> <ul> <li> <p> <code>'available'</code>
        /// </p> </li> <li> <p> <code>'creating'</code> </p> </li> <li> <p> <code>'deleted'</code> </p> </li> <li> <p> <code>'deleting'</code>
        /// </p> </li> <li> <p> <code>'failed'</code> </p> </li> <li> <p> <code>'modifying'</code> </p> </li> <li> <p> <code>'upgrading'</code>
        /// </p> </li> <li> <p> <code>'rebooting'</code> </p> </li> <li> <p> <code>'resetting-master-credentials'</code> </p> </li>
        /// <li> <p> <code>'storage-full'</code> </p> </li> <li> <p> <code>'incompatible-credentials'</code> </p> </li> <li> <p> <code>'incompatible-network'</code>
        /// </p> </li> <li> <p> <code>'maintenance'</code> </p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The status of the replication instance. The possible return values include:</p> <ul> <li> <p> <code>'available'</code> </p> </li> <li> <p> <code>'creating'</code> </p> </li> <li> <p> <code>'deleted'</code> </p> </li> <li> <p> <code>'deleting'</code> </p> </li> <li> <p> <code>'failed'</code> </p> </li> <li> <p> <code>'modifying'</code> </p> </li> <li> <p> <code>'upgrading'</code> </p> </li> <li> <p> <code>'rebooting'</code> </p> </li> <li> <p> <code>'resetting-master-credentials'</code> </p> </li> <li> <p> <code>'storage-full'</code> </p> </li> <li> <p> <code>'incompatible-credentials'</code> </p> </li> <li> <p> <code>'incompatible-network'</code> </p> </li> <li> <p> <code>'maintenance'</code> </p> </li> </ul>",
        SerializedName = @"replicationInstanceStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationInstanceStatus { get; set; }
        /// <summary><p>A description for the replication subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A description for the replication subnet group.</p>",
        SerializedName = @"replicationSubnetGroupDescription",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationSubnetGroupReplicationSubnetGroupDescription { get; set; }
        /// <summary><p>The identifier of the replication instance subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The identifier of the replication instance subnet group.</p>",
        SerializedName = @"replicationSubnetGroupIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationSubnetGroupReplicationSubnetGroupIdentifier { get; set; }
        /// <summary><p>The status of the subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The status of the subnet group.</p>",
        SerializedName = @"subnetGroupStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationSubnetGroupStatus { get; set; }
        /// <summary><p>The subnets that are in the subnet group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The subnets that are in the subnet group.</p>",
        SerializedName = @"subnets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISubnet) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISubnet[] ReplicationSubnetGroupSubnet { get; set; }
        /// <summary>
        /// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as
        /// IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>",
        SerializedName = @"supportedNetworkTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] ReplicationSubnetGroupSupportedNetworkType { get; set; }
        /// <summary><p>The ID of the VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the VPC.</p>",
        SerializedName = @"vpcId",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationSubnetGroupVpcId { get; set; }
        /// <summary>
        /// <p>The Availability Zone of the standby replication instance in a Multi-AZ deployment.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Availability Zone of the standby replication instance in a Multi-AZ deployment.</p>",
        SerializedName = @"secondaryAvailabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string SecondaryAvailabilityZone { get; set; }
        /// <summary><p>The VPC security group for the instance.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The VPC security group for the instance.</p>",
        SerializedName = @"vpcSecurityGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcSecurityGroupMembership) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcSecurityGroupMembership[] VpcSecurityGroup { get; set; }

    }
    /// Definition of awsDatabaseMigrationServiceReplicationInstance
    internal partial interface IAwsDatabaseMigrationServiceReplicationInstancePropertiesInternal

    {
        /// <summary>
        /// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
        /// </summary>
        int? AllocatedStorage { get; set; }
        /// <summary>
        /// <p>Boolean value indicating if minor version upgrades will be automatically applied to the instance.</p>
        /// </summary>
        bool? AutoMinorVersionUpgrade { get; set; }
        /// <summary><p>The Availability Zone for the instance.</p></summary>
        string AvailabilityZone { get; set; }
        /// <summary>
        /// <p>The DNS name servers supported for the replication instance to access your on-premise source or target database.</p>
        /// </summary>
        string DnsNameServer { get; set; }
        /// <summary>
        /// <p>The engine version number of the replication instance.</p> <p>If an engine version number is not specified when a replication
        /// instance is created, the default is the latest engine version available.</p> <p>When modifying a major engine version
        /// of an instance, also set <code>AllowMajorVersionUpgrade</code> to <code>true</code>.</p>
        /// </summary>
        string EngineVersion { get; set; }
        /// <summary>
        /// <p> The expiration date of the free replication instance that is part of the Free DMS program. </p>
        /// </summary>
        global::System.DateTime? FreeUntil { get; set; }
        /// <summary><p>The time the replication instance was created.</p></summary>
        global::System.DateTime? InstanceCreateTime { get; set; }
        /// <summary>
        /// <p>An KMS key identifier that is used to encrypt the data on the replication instance.</p> <p>If you don't specify a value
        /// for the <code>KmsKeyId</code> parameter, then DMS uses your default encryption key.</p> <p>KMS creates the default encryption
        /// key for your Amazon Web Services account. Your Amazon Web Services account has a different default encryption key for
        /// each Amazon Web Services Region.</p>
        /// </summary>
        string KmsKeyId { get; set; }
        /// <summary>
        /// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code>
        /// parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
        /// </summary>
        bool? MultiAz { get; set; }
        /// <summary>
        /// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both
        /// IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        string NetworkType { get; set; }
        /// <summary><p>The pending modification values.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationPendingModifiedValues PendingModifiedValue { get; set; }
        /// <summary>
        /// <p>The amount of storage (in gigabytes) that is allocated for the replication instance.</p>
        /// </summary>
        int? PendingModifiedValueAllocatedStorage { get; set; }
        /// <summary><p>The engine version number of the replication instance.</p></summary>
        string PendingModifiedValueEngineVersion { get; set; }
        /// <summary>
        /// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code>
        /// parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
        /// </summary>
        bool? PendingModifiedValueMultiAz { get; set; }
        /// <summary>
        /// <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both
        /// IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        string PendingModifiedValueNetworkType { get; set; }
        /// <summary>
        /// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.</p>
        /// <p>For more information on the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'>
        /// Selecting the right DMS replication instance for your migration</a>. </p>
        /// </summary>
        string PendingModifiedValueReplicationInstanceClass { get; set; }
        /// <summary>
        /// <p>The maintenance window times for the replication instance. Any pending upgrades to the replication instance are performed
        /// during this time.</p>
        /// </summary>
        string PreferredMaintenanceWindow { get; set; }
        /// <summary>
        /// <p> Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance
        /// with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default
        /// value is <code>true</code>. </p>
        /// </summary>
        bool? PubliclyAccessible { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) of the replication instance.</p></summary>
        string ReplicationInstanceArn { get; set; }
        /// <summary>
        /// <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class.
        /// It is a required parameter, although a default value is pre-selected in the DMS console.</p> <p>For more information on
        /// the settings and capacities for the available replication instance classes, see <a href='https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth'>
        /// Selecting the right DMS replication instance for your migration</a>. </p>
        /// </summary>
        string ReplicationInstanceClass { get; set; }
        /// <summary>
        /// <p>The replication instance identifier is a required parameter. This parameter is stored as a lowercase string.</p> <p>Constraints:</p>
        /// <ul> <li> <p>Must contain 1-63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p>
        /// </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code>
        /// </p>
        /// </summary>
        string ReplicationInstanceIdentifier { get; set; }
        /// <summary><p>One or more IPv6 addresses for the replication instance.</p></summary>
        string[] ReplicationInstanceIpv6Address { get; set; }
        /// <summary><p>The private IP address of the replication instance.</p></summary>
        string ReplicationInstancePrivateIPAddress { get; set; }
        /// <summary><p>One or more private IP addresses for the replication instance.</p></summary>
        string[] ReplicationInstancePrivateIPAddresses { get; set; }
        /// <summary><p>The public IP address of the replication instance.</p></summary>
        string ReplicationInstancePublicIPAddress { get; set; }
        /// <summary><p>One or more public IP addresses for the replication instance.</p></summary>
        string[] ReplicationInstancePublicIPAddresses { get; set; }
        /// <summary>
        /// <p>The status of the replication instance. The possible return values include:</p> <ul> <li> <p> <code>'available'</code>
        /// </p> </li> <li> <p> <code>'creating'</code> </p> </li> <li> <p> <code>'deleted'</code> </p> </li> <li> <p> <code>'deleting'</code>
        /// </p> </li> <li> <p> <code>'failed'</code> </p> </li> <li> <p> <code>'modifying'</code> </p> </li> <li> <p> <code>'upgrading'</code>
        /// </p> </li> <li> <p> <code>'rebooting'</code> </p> </li> <li> <p> <code>'resetting-master-credentials'</code> </p> </li>
        /// <li> <p> <code>'storage-full'</code> </p> </li> <li> <p> <code>'incompatible-credentials'</code> </p> </li> <li> <p> <code>'incompatible-network'</code>
        /// </p> </li> <li> <p> <code>'maintenance'</code> </p> </li> </ul>
        /// </summary>
        string ReplicationInstanceStatus { get; set; }
        /// <summary><p>The subnet group for the replication instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReplicationSubnetGroup ReplicationSubnetGroup { get; set; }
        /// <summary><p>A description for the replication subnet group.</p></summary>
        string ReplicationSubnetGroupReplicationSubnetGroupDescription { get; set; }
        /// <summary><p>The identifier of the replication instance subnet group.</p></summary>
        string ReplicationSubnetGroupReplicationSubnetGroupIdentifier { get; set; }
        /// <summary><p>The status of the subnet group.</p></summary>
        string ReplicationSubnetGroupStatus { get; set; }
        /// <summary><p>The subnets that are in the subnet group.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISubnet[] ReplicationSubnetGroupSubnet { get; set; }
        /// <summary>
        /// <p>The IP addressing protocol supported by the subnet group. This is used by a replication instance with values such as
        /// IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
        /// </summary>
        string[] ReplicationSubnetGroupSupportedNetworkType { get; set; }
        /// <summary><p>The ID of the VPC.</p></summary>
        string ReplicationSubnetGroupVpcId { get; set; }
        /// <summary>
        /// <p>The Availability Zone of the standby replication instance in a Multi-AZ deployment.</p>
        /// </summary>
        string SecondaryAvailabilityZone { get; set; }
        /// <summary><p>The VPC security group for the instance.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcSecurityGroupMembership[] VpcSecurityGroup { get; set; }

    }
}