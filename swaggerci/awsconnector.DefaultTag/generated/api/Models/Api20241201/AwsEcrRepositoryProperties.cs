// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEcrRepository</summary>
    public partial class AwsEcrRepositoryProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrRepositoryProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrRepositoryPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Backing field for <see cref="EmptyOnDelete" /> property.</summary>
        private bool? _emptyOnDelete;

        /// <summary>
        /// If true, deleting the repository force deletes the contents of the repository. If false, the repository must be empty
        /// before attempting to delete it. If true, deleting the repository force deletes the contents of the repository. Without
        /// a force delete, you can only delete empty repositories.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? EmptyOnDelete { get => this._emptyOnDelete; set => this._emptyOnDelete = value; }

        /// <summary>Backing field for <see cref="EncryptionConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfiguration _encryptionConfiguration;

        /// <summary>
        /// The encryption configuration for the repository. This determines how the contents of your repository are encrypted at
        /// rest. The encryption configuration for the repository. This determines how the contents of your repository are encrypted
        /// at rest. By default, when no encryption configuration is set or the ``AES256`` encryption type is used, Amazon ECR uses
        /// server-side encryption with Amazon S3-managed encryption keys which encrypts your data at rest using an AES-256 encryption
        /// algorithm. This does not require any action on your part. For more control over the encryption of the contents of your
        /// repository, you can use server-side encryption with KMSlong key stored in KMSlong (KMS) to encrypt your images. For more
        /// information, see [Amazon ECR encryption at rest](https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html)
        /// in the *Amazon Elastic Container Registry User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfiguration EncryptionConfiguration { get => (this._encryptionConfiguration = this._encryptionConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EncryptionConfiguration()); set => this._encryptionConfiguration = value; }

        /// <summary>
        /// The encryption type to use. If you use the ``KMS`` encryption type, the contents of the repository will be encrypted using
        /// server-side encryption with KMSlong key stored in KMS. When you use KMS to encrypt your data, you can either use the default
        /// AWS managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see
        /// [Protecting data using server-side encryption with an key stored in (SSE-KMS)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html)
        /// in the *Amazon Simple Storage Service Console Developer Guide*. If you use the ``AES256`` encryption type, Amazon ECR
        /// uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an
        /// AES-256 encryption algorithm. For more information, see [Protecting data using server-side encryption with Amazon S3-managed
        /// encryption keys (SSE-S3)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html) in the *Ama
        /// The encryption type to use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EncryptionConfigurationEncryptionType? EncryptionConfigurationEncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfigurationInternal)EncryptionConfiguration).EncryptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfigurationInternal)EncryptionConfiguration).EncryptionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EncryptionConfigurationEncryptionType)""); }

        /// <summary>
        /// If you use the ``KMS`` encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the
        /// KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default
        /// AWS managed KMS key for Amazon ECR will be used. If you use the KMS encryption type, specify the CMK to use for encryption.
        /// The alias, key ID, or full ARN of the CMK can be specified. The key must exist in the same Region as the repository. If
        /// no key is specified, the default AWS managed CMK for Amazon ECR will be used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EncryptionConfigurationKmsKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfigurationInternal)EncryptionConfiguration).KmsKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfigurationInternal)EncryptionConfiguration).KmsKey = value ?? null; }

        /// <summary>Backing field for <see cref="ImageScanningConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanningConfiguration _imageScanningConfiguration;

        /// <summary>
        /// The image scanning configuration for the repository. This determines whether images are scanned for known vulnerabilities
        /// after being pushed to the repository. The image scanning configuration for a repository.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanningConfiguration ImageScanningConfiguration { get => (this._imageScanningConfiguration = this._imageScanningConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageScanningConfiguration()); set => this._imageScanningConfiguration = value; }

        /// <summary>
        /// The setting that determines whether images are scanned after being pushed to a repository. If set to ``true``, images
        /// will be scanned after being pushed. If this parameter is not specified, it will default to ``false`` and images will not
        /// be scanned unless a scan is manually started. The setting that determines whether images are scanned after being pushed
        /// to a repository.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ImageScanningConfigurationScanOnPush { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanningConfigurationInternal)ImageScanningConfiguration).ScanOnPush; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanningConfigurationInternal)ImageScanningConfiguration).ScanOnPush = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ImageTagMutability" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTagMutability? _imageTagMutability;

        /// <summary>
        /// The tag mutability setting for the repository. If this parameter is omitted, the default setting of ``MUTABLE`` will be
        /// used which will allow image tags to be overwritten. If ``IMMUTABLE`` is specified, all image tags within the repository
        /// will be immutable which will prevent them from being overwritten.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTagMutability? ImageTagMutability { get => this._imageTagMutability; set => this._imageTagMutability = value; }

        /// <summary>Backing field for <see cref="LifecyclePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecyclePolicy _lifecyclePolicy;

        /// <summary>
        /// Creates or updates a lifecycle policy. For information about lifecycle policy syntax, see [Lifecycle policy template](https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html).
        /// The ``LifecyclePolicy`` property type specifies a lifecycle policy. For information about lifecycle policy syntax, see
        /// [Lifecycle policy template](https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html) in the *Amazon
        /// ECR User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecyclePolicy LifecyclePolicy { get => (this._lifecyclePolicy = this._lifecyclePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LifecyclePolicy()); set => this._lifecyclePolicy = value; }

        /// <summary>
        /// The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default
        /// registry is assumed. The AWS account ID associated with the registry that contains the repository. If you do not specify
        /// a registry, the default registry is assumed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LifecyclePolicyRegistryId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecyclePolicyInternal)LifecyclePolicy).RegistryId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecyclePolicyInternal)LifecyclePolicy).RegistryId = value ?? null; }

        /// <summary>
        /// The JSON repository policy text to apply to the repository. The JSON repository policy text to apply to the repository.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LifecyclePolicyText { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecyclePolicyInternal)LifecyclePolicy).Text; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecyclePolicyInternal)LifecyclePolicy).Text = value ?? null; }

        /// <summary>Internal Acessors for EncryptionConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrRepositoryPropertiesInternal.EncryptionConfiguration { get => (this._encryptionConfiguration = this._encryptionConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EncryptionConfiguration()); set { {_encryptionConfiguration = value;} } }

        /// <summary>Internal Acessors for ImageScanningConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanningConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrRepositoryPropertiesInternal.ImageScanningConfiguration { get => (this._imageScanningConfiguration = this._imageScanningConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageScanningConfiguration()); set { {_imageScanningConfiguration = value;} } }

        /// <summary>Internal Acessors for LifecyclePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecyclePolicy Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrRepositoryPropertiesInternal.LifecyclePolicy { get => (this._lifecyclePolicy = this._lifecyclePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LifecyclePolicy()); set { {_lifecyclePolicy = value;} } }

        /// <summary>Backing field for <see cref="RepositoryName" /> property.</summary>
        private string _repositoryName;

        /// <summary>
        /// The name to use for the repository. The repository name may be specified on its own (such as ``nginx-web-app``) or it
        /// can be prepended with a namespace to group the repository into a category (such as ``project-a/nginx-web-app``). If you
        /// don't specify a name, CFNlong generates a unique physical ID and uses that ID for the repository name. For more information,
        /// see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html). The repository
        /// name must start with a letter and can only contain lowercase letters, numbers, hyphens, underscores, and forward slashes.
        /// If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that
        /// require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RepositoryName { get => this._repositoryName; set => this._repositoryName = value; }

        /// <summary>Backing field for <see cref="RepositoryPolicyText" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrRepositoryPropertiesRepositoryPolicyText _repositoryPolicyText;

        /// <summary>
        /// The JSON repository policy text to apply to the repository. For more information, see [Amazon ECR repository policies](https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policy-examples.html)
        /// in the *Amazon Elastic Container Registry User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrRepositoryPropertiesRepositoryPolicyText RepositoryPolicyText { get => (this._repositoryPolicyText = this._repositoryPolicyText ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEcrRepositoryPropertiesRepositoryPolicyText()); set => this._repositoryPolicyText = value; }

        /// <summary>Backing field for <see cref="RepositoryUri" /> property.</summary>
        private string _repositoryUri;

        /// <summary>Property repositoryUri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RepositoryUri { get => this._repositoryUri; set => this._repositoryUri = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated25[] _tag;

        /// <summary>An array of key-value pairs to apply to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated25[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Creates an new <see cref="AwsEcrRepositoryProperties" /> instance.</summary>
        public AwsEcrRepositoryProperties()
        {

        }
    }
    /// Definition of awsEcrRepository
    public partial interface IAwsEcrRepositoryProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property arn",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// If true, deleting the repository force deletes the contents of the repository. If false, the repository must be empty
        /// before attempting to delete it. If true, deleting the repository force deletes the contents of the repository. Without
        /// a force delete, you can only delete empty repositories.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If true, deleting the repository force deletes the contents of the repository. If false, the repository must be empty before attempting to delete it. If true, deleting the repository force deletes the contents of the repository. Without a force delete, you can only delete empty repositories.",
        SerializedName = @"emptyOnDelete",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EmptyOnDelete { get; set; }
        /// <summary>
        /// The encryption type to use. If you use the ``KMS`` encryption type, the contents of the repository will be encrypted using
        /// server-side encryption with KMSlong key stored in KMS. When you use KMS to encrypt your data, you can either use the default
        /// AWS managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see
        /// [Protecting data using server-side encryption with an key stored in (SSE-KMS)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html)
        /// in the *Amazon Simple Storage Service Console Developer Guide*. If you use the ``AES256`` encryption type, Amazon ECR
        /// uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an
        /// AES-256 encryption algorithm. For more information, see [Protecting data using server-side encryption with Amazon S3-managed
        /// encryption keys (SSE-S3)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html) in the *Ama
        /// The encryption type to use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The encryption type to use. If you use the ``KMS`` encryption type, the contents of the repository will be encrypted using server-side encryption with KMSlong key stored in KMS. When you use KMS to encrypt your data, you can either use the default AWS managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see [Protecting data using server-side encryption with an key stored in (SSE-KMS)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html) in the *Amazon Simple Storage Service Console Developer Guide*. If you use the ``AES256`` encryption type, Amazon ECR uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an AES-256 encryption algorithm. For more information, see [Protecting data using server-side encryption with Amazon S3-managed encryption keys (SSE-S3)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html) in the *Ama The encryption type to use.",
        SerializedName = @"encryptionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EncryptionConfigurationEncryptionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EncryptionConfigurationEncryptionType? EncryptionConfigurationEncryptionType { get; set; }
        /// <summary>
        /// If you use the ``KMS`` encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the
        /// KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default
        /// AWS managed KMS key for Amazon ECR will be used. If you use the KMS encryption type, specify the CMK to use for encryption.
        /// The alias, key ID, or full ARN of the CMK can be specified. The key must exist in the same Region as the repository. If
        /// no key is specified, the default AWS managed CMK for Amazon ECR will be used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If you use the ``KMS`` encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default AWS managed KMS key for Amazon ECR will be used. If you use the KMS encryption type, specify the CMK to use for encryption. The alias, key ID, or full ARN of the CMK can be specified. The key must exist in the same Region as the repository. If no key is specified, the default AWS managed CMK for Amazon ECR will be used.",
        SerializedName = @"kmsKey",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionConfigurationKmsKey { get; set; }
        /// <summary>
        /// The setting that determines whether images are scanned after being pushed to a repository. If set to ``true``, images
        /// will be scanned after being pushed. If this parameter is not specified, it will default to ``false`` and images will not
        /// be scanned unless a scan is manually started. The setting that determines whether images are scanned after being pushed
        /// to a repository.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The setting that determines whether images are scanned after being pushed to a repository. If set to ``true``, images will be scanned after being pushed. If this parameter is not specified, it will default to ``false`` and images will not be scanned unless a scan is manually started. The setting that determines whether images are scanned after being pushed to a repository.",
        SerializedName = @"scanOnPush",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ImageScanningConfigurationScanOnPush { get; set; }
        /// <summary>
        /// The tag mutability setting for the repository. If this parameter is omitted, the default setting of ``MUTABLE`` will be
        /// used which will allow image tags to be overwritten. If ``IMMUTABLE`` is specified, all image tags within the repository
        /// will be immutable which will prevent them from being overwritten.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tag mutability setting for the repository. If this parameter is omitted, the default setting of ``MUTABLE`` will be used which will allow image tags to be overwritten. If ``IMMUTABLE`` is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.",
        SerializedName = @"imageTagMutability",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTagMutability) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTagMutability? ImageTagMutability { get; set; }
        /// <summary>
        /// The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default
        /// registry is assumed. The AWS account ID associated with the registry that contains the repository. If you do not specify
        /// a registry, the default registry is assumed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed. The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.",
        SerializedName = @"registryId",
        PossibleTypes = new [] { typeof(string) })]
        string LifecyclePolicyRegistryId { get; set; }
        /// <summary>
        /// The JSON repository policy text to apply to the repository. The JSON repository policy text to apply to the repository.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The JSON repository policy text to apply to the repository. The JSON repository policy text to apply to the repository.",
        SerializedName = @"lifecyclePolicyText",
        PossibleTypes = new [] { typeof(string) })]
        string LifecyclePolicyText { get; set; }
        /// <summary>
        /// The name to use for the repository. The repository name may be specified on its own (such as ``nginx-web-app``) or it
        /// can be prepended with a namespace to group the repository into a category (such as ``project-a/nginx-web-app``). If you
        /// don't specify a name, CFNlong generates a unique physical ID and uses that ID for the repository name. For more information,
        /// see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html). The repository
        /// name must start with a letter and can only contain lowercase letters, numbers, hyphens, underscores, and forward slashes.
        /// If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that
        /// require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name to use for the repository. The repository name may be specified on its own (such as ``nginx-web-app``) or it can be prepended with a namespace to group the repository into a category (such as ``project-a/nginx-web-app``). If you don't specify a name, CFNlong generates a unique physical ID and uses that ID for the repository name. For more information, see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html). The repository name must start with a letter and can only contain lowercase letters, numbers, hyphens, underscores, and forward slashes.  If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
        SerializedName = @"repositoryName",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryName { get; set; }
        /// <summary>
        /// The JSON repository policy text to apply to the repository. For more information, see [Amazon ECR repository policies](https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policy-examples.html)
        /// in the *Amazon Elastic Container Registry User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The JSON repository policy text to apply to the repository. For more information, see [Amazon ECR repository policies](https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policy-examples.html) in the *Amazon Elastic Container Registry User Guide*.",
        SerializedName = @"repositoryPolicyText",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrRepositoryPropertiesRepositoryPolicyText) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrRepositoryPropertiesRepositoryPolicyText RepositoryPolicyText { get; set; }
        /// <summary>Property repositoryUri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property repositoryUri",
        SerializedName = @"repositoryUri",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryUri { get; set; }
        /// <summary>An array of key-value pairs to apply to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array of key-value pairs to apply to this resource.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated25) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated25[] Tag { get; set; }

    }
    /// Definition of awsEcrRepository
    internal partial interface IAwsEcrRepositoryPropertiesInternal

    {
        /// <summary>Property arn</summary>
        string Arn { get; set; }
        /// <summary>
        /// If true, deleting the repository force deletes the contents of the repository. If false, the repository must be empty
        /// before attempting to delete it. If true, deleting the repository force deletes the contents of the repository. Without
        /// a force delete, you can only delete empty repositories.
        /// </summary>
        bool? EmptyOnDelete { get; set; }
        /// <summary>
        /// The encryption configuration for the repository. This determines how the contents of your repository are encrypted at
        /// rest. The encryption configuration for the repository. This determines how the contents of your repository are encrypted
        /// at rest. By default, when no encryption configuration is set or the ``AES256`` encryption type is used, Amazon ECR uses
        /// server-side encryption with Amazon S3-managed encryption keys which encrypts your data at rest using an AES-256 encryption
        /// algorithm. This does not require any action on your part. For more control over the encryption of the contents of your
        /// repository, you can use server-side encryption with KMSlong key stored in KMSlong (KMS) to encrypt your images. For more
        /// information, see [Amazon ECR encryption at rest](https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html)
        /// in the *Amazon Elastic Container Registry User Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfiguration EncryptionConfiguration { get; set; }
        /// <summary>
        /// The encryption type to use. If you use the ``KMS`` encryption type, the contents of the repository will be encrypted using
        /// server-side encryption with KMSlong key stored in KMS. When you use KMS to encrypt your data, you can either use the default
        /// AWS managed KMS key for Amazon ECR, or specify your own KMS key, which you already created. For more information, see
        /// [Protecting data using server-side encryption with an key stored in (SSE-KMS)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html)
        /// in the *Amazon Simple Storage Service Console Developer Guide*. If you use the ``AES256`` encryption type, Amazon ECR
        /// uses server-side encryption with Amazon S3-managed encryption keys which encrypts the images in the repository using an
        /// AES-256 encryption algorithm. For more information, see [Protecting data using server-side encryption with Amazon S3-managed
        /// encryption keys (SSE-S3)](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html) in the *Ama
        /// The encryption type to use.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EncryptionConfigurationEncryptionType? EncryptionConfigurationEncryptionType { get; set; }
        /// <summary>
        /// If you use the ``KMS`` encryption type, specify the KMS key to use for encryption. The alias, key ID, or full ARN of the
        /// KMS key can be specified. The key must exist in the same Region as the repository. If no key is specified, the default
        /// AWS managed KMS key for Amazon ECR will be used. If you use the KMS encryption type, specify the CMK to use for encryption.
        /// The alias, key ID, or full ARN of the CMK can be specified. The key must exist in the same Region as the repository. If
        /// no key is specified, the default AWS managed CMK for Amazon ECR will be used.
        /// </summary>
        string EncryptionConfigurationKmsKey { get; set; }
        /// <summary>
        /// The image scanning configuration for the repository. This determines whether images are scanned for known vulnerabilities
        /// after being pushed to the repository. The image scanning configuration for a repository.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageScanningConfiguration ImageScanningConfiguration { get; set; }
        /// <summary>
        /// The setting that determines whether images are scanned after being pushed to a repository. If set to ``true``, images
        /// will be scanned after being pushed. If this parameter is not specified, it will default to ``false`` and images will not
        /// be scanned unless a scan is manually started. The setting that determines whether images are scanned after being pushed
        /// to a repository.
        /// </summary>
        bool? ImageScanningConfigurationScanOnPush { get; set; }
        /// <summary>
        /// The tag mutability setting for the repository. If this parameter is omitted, the default setting of ``MUTABLE`` will be
        /// used which will allow image tags to be overwritten. If ``IMMUTABLE`` is specified, all image tags within the repository
        /// will be immutable which will prevent them from being overwritten.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImageTagMutability? ImageTagMutability { get; set; }
        /// <summary>
        /// Creates or updates a lifecycle policy. For information about lifecycle policy syntax, see [Lifecycle policy template](https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html).
        /// The ``LifecyclePolicy`` property type specifies a lifecycle policy. For information about lifecycle policy syntax, see
        /// [Lifecycle policy template](https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html) in the *Amazon
        /// ECR User Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecyclePolicy LifecyclePolicy { get; set; }
        /// <summary>
        /// The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default
        /// registry is assumed. The AWS account ID associated with the registry that contains the repository. If you do not specify
        /// a registry, the default registry is assumed.
        /// </summary>
        string LifecyclePolicyRegistryId { get; set; }
        /// <summary>
        /// The JSON repository policy text to apply to the repository. The JSON repository policy text to apply to the repository.
        /// </summary>
        string LifecyclePolicyText { get; set; }
        /// <summary>
        /// The name to use for the repository. The repository name may be specified on its own (such as ``nginx-web-app``) or it
        /// can be prepended with a namespace to group the repository into a category (such as ``project-a/nginx-web-app``). If you
        /// don't specify a name, CFNlong generates a unique physical ID and uses that ID for the repository name. For more information,
        /// see [Name type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html). The repository
        /// name must start with a letter and can only contain lowercase letters, numbers, hyphens, underscores, and forward slashes.
        /// If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that
        /// require no or some interruption. If you must replace the resource, specify a new name.
        /// </summary>
        string RepositoryName { get; set; }
        /// <summary>
        /// The JSON repository policy text to apply to the repository. For more information, see [Amazon ECR repository policies](https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policy-examples.html)
        /// in the *Amazon Elastic Container Registry User Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcrRepositoryPropertiesRepositoryPolicyText RepositoryPolicyText { get; set; }
        /// <summary>Property repositoryUri</summary>
        string RepositoryUri { get; set; }
        /// <summary>An array of key-value pairs to apply to this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated25[] Tag { get; set; }

    }
}