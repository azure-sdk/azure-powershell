// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of EventSelector</summary>
    public partial class EventSelector :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEventSelector,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEventSelectorInternal
    {

        /// <summary>Backing field for <see cref="DataResource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDataResource[] _dataResource;

        /// <summary>Property dataResources</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDataResource[] DataResource { get => this._dataResource; set => this._dataResource = value; }

        /// <summary>Backing field for <see cref="ExcludeManagementEventSource" /> property.</summary>
        private string[] _excludeManagementEventSource;

        /// <summary>
        /// An optional list of service event sources from which you do not want management events to be logged on your trail. In
        /// this release, the list can be empty (disables the filter), or it can filter out AWS Key Management Service events by containing
        /// 'kms.amazonaws.com'. By default, ExcludeManagementEventSources is empty, and AWS KMS events are included in events that
        /// are logged to your trail.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] ExcludeManagementEventSource { get => this._excludeManagementEventSource; set => this._excludeManagementEventSource = value; }

        /// <summary>Backing field for <see cref="IncludeManagementEvent" /> property.</summary>
        private bool? _includeManagementEvent;

        /// <summary>
        /// Specify if you want your event selector to include management events for your trail.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? IncludeManagementEvent { get => this._includeManagementEvent; set => this._includeManagementEvent = value; }

        /// <summary>Backing field for <see cref="ReadWriteType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EventSelectorReadWriteType? _readWriteType;

        /// <summary>
        /// Specify if you want your trail to log read-only events, write-only events, or all. For example, the EC2 GetConsoleOutput
        /// is a read-only API operation and RunInstances is a write-only API operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EventSelectorReadWriteType? ReadWriteType { get => this._readWriteType; set => this._readWriteType = value; }

        /// <summary>Creates an new <see cref="EventSelector" /> instance.</summary>
        public EventSelector()
        {

        }
    }
    /// Definition of EventSelector
    public partial interface IEventSelector :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property dataResources</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property dataResources",
        SerializedName = @"dataResources",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDataResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDataResource[] DataResource { get; set; }
        /// <summary>
        /// An optional list of service event sources from which you do not want management events to be logged on your trail. In
        /// this release, the list can be empty (disables the filter), or it can filter out AWS Key Management Service events by containing
        /// 'kms.amazonaws.com'. By default, ExcludeManagementEventSources is empty, and AWS KMS events are included in events that
        /// are logged to your trail.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An optional list of service event sources from which you do not want management events to be logged on your trail. In this release, the list can be empty (disables the filter), or it can filter out AWS Key Management Service events by containing 'kms.amazonaws.com'. By default, ExcludeManagementEventSources is empty, and AWS KMS events are included in events that are logged to your trail.",
        SerializedName = @"excludeManagementEventSources",
        PossibleTypes = new [] { typeof(string) })]
        string[] ExcludeManagementEventSource { get; set; }
        /// <summary>
        /// Specify if you want your event selector to include management events for your trail.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify if you want your event selector to include management events for your trail.",
        SerializedName = @"includeManagementEvents",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IncludeManagementEvent { get; set; }
        /// <summary>
        /// Specify if you want your trail to log read-only events, write-only events, or all. For example, the EC2 GetConsoleOutput
        /// is a read-only API operation and RunInstances is a write-only API operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify if you want your trail to log read-only events, write-only events, or all. For example, the EC2 GetConsoleOutput is a read-only API operation and RunInstances is a write-only API operation.",
        SerializedName = @"readWriteType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EventSelectorReadWriteType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EventSelectorReadWriteType? ReadWriteType { get; set; }

    }
    /// Definition of EventSelector
    internal partial interface IEventSelectorInternal

    {
        /// <summary>Property dataResources</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDataResource[] DataResource { get; set; }
        /// <summary>
        /// An optional list of service event sources from which you do not want management events to be logged on your trail. In
        /// this release, the list can be empty (disables the filter), or it can filter out AWS Key Management Service events by containing
        /// 'kms.amazonaws.com'. By default, ExcludeManagementEventSources is empty, and AWS KMS events are included in events that
        /// are logged to your trail.
        /// </summary>
        string[] ExcludeManagementEventSource { get; set; }
        /// <summary>
        /// Specify if you want your event selector to include management events for your trail.
        /// </summary>
        bool? IncludeManagementEvent { get; set; }
        /// <summary>
        /// Specify if you want your trail to log read-only events, write-only events, or all. For example, the EC2 GetConsoleOutput
        /// is a read-only API operation and RunInstances is a write-only API operation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EventSelectorReadWriteType? ReadWriteType { get; set; }

    }
}