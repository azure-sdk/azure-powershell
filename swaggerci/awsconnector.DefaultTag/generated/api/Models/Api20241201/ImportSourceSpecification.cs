// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ImportSourceSpecification</summary>
    public partial class ImportSourceSpecification :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecification,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal
    {

        /// <summary>The delimiter used for separating items in the CSV file being imported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CsvDelimiter { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptionsInternal)InputFormatOption).CsvDelimiter; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptionsInternal)InputFormatOption).CsvDelimiter = value ?? null; }

        /// <summary>
        /// List of the headers used to specify a common header for all source CSV files being imported. If this field is specified
        /// then the first line of each CSV file is treated as data instead of the header. If this field is not specified the the
        /// first line of each CSV file is treated as the header.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] CsvHeaderList { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptionsInternal)InputFormatOption).CsvHeaderList; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptionsInternal)InputFormatOption).CsvHeaderList = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="InputCompressionType" /> property.</summary>
        private string _inputCompressionType;

        /// <summary>Type of compression to be used on the input coming from the imported table.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string InputCompressionType { get => this._inputCompressionType; set => this._inputCompressionType = value; }

        /// <summary>Backing field for <see cref="InputFormat" /> property.</summary>
        private string _inputFormat;

        /// <summary>
        /// The format of the source data. Valid values for ``ImportFormat`` are ``CSV``, ``DYNAMODB_JSON`` or ``ION``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string InputFormat { get => this._inputFormat; set => this._inputFormat = value; }

        /// <summary>Backing field for <see cref="InputFormatOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptions _inputFormatOption;

        /// <summary>
        /// Additional properties that specify how the input is formatted, The format options for the data that was imported into
        /// the target table. There is one value, CsvOption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptions InputFormatOption { get => (this._inputFormatOption = this._inputFormatOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InputFormatOptions()); set => this._inputFormatOption = value; }

        /// <summary>Internal Acessors for InputFormatOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal.InputFormatOption { get => (this._inputFormatOption = this._inputFormatOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InputFormatOptions()); set { {_inputFormatOption = value;} } }

        /// <summary>Internal Acessors for InputFormatOptionCsv</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICsv Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal.InputFormatOptionCsv { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptionsInternal)InputFormatOption).Csv; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptionsInternal)InputFormatOption).Csv = value; }

        /// <summary>Internal Acessors for S3BucketSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSource Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImportSourceSpecificationInternal.S3BucketSource { get => (this._s3BucketSource = this._s3BucketSource ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.S3BucketSource()); set { {_s3BucketSource = value;} } }

        /// <summary>Backing field for <see cref="S3BucketSource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSource _s3BucketSource;

        /// <summary>
        /// The S3 bucket that provides the source for the import. The S3 bucket that is being imported from.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSource S3BucketSource { get => (this._s3BucketSource = this._s3BucketSource ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.S3BucketSource()); set => this._s3BucketSource = value; }

        /// <summary>The S3 bucket that is being imported from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string S3BucketSourceS3Bucket { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSourceInternal)S3BucketSource).S3Bucket; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSourceInternal)S3BucketSource).S3Bucket = value ?? null; }

        /// <summary>
        /// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string S3BucketSourceS3BucketOwner { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSourceInternal)S3BucketSource).S3BucketOwner; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSourceInternal)S3BucketSource).S3BucketOwner = value ?? null; }

        /// <summary>The key prefix shared by all S3 Objects that are being imported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string S3BucketSourceS3KeyPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSourceInternal)S3BucketSource).S3KeyPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSourceInternal)S3BucketSource).S3KeyPrefix = value ?? null; }

        /// <summary>Creates an new <see cref="ImportSourceSpecification" /> instance.</summary>
        public ImportSourceSpecification()
        {

        }
    }
    /// Definition of ImportSourceSpecification
    public partial interface IImportSourceSpecification :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>The delimiter used for separating items in the CSV file being imported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The delimiter used for separating items in the CSV file being imported.",
        SerializedName = @"delimiter",
        PossibleTypes = new [] { typeof(string) })]
        string CsvDelimiter { get; set; }
        /// <summary>
        /// List of the headers used to specify a common header for all source CSV files being imported. If this field is specified
        /// then the first line of each CSV file is treated as data instead of the header. If this field is not specified the the
        /// first line of each CSV file is treated as the header.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of the headers used to specify a common header for all source CSV files being imported. If this field is specified then the first line of each CSV file is treated as data instead of the header. If this field is not specified the the first line of each CSV file is treated as the header.",
        SerializedName = @"headerList",
        PossibleTypes = new [] { typeof(string) })]
        string[] CsvHeaderList { get; set; }
        /// <summary>Type of compression to be used on the input coming from the imported table.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of compression to be used on the input coming from the imported table.",
        SerializedName = @"inputCompressionType",
        PossibleTypes = new [] { typeof(string) })]
        string InputCompressionType { get; set; }
        /// <summary>
        /// The format of the source data. Valid values for ``ImportFormat`` are ``CSV``, ``DYNAMODB_JSON`` or ``ION``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The format of the source data. Valid values for ``ImportFormat`` are ``CSV``, ``DYNAMODB_JSON`` or ``ION``.",
        SerializedName = @"inputFormat",
        PossibleTypes = new [] { typeof(string) })]
        string InputFormat { get; set; }
        /// <summary>The S3 bucket that is being imported from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The S3 bucket that is being imported from.",
        SerializedName = @"s3Bucket",
        PossibleTypes = new [] { typeof(string) })]
        string S3BucketSourceS3Bucket { get; set; }
        /// <summary>
        /// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.",
        SerializedName = @"s3BucketOwner",
        PossibleTypes = new [] { typeof(string) })]
        string S3BucketSourceS3BucketOwner { get; set; }
        /// <summary>The key prefix shared by all S3 Objects that are being imported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The key prefix shared by all S3 Objects that are being imported.",
        SerializedName = @"s3KeyPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string S3BucketSourceS3KeyPrefix { get; set; }

    }
    /// Definition of ImportSourceSpecification
    internal partial interface IImportSourceSpecificationInternal

    {
        /// <summary>The delimiter used for separating items in the CSV file being imported.</summary>
        string CsvDelimiter { get; set; }
        /// <summary>
        /// List of the headers used to specify a common header for all source CSV files being imported. If this field is specified
        /// then the first line of each CSV file is treated as data instead of the header. If this field is not specified the the
        /// first line of each CSV file is treated as the header.
        /// </summary>
        string[] CsvHeaderList { get; set; }
        /// <summary>Type of compression to be used on the input coming from the imported table.</summary>
        string InputCompressionType { get; set; }
        /// <summary>
        /// The format of the source data. Valid values for ``ImportFormat`` are ``CSV``, ``DYNAMODB_JSON`` or ``ION``.
        /// </summary>
        string InputFormat { get; set; }
        /// <summary>
        /// Additional properties that specify how the input is formatted, The format options for the data that was imported into
        /// the target table. There is one value, CsvOption.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInputFormatOptions InputFormatOption { get; set; }
        /// <summary>
        /// The options for imported source files in CSV format. The values are Delimiter and HeaderList. The options for imported
        /// source files in CSV format. The values are Delimiter and HeaderList.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICsv InputFormatOptionCsv { get; set; }
        /// <summary>
        /// The S3 bucket that provides the source for the import. The S3 bucket that is being imported from.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3BucketSource S3BucketSource { get; set; }
        /// <summary>The S3 bucket that is being imported from.</summary>
        string S3BucketSourceS3Bucket { get; set; }
        /// <summary>
        /// The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
        /// </summary>
        string S3BucketSourceS3BucketOwner { get; set; }
        /// <summary>The key prefix shared by all S3 Objects that are being imported.</summary>
        string S3BucketSourceS3KeyPrefix { get; set; }

    }
}