// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of Webhook</summary>
    public partial class Webhook :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhook,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal
    {

        /// <summary>Backing field for <see cref="BranchFilter" /> property.</summary>
        private string _branchFilter;

        /// <summary>
        /// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name
        /// of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches
        /// are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>.
        /// </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string BranchFilter { get => this._branchFilter; set => this._branchFilter = value; }

        /// <summary>Backing field for <see cref="BuildType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookBuildTypeEnumValue _buildType;

        /// <summary><p>Specifies the type of build this webhook will trigger.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookBuildTypeEnumValue BuildType { get => (this._buildType = this._buildType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.WebhookBuildTypeEnumValue()); set => this._buildType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookBuildType? BuildTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookBuildTypeEnumValueInternal)BuildType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookBuildTypeEnumValueInternal)BuildType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookBuildType)""); }

        /// <summary>Backing field for <see cref="FilterGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroup[] _filterGroup;

        /// <summary>
        /// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one
        /// <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build
        /// to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass,
        /// each of its filters must pass. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroup[] FilterGroup { get => this._filterGroup; set => this._filterGroup = value; }

        /// <summary>Backing field for <see cref="LastModifiedSecret" /> property.</summary>
        private global::System.DateTime? _lastModifiedSecret;

        /// <summary>
        /// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModifiedSecret { get => this._lastModifiedSecret; set => this._lastModifiedSecret = value; }

        /// <summary>Internal Acessors for BuildType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookBuildTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal.BuildType { get => (this._buildType = this._buildType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.WebhookBuildTypeEnumValue()); set { {_buildType = value;} } }

        /// <summary>Backing field for <see cref="PayloadUrl" /> property.</summary>
        private string _payloadUrl;

        /// <summary><p>The CodeBuild endpoint where webhook events are sent.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PayloadUrl { get => this._payloadUrl; set => this._payloadUrl = value; }

        /// <summary>Backing field for <see cref="Secret" /> property.</summary>
        private string _secret;

        /// <summary>
        /// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>.
        /// </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Secret { get => this._secret; set => this._secret = value; }

        /// <summary>Backing field for <see cref="Url" /> property.</summary>
        private string _url;

        /// <summary><p>The URL to the webhook.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Url { get => this._url; set => this._url = value; }

        /// <summary>Creates an new <see cref="Webhook" /> instance.</summary>
        public Webhook()
        {

        }
    }
    /// Definition of Webhook
    public partial interface IWebhook :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name
        /// of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches
        /// are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>.
        /// </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>. </p> </note>",
        SerializedName = @"branchFilter",
        PossibleTypes = new [] { typeof(string) })]
        string BranchFilter { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookBuildType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookBuildType? BuildTypeValue { get; set; }
        /// <summary>
        /// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one
        /// <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build
        /// to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass,
        /// each of its filters must pass. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass, each of its filters must pass. </p>",
        SerializedName = @"filterGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroup) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroup[] FilterGroup { get; set; }
        /// <summary>
        /// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A timestamp that indicates the last time a repository's secret token was modified. </p>",
        SerializedName = @"lastModifiedSecret",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedSecret { get; set; }
        /// <summary><p>The CodeBuild endpoint where webhook events are sent.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The CodeBuild endpoint where webhook events are sent.</p>",
        SerializedName = @"payloadUrl",
        PossibleTypes = new [] { typeof(string) })]
        string PayloadUrl { get; set; }
        /// <summary>
        /// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>.
        /// </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>. </p> </note>",
        SerializedName = @"secret",
        PossibleTypes = new [] { typeof(string) })]
        string Secret { get; set; }
        /// <summary><p>The URL to the webhook.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The URL to the webhook.</p>",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string Url { get; set; }

    }
    /// Definition of Webhook
    internal partial interface IWebhookInternal

    {
        /// <summary>
        /// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name
        /// of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches
        /// are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>.
        /// </p> </note>
        /// </summary>
        string BranchFilter { get; set; }
        /// <summary><p>Specifies the type of build this webhook will trigger.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookBuildTypeEnumValue BuildType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookBuildType? BuildTypeValue { get; set; }
        /// <summary>
        /// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one
        /// <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build
        /// to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass,
        /// each of its filters must pass. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroup[] FilterGroup { get; set; }
        /// <summary>
        /// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
        /// </summary>
        global::System.DateTime? LastModifiedSecret { get; set; }
        /// <summary><p>The CodeBuild endpoint where webhook events are sent.</p></summary>
        string PayloadUrl { get; set; }
        /// <summary>
        /// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>.
        /// </p> </note>
        /// </summary>
        string Secret { get; set; }
        /// <summary><p>The URL to the webhook.</p></summary>
        string Url { get; set; }

    }
}