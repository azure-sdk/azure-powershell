// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of NoncurrentVersionTransition</summary>
    public partial class NoncurrentVersionTransition :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INoncurrentVersionTransition,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INoncurrentVersionTransitionInternal
    {

        /// <summary>Backing field for <see cref="NewerNoncurrentVersion" /> property.</summary>
        private int? _newerNoncurrentVersion;

        /// <summary>
        /// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will
        /// take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html)
        /// in the *Amazon S3 User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? NewerNoncurrentVersion { get => this._newerNoncurrentVersion; set => this._newerNoncurrentVersion = value; }

        /// <summary>Backing field for <see cref="StorageClass" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NoncurrentVersionTransitionStorageClass? _storageClass;

        /// <summary>The class of storage used to store the object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NoncurrentVersionTransitionStorageClass? StorageClass { get => this._storageClass; set => this._storageClass = value; }

        /// <summary>Backing field for <see cref="TransitionInDay" /> property.</summary>
        private int? _transitionInDay;

        /// <summary>
        /// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information
        /// about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations)
        /// in the *Amazon S3 User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? TransitionInDay { get => this._transitionInDay; set => this._transitionInDay = value; }

        /// <summary>Creates an new <see cref="NoncurrentVersionTransition" /> instance.</summary>
        public NoncurrentVersionTransition()
        {

        }
    }
    /// Definition of NoncurrentVersionTransition
    public partial interface INoncurrentVersionTransition :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will
        /// take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html)
        /// in the *Amazon S3 User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html) in the *Amazon S3 User Guide*.",
        SerializedName = @"newerNoncurrentVersions",
        PossibleTypes = new [] { typeof(int) })]
        int? NewerNoncurrentVersion { get; set; }
        /// <summary>The class of storage used to store the object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The class of storage used to store the object.",
        SerializedName = @"storageClass",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NoncurrentVersionTransitionStorageClass) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NoncurrentVersionTransitionStorageClass? StorageClass { get; set; }
        /// <summary>
        /// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information
        /// about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations)
        /// in the *Amazon S3 User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the *Amazon S3 User Guide*.",
        SerializedName = @"transitionInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? TransitionInDay { get; set; }

    }
    /// Definition of NoncurrentVersionTransition
    internal partial interface INoncurrentVersionTransitionInternal

    {
        /// <summary>
        /// Specifies how many noncurrent versions S3 will retain. If there are this many more recent noncurrent versions, S3 will
        /// take the associated action. For more information about noncurrent versions, see [Lifecycle configuration elements](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html)
        /// in the *Amazon S3 User Guide*.
        /// </summary>
        int? NewerNoncurrentVersion { get; set; }
        /// <summary>The class of storage used to store the object.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.NoncurrentVersionTransitionStorageClass? StorageClass { get; set; }
        /// <summary>
        /// Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information
        /// about the noncurrent days calculations, see [How Amazon S3 Calculates How Long an Object Has Been Noncurrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations)
        /// in the *Amazon S3 User Guide*.
        /// </summary>
        int? TransitionInDay { get; set; }

    }
}