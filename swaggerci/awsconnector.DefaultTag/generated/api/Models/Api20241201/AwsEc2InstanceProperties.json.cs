// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEc2Instance</summary>
    public partial class AwsEc2InstanceProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject into a new instance of <see cref="AwsEc2InstanceProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AwsEc2InstanceProperties(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_architecture = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("architecture"), out var __jsonArchitecture) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ArchitectureValuesEnumValue.FromJson(__jsonArchitecture) : Architecture;}
            {_bootMode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("bootMode"), out var __jsonBootMode) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BootModeValuesEnumValue.FromJson(__jsonBootMode) : BootMode;}
            {_capacityReservationSpecification = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("capacityReservationSpecification"), out var __jsonCapacityReservationSpecification) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CapacityReservationSpecificationResponse.FromJson(__jsonCapacityReservationSpecification) : CapacityReservationSpecification;}
            {_cpuOption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("cpuOptions"), out var __jsonCpuOptions) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CpuOptions.FromJson(__jsonCpuOptions) : CpuOption;}
            {_currentInstanceBootMode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("currentInstanceBootMode"), out var __jsonCurrentInstanceBootMode) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceBootModeValuesEnumValue.FromJson(__jsonCurrentInstanceBootMode) : CurrentInstanceBootMode;}
            {_enclaveOption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("enclaveOptions"), out var __jsonEnclaveOptions) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnclaveOptions.FromJson(__jsonEnclaveOptions) : EnclaveOption;}
            {_hibernationOption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("hibernationOptions"), out var __jsonHibernationOptions) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HibernationOptions.FromJson(__jsonHibernationOptions) : HibernationOption;}
            {_hypervisor = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("hypervisor"), out var __jsonHypervisor) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HypervisorTypeEnumValue.FromJson(__jsonHypervisor) : Hypervisor;}
            {_iamInstanceProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("iamInstanceProfile"), out var __jsonIamInstanceProfile) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IamInstanceProfile.FromJson(__jsonIamInstanceProfile) : IamInstanceProfile;}
            {_instanceLifecycle = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("instanceLifecycle"), out var __jsonInstanceLifecycle) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceLifecycleTypeEnumValue.FromJson(__jsonInstanceLifecycle) : InstanceLifecycle;}
            {_instanceType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("instanceType"), out var __jsonInstanceType) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceTypeEnumValue.FromJson(__jsonInstanceType) : InstanceType;}
            {_maintenanceOption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("maintenanceOptions"), out var __jsonMaintenanceOptions) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMaintenanceOptions.FromJson(__jsonMaintenanceOptions) : MaintenanceOption;}
            {_metadataOption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("metadataOptions"), out var __jsonMetadataOptions) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMetadataOptionsResponse.FromJson(__jsonMetadataOptions) : MetadataOption;}
            {_monitoring = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("monitoring"), out var __jsonMonitoring) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Monitoring.FromJson(__jsonMonitoring) : Monitoring;}
            {_placement = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("placement"), out var __jsonPlacement) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Placement.FromJson(__jsonPlacement) : Placement;}
            {_platform = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("platform"), out var __jsonPlatform) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlatformValuesEnumValue.FromJson(__jsonPlatform) : Platform;}
            {_privateDnsNameOption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("privateDnsNameOptions"), out var __jsonPrivateDnsNameOptions) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PrivateDnsNameOptionsResponse.FromJson(__jsonPrivateDnsNameOptions) : PrivateDnsNameOption;}
            {_rootDeviceType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("rootDeviceType"), out var __jsonRootDeviceType) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeviceTypeEnumValue.FromJson(__jsonRootDeviceType) : RootDeviceType;}
            {_state = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("state"), out var __jsonState) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceState.FromJson(__jsonState) : State;}
            {_stateReason = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("stateReason"), out var __jsonStateReason) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.StateReason.FromJson(__jsonStateReason) : StateReason;}
            {_virtualizationType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("virtualizationType"), out var __jsonVirtualizationType) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VirtualizationTypeEnumValue.FromJson(__jsonVirtualizationType) : VirtualizationType;}
            {_amiLaunchIndex = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("amiLaunchIndex"), out var __jsonAmiLaunchIndex) ? (int?)__jsonAmiLaunchIndex : AmiLaunchIndex;}
            {_blockDeviceMapping = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("blockDeviceMappings"), out var __jsonBlockDeviceMappings) ? If( __jsonBlockDeviceMappings as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceBlockDeviceMapping.FromJson(__u) )) ))() : null : BlockDeviceMapping;}
            {_capacityReservationId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("capacityReservationId"), out var __jsonCapacityReservationId) ? (string)__jsonCapacityReservationId : (string)CapacityReservationId;}
            {_clientToken = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("clientToken"), out var __jsonClientToken) ? (string)__jsonClientToken : (string)ClientToken;}
            {_ebsOptimized = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("ebsOptimized"), out var __jsonEbsOptimized) ? (bool?)__jsonEbsOptimized : EbsOptimized;}
            {_elasticGpuAssociation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("elasticGpuAssociations"), out var __jsonElasticGpuAssociations) ? If( __jsonElasticGpuAssociations as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticGpuAssociation[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticGpuAssociation) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticGpuAssociation.FromJson(__p) )) ))() : null : ElasticGpuAssociation;}
            {_elasticInferenceAcceleratorAssociation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("elasticInferenceAcceleratorAssociations"), out var __jsonElasticInferenceAcceleratorAssociations) ? If( __jsonElasticInferenceAcceleratorAssociations as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticInferenceAcceleratorAssociation[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticInferenceAcceleratorAssociation) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticInferenceAcceleratorAssociation.FromJson(__k) )) ))() : null : ElasticInferenceAcceleratorAssociation;}
            {_enaSupport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("enaSupport"), out var __jsonEnaSupport) ? (bool?)__jsonEnaSupport : EnaSupport;}
            {_imageId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("imageId"), out var __jsonImageId) ? (string)__jsonImageId : (string)ImageId;}
            {_instanceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("instanceId"), out var __jsonInstanceId) ? (string)__jsonInstanceId : (string)InstanceId;}
            {_ipv6Address = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("ipv6Address"), out var __jsonIpv6Address) ? (string)__jsonIpv6Address : (string)Ipv6Address;}
            {_kernelId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("kernelId"), out var __jsonKernelId) ? (string)__jsonKernelId : (string)KernelId;}
            {_keyName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("keyName"), out var __jsonKeyName) ? (string)__jsonKeyName : (string)KeyName;}
            {_launchTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("launchTime"), out var __jsonLaunchTime) ? global::System.DateTime.TryParse((string)__jsonLaunchTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLaunchTimeValue) ? __jsonLaunchTimeValue : LaunchTime : LaunchTime;}
            {_license = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("licenses"), out var __jsonLicenses) ? If( __jsonLicenses as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILicenseConfiguration[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILicenseConfiguration) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LicenseConfiguration.FromJson(__f) )) ))() : null : License;}
            {_networkInterface = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("networkInterfaces"), out var __jsonNetworkInterfaces) ? If( __jsonNetworkInterfaces as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__b, (__a)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceNetworkInterface) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceNetworkInterface.FromJson(__a) )) ))() : null : NetworkInterface;}
            {_outpostArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("outpostArn"), out var __jsonOutpostArn) ? (string)__jsonOutpostArn : (string)OutpostArn;}
            {_platformDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("platformDetails"), out var __jsonPlatformDetails) ? (string)__jsonPlatformDetails : (string)PlatformDetail;}
            {_privateDnsName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("privateDnsName"), out var __jsonPrivateDnsName) ? (string)__jsonPrivateDnsName : (string)PrivateDnsName;}
            {_privateIPAddress = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("privateIpAddress"), out var __jsonPrivateIPAddress) ? (string)__jsonPrivateIPAddress : (string)PrivateIPAddress;}
            {_productCode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("productCodes"), out var __jsonProductCodes) ? If( __jsonProductCodes as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ___w) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___w, (___v)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProductCode) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProductCode.FromJson(___v) )) ))() : null : ProductCode;}
            {_publicDnsName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("publicDnsName"), out var __jsonPublicDnsName) ? (string)__jsonPublicDnsName : (string)PublicDnsName;}
            {_publicIPAddress = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("publicIpAddress"), out var __jsonPublicIPAddress) ? (string)__jsonPublicIPAddress : (string)PublicIPAddress;}
            {_ramdiskId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("ramdiskId"), out var __jsonRamdiskId) ? (string)__jsonRamdiskId : (string)RamdiskId;}
            {_rootDeviceName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("rootDeviceName"), out var __jsonRootDeviceName) ? (string)__jsonRootDeviceName : (string)RootDeviceName;}
            {_securityGroup = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("securityGroups"), out var __jsonSecurityGroups) ? If( __jsonSecurityGroups as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ___r) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___r, (___q)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGroupIdentifier) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.GroupIdentifier.FromJson(___q) )) ))() : null : SecurityGroup;}
            {_sourceDestCheck = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("sourceDestCheck"), out var __jsonSourceDestCheck) ? (bool?)__jsonSourceDestCheck : SourceDestCheck;}
            {_spotInstanceRequestId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("spotInstanceRequestId"), out var __jsonSpotInstanceRequestId) ? (string)__jsonSpotInstanceRequestId : (string)SpotInstanceRequestId;}
            {_sriovNetSupport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("sriovNetSupport"), out var __jsonSriovNetSupport) ? (string)__jsonSriovNetSupport : (string)SriovNetSupport;}
            {_stateTransitionReason = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("stateTransitionReason"), out var __jsonStateTransitionReason) ? (string)__jsonStateTransitionReason : (string)StateTransitionReason;}
            {_subnetId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("subnetId"), out var __jsonSubnetId) ? (string)__jsonSubnetId : (string)SubnetId;}
            {_tag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("tags"), out var __jsonTags) ? If( __jsonTags as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ___m) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated13[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___m, (___l)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated13) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated13.FromJson(___l) )) ))() : null : Tag;}
            {_tpmSupport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("tpmSupport"), out var __jsonTpmSupport) ? (string)__jsonTpmSupport : (string)TpmSupport;}
            {_usageOperation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("usageOperation"), out var __jsonUsageOperation) ? (string)__jsonUsageOperation : (string)UsageOperation;}
            {_usageOperationUpdateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("usageOperationUpdateTime"), out var __jsonUsageOperationUpdateTime) ? global::System.DateTime.TryParse((string)__jsonUsageOperationUpdateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonUsageOperationUpdateTimeValue) ? __jsonUsageOperationUpdateTimeValue : UsageOperationUpdateTime : UsageOperationUpdateTime;}
            {_vpcId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("vpcId"), out var __jsonVpcId) ? (string)__jsonVpcId : (string)VpcId;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2InstanceProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json ? new AwsEc2InstanceProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AwsEc2InstanceProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AwsEc2InstanceProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._architecture ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._architecture.ToJson(null,serializationMode) : null, "architecture" ,container.Add );
            AddIf( null != this._bootMode ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._bootMode.ToJson(null,serializationMode) : null, "bootMode" ,container.Add );
            AddIf( null != this._capacityReservationSpecification ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._capacityReservationSpecification.ToJson(null,serializationMode) : null, "capacityReservationSpecification" ,container.Add );
            AddIf( null != this._cpuOption ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._cpuOption.ToJson(null,serializationMode) : null, "cpuOptions" ,container.Add );
            AddIf( null != this._currentInstanceBootMode ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._currentInstanceBootMode.ToJson(null,serializationMode) : null, "currentInstanceBootMode" ,container.Add );
            AddIf( null != this._enclaveOption ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._enclaveOption.ToJson(null,serializationMode) : null, "enclaveOptions" ,container.Add );
            AddIf( null != this._hibernationOption ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._hibernationOption.ToJson(null,serializationMode) : null, "hibernationOptions" ,container.Add );
            AddIf( null != this._hypervisor ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._hypervisor.ToJson(null,serializationMode) : null, "hypervisor" ,container.Add );
            AddIf( null != this._iamInstanceProfile ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._iamInstanceProfile.ToJson(null,serializationMode) : null, "iamInstanceProfile" ,container.Add );
            AddIf( null != this._instanceLifecycle ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._instanceLifecycle.ToJson(null,serializationMode) : null, "instanceLifecycle" ,container.Add );
            AddIf( null != this._instanceType ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._instanceType.ToJson(null,serializationMode) : null, "instanceType" ,container.Add );
            AddIf( null != this._maintenanceOption ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._maintenanceOption.ToJson(null,serializationMode) : null, "maintenanceOptions" ,container.Add );
            AddIf( null != this._metadataOption ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._metadataOption.ToJson(null,serializationMode) : null, "metadataOptions" ,container.Add );
            AddIf( null != this._monitoring ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._monitoring.ToJson(null,serializationMode) : null, "monitoring" ,container.Add );
            AddIf( null != this._placement ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._placement.ToJson(null,serializationMode) : null, "placement" ,container.Add );
            AddIf( null != this._platform ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._platform.ToJson(null,serializationMode) : null, "platform" ,container.Add );
            AddIf( null != this._privateDnsNameOption ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._privateDnsNameOption.ToJson(null,serializationMode) : null, "privateDnsNameOptions" ,container.Add );
            AddIf( null != this._rootDeviceType ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._rootDeviceType.ToJson(null,serializationMode) : null, "rootDeviceType" ,container.Add );
            AddIf( null != this._state ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._state.ToJson(null,serializationMode) : null, "state" ,container.Add );
            AddIf( null != this._stateReason ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._stateReason.ToJson(null,serializationMode) : null, "stateReason" ,container.Add );
            AddIf( null != this._virtualizationType ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._virtualizationType.ToJson(null,serializationMode) : null, "virtualizationType" ,container.Add );
            AddIf( null != this._amiLaunchIndex ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._amiLaunchIndex) : null, "amiLaunchIndex" ,container.Add );
            if (null != this._blockDeviceMapping)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __x in this._blockDeviceMapping )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("blockDeviceMappings",__w);
            }
            AddIf( null != (((object)this._capacityReservationId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._capacityReservationId.ToString()) : null, "capacityReservationId" ,container.Add );
            AddIf( null != (((object)this._clientToken)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._clientToken.ToString()) : null, "clientToken" ,container.Add );
            AddIf( null != this._ebsOptimized ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._ebsOptimized) : null, "ebsOptimized" ,container.Add );
            if (null != this._elasticGpuAssociation)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __s in this._elasticGpuAssociation )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("elasticGpuAssociations",__r);
            }
            if (null != this._elasticInferenceAcceleratorAssociation)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __n in this._elasticInferenceAcceleratorAssociation )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("elasticInferenceAcceleratorAssociations",__m);
            }
            AddIf( null != this._enaSupport ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._enaSupport) : null, "enaSupport" ,container.Add );
            AddIf( null != (((object)this._imageId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._imageId.ToString()) : null, "imageId" ,container.Add );
            AddIf( null != (((object)this._instanceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._instanceId.ToString()) : null, "instanceId" ,container.Add );
            AddIf( null != (((object)this._ipv6Address)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._ipv6Address.ToString()) : null, "ipv6Address" ,container.Add );
            AddIf( null != (((object)this._kernelId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._kernelId.ToString()) : null, "kernelId" ,container.Add );
            AddIf( null != (((object)this._keyName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._keyName.ToString()) : null, "keyName" ,container.Add );
            AddIf( null != this._launchTime ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._launchTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "launchTime" ,container.Add );
            if (null != this._license)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __i in this._license )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("licenses",__h);
            }
            if (null != this._networkInterface)
            {
                var __c = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __d in this._networkInterface )
                {
                    AddIf(__d?.ToJson(null, serializationMode) ,__c.Add);
                }
                container.Add("networkInterfaces",__c);
            }
            AddIf( null != (((object)this._outpostArn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._outpostArn.ToString()) : null, "outpostArn" ,container.Add );
            AddIf( null != (((object)this._platformDetail)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._platformDetail.ToString()) : null, "platformDetails" ,container.Add );
            AddIf( null != (((object)this._privateDnsName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._privateDnsName.ToString()) : null, "privateDnsName" ,container.Add );
            AddIf( null != (((object)this._privateIPAddress)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._privateIPAddress.ToString()) : null, "privateIpAddress" ,container.Add );
            if (null != this._productCode)
            {
                var ___x = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ___y in this._productCode )
                {
                    AddIf(___y?.ToJson(null, serializationMode) ,___x.Add);
                }
                container.Add("productCodes",___x);
            }
            AddIf( null != (((object)this._publicDnsName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._publicDnsName.ToString()) : null, "publicDnsName" ,container.Add );
            AddIf( null != (((object)this._publicIPAddress)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._publicIPAddress.ToString()) : null, "publicIpAddress" ,container.Add );
            AddIf( null != (((object)this._ramdiskId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._ramdiskId.ToString()) : null, "ramdiskId" ,container.Add );
            AddIf( null != (((object)this._rootDeviceName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._rootDeviceName.ToString()) : null, "rootDeviceName" ,container.Add );
            if (null != this._securityGroup)
            {
                var ___s = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ___t in this._securityGroup )
                {
                    AddIf(___t?.ToJson(null, serializationMode) ,___s.Add);
                }
                container.Add("securityGroups",___s);
            }
            AddIf( null != this._sourceDestCheck ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._sourceDestCheck) : null, "sourceDestCheck" ,container.Add );
            AddIf( null != (((object)this._spotInstanceRequestId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._spotInstanceRequestId.ToString()) : null, "spotInstanceRequestId" ,container.Add );
            AddIf( null != (((object)this._sriovNetSupport)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._sriovNetSupport.ToString()) : null, "sriovNetSupport" ,container.Add );
            AddIf( null != (((object)this._stateTransitionReason)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._stateTransitionReason.ToString()) : null, "stateTransitionReason" ,container.Add );
            AddIf( null != (((object)this._subnetId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._subnetId.ToString()) : null, "subnetId" ,container.Add );
            if (null != this._tag)
            {
                var ___n = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ___o in this._tag )
                {
                    AddIf(___o?.ToJson(null, serializationMode) ,___n.Add);
                }
                container.Add("tags",___n);
            }
            AddIf( null != (((object)this._tpmSupport)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._tpmSupport.ToString()) : null, "tpmSupport" ,container.Add );
            AddIf( null != (((object)this._usageOperation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._usageOperation.ToString()) : null, "usageOperation" ,container.Add );
            AddIf( null != this._usageOperationUpdateTime ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._usageOperationUpdateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "usageOperationUpdateTime" ,container.Add );
            AddIf( null != (((object)this._vpcId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._vpcId.ToString()) : null, "vpcId" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}