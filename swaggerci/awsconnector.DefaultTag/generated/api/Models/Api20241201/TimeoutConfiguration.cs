// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of TimeoutConfiguration</summary>
    public partial class TimeoutConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeoutConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeoutConfigurationInternal
    {

        /// <summary>Backing field for <see cref="IdleTimeoutSecond" /> property.</summary>
        private int? _idleTimeoutSecond;

        /// <summary>
        /// The amount of time in seconds a connection will stay active while idle. A value of ``0`` can be set to disable ``idleTimeout``.
        /// The ``idleTimeout`` default for ``HTTP``/``HTTP2``/``GRPC`` is 5 minutes. The ``idleTimeout`` default for ``TCP`` is 1
        /// hour.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? IdleTimeoutSecond { get => this._idleTimeoutSecond; set => this._idleTimeoutSecond = value; }

        /// <summary>Backing field for <see cref="PerRequestTimeoutSecond" /> property.</summary>
        private int? _perRequestTimeoutSecond;

        /// <summary>
        /// The amount of time waiting for the upstream to respond with a complete response per request. A value of ``0`` can be set
        /// to disable ``perRequestTimeout``. ``perRequestTimeout`` can only be set if Service Connect ``appProtocol`` isn't ``TCP``.
        /// Only ``idleTimeout`` is allowed for ``TCP`` ``appProtocol``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? PerRequestTimeoutSecond { get => this._perRequestTimeoutSecond; set => this._perRequestTimeoutSecond = value; }

        /// <summary>Creates an new <see cref="TimeoutConfiguration" /> instance.</summary>
        public TimeoutConfiguration()
        {

        }
    }
    /// Definition of TimeoutConfiguration
    public partial interface ITimeoutConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The amount of time in seconds a connection will stay active while idle. A value of ``0`` can be set to disable ``idleTimeout``.
        /// The ``idleTimeout`` default for ``HTTP``/``HTTP2``/``GRPC`` is 5 minutes. The ``idleTimeout`` default for ``TCP`` is 1
        /// hour.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of time in seconds a connection will stay active while idle. A value of ``0`` can be set to disable ``idleTimeout``. The ``idleTimeout`` default for ``HTTP``/``HTTP2``/``GRPC`` is 5 minutes. The ``idleTimeout`` default for ``TCP`` is 1 hour.",
        SerializedName = @"idleTimeoutSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? IdleTimeoutSecond { get; set; }
        /// <summary>
        /// The amount of time waiting for the upstream to respond with a complete response per request. A value of ``0`` can be set
        /// to disable ``perRequestTimeout``. ``perRequestTimeout`` can only be set if Service Connect ``appProtocol`` isn't ``TCP``.
        /// Only ``idleTimeout`` is allowed for ``TCP`` ``appProtocol``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of time waiting for the upstream to respond with a complete response per request. A value of ``0`` can be set to disable ``perRequestTimeout``. ``perRequestTimeout`` can only be set if Service Connect ``appProtocol`` isn't ``TCP``. Only ``idleTimeout`` is allowed for ``TCP`` ``appProtocol``.",
        SerializedName = @"perRequestTimeoutSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? PerRequestTimeoutSecond { get; set; }

    }
    /// Definition of TimeoutConfiguration
    internal partial interface ITimeoutConfigurationInternal

    {
        /// <summary>
        /// The amount of time in seconds a connection will stay active while idle. A value of ``0`` can be set to disable ``idleTimeout``.
        /// The ``idleTimeout`` default for ``HTTP``/``HTTP2``/``GRPC`` is 5 minutes. The ``idleTimeout`` default for ``TCP`` is 1
        /// hour.
        /// </summary>
        int? IdleTimeoutSecond { get; set; }
        /// <summary>
        /// The amount of time waiting for the upstream to respond with a complete response per request. A value of ``0`` can be set
        /// to disable ``perRequestTimeout``. ``perRequestTimeout`` can only be set if Service Connect ``appProtocol`` isn't ``TCP``.
        /// Only ``idleTimeout`` is allowed for ``TCP`` ``appProtocol``.
        /// </summary>
        int? PerRequestTimeoutSecond { get; set; }

    }
}