// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of MetricTransformation</summary>
    public partial class MetricTransformation :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricTransformation,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricTransformationInternal
    {

        /// <summary>Backing field for <see cref="DefaultValue" /> property.</summary>
        private int? _defaultValue;

        /// <summary>
        /// (Optional) The value to emit when a filter pattern does not match a log event. This value can be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? DefaultValue { get => this._defaultValue; set => this._defaultValue = value; }

        /// <summary>Backing field for <see cref="Dimension" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimensionAutoGenerated[] _dimension;

        /// <summary>
        /// The fields to use as dimensions for the metric. One metric filter can include as many as three dimensions. Metrics extracted
        /// from log events are charged as custom metrics. To prevent unexpected high charges, do not specify high-cardinality fields
        /// such as ``IPAddress`` or ``requestID`` as dimensions. Each different value found for a dimension is treated as a separate
        /// metric and accrues charges as a separate custom metric. CloudWatch Logs disables a metric filter if it generates 1000
        /// different name/value pairs for your specified dimensions within a certain amount of time. This helps to prevent accidental
        /// high charges. You can also set up a billing alarm to alert you if your charges are higher than expected. For more information,
        /// see [Creating a Billing Alarm to Monitor Your Estimated Charges](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimensionAutoGenerated[] Dimension { get => this._dimension; set => this._dimension = value; }

        /// <summary>Backing field for <see cref="MetricName" /> property.</summary>
        private string _metricName;

        /// <summary>The name of the CloudWatch metric.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string MetricName { get => this._metricName; set => this._metricName = value; }

        /// <summary>Backing field for <see cref="MetricNamespace" /> property.</summary>
        private string _metricNamespace;

        /// <summary>
        /// A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics that are similar. For
        /// more information, see [Namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string MetricNamespace { get => this._metricNamespace; set => this._metricNamespace = value; }

        /// <summary>Backing field for <see cref="MetricValue" /> property.</summary>
        private string _metricValue;

        /// <summary>
        /// The value that is published to the CloudWatch metric. For example, if you're counting the occurrences of a particular
        /// term like ``Error``, specify 1 for the metric value. If you're counting the number of bytes transferred, reference the
        /// value that is in the log event by using $. followed by the name of the field that you specified in the filter pattern,
        /// such as ``$.size``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string MetricValue { get => this._metricValue; set => this._metricValue = value; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit? _unit;

        /// <summary>
        /// The unit to assign to the metric. If you omit this, the unit is set as ``None``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit? Unit { get => this._unit; set => this._unit = value; }

        /// <summary>Creates an new <see cref="MetricTransformation" /> instance.</summary>
        public MetricTransformation()
        {

        }
    }
    /// Definition of MetricTransformation
    public partial interface IMetricTransformation :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// (Optional) The value to emit when a filter pattern does not match a log event. This value can be null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"(Optional) The value to emit when a filter pattern does not match a log event. This value can be null.",
        SerializedName = @"defaultValue",
        PossibleTypes = new [] { typeof(int) })]
        int? DefaultValue { get; set; }
        /// <summary>
        /// The fields to use as dimensions for the metric. One metric filter can include as many as three dimensions. Metrics extracted
        /// from log events are charged as custom metrics. To prevent unexpected high charges, do not specify high-cardinality fields
        /// such as ``IPAddress`` or ``requestID`` as dimensions. Each different value found for a dimension is treated as a separate
        /// metric and accrues charges as a separate custom metric. CloudWatch Logs disables a metric filter if it generates 1000
        /// different name/value pairs for your specified dimensions within a certain amount of time. This helps to prevent accidental
        /// high charges. You can also set up a billing alarm to alert you if your charges are higher than expected. For more information,
        /// see [Creating a Billing Alarm to Monitor Your Estimated Charges](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The fields to use as dimensions for the metric. One metric filter can include as many as three dimensions.  Metrics extracted from log events are charged as custom metrics. To prevent unexpected high charges, do not specify high-cardinality fields such as ``IPAddress`` or ``requestID`` as dimensions. Each different value found for a dimension is treated as a separate metric and accrues charges as a separate custom metric.  CloudWatch Logs disables a metric filter if it generates 1000 different name/value pairs for your specified dimensions within a certain amount of time. This helps to prevent accidental high charges. You can also set up a billing alarm to alert you if your charges are higher than expected. For more information, see [Creating a Billing Alarm to Monitor Your Estimated Charges](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html).",
        SerializedName = @"dimensions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimensionAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimensionAutoGenerated[] Dimension { get; set; }
        /// <summary>The name of the CloudWatch metric.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the CloudWatch metric.",
        SerializedName = @"metricName",
        PossibleTypes = new [] { typeof(string) })]
        string MetricName { get; set; }
        /// <summary>
        /// A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics that are similar. For
        /// more information, see [Namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics that are similar. For more information, see [Namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace).",
        SerializedName = @"metricNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string MetricNamespace { get; set; }
        /// <summary>
        /// The value that is published to the CloudWatch metric. For example, if you're counting the occurrences of a particular
        /// term like ``Error``, specify 1 for the metric value. If you're counting the number of bytes transferred, reference the
        /// value that is in the log event by using $. followed by the name of the field that you specified in the filter pattern,
        /// such as ``$.size``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that is published to the CloudWatch metric. For example, if you're counting the occurrences of a particular term like ``Error``, specify 1 for the metric value. If you're counting the number of bytes transferred, reference the value that is in the log event by using $. followed by the name of the field that you specified in the filter pattern, such as ``$.size``.",
        SerializedName = @"metricValue",
        PossibleTypes = new [] { typeof(string) })]
        string MetricValue { get; set; }
        /// <summary>
        /// The unit to assign to the metric. If you omit this, the unit is set as ``None``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unit to assign to the metric. If you omit this, the unit is set as ``None``.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit? Unit { get; set; }

    }
    /// Definition of MetricTransformation
    internal partial interface IMetricTransformationInternal

    {
        /// <summary>
        /// (Optional) The value to emit when a filter pattern does not match a log event. This value can be null.
        /// </summary>
        int? DefaultValue { get; set; }
        /// <summary>
        /// The fields to use as dimensions for the metric. One metric filter can include as many as three dimensions. Metrics extracted
        /// from log events are charged as custom metrics. To prevent unexpected high charges, do not specify high-cardinality fields
        /// such as ``IPAddress`` or ``requestID`` as dimensions. Each different value found for a dimension is treated as a separate
        /// metric and accrues charges as a separate custom metric. CloudWatch Logs disables a metric filter if it generates 1000
        /// different name/value pairs for your specified dimensions within a certain amount of time. This helps to prevent accidental
        /// high charges. You can also set up a billing alarm to alert you if your charges are higher than expected. For more information,
        /// see [Creating a Billing Alarm to Monitor Your Estimated Charges](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDimensionAutoGenerated[] Dimension { get; set; }
        /// <summary>The name of the CloudWatch metric.</summary>
        string MetricName { get; set; }
        /// <summary>
        /// A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics that are similar. For
        /// more information, see [Namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace).
        /// </summary>
        string MetricNamespace { get; set; }
        /// <summary>
        /// The value that is published to the CloudWatch metric. For example, if you're counting the occurrences of a particular
        /// term like ``Error``, specify 1 for the metric value. If you're counting the number of bytes transferred, reference the
        /// value that is in the log event by using $. followed by the name of the field that you specified in the filter pattern,
        /// such as ``$.size``.
        /// </summary>
        string MetricValue { get; set; }
        /// <summary>
        /// The unit to assign to the metric. If you omit this, the unit is set as ``None``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit? Unit { get; set; }

    }
}