// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsLambdaFunction</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsLambdaFunctionPropertiesTypeConverter))]
    public partial class AwsLambdaFunctionProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsLambdaFunctionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsLambdaFunctionProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Code"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Code = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICode) content.GetValueForProperty("Code",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Code, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CodeTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeadLetterConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).DeadLetterConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeadLetterConfig) content.GetValueForProperty("DeadLetterConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).DeadLetterConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeadLetterConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("Environment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Environment = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironment) content.GetValueForProperty("Environment",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Environment, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentTypeConverter.ConvertFrom);
            }
            if (content.Contains("EphemeralStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EphemeralStorage = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorageAutoGenerated) content.GetValueForProperty("EphemeralStorage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EphemeralStorage, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EphemeralStorageAutoGeneratedTypeConverter.ConvertFrom);
            }
            if (content.Contains("ImageConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfig) content.GetValueForProperty("ImageConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("LoggingConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfig) content.GetValueForProperty("LoggingConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("RuntimeManagementConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfig) content.GetValueForProperty("RuntimeManagementConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RuntimeManagementConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("SnapStart"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStart = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStart) content.GetValueForProperty("SnapStart",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStart, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapStartTypeConverter.ConvertFrom);
            }
            if (content.Contains("SnapStartResponse"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponse = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponse) content.GetValueForProperty("SnapStartResponse",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponse, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapStartResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("TracingConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).TracingConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITracingConfig) content.GetValueForProperty("TracingConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).TracingConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TracingConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("VpcConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGenerated) content.GetValueForProperty("VpcConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcConfigAutoGeneratedTypeConverter.ConvertFrom);
            }
            if (content.Contains("Architecture"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Architecture = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures[]) content.GetValueForProperty("Architecture",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Architecture, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures.CreateFrom));
            }
            if (content.Contains("Arn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Arn = (string) content.GetValueForProperty("Arn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Arn, global::System.Convert.ToString);
            }
            if (content.Contains("CodeSigningConfigArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeSigningConfigArn = (string) content.GetValueForProperty("CodeSigningConfigArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeSigningConfigArn, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("FileSystemConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).FileSystemConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFileSystemConfig[]) content.GetValueForProperty("FileSystemConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).FileSystemConfig, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFileSystemConfig>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.FileSystemConfigTypeConverter.ConvertFrom));
            }
            if (content.Contains("FunctionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).FunctionName = (string) content.GetValueForProperty("FunctionName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).FunctionName, global::System.Convert.ToString);
            }
            if (content.Contains("Handler"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Handler = (string) content.GetValueForProperty("Handler",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Handler, global::System.Convert.ToString);
            }
            if (content.Contains("KmsKeyArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).KmsKeyArn = (string) content.GetValueForProperty("KmsKeyArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).KmsKeyArn, global::System.Convert.ToString);
            }
            if (content.Contains("Layer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Layer = (string[]) content.GetValueForProperty("Layer",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Layer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("MemorySize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).MemorySize = (int?) content.GetValueForProperty("MemorySize",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).MemorySize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PackageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).PackageType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PackageType?) content.GetValueForProperty("PackageType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).PackageType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PackageType.CreateFrom);
            }
            if (content.Contains("ReservedConcurrentExecution"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ReservedConcurrentExecution = (int?) content.GetValueForProperty("ReservedConcurrentExecution",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ReservedConcurrentExecution, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Role"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Role = (string) content.GetValueForProperty("Role",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Role, global::System.Convert.ToString);
            }
            if (content.Contains("Runtime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Runtime = (string) content.GetValueForProperty("Runtime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Runtime, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated37[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated37>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated37TypeConverter.ConvertFrom));
            }
            if (content.Contains("Timeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Timeout = (int?) content.GetValueForProperty("Timeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Timeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CodeImageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeImageUri = (string) content.GetValueForProperty("CodeImageUri",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeImageUri, global::System.Convert.ToString);
            }
            if (content.Contains("CodeS3Bucket"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3Bucket = (string) content.GetValueForProperty("CodeS3Bucket",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3Bucket, global::System.Convert.ToString);
            }
            if (content.Contains("CodeS3Key"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3Key = (string) content.GetValueForProperty("CodeS3Key",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3Key, global::System.Convert.ToString);
            }
            if (content.Contains("CodeZipFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeZipFile = (string) content.GetValueForProperty("CodeZipFile",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeZipFile, global::System.Convert.ToString);
            }
            if (content.Contains("DeadLetterConfigTargetArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).DeadLetterConfigTargetArn = (string) content.GetValueForProperty("DeadLetterConfigTargetArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).DeadLetterConfigTargetArn, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentVariable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EnvironmentVariable = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariables) content.GetValueForProperty("EnvironmentVariable",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EnvironmentVariable, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentVariablesTypeConverter.ConvertFrom);
            }
            if (content.Contains("EphemeralStorageSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EphemeralStorageSize = (int?) content.GetValueForProperty("EphemeralStorageSize",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EphemeralStorageSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ImageConfigCommand"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigCommand = (string[]) content.GetValueForProperty("ImageConfigCommand",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigCommand, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ImageConfigEntryPoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigEntryPoint = (string[]) content.GetValueForProperty("ImageConfigEntryPoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigEntryPoint, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ImageConfigWorkingDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigWorkingDirectory = (string) content.GetValueForProperty("ImageConfigWorkingDirectory",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigWorkingDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingConfigLogFormat"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigLogFormat = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat?) content.GetValueForProperty("LoggingConfigLogFormat",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigLogFormat, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat.CreateFrom);
            }
            if (content.Contains("LoggingConfigLogGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigLogGroup = (string) content.GetValueForProperty("LoggingConfigLogGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigLogGroup, global::System.Convert.ToString);
            }
            if (content.Contains("SnapStartApplyOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartApplyOn = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartApplyOn?) content.GetValueForProperty("SnapStartApplyOn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartApplyOn, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartApplyOn.CreateFrom);
            }
            if (content.Contains("SnapStartResponseApplyOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponseApplyOn = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn?) content.GetValueForProperty("SnapStartResponseApplyOn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponseApplyOn, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn.CreateFrom);
            }
            if (content.Contains("SnapStartResponseOptimizationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponseOptimizationStatus = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus?) content.GetValueForProperty("SnapStartResponseOptimizationStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponseOptimizationStatus, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus.CreateFrom);
            }
            if (content.Contains("TracingConfigMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).TracingConfigMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TracingConfigMode?) content.GetValueForProperty("TracingConfigMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).TracingConfigMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TracingConfigMode.CreateFrom);
            }
            if (content.Contains("VpcConfigSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigSubnetId = (string[]) content.GetValueForProperty("VpcConfigSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigSubnetId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CodeS3ObjectVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3ObjectVersion = (string) content.GetValueForProperty("CodeS3ObjectVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3ObjectVersion, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingConfigApplicationLogLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigApplicationLogLevel = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel?) content.GetValueForProperty("LoggingConfigApplicationLogLevel",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigApplicationLogLevel, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel.CreateFrom);
            }
            if (content.Contains("LoggingConfigSystemLogLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigSystemLogLevel = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel?) content.GetValueForProperty("LoggingConfigSystemLogLevel",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigSystemLogLevel, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel.CreateFrom);
            }
            if (content.Contains("RuntimeManagementConfigRuntimeVersionArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfigRuntimeVersionArn = (string) content.GetValueForProperty("RuntimeManagementConfigRuntimeVersionArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfigRuntimeVersionArn, global::System.Convert.ToString);
            }
            if (content.Contains("RuntimeManagementConfigUpdateRuntimeOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfigUpdateRuntimeOn = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn?) content.GetValueForProperty("RuntimeManagementConfigUpdateRuntimeOn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfigUpdateRuntimeOn, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn.CreateFrom);
            }
            if (content.Contains("VpcConfigIpv6AllowedForDualStack"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigIpv6AllowedForDualStack = (bool?) content.GetValueForProperty("VpcConfigIpv6AllowedForDualStack",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigIpv6AllowedForDualStack, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VpcConfigSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigSecurityGroupId = (string[]) content.GetValueForProperty("VpcConfigSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigSecurityGroupId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsLambdaFunctionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsLambdaFunctionProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Code"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Code = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICode) content.GetValueForProperty("Code",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Code, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CodeTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeadLetterConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).DeadLetterConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDeadLetterConfig) content.GetValueForProperty("DeadLetterConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).DeadLetterConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeadLetterConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("Environment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Environment = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironment) content.GetValueForProperty("Environment",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Environment, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentTypeConverter.ConvertFrom);
            }
            if (content.Contains("EphemeralStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EphemeralStorage = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorageAutoGenerated) content.GetValueForProperty("EphemeralStorage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EphemeralStorage, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EphemeralStorageAutoGeneratedTypeConverter.ConvertFrom);
            }
            if (content.Contains("ImageConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImageConfig) content.GetValueForProperty("ImageConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("LoggingConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingConfig) content.GetValueForProperty("LoggingConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("RuntimeManagementConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimeManagementConfig) content.GetValueForProperty("RuntimeManagementConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RuntimeManagementConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("SnapStart"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStart = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStart) content.GetValueForProperty("SnapStart",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStart, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapStartTypeConverter.ConvertFrom);
            }
            if (content.Contains("SnapStartResponse"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponse = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponse) content.GetValueForProperty("SnapStartResponse",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponse, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapStartResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("TracingConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).TracingConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITracingConfig) content.GetValueForProperty("TracingConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).TracingConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TracingConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("VpcConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigAutoGenerated) content.GetValueForProperty("VpcConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcConfigAutoGeneratedTypeConverter.ConvertFrom);
            }
            if (content.Contains("Architecture"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Architecture = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures[]) content.GetValueForProperty("Architecture",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Architecture, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures.CreateFrom));
            }
            if (content.Contains("Arn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Arn = (string) content.GetValueForProperty("Arn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Arn, global::System.Convert.ToString);
            }
            if (content.Contains("CodeSigningConfigArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeSigningConfigArn = (string) content.GetValueForProperty("CodeSigningConfigArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeSigningConfigArn, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("FileSystemConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).FileSystemConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFileSystemConfig[]) content.GetValueForProperty("FileSystemConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).FileSystemConfig, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFileSystemConfig>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.FileSystemConfigTypeConverter.ConvertFrom));
            }
            if (content.Contains("FunctionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).FunctionName = (string) content.GetValueForProperty("FunctionName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).FunctionName, global::System.Convert.ToString);
            }
            if (content.Contains("Handler"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Handler = (string) content.GetValueForProperty("Handler",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Handler, global::System.Convert.ToString);
            }
            if (content.Contains("KmsKeyArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).KmsKeyArn = (string) content.GetValueForProperty("KmsKeyArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).KmsKeyArn, global::System.Convert.ToString);
            }
            if (content.Contains("Layer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Layer = (string[]) content.GetValueForProperty("Layer",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Layer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("MemorySize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).MemorySize = (int?) content.GetValueForProperty("MemorySize",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).MemorySize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PackageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).PackageType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PackageType?) content.GetValueForProperty("PackageType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).PackageType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.PackageType.CreateFrom);
            }
            if (content.Contains("ReservedConcurrentExecution"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ReservedConcurrentExecution = (int?) content.GetValueForProperty("ReservedConcurrentExecution",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ReservedConcurrentExecution, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Role"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Role = (string) content.GetValueForProperty("Role",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Role, global::System.Convert.ToString);
            }
            if (content.Contains("Runtime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Runtime = (string) content.GetValueForProperty("Runtime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Runtime, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated37[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated37>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated37TypeConverter.ConvertFrom));
            }
            if (content.Contains("Timeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Timeout = (int?) content.GetValueForProperty("Timeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).Timeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CodeImageUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeImageUri = (string) content.GetValueForProperty("CodeImageUri",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeImageUri, global::System.Convert.ToString);
            }
            if (content.Contains("CodeS3Bucket"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3Bucket = (string) content.GetValueForProperty("CodeS3Bucket",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3Bucket, global::System.Convert.ToString);
            }
            if (content.Contains("CodeS3Key"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3Key = (string) content.GetValueForProperty("CodeS3Key",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3Key, global::System.Convert.ToString);
            }
            if (content.Contains("CodeZipFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeZipFile = (string) content.GetValueForProperty("CodeZipFile",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeZipFile, global::System.Convert.ToString);
            }
            if (content.Contains("DeadLetterConfigTargetArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).DeadLetterConfigTargetArn = (string) content.GetValueForProperty("DeadLetterConfigTargetArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).DeadLetterConfigTargetArn, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentVariable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EnvironmentVariable = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariables) content.GetValueForProperty("EnvironmentVariable",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EnvironmentVariable, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentVariablesTypeConverter.ConvertFrom);
            }
            if (content.Contains("EphemeralStorageSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EphemeralStorageSize = (int?) content.GetValueForProperty("EphemeralStorageSize",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).EphemeralStorageSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ImageConfigCommand"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigCommand = (string[]) content.GetValueForProperty("ImageConfigCommand",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigCommand, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ImageConfigEntryPoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigEntryPoint = (string[]) content.GetValueForProperty("ImageConfigEntryPoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigEntryPoint, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ImageConfigWorkingDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigWorkingDirectory = (string) content.GetValueForProperty("ImageConfigWorkingDirectory",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).ImageConfigWorkingDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingConfigLogFormat"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigLogFormat = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat?) content.GetValueForProperty("LoggingConfigLogFormat",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigLogFormat, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigLogFormat.CreateFrom);
            }
            if (content.Contains("LoggingConfigLogGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigLogGroup = (string) content.GetValueForProperty("LoggingConfigLogGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigLogGroup, global::System.Convert.ToString);
            }
            if (content.Contains("SnapStartApplyOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartApplyOn = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartApplyOn?) content.GetValueForProperty("SnapStartApplyOn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartApplyOn, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartApplyOn.CreateFrom);
            }
            if (content.Contains("SnapStartResponseApplyOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponseApplyOn = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn?) content.GetValueForProperty("SnapStartResponseApplyOn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponseApplyOn, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn.CreateFrom);
            }
            if (content.Contains("SnapStartResponseOptimizationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponseOptimizationStatus = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus?) content.GetValueForProperty("SnapStartResponseOptimizationStatus",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).SnapStartResponseOptimizationStatus, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus.CreateFrom);
            }
            if (content.Contains("TracingConfigMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).TracingConfigMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TracingConfigMode?) content.GetValueForProperty("TracingConfigMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).TracingConfigMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.TracingConfigMode.CreateFrom);
            }
            if (content.Contains("VpcConfigSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigSubnetId = (string[]) content.GetValueForProperty("VpcConfigSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigSubnetId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CodeS3ObjectVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3ObjectVersion = (string) content.GetValueForProperty("CodeS3ObjectVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).CodeS3ObjectVersion, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingConfigApplicationLogLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigApplicationLogLevel = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel?) content.GetValueForProperty("LoggingConfigApplicationLogLevel",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigApplicationLogLevel, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigApplicationLogLevel.CreateFrom);
            }
            if (content.Contains("LoggingConfigSystemLogLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigSystemLogLevel = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel?) content.GetValueForProperty("LoggingConfigSystemLogLevel",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).LoggingConfigSystemLogLevel, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LoggingConfigSystemLogLevel.CreateFrom);
            }
            if (content.Contains("RuntimeManagementConfigRuntimeVersionArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfigRuntimeVersionArn = (string) content.GetValueForProperty("RuntimeManagementConfigRuntimeVersionArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfigRuntimeVersionArn, global::System.Convert.ToString);
            }
            if (content.Contains("RuntimeManagementConfigUpdateRuntimeOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfigUpdateRuntimeOn = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn?) content.GetValueForProperty("RuntimeManagementConfigUpdateRuntimeOn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).RuntimeManagementConfigUpdateRuntimeOn, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RuntimeManagementConfigUpdateRuntimeOn.CreateFrom);
            }
            if (content.Contains("VpcConfigIpv6AllowedForDualStack"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigIpv6AllowedForDualStack = (bool?) content.GetValueForProperty("VpcConfigIpv6AllowedForDualStack",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigIpv6AllowedForDualStack, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VpcConfigSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigSecurityGroupId = (string[]) content.GetValueForProperty("VpcConfigSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionPropertiesInternal)this).VpcConfigSecurityGroupId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsLambdaFunctionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsLambdaFunctionProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsLambdaFunctionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsLambdaFunctionProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsLambdaFunctionProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsLambdaFunctionProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsLambdaFunction
    [System.ComponentModel.TypeConverter(typeof(AwsLambdaFunctionPropertiesTypeConverter))]
    public partial interface IAwsLambdaFunctionProperties

    {

    }
}