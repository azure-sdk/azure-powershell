// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsWafv2LoggingConfiguration</summary>
    public partial class AwsWafv2LoggingConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsWafv2LoggingConfigurationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsWafv2LoggingConfigurationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="LogDestinationConfig" /> property.</summary>
        private string[] _logDestinationConfig;

        /// <summary>
        /// The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] LogDestinationConfig { get => this._logDestinationConfig; set => this._logDestinationConfig = value; }

        /// <summary>Backing field for <see cref="LoggingFilter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingFilterModelProperties _loggingFilter;

        /// <summary>
        /// Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action
        /// and on the web request labels that were applied by matching rules during web ACL evaluation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingFilterModelProperties LoggingFilter { get => (this._loggingFilter = this._loggingFilter ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingFilterModelProperties()); set => this._loggingFilter = value; }

        /// <summary>
        /// Default handling for logs that don't match any of the specified filtering conditions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DefaultBehavior? LoggingFilterDefaultBehavior { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingFilterModelPropertiesInternal)LoggingFilter).DefaultBehavior; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingFilterModelPropertiesInternal)LoggingFilter).DefaultBehavior = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DefaultBehavior)""); }

        /// <summary>The filters that you want to apply to the logs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterAutoGenerated[] LoggingFilterFilters { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingFilterModelPropertiesInternal)LoggingFilter).Filter; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingFilterModelPropertiesInternal)LoggingFilter).Filter = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ManagedByFirewallManager" /> property.</summary>
        private bool? _managedByFirewallManager;

        /// <summary>
        /// Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration.
        /// If true, only Firewall Manager can modify or delete the configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? ManagedByFirewallManager { get => this._managedByFirewallManager; set => this._managedByFirewallManager = value; }

        /// <summary>Internal Acessors for LoggingFilter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingFilterModelProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsWafv2LoggingConfigurationPropertiesInternal.LoggingFilter { get => (this._loggingFilter = this._loggingFilter ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingFilterModelProperties()); set { {_loggingFilter = value;} } }

        /// <summary>Backing field for <see cref="RedactedField" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFieldToMatch[] _redactedField;

        /// <summary>
        /// The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER
        /// field in the firehose will be xxx.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFieldToMatch[] RedactedField { get => this._redactedField; set => this._redactedField = value; }

        /// <summary>Backing field for <see cref="ResourceArn" /> property.</summary>
        private string _resourceArn;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ResourceArn { get => this._resourceArn; set => this._resourceArn = value; }

        /// <summary>Creates an new <see cref="AwsWafv2LoggingConfigurationProperties" /> instance.</summary>
        public AwsWafv2LoggingConfigurationProperties()
        {

        }
    }
    /// Definition of awsWafv2LoggingConfiguration
    public partial interface IAwsWafv2LoggingConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.",
        SerializedName = @"logDestinationConfigs",
        PossibleTypes = new [] { typeof(string) })]
        string[] LogDestinationConfig { get; set; }
        /// <summary>
        /// Default handling for logs that don't match any of the specified filtering conditions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Default handling for logs that don't match any of the specified filtering conditions.",
        SerializedName = @"defaultBehavior",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DefaultBehavior) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DefaultBehavior? LoggingFilterDefaultBehavior { get; set; }
        /// <summary>The filters that you want to apply to the logs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The filters that you want to apply to the logs.",
        SerializedName = @"filters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterAutoGenerated[] LoggingFilterFilters { get; set; }
        /// <summary>
        /// Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration.
        /// If true, only Firewall Manager can modify or delete the configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration. If true, only Firewall Manager can modify or delete the configuration.",
        SerializedName = @"managedByFirewallManager",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ManagedByFirewallManager { get; set; }
        /// <summary>
        /// The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER
        /// field in the firehose will be xxx.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.",
        SerializedName = @"redactedFields",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFieldToMatch) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFieldToMatch[] RedactedField { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.",
        SerializedName = @"resourceArn",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceArn { get; set; }

    }
    /// Definition of awsWafv2LoggingConfiguration
    internal partial interface IAwsWafv2LoggingConfigurationPropertiesInternal

    {
        /// <summary>
        /// The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
        /// </summary>
        string[] LogDestinationConfig { get; set; }
        /// <summary>
        /// Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action
        /// and on the web request labels that were applied by matching rules during web ACL evaluation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingFilterModelProperties LoggingFilter { get; set; }
        /// <summary>
        /// Default handling for logs that don't match any of the specified filtering conditions.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DefaultBehavior? LoggingFilterDefaultBehavior { get; set; }
        /// <summary>The filters that you want to apply to the logs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterAutoGenerated[] LoggingFilterFilters { get; set; }
        /// <summary>
        /// Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration.
        /// If true, only Firewall Manager can modify or delete the configuration.
        /// </summary>
        bool? ManagedByFirewallManager { get; set; }
        /// <summary>
        /// The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER
        /// field in the firehose will be xxx.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFieldToMatch[] RedactedField { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
        /// </summary>
        string ResourceArn { get; set; }

    }
}