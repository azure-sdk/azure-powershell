// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of LocalSecondaryIndex</summary>
    public partial class LocalSecondaryIndex :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocalSecondaryIndex,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocalSecondaryIndexInternal
    {

        /// <summary>Backing field for <see cref="IndexName" /> property.</summary>
        private string _indexName;

        /// <summary>
        /// The name of the local secondary index. The name must be unique among all other indexes on this table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string IndexName { get => this._indexName; set => this._indexName = value; }

        /// <summary>Backing field for <see cref="KeySchema" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchema[] _keySchema;

        /// <summary>
        /// The complete key schema for the local secondary index, consisting of one or more pairs of attribute names and key types:
        /// + ``HASH`` - partition key + ``RANGE`` - sort key The partition key of an item is also known as its *hash attribute*.
        /// The term 'hash attribute' derives from DynamoDB's usage of an internal hash function to evenly distribute data items across
        /// partitions, based on their partition key values. The sort key of an item is also known as its *range attribute*. The term
        /// 'range attribute' derives from the way DynamoDB stores items with the same partition key physically close together, in
        /// sorted order by the sort key value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchema[] KeySchema { get => this._keySchema; set => this._keySchema = value; }

        /// <summary>Internal Acessors for Projection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjection Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILocalSecondaryIndexInternal.Projection { get => (this._projection = this._projection ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Projection()); set { {_projection = value;} } }

        /// <summary>Backing field for <see cref="Projection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjection _projection;

        /// <summary>
        /// Represents attributes that are copied (projected) from the table into the local secondary index. These are in addition
        /// to the primary key attributes and index key attributes, which are automatically projected. Represents attributes that
        /// are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key
        /// attributes, which are automatically projected.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjection Projection { get => (this._projection = this._projection ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Projection()); set => this._projection = value; }

        /// <summary>
        /// Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total
        /// count of ``NonKeyAttributes`` summed across all of the local secondary indexes, must not exceed 100. If you project the
        /// same attribute into two different indexes, this counts as two distinct attributes when determining the total.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] ProjectionNonKeyAttribute { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectionInternal)Projection).NonKeyAttribute; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectionInternal)Projection).NonKeyAttribute = value ?? null /* arrayOf */; }

        /// <summary>
        /// The set of attributes that are projected into the index: + ``KEYS_ONLY`` - Only the index and primary keys are projected
        /// into the index. + ``INCLUDE`` - In addition to the attributes described in ``KEYS_ONLY``, the secondary index will include
        /// other non-key attributes that you specify. + ``ALL`` - All of the table attributes are projected into the index. When
        /// using the DynamoDB console, ``ALL`` is selected by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ProjectionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectionInternal)Projection).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectionInternal)Projection).Type = value ?? null; }

        /// <summary>Creates an new <see cref="LocalSecondaryIndex" /> instance.</summary>
        public LocalSecondaryIndex()
        {

        }
    }
    /// Definition of LocalSecondaryIndex
    public partial interface ILocalSecondaryIndex :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the local secondary index. The name must be unique among all other indexes on this table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the local secondary index. The name must be unique among all other indexes on this table.",
        SerializedName = @"indexName",
        PossibleTypes = new [] { typeof(string) })]
        string IndexName { get; set; }
        /// <summary>
        /// The complete key schema for the local secondary index, consisting of one or more pairs of attribute names and key types:
        /// + ``HASH`` - partition key + ``RANGE`` - sort key The partition key of an item is also known as its *hash attribute*.
        /// The term 'hash attribute' derives from DynamoDB's usage of an internal hash function to evenly distribute data items across
        /// partitions, based on their partition key values. The sort key of an item is also known as its *range attribute*. The term
        /// 'range attribute' derives from the way DynamoDB stores items with the same partition key physically close together, in
        /// sorted order by the sort key value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The complete key schema for the local secondary index, consisting of one or more pairs of attribute names and key types:  +   ``HASH`` - partition key  +   ``RANGE`` - sort key    The partition key of an item is also known as its *hash attribute*. The term 'hash attribute' derives from DynamoDB's usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values. The sort key of an item is also known as its *range attribute*. The term 'range attribute' derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.",
        SerializedName = @"keySchema",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchema) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchema[] KeySchema { get; set; }
        /// <summary>
        /// Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total
        /// count of ``NonKeyAttributes`` summed across all of the local secondary indexes, must not exceed 100. If you project the
        /// same attribute into two different indexes, this counts as two distinct attributes when determining the total.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total count of ``NonKeyAttributes`` summed across all of the local secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.",
        SerializedName = @"nonKeyAttributes",
        PossibleTypes = new [] { typeof(string) })]
        string[] ProjectionNonKeyAttribute { get; set; }
        /// <summary>
        /// The set of attributes that are projected into the index: + ``KEYS_ONLY`` - Only the index and primary keys are projected
        /// into the index. + ``INCLUDE`` - In addition to the attributes described in ``KEYS_ONLY``, the secondary index will include
        /// other non-key attributes that you specify. + ``ALL`` - All of the table attributes are projected into the index. When
        /// using the DynamoDB console, ``ALL`` is selected by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of attributes that are projected into the index:  +   ``KEYS_ONLY`` - Only the index and primary keys are projected into the index.  +   ``INCLUDE`` - In addition to the attributes described in ``KEYS_ONLY``, the secondary index will include other non-key attributes that you specify.  +   ``ALL`` - All of the table attributes are projected into the index.   When using the DynamoDB console, ``ALL`` is selected by default.",
        SerializedName = @"projectionType",
        PossibleTypes = new [] { typeof(string) })]
        string ProjectionType { get; set; }

    }
    /// Definition of LocalSecondaryIndex
    internal partial interface ILocalSecondaryIndexInternal

    {
        /// <summary>
        /// The name of the local secondary index. The name must be unique among all other indexes on this table.
        /// </summary>
        string IndexName { get; set; }
        /// <summary>
        /// The complete key schema for the local secondary index, consisting of one or more pairs of attribute names and key types:
        /// + ``HASH`` - partition key + ``RANGE`` - sort key The partition key of an item is also known as its *hash attribute*.
        /// The term 'hash attribute' derives from DynamoDB's usage of an internal hash function to evenly distribute data items across
        /// partitions, based on their partition key values. The sort key of an item is also known as its *range attribute*. The term
        /// 'range attribute' derives from the way DynamoDB stores items with the same partition key physically close together, in
        /// sorted order by the sort key value.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeySchema[] KeySchema { get; set; }
        /// <summary>
        /// Represents attributes that are copied (projected) from the table into the local secondary index. These are in addition
        /// to the primary key attributes and index key attributes, which are automatically projected. Represents attributes that
        /// are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key
        /// attributes, which are automatically projected.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjection Projection { get; set; }
        /// <summary>
        /// Represents the non-key attribute names which will be projected into the index. For local secondary indexes, the total
        /// count of ``NonKeyAttributes`` summed across all of the local secondary indexes, must not exceed 100. If you project the
        /// same attribute into two different indexes, this counts as two distinct attributes when determining the total.
        /// </summary>
        string[] ProjectionNonKeyAttribute { get; set; }
        /// <summary>
        /// The set of attributes that are projected into the index: + ``KEYS_ONLY`` - Only the index and primary keys are projected
        /// into the index. + ``INCLUDE`` - In addition to the attributes described in ``KEYS_ONLY``, the secondary index will include
        /// other non-key attributes that you specify. + ``ALL`` - All of the table attributes are projected into the index. When
        /// using the DynamoDB console, ``ALL`` is selected by default.
        /// </summary>
        string ProjectionType { get; set; }

    }
}