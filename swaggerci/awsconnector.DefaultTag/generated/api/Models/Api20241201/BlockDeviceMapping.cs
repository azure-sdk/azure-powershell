// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of BlockDeviceMapping</summary>
    public partial class BlockDeviceMapping :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal
    {

        /// <summary>Backing field for <see cref="DeviceName" /> property.</summary>
        private string _deviceName;

        /// <summary>
        /// <p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DeviceName { get => this._deviceName; set => this._deviceName = value; }

        /// <summary>Backing field for <see cref="Eb" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDevice _eb;

        /// <summary>
        /// <p>Parameters used to automatically set up EBS volumes when the instance is launched.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDevice Eb { get => (this._eb = this._eb ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EbsBlockDevice()); set => this._eb = value; }

        /// <summary>
        /// <p>Indicates whether the EBS volume is deleted on instance termination. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination'>Preserving
        /// Amazon EBS volumes on instance termination</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? EbDeleteOnTermination { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).DeleteOnTermination; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).DeleteOnTermination = value ?? default(bool); }

        /// <summary>
        /// <p>Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The
        /// effect of setting the encryption state to <code>true</code> depends on the volume origin (new or from a snapshot), starting
        /// encryption state, ownership, and whether encryption by default is enabled. For more information, see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html#encryption-parameters'>Amazon
        /// EBS encryption</a> in the <i>Amazon EBS User Guide</i>.</p> <p>In no case can you remove encryption from an encrypted
        /// volume.</p> <p>Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information,
        /// see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption-requirements.html#ebs-encryption_supported_instances'>Supported
        /// instance types</a>.</p> <p>This parameter is not returned by <a>DescribeImageAttribute</a>.</p> <p>For <a>CreateImage</a>
        /// and <a>RegisterImage</a>, whether you can include this parameter, and the allowed values differ depending on the type
        /// of block device mapping you are creating.</p> <ul> <li> <p>If you are creating a block device mapping for a <b>new (empty)
        /// volume</b>, you can include this parameter, and specify either <code>true</code> for an encrypted volume, or <code>false</code>
        /// for an unencrypted volume. If you omit this parameter, it defaults to <code>false</code> (unencrypted).</p> </li> <li>
        /// <p>If you are creating a block device mapping from an <b>existing encrypted or unencrypted snapshot</b>, you must omit
        /// this parameter. If you include this parameter, the request will fail, regardless of the value that you specify.</p> </li>
        /// <li> <p>If you are creating a block device mapping from an <b>existing unencrypted volume</b>, you can include this parameter,
        /// but you must specify <code>false</code>. If you specify <code>true</code>, the request will fail. In this case, we recommend
        /// that you omit the parameter.</p> </li> <li> <p>If you are creating a block device mapping from an <b>existing encrypted
        /// volume</b>, you can include this parameter, and specify either <code>true</code> or <code>false</code>. However, if you
        /// specify <code>false</code>, the parameter is ignored and the block device mapping is always encrypted. In this case, we
        /// recommend that you omit the parameter.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? EbEncrypted { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).Encrypted; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).Encrypted = value ?? default(bool); }

        /// <summary>
        /// <p>The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes,
        /// this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents
        /// the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.</p> <p>The
        /// following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000 - 16,000 IOPS</p> </li>
        /// <li> <p> <code>io1</code>: 100 - 64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100 - 256,000 IOPS</p> </li> </ul> <p>For
        /// <code>io2</code> volumes, you can achieve up to 256,000 IOPS on <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances'>instances
        /// built on the Nitro System</a>. On other instances, you can achieve performance up to 32,000 IOPS.</p> <p>This parameter
        /// is required for <code>io1</code> and <code>io2</code> volumes. The default for <code>gp3</code> volumes is 3,000 IOPS.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? EbIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).Iop; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).Iop = value ?? default(int); }

        /// <summary>
        /// <p>Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.</p>
        /// <p>This parameter is only supported on <code>BlockDeviceMapping</code> objects called by <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html'>RunInstances</a>,
        /// <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html'>RequestSpotFleet</a>, and <a
        /// href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html'>RequestSpotInstances</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EbKmsKeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).KmsKeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).KmsKeyId = value ?? null; }

        /// <summary>
        /// <p>The ARN of the Outpost on which the snapshot is stored.</p> <p>This parameter is not supported when using <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html'>CreateImage</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EbOutpostArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).OutpostArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).OutpostArn = value ?? null; }

        /// <summary><p>The ID of the snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EbSnapshotId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).SnapshotId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).SnapshotId = value ?? null; }

        /// <summary>
        /// <p>The throughput that the volume supports, in MiB/s.</p> <p>This parameter is valid only for <code>gp3</code> volumes.</p>
        /// <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? EbThroughput { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).Throughput; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).Throughput = value ?? default(int); }

        /// <summary>
        /// <p>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot,
        /// the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.</p>
        /// <p>The following are the supported sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>:
        /// 1 - 16,384 GiB</p> </li> <li> <p> <code>io1</code>: 4 - 16,384 GiB</p> </li> <li> <p> <code>io2</code>: 4 - 65,536 GiB</p>
        /// </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125 - 16,384 GiB</p> </li> <li> <p> <code>standard</code>: 1 - 1024
        /// GiB</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? EbVolumeSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).VolumeSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).VolumeSize = value ?? default(int); }

        /// <summary>Internal Acessors for Eb</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDevice Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal.Eb { get => (this._eb = this._eb ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EbsBlockDevice()); set { {_eb = value;} } }

        /// <summary>Internal Acessors for EbVolumeType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal.EbVolumeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).VolumeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).VolumeType = value; }

        /// <summary>Backing field for <see cref="NoDevice" /> property.</summary>
        private string _noDevice;

        /// <summary>
        /// <p>To omit the device from the block device mapping, specify an empty string. When this property is specified, the device
        /// is removed from the block device mapping regardless of the assigned value.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string NoDevice { get => this._noDevice; set => this._noDevice = value; }

        /// <summary>Backing field for <see cref="VirtualName" /> property.</summary>
        private string _virtualName;

        /// <summary>
        /// <p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance
        /// type with 2 available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>.
        /// The number of available instance store volumes depends on the instance type. After you connect to the instance, you must
        /// mount the volume.</p> <p>NVMe instance store volumes are automatically enumerated and assigned a device name. Including
        /// them in your block device mapping has no effect.</p> <p>Constraints: For M3 instances, you must specify instance store
        /// volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes
        /// specified in the block device mapping for the AMI.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string VirtualName { get => this._virtualName; set => this._virtualName = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType? VolumeTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).VolumeTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDeviceInternal)Eb).VolumeTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType)""); }

        /// <summary>Creates an new <see cref="BlockDeviceMapping" /> instance.</summary>
        public BlockDeviceMapping()
        {

        }
    }
    /// Definition of BlockDeviceMapping
    public partial interface IBlockDeviceMapping :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>",
        SerializedName = @"deviceName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceName { get; set; }
        /// <summary>
        /// <p>Indicates whether the EBS volume is deleted on instance termination. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination'>Preserving
        /// Amazon EBS volumes on instance termination</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the EBS volume is deleted on instance termination. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination'>Preserving Amazon EBS volumes on instance termination</a> in the <i>Amazon EC2 User Guide</i>.</p>",
        SerializedName = @"deleteOnTermination",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EbDeleteOnTermination { get; set; }
        /// <summary>
        /// <p>Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The
        /// effect of setting the encryption state to <code>true</code> depends on the volume origin (new or from a snapshot), starting
        /// encryption state, ownership, and whether encryption by default is enabled. For more information, see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html#encryption-parameters'>Amazon
        /// EBS encryption</a> in the <i>Amazon EBS User Guide</i>.</p> <p>In no case can you remove encryption from an encrypted
        /// volume.</p> <p>Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information,
        /// see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption-requirements.html#ebs-encryption_supported_instances'>Supported
        /// instance types</a>.</p> <p>This parameter is not returned by <a>DescribeImageAttribute</a>.</p> <p>For <a>CreateImage</a>
        /// and <a>RegisterImage</a>, whether you can include this parameter, and the allowed values differ depending on the type
        /// of block device mapping you are creating.</p> <ul> <li> <p>If you are creating a block device mapping for a <b>new (empty)
        /// volume</b>, you can include this parameter, and specify either <code>true</code> for an encrypted volume, or <code>false</code>
        /// for an unencrypted volume. If you omit this parameter, it defaults to <code>false</code> (unencrypted).</p> </li> <li>
        /// <p>If you are creating a block device mapping from an <b>existing encrypted or unencrypted snapshot</b>, you must omit
        /// this parameter. If you include this parameter, the request will fail, regardless of the value that you specify.</p> </li>
        /// <li> <p>If you are creating a block device mapping from an <b>existing unencrypted volume</b>, you can include this parameter,
        /// but you must specify <code>false</code>. If you specify <code>true</code>, the request will fail. In this case, we recommend
        /// that you omit the parameter.</p> </li> <li> <p>If you are creating a block device mapping from an <b>existing encrypted
        /// volume</b>, you can include this parameter, and specify either <code>true</code> or <code>false</code>. However, if you
        /// specify <code>false</code>, the parameter is ignored and the block device mapping is always encrypted. In this case, we
        /// recommend that you omit the parameter.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to <code>true</code> depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html#encryption-parameters'>Amazon EBS encryption</a> in the <i>Amazon EBS User Guide</i>.</p> <p>In no case can you remove encryption from an encrypted volume.</p> <p>Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption-requirements.html#ebs-encryption_supported_instances'>Supported instance types</a>.</p> <p>This parameter is not returned by <a>DescribeImageAttribute</a>.</p> <p>For <a>CreateImage</a> and <a>RegisterImage</a>, whether you can include this parameter, and the allowed values differ depending on the type of block device mapping you are creating.</p> <ul> <li> <p>If you are creating a block device mapping for a <b>new (empty) volume</b>, you can include this parameter, and specify either <code>true</code> for an encrypted volume, or <code>false</code> for an unencrypted volume. If you omit this parameter, it defaults to <code>false</code> (unencrypted).</p> </li> <li> <p>If you are creating a block device mapping from an <b>existing encrypted or unencrypted snapshot</b>, you must omit this parameter. If you include this parameter, the request will fail, regardless of the value that you specify.</p> </li> <li> <p>If you are creating a block device mapping from an <b>existing unencrypted volume</b>, you can include this parameter, but you must specify <code>false</code>. If you specify <code>true</code>, the request will fail. In this case, we recommend that you omit the parameter.</p> </li> <li> <p>If you are creating a block device mapping from an <b>existing encrypted volume</b>, you can include this parameter, and specify either <code>true</code> or <code>false</code>. However, if you specify <code>false</code>, the parameter is ignored and the block device mapping is always encrypted. In this case, we recommend that you omit the parameter.</p> </li> </ul>",
        SerializedName = @"encrypted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EbEncrypted { get; set; }
        /// <summary>
        /// <p>The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes,
        /// this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents
        /// the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.</p> <p>The
        /// following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000 - 16,000 IOPS</p> </li>
        /// <li> <p> <code>io1</code>: 100 - 64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100 - 256,000 IOPS</p> </li> </ul> <p>For
        /// <code>io2</code> volumes, you can achieve up to 256,000 IOPS on <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances'>instances
        /// built on the Nitro System</a>. On other instances, you can achieve performance up to 32,000 IOPS.</p> <p>This parameter
        /// is required for <code>io1</code> and <code>io2</code> volumes. The default for <code>gp3</code> volumes is 3,000 IOPS.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.</p> <p>The following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000 - 16,000 IOPS</p> </li> <li> <p> <code>io1</code>: 100 - 64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100 - 256,000 IOPS</p> </li> </ul> <p>For <code>io2</code> volumes, you can achieve up to 256,000 IOPS on <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances'>instances built on the Nitro System</a>. On other instances, you can achieve performance up to 32,000 IOPS.</p> <p>This parameter is required for <code>io1</code> and <code>io2</code> volumes. The default for <code>gp3</code> volumes is 3,000 IOPS.</p>",
        SerializedName = @"iops",
        PossibleTypes = new [] { typeof(int) })]
        int? EbIop { get; set; }
        /// <summary>
        /// <p>Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.</p>
        /// <p>This parameter is only supported on <code>BlockDeviceMapping</code> objects called by <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html'>RunInstances</a>,
        /// <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html'>RequestSpotFleet</a>, and <a
        /// href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html'>RequestSpotInstances</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.</p> <p>This parameter is only supported on <code>BlockDeviceMapping</code> objects called by <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html'>RunInstances</a>, <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html'>RequestSpotFleet</a>, and <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html'>RequestSpotInstances</a>.</p>",
        SerializedName = @"kmsKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string EbKmsKeyId { get; set; }
        /// <summary>
        /// <p>The ARN of the Outpost on which the snapshot is stored.</p> <p>This parameter is not supported when using <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html'>CreateImage</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN of the Outpost on which the snapshot is stored.</p> <p>This parameter is not supported when using <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html'>CreateImage</a>.</p>",
        SerializedName = @"outpostArn",
        PossibleTypes = new [] { typeof(string) })]
        string EbOutpostArn { get; set; }
        /// <summary><p>The ID of the snapshot.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the snapshot.</p>",
        SerializedName = @"snapshotId",
        PossibleTypes = new [] { typeof(string) })]
        string EbSnapshotId { get; set; }
        /// <summary>
        /// <p>The throughput that the volume supports, in MiB/s.</p> <p>This parameter is valid only for <code>gp3</code> volumes.</p>
        /// <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The throughput that the volume supports, in MiB/s.</p> <p>This parameter is valid only for <code>gp3</code> volumes.</p> <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>",
        SerializedName = @"throughput",
        PossibleTypes = new [] { typeof(int) })]
        int? EbThroughput { get; set; }
        /// <summary>
        /// <p>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot,
        /// the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.</p>
        /// <p>The following are the supported sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>:
        /// 1 - 16,384 GiB</p> </li> <li> <p> <code>io1</code>: 4 - 16,384 GiB</p> </li> <li> <p> <code>io2</code>: 4 - 65,536 GiB</p>
        /// </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125 - 16,384 GiB</p> </li> <li> <p> <code>standard</code>: 1 - 1024
        /// GiB</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.</p> <p>The following are the supported sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>: 1 - 16,384 GiB</p> </li> <li> <p> <code>io1</code>: 4 - 16,384 GiB</p> </li> <li> <p> <code>io2</code>: 4 - 65,536 GiB</p> </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125 - 16,384 GiB</p> </li> <li> <p> <code>standard</code>: 1 - 1024 GiB</p> </li> </ul>",
        SerializedName = @"volumeSize",
        PossibleTypes = new [] { typeof(int) })]
        int? EbVolumeSize { get; set; }
        /// <summary>
        /// <p>To omit the device from the block device mapping, specify an empty string. When this property is specified, the device
        /// is removed from the block device mapping regardless of the assigned value.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>To omit the device from the block device mapping, specify an empty string. When this property is specified, the device is removed from the block device mapping regardless of the assigned value.</p>",
        SerializedName = @"noDevice",
        PossibleTypes = new [] { typeof(string) })]
        string NoDevice { get; set; }
        /// <summary>
        /// <p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance
        /// type with 2 available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>.
        /// The number of available instance store volumes depends on the instance type. After you connect to the instance, you must
        /// mount the volume.</p> <p>NVMe instance store volumes are automatically enumerated and assigned a device name. Including
        /// them in your block device mapping has no effect.</p> <p>Constraints: For M3 instances, you must specify instance store
        /// volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes
        /// specified in the block device mapping for the AMI.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>",
        SerializedName = @"virtualName",
        PossibleTypes = new [] { typeof(string) })]
        string VirtualName { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType? VolumeTypeValue { get; set; }

    }
    /// Definition of BlockDeviceMapping
    internal partial interface IBlockDeviceMappingInternal

    {
        /// <summary>
        /// <p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
        /// </summary>
        string DeviceName { get; set; }
        /// <summary>
        /// <p>Parameters used to automatically set up EBS volumes when the instance is launched.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDevice Eb { get; set; }
        /// <summary>
        /// <p>Indicates whether the EBS volume is deleted on instance termination. For more information, see <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination'>Preserving
        /// Amazon EBS volumes on instance termination</a> in the <i>Amazon EC2 User Guide</i>.</p>
        /// </summary>
        bool? EbDeleteOnTermination { get; set; }
        /// <summary>
        /// <p>Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The
        /// effect of setting the encryption state to <code>true</code> depends on the volume origin (new or from a snapshot), starting
        /// encryption state, ownership, and whether encryption by default is enabled. For more information, see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html#encryption-parameters'>Amazon
        /// EBS encryption</a> in the <i>Amazon EBS User Guide</i>.</p> <p>In no case can you remove encryption from an encrypted
        /// volume.</p> <p>Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information,
        /// see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption-requirements.html#ebs-encryption_supported_instances'>Supported
        /// instance types</a>.</p> <p>This parameter is not returned by <a>DescribeImageAttribute</a>.</p> <p>For <a>CreateImage</a>
        /// and <a>RegisterImage</a>, whether you can include this parameter, and the allowed values differ depending on the type
        /// of block device mapping you are creating.</p> <ul> <li> <p>If you are creating a block device mapping for a <b>new (empty)
        /// volume</b>, you can include this parameter, and specify either <code>true</code> for an encrypted volume, or <code>false</code>
        /// for an unencrypted volume. If you omit this parameter, it defaults to <code>false</code> (unencrypted).</p> </li> <li>
        /// <p>If you are creating a block device mapping from an <b>existing encrypted or unencrypted snapshot</b>, you must omit
        /// this parameter. If you include this parameter, the request will fail, regardless of the value that you specify.</p> </li>
        /// <li> <p>If you are creating a block device mapping from an <b>existing unencrypted volume</b>, you can include this parameter,
        /// but you must specify <code>false</code>. If you specify <code>true</code>, the request will fail. In this case, we recommend
        /// that you omit the parameter.</p> </li> <li> <p>If you are creating a block device mapping from an <b>existing encrypted
        /// volume</b>, you can include this parameter, and specify either <code>true</code> or <code>false</code>. However, if you
        /// specify <code>false</code>, the parameter is ignored and the block device mapping is always encrypted. In this case, we
        /// recommend that you omit the parameter.</p> </li> </ul>
        /// </summary>
        bool? EbEncrypted { get; set; }
        /// <summary>
        /// <p>The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes,
        /// this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents
        /// the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.</p> <p>The
        /// following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000 - 16,000 IOPS</p> </li>
        /// <li> <p> <code>io1</code>: 100 - 64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100 - 256,000 IOPS</p> </li> </ul> <p>For
        /// <code>io2</code> volumes, you can achieve up to 256,000 IOPS on <a href='https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances'>instances
        /// built on the Nitro System</a>. On other instances, you can achieve performance up to 32,000 IOPS.</p> <p>This parameter
        /// is required for <code>io1</code> and <code>io2</code> volumes. The default for <code>gp3</code> volumes is 3,000 IOPS.</p>
        /// </summary>
        int? EbIop { get; set; }
        /// <summary>
        /// <p>Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.</p>
        /// <p>This parameter is only supported on <code>BlockDeviceMapping</code> objects called by <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html'>RunInstances</a>,
        /// <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html'>RequestSpotFleet</a>, and <a
        /// href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html'>RequestSpotInstances</a>.</p>
        /// </summary>
        string EbKmsKeyId { get; set; }
        /// <summary>
        /// <p>The ARN of the Outpost on which the snapshot is stored.</p> <p>This parameter is not supported when using <a href='https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html'>CreateImage</a>.</p>
        /// </summary>
        string EbOutpostArn { get; set; }
        /// <summary><p>The ID of the snapshot.</p></summary>
        string EbSnapshotId { get; set; }
        /// <summary>
        /// <p>The throughput that the volume supports, in MiB/s.</p> <p>This parameter is valid only for <code>gp3</code> volumes.</p>
        /// <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>
        /// </summary>
        int? EbThroughput { get; set; }
        /// <summary>
        /// <p>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot,
        /// the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.</p>
        /// <p>The following are the supported sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>:
        /// 1 - 16,384 GiB</p> </li> <li> <p> <code>io1</code>: 4 - 16,384 GiB</p> </li> <li> <p> <code>io2</code>: 4 - 65,536 GiB</p>
        /// </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125 - 16,384 GiB</p> </li> <li> <p> <code>standard</code>: 1 - 1024
        /// GiB</p> </li> </ul>
        /// </summary>
        int? EbVolumeSize { get; set; }
        /// <summary>
        /// <p>The volume type. For more information, see <a href='https://docs.aws.amazon.com/ebs/latest/userguide/ebs-volume-types.html'>Amazon
        /// EBS volume types</a> in the <i>Amazon EBS User Guide</i>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeTypeEnumValue EbVolumeType { get; set; }
        /// <summary>
        /// <p>To omit the device from the block device mapping, specify an empty string. When this property is specified, the device
        /// is removed from the block device mapping regardless of the assigned value.</p>
        /// </summary>
        string NoDevice { get; set; }
        /// <summary>
        /// <p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance
        /// type with 2 available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>.
        /// The number of available instance store volumes depends on the instance type. After you connect to the instance, you must
        /// mount the volume.</p> <p>NVMe instance store volumes are automatically enumerated and assigned a device name. Including
        /// them in your block device mapping has no effect.</p> <p>Constraints: For M3 instances, you must specify instance store
        /// volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes
        /// specified in the block device mapping for the AMI.</p>
        /// </summary>
        string VirtualName { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType? VolumeTypeValue { get; set; }

    }
}