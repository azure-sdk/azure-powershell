// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsAutoScalingAutoScalingGroup</summary>
    public partial class AwsAutoScalingGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAutoScalingGroupProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAutoScalingGroupPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AutoScalingGroupName" /> property.</summary>
        private string _autoScalingGroupName;

        /// <summary>
        /// The name of the Auto Scaling group. This name must be unique per Region per account. The name can contain any ASCII character
        /// 33 to 126 including most punctuation characters, digits, and upper and lowercased letters. You cannot use a colon (:)
        /// in the name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AutoScalingGroupName { get => this._autoScalingGroupName; set => this._autoScalingGroupName = value; }

        /// <summary>Backing field for <see cref="AvailabilityZone" /> property.</summary>
        private string[] _availabilityZone;

        /// <summary>
        /// A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default
        /// VPC subnet in each Availability Zone when not using the ``VPCZoneIdentifier`` property, or for attaching a network interface
        /// when an existing network interface ID is specified in a launch template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] AvailabilityZone { get => this._availabilityZone; set => this._availabilityZone = value; }

        /// <summary>Backing field for <see cref="CapacityRebalance" /> property.</summary>
        private bool? _capacityRebalance;

        /// <summary>
        /// Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity
        /// Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance
        /// is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information,
        /// see [Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html)
        /// in the in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? CapacityRebalance { get => this._capacityRebalance; set => this._capacityRebalance = value; }

        /// <summary>Backing field for <see cref="Context" /> property.</summary>
        private string _context;

        /// <summary>Reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Context { get => this._context; set => this._context = value; }

        /// <summary>Backing field for <see cref="Cooldown" /> property.</summary>
        private string _cooldown;

        /// <summary>
        /// *Only needed if you use simple scaling policies.* The amount of time, in seconds, between one scaling activity ending
        /// and another one starting due to simple scaling policies. For more information, see [Scaling cooldowns for Amazon EC2 Auto
        /// Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html) in the *Amazon EC2 Auto Scaling User Guide*.
        /// Default: ``300`` seconds
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Cooldown { get => this._cooldown; set => this._cooldown = value; }

        /// <summary>Backing field for <see cref="DefaultInstanceWarmup" /> property.</summary>
        private int? _defaultInstanceWarmup;

        /// <summary>
        /// The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption
        /// to become stable after it enters the ``InService`` state. During an instance refresh, Amazon EC2 Auto Scaling waits for
        /// the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling
        /// also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon
        /// CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see [Set the
        /// default instance warmup for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. To manage various warm-up settings at the group level, we recommend that
        /// you set the default instance warmup, *even if it is set to 0 seconds*. To remove a value that you previously set, include
        /// the property but specify ``-1`` for the value. However, we strongly recommend keeping the default instance warmup enabled
        /// by specifying a value of ``0`` or other nominal value. Default: None
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? DefaultInstanceWarmup { get => this._defaultInstanceWarmup; set => this._defaultInstanceWarmup = value; }

        /// <summary>Backing field for <see cref="DesiredCapacity" /> property.</summary>
        private string _desiredCapacity;

        /// <summary>
        /// The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it
        /// attempts to maintain. It can scale beyond this capacity if you configure automatic scaling. The number must be greater
        /// than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not
        /// specify a desired capacity when creating the stack, the default is the minimum size of the group. CloudFormation marks
        /// the Auto Scaling group as successful (by setting its status to CREATE_COMPLETE) when the desired capacity is reached.
        /// However, if a maximum Spot price is set in the launch template or launch configuration that you specified, then desired
        /// capacity is not used as a criteria for success. Whether your request is fulfilled depends on Spot Instance capacity and
        /// your maximum price.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DesiredCapacity { get => this._desiredCapacity; set => this._desiredCapacity = value; }

        /// <summary>Backing field for <see cref="DesiredCapacityType" /> property.</summary>
        private string _desiredCapacityType;

        /// <summary>
        /// The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports ``DesiredCapacityType``
        /// for attribute-based instance type selection only. For more information, see [Creating an Auto Scaling group using attribute-based
        /// instance type selection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. By default, Amazon EC2 Auto Scaling specifies ``units``, which translates
        /// into number of instances. Valid values: ``units`` | ``vcpu`` | ``memory-mib``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DesiredCapacityType { get => this._desiredCapacityType; set => this._desiredCapacityType = value; }

        /// <summary>Backing field for <see cref="HealthCheckGracePeriod" /> property.</summary>
        private int? _healthCheckGracePeriod;

        /// <summary>
        /// The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance
        /// that has come into service and marking it unhealthy due to a failed health check. This is useful if your instances do
        /// not immediately pass their health checks after they enter the ``InService`` state. For more information, see [Set the
        /// health check grace period for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. Default: ``0`` seconds
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? HealthCheckGracePeriod { get => this._healthCheckGracePeriod; set => this._healthCheckGracePeriod = value; }

        /// <summary>Backing field for <see cref="HealthCheckType" /> property.</summary>
        private string _healthCheckType;

        /// <summary>
        /// A comma-separated value string of one or more health check types. The valid values are ``EC2``, ``ELB``, and ``VPC_LATTICE``.
        /// ``EC2`` is the default health check and cannot be disabled. For more information, see [Health checks for Auto Scaling
        /// instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html) in the *Amazon EC2 Auto Scaling User
        /// Guide*. Only specify ``EC2`` if you must clear a value that was previously set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string HealthCheckType { get => this._healthCheckType; set => this._healthCheckType = value; }

        /// <summary>
        /// The allocation strategy to apply to your On-Demand Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + lowest-price Uses price to
        /// determine which instance types are the highest priority, launching the lowest priced instance types within an Availability
        /// Zone first. This is the default value for Auto Scaling groups that specify InstanceRequirements. + prioritized You set
        /// the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the
        /// list). Amazon EC2 Auto Scaling launches your highest priority instance types first. If all your On-Demand capacity cannot
        /// be fulfilled using your highest priority instance type, then Amazon EC2 Auto Scaling launches the remaining capacity using
        /// the second priority instance type, and so on. This is the default value for Auto Scaling groups that don't specify InstanceRequirements
        /// and cannot be used for groups that do.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string InstanceDistributionOnDemandAllocationStrategy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionOnDemandAllocationStrategy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionOnDemandAllocationStrategy = value ?? null; }

        /// <summary>
        /// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion
        /// is launched first as your group scales. This number has the same unit of measurement as the group's desired capacity.
        /// If you change the default unit of measurement (number of instances) by specifying weighted capacity values in your launch
        /// template overrides list, or by changing the default desired capacity type setting of the group, you must specify this
        /// number using the same unit of measurement. Default: 0 An update to this setting means a gradual replacement of instances
        /// to adjust the current On-Demand Instance levels. When replacing instances, Amazon EC2 Auto Scaling launches new instances
        /// before terminating the previous ones.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? InstanceDistributionOnDemandBaseCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionOnDemandBaseCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionOnDemandBaseCapacity = value ?? default(int); }

        /// <summary>
        /// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond ``OnDemandBaseCapacity``.
        /// Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances). If set to 100, only On-Demand
        /// Instances are used. Default: 100 An update to this setting means a gradual replacement of instances to adjust the current
        /// On-Demand and Spot Instance levels for your additional capacity higher than the base capacity. When replacing instances,
        /// Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? InstanceDistributionOnDemandPercentageAboveBaseCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionOnDemandPercentageAboveBaseCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionOnDemandPercentageAboveBaseCapacity = value ?? default(int); }

        /// <summary>
        /// The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + capacity-optimized Requests
        /// Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest
        /// risk of interruption. To give certain instance types a higher chance of launching first, use capacity-optimized-prioritized.
        /// + capacity-optimized-prioritized You set the order of instance types for the launch template overrides from highest to
        /// lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best
        /// effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to prioritized, the
        /// same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify
        /// InstanceRequirements. + lowest-price Requests Spot Instances using the lowest priced pools within an Availability Zone,
        /// across the number of Spot pools that you specify for the SpotInstancePools property. To ensure that your desired capacity
        /// is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption
        /// rates because this strategy only considers instance price and not available capacity. + price-capacity-optimized (recommended)
        /// The price and capacity optimized allocation strategy looks at both price and capacity to select the Spot Instance pools
        /// that are the least likely to be interrupted and have the lowest possible price.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string InstanceDistributionSpotAllocationStrategy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionSpotAllocationStrategy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionSpotAllocationStrategy = value ?? null; }

        /// <summary>
        /// The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the
        /// different instance types in the overrides. Valid only when the ``SpotAllocationStrategy`` is ``lowest-price``. Value must
        /// be in the range of 1–20. Default: 2
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? InstanceDistributionSpotInstancePool { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionSpotInstancePool; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionSpotInstancePool = value ?? default(int); }

        /// <summary>
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. If your maximum price is lower than the
        /// Spot price for the instance types that you selected, your Spot Instances are not launched. We do not recommend specifying
        /// a maximum price because it can lead to increased interruptions. When Spot Instances launch, you pay the current Spot price.
        /// To remove a maximum price that you previously set, include the property but specify an empty string ('') for the value.
        /// If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify one. Valid
        /// Range: Minimum value of 0.001
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string InstanceDistributionSpotMaxPrice { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionSpotMaxPrice; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstanceDistributionSpotMaxPrice = value ?? null; }

        /// <summary>Backing field for <see cref="InstanceId" /> property.</summary>
        private string _instanceId;

        /// <summary>
        /// The ID of the instance used to base the launch configuration on. For more information, see [Create an Auto Scaling group
        /// using an EC2 instance](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html) in the *Amazon
        /// EC2 Auto Scaling User Guide*. If you specify ``LaunchTemplate``, ``MixedInstancesPolicy``, or ``LaunchConfigurationName``,
        /// don't specify ``InstanceId``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string InstanceId { get => this._instanceId; set => this._instanceId = value; }

        /// <summary>Backing field for <see cref="InstanceMaintenancePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenancePolicy _instanceMaintenancePolicy;

        /// <summary>
        /// An instance maintenance policy. For more information, see [Set instance maintenance policy](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-maintenance-policy.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. ``InstanceMaintenancePolicy`` is a property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html)
        /// resource. For more information, see [Instance maintenance policies](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-maintenance-policy.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenancePolicy InstanceMaintenancePolicy { get => (this._instanceMaintenancePolicy = this._instanceMaintenancePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMaintenancePolicy()); set => this._instanceMaintenancePolicy = value; }

        /// <summary>
        /// Specifies the upper threshold as a percentage of the desired capacity of the Auto Scaling group. It represents the maximum
        /// percentage of the group that can be in service and healthy, or pending, to support your workload when replacing instances.
        /// Value range is 100 to 200. To clear a previously set value, specify a value of ``-1``. Both ``MinHealthyPercentage`` and
        /// ``MaxHealthyPercentage`` must be specified, and the difference between them cannot be greater than 100. A large range
        /// increases the number of instances that can be replaced at the same time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? InstanceMaintenancePolicyMaxHealthyPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenancePolicyInternal)InstanceMaintenancePolicy).MaxHealthyPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenancePolicyInternal)InstanceMaintenancePolicy).MaxHealthyPercentage = value ?? default(int); }

        /// <summary>
        /// Specifies the lower threshold as a percentage of the desired capacity of the Auto Scaling group. It represents the minimum
        /// percentage of the group to keep in service, healthy, and ready to use to support your workload when replacing instances.
        /// Value range is 0 to 100. To clear a previously set value, specify a value of ``-1``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? InstanceMaintenancePolicyMinHealthyPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenancePolicyInternal)InstanceMaintenancePolicy).MinHealthyPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenancePolicyInternal)InstanceMaintenancePolicy).MinHealthyPercentage = value ?? default(int); }

        /// <summary>Backing field for <see cref="LaunchConfigurationName" /> property.</summary>
        private string _launchConfigurationName;

        /// <summary>
        /// The name of the launch configuration to use to launch instances. Required only if you don't specify ``LaunchTemplate``,
        /// ``MixedInstancesPolicy``, or ``InstanceId``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string LaunchConfigurationName { get => this._launchConfigurationName; set => this._launchConfigurationName = value; }

        /// <summary>Backing field for <see cref="LaunchTemplate" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecification _launchTemplate;

        /// <summary>
        /// Information used to specify the launch template and version to use to launch instances. You can alternatively associate
        /// a launch template to the Auto Scaling group by specifying a ``MixedInstancesPolicy``. For more information about creating
        /// launch templates, see [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. If you omit this property, you must specify ``MixedInstancesPolicy``, ``LaunchConfigurationName``,
        /// or ``InstanceId``. Specifies a launch template to use when provisioning EC2 instances for an Auto Scaling group. You must
        /// specify the following: + The ID or the name of the launch template, but not both. + The version of the launch template.
        /// ``LaunchTemplateSpecification`` is property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html)
        /// resource. It is also a property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplate.html)
        /// and [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
        /// property types. For information about creating a launch template, see [AWS::EC2::LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html)
        /// and [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. For examples of launch templates, see [Auto scaling template snippets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-autoscaling.html)
        /// and the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#aws-resource-ec2-launchtemplate--examples)
        /// section in the ``AWS::EC2::LaunchTemplate`` resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecification LaunchTemplate { get => (this._launchTemplate = this._launchTemplate ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LaunchTemplateSpecification()); set => this._launchTemplate = value; }

        /// <summary>
        /// The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationInternal)LaunchTemplate).LaunchTemplateId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationInternal)LaunchTemplate).LaunchTemplateId = value ?? null; }

        /// <summary>
        /// The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationInternal)LaunchTemplate).LaunchTemplateName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationInternal)LaunchTemplate).LaunchTemplateName = value ?? null; }

        /// <summary>
        /// Any properties that you specify override the same properties in the launch template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateOverrides[] LaunchTemplateOverride { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplateOverride; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplateOverride = value ?? null /* arrayOf */; }

        /// <summary>
        /// The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateSpecificationLaunchTemplateId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplateSpecificationLaunchTemplateId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplateSpecificationLaunchTemplateId = value ?? null; }

        /// <summary>
        /// The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateSpecificationLaunchTemplateName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplateSpecificationLaunchTemplateName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplateSpecificationLaunchTemplateName = value ?? null; }

        /// <summary>
        /// The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not
        /// supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic
        /// function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).
        /// For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples)
        /// section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateSpecificationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplateSpecificationVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplateSpecificationVersion = value ?? null; }

        /// <summary>
        /// The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not
        /// supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic
        /// function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).
        /// For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples)
        /// section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationInternal)LaunchTemplate).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecificationInternal)LaunchTemplate).Version = value ?? null; }

        /// <summary>Backing field for <see cref="LifecycleHookSpecificationList" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecycleHookSpecification[] _lifecycleHookSpecificationList;

        /// <summary>
        /// One or more lifecycle hooks to add to the Auto Scaling group before instances are launched.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecycleHookSpecification[] LifecycleHookSpecificationList { get => this._lifecycleHookSpecificationList; set => this._lifecycleHookSpecificationList = value; }

        /// <summary>Backing field for <see cref="LoadBalancerName" /> property.</summary>
        private string[] _loadBalancerName;

        /// <summary>
        /// A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers, Network Load
        /// Balancers, and Gateway Load Balancers, specify the ``TargetGroupARNs`` property instead.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] LoadBalancerName { get => this._loadBalancerName; set => this._loadBalancerName = value; }

        /// <summary>Backing field for <see cref="MaxInstanceLifetime" /> property.</summary>
        private int? _maxInstanceLifetime;

        /// <summary>
        /// The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value
        /// must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see [Replacing Auto
        /// Scaling instances based on maximum instance lifetime](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? MaxInstanceLifetime { get => this._maxInstanceLifetime; set => this._maxInstanceLifetime = value; }

        /// <summary>Backing field for <see cref="MaxSize" /> property.</summary>
        private string _maxSize;

        /// <summary>
        /// The maximum size of the group. With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may
        /// need to go above ``MaxSize`` to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go
        /// above ``MaxSize`` by more than your largest instance weight (weights that define how many units each instance contributes
        /// to the desired capacity of the group).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string MaxSize { get => this._maxSize; set => this._maxSize = value; }

        /// <summary>Backing field for <see cref="MetricsCollection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricsCollection[] _metricsCollection;

        /// <summary>
        /// Enables the monitoring of group metrics of an Auto Scaling group. By default, these metrics are disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricsCollection[] MetricsCollection { get => this._metricsCollection; set => this._metricsCollection = value; }

        /// <summary>Internal Acessors for InstanceMaintenancePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenancePolicy Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAutoScalingGroupPropertiesInternal.InstanceMaintenancePolicy { get => (this._instanceMaintenancePolicy = this._instanceMaintenancePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceMaintenancePolicy()); set { {_instanceMaintenancePolicy = value;} } }

        /// <summary>Internal Acessors for LaunchTemplate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAutoScalingGroupPropertiesInternal.LaunchTemplate { get => (this._launchTemplate = this._launchTemplate ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LaunchTemplateSpecification()); set { {_launchTemplate = value;} } }

        /// <summary>Internal Acessors for LaunchTemplateSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAutoScalingGroupPropertiesInternal.LaunchTemplateSpecification { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplateSpecification; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplateSpecification = value; }

        /// <summary>Internal Acessors for MixedInstancePolicyInstancesDistribution</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistribution Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAutoScalingGroupPropertiesInternal.MixedInstancePolicyInstancesDistribution { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstancesDistribution; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).InstancesDistribution = value; }

        /// <summary>Internal Acessors for MixedInstancePolicyLaunchTemplate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplate Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAutoScalingGroupPropertiesInternal.MixedInstancePolicyLaunchTemplate { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplate; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal)MixedInstancesPolicy).LaunchTemplate = value; }

        /// <summary>Internal Acessors for MixedInstancesPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicy Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAutoScalingGroupPropertiesInternal.MixedInstancesPolicy { get => (this._mixedInstancesPolicy = this._mixedInstancesPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MixedInstancesPolicy()); set { {_mixedInstancesPolicy = value;} } }

        /// <summary>Internal Acessors for NotificationConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsAutoScalingGroupPropertiesInternal.NotificationConfiguration { get => (this._notificationConfiguration = this._notificationConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NotificationConfiguration()); set { {_notificationConfiguration = value;} } }

        /// <summary>Backing field for <see cref="MinSize" /> property.</summary>
        private string _minSize;

        /// <summary>The minimum size of the group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string MinSize { get => this._minSize; set => this._minSize = value; }

        /// <summary>Backing field for <see cref="MixedInstancesPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicy _mixedInstancesPolicy;

        /// <summary>
        /// An embedded object that specifies a mixed instances policy. The policy includes properties that not only define the distribution
        /// of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances (optional), and how the Auto Scaling
        /// group allocates instance types to fulfill On-Demand and Spot capacities, but also the properties that specify the instance
        /// configuration information—the launch template and instance types. The policy can also include a weight for each instance
        /// type and different launch templates for individual instance types. For more information, see [Auto Scaling groups with
        /// multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. Use this structure to launch multiple instance types and On-Demand Instances
        /// and Spot Instances within a single Auto Scaling group. A mixed instances policy contains information that Amazon EC2 Auto
        /// Scaling can use to launch instances and help optimize your costs. For more information, see [Auto Scaling groups with
        /// multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. You can create a mixed instances policy for new and existing Auto Scaling
        /// groups. You must use a launch template to configure the policy. You cannot use a launch configuration. There are key differences
        /// between Spot Instances and On-Demand Instances: + The price for Spot Instances varies based on demand + Amazon EC2 can
        /// terminate an individual Spot Instance as the availability of, or price for, Spot Instances changes When a Spot Instance
        /// is terminated, Amazon EC2 Auto Scaling group attempts to launch a replacement instance to maintain the desired capacity
        /// for the group. ``MixedInstancesPolicy`` is a property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html)
        /// resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicy MixedInstancesPolicy { get => (this._mixedInstancesPolicy = this._mixedInstancesPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MixedInstancesPolicy()); set => this._mixedInstancesPolicy = value; }

        /// <summary>Backing field for <see cref="NewInstancesProtectedFromScaleIn" /> property.</summary>
        private bool? _newInstancesProtectedFromScaleIn;

        /// <summary>
        /// Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.
        /// For more information about preventing instances from terminating on scale in, see [Using instance scale-in protection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? NewInstancesProtectedFromScaleIn { get => this._newInstancesProtectedFromScaleIn; set => this._newInstancesProtectedFromScaleIn = value; }

        /// <summary>Backing field for <see cref="NotificationConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfiguration _notificationConfiguration;

        /// <summary>
        /// A structure that specifies an Amazon SNS notification configuration for the ``NotificationConfigurations`` property of
        /// the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html)
        /// resource. For an example template snippet, see [Auto scaling template snippets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-autoscaling.html).
        /// For more information, see [Get Amazon SNS notifications when your Auto Scaling group scales](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfiguration NotificationConfiguration { get => (this._notificationConfiguration = this._notificationConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NotificationConfiguration()); set => this._notificationConfiguration = value; }

        /// <summary>
        /// A list of event types that send a notification. Event types can include any of the following types. *Allowed values*:
        /// + ``autoscaling:EC2_INSTANCE_LAUNCH`` + ``autoscaling:EC2_INSTANCE_LAUNCH_ERROR`` + ``autoscaling:EC2_INSTANCE_TERMINATE``
        /// + ``autoscaling:EC2_INSTANCE_TERMINATE_ERROR`` + ``autoscaling:TEST_NOTIFICATION``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] NotificationConfigurationNotificationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfigurationInternal)NotificationConfiguration).NotificationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfigurationInternal)NotificationConfiguration).NotificationType = value ?? null /* arrayOf */; }

        /// <summary>The Amazon Resource Name (ARN) of the Amazon SNS topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string NotificationConfigurationTopicArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfigurationInternal)NotificationConfiguration).TopicArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfigurationInternal)NotificationConfiguration).TopicArn = value ?? null; }

        /// <summary>Backing field for <see cref="NotificationConfigurations" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfiguration[] _notificationConfigurations;

        /// <summary>
        /// Configures an Auto Scaling group to send notifications when specified events take place.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfiguration[] NotificationConfigurations { get => this._notificationConfigurations; set => this._notificationConfigurations = value; }

        /// <summary>Backing field for <see cref="PlacementGroup" /> property.</summary>
        private string _placementGroup;

        /// <summary>
        /// The name of the placement group into which to launch your instances. For more information, see [Placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html)
        /// in the *Amazon EC2 User Guide for Linux Instances*. A *cluster* placement group is a logical grouping of instances within
        /// a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PlacementGroup { get => this._placementGroup; set => this._placementGroup = value; }

        /// <summary>Backing field for <see cref="ServiceLinkedRoleArn" /> property.</summary>
        private string _serviceLinkedRoleArn;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS service on
        /// your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named ``AWSServiceRoleForAutoScaling``, which
        /// it creates if it does not exist. For more information, see [Service-linked roles](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ServiceLinkedRoleArn { get => this._serviceLinkedRoleArn; set => this._serviceLinkedRoleArn = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagProperty[] _tag;

        /// <summary>
        /// One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches.
        /// Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template
        /// but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling
        /// group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group.
        /// For more information, see [Tag Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagProperty[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="TargetGroupArN" /> property.</summary>
        private string[] _targetGroupArN;

        /// <summary>
        /// The Amazon Resource Names (ARN) of the Elastic Load Balancing target groups to associate with the Auto Scaling group.
        /// Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests
        /// to one or more registered targets. For more information, see [Use Elastic Load Balancing to distribute traffic across
        /// the instances in your Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] TargetGroupArN { get => this._targetGroupArN; set => this._targetGroupArN = value; }

        /// <summary>Backing field for <see cref="TerminationPolicy" /> property.</summary>
        private string[] _terminationPolicy;

        /// <summary>
        /// A policy or a list of policies that are used to select the instance to terminate. These policies are executed in the order
        /// that you list them. For more information, see [Work with Amazon EC2 Auto Scaling termination policies](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. Valid values: ``Default`` | ``AllocationStrategy`` | ``ClosestToNextInstanceHour``
        /// | ``NewestInstance`` | ``OldestInstance`` | ``OldestLaunchConfiguration`` | ``OldestLaunchTemplate`` | ``arn:aws:lambda:region:account-id:function:my-function:my-alias``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] TerminationPolicy { get => this._terminationPolicy; set => this._terminationPolicy = value; }

        /// <summary>Backing field for <see cref="VpcZoneIdentifier" /> property.</summary>
        private string[] _vpcZoneIdentifier;

        /// <summary>
        /// A list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created. If this
        /// resource specifies public subnets and is also in a VPC that is defined in the same stack template, you must use the [DependsOn
        /// attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency
        /// on the [VPC-gateway attachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html).
        /// When you update ``VPCZoneIdentifier``, this retains the same Auto Scaling group and replaces old instances with new ones,
        /// according to the specified subnets. You can optionally specify how CloudFormation handles these updates by using an [UpdatePolicy
        /// attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html). Required to
        /// launch instances into a nondefault VPC. If you specify ``VPCZoneIdentifier`` with ``AvailabilityZones``, the subnets that
        /// you specify for this property must reside in those Availability Zones.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] VpcZoneIdentifier { get => this._vpcZoneIdentifier; set => this._vpcZoneIdentifier = value; }

        /// <summary>Creates an new <see cref="AwsAutoScalingGroupProperties" /> instance.</summary>
        public AwsAutoScalingGroupProperties()
        {

        }
    }
    /// Definition of awsAutoScalingAutoScalingGroup
    public partial interface IAwsAutoScalingGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the Auto Scaling group. This name must be unique per Region per account. The name can contain any ASCII character
        /// 33 to 126 including most punctuation characters, digits, and upper and lowercased letters. You cannot use a colon (:)
        /// in the name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the Auto Scaling group. This name must be unique per Region per account. The name can contain any ASCII character 33 to 126 including most punctuation characters, digits, and upper and lowercased letters.  You cannot use a colon (:) in the name.",
        SerializedName = @"autoScalingGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalingGroupName { get; set; }
        /// <summary>
        /// A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default
        /// VPC subnet in each Availability Zone when not using the ``VPCZoneIdentifier`` property, or for attaching a network interface
        /// when an existing network interface ID is specified in a launch template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the ``VPCZoneIdentifier`` property, or for attaching a network interface when an existing network interface ID is specified in a launch template.",
        SerializedName = @"availabilityZones",
        PossibleTypes = new [] { typeof(string) })]
        string[] AvailabilityZone { get; set; }
        /// <summary>
        /// Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity
        /// Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance
        /// is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information,
        /// see [Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html)
        /// in the in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information, see [Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html) in the in the *Amazon EC2 Auto Scaling User Guide*.",
        SerializedName = @"capacityRebalance",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CapacityRebalance { get; set; }
        /// <summary>Reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Reserved.",
        SerializedName = @"context",
        PossibleTypes = new [] { typeof(string) })]
        string Context { get; set; }
        /// <summary>
        /// *Only needed if you use simple scaling policies.* The amount of time, in seconds, between one scaling activity ending
        /// and another one starting due to simple scaling policies. For more information, see [Scaling cooldowns for Amazon EC2 Auto
        /// Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html) in the *Amazon EC2 Auto Scaling User Guide*.
        /// Default: ``300`` seconds
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"*Only needed if you use simple scaling policies.*  The amount of time, in seconds, between one scaling activity ending and another one starting due to simple scaling policies. For more information, see [Scaling cooldowns for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html) in the *Amazon EC2 Auto Scaling User Guide*. Default: ``300`` seconds",
        SerializedName = @"cooldown",
        PossibleTypes = new [] { typeof(string) })]
        string Cooldown { get; set; }
        /// <summary>
        /// The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption
        /// to become stable after it enters the ``InService`` state. During an instance refresh, Amazon EC2 Auto Scaling waits for
        /// the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling
        /// also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon
        /// CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see [Set the
        /// default instance warmup for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. To manage various warm-up settings at the group level, we recommend that
        /// you set the default instance warmup, *even if it is set to 0 seconds*. To remove a value that you previously set, include
        /// the property but specify ``-1`` for the value. However, we strongly recommend keeping the default instance warmup enabled
        /// by specifying a value of ``0`` or other nominal value. Default: None
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption to become stable after it enters the ``InService`` state.  During an instance refresh, Amazon EC2 Auto Scaling waits for the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see [Set the default instance warmup for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html) in the *Amazon EC2 Auto Scaling User Guide*.  To manage various warm-up settings at the group level, we recommend that you set the default instance warmup, *even if it is set to 0 seconds*. To remove a value that you previously set, include the property but specify ``-1`` for the value. However, we strongly recommend keeping the default instance warmup enabled by specifying a value of ``0`` or other nominal value.  Default: None",
        SerializedName = @"defaultInstanceWarmup",
        PossibleTypes = new [] { typeof(int) })]
        int? DefaultInstanceWarmup { get; set; }
        /// <summary>
        /// The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it
        /// attempts to maintain. It can scale beyond this capacity if you configure automatic scaling. The number must be greater
        /// than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not
        /// specify a desired capacity when creating the stack, the default is the minimum size of the group. CloudFormation marks
        /// the Auto Scaling group as successful (by setting its status to CREATE_COMPLETE) when the desired capacity is reached.
        /// However, if a maximum Spot price is set in the launch template or launch configuration that you specified, then desired
        /// capacity is not used as a criteria for success. Whether your request is fulfilled depends on Spot Instance capacity and
        /// your maximum price.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain. It can scale beyond this capacity if you configure automatic scaling. The number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity when creating the stack, the default is the minimum size of the group. CloudFormation marks the Auto Scaling group as successful (by setting its status to CREATE_COMPLETE) when the desired capacity is reached. However, if a maximum Spot price is set in the launch template or launch configuration that you specified, then desired capacity is not used as a criteria for success. Whether your request is fulfilled depends on Spot Instance capacity and your maximum price.",
        SerializedName = @"desiredCapacity",
        PossibleTypes = new [] { typeof(string) })]
        string DesiredCapacity { get; set; }
        /// <summary>
        /// The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports ``DesiredCapacityType``
        /// for attribute-based instance type selection only. For more information, see [Creating an Auto Scaling group using attribute-based
        /// instance type selection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. By default, Amazon EC2 Auto Scaling specifies ``units``, which translates
        /// into number of instances. Valid values: ``units`` | ``vcpu`` | ``memory-mib``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports ``DesiredCapacityType`` for attribute-based instance type selection only. For more information, see [Creating an Auto Scaling group using attribute-based instance type selection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html) in the *Amazon EC2 Auto Scaling User Guide*. By default, Amazon EC2 Auto Scaling specifies ``units``, which translates into number of instances. Valid values: ``units`` | ``vcpu`` | ``memory-mib``",
        SerializedName = @"desiredCapacityType",
        PossibleTypes = new [] { typeof(string) })]
        string DesiredCapacityType { get; set; }
        /// <summary>
        /// The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance
        /// that has come into service and marking it unhealthy due to a failed health check. This is useful if your instances do
        /// not immediately pass their health checks after they enter the ``InService`` state. For more information, see [Set the
        /// health check grace period for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. Default: ``0`` seconds
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service and marking it unhealthy due to a failed health check. This is useful if your instances do not immediately pass their health checks after they enter the ``InService`` state. For more information, see [Set the health check grace period for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html) in the *Amazon EC2 Auto Scaling User Guide*. Default: ``0`` seconds",
        SerializedName = @"healthCheckGracePeriod",
        PossibleTypes = new [] { typeof(int) })]
        int? HealthCheckGracePeriod { get; set; }
        /// <summary>
        /// A comma-separated value string of one or more health check types. The valid values are ``EC2``, ``ELB``, and ``VPC_LATTICE``.
        /// ``EC2`` is the default health check and cannot be disabled. For more information, see [Health checks for Auto Scaling
        /// instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html) in the *Amazon EC2 Auto Scaling User
        /// Guide*. Only specify ``EC2`` if you must clear a value that was previously set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A comma-separated value string of one or more health check types. The valid values are ``EC2``, ``ELB``, and ``VPC_LATTICE``. ``EC2`` is the default health check and cannot be disabled. For more information, see [Health checks for Auto Scaling instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html) in the *Amazon EC2 Auto Scaling User Guide*. Only specify ``EC2`` if you must clear a value that was previously set.",
        SerializedName = @"healthCheckType",
        PossibleTypes = new [] { typeof(string) })]
        string HealthCheckType { get; set; }
        /// <summary>
        /// The allocation strategy to apply to your On-Demand Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + lowest-price Uses price to
        /// determine which instance types are the highest priority, launching the lowest priced instance types within an Availability
        /// Zone first. This is the default value for Auto Scaling groups that specify InstanceRequirements. + prioritized You set
        /// the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the
        /// list). Amazon EC2 Auto Scaling launches your highest priority instance types first. If all your On-Demand capacity cannot
        /// be fulfilled using your highest priority instance type, then Amazon EC2 Auto Scaling launches the remaining capacity using
        /// the second priority instance type, and so on. This is the default value for Auto Scaling groups that don't specify InstanceRequirements
        /// and cannot be used for groups that do.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The allocation strategy to apply to your On-Demand Instances when they are launched. Possible instance types are determined by the launch template overrides that you specify. The following lists the valid values:  + lowest-price Uses price to determine which instance types are the highest priority, launching the lowest priced instance types within an Availability Zone first. This is the default value for Auto Scaling groups that specify InstanceRequirements. + prioritized You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling launches your highest priority instance types first. If all your On-Demand capacity cannot be fulfilled using your highest priority instance type, then Amazon EC2 Auto Scaling launches the remaining capacity using the second priority instance type, and so on. This is the default value for Auto Scaling groups that don't specify InstanceRequirements and cannot be used for groups that do.",
        SerializedName = @"onDemandAllocationStrategy",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceDistributionOnDemandAllocationStrategy { get; set; }
        /// <summary>
        /// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion
        /// is launched first as your group scales. This number has the same unit of measurement as the group's desired capacity.
        /// If you change the default unit of measurement (number of instances) by specifying weighted capacity values in your launch
        /// template overrides list, or by changing the default desired capacity type setting of the group, you must specify this
        /// number using the same unit of measurement. Default: 0 An update to this setting means a gradual replacement of instances
        /// to adjust the current On-Demand Instance levels. When replacing instances, Amazon EC2 Auto Scaling launches new instances
        /// before terminating the previous ones.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is launched first as your group scales. This number has the same unit of measurement as the group's desired capacity. If you change the default unit of measurement (number of instances) by specifying weighted capacity values in your launch template overrides list, or by changing the default desired capacity type setting of the group, you must specify this number using the same unit of measurement. Default: 0  An update to this setting means a gradual replacement of instances to adjust the current On-Demand Instance levels. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.",
        SerializedName = @"onDemandBaseCapacity",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceDistributionOnDemandBaseCapacity { get; set; }
        /// <summary>
        /// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond ``OnDemandBaseCapacity``.
        /// Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances). If set to 100, only On-Demand
        /// Instances are used. Default: 100 An update to this setting means a gradual replacement of instances to adjust the current
        /// On-Demand and Spot Instance levels for your additional capacity higher than the base capacity. When replacing instances,
        /// Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond ``OnDemandBaseCapacity``. Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances). If set to 100, only On-Demand Instances are used. Default: 100  An update to this setting means a gradual replacement of instances to adjust the current On-Demand and Spot Instance levels for your additional capacity higher than the base capacity. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.",
        SerializedName = @"onDemandPercentageAboveBaseCapacity",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceDistributionOnDemandPercentageAboveBaseCapacity { get; set; }
        /// <summary>
        /// The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + capacity-optimized Requests
        /// Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest
        /// risk of interruption. To give certain instance types a higher chance of launching first, use capacity-optimized-prioritized.
        /// + capacity-optimized-prioritized You set the order of instance types for the launch template overrides from highest to
        /// lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best
        /// effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to prioritized, the
        /// same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify
        /// InstanceRequirements. + lowest-price Requests Spot Instances using the lowest priced pools within an Availability Zone,
        /// across the number of Spot pools that you specify for the SpotInstancePools property. To ensure that your desired capacity
        /// is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption
        /// rates because this strategy only considers instance price and not available capacity. + price-capacity-optimized (recommended)
        /// The price and capacity optimized allocation strategy looks at both price and capacity to select the Spot Instance pools
        /// that are the least likely to be interrupted and have the lowest possible price.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined by the launch template overrides that you specify. The following lists the valid values:  + capacity-optimized Requests Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest risk of interruption. To give certain instance types a higher chance of launching first, use capacity-optimized-prioritized. + capacity-optimized-prioritized You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to prioritized, the same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify InstanceRequirements. + lowest-price Requests Spot Instances using the lowest priced pools within an Availability Zone, across the number of Spot pools that you specify for the SpotInstancePools property. To ensure that your desired capacity is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption rates because this strategy only considers instance price and not available capacity. + price-capacity-optimized (recommended) The price and capacity optimized allocation strategy looks at both price and capacity to select the Spot Instance pools that are the least likely to be interrupted and have the lowest possible price.",
        SerializedName = @"spotAllocationStrategy",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceDistributionSpotAllocationStrategy { get; set; }
        /// <summary>
        /// The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the
        /// different instance types in the overrides. Valid only when the ``SpotAllocationStrategy`` is ``lowest-price``. Value must
        /// be in the range of 1–20. Default: 2
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the different instance types in the overrides. Valid only when the ``SpotAllocationStrategy`` is ``lowest-price``. Value must be in the range of 1–20. Default: 2",
        SerializedName = @"spotInstancePools",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceDistributionSpotInstancePool { get; set; }
        /// <summary>
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. If your maximum price is lower than the
        /// Spot price for the instance types that you selected, your Spot Instances are not launched. We do not recommend specifying
        /// a maximum price because it can lead to increased interruptions. When Spot Instances launch, you pay the current Spot price.
        /// To remove a maximum price that you previously set, include the property but specify an empty string ('') for the value.
        /// If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify one. Valid
        /// Range: Minimum value of 0.001
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum price per unit hour that you are willing to pay for a Spot Instance. If your maximum price is lower than the Spot price for the instance types that you selected, your Spot Instances are not launched. We do not recommend specifying a maximum price because it can lead to increased interruptions. When Spot Instances launch, you pay the current Spot price. To remove a maximum price that you previously set, include the property but specify an empty string ('') for the value.  If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify one.  Valid Range: Minimum value of 0.001",
        SerializedName = @"spotMaxPrice",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceDistributionSpotMaxPrice { get; set; }
        /// <summary>
        /// The ID of the instance used to base the launch configuration on. For more information, see [Create an Auto Scaling group
        /// using an EC2 instance](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html) in the *Amazon
        /// EC2 Auto Scaling User Guide*. If you specify ``LaunchTemplate``, ``MixedInstancesPolicy``, or ``LaunchConfigurationName``,
        /// don't specify ``InstanceId``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the instance used to base the launch configuration on. For more information, see [Create an Auto Scaling group using an EC2 instance](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html) in the *Amazon EC2 Auto Scaling User Guide*. If you specify ``LaunchTemplate``, ``MixedInstancesPolicy``, or ``LaunchConfigurationName``, don't specify ``InstanceId``.",
        SerializedName = @"instanceId",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceId { get; set; }
        /// <summary>
        /// Specifies the upper threshold as a percentage of the desired capacity of the Auto Scaling group. It represents the maximum
        /// percentage of the group that can be in service and healthy, or pending, to support your workload when replacing instances.
        /// Value range is 100 to 200. To clear a previously set value, specify a value of ``-1``. Both ``MinHealthyPercentage`` and
        /// ``MaxHealthyPercentage`` must be specified, and the difference between them cannot be greater than 100. A large range
        /// increases the number of instances that can be replaced at the same time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the upper threshold as a percentage of the desired capacity of the Auto Scaling group. It represents the maximum percentage of the group that can be in service and healthy, or pending, to support your workload when replacing instances. Value range is 100 to 200. To clear a previously set value, specify a value of ``-1``. Both ``MinHealthyPercentage`` and ``MaxHealthyPercentage`` must be specified, and the difference between them cannot be greater than 100. A large range increases the number of instances that can be replaced at the same time.",
        SerializedName = @"maxHealthyPercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceMaintenancePolicyMaxHealthyPercentage { get; set; }
        /// <summary>
        /// Specifies the lower threshold as a percentage of the desired capacity of the Auto Scaling group. It represents the minimum
        /// percentage of the group to keep in service, healthy, and ready to use to support your workload when replacing instances.
        /// Value range is 0 to 100. To clear a previously set value, specify a value of ``-1``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the lower threshold as a percentage of the desired capacity of the Auto Scaling group. It represents the minimum percentage of the group to keep in service, healthy, and ready to use to support your workload when replacing instances. Value range is 0 to 100. To clear a previously set value, specify a value of ``-1``.",
        SerializedName = @"minHealthyPercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceMaintenancePolicyMinHealthyPercentage { get; set; }
        /// <summary>
        /// The name of the launch configuration to use to launch instances. Required only if you don't specify ``LaunchTemplate``,
        /// ``MixedInstancesPolicy``, or ``InstanceId``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the launch configuration to use to launch instances. Required only if you don't specify ``LaunchTemplate``, ``MixedInstancesPolicy``, or ``InstanceId``.",
        SerializedName = @"launchConfigurationName",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchConfigurationName { get; set; }
        /// <summary>
        /// The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.",
        SerializedName = @"launchTemplateId",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateId { get; set; }
        /// <summary>
        /// The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.",
        SerializedName = @"launchTemplateName",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateName { get; set; }
        /// <summary>
        /// Any properties that you specify override the same properties in the launch template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Any properties that you specify override the same properties in the launch template.",
        SerializedName = @"overrides",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateOverrides) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateOverrides[] LaunchTemplateOverride { get; set; }
        /// <summary>
        /// The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.",
        SerializedName = @"launchTemplateId",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateSpecificationLaunchTemplateId { get; set; }
        /// <summary>
        /// The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.",
        SerializedName = @"launchTemplateName",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateSpecificationLaunchTemplateName { get; set; }
        /// <summary>
        /// The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not
        /// supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic
        /// function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).
        /// For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples)
        /// section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).  For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples) section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateSpecificationVersion { get; set; }
        /// <summary>
        /// The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not
        /// supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic
        /// function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).
        /// For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples)
        /// section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).  For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples) section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateVersion { get; set; }
        /// <summary>
        /// One or more lifecycle hooks to add to the Auto Scaling group before instances are launched.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"One or more lifecycle hooks to add to the Auto Scaling group before instances are launched.",
        SerializedName = @"lifecycleHookSpecificationList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecycleHookSpecification) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecycleHookSpecification[] LifecycleHookSpecificationList { get; set; }
        /// <summary>
        /// A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers, Network Load
        /// Balancers, and Gateway Load Balancers, specify the ``TargetGroupARNs`` property instead.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers, Network Load Balancers, and Gateway Load Balancers, specify the ``TargetGroupARNs`` property instead.",
        SerializedName = @"loadBalancerNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] LoadBalancerName { get; set; }
        /// <summary>
        /// The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value
        /// must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see [Replacing Auto
        /// Scaling instances based on maximum instance lifetime](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see [Replacing Auto Scaling instances based on maximum instance lifetime](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html) in the *Amazon EC2 Auto Scaling User Guide*.",
        SerializedName = @"maxInstanceLifetime",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxInstanceLifetime { get; set; }
        /// <summary>
        /// The maximum size of the group. With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may
        /// need to go above ``MaxSize`` to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go
        /// above ``MaxSize`` by more than your largest instance weight (weights that define how many units each instance contributes
        /// to the desired capacity of the group).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum size of the group.  With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above ``MaxSize`` to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above ``MaxSize`` by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).",
        SerializedName = @"maxSize",
        PossibleTypes = new [] { typeof(string) })]
        string MaxSize { get; set; }
        /// <summary>
        /// Enables the monitoring of group metrics of an Auto Scaling group. By default, these metrics are disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enables the monitoring of group metrics of an Auto Scaling group. By default, these metrics are disabled.",
        SerializedName = @"metricsCollection",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricsCollection) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricsCollection[] MetricsCollection { get; set; }
        /// <summary>The minimum size of the group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum size of the group.",
        SerializedName = @"minSize",
        PossibleTypes = new [] { typeof(string) })]
        string MinSize { get; set; }
        /// <summary>
        /// Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.
        /// For more information about preventing instances from terminating on scale in, see [Using instance scale-in protection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. For more information about preventing instances from terminating on scale in, see [Using instance scale-in protection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html) in the *Amazon EC2 Auto Scaling User Guide*.",
        SerializedName = @"newInstancesProtectedFromScaleIn",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NewInstancesProtectedFromScaleIn { get; set; }
        /// <summary>
        /// A list of event types that send a notification. Event types can include any of the following types. *Allowed values*:
        /// + ``autoscaling:EC2_INSTANCE_LAUNCH`` + ``autoscaling:EC2_INSTANCE_LAUNCH_ERROR`` + ``autoscaling:EC2_INSTANCE_TERMINATE``
        /// + ``autoscaling:EC2_INSTANCE_TERMINATE_ERROR`` + ``autoscaling:TEST_NOTIFICATION``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of event types that send a notification. Event types can include any of the following types.  *Allowed values*:  +   ``autoscaling:EC2_INSTANCE_LAUNCH``   +   ``autoscaling:EC2_INSTANCE_LAUNCH_ERROR``   +   ``autoscaling:EC2_INSTANCE_TERMINATE``   +   ``autoscaling:EC2_INSTANCE_TERMINATE_ERROR``   +   ``autoscaling:TEST_NOTIFICATION``",
        SerializedName = @"notificationTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] NotificationConfigurationNotificationType { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of the Amazon SNS topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the Amazon SNS topic.",
        SerializedName = @"topicARN",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationConfigurationTopicArn { get; set; }
        /// <summary>
        /// Configures an Auto Scaling group to send notifications when specified events take place.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configures an Auto Scaling group to send notifications when specified events take place.",
        SerializedName = @"notificationConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfiguration[] NotificationConfigurations { get; set; }
        /// <summary>
        /// The name of the placement group into which to launch your instances. For more information, see [Placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html)
        /// in the *Amazon EC2 User Guide for Linux Instances*. A *cluster* placement group is a logical grouping of instances within
        /// a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the placement group into which to launch your instances. For more information, see [Placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the *Amazon EC2 User Guide for Linux Instances*.  A *cluster* placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group.",
        SerializedName = @"placementGroup",
        PossibleTypes = new [] { typeof(string) })]
        string PlacementGroup { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS service on
        /// your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named ``AWSServiceRoleForAutoScaling``, which
        /// it creates if it does not exist. For more information, see [Service-linked roles](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS service on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named ``AWSServiceRoleForAutoScaling``, which it creates if it does not exist. For more information, see [Service-linked roles](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html) in the *Amazon EC2 Auto Scaling User Guide*.",
        SerializedName = @"serviceLinkedRoleARN",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceLinkedRoleArn { get; set; }
        /// <summary>
        /// One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches.
        /// Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template
        /// but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling
        /// group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group.
        /// For more information, see [Tag Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches. Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group. For more information, see [Tag Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html) in the *Amazon EC2 Auto Scaling User Guide*.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagProperty) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagProperty[] Tag { get; set; }
        /// <summary>
        /// The Amazon Resource Names (ARN) of the Elastic Load Balancing target groups to associate with the Auto Scaling group.
        /// Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests
        /// to one or more registered targets. For more information, see [Use Elastic Load Balancing to distribute traffic across
        /// the instances in your Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Names (ARN) of the Elastic Load Balancing target groups to associate with the Auto Scaling group. Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests to one or more registered targets. For more information, see [Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html) in the *Amazon EC2 Auto Scaling User Guide*.",
        SerializedName = @"targetGroupARNs",
        PossibleTypes = new [] { typeof(string) })]
        string[] TargetGroupArN { get; set; }
        /// <summary>
        /// A policy or a list of policies that are used to select the instance to terminate. These policies are executed in the order
        /// that you list them. For more information, see [Work with Amazon EC2 Auto Scaling termination policies](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. Valid values: ``Default`` | ``AllocationStrategy`` | ``ClosestToNextInstanceHour``
        /// | ``NewestInstance`` | ``OldestInstance`` | ``OldestLaunchConfiguration`` | ``OldestLaunchTemplate`` | ``arn:aws:lambda:region:account-id:function:my-function:my-alias``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A policy or a list of policies that are used to select the instance to terminate. These policies are executed in the order that you list them. For more information, see [Work with Amazon EC2 Auto Scaling termination policies](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html) in the *Amazon EC2 Auto Scaling User Guide*. Valid values: ``Default`` | ``AllocationStrategy`` | ``ClosestToNextInstanceHour`` | ``NewestInstance`` | ``OldestInstance`` | ``OldestLaunchConfiguration`` | ``OldestLaunchTemplate`` | ``arn:aws:lambda:region:account-id:function:my-function:my-alias``",
        SerializedName = @"terminationPolicies",
        PossibleTypes = new [] { typeof(string) })]
        string[] TerminationPolicy { get; set; }
        /// <summary>
        /// A list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created. If this
        /// resource specifies public subnets and is also in a VPC that is defined in the same stack template, you must use the [DependsOn
        /// attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency
        /// on the [VPC-gateway attachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html).
        /// When you update ``VPCZoneIdentifier``, this retains the same Auto Scaling group and replaces old instances with new ones,
        /// according to the specified subnets. You can optionally specify how CloudFormation handles these updates by using an [UpdatePolicy
        /// attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html). Required to
        /// launch instances into a nondefault VPC. If you specify ``VPCZoneIdentifier`` with ``AvailabilityZones``, the subnets that
        /// you specify for this property must reside in those Availability Zones.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created. If this resource specifies public subnets and is also in a VPC that is defined in the same stack template, you must use the [DependsOn attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency on the [VPC-gateway attachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html).  When you update ``VPCZoneIdentifier``, this retains the same Auto Scaling group and replaces old instances with new ones, according to the specified subnets. You can optionally specify how CloudFormation handles these updates by using an [UpdatePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html).  Required to launch instances into a nondefault VPC. If you specify ``VPCZoneIdentifier`` with ``AvailabilityZones``, the subnets that you specify for this property must reside in those Availability Zones.",
        SerializedName = @"vpcZoneIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string[] VpcZoneIdentifier { get; set; }

    }
    /// Definition of awsAutoScalingAutoScalingGroup
    internal partial interface IAwsAutoScalingGroupPropertiesInternal

    {
        /// <summary>
        /// The name of the Auto Scaling group. This name must be unique per Region per account. The name can contain any ASCII character
        /// 33 to 126 including most punctuation characters, digits, and upper and lowercased letters. You cannot use a colon (:)
        /// in the name.
        /// </summary>
        string AutoScalingGroupName { get; set; }
        /// <summary>
        /// A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default
        /// VPC subnet in each Availability Zone when not using the ``VPCZoneIdentifier`` property, or for attaching a network interface
        /// when an existing network interface ID is specified in a launch template.
        /// </summary>
        string[] AvailabilityZone { get; set; }
        /// <summary>
        /// Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity
        /// Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance
        /// is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information,
        /// see [Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html)
        /// in the in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        bool? CapacityRebalance { get; set; }
        /// <summary>Reserved.</summary>
        string Context { get; set; }
        /// <summary>
        /// *Only needed if you use simple scaling policies.* The amount of time, in seconds, between one scaling activity ending
        /// and another one starting due to simple scaling policies. For more information, see [Scaling cooldowns for Amazon EC2 Auto
        /// Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html) in the *Amazon EC2 Auto Scaling User Guide*.
        /// Default: ``300`` seconds
        /// </summary>
        string Cooldown { get; set; }
        /// <summary>
        /// The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption
        /// to become stable after it enters the ``InService`` state. During an instance refresh, Amazon EC2 Auto Scaling waits for
        /// the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling
        /// also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon
        /// CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see [Set the
        /// default instance warmup for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. To manage various warm-up settings at the group level, we recommend that
        /// you set the default instance warmup, *even if it is set to 0 seconds*. To remove a value that you previously set, include
        /// the property but specify ``-1`` for the value. However, we strongly recommend keeping the default instance warmup enabled
        /// by specifying a value of ``0`` or other nominal value. Default: None
        /// </summary>
        int? DefaultInstanceWarmup { get; set; }
        /// <summary>
        /// The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it
        /// attempts to maintain. It can scale beyond this capacity if you configure automatic scaling. The number must be greater
        /// than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not
        /// specify a desired capacity when creating the stack, the default is the minimum size of the group. CloudFormation marks
        /// the Auto Scaling group as successful (by setting its status to CREATE_COMPLETE) when the desired capacity is reached.
        /// However, if a maximum Spot price is set in the launch template or launch configuration that you specified, then desired
        /// capacity is not used as a criteria for success. Whether your request is fulfilled depends on Spot Instance capacity and
        /// your maximum price.
        /// </summary>
        string DesiredCapacity { get; set; }
        /// <summary>
        /// The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports ``DesiredCapacityType``
        /// for attribute-based instance type selection only. For more information, see [Creating an Auto Scaling group using attribute-based
        /// instance type selection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. By default, Amazon EC2 Auto Scaling specifies ``units``, which translates
        /// into number of instances. Valid values: ``units`` | ``vcpu`` | ``memory-mib``
        /// </summary>
        string DesiredCapacityType { get; set; }
        /// <summary>
        /// The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance
        /// that has come into service and marking it unhealthy due to a failed health check. This is useful if your instances do
        /// not immediately pass their health checks after they enter the ``InService`` state. For more information, see [Set the
        /// health check grace period for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. Default: ``0`` seconds
        /// </summary>
        int? HealthCheckGracePeriod { get; set; }
        /// <summary>
        /// A comma-separated value string of one or more health check types. The valid values are ``EC2``, ``ELB``, and ``VPC_LATTICE``.
        /// ``EC2`` is the default health check and cannot be disabled. For more information, see [Health checks for Auto Scaling
        /// instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html) in the *Amazon EC2 Auto Scaling User
        /// Guide*. Only specify ``EC2`` if you must clear a value that was previously set.
        /// </summary>
        string HealthCheckType { get; set; }
        /// <summary>
        /// The allocation strategy to apply to your On-Demand Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + lowest-price Uses price to
        /// determine which instance types are the highest priority, launching the lowest priced instance types within an Availability
        /// Zone first. This is the default value for Auto Scaling groups that specify InstanceRequirements. + prioritized You set
        /// the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the
        /// list). Amazon EC2 Auto Scaling launches your highest priority instance types first. If all your On-Demand capacity cannot
        /// be fulfilled using your highest priority instance type, then Amazon EC2 Auto Scaling launches the remaining capacity using
        /// the second priority instance type, and so on. This is the default value for Auto Scaling groups that don't specify InstanceRequirements
        /// and cannot be used for groups that do.
        /// </summary>
        string InstanceDistributionOnDemandAllocationStrategy { get; set; }
        /// <summary>
        /// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion
        /// is launched first as your group scales. This number has the same unit of measurement as the group's desired capacity.
        /// If you change the default unit of measurement (number of instances) by specifying weighted capacity values in your launch
        /// template overrides list, or by changing the default desired capacity type setting of the group, you must specify this
        /// number using the same unit of measurement. Default: 0 An update to this setting means a gradual replacement of instances
        /// to adjust the current On-Demand Instance levels. When replacing instances, Amazon EC2 Auto Scaling launches new instances
        /// before terminating the previous ones.
        /// </summary>
        int? InstanceDistributionOnDemandBaseCapacity { get; set; }
        /// <summary>
        /// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond ``OnDemandBaseCapacity``.
        /// Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances). If set to 100, only On-Demand
        /// Instances are used. Default: 100 An update to this setting means a gradual replacement of instances to adjust the current
        /// On-Demand and Spot Instance levels for your additional capacity higher than the base capacity. When replacing instances,
        /// Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.
        /// </summary>
        int? InstanceDistributionOnDemandPercentageAboveBaseCapacity { get; set; }
        /// <summary>
        /// The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + capacity-optimized Requests
        /// Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest
        /// risk of interruption. To give certain instance types a higher chance of launching first, use capacity-optimized-prioritized.
        /// + capacity-optimized-prioritized You set the order of instance types for the launch template overrides from highest to
        /// lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best
        /// effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to prioritized, the
        /// same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify
        /// InstanceRequirements. + lowest-price Requests Spot Instances using the lowest priced pools within an Availability Zone,
        /// across the number of Spot pools that you specify for the SpotInstancePools property. To ensure that your desired capacity
        /// is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption
        /// rates because this strategy only considers instance price and not available capacity. + price-capacity-optimized (recommended)
        /// The price and capacity optimized allocation strategy looks at both price and capacity to select the Spot Instance pools
        /// that are the least likely to be interrupted and have the lowest possible price.
        /// </summary>
        string InstanceDistributionSpotAllocationStrategy { get; set; }
        /// <summary>
        /// The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the
        /// different instance types in the overrides. Valid only when the ``SpotAllocationStrategy`` is ``lowest-price``. Value must
        /// be in the range of 1–20. Default: 2
        /// </summary>
        int? InstanceDistributionSpotInstancePool { get; set; }
        /// <summary>
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. If your maximum price is lower than the
        /// Spot price for the instance types that you selected, your Spot Instances are not launched. We do not recommend specifying
        /// a maximum price because it can lead to increased interruptions. When Spot Instances launch, you pay the current Spot price.
        /// To remove a maximum price that you previously set, include the property but specify an empty string ('') for the value.
        /// If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify one. Valid
        /// Range: Minimum value of 0.001
        /// </summary>
        string InstanceDistributionSpotMaxPrice { get; set; }
        /// <summary>
        /// The ID of the instance used to base the launch configuration on. For more information, see [Create an Auto Scaling group
        /// using an EC2 instance](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html) in the *Amazon
        /// EC2 Auto Scaling User Guide*. If you specify ``LaunchTemplate``, ``MixedInstancesPolicy``, or ``LaunchConfigurationName``,
        /// don't specify ``InstanceId``.
        /// </summary>
        string InstanceId { get; set; }
        /// <summary>
        /// An instance maintenance policy. For more information, see [Set instance maintenance policy](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-maintenance-policy.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. ``InstanceMaintenancePolicy`` is a property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html)
        /// resource. For more information, see [Instance maintenance policies](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-maintenance-policy.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceMaintenancePolicy InstanceMaintenancePolicy { get; set; }
        /// <summary>
        /// Specifies the upper threshold as a percentage of the desired capacity of the Auto Scaling group. It represents the maximum
        /// percentage of the group that can be in service and healthy, or pending, to support your workload when replacing instances.
        /// Value range is 100 to 200. To clear a previously set value, specify a value of ``-1``. Both ``MinHealthyPercentage`` and
        /// ``MaxHealthyPercentage`` must be specified, and the difference between them cannot be greater than 100. A large range
        /// increases the number of instances that can be replaced at the same time.
        /// </summary>
        int? InstanceMaintenancePolicyMaxHealthyPercentage { get; set; }
        /// <summary>
        /// Specifies the lower threshold as a percentage of the desired capacity of the Auto Scaling group. It represents the minimum
        /// percentage of the group to keep in service, healthy, and ready to use to support your workload when replacing instances.
        /// Value range is 0 to 100. To clear a previously set value, specify a value of ``-1``.
        /// </summary>
        int? InstanceMaintenancePolicyMinHealthyPercentage { get; set; }
        /// <summary>
        /// The name of the launch configuration to use to launch instances. Required only if you don't specify ``LaunchTemplate``,
        /// ``MixedInstancesPolicy``, or ``InstanceId``.
        /// </summary>
        string LaunchConfigurationName { get; set; }
        /// <summary>
        /// Information used to specify the launch template and version to use to launch instances. You can alternatively associate
        /// a launch template to the Auto Scaling group by specifying a ``MixedInstancesPolicy``. For more information about creating
        /// launch templates, see [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. If you omit this property, you must specify ``MixedInstancesPolicy``, ``LaunchConfigurationName``,
        /// or ``InstanceId``. Specifies a launch template to use when provisioning EC2 instances for an Auto Scaling group. You must
        /// specify the following: + The ID or the name of the launch template, but not both. + The version of the launch template.
        /// ``LaunchTemplateSpecification`` is property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html)
        /// resource. It is also a property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplate.html)
        /// and [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
        /// property types. For information about creating a launch template, see [AWS::EC2::LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html)
        /// and [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. For examples of launch templates, see [Auto scaling template snippets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-autoscaling.html)
        /// and the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#aws-resource-ec2-launchtemplate--examples)
        /// section in the ``AWS::EC2::LaunchTemplate`` resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecification LaunchTemplate { get; set; }
        /// <summary>
        /// The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.
        /// </summary>
        string LaunchTemplateId { get; set; }
        /// <summary>
        /// The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.
        /// </summary>
        string LaunchTemplateName { get; set; }
        /// <summary>
        /// Any properties that you specify override the same properties in the launch template.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateOverrides[] LaunchTemplateOverride { get; set; }
        /// <summary>
        /// The launch template. Specifies a launch template to use when provisioning EC2 instances for an Auto Scaling group. You
        /// must specify the following: + The ID or the name of the launch template, but not both. + The version of the launch template.
        /// ``LaunchTemplateSpecification`` is property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html)
        /// resource. It is also a property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplate.html)
        /// and [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
        /// property types. For information about creating a launch template, see [AWS::EC2::LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html)
        /// and [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. For examples of launch templates, see [Auto scaling template snippets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-autoscaling.html)
        /// and the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#aws-resource-ec2-launchtemplate--examples)
        /// section in the ``AWS::EC2::LaunchTemplate`` resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecification LaunchTemplateSpecification { get; set; }
        /// <summary>
        /// The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.
        /// </summary>
        string LaunchTemplateSpecificationLaunchTemplateId { get; set; }
        /// <summary>
        /// The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.
        /// </summary>
        string LaunchTemplateSpecificationLaunchTemplateName { get; set; }
        /// <summary>
        /// The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not
        /// supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic
        /// function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).
        /// For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples)
        /// section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
        /// </summary>
        string LaunchTemplateSpecificationVersion { get; set; }
        /// <summary>
        /// The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not
        /// supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic
        /// function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).
        /// For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples)
        /// section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
        /// </summary>
        string LaunchTemplateVersion { get; set; }
        /// <summary>
        /// One or more lifecycle hooks to add to the Auto Scaling group before instances are launched.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILifecycleHookSpecification[] LifecycleHookSpecificationList { get; set; }
        /// <summary>
        /// A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers, Network Load
        /// Balancers, and Gateway Load Balancers, specify the ``TargetGroupARNs`` property instead.
        /// </summary>
        string[] LoadBalancerName { get; set; }
        /// <summary>
        /// The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value
        /// must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see [Replacing Auto
        /// Scaling instances based on maximum instance lifetime](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        int? MaxInstanceLifetime { get; set; }
        /// <summary>
        /// The maximum size of the group. With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may
        /// need to go above ``MaxSize`` to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go
        /// above ``MaxSize`` by more than your largest instance weight (weights that define how many units each instance contributes
        /// to the desired capacity of the group).
        /// </summary>
        string MaxSize { get; set; }
        /// <summary>
        /// Enables the monitoring of group metrics of an Auto Scaling group. By default, these metrics are disabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMetricsCollection[] MetricsCollection { get; set; }
        /// <summary>The minimum size of the group.</summary>
        string MinSize { get; set; }
        /// <summary>
        /// The instances distribution. Use this structure to specify the distribution of On-Demand Instances and Spot Instances and
        /// the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy. For more information,
        /// see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. ``InstancesDistribution`` is a property of the [AWS::AutoScaling::AutoScalingGroup
        /// MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html)
        /// property type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistribution MixedInstancePolicyInstancesDistribution { get; set; }
        /// <summary>
        /// One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand
        /// and Spot capacities. Use this structure to specify the launch templates and instance types (overrides) for a mixed instances
        /// policy. ``LaunchTemplate`` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html)
        /// property type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplate MixedInstancePolicyLaunchTemplate { get; set; }
        /// <summary>
        /// An embedded object that specifies a mixed instances policy. The policy includes properties that not only define the distribution
        /// of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances (optional), and how the Auto Scaling
        /// group allocates instance types to fulfill On-Demand and Spot capacities, but also the properties that specify the instance
        /// configuration information—the launch template and instance types. The policy can also include a weight for each instance
        /// type and different launch templates for individual instance types. For more information, see [Auto Scaling groups with
        /// multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. Use this structure to launch multiple instance types and On-Demand Instances
        /// and Spot Instances within a single Auto Scaling group. A mixed instances policy contains information that Amazon EC2 Auto
        /// Scaling can use to launch instances and help optimize your costs. For more information, see [Auto Scaling groups with
        /// multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. You can create a mixed instances policy for new and existing Auto Scaling
        /// groups. You must use a launch template to configure the policy. You cannot use a launch configuration. There are key differences
        /// between Spot Instances and On-Demand Instances: + The price for Spot Instances varies based on demand + Amazon EC2 can
        /// terminate an individual Spot Instance as the availability of, or price for, Spot Instances changes When a Spot Instance
        /// is terminated, Amazon EC2 Auto Scaling group attempts to launch a replacement instance to maintain the desired capacity
        /// for the group. ``MixedInstancesPolicy`` is a property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html)
        /// resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicy MixedInstancesPolicy { get; set; }
        /// <summary>
        /// Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in.
        /// For more information about preventing instances from terminating on scale in, see [Using instance scale-in protection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        bool? NewInstancesProtectedFromScaleIn { get; set; }
        /// <summary>
        /// A structure that specifies an Amazon SNS notification configuration for the ``NotificationConfigurations`` property of
        /// the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html)
        /// resource. For an example template snippet, see [Auto scaling template snippets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-autoscaling.html).
        /// For more information, see [Get Amazon SNS notifications when your Auto Scaling group scales](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfiguration NotificationConfiguration { get; set; }
        /// <summary>
        /// A list of event types that send a notification. Event types can include any of the following types. *Allowed values*:
        /// + ``autoscaling:EC2_INSTANCE_LAUNCH`` + ``autoscaling:EC2_INSTANCE_LAUNCH_ERROR`` + ``autoscaling:EC2_INSTANCE_TERMINATE``
        /// + ``autoscaling:EC2_INSTANCE_TERMINATE_ERROR`` + ``autoscaling:TEST_NOTIFICATION``
        /// </summary>
        string[] NotificationConfigurationNotificationType { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of the Amazon SNS topic.</summary>
        string NotificationConfigurationTopicArn { get; set; }
        /// <summary>
        /// Configures an Auto Scaling group to send notifications when specified events take place.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.INotificationConfiguration[] NotificationConfigurations { get; set; }
        /// <summary>
        /// The name of the placement group into which to launch your instances. For more information, see [Placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html)
        /// in the *Amazon EC2 User Guide for Linux Instances*. A *cluster* placement group is a logical grouping of instances within
        /// a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group.
        /// </summary>
        string PlacementGroup { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS service on
        /// your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named ``AWSServiceRoleForAutoScaling``, which
        /// it creates if it does not exist. For more information, see [Service-linked roles](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        string ServiceLinkedRoleArn { get; set; }
        /// <summary>
        /// One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches.
        /// Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template
        /// but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling
        /// group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group.
        /// For more information, see [Tag Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagProperty[] Tag { get; set; }
        /// <summary>
        /// The Amazon Resource Names (ARN) of the Elastic Load Balancing target groups to associate with the Auto Scaling group.
        /// Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests
        /// to one or more registered targets. For more information, see [Use Elastic Load Balancing to distribute traffic across
        /// the instances in your Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*.
        /// </summary>
        string[] TargetGroupArN { get; set; }
        /// <summary>
        /// A policy or a list of policies that are used to select the instance to terminate. These policies are executed in the order
        /// that you list them. For more information, see [Work with Amazon EC2 Auto Scaling termination policies](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. Valid values: ``Default`` | ``AllocationStrategy`` | ``ClosestToNextInstanceHour``
        /// | ``NewestInstance`` | ``OldestInstance`` | ``OldestLaunchConfiguration`` | ``OldestLaunchTemplate`` | ``arn:aws:lambda:region:account-id:function:my-function:my-alias``
        /// </summary>
        string[] TerminationPolicy { get; set; }
        /// <summary>
        /// A list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created. If this
        /// resource specifies public subnets and is also in a VPC that is defined in the same stack template, you must use the [DependsOn
        /// attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency
        /// on the [VPC-gateway attachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html).
        /// When you update ``VPCZoneIdentifier``, this retains the same Auto Scaling group and replaces old instances with new ones,
        /// according to the specified subnets. You can optionally specify how CloudFormation handles these updates by using an [UpdatePolicy
        /// attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html). Required to
        /// launch instances into a nondefault VPC. If you specify ``VPCZoneIdentifier`` with ``AvailabilityZones``, the subnets that
        /// you specify for this property must reside in those Availability Zones.
        /// </summary>
        string[] VpcZoneIdentifier { get; set; }

    }
}