// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of Ec2InstanceAttributes</summary>
    public partial class Ec2InstanceAttributes :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributes,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2InstanceAttributesInternal
    {

        /// <summary>Backing field for <see cref="AdditionalMasterSecurityGroup" /> property.</summary>
        private string[] _additionalMasterSecurityGroup;

        /// <summary><p>A list of additional Amazon EC2 security group IDs for the master node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] AdditionalMasterSecurityGroup { get => this._additionalMasterSecurityGroup; set => this._additionalMasterSecurityGroup = value; }

        /// <summary>Backing field for <see cref="AdditionalSlaveSecurityGroup" /> property.</summary>
        private string[] _additionalSlaveSecurityGroup;

        /// <summary>
        /// <p>A list of additional Amazon EC2 security group IDs for the core and task nodes.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] AdditionalSlaveSecurityGroup { get => this._additionalSlaveSecurityGroup; set => this._additionalSlaveSecurityGroup = value; }

        /// <summary>Backing field for <see cref="Ec2AvailabilityZone" /> property.</summary>
        private string _ec2AvailabilityZone;

        /// <summary><p>The Availability Zone in which the cluster will run. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Ec2AvailabilityZone { get => this._ec2AvailabilityZone; set => this._ec2AvailabilityZone = value; }

        /// <summary>Backing field for <see cref="Ec2KeyName" /> property.</summary>
        private string _ec2KeyName;

        /// <summary>
        /// <p>The name of the Amazon EC2 key pair to use when connecting with SSH into the master node as a user named 'hadoop'.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Ec2KeyName { get => this._ec2KeyName; set => this._ec2KeyName = value; }

        /// <summary>Backing field for <see cref="Ec2SubnetId" /> property.</summary>
        private string _ec2SubnetId;

        /// <summary>
        /// <p>Set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify
        /// this value, and your account supports EC2-Classic, the cluster launches in EC2-Classic.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Ec2SubnetId { get => this._ec2SubnetId; set => this._ec2SubnetId = value; }

        /// <summary>Backing field for <see cref="EmrManagedMasterSecurityGroup" /> property.</summary>
        private string _emrManagedMasterSecurityGroup;

        /// <summary><p>The identifier of the Amazon EC2 security group for the master node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string EmrManagedMasterSecurityGroup { get => this._emrManagedMasterSecurityGroup; set => this._emrManagedMasterSecurityGroup = value; }

        /// <summary>Backing field for <see cref="EmrManagedSlaveSecurityGroup" /> property.</summary>
        private string _emrManagedSlaveSecurityGroup;

        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the core and task nodes.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string EmrManagedSlaveSecurityGroup { get => this._emrManagedSlaveSecurityGroup; set => this._emrManagedSlaveSecurityGroup = value; }

        /// <summary>Backing field for <see cref="IamInstanceProfile" /> property.</summary>
        private string _iamInstanceProfile;

        /// <summary>
        /// <p>The IAM role that was specified when the cluster was launched. The Amazon EC2 instances of the cluster assume this
        /// role.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string IamInstanceProfile { get => this._iamInstanceProfile; set => this._iamInstanceProfile = value; }

        /// <summary>Backing field for <see cref="RequestedEc2AvailabilityZone" /> property.</summary>
        private string[] _requestedEc2AvailabilityZone;

        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies one or more Availability Zones in which to
        /// launch Amazon EC2 cluster instances when the EC2-Classic network configuration is supported. Amazon EMR chooses the Availability
        /// Zone with the best fit from among the list of <code>RequestedEc2AvailabilityZones</code>, and then launches all cluster
        /// instances within that Availability Zone. If you do not specify this value, Amazon EMR chooses the Availability Zone for
        /// you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] RequestedEc2AvailabilityZone { get => this._requestedEc2AvailabilityZone; set => this._requestedEc2AvailabilityZone = value; }

        /// <summary>Backing field for <see cref="RequestedEc2SubnetId" /> property.</summary>
        private string[] _requestedEc2SubnetId;

        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies the unique identifier of one or more Amazon
        /// EC2 subnets in which to launch Amazon EC2 cluster instances. Subnets must exist within the same VPC. Amazon EMR chooses
        /// the Amazon EC2 subnet with the best fit from among the list of <code>RequestedEc2SubnetIds</code>, and then launches all
        /// cluster instances within that Subnet. If this value is not specified, and the account and Region support EC2-Classic networks,
        /// the cluster launches instances in the EC2-Classic network and uses <code>RequestedEc2AvailabilityZones</code> instead
        /// of this setting. If EC2-Classic is not supported, and no Subnet is specified, Amazon EMR chooses the subnet for you. <code>RequestedEc2SubnetIDs</code>
        /// and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] RequestedEc2SubnetId { get => this._requestedEc2SubnetId; set => this._requestedEc2SubnetId = value; }

        /// <summary>Backing field for <see cref="ServiceAccessSecurityGroup" /> property.</summary>
        private string _serviceAccessSecurityGroup;

        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ServiceAccessSecurityGroup { get => this._serviceAccessSecurityGroup; set => this._serviceAccessSecurityGroup = value; }

        /// <summary>Creates an new <see cref="Ec2InstanceAttributes" /> instance.</summary>
        public Ec2InstanceAttributes()
        {

        }
    }
    /// Definition of Ec2InstanceAttributes
    public partial interface IEc2InstanceAttributes :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>A list of additional Amazon EC2 security group IDs for the master node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A list of additional Amazon EC2 security group IDs for the master node.</p>",
        SerializedName = @"additionalMasterSecurityGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] AdditionalMasterSecurityGroup { get; set; }
        /// <summary>
        /// <p>A list of additional Amazon EC2 security group IDs for the core and task nodes.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A list of additional Amazon EC2 security group IDs for the core and task nodes.</p>",
        SerializedName = @"additionalSlaveSecurityGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] AdditionalSlaveSecurityGroup { get; set; }
        /// <summary><p>The Availability Zone in which the cluster will run. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Availability Zone in which the cluster will run. </p>",
        SerializedName = @"ec2AvailabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string Ec2AvailabilityZone { get; set; }
        /// <summary>
        /// <p>The name of the Amazon EC2 key pair to use when connecting with SSH into the master node as a user named 'hadoop'.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the Amazon EC2 key pair to use when connecting with SSH into the master node as a user named 'hadoop'.</p>",
        SerializedName = @"ec2KeyName",
        PossibleTypes = new [] { typeof(string) })]
        string Ec2KeyName { get; set; }
        /// <summary>
        /// <p>Set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify
        /// this value, and your account supports EC2-Classic, the cluster launches in EC2-Classic.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify this value, and your account supports EC2-Classic, the cluster launches in EC2-Classic.</p>",
        SerializedName = @"ec2SubnetId",
        PossibleTypes = new [] { typeof(string) })]
        string Ec2SubnetId { get; set; }
        /// <summary><p>The identifier of the Amazon EC2 security group for the master node.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The identifier of the Amazon EC2 security group for the master node.</p>",
        SerializedName = @"emrManagedMasterSecurityGroup",
        PossibleTypes = new [] { typeof(string) })]
        string EmrManagedMasterSecurityGroup { get; set; }
        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the core and task nodes.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The identifier of the Amazon EC2 security group for the core and task nodes.</p>",
        SerializedName = @"emrManagedSlaveSecurityGroup",
        PossibleTypes = new [] { typeof(string) })]
        string EmrManagedSlaveSecurityGroup { get; set; }
        /// <summary>
        /// <p>The IAM role that was specified when the cluster was launched. The Amazon EC2 instances of the cluster assume this
        /// role.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The IAM role that was specified when the cluster was launched. The Amazon EC2 instances of the cluster assume this role.</p>",
        SerializedName = @"iamInstanceProfile",
        PossibleTypes = new [] { typeof(string) })]
        string IamInstanceProfile { get; set; }
        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies one or more Availability Zones in which to
        /// launch Amazon EC2 cluster instances when the EC2-Classic network configuration is supported. Amazon EMR chooses the Availability
        /// Zone with the best fit from among the list of <code>RequestedEc2AvailabilityZones</code>, and then launches all cluster
        /// instances within that Availability Zone. If you do not specify this value, Amazon EMR chooses the Availability Zone for
        /// you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Applies to clusters configured with the instance fleets option. Specifies one or more Availability Zones in which to launch Amazon EC2 cluster instances when the EC2-Classic network configuration is supported. Amazon EMR chooses the Availability Zone with the best fit from among the list of <code>RequestedEc2AvailabilityZones</code>, and then launches all cluster instances within that Availability Zone. If you do not specify this value, Amazon EMR chooses the Availability Zone for you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>",
        SerializedName = @"requestedEc2AvailabilityZones",
        PossibleTypes = new [] { typeof(string) })]
        string[] RequestedEc2AvailabilityZone { get; set; }
        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies the unique identifier of one or more Amazon
        /// EC2 subnets in which to launch Amazon EC2 cluster instances. Subnets must exist within the same VPC. Amazon EMR chooses
        /// the Amazon EC2 subnet with the best fit from among the list of <code>RequestedEc2SubnetIds</code>, and then launches all
        /// cluster instances within that Subnet. If this value is not specified, and the account and Region support EC2-Classic networks,
        /// the cluster launches instances in the EC2-Classic network and uses <code>RequestedEc2AvailabilityZones</code> instead
        /// of this setting. If EC2-Classic is not supported, and no Subnet is specified, Amazon EMR chooses the subnet for you. <code>RequestedEc2SubnetIDs</code>
        /// and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Applies to clusters configured with the instance fleets option. Specifies the unique identifier of one or more Amazon EC2 subnets in which to launch Amazon EC2 cluster instances. Subnets must exist within the same VPC. Amazon EMR chooses the Amazon EC2 subnet with the best fit from among the list of <code>RequestedEc2SubnetIds</code>, and then launches all cluster instances within that Subnet. If this value is not specified, and the account and Region support EC2-Classic networks, the cluster launches instances in the EC2-Classic network and uses <code>RequestedEc2AvailabilityZones</code> instead of this setting. If EC2-Classic is not supported, and no Subnet is specified, Amazon EMR chooses the subnet for you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>",
        SerializedName = @"requestedEc2SubnetIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] RequestedEc2SubnetId { get; set; }
        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.</p>",
        SerializedName = @"serviceAccessSecurityGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceAccessSecurityGroup { get; set; }

    }
    /// Definition of Ec2InstanceAttributes
    internal partial interface IEc2InstanceAttributesInternal

    {
        /// <summary><p>A list of additional Amazon EC2 security group IDs for the master node.</p></summary>
        string[] AdditionalMasterSecurityGroup { get; set; }
        /// <summary>
        /// <p>A list of additional Amazon EC2 security group IDs for the core and task nodes.</p>
        /// </summary>
        string[] AdditionalSlaveSecurityGroup { get; set; }
        /// <summary><p>The Availability Zone in which the cluster will run. </p></summary>
        string Ec2AvailabilityZone { get; set; }
        /// <summary>
        /// <p>The name of the Amazon EC2 key pair to use when connecting with SSH into the master node as a user named 'hadoop'.</p>
        /// </summary>
        string Ec2KeyName { get; set; }
        /// <summary>
        /// <p>Set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify
        /// this value, and your account supports EC2-Classic, the cluster launches in EC2-Classic.</p>
        /// </summary>
        string Ec2SubnetId { get; set; }
        /// <summary><p>The identifier of the Amazon EC2 security group for the master node.</p></summary>
        string EmrManagedMasterSecurityGroup { get; set; }
        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the core and task nodes.</p>
        /// </summary>
        string EmrManagedSlaveSecurityGroup { get; set; }
        /// <summary>
        /// <p>The IAM role that was specified when the cluster was launched. The Amazon EC2 instances of the cluster assume this
        /// role.</p>
        /// </summary>
        string IamInstanceProfile { get; set; }
        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies one or more Availability Zones in which to
        /// launch Amazon EC2 cluster instances when the EC2-Classic network configuration is supported. Amazon EMR chooses the Availability
        /// Zone with the best fit from among the list of <code>RequestedEc2AvailabilityZones</code>, and then launches all cluster
        /// instances within that Availability Zone. If you do not specify this value, Amazon EMR chooses the Availability Zone for
        /// you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        string[] RequestedEc2AvailabilityZone { get; set; }
        /// <summary>
        /// <p>Applies to clusters configured with the instance fleets option. Specifies the unique identifier of one or more Amazon
        /// EC2 subnets in which to launch Amazon EC2 cluster instances. Subnets must exist within the same VPC. Amazon EMR chooses
        /// the Amazon EC2 subnet with the best fit from among the list of <code>RequestedEc2SubnetIds</code>, and then launches all
        /// cluster instances within that Subnet. If this value is not specified, and the account and Region support EC2-Classic networks,
        /// the cluster launches instances in the EC2-Classic network and uses <code>RequestedEc2AvailabilityZones</code> instead
        /// of this setting. If EC2-Classic is not supported, and no Subnet is specified, Amazon EMR chooses the subnet for you. <code>RequestedEc2SubnetIDs</code>
        /// and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.</p>
        /// </summary>
        string[] RequestedEc2SubnetId { get; set; }
        /// <summary>
        /// <p>The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.</p>
        /// </summary>
        string ServiceAccessSecurityGroup { get; set; }

    }
}