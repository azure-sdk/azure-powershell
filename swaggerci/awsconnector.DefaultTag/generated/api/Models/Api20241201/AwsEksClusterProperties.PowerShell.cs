// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsEksCluster</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsEksClusterPropertiesTypeConverter))]
    public partial class AwsEksClusterProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEksClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsEksClusterProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AccessConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponse) content.GetValueForProperty("AccessConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AccessConfigResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("CertificateAuthority"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CertificateAuthority = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificate) content.GetValueForProperty("CertificateAuthority",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CertificateAuthority, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CertificateTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectorConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponse) content.GetValueForProperty("ConnectorConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ConnectorConfigResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("Health"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Health = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterHealth) content.GetValueForProperty("Health",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Health, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterHealthTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("KubernetesNetworkConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KubernetesNetworkConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponse) content.GetValueForProperty("KubernetesNetworkConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KubernetesNetworkConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KubernetesNetworkConfigResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("Logging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Logging = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingAutoGenerated) content.GetValueForProperty("Logging",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Logging, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingAutoGeneratedTypeConverter.ConvertFrom);
            }
            if (content.Contains("OutpostConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponse) content.GetValueForProperty("OutpostConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OutpostConfigResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourcesVpcConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourcesVpcConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponse) content.GetValueForProperty("ResourcesVpcConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourcesVpcConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcConfigResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatusEnumValue) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStatusEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Arn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Arn = (string) content.GetValueForProperty("Arn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Arn, global::System.Convert.ToString);
            }
            if (content.Contains("ClientRequestToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ClientRequestToken = (string) content.GetValueForProperty("ClientRequestToken",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ClientRequestToken, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CreatedAt = (global::System.DateTime?) content.GetValueForProperty("CreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EncryptionConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).EncryptionConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfig[]) content.GetValueForProperty("EncryptionConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).EncryptionConfig, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfig>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EncryptionConfigTypeConverter.ConvertFrom));
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Endpoint = (string) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Endpoint, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("PlatformVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).PlatformVersion = (string) content.GetValueForProperty("PlatformVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).PlatformVersion, global::System.Convert.ToString);
            }
            if (content.Contains("RoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).RoleArn = (string) content.GetValueForProperty("RoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).RoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEksClusterPropertiesTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityOidc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).IdentityOidc = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOidc) content.GetValueForProperty("IdentityOidc",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).IdentityOidc, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OidcTypeConverter.ConvertFrom);
            }
            if (content.Contains("LoggingClusterLogging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).LoggingClusterLogging = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogSetup[]) content.GetValueForProperty("LoggingClusterLogging",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).LoggingClusterLogging, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogSetup>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogSetupTypeConverter.ConvertFrom));
            }
            if (content.Contains("AccessConfigAuthenticationMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfigAuthenticationMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticationModeEnumValue) content.GetValueForProperty("AccessConfigAuthenticationMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfigAuthenticationMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AuthenticationModeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("AccessConfigBootstrapClusterCreatorAdminPermission"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfigBootstrapClusterCreatorAdminPermission = (bool?) content.GetValueForProperty("AccessConfigBootstrapClusterCreatorAdminPermission",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfigBootstrapClusterCreatorAdminPermission, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AuthenticationModeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AuthenticationModeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationMode?) content.GetValueForProperty("AuthenticationModeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AuthenticationModeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationMode.CreateFrom);
            }
            if (content.Contains("CertificateAuthorityData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CertificateAuthorityData = (string) content.GetValueForProperty("CertificateAuthorityData",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CertificateAuthorityData, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorConfigActivationCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationCode = (string) content.GetValueForProperty("ConnectorConfigActivationCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationCode, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorConfigActivationExpiry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationExpiry = (global::System.DateTime?) content.GetValueForProperty("ConnectorConfigActivationExpiry",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationExpiry, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ConnectorConfigActivationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationId = (string) content.GetValueForProperty("ConnectorConfigActivationId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationId, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorConfigProvider"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigProvider = (string) content.GetValueForProperty("ConnectorConfigProvider",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigProvider, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorConfigRoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigRoleArn = (string) content.GetValueForProperty("ConnectorConfigRoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigRoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("HealthIssue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).HealthIssue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterIssue[]) content.GetValueForProperty("HealthIssue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).HealthIssue, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterIssue>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterIssueTypeConverter.ConvertFrom));
            }
            if (content.Contains("OidcIssuer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OidcIssuer = (string) content.GetValueForProperty("OidcIssuer",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OidcIssuer, global::System.Convert.ToString);
            }
            if (content.Contains("KuberneteNetworkConfigIPFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigIPFamily = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPFamilyEnumValue) content.GetValueForProperty("KuberneteNetworkConfigIPFamily",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigIPFamily, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPFamilyEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("KuberneteNetworkConfigServiceIpv4Cidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigServiceIpv4Cidr = (string) content.GetValueForProperty("KuberneteNetworkConfigServiceIpv4Cidr",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigServiceIpv4Cidr, global::System.Convert.ToString);
            }
            if (content.Contains("KuberneteNetworkConfigServiceIpv6Cidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigServiceIpv6Cidr = (string) content.GetValueForProperty("KuberneteNetworkConfigServiceIpv6Cidr",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigServiceIpv6Cidr, global::System.Convert.ToString);
            }
            if (content.Contains("OutpostConfigControlPlanePlacement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigControlPlanePlacement = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IControlPlanePlacementResponse) content.GetValueForProperty("OutpostConfigControlPlanePlacement",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigControlPlanePlacement, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ControlPlanePlacementResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("OutpostConfigControlPlaneInstanceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigControlPlaneInstanceType = (string) content.GetValueForProperty("OutpostConfigControlPlaneInstanceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigControlPlaneInstanceType, global::System.Convert.ToString);
            }
            if (content.Contains("OutpostConfigOutpostArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigOutpostArn = (string[]) content.GetValueForProperty("OutpostConfigOutpostArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigOutpostArn, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ResourceVpcConfigClusterSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigClusterSecurityGroupId = (string) content.GetValueForProperty("ResourceVpcConfigClusterSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigClusterSecurityGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceVpcConfigEndpointPrivateAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigEndpointPrivateAccess = (bool?) content.GetValueForProperty("ResourceVpcConfigEndpointPrivateAccess",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigEndpointPrivateAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceVpcConfigEndpointPublicAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigEndpointPublicAccess = (bool?) content.GetValueForProperty("ResourceVpcConfigEndpointPublicAccess",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigEndpointPublicAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceVpcConfigPublicAccessCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigPublicAccessCidr = (string[]) content.GetValueForProperty("ResourceVpcConfigPublicAccessCidr",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigPublicAccessCidr, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ResourceVpcConfigSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigSecurityGroupId = (string[]) content.GetValueForProperty("ResourceVpcConfigSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigSecurityGroupId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ResourceVpcConfigSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigSubnetId = (string[]) content.GetValueForProperty("ResourceVpcConfigSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigSubnetId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ResourceVpcConfigVpcId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigVpcId = (string) content.GetValueForProperty("ResourceVpcConfigVpcId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigVpcId, global::System.Convert.ToString);
            }
            if (content.Contains("StatusValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).StatusValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStatus?) content.GetValueForProperty("StatusValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).StatusValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStatus.CreateFrom);
            }
            if (content.Contains("IPFamilyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).IPFamilyValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily?) content.GetValueForProperty("IPFamilyValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).IPFamilyValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily.CreateFrom);
            }
            if (content.Contains("ControlPlanePlacementGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ControlPlanePlacementGroupName = (string) content.GetValueForProperty("ControlPlanePlacementGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ControlPlanePlacementGroupName, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEksClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsEksClusterProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AccessConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponse) content.GetValueForProperty("AccessConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AccessConfigResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("CertificateAuthority"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CertificateAuthority = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificate) content.GetValueForProperty("CertificateAuthority",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CertificateAuthority, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CertificateTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectorConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponse) content.GetValueForProperty("ConnectorConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ConnectorConfigResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("Health"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Health = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterHealth) content.GetValueForProperty("Health",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Health, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterHealthTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("KubernetesNetworkConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KubernetesNetworkConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponse) content.GetValueForProperty("KubernetesNetworkConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KubernetesNetworkConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KubernetesNetworkConfigResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("Logging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Logging = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingAutoGenerated) content.GetValueForProperty("Logging",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Logging, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingAutoGeneratedTypeConverter.ConvertFrom);
            }
            if (content.Contains("OutpostConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponse) content.GetValueForProperty("OutpostConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OutpostConfigResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourcesVpcConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourcesVpcConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponse) content.GetValueForProperty("ResourcesVpcConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourcesVpcConfig, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcConfigResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatusEnumValue) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStatusEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("Arn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Arn = (string) content.GetValueForProperty("Arn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Arn, global::System.Convert.ToString);
            }
            if (content.Contains("ClientRequestToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ClientRequestToken = (string) content.GetValueForProperty("ClientRequestToken",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ClientRequestToken, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CreatedAt = (global::System.DateTime?) content.GetValueForProperty("CreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EncryptionConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).EncryptionConfig = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfig[]) content.GetValueForProperty("EncryptionConfig",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).EncryptionConfig, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfig>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EncryptionConfigTypeConverter.ConvertFrom));
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Endpoint = (string) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Endpoint, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("PlatformVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).PlatformVersion = (string) content.GetValueForProperty("PlatformVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).PlatformVersion, global::System.Convert.ToString);
            }
            if (content.Contains("RoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).RoleArn = (string) content.GetValueForProperty("RoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).RoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEksClusterPropertiesTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityOidc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).IdentityOidc = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOidc) content.GetValueForProperty("IdentityOidc",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).IdentityOidc, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OidcTypeConverter.ConvertFrom);
            }
            if (content.Contains("LoggingClusterLogging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).LoggingClusterLogging = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogSetup[]) content.GetValueForProperty("LoggingClusterLogging",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).LoggingClusterLogging, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogSetup>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogSetupTypeConverter.ConvertFrom));
            }
            if (content.Contains("AccessConfigAuthenticationMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfigAuthenticationMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticationModeEnumValue) content.GetValueForProperty("AccessConfigAuthenticationMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfigAuthenticationMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AuthenticationModeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("AccessConfigBootstrapClusterCreatorAdminPermission"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfigBootstrapClusterCreatorAdminPermission = (bool?) content.GetValueForProperty("AccessConfigBootstrapClusterCreatorAdminPermission",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AccessConfigBootstrapClusterCreatorAdminPermission, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AuthenticationModeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AuthenticationModeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationMode?) content.GetValueForProperty("AuthenticationModeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).AuthenticationModeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationMode.CreateFrom);
            }
            if (content.Contains("CertificateAuthorityData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CertificateAuthorityData = (string) content.GetValueForProperty("CertificateAuthorityData",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).CertificateAuthorityData, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorConfigActivationCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationCode = (string) content.GetValueForProperty("ConnectorConfigActivationCode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationCode, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorConfigActivationExpiry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationExpiry = (global::System.DateTime?) content.GetValueForProperty("ConnectorConfigActivationExpiry",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationExpiry, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ConnectorConfigActivationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationId = (string) content.GetValueForProperty("ConnectorConfigActivationId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigActivationId, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorConfigProvider"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigProvider = (string) content.GetValueForProperty("ConnectorConfigProvider",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigProvider, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectorConfigRoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigRoleArn = (string) content.GetValueForProperty("ConnectorConfigRoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ConnectorConfigRoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("HealthIssue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).HealthIssue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterIssue[]) content.GetValueForProperty("HealthIssue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).HealthIssue, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterIssue>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterIssueTypeConverter.ConvertFrom));
            }
            if (content.Contains("OidcIssuer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OidcIssuer = (string) content.GetValueForProperty("OidcIssuer",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OidcIssuer, global::System.Convert.ToString);
            }
            if (content.Contains("KuberneteNetworkConfigIPFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigIPFamily = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPFamilyEnumValue) content.GetValueForProperty("KuberneteNetworkConfigIPFamily",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigIPFamily, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPFamilyEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("KuberneteNetworkConfigServiceIpv4Cidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigServiceIpv4Cidr = (string) content.GetValueForProperty("KuberneteNetworkConfigServiceIpv4Cidr",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigServiceIpv4Cidr, global::System.Convert.ToString);
            }
            if (content.Contains("KuberneteNetworkConfigServiceIpv6Cidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigServiceIpv6Cidr = (string) content.GetValueForProperty("KuberneteNetworkConfigServiceIpv6Cidr",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).KuberneteNetworkConfigServiceIpv6Cidr, global::System.Convert.ToString);
            }
            if (content.Contains("OutpostConfigControlPlanePlacement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigControlPlanePlacement = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IControlPlanePlacementResponse) content.GetValueForProperty("OutpostConfigControlPlanePlacement",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigControlPlanePlacement, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ControlPlanePlacementResponseTypeConverter.ConvertFrom);
            }
            if (content.Contains("OutpostConfigControlPlaneInstanceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigControlPlaneInstanceType = (string) content.GetValueForProperty("OutpostConfigControlPlaneInstanceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigControlPlaneInstanceType, global::System.Convert.ToString);
            }
            if (content.Contains("OutpostConfigOutpostArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigOutpostArn = (string[]) content.GetValueForProperty("OutpostConfigOutpostArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).OutpostConfigOutpostArn, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ResourceVpcConfigClusterSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigClusterSecurityGroupId = (string) content.GetValueForProperty("ResourceVpcConfigClusterSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigClusterSecurityGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceVpcConfigEndpointPrivateAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigEndpointPrivateAccess = (bool?) content.GetValueForProperty("ResourceVpcConfigEndpointPrivateAccess",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigEndpointPrivateAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceVpcConfigEndpointPublicAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigEndpointPublicAccess = (bool?) content.GetValueForProperty("ResourceVpcConfigEndpointPublicAccess",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigEndpointPublicAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceVpcConfigPublicAccessCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigPublicAccessCidr = (string[]) content.GetValueForProperty("ResourceVpcConfigPublicAccessCidr",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigPublicAccessCidr, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ResourceVpcConfigSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigSecurityGroupId = (string[]) content.GetValueForProperty("ResourceVpcConfigSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigSecurityGroupId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ResourceVpcConfigSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigSubnetId = (string[]) content.GetValueForProperty("ResourceVpcConfigSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigSubnetId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ResourceVpcConfigVpcId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigVpcId = (string) content.GetValueForProperty("ResourceVpcConfigVpcId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ResourceVpcConfigVpcId, global::System.Convert.ToString);
            }
            if (content.Contains("StatusValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).StatusValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStatus?) content.GetValueForProperty("StatusValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).StatusValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStatus.CreateFrom);
            }
            if (content.Contains("IPFamilyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).IPFamilyValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily?) content.GetValueForProperty("IPFamilyValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).IPFamilyValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily.CreateFrom);
            }
            if (content.Contains("ControlPlanePlacementGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ControlPlanePlacementGroupName = (string) content.GetValueForProperty("ControlPlanePlacementGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal)this).ControlPlanePlacementGroupName, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEksClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsEksClusterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEksClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsEksClusterProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsEksClusterProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsEksClusterProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsEksCluster
    [System.ComponentModel.TypeConverter(typeof(AwsEksClusterPropertiesTypeConverter))]
    public partial interface IAwsEksClusterProperties

    {

    }
}