// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsSsmParameter</summary>
    public partial class AwsSsmParameterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsSsmParameterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllowedPattern" /> property.</summary>
        private string _allowedPattern;

        /// <summary>
        /// A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to
        /// numbers, you can specify the following: ``AllowedPattern=^\d+$``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AllowedPattern { get => this._allowedPattern; set => this._allowedPattern = value; }

        /// <summary>Backing field for <see cref="DataType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DataType? _dataType;

        /// <summary>
        /// The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DataType? DataType { get => this._dataType; set => this._dataType = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Information about the parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// The name of the parameter. The maximum length constraint listed below includes capacity for additional system attributes
        /// that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon
        /// Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not
        /// 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Policy" /> property.</summary>
        private string _policy;

        /// <summary>
        /// Information about the policies assigned to a parameter. [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html)
        /// in the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Policy { get => this._policy; set => this._policy = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny _tag;

        /// <summary>
        /// Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable
        /// you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want
        /// to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration
        /// data referenced by the parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Any()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Tier" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tier? _tier;

        /// <summary>The parameter tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tier? Tier { get => this._tier; set => this._tier = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Type? _type;

        /// <summary>The type of parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Type? Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private string _value;

        /// <summary>
        /// The parameter value. If type is ``StringList``, the system returns a comma-separated string with no spaces between commas
        /// in the ``Value`` field.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Value { get => this._value; set => this._value = value; }

        /// <summary>Creates an new <see cref="AwsSsmParameterProperties" /> instance.</summary>
        public AwsSsmParameterProperties()
        {

        }
    }
    /// Definition of awsSsmParameter
    public partial interface IAwsSsmParameterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to
        /// numbers, you can specify the following: ``AllowedPattern=^\d+$``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to numbers, you can specify the following: ``AllowedPattern=^\d+$``",
        SerializedName = @"allowedPattern",
        PossibleTypes = new [] { typeof(string) })]
        string AllowedPattern { get; set; }
        /// <summary>
        /// The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.",
        SerializedName = @"dataType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DataType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DataType? DataType { get; set; }
        /// <summary>Information about the parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Information about the parameter.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// The name of the parameter. The maximum length constraint listed below includes capacity for additional system attributes
        /// that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon
        /// Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not
        /// 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the parameter.  The maximum length constraint listed below includes capacity for additional system attributes that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// Information about the policies assigned to a parameter. [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html)
        /// in the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Information about the policies assigned to a parameter.  [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html) in the *User Guide*.",
        SerializedName = @"policies",
        PossibleTypes = new [] { typeof(string) })]
        string Policy { get; set; }
        /// <summary>
        /// Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable
        /// you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want
        /// to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration
        /// data referenced by the parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny Tag { get; set; }
        /// <summary>The parameter tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The parameter tier.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tier) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tier? Tier { get; set; }
        /// <summary>The type of parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of parameter.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Type) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Type? Type { get; set; }
        /// <summary>
        /// The parameter value. If type is ``StringList``, the system returns a comma-separated string with no spaces between commas
        /// in the ``Value`` field.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The parameter value.  If type is ``StringList``, the system returns a comma-separated string with no spaces between commas in the ``Value`` field.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string Value { get; set; }

    }
    /// Definition of awsSsmParameter
    internal partial interface IAwsSsmParameterPropertiesInternal

    {
        /// <summary>
        /// A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to
        /// numbers, you can specify the following: ``AllowedPattern=^\d+$``
        /// </summary>
        string AllowedPattern { get; set; }
        /// <summary>
        /// The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.DataType? DataType { get; set; }
        /// <summary>Information about the parameter.</summary>
        string Description { get; set; }
        /// <summary>
        /// The name of the parameter. The maximum length constraint listed below includes capacity for additional system attributes
        /// that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon
        /// Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not
        /// 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
        /// </summary>
        string Name { get; set; }
        /// <summary>
        /// Information about the policies assigned to a parameter. [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html)
        /// in the *User Guide*.
        /// </summary>
        string Policy { get; set; }
        /// <summary>
        /// Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable
        /// you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want
        /// to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration
        /// data referenced by the parameter.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny Tag { get; set; }
        /// <summary>The parameter tier.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Tier? Tier { get; set; }
        /// <summary>The type of parameter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Type? Type { get; set; }
        /// <summary>
        /// The parameter value. If type is ``StringList``, the system returns a comma-separated string with no spaces between commas
        /// in the ``Value`` field.
        /// </summary>
        string Value { get; set; }

    }
}