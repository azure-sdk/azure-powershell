// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ClusterConfig</summary>
    public partial class ClusterConfig
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject into a new instance of <see cref="ClusterConfig" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ClusterConfig(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_coldStorageOption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("coldStorageOptions"), out var __jsonColdStorageOptions) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ColdStorageOptions.FromJson(__jsonColdStorageOptions) : ColdStorageOption;}
            {_dedicatedMasterType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("dedicatedMasterType"), out var __jsonDedicatedMasterType) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OpenSearchPartitionInstanceTypeEnumValue.FromJson(__jsonDedicatedMasterType) : DedicatedMasterType;}
            {_instanceType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("instanceType"), out var __jsonInstanceType) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OpenSearchPartitionInstanceTypeEnumValue.FromJson(__jsonInstanceType) : InstanceType;}
            {_warmType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("warmType"), out var __jsonWarmType) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OpenSearchWarmPartitionInstanceTypeEnumValue.FromJson(__jsonWarmType) : WarmType;}
            {_zoneAwarenessConfig = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("zoneAwarenessConfig"), out var __jsonZoneAwarenessConfig) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ZoneAwarenessConfig.FromJson(__jsonZoneAwarenessConfig) : ZoneAwarenessConfig;}
            {_dedicatedMasterCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("dedicatedMasterCount"), out var __jsonDedicatedMasterCount) ? (int?)__jsonDedicatedMasterCount : DedicatedMasterCount;}
            {_dedicatedMasterEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("dedicatedMasterEnabled"), out var __jsonDedicatedMasterEnabled) ? (bool?)__jsonDedicatedMasterEnabled : DedicatedMasterEnabled;}
            {_instanceCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("instanceCount"), out var __jsonInstanceCount) ? (int?)__jsonInstanceCount : InstanceCount;}
            {_multiAzWithStandbyEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("multiAZWithStandbyEnabled"), out var __jsonMultiAzWithStandbyEnabled) ? (bool?)__jsonMultiAzWithStandbyEnabled : MultiAzWithStandbyEnabled;}
            {_warmCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("warmCount"), out var __jsonWarmCount) ? (int?)__jsonWarmCount : WarmCount;}
            {_warmEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("warmEnabled"), out var __jsonWarmEnabled) ? (bool?)__jsonWarmEnabled : WarmEnabled;}
            {_zoneAwarenessEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("zoneAwarenessEnabled"), out var __jsonZoneAwarenessEnabled) ? (bool?)__jsonZoneAwarenessEnabled : ZoneAwarenessEnabled;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfig.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfig.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterConfig FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json ? new ClusterConfig(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="ClusterConfig" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ClusterConfig" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._coldStorageOption ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._coldStorageOption.ToJson(null,serializationMode) : null, "coldStorageOptions" ,container.Add );
            AddIf( null != this._dedicatedMasterType ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._dedicatedMasterType.ToJson(null,serializationMode) : null, "dedicatedMasterType" ,container.Add );
            AddIf( null != this._instanceType ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._instanceType.ToJson(null,serializationMode) : null, "instanceType" ,container.Add );
            AddIf( null != this._warmType ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._warmType.ToJson(null,serializationMode) : null, "warmType" ,container.Add );
            AddIf( null != this._zoneAwarenessConfig ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._zoneAwarenessConfig.ToJson(null,serializationMode) : null, "zoneAwarenessConfig" ,container.Add );
            AddIf( null != this._dedicatedMasterCount ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._dedicatedMasterCount) : null, "dedicatedMasterCount" ,container.Add );
            AddIf( null != this._dedicatedMasterEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._dedicatedMasterEnabled) : null, "dedicatedMasterEnabled" ,container.Add );
            AddIf( null != this._instanceCount ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._instanceCount) : null, "instanceCount" ,container.Add );
            AddIf( null != this._multiAzWithStandbyEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._multiAzWithStandbyEnabled) : null, "multiAZWithStandbyEnabled" ,container.Add );
            AddIf( null != this._warmCount ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._warmCount) : null, "warmCount" ,container.Add );
            AddIf( null != this._warmEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._warmEnabled) : null, "warmEnabled" ,container.Add );
            AddIf( null != this._zoneAwarenessEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._zoneAwarenessEnabled) : null, "zoneAwarenessEnabled" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}