// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ServiceConnectService</summary>
    public partial class ServiceConnectService :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectService,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectServiceInternal
    {

        /// <summary>Backing field for <see cref="ClientAlias" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectClientAlias[] _clientAlias;

        /// <summary>
        /// The list of client aliases for this Service Connect service. You use these to assign names that can be used by client
        /// applications. The maximum number of client aliases that you can have in this list is 1. Each alias ('endpoint') is a fully-qualified
        /// name and port number that other Amazon ECS tasks ('clients') can use to connect to this service. Each name and port mapping
        /// must be unique within the namespace. For each ``ServiceConnectService``, you must provide at least one ``clientAlias``
        /// with one ``port``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectClientAlias[] ClientAlias { get => this._clientAlias; set => this._clientAlias = value; }

        /// <summary>Backing field for <see cref="DiscoveryName" /> property.</summary>
        private string _discoveryName;

        /// <summary>
        /// The ``discoveryName`` is the name of the new CMAP service that Amazon ECS creates for this Amazon ECS service. This must
        /// be unique within the CMAP namespace. The name can contain up to 64 characters. The name can include lowercase letters,
        /// numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. If the ``discoveryName`` isn't specified,
        /// the port mapping name from the task definition is used in ``portName.namespace``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DiscoveryName { get => this._discoveryName; set => this._discoveryName = value; }

        /// <summary>Backing field for <see cref="IngressPortOverride" /> property.</summary>
        private int? _ingressPortOverride;

        /// <summary>
        /// The port number for the Service Connect proxy to listen on. Use the value of this field to bypass the proxy for traffic
        /// on the port number specified in the named ``portMapping`` in the task definition of this application, and then use it
        /// in your VPC security groups to allow traffic into the proxy for this Amazon ECS service. In ``awsvpc`` mode and Fargate,
        /// the default value is the container port number. The container port number is in the ``portMapping`` in the task definition.
        /// In bridge mode, the default value is the ephemeral port of the Service Connect proxy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? IngressPortOverride { get => this._ingressPortOverride; set => this._ingressPortOverride = value; }

        /// <summary>The ARN of the AWS Private Certificate Authority certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string IssuerCertificateAuthorityAwsPcaAuthorityArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfigurationInternal)Tl).IssuerCertificateAuthorityAwsPcaAuthorityArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfigurationInternal)Tl).IssuerCertificateAuthorityAwsPcaAuthorityArn = value ?? null; }

        /// <summary>Internal Acessors for Timeout</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeoutConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectServiceInternal.Timeout { get => (this._timeout = this._timeout ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TimeoutConfiguration()); set { {_timeout = value;} } }

        /// <summary>Internal Acessors for Tl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectServiceInternal.Tl { get => (this._tl = this._tl ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceConnectTlsConfiguration()); set { {_tl = value;} } }

        /// <summary>Internal Acessors for TlIssuerCertificateAuthority</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsCertificateAuthority Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectServiceInternal.TlIssuerCertificateAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfigurationInternal)Tl).IssuerCertificateAuthority; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfigurationInternal)Tl).IssuerCertificateAuthority = value; }

        /// <summary>Backing field for <see cref="PortName" /> property.</summary>
        private string _portName;

        /// <summary>
        /// The ``portName`` must match the name of one of the ``portMappings`` from all the containers in the task definition of
        /// this Amazon ECS service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PortName { get => this._portName; set => this._portName = value; }

        /// <summary>Backing field for <see cref="Timeout" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeoutConfiguration _timeout;

        /// <summary>
        /// A reference to an object that represents the configured timeouts for Service Connect. An object that represents the timeout
        /// configurations for Service Connect. If ``idleTimeout`` is set to a time that is less than ``perRequestTimeout``, the connection
        /// will close when the ``idleTimeout`` is reached and not the ``perRequestTimeout``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeoutConfiguration Timeout { get => (this._timeout = this._timeout ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TimeoutConfiguration()); set => this._timeout = value; }

        /// <summary>
        /// The amount of time in seconds a connection will stay active while idle. A value of ``0`` can be set to disable ``idleTimeout``.
        /// The ``idleTimeout`` default for ``HTTP``/``HTTP2``/``GRPC`` is 5 minutes. The ``idleTimeout`` default for ``TCP`` is 1
        /// hour.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? TimeoutIdleTimeoutSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeoutConfigurationInternal)Timeout).IdleTimeoutSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeoutConfigurationInternal)Timeout).IdleTimeoutSecond = value ?? default(int); }

        /// <summary>
        /// The amount of time waiting for the upstream to respond with a complete response per request. A value of ``0`` can be set
        /// to disable ``perRequestTimeout``. ``perRequestTimeout`` can only be set if Service Connect ``appProtocol`` isn't ``TCP``.
        /// Only ``idleTimeout`` is allowed for ``TCP`` ``appProtocol``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? TimeoutPerRequestTimeoutSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeoutConfigurationInternal)Timeout).PerRequestTimeoutSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeoutConfigurationInternal)Timeout).PerRequestTimeoutSecond = value ?? default(int); }

        /// <summary>Backing field for <see cref="Tl" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfiguration _tl;

        /// <summary>
        /// A reference to an object that represents a Transport Layer Security (TLS) configuration. An object that represents the
        /// configuration for Service Connect TLS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfiguration Tl { get => (this._tl = this._tl ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceConnectTlsConfiguration()); set => this._tl = value; }

        /// <summary>The AWS Key Management Service key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string TlKmsKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfigurationInternal)Tl).KmsKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfigurationInternal)Tl).KmsKey = value ?? null; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string TlRoleArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfigurationInternal)Tl).RoleArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfigurationInternal)Tl).RoleArn = value ?? null; }

        /// <summary>Creates an new <see cref="ServiceConnectService" /> instance.</summary>
        public ServiceConnectService()
        {

        }
    }
    /// Definition of ServiceConnectService
    public partial interface IServiceConnectService :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The list of client aliases for this Service Connect service. You use these to assign names that can be used by client
        /// applications. The maximum number of client aliases that you can have in this list is 1. Each alias ('endpoint') is a fully-qualified
        /// name and port number that other Amazon ECS tasks ('clients') can use to connect to this service. Each name and port mapping
        /// must be unique within the namespace. For each ``ServiceConnectService``, you must provide at least one ``clientAlias``
        /// with one ``port``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of client aliases for this Service Connect service. You use these to assign names that can be used by client applications. The maximum number of client aliases that you can have in this list is 1. Each alias ('endpoint') is a fully-qualified name and port number that other Amazon ECS tasks ('clients') can use to connect to this service. Each name and port mapping must be unique within the namespace. For each ``ServiceConnectService``, you must provide at least one ``clientAlias`` with one ``port``.",
        SerializedName = @"clientAliases",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectClientAlias) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectClientAlias[] ClientAlias { get; set; }
        /// <summary>
        /// The ``discoveryName`` is the name of the new CMAP service that Amazon ECS creates for this Amazon ECS service. This must
        /// be unique within the CMAP namespace. The name can contain up to 64 characters. The name can include lowercase letters,
        /// numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. If the ``discoveryName`` isn't specified,
        /// the port mapping name from the task definition is used in ``portName.namespace``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ``discoveryName`` is the name of the new CMAP service that Amazon ECS creates for this Amazon ECS service. This must be unique within the CMAP namespace. The name can contain up to 64 characters. The name can include lowercase letters, numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. If the ``discoveryName`` isn't specified, the port mapping name from the task definition is used in ``portName.namespace``.",
        SerializedName = @"discoveryName",
        PossibleTypes = new [] { typeof(string) })]
        string DiscoveryName { get; set; }
        /// <summary>
        /// The port number for the Service Connect proxy to listen on. Use the value of this field to bypass the proxy for traffic
        /// on the port number specified in the named ``portMapping`` in the task definition of this application, and then use it
        /// in your VPC security groups to allow traffic into the proxy for this Amazon ECS service. In ``awsvpc`` mode and Fargate,
        /// the default value is the container port number. The container port number is in the ``portMapping`` in the task definition.
        /// In bridge mode, the default value is the ephemeral port of the Service Connect proxy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The port number for the Service Connect proxy to listen on. Use the value of this field to bypass the proxy for traffic on the port number specified in the named ``portMapping`` in the task definition of this application, and then use it in your VPC security groups to allow traffic into the proxy for this Amazon ECS service. In ``awsvpc`` mode and Fargate, the default value is the container port number. The container port number is in the ``portMapping`` in the task definition. In bridge mode, the default value is the ephemeral port of the Service Connect proxy.",
        SerializedName = @"ingressPortOverride",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressPortOverride { get; set; }
        /// <summary>The ARN of the AWS Private Certificate Authority certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of the AWS Private Certificate Authority certificate.",
        SerializedName = @"awsPcaAuthorityArn",
        PossibleTypes = new [] { typeof(string) })]
        string IssuerCertificateAuthorityAwsPcaAuthorityArn { get; set; }
        /// <summary>
        /// The ``portName`` must match the name of one of the ``portMappings`` from all the containers in the task definition of
        /// this Amazon ECS service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ``portName`` must match the name of one of the ``portMappings`` from all the containers in the task definition of this Amazon ECS service.",
        SerializedName = @"portName",
        PossibleTypes = new [] { typeof(string) })]
        string PortName { get; set; }
        /// <summary>
        /// The amount of time in seconds a connection will stay active while idle. A value of ``0`` can be set to disable ``idleTimeout``.
        /// The ``idleTimeout`` default for ``HTTP``/``HTTP2``/``GRPC`` is 5 minutes. The ``idleTimeout`` default for ``TCP`` is 1
        /// hour.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of time in seconds a connection will stay active while idle. A value of ``0`` can be set to disable ``idleTimeout``. The ``idleTimeout`` default for ``HTTP``/``HTTP2``/``GRPC`` is 5 minutes. The ``idleTimeout`` default for ``TCP`` is 1 hour.",
        SerializedName = @"idleTimeoutSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeoutIdleTimeoutSecond { get; set; }
        /// <summary>
        /// The amount of time waiting for the upstream to respond with a complete response per request. A value of ``0`` can be set
        /// to disable ``perRequestTimeout``. ``perRequestTimeout`` can only be set if Service Connect ``appProtocol`` isn't ``TCP``.
        /// Only ``idleTimeout`` is allowed for ``TCP`` ``appProtocol``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of time waiting for the upstream to respond with a complete response per request. A value of ``0`` can be set to disable ``perRequestTimeout``. ``perRequestTimeout`` can only be set if Service Connect ``appProtocol`` isn't ``TCP``. Only ``idleTimeout`` is allowed for ``TCP`` ``appProtocol``.",
        SerializedName = @"perRequestTimeoutSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeoutPerRequestTimeoutSecond { get; set; }
        /// <summary>The AWS Key Management Service key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AWS Key Management Service key.",
        SerializedName = @"kmsKey",
        PossibleTypes = new [] { typeof(string) })]
        string TlKmsKey { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.",
        SerializedName = @"roleArn",
        PossibleTypes = new [] { typeof(string) })]
        string TlRoleArn { get; set; }

    }
    /// Definition of ServiceConnectService
    internal partial interface IServiceConnectServiceInternal

    {
        /// <summary>
        /// The list of client aliases for this Service Connect service. You use these to assign names that can be used by client
        /// applications. The maximum number of client aliases that you can have in this list is 1. Each alias ('endpoint') is a fully-qualified
        /// name and port number that other Amazon ECS tasks ('clients') can use to connect to this service. Each name and port mapping
        /// must be unique within the namespace. For each ``ServiceConnectService``, you must provide at least one ``clientAlias``
        /// with one ``port``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectClientAlias[] ClientAlias { get; set; }
        /// <summary>
        /// The ``discoveryName`` is the name of the new CMAP service that Amazon ECS creates for this Amazon ECS service. This must
        /// be unique within the CMAP namespace. The name can contain up to 64 characters. The name can include lowercase letters,
        /// numbers, underscores (_), and hyphens (-). The name can't start with a hyphen. If the ``discoveryName`` isn't specified,
        /// the port mapping name from the task definition is used in ``portName.namespace``.
        /// </summary>
        string DiscoveryName { get; set; }
        /// <summary>
        /// The port number for the Service Connect proxy to listen on. Use the value of this field to bypass the proxy for traffic
        /// on the port number specified in the named ``portMapping`` in the task definition of this application, and then use it
        /// in your VPC security groups to allow traffic into the proxy for this Amazon ECS service. In ``awsvpc`` mode and Fargate,
        /// the default value is the container port number. The container port number is in the ``portMapping`` in the task definition.
        /// In bridge mode, the default value is the ephemeral port of the Service Connect proxy.
        /// </summary>
        int? IngressPortOverride { get; set; }
        /// <summary>The ARN of the AWS Private Certificate Authority certificate.</summary>
        string IssuerCertificateAuthorityAwsPcaAuthorityArn { get; set; }
        /// <summary>
        /// The ``portName`` must match the name of one of the ``portMappings`` from all the containers in the task definition of
        /// this Amazon ECS service.
        /// </summary>
        string PortName { get; set; }
        /// <summary>
        /// A reference to an object that represents the configured timeouts for Service Connect. An object that represents the timeout
        /// configurations for Service Connect. If ``idleTimeout`` is set to a time that is less than ``perRequestTimeout``, the connection
        /// will close when the ``idleTimeout`` is reached and not the ``perRequestTimeout``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITimeoutConfiguration Timeout { get; set; }
        /// <summary>
        /// The amount of time in seconds a connection will stay active while idle. A value of ``0`` can be set to disable ``idleTimeout``.
        /// The ``idleTimeout`` default for ``HTTP``/``HTTP2``/``GRPC`` is 5 minutes. The ``idleTimeout`` default for ``TCP`` is 1
        /// hour.
        /// </summary>
        int? TimeoutIdleTimeoutSecond { get; set; }
        /// <summary>
        /// The amount of time waiting for the upstream to respond with a complete response per request. A value of ``0`` can be set
        /// to disable ``perRequestTimeout``. ``perRequestTimeout`` can only be set if Service Connect ``appProtocol`` isn't ``TCP``.
        /// Only ``idleTimeout`` is allowed for ``TCP`` ``appProtocol``.
        /// </summary>
        int? TimeoutPerRequestTimeoutSecond { get; set; }
        /// <summary>
        /// A reference to an object that represents a Transport Layer Security (TLS) configuration. An object that represents the
        /// configuration for Service Connect TLS.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsConfiguration Tl { get; set; }
        /// <summary>
        /// The signer certificate authority. An object that represents the AWS Private Certificate Authority certificate.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectTlsCertificateAuthority TlIssuerCertificateAuthority { get; set; }
        /// <summary>The AWS Key Management Service key.</summary>
        string TlKmsKey { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role that's associated with the Service Connect TLS.
        /// </summary>
        string TlRoleArn { get; set; }

    }
}