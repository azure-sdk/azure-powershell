// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsCodeBuildProject</summary>
    public partial class AwsCodeBuildProjectProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary><p>The Amazon Resource Name (ARN) of the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Backing field for <see cref="Artifact" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifacts _artifact;

        /// <summary><p>Information about the build output artifacts for the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifacts Artifact { get => (this._artifact = this._artifact ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectArtifacts()); set => this._artifact = value; }

        /// <summary>
        /// <p> Set to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is
        /// Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ArtifactEncryptionDisabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).EncryptionDisabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).EncryptionDisabled = value ?? default(bool); }

        /// <summary><p> An identifier for this artifact definition. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ArtifactIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).ArtifactIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).ArtifactIdentifier = value ?? null; }

        /// <summary>
        /// <p>Information about the build output artifact location:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>,
        /// CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead
        /// of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified,
        /// because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name
        /// of the output bucket.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ArtifactLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).Location = value ?? null; }

        /// <summary>
        /// <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that CodeBuild uses to name and store the
        /// output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this
        /// value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If
        /// <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is
        /// produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output artifact object.
        /// If you set the name to be a forward slash ('/'), the artifact is stored in the root of the output bucket.</p> </li> </ul>
        /// <p>For example:</p> <ul> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code>
        /// is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, then the output artifact
        /// is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>. </p> </li> <li> <p> If <code>path</code> is empty,
        /// <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to '<code>/</code>', the output artifact
        /// is stored in the root of the output bucket. </p> </li> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>,
        /// <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to '<code>/</code>', the output
        /// artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;</code>. </p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ArtifactName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).Name = value ?? null; }

        /// <summary>
        /// <p> If this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec
        /// file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your
        /// artifact name so that it is always unique. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ArtifactOverrideArtifactName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).OverrideArtifactName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).OverrideArtifactName = value ?? default(bool); }

        /// <summary>
        /// <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that CodeBuild uses to name and store the
        /// output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this
        /// value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If
        /// <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is
        /// produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output artifact. If
        /// <code>path</code> is not specified, <code>path</code> is not used.</p> </li> </ul> <p>For example, if <code>path</code>
        /// is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set
        /// to <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at <code>MyArtifacts/MyArtifact.zip</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ArtifactPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).Path; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).Path = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess? ArtifactsBucketOwnerAccessValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).BucketOwnerAccessValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).BucketOwnerAccessValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactsType? ArtifactsTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).TypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).TypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactsType)""); }

        /// <summary><p>The resource value that applies to the specified authorization type.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).AuthResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).AuthResource = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceAuthType? AuthTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).AuthTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).AuthTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceAuthType)""); }

        /// <summary>Backing field for <see cref="Badge" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBadge _badge;

        /// <summary><p>Information about the build badge for the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBadge Badge { get => (this._badge = this._badge ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectBadge()); set => this._badge = value; }

        /// <summary>
        /// <p>Set this to true to generate a publicly accessible URL for your project's build badge.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? BadgeEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBadgeInternal)Badge).BadgeEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBadgeInternal)Badge).BadgeEnabled = value ?? default(bool); }

        /// <summary>
        /// <p>The publicly-accessible URL through which you can access the build badge for your project. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string BadgeRequestUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBadgeInternal)Badge).BadgeRequestUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBadgeInternal)Badge).BadgeRequestUrl = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BatchReportModeType? BatchReportModeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).BatchReportModeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).BatchReportModeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BatchReportModeType)""); }

        /// <summary>Backing field for <see cref="BuildBatchConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfig _buildBatchConfig;

        /// <summary>
        /// <p>A <a>ProjectBuildBatchConfig</a> object that defines the batch build options for the project.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfig BuildBatchConfig { get => (this._buildBatchConfig = this._buildBatchConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectBuildBatchConfig()); set => this._buildBatchConfig = value; }

        /// <summary>
        /// <p>Specifies if the build artifacts for the batch build should be combined into a single artifact location.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? BuildBatchConfigCombineArtifact { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).CombineArtifact; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).CombineArtifact = value ?? default(bool); }

        /// <summary><p>Specifies the service role ARN for the batch build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string BuildBatchConfigServiceRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).ServiceRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).ServiceRole = value ?? null; }

        /// <summary>
        /// <p>Specifies the maximum amount of time, in minutes, that the batch build must be completed in.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? BuildBatchConfigTimeoutInMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).TimeoutInMin; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).TimeoutInMin = value ?? default(int); }

        /// <summary>
        /// <p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>name</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string BuildStatusConfigContext { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).BuildStatusConfigContext; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).BuildStatusConfigContext = value ?? null; }

        /// <summary>
        /// <p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>url</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string BuildStatusConfigTargetUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).BuildStatusConfigTargetUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).BuildStatusConfigTargetUrl = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookBuildType? BuildTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).BuildTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).BuildTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookBuildType)""); }

        /// <summary>Backing field for <see cref="Cache" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCache _cache;

        /// <summary><p>Information about the cache for the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCache Cache { get => (this._cache = this._cache ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectCache()); set => this._cache = value; }

        /// <summary>
        /// <p>Information about the cache location: </p> <ul> <li> <p> <code>NO_CACHE</code> or <code>LOCAL</code>: This value is
        /// ignored.</p> </li> <li> <p> <code>S3</code>: This is the S3 bucket name/prefix.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CacheLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCacheInternal)Cache).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCacheInternal)Cache).Location = value ?? null; }

        /// <summary>
        /// <p>An array of strings that specify the local cache modes. You can use one or more local cache modes at the same time.
        /// This is only used for <code>LOCAL</code> cache types.</p> <p>Possible values are:</p> <dl> <dt>LOCAL_SOURCE_CACHE</dt>
        /// <dd> <p>Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only
        /// the change between commits. This mode is a good choice for projects with a clean working directory and a source that is
        /// a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise,
        /// or Bitbucket), the option is ignored. </p> </dd> <dt>LOCAL_DOCKER_LAYER_CACHE</dt> <dd> <p>Caches existing Docker layers.
        /// This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues
        /// caused by pulling large Docker images down from the network. </p> <note> <ul> <li> <p>You can use a Docker layer cache
        /// in the Linux environment only. </p> </li> <li> <p>The <code>privileged</code> flag must be set so that your project has
        /// the required Docker permissions. </p> </li> <li> <p>You should consider the security implications before you use a Docker
        /// layer cache. </p> </li> </ul> </note> </dd> <dt>LOCAL_CUSTOM_CACHE</dt> <dd> <p>Caches directories you specify in the
        /// buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache
        /// modes. If you use a custom cache: </p> <ul> <li> <p>Only directories can be specified for caching. You cannot specify
        /// individual files. </p> </li> <li> <p>Symlinks are used to reference cached directories. </p> </li> <li> <p>Cached directories
        /// are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the
        /// same name. Directories are specified using cache paths in the buildspec file. </p> </li> </ul> </dd> </dl>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CacheMode[] CacheMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCacheInternal)Cache).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCacheInternal)Cache).Mode = value ?? null /* arrayOf */; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CacheType? CacheTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCacheInternal)Cache).TypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCacheInternal)Cache).TypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CacheType)""); }

        /// <summary>
        /// <p> The group name of the logs in CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CloudWatchLogGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).CloudWatchLogGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).CloudWatchLogGroupName = value ?? null; }

        /// <summary>
        /// <p> The prefix of the stream name of the CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CloudWatchLogStreamName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).CloudWatchLogStreamName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).CloudWatchLogStreamName = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? CloudWatchLogsStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).CloudWatchLogsStatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).CloudWatchLogsStatusValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ComputeType? ComputeTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).ComputeTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).ComputeTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ComputeType)""); }

        /// <summary>Backing field for <see cref="ConcurrentBuildLimit" /> property.</summary>
        private int? _concurrentBuildLimit;

        /// <summary>
        /// <p>The maximum number of concurrent builds that are allowed for this project.</p> <p>New builds are only started if the
        /// current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds
        /// are throttled and are not run.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? ConcurrentBuildLimit { get => this._concurrentBuildLimit; set => this._concurrentBuildLimit = value; }

        /// <summary>Backing field for <see cref="Created" /> property.</summary>
        private global::System.DateTime? _created;

        /// <summary><p>When the build project was created, expressed in Unix time format.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? Created { get => this._created; set => this._created = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType? CredentialProviderValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).CredentialProviderValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).CredentialProviderValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType)""); }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary><p>A description that makes the build project easy to identify.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="EncryptionKey" /> property.</summary>
        private string _encryptionKey;

        /// <summary>
        /// <p>The Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.</p> <note>
        /// <p>You can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that
        /// key. </p> </note> <p>You can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias
        /// (using the format <code>alias/&lt;alias-name&gt;</code>). If you don't specify a value, CodeBuild uses the managed CMK
        /// for Amazon Simple Storage Service (Amazon S3). </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string EncryptionKey { get => this._encryptionKey; set => this._encryptionKey = value; }

        /// <summary>Backing field for <see cref="Environment" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironment _environment;

        /// <summary><p>Information about the build environment for this build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironment Environment { get => (this._environment = this._environment ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectEnvironment()); set => this._environment = value; }

        /// <summary>
        /// <p>The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build
        /// project. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate'>certificate</a>
        /// in the <i>CodeBuild User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EnvironmentCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).Certificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).Certificate = value ?? null; }

        /// <summary>
        /// <p>The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:</p>
        /// <ul> <li> <p>For an image tag: <code>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</code>. For example, in the Docker
        /// repository that CodeBuild uses to manage its Docker images, this would be <code>aws/codebuild/standard:4.0</code>. </p>
        /// </li> <li> <p>For an image digest: <code>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</code>. For example, to specify
        /// an image with the digest 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,' use <code>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</code>.</p>
        /// </li> </ul> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html'>Docker
        /// images provided by CodeBuild</a> in the <i>CodeBuild user guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EnvironmentImage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).Image; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).Image = value ?? null; }

        /// <summary>
        /// <p>Enables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build
        /// Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is <code>false</code>.</p>
        /// <p>You can initialize the Docker daemon during the install phase of your build by adding one of the following sets of
        /// commands to the install phase of your buildspec file:</p> <p>If the operating system's base image is Ubuntu Linux:</p>
        /// <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code>
        /// </p> <p> <code>- timeout 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p> <p>If the operating system's
        /// base image is Alpine Linux and the previous command does not work, add the <code>-t</code> argument to <code>timeout</code>:</p>
        /// <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code>
        /// </p> <p> <code>- timeout -t 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? EnvironmentPrivilegedMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).PrivilegedMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).PrivilegedMode = value ?? default(bool); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentType? EnvironmentTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).TypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).TypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentType)""); }

        /// <summary>
        /// <p>A set of environment variables to make available to builds for this build project.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariable[] EnvironmentVariable { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).EnvironmentVariable; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).EnvironmentVariable = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="FileSystemLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectFileSystemLocation[] _fileSystemLocation;

        /// <summary>
        /// <p> An array of <code>ProjectFileSystemLocation</code> objects for a CodeBuild build project. A <code>ProjectFileSystemLocation</code>
        /// object specifies the <code>identifier</code>, <code>location</code>, <code>mountOptions</code>, <code>mountPoint</code>,
        /// and <code>type</code> of a file system created using Amazon Elastic File System. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectFileSystemLocation[] FileSystemLocation { get => this._fileSystemLocation; set => this._fileSystemLocation = value; }

        /// <summary><p>Specifies the compute fleet ARN for the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string FleetArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).FleetArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).FleetArn = value ?? null; }

        /// <summary><p> Set to true to fetch Git submodules for your CodeBuild build project. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? GitSubmoduleConfigFetchSubmodule { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).GitSubmoduleConfigFetchSubmodule; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).GitSubmoduleConfigFetchSubmodule = value ?? default(bool); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImagePullCredentialsType? ImagePullCredentialsTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).ImagePullCredentialsTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).ImagePullCredentialsTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImagePullCredentialsType)""); }

        /// <summary>Backing field for <see cref="LastModified" /> property.</summary>
        private global::System.DateTime? _lastModified;

        /// <summary>
        /// <p>When the build project's settings were last modified, expressed in Unix time format.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModified { get => this._lastModified; set => this._lastModified = value; }

        /// <summary>Backing field for <see cref="LogsConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfig _logsConfig;

        /// <summary>
        /// <p>Information about logs for the build project. A project can create logs in CloudWatch Logs, an S3 bucket, or both.
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfig LogsConfig { get => (this._logsConfig = this._logsConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogsConfig()); set => this._logsConfig = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess? LogsConfigS3LogsBucketOwnerAccessValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).BucketOwnerAccessValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).BucketOwnerAccessValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess)""); }

        /// <summary>Internal Acessors for Artifact</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifacts Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.Artifact { get => (this._artifact = this._artifact ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectArtifacts()); set { {_artifact = value;} } }

        /// <summary>Internal Acessors for ArtifactBucketOwnerAccess</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBucketOwnerAccessEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.ArtifactBucketOwnerAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).BucketOwnerAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).BucketOwnerAccess = value; }

        /// <summary>Internal Acessors for ArtifactNamespaceType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArtifactNamespaceEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.ArtifactNamespaceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).NamespaceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).NamespaceType = value; }

        /// <summary>Internal Acessors for ArtifactPackaging</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArtifactPackagingEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.ArtifactPackaging { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).Packaging; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).Packaging = value; }

        /// <summary>Internal Acessors for ArtifactType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArtifactsTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.ArtifactType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).Type = value; }

        /// <summary>Internal Acessors for AuthType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuthTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.AuthType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).AuthType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).AuthType = value; }

        /// <summary>Internal Acessors for Badge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBadge Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.Badge { get => (this._badge = this._badge ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectBadge()); set { {_badge = value;} } }

        /// <summary>Internal Acessors for BuildBatchConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.BuildBatchConfig { get => (this._buildBatchConfig = this._buildBatchConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectBuildBatchConfig()); set { {_buildBatchConfig = value;} } }

        /// <summary>Internal Acessors for BuildBatchConfigBatchReportMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBatchReportModeTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.BuildBatchConfigBatchReportMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).BatchReportMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).BatchReportMode = value; }

        /// <summary>Internal Acessors for BuildBatchConfigRestriction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBatchRestrictions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.BuildBatchConfigRestriction { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).Restriction; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).Restriction = value; }

        /// <summary>Internal Acessors for Cache</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCache Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.Cache { get => (this._cache = this._cache ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectCache()); set { {_cache = value;} } }

        /// <summary>Internal Acessors for CacheType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICacheTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.CacheType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCacheInternal)Cache).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCacheInternal)Cache).Type = value; }

        /// <summary>Internal Acessors for CloudWatchLogStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigStatusTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.CloudWatchLogStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).CloudWatchLogStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).CloudWatchLogStatus = value; }

        /// <summary>Internal Acessors for Environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironment Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.Environment { get => (this._environment = this._environment ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectEnvironment()); set { {_environment = value;} } }

        /// <summary>Internal Acessors for EnvironmentComputeType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IComputeTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.EnvironmentComputeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).ComputeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).ComputeType = value; }

        /// <summary>Internal Acessors for EnvironmentFleet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectFleet Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.EnvironmentFleet { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).Fleet; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).Fleet = value; }

        /// <summary>Internal Acessors for EnvironmentImagePullCredentialsType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImagePullCredentialsTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.EnvironmentImagePullCredentialsType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).ImagePullCredentialsType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).ImagePullCredentialsType = value; }

        /// <summary>Internal Acessors for EnvironmentRegistryCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRegistryCredential Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.EnvironmentRegistryCredential { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).RegistryCredential; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).RegistryCredential = value; }

        /// <summary>Internal Acessors for EnvironmentType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.EnvironmentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).Type = value; }

        /// <summary>Internal Acessors for LogConfigCloudWatchLog</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.LogConfigCloudWatchLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).CloudWatchLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).CloudWatchLog = value; }

        /// <summary>Internal Acessors for LogConfigS3Log</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.LogConfigS3Log { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3Log; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3Log = value; }

        /// <summary>Internal Acessors for LogsConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.LogsConfig { get => (this._logsConfig = this._logsConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogsConfig()); set { {_logsConfig = value;} } }

        /// <summary>Internal Acessors for ProjectVisibility</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectVisibilityTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.ProjectVisibility { get => (this._projectVisibility = this._projectVisibility ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectVisibilityTypeEnumValue()); set { {_projectVisibility = value;} } }

        /// <summary>Internal Acessors for RegistryCredentialProvider</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICredentialProviderTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.RegistryCredentialProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).RegistryCredentialProvider; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).RegistryCredentialProvider = value; }

        /// <summary>Internal Acessors for S3LogBucketOwnerAccess</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBucketOwnerAccessEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.S3LogBucketOwnerAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3LogBucketOwnerAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3LogBucketOwnerAccess = value; }

        /// <summary>Internal Acessors for S3LogStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigStatusTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.S3LogStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3LogStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3LogStatus = value; }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSource Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectSource()); set { {_source = value;} } }

        /// <summary>Internal Acessors for SourceAuth</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuth Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.SourceAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).Auth; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).Auth = value; }

        /// <summary>Internal Acessors for SourceBuildStatusConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBuildStatusConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.SourceBuildStatusConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).BuildStatusConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).BuildStatusConfig = value; }

        /// <summary>Internal Acessors for SourceGitSubmodulesConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGitSubmodulesConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.SourceGitSubmodulesConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).GitSubmodulesConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).GitSubmodulesConfig = value; }

        /// <summary>Internal Acessors for SourceType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.SourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).Type = value; }

        /// <summary>Internal Acessors for VpcConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.VpcConfig { get => (this._vpcConfig = this._vpcConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcConfig()); set { {_vpcConfig = value;} } }

        /// <summary>Internal Acessors for Webhook</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhook Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.Webhook { get => (this._webhook = this._webhook ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Webhook()); set { {_webhook = value;} } }

        /// <summary>Internal Acessors for WebhookBuildType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookBuildTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCodeBuildProjectPropertiesInternal.WebhookBuildType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).BuildType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).BuildType = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary><p>The name of the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactNamespace? NamespaceTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).NamespaceTypeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).NamespaceTypeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactNamespace)""); }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactPackaging? PackagingValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).PackagingValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifactsInternal)Artifact).PackagingValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactPackaging)""); }

        /// <summary>Backing field for <see cref="ProjectVisibility" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectVisibilityTypeEnumValue _projectVisibility;

        /// <summary>Property projectVisibility</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectVisibilityTypeEnumValue ProjectVisibility { get => (this._projectVisibility = this._projectVisibility ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectVisibilityTypeEnumValue()); set => this._projectVisibility = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProjectVisibilityType? ProjectVisibilityValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectVisibilityTypeEnumValueInternal)ProjectVisibility).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectVisibilityTypeEnumValueInternal)ProjectVisibility).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProjectVisibilityType)""); }

        /// <summary>Backing field for <see cref="PublicProjectAlias" /> property.</summary>
        private string _publicProjectAlias;

        /// <summary><p>Contains the project identifier used with the public build APIs. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicProjectAlias { get => this._publicProjectAlias; set => this._publicProjectAlias = value; }

        /// <summary>Backing field for <see cref="QueuedTimeoutInMinute" /> property.</summary>
        private int? _queuedTimeoutInMinute;

        /// <summary>
        /// <p>The number of minutes a build is allowed to be queued before it times out. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? QueuedTimeoutInMinute { get => this._queuedTimeoutInMinute; set => this._queuedTimeoutInMinute = value; }

        /// <summary>
        /// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code>
        /// can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RegistryCredential { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).RegistryCredentialCredential; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironmentInternal)Environment).RegistryCredentialCredential = value ?? null; }

        /// <summary>Backing field for <see cref="ResourceAccessRole" /> property.</summary>
        private string _resourceAccessRole;

        /// <summary>
        /// <p>The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's
        /// builds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ResourceAccessRole { get => this._resourceAccessRole; set => this._resourceAccessRole = value; }

        /// <summary>
        /// <p>An array of strings that specify the compute types that are allowed for the batch build. See <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build
        /// environment compute types</a> in the <i>CodeBuild User Guide</i> for these values. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] RestrictionComputeTypesAllowed { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).RestrictionComputeTypesAllowed; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).RestrictionComputeTypesAllowed = value ?? null /* arrayOf */; }

        /// <summary><p>Specifies the maximum number of builds allowed.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? RestrictionMaximumBuildsAllowed { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).RestrictionMaximumBuildsAllowed; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfigInternal)BuildBatchConfig).RestrictionMaximumBuildsAllowed = value ?? default(int); }

        /// <summary>
        /// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? S3LogEncryptionDisabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3LogEncryptionDisabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3LogEncryptionDisabled = value ?? default(bool); }

        /// <summary>
        /// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>,
        /// and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>.
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string S3LogLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3LogLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3LogLocation = value ?? null; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? S3LogsStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3LogsStatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigInternal)LogsConfig).S3LogsStatusValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType)""); }

        /// <summary>Backing field for <see cref="SecondaryArtifact" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifacts[] _secondaryArtifact;

        /// <summary><p>An array of <code>ProjectArtifacts</code> objects. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifacts[] SecondaryArtifact { get => this._secondaryArtifact; set => this._secondaryArtifact = value; }

        /// <summary>Backing field for <see cref="SecondarySource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSource[] _secondarySource;

        /// <summary><p>An array of <code>ProjectSource</code> objects. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSource[] SecondarySource { get => this._secondarySource; set => this._secondarySource = value; }

        /// <summary>Backing field for <see cref="SecondarySourceVersion" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceVersion[] _secondarySourceVersion;

        /// <summary>
        /// <p>An array of <code>ProjectSourceVersion</code> objects. If <code>secondarySourceVersions</code> is specified at the
        /// build level, then they take over these <code>secondarySourceVersions</code> (at the project level). </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceVersion[] SecondarySourceVersion { get => this._secondarySourceVersion; set => this._secondarySourceVersion = value; }

        /// <summary>Backing field for <see cref="ServiceRole" /> property.</summary>
        private string _serviceRole;

        /// <summary>
        /// <p>The ARN of the IAM role that enables CodeBuild to interact with dependent Amazon Web Services services on behalf of
        /// the Amazon Web Services account.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ServiceRole { get => this._serviceRole; set => this._serviceRole = value; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSource _source;

        /// <summary><p>Information about the build input source code for this build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSource Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProjectSource()); set => this._source = value; }

        /// <summary>
        /// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be
        /// either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code>
        /// environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build
        /// project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>).
        /// If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root
        /// directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec
        /// File Name and Storage Location</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string SourceBuildspec { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).Buildspec; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).Buildspec = value ?? null; }

        /// <summary><p>Information about the Git clone depth for the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? SourceGitCloneDepth { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).GitCloneDepth; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).GitCloneDepth = value ?? default(int); }

        /// <summary>
        /// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and
        /// must be less than 128 characters in length. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string SourceIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).SourceIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).SourceIdentifier = value ?? null; }

        /// <summary>
        /// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? SourceInsecureSsl { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).InsecureSsl; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).InsecureSsl = value ?? default(bool); }

        /// <summary>
        /// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code
        /// settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified.
        /// If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action
        /// instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository
        /// that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p>
        /// </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP
        /// file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>).
        /// </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>).
        /// </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains
        /// the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild
        /// console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub
        /// <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository
        /// you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected
        /// to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code>
        /// value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS
        /// clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services
        /// account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console
        /// to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>.
        /// Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected
        /// to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's
        /// <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source
        /// code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file.
        /// You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating
        /// a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access
        /// to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not
        /// need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection,
        /// in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p>
        /// </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property.
        /// For all of the other types, you must specify <code>Location</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string SourceLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).Location = value ?? null; }

        /// <summary>
        /// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only
        /// when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and
        /// you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the
        /// build status to the source provider, the user associated with the source provider must have write access to the repo.
        /// If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source
        /// provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always
        /// reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit
        /// to the repo for a change to this property to take effect.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? SourceReportBuildStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).ReportBuildStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).ReportBuildStatus = value ?? default(bool); }

        /// <summary>Backing field for <see cref="SourceVersion" /> property.</summary>
        private string _sourceVersion;

        /// <summary>
        /// <p>A version of the build input to be built for this project. If not specified, the latest version is used. If specified,
        /// it must be one of:</p> <ul> <li> <p>For CodeCommit: the commit ID, branch, or Git tag to use.</p> </li> <li> <p>For GitHub:
        /// the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to
        /// build. If a pull request ID is specified, it must use the format <code>pr/pull-request-ID</code> (for example <code>pr/25</code>).
        /// If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit
        /// ID is used.</p> </li> <li> <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of
        /// the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified,
        /// the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Amazon S3: the version ID of the object that represents
        /// the build input ZIP file to use.</p> </li> </ul> <p>If <code>sourceVersion</code> is specified at the build level, then
        /// that version takes precedence over this <code>sourceVersion</code> (at the project level). </p> <p>For more information,
        /// see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html'>Source Version Sample
        /// with CodeBuild</a> in the <i>CodeBuild User Guide</i>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SourceVersion { get => this._sourceVersion; set => this._sourceVersion = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated8[] _tag;

        /// <summary>
        /// <p>A list of tag key and value pairs associated with this build project.</p> <p>These tags are available for use by Amazon
        /// Web Services services that support CodeBuild build project tags.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated8[] Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="TimeoutInMinute" /> property.</summary>
        private int? _timeoutInMinute;

        /// <summary>
        /// <p>How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait before timing out any related build that did not
        /// get marked as completed. The default is 60 minutes.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? TimeoutInMinute { get => this._timeoutInMinute; set => this._timeoutInMinute = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType? Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceInternal)Source).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType)""); }

        /// <summary>Backing field for <see cref="VpcConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfig _vpcConfig;

        /// <summary><p>Information about the VPC configuration that CodeBuild accesses.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfig VpcConfig { get => (this._vpcConfig = this._vpcConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcConfig()); set => this._vpcConfig = value; }

        /// <summary><p>A list of one or more security groups IDs in your Amazon VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] VpcConfigSecurityGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigInternal)VpcConfig).SecurityGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigInternal)VpcConfig).SecurityGroupId = value ?? null /* arrayOf */; }

        /// <summary><p>A list of one or more subnet IDs in your Amazon VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] VpcConfigSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigInternal)VpcConfig).Subnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigInternal)VpcConfig).Subnet = value ?? null /* arrayOf */; }

        /// <summary><p>The ID of the Amazon VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string VpcConfigVpcId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigInternal)VpcConfig).VpcId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigInternal)VpcConfig).VpcId = value ?? null; }

        /// <summary>Backing field for <see cref="Webhook" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhook _webhook;

        /// <summary>
        /// <p>Information about a webhook that connects repository events to a build project in CodeBuild.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhook Webhook { get => (this._webhook = this._webhook ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Webhook()); set => this._webhook = value; }

        /// <summary>
        /// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name
        /// of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches
        /// are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>.
        /// </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string WebhookBranchFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).BranchFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).BranchFilter = value ?? null; }

        /// <summary>
        /// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one
        /// <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build
        /// to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass,
        /// each of its filters must pass. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroup[] WebhookFilterGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).FilterGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).FilterGroup = value ?? null /* arrayOf */; }

        /// <summary>
        /// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? WebhookLastModifiedSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).LastModifiedSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).LastModifiedSecret = value ?? default(global::System.DateTime); }

        /// <summary><p>The CodeBuild endpoint where webhook events are sent.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string WebhookPayloadUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).PayloadUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).PayloadUrl = value ?? null; }

        /// <summary>
        /// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>.
        /// </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string WebhookSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).Secret; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).Secret = value ?? null; }

        /// <summary><p>The URL to the webhook.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string WebhookUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).Url; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookInternal)Webhook).Url = value ?? null; }

        /// <summary>Creates an new <see cref="AwsCodeBuildProjectProperties" /> instance.</summary>
        public AwsCodeBuildProjectProperties()
        {

        }
    }
    /// Definition of awsCodeBuildProject
    public partial interface IAwsCodeBuildProjectProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>The Amazon Resource Name (ARN) of the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the build project.</p>",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// <p> Set to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is
        /// Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> Set to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown. </p>",
        SerializedName = @"encryptionDisabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ArtifactEncryptionDisabled { get; set; }
        /// <summary><p> An identifier for this artifact definition. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> An identifier for this artifact definition. </p>",
        SerializedName = @"artifactIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string ArtifactIdentifier { get; set; }
        /// <summary>
        /// <p>Information about the build output artifact location:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>,
        /// CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead
        /// of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified,
        /// because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name
        /// of the output bucket.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Information about the build output artifact location:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output bucket.</p> </li> </ul>",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string ArtifactLocation { get; set; }
        /// <summary>
        /// <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that CodeBuild uses to name and store the
        /// output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this
        /// value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If
        /// <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is
        /// produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output artifact object.
        /// If you set the name to be a forward slash ('/'), the artifact is stored in the root of the output bucket.</p> </li> </ul>
        /// <p>For example:</p> <ul> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code>
        /// is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, then the output artifact
        /// is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>. </p> </li> <li> <p> If <code>path</code> is empty,
        /// <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to '<code>/</code>', the output artifact
        /// is stored in the root of the output bucket. </p> </li> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>,
        /// <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to '<code>/</code>', the output
        /// artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;</code>. </p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output artifact object. If you set the name to be a forward slash ('/'), the artifact is stored in the root of the output bucket.</p> </li> </ul> <p>For example:</p> <ul> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, then the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>. </p> </li> <li> <p> If <code>path</code> is empty, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in the root of the output bucket. </p> </li> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to '<code>/</code>', the output artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;</code>. </p> </li> </ul>",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ArtifactName { get; set; }
        /// <summary>
        /// <p> If this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec
        /// file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your
        /// artifact name so that it is always unique. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> If this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your artifact name so that it is always unique. </p>",
        SerializedName = @"overrideArtifactName",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ArtifactOverrideArtifactName { get; set; }
        /// <summary>
        /// <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that CodeBuild uses to name and store the
        /// output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this
        /// value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If
        /// <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is
        /// produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output artifact. If
        /// <code>path</code> is not specified, <code>path</code> is not used.</p> </li> </ul> <p>For example, if <code>path</code>
        /// is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set
        /// to <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at <code>MyArtifacts/MyArtifact.zip</code>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that CodeBuild uses to name and store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output artifact. If <code>path</code> is not specified, <code>path</code> is not used.</p> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at <code>MyArtifacts/MyArtifact.zip</code>.</p>",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string ArtifactPath { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess? ArtifactsBucketOwnerAccessValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactsType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactsType? ArtifactsTypeValue { get; set; }
        /// <summary><p>The resource value that applies to the specified authorization type.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The resource value that applies to the specified authorization type.</p>",
        SerializedName = @"resource",
        PossibleTypes = new [] { typeof(string) })]
        string AuthResource { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceAuthType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceAuthType? AuthTypeValue { get; set; }
        /// <summary>
        /// <p>Set this to true to generate a publicly accessible URL for your project's build badge.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Set this to true to generate a publicly accessible URL for your project's build badge.</p>",
        SerializedName = @"badgeEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BadgeEnabled { get; set; }
        /// <summary>
        /// <p>The publicly-accessible URL through which you can access the build badge for your project. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The publicly-accessible URL through which you can access the build badge for your project. </p>",
        SerializedName = @"badgeRequestUrl",
        PossibleTypes = new [] { typeof(string) })]
        string BadgeRequestUrl { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BatchReportModeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BatchReportModeType? BatchReportModeValue { get; set; }
        /// <summary>
        /// <p>Specifies if the build artifacts for the batch build should be combined into a single artifact location.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies if the build artifacts for the batch build should be combined into a single artifact location.</p>",
        SerializedName = @"combineArtifacts",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BuildBatchConfigCombineArtifact { get; set; }
        /// <summary><p>Specifies the service role ARN for the batch build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the service role ARN for the batch build project.</p>",
        SerializedName = @"serviceRole",
        PossibleTypes = new [] { typeof(string) })]
        string BuildBatchConfigServiceRole { get; set; }
        /// <summary>
        /// <p>Specifies the maximum amount of time, in minutes, that the batch build must be completed in.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the maximum amount of time, in minutes, that the batch build must be completed in.</p>",
        SerializedName = @"timeoutInMins",
        PossibleTypes = new [] { typeof(int) })]
        int? BuildBatchConfigTimeoutInMin { get; set; }
        /// <summary>
        /// <p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>name</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>name</code> parameter in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a> in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create a commit status</a> in the GitHub developer guide.</p> </dd> </dl>",
        SerializedName = @"context",
        PossibleTypes = new [] { typeof(string) })]
        string BuildStatusConfigContext { get; set; }
        /// <summary>
        /// <p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>url</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>url</code> parameter in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a> in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create a commit status</a> in the GitHub developer guide.</p> </dd> </dl>",
        SerializedName = @"targetUrl",
        PossibleTypes = new [] { typeof(string) })]
        string BuildStatusConfigTargetUrl { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookBuildType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookBuildType? BuildTypeValue { get; set; }
        /// <summary>
        /// <p>Information about the cache location: </p> <ul> <li> <p> <code>NO_CACHE</code> or <code>LOCAL</code>: This value is
        /// ignored.</p> </li> <li> <p> <code>S3</code>: This is the S3 bucket name/prefix.</p> </li> </ul>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Information about the cache location: </p> <ul> <li> <p> <code>NO_CACHE</code> or <code>LOCAL</code>: This value is ignored.</p> </li> <li> <p> <code>S3</code>: This is the S3 bucket name/prefix.</p> </li> </ul>",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string CacheLocation { get; set; }
        /// <summary>
        /// <p>An array of strings that specify the local cache modes. You can use one or more local cache modes at the same time.
        /// This is only used for <code>LOCAL</code> cache types.</p> <p>Possible values are:</p> <dl> <dt>LOCAL_SOURCE_CACHE</dt>
        /// <dd> <p>Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only
        /// the change between commits. This mode is a good choice for projects with a clean working directory and a source that is
        /// a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise,
        /// or Bitbucket), the option is ignored. </p> </dd> <dt>LOCAL_DOCKER_LAYER_CACHE</dt> <dd> <p>Caches existing Docker layers.
        /// This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues
        /// caused by pulling large Docker images down from the network. </p> <note> <ul> <li> <p>You can use a Docker layer cache
        /// in the Linux environment only. </p> </li> <li> <p>The <code>privileged</code> flag must be set so that your project has
        /// the required Docker permissions. </p> </li> <li> <p>You should consider the security implications before you use a Docker
        /// layer cache. </p> </li> </ul> </note> </dd> <dt>LOCAL_CUSTOM_CACHE</dt> <dd> <p>Caches directories you specify in the
        /// buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache
        /// modes. If you use a custom cache: </p> <ul> <li> <p>Only directories can be specified for caching. You cannot specify
        /// individual files. </p> </li> <li> <p>Symlinks are used to reference cached directories. </p> </li> <li> <p>Cached directories
        /// are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the
        /// same name. Directories are specified using cache paths in the buildspec file. </p> </li> </ul> </dd> </dl>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An array of strings that specify the local cache modes. You can use one or more local cache modes at the same time. This is only used for <code>LOCAL</code> cache types.</p> <p>Possible values are:</p> <dl> <dt>LOCAL_SOURCE_CACHE</dt> <dd> <p>Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored. </p> </dd> <dt>LOCAL_DOCKER_LAYER_CACHE</dt> <dd> <p>Caches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network. </p> <note> <ul> <li> <p>You can use a Docker layer cache in the Linux environment only. </p> </li> <li> <p>The <code>privileged</code> flag must be set so that your project has the required Docker permissions. </p> </li> <li> <p>You should consider the security implications before you use a Docker layer cache. </p> </li> </ul> </note> </dd> <dt>LOCAL_CUSTOM_CACHE</dt> <dd> <p>Caches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache: </p> <ul> <li> <p>Only directories can be specified for caching. You cannot specify individual files. </p> </li> <li> <p>Symlinks are used to reference cached directories. </p> </li> <li> <p>Cached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file. </p> </li> </ul> </dd> </dl>",
        SerializedName = @"modes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CacheMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CacheMode[] CacheMode { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CacheType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CacheType? CacheTypeValue { get; set; }
        /// <summary>
        /// <p> The group name of the logs in CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> The group name of the logs in CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working with Log Groups and Log Streams</a>. </p>",
        SerializedName = @"groupName",
        PossibleTypes = new [] { typeof(string) })]
        string CloudWatchLogGroupName { get; set; }
        /// <summary>
        /// <p> The prefix of the stream name of the CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> The prefix of the stream name of the CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working with Log Groups and Log Streams</a>. </p>",
        SerializedName = @"streamName",
        PossibleTypes = new [] { typeof(string) })]
        string CloudWatchLogStreamName { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? CloudWatchLogsStatusValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ComputeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ComputeType? ComputeTypeValue { get; set; }
        /// <summary>
        /// <p>The maximum number of concurrent builds that are allowed for this project.</p> <p>New builds are only started if the
        /// current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds
        /// are throttled and are not run.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The maximum number of concurrent builds that are allowed for this project.</p> <p>New builds are only started if the current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds are throttled and are not run.</p>",
        SerializedName = @"concurrentBuildLimit",
        PossibleTypes = new [] { typeof(int) })]
        int? ConcurrentBuildLimit { get; set; }
        /// <summary><p>When the build project was created, expressed in Unix time format.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>When the build project was created, expressed in Unix time format.</p>",
        SerializedName = @"created",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Created { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType? CredentialProviderValue { get; set; }
        /// <summary><p>A description that makes the build project easy to identify.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A description that makes the build project easy to identify.</p>",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// <p>The Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.</p> <note>
        /// <p>You can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that
        /// key. </p> </note> <p>You can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias
        /// (using the format <code>alias/&lt;alias-name&gt;</code>). If you don't specify a value, CodeBuild uses the managed CMK
        /// for Amazon Simple Storage Service (Amazon S3). </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.</p> <note> <p>You can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key. </p> </note> <p>You can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias (using the format <code>alias/&lt;alias-name&gt;</code>). If you don't specify a value, CodeBuild uses the managed CMK for Amazon Simple Storage Service (Amazon S3). </p>",
        SerializedName = @"encryptionKey",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionKey { get; set; }
        /// <summary>
        /// <p>The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build
        /// project. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate'>certificate</a>
        /// in the <i>CodeBuild User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate'>certificate</a> in the <i>CodeBuild User Guide</i>.</p>",
        SerializedName = @"certificate",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentCertificate { get; set; }
        /// <summary>
        /// <p>The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:</p>
        /// <ul> <li> <p>For an image tag: <code>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</code>. For example, in the Docker
        /// repository that CodeBuild uses to manage its Docker images, this would be <code>aws/codebuild/standard:4.0</code>. </p>
        /// </li> <li> <p>For an image digest: <code>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</code>. For example, to specify
        /// an image with the digest 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,' use <code>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</code>.</p>
        /// </li> </ul> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html'>Docker
        /// images provided by CodeBuild</a> in the <i>CodeBuild user guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:</p> <ul> <li> <p>For an image tag: <code>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</code>. For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be <code>aws/codebuild/standard:4.0</code>. </p> </li> <li> <p>For an image digest: <code>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</code>. For example, to specify an image with the digest 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,' use <code>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</code>.</p> </li> </ul> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html'>Docker images provided by CodeBuild</a> in the <i>CodeBuild user guide</i>.</p>",
        SerializedName = @"image",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentImage { get; set; }
        /// <summary>
        /// <p>Enables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build
        /// Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is <code>false</code>.</p>
        /// <p>You can initialize the Docker daemon during the install phase of your build by adding one of the following sets of
        /// commands to the install phase of your buildspec file:</p> <p>If the operating system's base image is Ubuntu Linux:</p>
        /// <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code>
        /// </p> <p> <code>- timeout 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p> <p>If the operating system's
        /// base image is Alpine Linux and the previous command does not work, add the <code>-t</code> argument to <code>timeout</code>:</p>
        /// <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code>
        /// </p> <p> <code>- timeout -t 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Enables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is <code>false</code>.</p> <p>You can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:</p> <p>If the operating system's base image is Ubuntu Linux:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p> <p>If the operating system's base image is Alpine Linux and the previous command does not work, add the <code>-t</code> argument to <code>timeout</code>:</p> <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code> </p> <p> <code>- timeout -t 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p>",
        SerializedName = @"privilegedMode",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnvironmentPrivilegedMode { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentType? EnvironmentTypeValue { get; set; }
        /// <summary>
        /// <p>A set of environment variables to make available to builds for this build project.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A set of environment variables to make available to builds for this build project.</p>",
        SerializedName = @"environmentVariables",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariable) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariable[] EnvironmentVariable { get; set; }
        /// <summary>
        /// <p> An array of <code>ProjectFileSystemLocation</code> objects for a CodeBuild build project. A <code>ProjectFileSystemLocation</code>
        /// object specifies the <code>identifier</code>, <code>location</code>, <code>mountOptions</code>, <code>mountPoint</code>,
        /// and <code>type</code> of a file system created using Amazon Elastic File System. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> An array of <code>ProjectFileSystemLocation</code> objects for a CodeBuild build project. A <code>ProjectFileSystemLocation</code> object specifies the <code>identifier</code>, <code>location</code>, <code>mountOptions</code>, <code>mountPoint</code>, and <code>type</code> of a file system created using Amazon Elastic File System. </p>",
        SerializedName = @"fileSystemLocations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectFileSystemLocation) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectFileSystemLocation[] FileSystemLocation { get; set; }
        /// <summary><p>Specifies the compute fleet ARN for the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the compute fleet ARN for the build project.</p>",
        SerializedName = @"fleetArn",
        PossibleTypes = new [] { typeof(string) })]
        string FleetArn { get; set; }
        /// <summary><p> Set to true to fetch Git submodules for your CodeBuild build project. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> Set to true to fetch Git submodules for your CodeBuild build project. </p>",
        SerializedName = @"fetchSubmodules",
        PossibleTypes = new [] { typeof(bool) })]
        bool? GitSubmoduleConfigFetchSubmodule { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImagePullCredentialsType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImagePullCredentialsType? ImagePullCredentialsTypeValue { get; set; }
        /// <summary>
        /// <p>When the build project's settings were last modified, expressed in Unix time format.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>When the build project's settings were last modified, expressed in Unix time format.</p>",
        SerializedName = @"lastModified",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModified { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess? LogsConfigS3LogsBucketOwnerAccessValue { get; set; }
        /// <summary><p>The name of the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the build project.</p>",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactNamespace) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactNamespace? NamespaceTypeValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactPackaging) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactPackaging? PackagingValue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProjectVisibilityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProjectVisibilityType? ProjectVisibilityValue { get; set; }
        /// <summary><p>Contains the project identifier used with the public build APIs. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Contains the project identifier used with the public build APIs. </p>",
        SerializedName = @"publicProjectAlias",
        PossibleTypes = new [] { typeof(string) })]
        string PublicProjectAlias { get; set; }
        /// <summary>
        /// <p>The number of minutes a build is allowed to be queued before it times out. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of minutes a build is allowed to be queued before it times out. </p>",
        SerializedName = @"queuedTimeoutInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? QueuedTimeoutInMinute { get; set; }
        /// <summary>
        /// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code>
        /// can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code> can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>",
        SerializedName = @"credential",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredential { get; set; }
        /// <summary>
        /// <p>The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's
        /// builds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's builds.</p>",
        SerializedName = @"resourceAccessRole",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceAccessRole { get; set; }
        /// <summary>
        /// <p>An array of strings that specify the compute types that are allowed for the batch build. See <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build
        /// environment compute types</a> in the <i>CodeBuild User Guide</i> for these values. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An array of strings that specify the compute types that are allowed for the batch build. See <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build environment compute types</a> in the <i>CodeBuild User Guide</i> for these values. </p>",
        SerializedName = @"computeTypesAllowed",
        PossibleTypes = new [] { typeof(string) })]
        string[] RestrictionComputeTypesAllowed { get; set; }
        /// <summary><p>Specifies the maximum number of builds allowed.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies the maximum number of builds allowed.</p>",
        SerializedName = @"maximumBuildsAllowed",
        PossibleTypes = new [] { typeof(int) })]
        int? RestrictionMaximumBuildsAllowed { get; set; }
        /// <summary>
        /// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>",
        SerializedName = @"encryptionDisabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? S3LogEncryptionDisabled { get; set; }
        /// <summary>
        /// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>,
        /// and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>.
        /// </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>. </p>",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string S3LogLocation { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? S3LogsStatusValue { get; set; }
        /// <summary><p>An array of <code>ProjectArtifacts</code> objects. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An array of <code>ProjectArtifacts</code> objects. </p>",
        SerializedName = @"secondaryArtifacts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifacts) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifacts[] SecondaryArtifact { get; set; }
        /// <summary><p>An array of <code>ProjectSource</code> objects. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An array of <code>ProjectSource</code> objects. </p>",
        SerializedName = @"secondarySources",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSource[] SecondarySource { get; set; }
        /// <summary>
        /// <p>An array of <code>ProjectSourceVersion</code> objects. If <code>secondarySourceVersions</code> is specified at the
        /// build level, then they take over these <code>secondarySourceVersions</code> (at the project level). </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An array of <code>ProjectSourceVersion</code> objects. If <code>secondarySourceVersions</code> is specified at the build level, then they take over these <code>secondarySourceVersions</code> (at the project level). </p>",
        SerializedName = @"secondarySourceVersions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceVersion[] SecondarySourceVersion { get; set; }
        /// <summary>
        /// <p>The ARN of the IAM role that enables CodeBuild to interact with dependent Amazon Web Services services on behalf of
        /// the Amazon Web Services account.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN of the IAM role that enables CodeBuild to interact with dependent Amazon Web Services services on behalf of the Amazon Web Services account.</p>",
        SerializedName = @"serviceRole",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceRole { get; set; }
        /// <summary>
        /// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be
        /// either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code>
        /// environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build
        /// project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>).
        /// If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root
        /// directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec
        /// File Name and Storage Location</a>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code> environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec File Name and Storage Location</a>. </p>",
        SerializedName = @"buildspec",
        PossibleTypes = new [] { typeof(string) })]
        string SourceBuildspec { get; set; }
        /// <summary><p>Information about the Git clone depth for the build project.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Information about the Git clone depth for the build project.</p>",
        SerializedName = @"gitCloneDepth",
        PossibleTypes = new [] { typeof(int) })]
        int? SourceGitCloneDepth { get; set; }
        /// <summary>
        /// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and
        /// must be less than 128 characters in length. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length. </p>",
        SerializedName = @"sourceIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string SourceIdentifier { get; set; }
        /// <summary>
        /// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>",
        SerializedName = @"insecureSsl",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceInsecureSsl { get; set; }
        /// <summary>
        /// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code
        /// settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified.
        /// If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action
        /// instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository
        /// that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p>
        /// </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP
        /// file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>).
        /// </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>).
        /// </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains
        /// the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild
        /// console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub
        /// <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository
        /// you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected
        /// to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code>
        /// value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS
        /// clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services
        /// account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console
        /// to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>.
        /// Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected
        /// to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's
        /// <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source
        /// code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file.
        /// You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating
        /// a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access
        /// to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not
        /// need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection,
        /// in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p>
        /// </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property.
        /// For all of the other types, you must specify <code>Location</code>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p> </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>). </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>). </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>. Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p> </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property. For all of the other types, you must specify <code>Location</code>. </p>",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string SourceLocation { get; set; }
        /// <summary>
        /// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only
        /// when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and
        /// you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the
        /// build status to the source provider, the user associated with the source provider must have write access to the repo.
        /// If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source
        /// provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always
        /// reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit
        /// to the repo for a change to this property to take effect.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit to the repo for a change to this property to take effect.</p>",
        SerializedName = @"reportBuildStatus",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceReportBuildStatus { get; set; }
        /// <summary>
        /// <p>A version of the build input to be built for this project. If not specified, the latest version is used. If specified,
        /// it must be one of:</p> <ul> <li> <p>For CodeCommit: the commit ID, branch, or Git tag to use.</p> </li> <li> <p>For GitHub:
        /// the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to
        /// build. If a pull request ID is specified, it must use the format <code>pr/pull-request-ID</code> (for example <code>pr/25</code>).
        /// If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit
        /// ID is used.</p> </li> <li> <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of
        /// the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified,
        /// the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Amazon S3: the version ID of the object that represents
        /// the build input ZIP file to use.</p> </li> </ul> <p>If <code>sourceVersion</code> is specified at the build level, then
        /// that version takes precedence over this <code>sourceVersion</code> (at the project level). </p> <p>For more information,
        /// see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html'>Source Version Sample
        /// with CodeBuild</a> in the <i>CodeBuild User Guide</i>. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A version of the build input to be built for this project. If not specified, the latest version is used. If specified, it must be one of:</p> <ul> <li> <p>For CodeCommit: the commit ID, branch, or Git tag to use.</p> </li> <li> <p>For GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format <code>pr/pull-request-ID</code> (for example <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Amazon S3: the version ID of the object that represents the build input ZIP file to use.</p> </li> </ul> <p>If <code>sourceVersion</code> is specified at the build level, then that version takes precedence over this <code>sourceVersion</code> (at the project level). </p> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html'>Source Version Sample with CodeBuild</a> in the <i>CodeBuild User Guide</i>. </p>",
        SerializedName = @"sourceVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SourceVersion { get; set; }
        /// <summary>
        /// <p>A list of tag key and value pairs associated with this build project.</p> <p>These tags are available for use by Amazon
        /// Web Services services that support CodeBuild build project tags.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A list of tag key and value pairs associated with this build project.</p> <p>These tags are available for use by Amazon Web Services services that support CodeBuild build project tags.</p>",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated8) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated8[] Tag { get; set; }
        /// <summary>
        /// <p>How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait before timing out any related build that did not
        /// get marked as completed. The default is 60 minutes.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait before timing out any related build that did not get marked as completed. The default is 60 minutes.</p>",
        SerializedName = @"timeoutInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeoutInMinute { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType? Value { get; set; }
        /// <summary><p>A list of one or more security groups IDs in your Amazon VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A list of one or more security groups IDs in your Amazon VPC.</p>",
        SerializedName = @"securityGroupIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] VpcConfigSecurityGroupId { get; set; }
        /// <summary><p>A list of one or more subnet IDs in your Amazon VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A list of one or more subnet IDs in your Amazon VPC.</p>",
        SerializedName = @"subnets",
        PossibleTypes = new [] { typeof(string) })]
        string[] VpcConfigSubnet { get; set; }
        /// <summary><p>The ID of the Amazon VPC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the Amazon VPC.</p>",
        SerializedName = @"vpcId",
        PossibleTypes = new [] { typeof(string) })]
        string VpcConfigVpcId { get; set; }
        /// <summary>
        /// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name
        /// of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches
        /// are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>.
        /// </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>. </p> </note>",
        SerializedName = @"branchFilter",
        PossibleTypes = new [] { typeof(string) })]
        string WebhookBranchFilter { get; set; }
        /// <summary>
        /// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one
        /// <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build
        /// to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass,
        /// each of its filters must pass. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass, each of its filters must pass. </p>",
        SerializedName = @"filterGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroup) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroup[] WebhookFilterGroup { get; set; }
        /// <summary>
        /// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A timestamp that indicates the last time a repository's secret token was modified. </p>",
        SerializedName = @"lastModifiedSecret",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? WebhookLastModifiedSecret { get; set; }
        /// <summary><p>The CodeBuild endpoint where webhook events are sent.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The CodeBuild endpoint where webhook events are sent.</p>",
        SerializedName = @"payloadUrl",
        PossibleTypes = new [] { typeof(string) })]
        string WebhookPayloadUrl { get; set; }
        /// <summary>
        /// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>.
        /// </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>. </p> </note>",
        SerializedName = @"secret",
        PossibleTypes = new [] { typeof(string) })]
        string WebhookSecret { get; set; }
        /// <summary><p>The URL to the webhook.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The URL to the webhook.</p>",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string WebhookUrl { get; set; }

    }
    /// Definition of awsCodeBuildProject
    internal partial interface IAwsCodeBuildProjectPropertiesInternal

    {
        /// <summary><p>The Amazon Resource Name (ARN) of the build project.</p></summary>
        string Arn { get; set; }
        /// <summary><p>Information about the build output artifacts for the build project.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifacts Artifact { get; set; }
        /// <summary>Property bucketOwnerAccess</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBucketOwnerAccessEnumValue ArtifactBucketOwnerAccess { get; set; }
        /// <summary>
        /// <p> Set to true if you do not want your output artifacts encrypted. This option is valid only if your artifacts type is
        /// Amazon S3. If this is set with another artifacts type, an invalidInputException is thrown. </p>
        /// </summary>
        bool? ArtifactEncryptionDisabled { get; set; }
        /// <summary><p> An identifier for this artifact definition. </p></summary>
        string ArtifactIdentifier { get; set; }
        /// <summary>
        /// <p>Information about the build output artifact location:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>,
        /// CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead
        /// of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified,
        /// because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name
        /// of the output bucket.</p> </li> </ul>
        /// </summary>
        string ArtifactLocation { get; set; }
        /// <summary>
        /// <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that CodeBuild uses to name and store the
        /// output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this
        /// value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If
        /// <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is
        /// produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output artifact object.
        /// If you set the name to be a forward slash ('/'), the artifact is stored in the root of the output bucket.</p> </li> </ul>
        /// <p>For example:</p> <ul> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code>
        /// is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, then the output artifact
        /// is stored in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>. </p> </li> <li> <p> If <code>path</code> is empty,
        /// <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to '<code>/</code>', the output artifact
        /// is stored in the root of the output bucket. </p> </li> <li> <p> If <code>path</code> is set to <code>MyArtifacts</code>,
        /// <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set to '<code>/</code>', the output
        /// artifact is stored in <code>MyArtifacts/&lt;build-ID&gt;</code>. </p> </li> </ul>
        /// </summary>
        string ArtifactName { get; set; }
        /// <summary>
        /// <p>Along with <code>path</code> and <code>name</code>, the pattern that CodeBuild uses to determine the name and location
        /// to store the output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline
        /// ignores this value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p>
        /// </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no
        /// build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>
        /// <ul> <li> <p> <code>BUILD_ID</code>: Include the build ID in the location of the build output artifact.</p> </li> <li>
        /// <p> <code>NONE</code>: Do not include the build ID. This is the default if <code>namespaceType</code> is not specified.</p>
        /// </li> </ul> </li> </ul> <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>, <code>namespaceType</code>
        /// is set to <code>BUILD_ID</code>, and <code>name</code> is set to <code>MyArtifact.zip</code>, the output artifact is stored
        /// in <code>MyArtifacts/&lt;build-ID&gt;/MyArtifact.zip</code>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArtifactNamespaceEnumValue ArtifactNamespaceType { get; set; }
        /// <summary>
        /// <p> If this flag is set, a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec
        /// file is calculated at build time and uses the Shell Command Language. For example, you can append a date and time to your
        /// artifact name so that it is always unique. </p>
        /// </summary>
        bool? ArtifactOverrideArtifactName { get; set; }
        /// <summary>
        /// <p>The type of build output artifact to create:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>,
        /// CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead
        /// of CodeBuild.</p> </li> <li> <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified,
        /// because no build output is produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>
        /// <ul> <li> <p> <code>NONE</code>: CodeBuild creates in the output bucket a folder that contains the build output. This
        /// is the default if <code>packaging</code> is not specified.</p> </li> <li> <p> <code>ZIP</code>: CodeBuild creates in the
        /// output bucket a ZIP file that contains the build output.</p> </li> </ul> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArtifactPackagingEnumValue ArtifactPackaging { get; set; }
        /// <summary>
        /// <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that CodeBuild uses to name and store the
        /// output artifact:</p> <ul> <li> <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, CodePipeline ignores this
        /// value if specified. This is because CodePipeline manages its build output names instead of CodeBuild.</p> </li> <li> <p>If
        /// <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if specified, because no build output is
        /// produced.</p> </li> <li> <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output artifact. If
        /// <code>path</code> is not specified, <code>path</code> is not used.</p> </li> </ul> <p>For example, if <code>path</code>
        /// is set to <code>MyArtifacts</code>, <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set
        /// to <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at <code>MyArtifacts/MyArtifact.zip</code>.</p>
        /// </summary>
        string ArtifactPath { get; set; }
        /// <summary>
        /// <p>The type of build output artifact. Valid values include:</p> <ul> <li> <p> <code>CODEPIPELINE</code>: The build project
        /// has build output generated through CodePipeline. </p> <note> <p>The <code>CODEPIPELINE</code> type is not supported for
        /// <code>secondaryArtifacts</code>.</p> </note> </li> <li> <p> <code>NO_ARTIFACTS</code>: The build project does not produce
        /// any build output.</p> </li> <li> <p> <code>S3</code>: The build project stores build output in Amazon S3.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IArtifactsTypeEnumValue ArtifactType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess? ArtifactsBucketOwnerAccessValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactsType? ArtifactsTypeValue { get; set; }
        /// <summary><p>The resource value that applies to the specified authorization type.</p></summary>
        string AuthResource { get; set; }
        /// <summary>
        /// <p>The authorization type to use. Valid options are OAUTH or CODECONNECTIONS.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuthTypeEnumValue AuthType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceAuthType? AuthTypeValue { get; set; }
        /// <summary><p>Information about the build badge for the build project.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBadge Badge { get; set; }
        /// <summary>
        /// <p>Set this to true to generate a publicly accessible URL for your project's build badge.</p>
        /// </summary>
        bool? BadgeEnabled { get; set; }
        /// <summary>
        /// <p>The publicly-accessible URL through which you can access the build badge for your project. </p>
        /// </summary>
        string BadgeRequestUrl { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BatchReportModeType? BatchReportModeValue { get; set; }
        /// <summary>
        /// <p>A <a>ProjectBuildBatchConfig</a> object that defines the batch build options for the project.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectBuildBatchConfig BuildBatchConfig { get; set; }
        /// <summary>
        /// <p>Specifies how build status reports are sent to the source provider for the batch build. This property is only used
        /// when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to
        /// report build statuses to the source provider.</p> <dl> <dt>REPORT_AGGREGATED_BATCH</dt> <dd> <p>(Default) Aggregate all
        /// of the build statuses into a single status report.</p> </dd> <dt>REPORT_INDIVIDUAL_BUILDS</dt> <dd> <p>Send a separate
        /// status report for each individual build.</p> </dd> </dl>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBatchReportModeTypeEnumValue BuildBatchConfigBatchReportMode { get; set; }
        /// <summary>
        /// <p>Specifies if the build artifacts for the batch build should be combined into a single artifact location.</p>
        /// </summary>
        bool? BuildBatchConfigCombineArtifact { get; set; }
        /// <summary>
        /// <p>A <code>BatchRestrictions</code> object that specifies the restrictions for the batch build.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBatchRestrictions BuildBatchConfigRestriction { get; set; }
        /// <summary><p>Specifies the service role ARN for the batch build project.</p></summary>
        string BuildBatchConfigServiceRole { get; set; }
        /// <summary>
        /// <p>Specifies the maximum amount of time, in minutes, that the batch build must be completed in.</p>
        /// </summary>
        int? BuildBatchConfigTimeoutInMin { get; set; }
        /// <summary>
        /// <p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>name</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        string BuildStatusConfigContext { get; set; }
        /// <summary>
        /// <p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends
        /// on the source provider.</p> <dl> <dt>Bitbucket</dt> <dd> <p>This parameter is used for the <code>url</code> parameter
        /// in the Bitbucket commit status. For more information, see <a href='https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build'>build</a>
        /// in the Bitbucket API documentation.</p> </dd> <dt>GitHub/GitHub Enterprise Server</dt> <dd> <p>This parameter is used
        /// for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href='https://developer.github.com/v3/repos/statuses/#create-a-commit-status'>Create
        /// a commit status</a> in the GitHub developer guide.</p> </dd> </dl>
        /// </summary>
        string BuildStatusConfigTargetUrl { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.WebhookBuildType? BuildTypeValue { get; set; }
        /// <summary><p>Information about the cache for the build project.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectCache Cache { get; set; }
        /// <summary>
        /// <p>Information about the cache location: </p> <ul> <li> <p> <code>NO_CACHE</code> or <code>LOCAL</code>: This value is
        /// ignored.</p> </li> <li> <p> <code>S3</code>: This is the S3 bucket name/prefix.</p> </li> </ul>
        /// </summary>
        string CacheLocation { get; set; }
        /// <summary>
        /// <p>An array of strings that specify the local cache modes. You can use one or more local cache modes at the same time.
        /// This is only used for <code>LOCAL</code> cache types.</p> <p>Possible values are:</p> <dl> <dt>LOCAL_SOURCE_CACHE</dt>
        /// <dd> <p>Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only
        /// the change between commits. This mode is a good choice for projects with a clean working directory and a source that is
        /// a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise,
        /// or Bitbucket), the option is ignored. </p> </dd> <dt>LOCAL_DOCKER_LAYER_CACHE</dt> <dd> <p>Caches existing Docker layers.
        /// This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues
        /// caused by pulling large Docker images down from the network. </p> <note> <ul> <li> <p>You can use a Docker layer cache
        /// in the Linux environment only. </p> </li> <li> <p>The <code>privileged</code> flag must be set so that your project has
        /// the required Docker permissions. </p> </li> <li> <p>You should consider the security implications before you use a Docker
        /// layer cache. </p> </li> </ul> </note> </dd> <dt>LOCAL_CUSTOM_CACHE</dt> <dd> <p>Caches directories you specify in the
        /// buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache
        /// modes. If you use a custom cache: </p> <ul> <li> <p>Only directories can be specified for caching. You cannot specify
        /// individual files. </p> </li> <li> <p>Symlinks are used to reference cached directories. </p> </li> <li> <p>Cached directories
        /// are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the
        /// same name. Directories are specified using cache paths in the buildspec file. </p> </li> </ul> </dd> </dl>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CacheMode[] CacheMode { get; set; }
        /// <summary>
        /// <p>The type of cache used by the build project. Valid values include:</p> <ul> <li> <p> <code>NO_CACHE</code>: The build
        /// project does not use any cache.</p> </li> <li> <p> <code>S3</code>: The build project reads and writes from and to S3.</p>
        /// </li> <li> <p> <code>LOCAL</code>: The build project stores a cache locally on a build host that is only available to
        /// that build host.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICacheTypeEnumValue CacheType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CacheType? CacheTypeValue { get; set; }
        /// <summary>
        /// <p> The group name of the logs in CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        string CloudWatchLogGroupName { get; set; }
        /// <summary>
        /// <p>The current status of the logs in CloudWatch Logs for a build project. Valid values are:</p> <ul> <li> <p> <code>ENABLED</code>:
        /// CloudWatch Logs are enabled for this build project.</p> </li> <li> <p> <code>DISABLED</code>: CloudWatch Logs are not
        /// enabled for this build project.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigStatusTypeEnumValue CloudWatchLogStatus { get; set; }
        /// <summary>
        /// <p> The prefix of the stream name of the CloudWatch Logs. For more information, see <a href='https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html'>Working
        /// with Log Groups and Log Streams</a>. </p>
        /// </summary>
        string CloudWatchLogStreamName { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? CloudWatchLogsStatusValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ComputeType? ComputeTypeValue { get; set; }
        /// <summary>
        /// <p>The maximum number of concurrent builds that are allowed for this project.</p> <p>New builds are only started if the
        /// current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds
        /// are throttled and are not run.</p>
        /// </summary>
        int? ConcurrentBuildLimit { get; set; }
        /// <summary><p>When the build project was created, expressed in Unix time format.</p></summary>
        global::System.DateTime? Created { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType? CredentialProviderValue { get; set; }
        /// <summary><p>A description that makes the build project easy to identify.</p></summary>
        string Description { get; set; }
        /// <summary>
        /// <p>The Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts.</p> <note>
        /// <p>You can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that
        /// key. </p> </note> <p>You can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias
        /// (using the format <code>alias/&lt;alias-name&gt;</code>). If you don't specify a value, CodeBuild uses the managed CMK
        /// for Amazon Simple Storage Service (Amazon S3). </p>
        /// </summary>
        string EncryptionKey { get; set; }
        /// <summary><p>Information about the build environment for this build project.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectEnvironment Environment { get; set; }
        /// <summary>
        /// <p>The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build
        /// project. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate'>certificate</a>
        /// in the <i>CodeBuild User Guide</i>.</p>
        /// </summary>
        string EnvironmentCertificate { get; set; }
        /// <summary>
        /// <p>Information about the compute resources the build project uses. Available values include:</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL</code>:
        /// Use up to 3 GB memory and 2 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory
        /// and 4 vCPUs for builds.</p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE</code>: Use up to 16 GB memory and 8 vCPUs for builds,
        /// depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_XLARGE</code>: Use up to 70 GB memory and
        /// 36 vCPUs for builds, depending on your environment type.</p> </li> <li> <p> <code>BUILD_GENERAL1_2XLARGE</code>: Use up
        /// to 145 GB memory, 72 vCPUs, and 824 GB of SSD storage for builds. This compute type supports Docker images up to 100 GB
        /// uncompressed.</p> </li> <li> <p> <code>BUILD_LAMBDA_1GB</code>: Use up to 1 GB memory for builds. Only available for environment
        /// type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_2GB</code>:
        /// Use up to 2 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p>
        /// </li> <li> <p> <code>BUILD_LAMBDA_4GB</code>: Use up to 4 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code>
        /// and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> <li> <p> <code>BUILD_LAMBDA_8GB</code>: Use up to 8 GB memory for builds.
        /// Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code> and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li>
        /// <li> <p> <code>BUILD_LAMBDA_10GB</code>: Use up to 10 GB memory for builds. Only available for environment type <code>LINUX_LAMBDA_CONTAINER</code>
        /// and <code>ARM_LAMBDA_CONTAINER</code>.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_SMALL</code>: </p> <ul> <li>
        /// <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 3 GB memory and 2 vCPUs for builds. </p> </li>
        /// <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 16 GB memory, 4 vCPUs, and 1 NVIDIA
        /// A10G Tensor Core GPU for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use up to
        /// 4 GB memory and 2 vCPUs on ARM-based processors for builds.</p> </li> </ul> <p> If you use <code>BUILD_GENERAL1_LARGE</code>:
        /// </p> <ul> <li> <p> For environment type <code>LINUX_CONTAINER</code>, you can use up to 15 GB memory and 8 vCPUs for builds.
        /// </p> </li> <li> <p> For environment type <code>LINUX_GPU_CONTAINER</code>, you can use up to 255 GB memory, 32 vCPUs,
        /// and 4 NVIDIA Tesla V100 GPUs for builds.</p> </li> <li> <p> For environment type <code>ARM_CONTAINER</code>, you can use
        /// up to 16 GB memory and 8 vCPUs on ARM-based processors for builds.</p> </li> </ul> <note> <p>If you're using compute fleets
        /// during project creation, <code>computeType</code> will be ignored.</p> </note> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build
        /// Environment Compute Types</a> in the <i>CodeBuild User Guide.</i> </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IComputeTypeEnumValue EnvironmentComputeType { get; set; }
        /// <summary><p>A ProjectFleet object to use for this build project.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectFleet EnvironmentFleet { get; set; }
        /// <summary>
        /// <p>The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats:</p>
        /// <ul> <li> <p>For an image tag: <code>&lt;registry&gt;/&lt;repository&gt;:&lt;tag&gt;</code>. For example, in the Docker
        /// repository that CodeBuild uses to manage its Docker images, this would be <code>aws/codebuild/standard:4.0</code>. </p>
        /// </li> <li> <p>For an image digest: <code>&lt;registry&gt;/&lt;repository&gt;@&lt;digest&gt;</code>. For example, to specify
        /// an image with the digest 'sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,' use <code>&lt;registry&gt;/&lt;repository&gt;@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</code>.</p>
        /// </li> </ul> <p>For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html'>Docker
        /// images provided by CodeBuild</a> in the <i>CodeBuild user guide</i>.</p>
        /// </summary>
        string EnvironmentImage { get; set; }
        /// <summary>
        /// <p> The type of credentials CodeBuild uses to pull images in your build. There are two valid values: </p> <ul> <li> <p>
        /// <code>CODEBUILD</code> specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository
        /// policy to trust CodeBuild service principal. </p> </li> <li> <p> <code>SERVICE_ROLE</code> specifies that CodeBuild uses
        /// your build project's service role. </p> </li> </ul> <p> When you use a cross-account or private registry image, you must
        /// use SERVICE_ROLE credentials. When you use an CodeBuild curated image, you must use CODEBUILD credentials. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IImagePullCredentialsTypeEnumValue EnvironmentImagePullCredentialsType { get; set; }
        /// <summary>
        /// <p>Enables running the Docker daemon inside a Docker container. Set to true only if the build project is used to build
        /// Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is <code>false</code>.</p>
        /// <p>You can initialize the Docker daemon during the install phase of your build by adding one of the following sets of
        /// commands to the install phase of your buildspec file:</p> <p>If the operating system's base image is Ubuntu Linux:</p>
        /// <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code>
        /// </p> <p> <code>- timeout 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p> <p>If the operating system's
        /// base image is Alpine Linux and the previous command does not work, add the <code>-t</code> argument to <code>timeout</code>:</p>
        /// <p> <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;</code>
        /// </p> <p> <code>- timeout -t 15 sh -c 'until docker info; do echo .; sleep 1; done'</code> </p>
        /// </summary>
        bool? EnvironmentPrivilegedMode { get; set; }
        /// <summary><p> The credentials for access to a private registry.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRegistryCredential EnvironmentRegistryCredential { get; set; }
        /// <summary>
        /// <p>The type of build environment to use for related builds.</p> <ul> <li> <p>The environment type <code>ARM_CONTAINER</code>
        /// is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai),
        /// Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).</p> </li> <li> <p>The environment type <code>LINUX_CONTAINER</code>
        /// is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland),
        /// EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney),
        /// China (Beijing), and China (Ningxia).</p> </li> <li> <p>The environment type <code>LINUX_GPU_CONTAINER</code> is available
        /// only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London),
        /// EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing),
        /// and China (Ningxia).</p> </li> </ul> <ul> <li> <p>The environment types <code>ARM_LAMBDA_CONTAINER</code> and <code>LINUX_LAMBDA_CONTAINER</code>
        /// are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Asia Pacific (Mumbai), Asia Pacific
        /// (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), EU (Frankfurt), EU (Ireland), and South America (São Paulo).</p>
        /// </li> </ul> <ul> <li> <p>The environment types <code>WINDOWS_CONTAINER</code> and <code>WINDOWS_SERVER_2019_CONTAINER</code>
        /// are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).</p> </li> </ul>
        /// <note> <p>If you're using compute fleets during project creation, <code>type</code> will be ignored.</p> </note> <p>For
        /// more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build
        /// environment compute types</a> in the <i>CodeBuild user guide</i>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentTypeEnumValue EnvironmentType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.EnvironmentType? EnvironmentTypeValue { get; set; }
        /// <summary>
        /// <p>A set of environment variables to make available to builds for this build project.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentVariable[] EnvironmentVariable { get; set; }
        /// <summary>
        /// <p> An array of <code>ProjectFileSystemLocation</code> objects for a CodeBuild build project. A <code>ProjectFileSystemLocation</code>
        /// object specifies the <code>identifier</code>, <code>location</code>, <code>mountOptions</code>, <code>mountPoint</code>,
        /// and <code>type</code> of a file system created using Amazon Elastic File System. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectFileSystemLocation[] FileSystemLocation { get; set; }
        /// <summary><p>Specifies the compute fleet ARN for the build project.</p></summary>
        string FleetArn { get; set; }
        /// <summary><p> Set to true to fetch Git submodules for your CodeBuild build project. </p></summary>
        bool? GitSubmoduleConfigFetchSubmodule { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ImagePullCredentialsType? ImagePullCredentialsTypeValue { get; set; }
        /// <summary>
        /// <p>When the build project's settings were last modified, expressed in Unix time format.</p>
        /// </summary>
        global::System.DateTime? LastModified { get; set; }
        /// <summary>
        /// <p> Information about CloudWatch Logs for a build project. CloudWatch Logs are enabled by default. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudWatchLogsConfig LogConfigCloudWatchLog { get; set; }
        /// <summary>
        /// <p> Information about logs built to an S3 bucket for a build project. S3 logs are not enabled by default. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IS3LogsConfig LogConfigS3Log { get; set; }
        /// <summary>
        /// <p>Information about logs for the build project. A project can create logs in CloudWatch Logs, an S3 bucket, or both.
        /// </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfig LogsConfig { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.BucketOwnerAccess? LogsConfigS3LogsBucketOwnerAccessValue { get; set; }
        /// <summary><p>The name of the build project.</p></summary>
        string Name { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactNamespace? NamespaceTypeValue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ArtifactPackaging? PackagingValue { get; set; }
        /// <summary>Property projectVisibility</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectVisibilityTypeEnumValue ProjectVisibility { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProjectVisibilityType? ProjectVisibilityValue { get; set; }
        /// <summary><p>Contains the project identifier used with the public build APIs. </p></summary>
        string PublicProjectAlias { get; set; }
        /// <summary>
        /// <p>The number of minutes a build is allowed to be queued before it times out. </p>
        /// </summary>
        int? QueuedTimeoutInMinute { get; set; }
        /// <summary>
        /// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code>
        /// can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
        /// </summary>
        string RegistryCredential { get; set; }
        /// <summary>
        /// <p> The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is
        /// for Secrets Manager. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICredentialProviderTypeEnumValue RegistryCredentialProvider { get; set; }
        /// <summary>
        /// <p>The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's
        /// builds.</p>
        /// </summary>
        string ResourceAccessRole { get; set; }
        /// <summary>
        /// <p>An array of strings that specify the compute types that are allowed for the batch build. See <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html'>Build
        /// environment compute types</a> in the <i>CodeBuild User Guide</i> for these values. </p>
        /// </summary>
        string[] RestrictionComputeTypesAllowed { get; set; }
        /// <summary><p>Specifies the maximum number of builds allowed.</p></summary>
        int? RestrictionMaximumBuildsAllowed { get; set; }
        /// <summary>Property bucketOwnerAccess</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBucketOwnerAccessEnumValue S3LogBucketOwnerAccess { get; set; }
        /// <summary>
        /// <p> Set to true if you do not want your S3 build log output encrypted. By default S3 build logs are encrypted. </p>
        /// </summary>
        bool? S3LogEncryptionDisabled { get; set; }
        /// <summary>
        /// <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name is <code>my-bucket</code>,
        /// and your path prefix is <code>build-log</code>, then acceptable formats are <code>my-bucket/build-log</code> or <code>arn:aws:s3:::my-bucket/build-log</code>.
        /// </p>
        /// </summary>
        string S3LogLocation { get; set; }
        /// <summary>
        /// <p>The current status of the S3 build logs. Valid values are:</p> <ul> <li> <p> <code>ENABLED</code>: S3 build logs are
        /// enabled for this build project.</p> </li> <li> <p> <code>DISABLED</code>: S3 build logs are not enabled for this build
        /// project.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogsConfigStatusTypeEnumValue S3LogStatus { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.LogsConfigStatusType? S3LogsStatusValue { get; set; }
        /// <summary><p>An array of <code>ProjectArtifacts</code> objects. </p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectArtifacts[] SecondaryArtifact { get; set; }
        /// <summary><p>An array of <code>ProjectSource</code> objects. </p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSource[] SecondarySource { get; set; }
        /// <summary>
        /// <p>An array of <code>ProjectSourceVersion</code> objects. If <code>secondarySourceVersions</code> is specified at the
        /// build level, then they take over these <code>secondarySourceVersions</code> (at the project level). </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSourceVersion[] SecondarySourceVersion { get; set; }
        /// <summary>
        /// <p>The ARN of the IAM role that enables CodeBuild to interact with dependent Amazon Web Services services on behalf of
        /// the Amazon Web Services account.</p>
        /// </summary>
        string ServiceRole { get; set; }
        /// <summary><p>Information about the build input source code for this build project.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProjectSource Source { get; set; }
        /// <summary>
        /// <p>Information about the authorization settings for CodeBuild to access the source code to be built.</p> <p>This information
        /// is for the CodeBuild console's use only. Your code should not get or set this information directly.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceAuth SourceAuth { get; set; }
        /// <summary>
        /// <p>Contains information that defines how the build project reports the build status to the source provider. This option
        /// is only used when the source provider is <code>GITHUB</code>, <code>GITHUB_ENTERPRISE</code>, or <code>BITBUCKET</code>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBuildStatusConfig SourceBuildStatusConfig { get; set; }
        /// <summary>
        /// <p>The buildspec file declaration to use for the builds in this build project.</p> <p> If this value is set, it can be
        /// either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in <code>CODEBUILD_SRC_DIR</code>
        /// environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build
        /// project. Specify the buildspec file using its ARN (for example, <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>).
        /// If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root
        /// directory. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage'>Buildspec
        /// File Name and Storage Location</a>. </p>
        /// </summary>
        string SourceBuildspec { get; set; }
        /// <summary><p>Information about the Git clone depth for the build project.</p></summary>
        int? SourceGitCloneDepth { get; set; }
        /// <summary>
        /// <p> Information about the Git submodules configuration for the build project. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGitSubmodulesConfig SourceGitSubmodulesConfig { get; set; }
        /// <summary>
        /// <p>An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and
        /// must be less than 128 characters in length. </p>
        /// </summary>
        string SourceIdentifier { get; set; }
        /// <summary>
        /// <p>Enable this flag to ignore SSL warnings while connecting to the project source code.</p>
        /// </summary>
        bool? SourceInsecureSsl { get; set; }
        /// <summary>
        /// <p>Information about the location of the source code to be built. Valid values include:</p> <ul> <li> <p>For source code
        /// settings that are specified in the source action of a pipeline in CodePipeline, <code>location</code> should not be specified.
        /// If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action
        /// instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository
        /// that contains the source code and the buildspec file (for example, <code>https://git-codecommit.&lt;region-ID&gt;.amazonaws.com/v1/repos/&lt;repo-name&gt;</code>).</p>
        /// </li> <li> <p>For source code in an Amazon S3 input bucket, one of the following. </p> <ul> <li> <p>The path to the ZIP
        /// file that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path&gt;/&lt;object-name&gt;.zip</code>).
        /// </p> </li> <li> <p>The path to the folder that contains the source code (for example, <code>&lt;bucket-name&gt;/&lt;path-to-source-code&gt;/&lt;folder&gt;/</code>).
        /// </p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains
        /// the source and the buildspec file. You must connect your Amazon Web Services account to your GitHub account. Use the CodeBuild
        /// console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub
        /// <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request access</b> next to each repository
        /// you want to allow CodeBuild to have access to, and then choose <b>Authorize application</b>. (After you have connected
        /// to your GitHub account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to use this connection, in the <code>source</code> object, set the <code>auth</code> object's <code>type</code>
        /// value to <code>OAUTH</code>.</p> </li> <li> <p>For source code in an GitLab or self-managed GitLab repository, the HTTPS
        /// clone URL to the repository that contains the source and the buildspec file. You must connect your Amazon Web Services
        /// account to your GitLab account. Use the CodeBuild console to start creating a build project. When you use the console
        /// to connect (or reconnect) with GitLab, on the Connections <b>Authorize application</b> page, choose <b>Authorize</b>.
        /// Then on the CodeConnections <b>Create GitLab connection</b> page, choose <b>Connect to GitLab</b>. (After you have connected
        /// to your GitLab account, you do not need to finish creating the build project. You can leave the CodeBuild console.) To
        /// instruct CodeBuild to override the default connection and use this connection instead, set the <code>auth</code> object's
        /// <code>type</code> value to <code>CODECONNECTIONS</code> in the <code>source</code> object.</p> </li> <li> <p>For source
        /// code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file.
        /// You must connect your Amazon Web Services account to your Bitbucket account. Use the CodeBuild console to start creating
        /// a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket <b>Confirm access
        /// to your account</b> page, choose <b>Grant access</b>. (After you have connected to your Bitbucket account, you do not
        /// need to finish creating the build project. You can leave the CodeBuild console.) To instruct CodeBuild to use this connection,
        /// in the <code>source</code> object, set the <code>auth</code> object's <code>type</code> value to <code>OAUTH</code>.</p>
        /// </li> </ul> <p> If you specify <code>CODEPIPELINE</code> for the <code>Type</code> property, don't specify this property.
        /// For all of the other types, you must specify <code>Location</code>. </p>
        /// </summary>
        string SourceLocation { get; set; }
        /// <summary>
        /// <p> Set to true to report the status of a build's start and finish to your source provider. This option is valid only
        /// when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or Bitbucket. If this is set and
        /// you use a different source provider, an <code>invalidInputException</code> is thrown. </p> <p>To be able to report the
        /// build status to the source provider, the user associated with the source provider must have write access to the repo.
        /// If the user does not have write access, the build status cannot be updated. For more information, see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html'>Source
        /// provider access</a> in the <i>CodeBuild User Guide</i>.</p> <p>The status of a build triggered by a webhook is always
        /// reported to your source provider. </p> <p>If your project's builds are triggered by a webhook, you must push a new commit
        /// to the repo for a change to this property to take effect.</p>
        /// </summary>
        bool? SourceReportBuildStatus { get; set; }
        /// <summary>
        /// <p>The type of repository that contains the source code to be built. Valid values include:</p> <ul> <li> <p> <code>BITBUCKET</code>:
        /// The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code>: The source code is in an CodeCommit
        /// repository.</p> </li> <li> <p> <code>CODEPIPELINE</code>: The source code settings are specified in the source action
        /// of a pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code>: The source code is in a GitHub repository.</p>
        /// </li> <li> <p> <code>GITHUB_ENTERPRISE</code>: The source code is in a GitHub Enterprise Server repository.</p> </li>
        /// <li> <p> <code>GITLAB</code>: The source code is in a GitLab repository.</p> </li> <li> <p> <code>GITLAB_SELF_MANAGED</code>:
        /// The source code is in a self-managed GitLab repository.</p> </li> <li> <p> <code>NO_SOURCE</code>: The project does not
        /// have input source code.</p> </li> <li> <p> <code>S3</code>: The source code is in an Amazon S3 bucket.</p> </li> </ul>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISourceTypeEnumValue SourceType { get; set; }
        /// <summary>
        /// <p>A version of the build input to be built for this project. If not specified, the latest version is used. If specified,
        /// it must be one of:</p> <ul> <li> <p>For CodeCommit: the commit ID, branch, or Git tag to use.</p> </li> <li> <p>For GitHub:
        /// the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to
        /// build. If a pull request ID is specified, it must use the format <code>pr/pull-request-ID</code> (for example <code>pr/25</code>).
        /// If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit
        /// ID is used.</p> </li> <li> <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of
        /// the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified,
        /// the default branch's HEAD commit ID is used.</p> </li> <li> <p>For Amazon S3: the version ID of the object that represents
        /// the build input ZIP file to use.</p> </li> </ul> <p>If <code>sourceVersion</code> is specified at the build level, then
        /// that version takes precedence over this <code>sourceVersion</code> (at the project level). </p> <p>For more information,
        /// see <a href='https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html'>Source Version Sample
        /// with CodeBuild</a> in the <i>CodeBuild User Guide</i>. </p>
        /// </summary>
        string SourceVersion { get; set; }
        /// <summary>
        /// <p>A list of tag key and value pairs associated with this build project.</p> <p>These tags are available for use by Amazon
        /// Web Services services that support CodeBuild build project tags.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated8[] Tag { get; set; }
        /// <summary>
        /// <p>How long, in minutes, from 5 to 480 (8 hours), for CodeBuild to wait before timing out any related build that did not
        /// get marked as completed. The default is 60 minutes.</p>
        /// </summary>
        int? TimeoutInMinute { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SourceType? Value { get; set; }
        /// <summary><p>Information about the VPC configuration that CodeBuild accesses.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfig VpcConfig { get; set; }
        /// <summary><p>A list of one or more security groups IDs in your Amazon VPC.</p></summary>
        string[] VpcConfigSecurityGroupId { get; set; }
        /// <summary><p>A list of one or more subnet IDs in your Amazon VPC.</p></summary>
        string[] VpcConfigSubnet { get; set; }
        /// <summary><p>The ID of the Amazon VPC.</p></summary>
        string VpcConfigVpcId { get; set; }
        /// <summary>
        /// <p>Information about a webhook that connects repository events to a build project in CodeBuild.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhook Webhook { get; set; }
        /// <summary>
        /// <p>A regular expression used to determine which repository branches are built when a webhook is triggered. If the name
        /// of a branch matches the regular expression, then it is built. If <code>branchFilter</code> is empty, then all branches
        /// are built.</p> <note> <p>It is recommended that you use <code>filterGroups</code> instead of <code>branchFilter</code>.
        /// </p> </note>
        /// </summary>
        string WebhookBranchFilter { get; set; }
        /// <summary><p>Specifies the type of build this webhook will trigger.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWebhookBuildTypeEnumValue WebhookBuildType { get; set; }
        /// <summary>
        /// <p>An array of arrays of <code>WebhookFilter</code> objects used to determine which webhooks are triggered. At least one
        /// <code>WebhookFilter</code> in the array must specify <code>EVENT</code> as its <code>type</code>. </p> <p>For a build
        /// to be triggered, at least one filter group in the <code>filterGroups</code> array must pass. For a filter group to pass,
        /// each of its filters must pass. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFilterGroup[] WebhookFilterGroup { get; set; }
        /// <summary>
        /// <p>A timestamp that indicates the last time a repository's secret token was modified. </p>
        /// </summary>
        global::System.DateTime? WebhookLastModifiedSecret { get; set; }
        /// <summary><p>The CodeBuild endpoint where webhook events are sent.</p></summary>
        string WebhookPayloadUrl { get; set; }
        /// <summary>
        /// <p>The secret token of the associated repository. </p> <note> <p>A Bitbucket webhook does not support <code>secret</code>.
        /// </p> </note>
        /// </summary>
        string WebhookSecret { get; set; }
        /// <summary><p>The URL to the webhook.</p></summary>
        string WebhookUrl { get; set; }

    }
}