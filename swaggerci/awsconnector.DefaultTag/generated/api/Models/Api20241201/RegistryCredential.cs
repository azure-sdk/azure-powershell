// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of RegistryCredential</summary>
    public partial class RegistryCredential :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRegistryCredential,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRegistryCredentialInternal
    {

        /// <summary>Backing field for <see cref="Credential" /> property.</summary>
        private string _credential;

        /// <summary>
        /// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code>
        /// can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Credential { get => this._credential; set => this._credential = value; }

        /// <summary>Backing field for <see cref="CredentialProvider" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICredentialProviderTypeEnumValue _credentialProvider;

        /// <summary>
        /// <p> The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is
        /// for Secrets Manager. </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICredentialProviderTypeEnumValue CredentialProvider { get => (this._credentialProvider = this._credentialProvider ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CredentialProviderTypeEnumValue()); set => this._credentialProvider = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType? CredentialProviderValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICredentialProviderTypeEnumValueInternal)CredentialProvider).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICredentialProviderTypeEnumValueInternal)CredentialProvider).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType)""); }

        /// <summary>Internal Acessors for CredentialProvider</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICredentialProviderTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRegistryCredentialInternal.CredentialProvider { get => (this._credentialProvider = this._credentialProvider ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CredentialProviderTypeEnumValue()); set { {_credentialProvider = value;} } }

        /// <summary>Creates an new <see cref="RegistryCredential" /> instance.</summary>
        public RegistryCredential()
        {

        }
    }
    /// Definition of RegistryCredential
    public partial interface IRegistryCredential :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code>
        /// can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code> can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>",
        SerializedName = @"credential",
        PossibleTypes = new [] { typeof(string) })]
        string Credential { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType? CredentialProviderValue { get; set; }

    }
    /// Definition of RegistryCredential
    internal partial interface IRegistryCredentialInternal

    {
        /// <summary>
        /// <p> The Amazon Resource Name (ARN) or name of credentials created using Secrets Manager. </p> <note> <p> The <code>credential</code>
        /// can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
        /// </summary>
        string Credential { get; set; }
        /// <summary>
        /// <p> The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is
        /// for Secrets Manager. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICredentialProviderTypeEnumValue CredentialProvider { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CredentialProviderType? CredentialProviderValue { get; set; }

    }
}