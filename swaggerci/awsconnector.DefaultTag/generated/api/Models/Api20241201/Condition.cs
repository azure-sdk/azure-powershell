// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of Condition</summary>
    public partial class Condition :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICondition,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConditionInternal
    {

        /// <summary>Backing field for <see cref="ActionCondition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IActionConditionModelProperties _actionCondition;

        /// <summary>A single action condition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IActionConditionModelProperties ActionCondition { get => (this._actionCondition = this._actionCondition ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ActionConditionModelProperties()); set => this._actionCondition = value; }

        /// <summary>
        /// Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all
        /// conditions or must match at least one condition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Action? ActionConditionAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IActionConditionModelPropertiesInternal)ActionCondition).Action; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IActionConditionModelPropertiesInternal)ActionCondition).Action = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Action)""); }

        /// <summary>Backing field for <see cref="LabelNameCondition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILabelNameConditionModelProperties _labelNameCondition;

        /// <summary>A single label name condition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILabelNameConditionModelProperties LabelNameCondition { get => (this._labelNameCondition = this._labelNameCondition ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LabelNameConditionModelProperties()); set => this._labelNameCondition = value; }

        /// <summary>
        /// The label name that a log record must contain in order to meet the condition. This must be a fully qualified label name.
        /// Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web
        /// ACL context of the rule that added the label.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LabelNameConditionLabelName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILabelNameConditionModelPropertiesInternal)LabelNameCondition).LabelName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILabelNameConditionModelPropertiesInternal)LabelNameCondition).LabelName = value ?? null; }

        /// <summary>Internal Acessors for ActionCondition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IActionConditionModelProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConditionInternal.ActionCondition { get => (this._actionCondition = this._actionCondition ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ActionConditionModelProperties()); set { {_actionCondition = value;} } }

        /// <summary>Internal Acessors for LabelNameCondition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILabelNameConditionModelProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConditionInternal.LabelNameCondition { get => (this._labelNameCondition = this._labelNameCondition ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LabelNameConditionModelProperties()); set { {_labelNameCondition = value;} } }

        /// <summary>Creates an new <see cref="Condition" /> instance.</summary>
        public Condition()
        {

        }
    }
    /// Definition of Condition
    public partial interface ICondition :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all
        /// conditions or must match at least one condition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.",
        SerializedName = @"action",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Action) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Action? ActionConditionAction { get; set; }
        /// <summary>
        /// The label name that a log record must contain in order to meet the condition. This must be a fully qualified label name.
        /// Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web
        /// ACL context of the rule that added the label.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The label name that a log record must contain in order to meet the condition. This must be a fully qualified label name. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label.",
        SerializedName = @"labelName",
        PossibleTypes = new [] { typeof(string) })]
        string LabelNameConditionLabelName { get; set; }

    }
    /// Definition of Condition
    internal partial interface IConditionInternal

    {
        /// <summary>A single action condition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IActionConditionModelProperties ActionCondition { get; set; }
        /// <summary>
        /// Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all
        /// conditions or must match at least one condition.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Action? ActionConditionAction { get; set; }
        /// <summary>A single label name condition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILabelNameConditionModelProperties LabelNameCondition { get; set; }
        /// <summary>
        /// The label name that a log record must contain in order to meet the condition. This must be a fully qualified label name.
        /// Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web
        /// ACL context of the rule that added the label.
        /// </summary>
        string LabelNameConditionLabelName { get; set; }

    }
}