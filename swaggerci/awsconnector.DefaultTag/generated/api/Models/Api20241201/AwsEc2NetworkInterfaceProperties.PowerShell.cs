// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsEc2NetworkInterface</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsEc2NetworkInterfacePropertiesTypeConverter))]
    public partial class AwsEc2NetworkInterfaceProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2NetworkInterfaceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsEc2NetworkInterfaceProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ConnectionTrackingSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecification = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecification) content.GetValueForProperty("ConnectionTrackingSpecification",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecification, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ConnectionTrackingSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("EnablePrimaryIpv6"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).EnablePrimaryIpv6 = (bool?) content.GetValueForProperty("EnablePrimaryIpv6",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).EnablePrimaryIpv6, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("GroupSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).GroupSet = (string[]) content.GetValueForProperty("GroupSet",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).GroupSet, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("InterfaceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).InterfaceType = (string) content.GetValueForProperty("InterfaceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).InterfaceType, global::System.Convert.ToString);
            }
            if (content.Contains("Ipv4PrefixCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv4PrefixCount = (int?) content.GetValueForProperty("Ipv4PrefixCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv4PrefixCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Ipv4Prefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv4Prefix = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIpv4PrefixSpecification[]) content.GetValueForProperty("Ipv4Prefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv4Prefix, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIpv4PrefixSpecification>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Ipv4PrefixSpecificationTypeConverter.ConvertFrom));
            }
            if (content.Contains("Ipv6AddressCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6AddressCount = (int?) content.GetValueForProperty("Ipv6AddressCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6AddressCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Ipv6Address"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6Address = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6AddressAutoGenerated[]) content.GetValueForProperty("Ipv6Address",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6Address, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6AddressAutoGenerated>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceIpv6AddressAutoGeneratedTypeConverter.ConvertFrom));
            }
            if (content.Contains("Ipv6PrefixCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6PrefixCount = (int?) content.GetValueForProperty("Ipv6PrefixCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6PrefixCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Ipv6Prefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6Prefix = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIpv6PrefixSpecification[]) content.GetValueForProperty("Ipv6Prefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6Prefix, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIpv6PrefixSpecification>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Ipv6PrefixSpecificationTypeConverter.ConvertFrom));
            }
            if (content.Contains("PrimaryIpv6Address"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrimaryIpv6Address = (string) content.GetValueForProperty("PrimaryIpv6Address",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrimaryIpv6Address, global::System.Convert.ToString);
            }
            if (content.Contains("PrimaryPrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrimaryPrivateIPAddress = (string) content.GetValueForProperty("PrimaryPrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrimaryPrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrivateIPAddress = (string) content.GetValueForProperty("PrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddresses"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrivateIPAddresses = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateIPAddressSpecification[]) content.GetValueForProperty("PrivateIPAddresses",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrivateIPAddresses, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateIPAddressSpecification>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PrivateIPAddressSpecificationTypeConverter.ConvertFrom));
            }
            if (content.Contains("SecondaryPrivateIPAddressCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SecondaryPrivateIPAddressCount = (int?) content.GetValueForProperty("SecondaryPrivateIPAddressCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SecondaryPrivateIPAddressCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SecondaryPrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SecondaryPrivateIPAddress = (string[]) content.GetValueForProperty("SecondaryPrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SecondaryPrivateIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SourceDestCheck"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SourceDestCheck = (bool?) content.GetValueForProperty("SourceDestCheck",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SourceDestCheck, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated17[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated17>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated17TypeConverter.ConvertFrom));
            }
            if (content.Contains("VpcId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).VpcId = (string) content.GetValueForProperty("VpcId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).VpcId, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionTrackingSpecificationUdpTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationUdpTimeout = (int?) content.GetValueForProperty("ConnectionTrackingSpecificationUdpTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationUdpTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ConnectionTrackingSpecificationTcpEstablishedTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationTcpEstablishedTimeout = (int?) content.GetValueForProperty("ConnectionTrackingSpecificationTcpEstablishedTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationTcpEstablishedTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ConnectionTrackingSpecificationUdpStreamTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationUdpStreamTimeout = (int?) content.GetValueForProperty("ConnectionTrackingSpecificationUdpStreamTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationUdpStreamTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2NetworkInterfaceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsEc2NetworkInterfaceProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ConnectionTrackingSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecification = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecification) content.GetValueForProperty("ConnectionTrackingSpecification",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecification, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ConnectionTrackingSpecificationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("EnablePrimaryIpv6"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).EnablePrimaryIpv6 = (bool?) content.GetValueForProperty("EnablePrimaryIpv6",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).EnablePrimaryIpv6, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("GroupSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).GroupSet = (string[]) content.GetValueForProperty("GroupSet",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).GroupSet, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("InterfaceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).InterfaceType = (string) content.GetValueForProperty("InterfaceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).InterfaceType, global::System.Convert.ToString);
            }
            if (content.Contains("Ipv4PrefixCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv4PrefixCount = (int?) content.GetValueForProperty("Ipv4PrefixCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv4PrefixCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Ipv4Prefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv4Prefix = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIpv4PrefixSpecification[]) content.GetValueForProperty("Ipv4Prefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv4Prefix, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIpv4PrefixSpecification>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Ipv4PrefixSpecificationTypeConverter.ConvertFrom));
            }
            if (content.Contains("Ipv6AddressCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6AddressCount = (int?) content.GetValueForProperty("Ipv6AddressCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6AddressCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Ipv6Address"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6Address = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6AddressAutoGenerated[]) content.GetValueForProperty("Ipv6Address",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6Address, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceIpv6AddressAutoGenerated>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceIpv6AddressAutoGeneratedTypeConverter.ConvertFrom));
            }
            if (content.Contains("Ipv6PrefixCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6PrefixCount = (int?) content.GetValueForProperty("Ipv6PrefixCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6PrefixCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Ipv6Prefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6Prefix = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIpv6PrefixSpecification[]) content.GetValueForProperty("Ipv6Prefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Ipv6Prefix, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIpv6PrefixSpecification>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Ipv6PrefixSpecificationTypeConverter.ConvertFrom));
            }
            if (content.Contains("PrimaryIpv6Address"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrimaryIpv6Address = (string) content.GetValueForProperty("PrimaryIpv6Address",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrimaryIpv6Address, global::System.Convert.ToString);
            }
            if (content.Contains("PrimaryPrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrimaryPrivateIPAddress = (string) content.GetValueForProperty("PrimaryPrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrimaryPrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrivateIPAddress = (string) content.GetValueForProperty("PrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateIPAddresses"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrivateIPAddresses = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateIPAddressSpecification[]) content.GetValueForProperty("PrivateIPAddresses",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).PrivateIPAddresses, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPrivateIPAddressSpecification>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PrivateIPAddressSpecificationTypeConverter.ConvertFrom));
            }
            if (content.Contains("SecondaryPrivateIPAddressCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SecondaryPrivateIPAddressCount = (int?) content.GetValueForProperty("SecondaryPrivateIPAddressCount",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SecondaryPrivateIPAddressCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SecondaryPrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SecondaryPrivateIPAddress = (string[]) content.GetValueForProperty("SecondaryPrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SecondaryPrivateIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SourceDestCheck"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SourceDestCheck = (bool?) content.GetValueForProperty("SourceDestCheck",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SourceDestCheck, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated17[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated17>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated17TypeConverter.ConvertFrom));
            }
            if (content.Contains("VpcId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).VpcId = (string) content.GetValueForProperty("VpcId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).VpcId, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionTrackingSpecificationUdpTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationUdpTimeout = (int?) content.GetValueForProperty("ConnectionTrackingSpecificationUdpTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationUdpTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ConnectionTrackingSpecificationTcpEstablishedTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationTcpEstablishedTimeout = (int?) content.GetValueForProperty("ConnectionTrackingSpecificationTcpEstablishedTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationTcpEstablishedTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ConnectionTrackingSpecificationUdpStreamTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationUdpStreamTimeout = (int?) content.GetValueForProperty("ConnectionTrackingSpecificationUdpStreamTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfacePropertiesInternal)this).ConnectionTrackingSpecificationUdpStreamTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2NetworkInterfaceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfaceProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfaceProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsEc2NetworkInterfaceProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2NetworkInterfaceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfaceProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfaceProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsEc2NetworkInterfaceProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsEc2NetworkInterfaceProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsEc2NetworkInterfaceProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2NetworkInterfaceProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsEc2NetworkInterface
    [System.ComponentModel.TypeConverter(typeof(AwsEc2NetworkInterfacePropertiesTypeConverter))]
    public partial interface IAwsEc2NetworkInterfaceProperties

    {

    }
}