// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of Ec2VPCEndpoint</summary>
    public partial class Ec2VpcEndpointProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VpcEndpointProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VpcEndpointPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Property creationTimestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyCreationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).CreationTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).CreationTimestamp = value ?? null; }

        /// <summary>Property dnsEntries</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] AwPropertyDnsEntry { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).DnsEntry; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).DnsEntry = value ?? null /* arrayOf */; }

        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).Id = value ?? null; }

        /// <summary>Property networkInterfaceIds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] AwPropertyNetworkInterfaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).NetworkInterfaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).NetworkInterfaceId = value ?? null /* arrayOf */; }

        /// <summary>
        /// An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access
        /// to the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates
        /// in YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling
        /// the API to create or modify the VPC endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesPolicyDocument AwPropertyPolicyDocument { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).PolicyDocument; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).PolicyDocument = value ?? null /* model class */; }

        /// <summary>
        /// Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record
        /// set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``),
        /// which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests
        /// to the default public DNS name for the service instead of the public DNS names that are automatically generated by the
        /// VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames``
        /// and ``enableDnsSupport``. This property is supported only for interface endpoints. Default: ``false``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyPrivateDnsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).PrivateDnsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).PrivateDnsEnabled = value ?? default(bool); }

        /// <summary>The IDs of the route tables. Routing is supported only for gateway endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] AwPropertyRouteTableId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).RouteTableId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).RouteTableId = value ?? null /* arrayOf */; }

        /// <summary>
        /// The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified,
        /// we use the default security group for the VPC. Security groups are supported only for interface endpoints.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] AwPropertySecurityGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).SecurityGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).SecurityGroupId = value ?? null /* arrayOf */; }

        /// <summary>The name of the endpoint service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyServiceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).ServiceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).ServiceName = value ?? null; }

        /// <summary>
        /// The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface
        /// endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load
        /// Balancer endpoint, you can specify only one subnet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] AwPropertySubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).SubnetId = value ?? null /* arrayOf */; }

        /// <summary>The type of endpoint. Default: Gateway</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VpcEndpointType? AwPropertyVpcEndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).VpcEndpointType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).VpcEndpointType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VpcEndpointType)""); }

        /// <summary>The ID of the VPC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyVpcId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).VpcId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal)AwsProperty).VpcId = value ?? null; }

        /// <summary>Backing field for <see cref="AwsAccountId" /> property.</summary>
        private string _awsAccountId;

        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsAccountId { get => this._awsAccountId; set => this._awsAccountId = value; }

        /// <summary>Backing field for <see cref="AwsProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointProperties _awsProperty;

        /// <summary>AWS Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointProperties AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2VpcEndpointProperties()); set => this._awsProperty = value; }

        /// <summary>Backing field for <see cref="AwsRegion" /> property.</summary>
        private string _awsRegion;

        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsRegion { get => this._awsRegion; set => this._awsRegion = value; }

        /// <summary>Backing field for <see cref="AwsSourceSchema" /> property.</summary>
        private string _awsSourceSchema;

        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsSourceSchema { get => this._awsSourceSchema; set => this._awsSourceSchema = value; }

        /// <summary>Backing field for <see cref="AwsTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VpcEndpointPropertiesAwsTags _awsTag;

        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VpcEndpointPropertiesAwsTags AwsTag { get => (this._awsTag = this._awsTag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Ec2VpcEndpointPropertiesAwsTags()); set => this._awsTag = value; }

        /// <summary>Internal Acessors for AwsProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VpcEndpointPropertiesInternal.AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2VpcEndpointProperties()); set { {_awsProperty = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VpcEndpointPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicCloudConnectorsResourceId" /> property.</summary>
        private string _publicCloudConnectorsResourceId;

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudConnectorsResourceId { get => this._publicCloudConnectorsResourceId; set => this._publicCloudConnectorsResourceId = value; }

        /// <summary>Backing field for <see cref="PublicCloudResourceName" /> property.</summary>
        private string _publicCloudResourceName;

        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudResourceName { get => this._publicCloudResourceName; set => this._publicCloudResourceName = value; }

        /// <summary>Creates an new <see cref="Ec2VpcEndpointProperties" /> instance.</summary>
        public Ec2VpcEndpointProperties()
        {

        }
    }
    /// Definition of Ec2VPCEndpoint
    public partial interface IEc2VpcEndpointProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>Property creationTimestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property creationTimestamp",
        SerializedName = @"creationTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyCreationTimestamp { get; set; }
        /// <summary>Property dnsEntries</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property dnsEntries",
        SerializedName = @"dnsEntries",
        PossibleTypes = new [] { typeof(string) })]
        string[] AwPropertyDnsEntry { get; set; }
        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyId { get; set; }
        /// <summary>Property networkInterfaceIds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property networkInterfaceIds",
        SerializedName = @"networkInterfaceIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AwPropertyNetworkInterfaceId { get; set; }
        /// <summary>
        /// An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access
        /// to the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates
        /// in YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling
        /// the API to create or modify the VPC endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access to the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates in YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling the API to create or modify the VPC endpoint.",
        SerializedName = @"policyDocument",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesPolicyDocument) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesPolicyDocument AwPropertyPolicyDocument { get; set; }
        /// <summary>
        /// Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record
        /// set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``),
        /// which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests
        /// to the default public DNS name for the service instead of the public DNS names that are automatically generated by the
        /// VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames``
        /// and ``enableDnsSupport``. This property is supported only for interface endpoints. Default: ``false``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames`` and ``enableDnsSupport``. This property is supported only for interface endpoints. Default: ``false``",
        SerializedName = @"privateDnsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyPrivateDnsEnabled { get; set; }
        /// <summary>The IDs of the route tables. Routing is supported only for gateway endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IDs of the route tables. Routing is supported only for gateway endpoints.",
        SerializedName = @"routeTableIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AwPropertyRouteTableId { get; set; }
        /// <summary>
        /// The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified,
        /// we use the default security group for the VPC. Security groups are supported only for interface endpoints.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified, we use the default security group for the VPC. Security groups are supported only for interface endpoints.",
        SerializedName = @"securityGroupIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AwPropertySecurityGroupId { get; set; }
        /// <summary>The name of the endpoint service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the endpoint service.",
        SerializedName = @"serviceName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyServiceName { get; set; }
        /// <summary>
        /// The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface
        /// endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load
        /// Balancer endpoint, you can specify only one subnet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.",
        SerializedName = @"subnetIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AwPropertySubnetId { get; set; }
        /// <summary>The type of endpoint. Default: Gateway</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of endpoint. Default: Gateway",
        SerializedName = @"vpcEndpointType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VpcEndpointType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VpcEndpointType? AwPropertyVpcEndpointType { get; set; }
        /// <summary>The ID of the VPC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the VPC.",
        SerializedName = @"vpcId",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyVpcId { get; set; }
        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AwsAccountId { get; set; }
        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VpcEndpointPropertiesAwsTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VpcEndpointPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudResourceName { get; set; }

    }
    /// Definition of Ec2VPCEndpoint
    internal partial interface IEc2VpcEndpointPropertiesInternal

    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        string Arn { get; set; }
        /// <summary>Property creationTimestamp</summary>
        string AwPropertyCreationTimestamp { get; set; }
        /// <summary>Property dnsEntries</summary>
        string[] AwPropertyDnsEntry { get; set; }
        /// <summary>Property id</summary>
        string AwPropertyId { get; set; }
        /// <summary>Property networkInterfaceIds</summary>
        string[] AwPropertyNetworkInterfaceId { get; set; }
        /// <summary>
        /// An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access
        /// to the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates
        /// in YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling
        /// the API to create or modify the VPC endpoint.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesPolicyDocument AwPropertyPolicyDocument { get; set; }
        /// <summary>
        /// Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record
        /// set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``),
        /// which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests
        /// to the default public DNS name for the service instead of the public DNS names that are automatically generated by the
        /// VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames``
        /// and ``enableDnsSupport``. This property is supported only for interface endpoints. Default: ``false``
        /// </summary>
        bool? AwPropertyPrivateDnsEnabled { get; set; }
        /// <summary>The IDs of the route tables. Routing is supported only for gateway endpoints.</summary>
        string[] AwPropertyRouteTableId { get; set; }
        /// <summary>
        /// The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified,
        /// we use the default security group for the VPC. Security groups are supported only for interface endpoints.
        /// </summary>
        string[] AwPropertySecurityGroupId { get; set; }
        /// <summary>The name of the endpoint service.</summary>
        string AwPropertyServiceName { get; set; }
        /// <summary>
        /// The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface
        /// endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load
        /// Balancer endpoint, you can specify only one subnet.
        /// </summary>
        string[] AwPropertySubnetId { get; set; }
        /// <summary>The type of endpoint. Default: Gateway</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VpcEndpointType? AwPropertyVpcEndpointType { get; set; }
        /// <summary>The ID of the VPC.</summary>
        string AwPropertyVpcId { get; set; }
        /// <summary>AWS Account ID</summary>
        string AwsAccountId { get; set; }
        /// <summary>AWS Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointProperties AwsProperty { get; set; }
        /// <summary>AWS Region</summary>
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEc2VpcEndpointPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        string PublicCloudResourceName { get; set; }

    }
}