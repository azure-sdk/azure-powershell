// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of AdditionalAuthenticationProvider</summary>
    public partial class AdditionalAuthenticationProvider :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdditionalAuthenticationProvider,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdditionalAuthenticationProviderInternal
    {

        /// <summary>Backing field for <see cref="AuthenticationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticationTypeEnumValue _authenticationType;

        /// <summary>
        /// <p>The authentication type: API key, Identity and Access Management (IAM), OpenID Connect (OIDC), Amazon Cognito user
        /// pools, or Lambda.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticationTypeEnumValue AuthenticationType { get => (this._authenticationType = this._authenticationType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AuthenticationTypeEnumValue()); set => this._authenticationType = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationType? AuthenticationTypeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticationTypeEnumValueInternal)AuthenticationType).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticationTypeEnumValueInternal)AuthenticationType).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationType)""); }

        /// <summary>Backing field for <see cref="LambdaAuthorizerConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfig _lambdaAuthorizerConfig;

        /// <summary><p>Configuration for Lambda function authorization.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfig LambdaAuthorizerConfig { get => (this._lambdaAuthorizerConfig = this._lambdaAuthorizerConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LambdaAuthorizerConfig()); set => this._lambdaAuthorizerConfig = value; }

        /// <summary>
        /// <p>The number of seconds a response should be cached for. The default is 0 seconds, which disables caching. If you don't
        /// specify a value for <code>authorizerResultTtlInSeconds</code>, the default value is used. The maximum value is one hour
        /// (3600 seconds). The Lambda function can override this by returning a <code>ttlOverride</code> key in its response.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? LambdaAuthorizerConfigAuthorizerResultTtlInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfigInternal)LambdaAuthorizerConfig).AuthorizerResultTtlInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfigInternal)LambdaAuthorizerConfig).AuthorizerResultTtlInSecond = value ?? default(int); }

        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the Lambda function to be called for authorization. This can be a standard Lambda
        /// ARN, a version ARN (<code>.../v3</code>), or an alias ARN. </p> <p> <b>Note</b>: This Lambda function must have the following
        /// resource-based policy assigned to it. When configuring Lambda authorizers in the console, this is done for you. To use
        /// the Command Line Interface (CLI), run the following:</p> <p> <code>aws lambda add-permission --function-name 'arn:aws:lambda:us-east-2:111122223333:function:my-function'
        /// --statement-id 'appsync' --principal appsync.amazonaws.com --action lambda:InvokeFunction</code> </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LambdaAuthorizerConfigAuthorizerUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfigInternal)LambdaAuthorizerConfig).AuthorizerUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfigInternal)LambdaAuthorizerConfig).AuthorizerUri = value ?? null; }

        /// <summary>
        /// <p>A regular expression for validation of tokens before the Lambda function is called.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LambdaAuthorizerConfigIdentityValidationExpression { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfigInternal)LambdaAuthorizerConfig).IdentityValidationExpression; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfigInternal)LambdaAuthorizerConfig).IdentityValidationExpression = value ?? null; }

        /// <summary>Internal Acessors for AuthenticationType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticationTypeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdditionalAuthenticationProviderInternal.AuthenticationType { get => (this._authenticationType = this._authenticationType ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AuthenticationTypeEnumValue()); set { {_authenticationType = value;} } }

        /// <summary>Internal Acessors for LambdaAuthorizerConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdditionalAuthenticationProviderInternal.LambdaAuthorizerConfig { get => (this._lambdaAuthorizerConfig = this._lambdaAuthorizerConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LambdaAuthorizerConfig()); set { {_lambdaAuthorizerConfig = value;} } }

        /// <summary>Internal Acessors for OpenIdConnectConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdditionalAuthenticationProviderInternal.OpenIdConnectConfig { get => (this._openIdConnectConfig = this._openIdConnectConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OpenIdConnectConfig()); set { {_openIdConnectConfig = value;} } }

        /// <summary>Internal Acessors for UserPoolConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoUserPoolConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdditionalAuthenticationProviderInternal.UserPoolConfig { get => (this._userPoolConfig = this._userPoolConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CognitoUserPoolConfig()); set { {_userPoolConfig = value;} } }

        /// <summary>Backing field for <see cref="OpenIdConnectConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfig _openIdConnectConfig;

        /// <summary><p>The OIDC configuration.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfig OpenIdConnectConfig { get => (this._openIdConnectConfig = this._openIdConnectConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OpenIdConnectConfig()); set => this._openIdConnectConfig = value; }

        /// <summary>
        /// <p>The number of milliseconds that a token is valid after being authenticated.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public long? OpenIdConnectConfigAuthTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfigInternal)OpenIdConnectConfig).AuthTtl; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfigInternal)OpenIdConnectConfig).AuthTtl = value ?? default(long); }

        /// <summary>
        /// <p>The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when
        /// the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync
        /// can validate against multiple client identifiers at a time.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfigInternal)OpenIdConnectConfig).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfigInternal)OpenIdConnectConfig).ClientId = value ?? null; }

        /// <summary>
        /// <p>The number of milliseconds that a token is valid after it's issued to a user.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public long? OpenIdConnectConfigIatTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfigInternal)OpenIdConnectConfig).IatTtl; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfigInternal)OpenIdConnectConfig).IatTtl = value ?? default(long); }

        /// <summary>
        /// <p>The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of <code>iss</code>
        /// in the ID token.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigIssuer { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfigInternal)OpenIdConnectConfig).Issuer; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfigInternal)OpenIdConnectConfig).Issuer = value ?? null; }

        /// <summary>Backing field for <see cref="UserPoolConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoUserPoolConfig _userPoolConfig;

        /// <summary><p>The Amazon Cognito user pool configuration.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoUserPoolConfig UserPoolConfig { get => (this._userPoolConfig = this._userPoolConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CognitoUserPoolConfig()); set => this._userPoolConfig = value; }

        /// <summary>
        /// <p>A regular expression for validating the incoming Amazon Cognito user pool app client ID. If this value isn't set, no
        /// filtering is applied.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string UserPoolConfigAppIdClientRegex { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoUserPoolConfigInternal)UserPoolConfig).AppIdClientRegex; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoUserPoolConfigInternal)UserPoolConfig).AppIdClientRegex = value ?? null; }

        /// <summary><p>The Amazon Web Services Region in which the user pool was created.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string UserPoolConfigAwsRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoUserPoolConfigInternal)UserPoolConfig).AwsRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoUserPoolConfigInternal)UserPoolConfig).AwsRegion = value ?? null; }

        /// <summary><p>The user pool ID.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string UserPoolConfigUserPoolId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoUserPoolConfigInternal)UserPoolConfig).UserPoolId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoUserPoolConfigInternal)UserPoolConfig).UserPoolId = value ?? null; }

        /// <summary>Creates an new <see cref="AdditionalAuthenticationProvider" /> instance.</summary>
        public AdditionalAuthenticationProvider()
        {

        }
    }
    /// Definition of AdditionalAuthenticationProvider
    public partial interface IAdditionalAuthenticationProvider :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationType? AuthenticationTypeValue { get; set; }
        /// <summary>
        /// <p>The number of seconds a response should be cached for. The default is 0 seconds, which disables caching. If you don't
        /// specify a value for <code>authorizerResultTtlInSeconds</code>, the default value is used. The maximum value is one hour
        /// (3600 seconds). The Lambda function can override this by returning a <code>ttlOverride</code> key in its response.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of seconds a response should be cached for. The default is 0 seconds, which disables caching. If you don't specify a value for <code>authorizerResultTtlInSeconds</code>, the default value is used. The maximum value is one hour (3600 seconds). The Lambda function can override this by returning a <code>ttlOverride</code> key in its response.</p>",
        SerializedName = @"authorizerResultTtlInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? LambdaAuthorizerConfigAuthorizerResultTtlInSecond { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the Lambda function to be called for authorization. This can be a standard Lambda
        /// ARN, a version ARN (<code>.../v3</code>), or an alias ARN. </p> <p> <b>Note</b>: This Lambda function must have the following
        /// resource-based policy assigned to it. When configuring Lambda authorizers in the console, this is done for you. To use
        /// the Command Line Interface (CLI), run the following:</p> <p> <code>aws lambda add-permission --function-name 'arn:aws:lambda:us-east-2:111122223333:function:my-function'
        /// --statement-id 'appsync' --principal appsync.amazonaws.com --action lambda:InvokeFunction</code> </p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the Lambda function to be called for authorization. This can be a standard Lambda ARN, a version ARN (<code>.../v3</code>), or an alias ARN. </p> <p> <b>Note</b>: This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the console, this is done for you. To use the Command Line Interface (CLI), run the following:</p> <p> <code>aws lambda add-permission --function-name 'arn:aws:lambda:us-east-2:111122223333:function:my-function' --statement-id 'appsync' --principal appsync.amazonaws.com --action lambda:InvokeFunction</code> </p>",
        SerializedName = @"authorizerUri",
        PossibleTypes = new [] { typeof(string) })]
        string LambdaAuthorizerConfigAuthorizerUri { get; set; }
        /// <summary>
        /// <p>A regular expression for validation of tokens before the Lambda function is called.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A regular expression for validation of tokens before the Lambda function is called.</p>",
        SerializedName = @"identityValidationExpression",
        PossibleTypes = new [] { typeof(string) })]
        string LambdaAuthorizerConfigIdentityValidationExpression { get; set; }
        /// <summary>
        /// <p>The number of milliseconds that a token is valid after being authenticated.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of milliseconds that a token is valid after being authenticated.</p>",
        SerializedName = @"authTTL",
        PossibleTypes = new [] { typeof(long) })]
        long? OpenIdConnectConfigAuthTtl { get; set; }
        /// <summary>
        /// <p>The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when
        /// the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync
        /// can validate against multiple client identifiers at a time.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync can validate against multiple client identifiers at a time.</p>",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigClientId { get; set; }
        /// <summary>
        /// <p>The number of milliseconds that a token is valid after it's issued to a user.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The number of milliseconds that a token is valid after it's issued to a user.</p>",
        SerializedName = @"iatTTL",
        PossibleTypes = new [] { typeof(long) })]
        long? OpenIdConnectConfigIatTtl { get; set; }
        /// <summary>
        /// <p>The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of <code>iss</code>
        /// in the ID token.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>",
        SerializedName = @"issuer",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigIssuer { get; set; }
        /// <summary>
        /// <p>A regular expression for validating the incoming Amazon Cognito user pool app client ID. If this value isn't set, no
        /// filtering is applied.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A regular expression for validating the incoming Amazon Cognito user pool app client ID. If this value isn't set, no filtering is applied.</p>",
        SerializedName = @"appIdClientRegex",
        PossibleTypes = new [] { typeof(string) })]
        string UserPoolConfigAppIdClientRegex { get; set; }
        /// <summary><p>The Amazon Web Services Region in which the user pool was created.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Web Services Region in which the user pool was created.</p>",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string UserPoolConfigAwsRegion { get; set; }
        /// <summary><p>The user pool ID.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The user pool ID.</p>",
        SerializedName = @"userPoolId",
        PossibleTypes = new [] { typeof(string) })]
        string UserPoolConfigUserPoolId { get; set; }

    }
    /// Definition of AdditionalAuthenticationProvider
    internal partial interface IAdditionalAuthenticationProviderInternal

    {
        /// <summary>
        /// <p>The authentication type: API key, Identity and Access Management (IAM), OpenID Connect (OIDC), Amazon Cognito user
        /// pools, or Lambda.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticationTypeEnumValue AuthenticationType { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationType? AuthenticationTypeValue { get; set; }
        /// <summary><p>Configuration for Lambda function authorization.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILambdaAuthorizerConfig LambdaAuthorizerConfig { get; set; }
        /// <summary>
        /// <p>The number of seconds a response should be cached for. The default is 0 seconds, which disables caching. If you don't
        /// specify a value for <code>authorizerResultTtlInSeconds</code>, the default value is used. The maximum value is one hour
        /// (3600 seconds). The Lambda function can override this by returning a <code>ttlOverride</code> key in its response.</p>
        /// </summary>
        int? LambdaAuthorizerConfigAuthorizerResultTtlInSecond { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the Lambda function to be called for authorization. This can be a standard Lambda
        /// ARN, a version ARN (<code>.../v3</code>), or an alias ARN. </p> <p> <b>Note</b>: This Lambda function must have the following
        /// resource-based policy assigned to it. When configuring Lambda authorizers in the console, this is done for you. To use
        /// the Command Line Interface (CLI), run the following:</p> <p> <code>aws lambda add-permission --function-name 'arn:aws:lambda:us-east-2:111122223333:function:my-function'
        /// --statement-id 'appsync' --principal appsync.amazonaws.com --action lambda:InvokeFunction</code> </p>
        /// </summary>
        string LambdaAuthorizerConfigAuthorizerUri { get; set; }
        /// <summary>
        /// <p>A regular expression for validation of tokens before the Lambda function is called.</p>
        /// </summary>
        string LambdaAuthorizerConfigIdentityValidationExpression { get; set; }
        /// <summary><p>The OIDC configuration.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOpenIdConnectConfig OpenIdConnectConfig { get; set; }
        /// <summary>
        /// <p>The number of milliseconds that a token is valid after being authenticated.</p>
        /// </summary>
        long? OpenIdConnectConfigAuthTtl { get; set; }
        /// <summary>
        /// <p>The client identifier of the relying party at the OpenID identity provider. This identifier is typically obtained when
        /// the relying party is registered with the OpenID identity provider. You can specify a regular expression so that AppSync
        /// can validate against multiple client identifiers at a time.</p>
        /// </summary>
        string OpenIdConnectConfigClientId { get; set; }
        /// <summary>
        /// <p>The number of milliseconds that a token is valid after it's issued to a user.</p>
        /// </summary>
        long? OpenIdConnectConfigIatTtl { get; set; }
        /// <summary>
        /// <p>The issuer for the OIDC configuration. The issuer returned by discovery must exactly match the value of <code>iss</code>
        /// in the ID token.</p>
        /// </summary>
        string OpenIdConnectConfigIssuer { get; set; }
        /// <summary><p>The Amazon Cognito user pool configuration.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICognitoUserPoolConfig UserPoolConfig { get; set; }
        /// <summary>
        /// <p>A regular expression for validating the incoming Amazon Cognito user pool app client ID. If this value isn't set, no
        /// filtering is applied.</p>
        /// </summary>
        string UserPoolConfigAppIdClientRegex { get; set; }
        /// <summary><p>The Amazon Web Services Region in which the user pool was created.</p></summary>
        string UserPoolConfigAwsRegion { get; set; }
        /// <summary><p>The user pool ID.</p></summary>
        string UserPoolConfigUserPoolId { get; set; }

    }
}