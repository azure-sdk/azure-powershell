// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of EphemeralStorage</summary>
    public partial class EphemeralStorage :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorage,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorageInternal
    {

        /// <summary>Backing field for <see cref="SizeInGiB" /> property.</summary>
        private int? _sizeInGiB;

        /// <summary>
        /// The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is ``20`` GiB and the
        /// maximum supported value is ``200`` GiB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? SizeInGiB { get => this._sizeInGiB; set => this._sizeInGiB = value; }

        /// <summary>Creates an new <see cref="EphemeralStorage" /> instance.</summary>
        public EphemeralStorage()
        {

        }
    }
    /// Definition of EphemeralStorage
    public partial interface IEphemeralStorage :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is ``20`` GiB and the
        /// maximum supported value is ``200`` GiB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is ``20`` GiB and the maximum supported value is ``200`` GiB.",
        SerializedName = @"sizeInGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? SizeInGiB { get; set; }

    }
    /// Definition of EphemeralStorage
    internal partial interface IEphemeralStorageInternal

    {
        /// <summary>
        /// The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is ``20`` GiB and the
        /// maximum supported value is ``200`` GiB.
        /// </summary>
        int? SizeInGiB { get; set; }

    }
}