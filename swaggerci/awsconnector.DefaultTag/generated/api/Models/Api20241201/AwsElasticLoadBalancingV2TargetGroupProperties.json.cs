// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsElasticLoadBalancingV2TargetGroup</summary>
    public partial class AwsElasticLoadBalancingV2TargetGroupProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject into a new instance of <see cref="AwsElasticLoadBalancingV2TargetGroupProperties"
        /// />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AwsElasticLoadBalancingV2TargetGroupProperties(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_matcher = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("matcher"), out var __jsonMatcher) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Matcher.FromJson(__jsonMatcher) : Matcher;}
            {_healthCheckEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("healthCheckEnabled"), out var __jsonHealthCheckEnabled) ? (bool?)__jsonHealthCheckEnabled : HealthCheckEnabled;}
            {_healthCheckIntervalSecond = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("healthCheckIntervalSeconds"), out var __jsonHealthCheckIntervalSeconds) ? (int?)__jsonHealthCheckIntervalSeconds : HealthCheckIntervalSecond;}
            {_healthCheckPath = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("healthCheckPath"), out var __jsonHealthCheckPath) ? (string)__jsonHealthCheckPath : (string)HealthCheckPath;}
            {_healthCheckPort = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("healthCheckPort"), out var __jsonHealthCheckPort) ? (string)__jsonHealthCheckPort : (string)HealthCheckPort;}
            {_healthCheckProtocol = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("healthCheckProtocol"), out var __jsonHealthCheckProtocol) ? (string)__jsonHealthCheckProtocol : (string)HealthCheckProtocol;}
            {_healthCheckTimeoutSecond = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("healthCheckTimeoutSeconds"), out var __jsonHealthCheckTimeoutSeconds) ? (int?)__jsonHealthCheckTimeoutSeconds : HealthCheckTimeoutSecond;}
            {_healthyThresholdCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("healthyThresholdCount"), out var __jsonHealthyThresholdCount) ? (int?)__jsonHealthyThresholdCount : HealthyThresholdCount;}
            {_iPAddressType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("ipAddressType"), out var __jsonIPAddressType) ? (string)__jsonIPAddressType : (string)IPAddressType;}
            {_loadBalancerArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("loadBalancerArns"), out var __jsonLoadBalancerArns) ? If( __jsonLoadBalancerArns as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : LoadBalancerArn;}
            {_name = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("name"), out var __jsonName) ? (string)__jsonName : (string)Name;}
            {_port = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("port"), out var __jsonPort) ? (int?)__jsonPort : Port;}
            {_protocol = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("protocol"), out var __jsonProtocol) ? (string)__jsonProtocol : (string)Protocol;}
            {_protocolVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("protocolVersion"), out var __jsonProtocolVersion) ? (string)__jsonProtocolVersion : (string)ProtocolVersion;}
            {_tag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("tags"), out var __jsonTags) ? If( __jsonTags as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated31[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated31) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated31.FromJson(__p) )) ))() : null : Tag;}
            {_targetGroupArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("targetGroupArn"), out var __jsonTargetGroupArn) ? (string)__jsonTargetGroupArn : (string)TargetGroupArn;}
            {_targetGroupAttribute = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("targetGroupAttributes"), out var __jsonTargetGroupAttributes) ? If( __jsonTargetGroupAttributes as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetGroupAttribute[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetGroupAttribute) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TargetGroupAttribute.FromJson(__k) )) ))() : null : TargetGroupAttribute;}
            {_targetGroupFullName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("targetGroupFullName"), out var __jsonTargetGroupFullName) ? (string)__jsonTargetGroupFullName : (string)TargetGroupFullName;}
            {_targetGroupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("targetGroupName"), out var __jsonTargetGroupName) ? (string)__jsonTargetGroupName : (string)TargetGroupName;}
            {_targetType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("targetType"), out var __jsonTargetType) ? (string)__jsonTargetType : (string)TargetType;}
            {_target = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("targets"), out var __jsonTargets) ? If( __jsonTargets as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetDescription[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetDescription) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TargetDescription.FromJson(__f) )) ))() : null : Target;}
            {_unhealthyThresholdCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("unhealthyThresholdCount"), out var __jsonUnhealthyThresholdCount) ? (int?)__jsonUnhealthyThresholdCount : UnhealthyThresholdCount;}
            {_vpcId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("vpcId"), out var __jsonVpcId) ? (string)__jsonVpcId : (string)VpcId;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticLoadBalancingV2TargetGroupProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticLoadBalancingV2TargetGroupProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticLoadBalancingV2TargetGroupProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json ? new AwsElasticLoadBalancingV2TargetGroupProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AwsElasticLoadBalancingV2TargetGroupProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"
        /// />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AwsElasticLoadBalancingV2TargetGroupProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"
        /// />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._matcher ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._matcher.ToJson(null,serializationMode) : null, "matcher" ,container.Add );
            AddIf( null != this._healthCheckEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._healthCheckEnabled) : null, "healthCheckEnabled" ,container.Add );
            AddIf( null != this._healthCheckIntervalSecond ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._healthCheckIntervalSecond) : null, "healthCheckIntervalSeconds" ,container.Add );
            AddIf( null != (((object)this._healthCheckPath)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._healthCheckPath.ToString()) : null, "healthCheckPath" ,container.Add );
            AddIf( null != (((object)this._healthCheckPort)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._healthCheckPort.ToString()) : null, "healthCheckPort" ,container.Add );
            AddIf( null != (((object)this._healthCheckProtocol)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._healthCheckProtocol.ToString()) : null, "healthCheckProtocol" ,container.Add );
            AddIf( null != this._healthCheckTimeoutSecond ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._healthCheckTimeoutSecond) : null, "healthCheckTimeoutSeconds" ,container.Add );
            AddIf( null != this._healthyThresholdCount ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._healthyThresholdCount) : null, "healthyThresholdCount" ,container.Add );
            AddIf( null != (((object)this._iPAddressType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._iPAddressType.ToString()) : null, "ipAddressType" ,container.Add );
            if (null != this._loadBalancerArn)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __x in this._loadBalancerArn )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("loadBalancerArns",__w);
            }
            AddIf( null != (((object)this._name)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._name.ToString()) : null, "name" ,container.Add );
            AddIf( null != this._port ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._port) : null, "port" ,container.Add );
            AddIf( null != (((object)this._protocol)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._protocol.ToString()) : null, "protocol" ,container.Add );
            AddIf( null != (((object)this._protocolVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._protocolVersion.ToString()) : null, "protocolVersion" ,container.Add );
            if (null != this._tag)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __s in this._tag )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("tags",__r);
            }
            AddIf( null != (((object)this._targetGroupArn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._targetGroupArn.ToString()) : null, "targetGroupArn" ,container.Add );
            if (null != this._targetGroupAttribute)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __n in this._targetGroupAttribute )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("targetGroupAttributes",__m);
            }
            AddIf( null != (((object)this._targetGroupFullName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._targetGroupFullName.ToString()) : null, "targetGroupFullName" ,container.Add );
            AddIf( null != (((object)this._targetGroupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._targetGroupName.ToString()) : null, "targetGroupName" ,container.Add );
            AddIf( null != (((object)this._targetType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._targetType.ToString()) : null, "targetType" ,container.Add );
            if (null != this._target)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __i in this._target )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("targets",__h);
            }
            AddIf( null != this._unhealthyThresholdCount ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._unhealthyThresholdCount) : null, "unhealthyThresholdCount" ,container.Add );
            AddIf( null != (((object)this._vpcId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._vpcId.ToString()) : null, "vpcId" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}