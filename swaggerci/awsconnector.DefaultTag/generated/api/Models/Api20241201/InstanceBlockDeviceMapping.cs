// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of InstanceBlockDeviceMapping</summary>
    public partial class InstanceBlockDeviceMapping :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMapping,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMappingInternal
    {

        /// <summary>Backing field for <see cref="DeviceName" /> property.</summary>
        private string _deviceName;

        /// <summary>
        /// <p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DeviceName { get => this._deviceName; set => this._deviceName = value; }

        /// <summary>Backing field for <see cref="Eb" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDevice _eb;

        /// <summary>
        /// <p>Parameters used to automatically set up EBS volumes when the instance is launched.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDevice Eb { get => (this._eb = this._eb ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EbsInstanceBlockDevice()); set => this._eb = value; }

        /// <summary>
        /// <p>The ARN of the Amazon ECS or Fargate task to which the volume is attached.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EbAssociatedResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).AssociatedResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).AssociatedResource = value ?? null; }

        /// <summary><p>The time stamp when the attachment initiated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? EbAttachTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).AttachTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).AttachTime = value ?? default(global::System.DateTime); }

        /// <summary><p>Indicates whether the volume is deleted on instance termination.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? EbDeleteOnTermination { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).DeleteOnTermination; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).DeleteOnTermination = value ?? default(bool); }

        /// <summary><p>The ID of the EBS volume.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EbVolumeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).VolumeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).VolumeId = value ?? null; }

        /// <summary>
        /// <p>The ID of the Amazon Web Services account that owns the volume.</p> <p>This parameter is returned only for volumes
        /// that are attached to Fargate tasks.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string EbVolumeOwnerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).VolumeOwnerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).VolumeOwnerId = value ?? null; }

        /// <summary>Internal Acessors for Eb</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDevice Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMappingInternal.Eb { get => (this._eb = this._eb ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EbsInstanceBlockDevice()); set { {_eb = value;} } }

        /// <summary>Internal Acessors for EbStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceBlockDeviceMappingInternal.EbStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).Status = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus? StatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).StatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDeviceInternal)Eb).StatusValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus)""); }

        /// <summary>Creates an new <see cref="InstanceBlockDeviceMapping" /> instance.</summary>
        public InstanceBlockDeviceMapping()
        {

        }
    }
    /// Definition of InstanceBlockDeviceMapping
    public partial interface IInstanceBlockDeviceMapping :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>",
        SerializedName = @"deviceName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceName { get; set; }
        /// <summary>
        /// <p>The ARN of the Amazon ECS or Fargate task to which the volume is attached.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN of the Amazon ECS or Fargate task to which the volume is attached.</p>",
        SerializedName = @"associatedResource",
        PossibleTypes = new [] { typeof(string) })]
        string EbAssociatedResource { get; set; }
        /// <summary><p>The time stamp when the attachment initiated.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The time stamp when the attachment initiated.</p>",
        SerializedName = @"attachTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EbAttachTime { get; set; }
        /// <summary><p>Indicates whether the volume is deleted on instance termination.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Indicates whether the volume is deleted on instance termination.</p>",
        SerializedName = @"deleteOnTermination",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EbDeleteOnTermination { get; set; }
        /// <summary><p>The ID of the EBS volume.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the EBS volume.</p>",
        SerializedName = @"volumeId",
        PossibleTypes = new [] { typeof(string) })]
        string EbVolumeId { get; set; }
        /// <summary>
        /// <p>The ID of the Amazon Web Services account that owns the volume.</p> <p>This parameter is returned only for volumes
        /// that are attached to Fargate tasks.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of the Amazon Web Services account that owns the volume.</p> <p>This parameter is returned only for volumes that are attached to Fargate tasks.</p>",
        SerializedName = @"volumeOwnerId",
        PossibleTypes = new [] { typeof(string) })]
        string EbVolumeOwnerId { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus? StatusValue { get; set; }

    }
    /// Definition of InstanceBlockDeviceMapping
    internal partial interface IInstanceBlockDeviceMappingInternal

    {
        /// <summary>
        /// <p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
        /// </summary>
        string DeviceName { get; set; }
        /// <summary>
        /// <p>Parameters used to automatically set up EBS volumes when the instance is launched.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsInstanceBlockDevice Eb { get; set; }
        /// <summary>
        /// <p>The ARN of the Amazon ECS or Fargate task to which the volume is attached.</p>
        /// </summary>
        string EbAssociatedResource { get; set; }
        /// <summary><p>The time stamp when the attachment initiated.</p></summary>
        global::System.DateTime? EbAttachTime { get; set; }
        /// <summary><p>Indicates whether the volume is deleted on instance termination.</p></summary>
        bool? EbDeleteOnTermination { get; set; }
        /// <summary><p>The attachment state.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAttachmentStatusEnumValue EbStatus { get; set; }
        /// <summary><p>The ID of the EBS volume.</p></summary>
        string EbVolumeId { get; set; }
        /// <summary>
        /// <p>The ID of the Amazon Web Services account that owns the volume.</p> <p>This parameter is returned only for volumes
        /// that are attached to Fargate tasks.</p>
        /// </summary>
        string EbVolumeOwnerId { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AttachmentStatus? StatusValue { get; set; }

    }
}