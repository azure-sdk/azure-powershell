// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>A Microsoft.AwsConnector resource</summary>
    public partial class Route53HostedZone :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZone,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneInternal,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.TrackedResource();

        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string Arn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).Arn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).Arn = value ?? null; }

        /// <summary>
        /// Adds, edits, or deletes tags for a health check or a hosted zone. For information about using tags for cost allocation,
        /// see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in
        /// the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostedZoneTag[] AwPropertyHostedZoneTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyHostedZoneTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyHostedZoneTag = value ?? null /* arrayOf */; }

        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyId = value ?? null; }

        /// <summary>
        /// The name of the domain. Specify a fully qualified domain name, for example, *www.example.com*. The trailing dot is optional;
        /// Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats *www.example.com* (without
        /// a trailing dot) and *www.example.com.* (with a trailing dot) as identical. If you're creating a public hosted zone, this
        /// is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than
        /// Route 53, change the name servers for your domain to the set of ``NameServers`` that are returned by the ``Fn::GetAtt``
        /// intrinsic function.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyName = value ?? null; }

        /// <summary>Property nameServers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] AwPropertyNameServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyNameServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyNameServer = value ?? null /* arrayOf */; }

        /// <summary>
        /// *Private hosted zones:* A complex type that contains information about the VPCs that are associated with the specified
        /// hosted zone. For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpc[] AwPropertyVpC { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyVpC; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyVpC = value ?? null /* arrayOf */; }

        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwsAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwsAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwsAccountId = value ?? null; }

        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwsRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwsRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwsRegion = value ?? null; }

        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwsSourceSchema { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwsSourceSchema; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwsSourceSchema = value ?? null; }

        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesAwsTags AwsTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwsTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwsTag = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="AzureAsyncOperation" /> property.</summary>
        private string _azureAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AzureAsyncOperation { get => this._azureAsyncOperation; set => this._azureAsyncOperation = value; }

        /// <summary>Any comments that you want to include about the hosted zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string HostedZoneConfigComment { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).HostedZoneConfigComment; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).HostedZoneConfigComment = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for AwPropertyHostedZoneConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostedZoneConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneInternal.AwPropertyHostedZoneConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyHostedZoneConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyHostedZoneConfig = value; }

        /// <summary>Internal Acessors for AwPropertyQueryLoggingConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IQueryLoggingConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneInternal.AwPropertyQueryLoggingConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyQueryLoggingConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwPropertyQueryLoggingConfig = value; }

        /// <summary>Internal Acessors for AwsProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRoute53HostedZoneProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneInternal.AwsProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwsProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).AwsProperty = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Route53HostedZoneProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Route53HostedZoneProperties()); set => this._property = value; }

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PublicCloudConnectorsResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).PublicCloudConnectorsResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).PublicCloudConnectorsResourceId = value ?? null; }

        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string PublicCloudResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).PublicCloudResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).PublicCloudResourceName = value ?? null; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string QueryLoggingConfigCloudWatchLogsLogGroupArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).QueryLoggingConfigCloudWatchLogsLogGroupArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesInternal)Property).QueryLoggingConfigCloudWatchLogsLogGroupArn = value ?? null; }

        /// <summary>Backing field for <see cref="RetryAfter" /> property.</summary>
        private int? _retryAfter;

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? RetryAfter { get => this._retryAfter; set => this._retryAfter = value; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)__trackedResource).Type; }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Azure-AsyncOperation", out var __azureAsyncOperationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneInternal)this).AzureAsyncOperation = System.Linq.Enumerable.FirstOrDefault(__azureAsyncOperationHeader0) is string __headerAzureAsyncOperationHeader0 ? __headerAzureAsyncOperationHeader0 : (string)null;
            }
            if (headers.TryGetValues("Retry-After", out var __retryAfterHeader1))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneInternal)this).RetryAfter = System.Linq.Enumerable.FirstOrDefault(__retryAfterHeader1) is string __headerRetryAfterHeader1 ? int.TryParse( __headerRetryAfterHeader1, out int __headerRetryAfterHeader1Value ) ? __headerRetryAfterHeader1Value : default(int?) : default(int?);
            }
        }

        /// <summary>Creates an new <see cref="Route53HostedZone" /> instance.</summary>
        public Route53HostedZone()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// A Microsoft.AwsConnector resource
    public partial interface IRoute53HostedZone :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResource
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// Adds, edits, or deletes tags for a health check or a hosted zone. For information about using tags for cost allocation,
        /// see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in
        /// the *User Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Adds, edits, or deletes tags for a health check or a hosted zone. For information about using tags for cost allocation, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the *User Guide*.",
        SerializedName = @"hostedZoneTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostedZoneTag) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostedZoneTag[] AwPropertyHostedZoneTag { get; set; }
        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyId { get; set; }
        /// <summary>
        /// The name of the domain. Specify a fully qualified domain name, for example, *www.example.com*. The trailing dot is optional;
        /// Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats *www.example.com* (without
        /// a trailing dot) and *www.example.com.* (with a trailing dot) as identical. If you're creating a public hosted zone, this
        /// is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than
        /// Route 53, change the name servers for your domain to the set of ``NameServers`` that are returned by the ``Fn::GetAtt``
        /// intrinsic function.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the domain. Specify a fully qualified domain name, for example, *www.example.com*. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats *www.example.com* (without a trailing dot) and *www.example.com.* (with a trailing dot) as identical. If you're creating a public hosted zone, this is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than Route 53, change the name servers for your domain to the set of ``NameServers`` that are returned by the ``Fn::GetAtt`` intrinsic function.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyName { get; set; }
        /// <summary>Property nameServers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property nameServers",
        SerializedName = @"nameServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] AwPropertyNameServer { get; set; }
        /// <summary>
        /// *Private hosted zones:* A complex type that contains information about the VPCs that are associated with the specified
        /// hosted zone. For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"*Private hosted zones:* A complex type that contains information about the VPCs that are associated with the specified hosted zone.  For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.",
        SerializedName = @"vpCs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpc) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpc[] AwPropertyVpC { get; set; }
        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AwsAccountId { get; set; }
        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesAwsTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesAwsTags AwsTag { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Azure-AsyncOperation",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAsyncOperation { get; set; }
        /// <summary>Any comments that you want to include about the hosted zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Any comments that you want to include about the hosted zone.",
        SerializedName = @"comment",
        PossibleTypes = new [] { typeof(string) })]
        string HostedZoneConfigComment { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudResourceName { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.",
        SerializedName = @"cloudWatchLogsLogGroupArn",
        PossibleTypes = new [] { typeof(string) })]
        string QueryLoggingConfigCloudWatchLogsLogGroupArn { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Retry-After",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryAfter { get; set; }

    }
    /// A Microsoft.AwsConnector resource
    internal partial interface IRoute53HostedZoneInternal :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        string Arn { get; set; }
        /// <summary>
        /// A complex type that contains an optional comment. If you don't want to specify a comment, omit the ``HostedZoneConfig``
        /// and ``Comment`` elements. A complex type that contains an optional comment about your hosted zone. If you don't want to
        /// specify a comment, omit both the ``HostedZoneConfig`` and ``Comment`` elements.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostedZoneConfig AwPropertyHostedZoneConfig { get; set; }
        /// <summary>
        /// Adds, edits, or deletes tags for a health check or a hosted zone. For information about using tags for cost allocation,
        /// see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in
        /// the *User Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostedZoneTag[] AwPropertyHostedZoneTag { get; set; }
        /// <summary>Property id</summary>
        string AwPropertyId { get; set; }
        /// <summary>
        /// The name of the domain. Specify a fully qualified domain name, for example, *www.example.com*. The trailing dot is optional;
        /// Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats *www.example.com* (without
        /// a trailing dot) and *www.example.com.* (with a trailing dot) as identical. If you're creating a public hosted zone, this
        /// is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than
        /// Route 53, change the name servers for your domain to the set of ``NameServers`` that are returned by the ``Fn::GetAtt``
        /// intrinsic function.
        /// </summary>
        string AwPropertyName { get; set; }
        /// <summary>Property nameServers</summary>
        string[] AwPropertyNameServer { get; set; }
        /// <summary>
        /// Creates a configuration for DNS query logging. After you create a query logging configuration, Amazon Route 53 begins
        /// to publish log data to an Amazon CloudWatch Logs log group. DNS query logs contain information about the queries that
        /// Route 53 receives for a specified public hosted zone, such as the following: + Route 53 edge location that responded to
        /// the DNS query + Domain or subdomain that was requested + DNS record type, such as A or AAAA + DNS response code, such
        /// as ``NoError`` or ``ServFail`` + Log Group and Resource Policy Before you create a query logging configuration, perform
        /// the following operations. If you create a query logging configuration using the Route 53 console, Route 53 performs these
        /// operations automatically. Create a CloudWatch Logs log group, and make note of the ARN, which you specify when you create
        /// a query logging configuration. Note the following: You must create the log group in the us-east-1 region. You must use
        /// the same to create the log group and the hosted zone that you want to configure query logging for. When you create log
        /// groups for query logging, we recommend that you use a consistent prefix, for example: /aws/route53/hosted zone name In
        /// the next step, you'll create a resource policy, which controls access to one or more log groups and the associated resources,
        /// such as Route 53 hosted zones. There's a limit on the number of resource policies that you can create, so we recommend
        /// that you use a consistent prefix so you can use the same resource policy for all the log groups that you create for query
        /// logging. Create a CloudWatch Logs resource policy, and give it the permissions that Route 53 needs to create log streams
        /// and to send query logs to log streams. For the value of Resource, specify the ARN for the log group that you created in
        /// the previous step. To use the same resource policy for all the CloudWatch Logs log groups that you created for query logging
        /// configurations, replace the hosted zone name with *, for example: arn:aws:logs:us-east-1:123412341234:log-group:/aws/route53/*
        /// To avoid the confused deputy problem, a security issue where an entity without a permission for an action can coerce a
        /// more-privileged entity to perform it, you can optionally limit the permissions that a service has to a resource in a resource-based
        /// policy by supplying the following values: For aws:SourceArn, supply the hosted zone ARN used in creating the query logging
        /// configuration. For example, aws:SourceArn: arn:aws:route53:::hostedzone/hosted zone ID. For aws:SourceAccount, supply
        /// the account ID for the account that creates the query logging configuration. For example, aws:SourceAccount:111111111111.
        /// For more information, see The confused deputy problem in the IAM User Guide. You can't use the CloudWatch console to create
        /// or edit a resource policy. You must use the CloudWatch API, one of the SDKs, or the . + Log Streams and Edge Locations
        /// When Route 53 finishes creating the configuration for DNS query logging, it does the following: Creates a log stream for
        /// an edge location the first time that the edge location responds to DNS queries for the specified hosted zone. That log
        /// stream is used to log all queries that Route 53 responds to for that edge location. Begins to send query logs to the applicable
        /// log stream. The name of each log stream is in the following format: hosted zone ID/edge location code The edge location
        /// code is a three-letter code and an arbitrarily assigned number, for example, DFW3. The three-letter code typically corresponds
        /// with the International Air Transport Association airport code for an airport near the edge location. (These abbreviations
        /// might change in the future.) For a list of edge locations, see 'The Route 53 Global Network' on the Route 53 Product Details
        /// page. + Queries That Are Logged Query logs contain only the queries that DNS resolvers forward to Route 53. If a DNS resolver
        /// has already cached the response to a query (such as the IP address for a load balancer for example.com), the resolver
        /// will continue to return the cached response. It doesn't forward another query to Route 53 until the TTL for the corresponding
        /// resource record set expires. Depending on how many DNS queries are submitted for a resource record set, and depending
        /// on the TTL for that resource record set, query logs might contain information about only one query out of every several
        /// thousand queries that are submitted to DNS. For more information about how DNS works, see Routing Internet Traffic to
        /// Your Website or Web Application in the Amazon Route 53 Developer Guide. + Log File Format For a list of the values in
        /// each query log and the format of each value, see Logging DNS Queries in the Amazon Route 53 Developer Guide. + Pricing
        /// For information about charges for query logs, see Amazon CloudWatch Pricing. + How to Stop Logging If you want Route 53
        /// to stop sending query logs to CloudWatch Logs, delete the query logging configuration. For more information, see DeleteQueryLoggingConfig.
        /// A complex type that contains information about a configuration for DNS query logging.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IQueryLoggingConfig AwPropertyQueryLoggingConfig { get; set; }
        /// <summary>
        /// *Private hosted zones:* A complex type that contains information about the VPCs that are associated with the specified
        /// hosted zone. For public hosted zones, omit ``VPCs``, ``VPCId``, and ``VPCRegion``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpc[] AwPropertyVpC { get; set; }
        /// <summary>AWS Account ID</summary>
        string AwsAccountId { get; set; }
        /// <summary>AWS Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRoute53HostedZoneProperties AwsProperty { get; set; }
        /// <summary>AWS Region</summary>
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZonePropertiesAwsTags AwsTag { get; set; }

        string AzureAsyncOperation { get; set; }
        /// <summary>Any comments that you want to include about the hosted zone.</summary>
        string HostedZoneConfigComment { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRoute53HostedZoneProperties Property { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        string PublicCloudResourceName { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
        /// </summary>
        string QueryLoggingConfigCloudWatchLogsLogGroupArn { get; set; }

        int? RetryAfter { get; set; }

    }
}