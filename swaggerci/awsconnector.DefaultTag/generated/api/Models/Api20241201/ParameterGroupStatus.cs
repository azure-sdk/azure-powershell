// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ParameterGroupStatus</summary>
    public partial class ParameterGroupStatus :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IParameterGroupStatus,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IParameterGroupStatusInternal
    {

        /// <summary>Backing field for <see cref="NodeIdsToReboot" /> property.</summary>
        private string[] _nodeIdsToReboot;

        /// <summary><p>The node IDs of one or more nodes to be rebooted.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] NodeIdsToReboot { get => this._nodeIdsToReboot; set => this._nodeIdsToReboot = value; }

        /// <summary>Backing field for <see cref="ParameterApplyStatus" /> property.</summary>
        private string _parameterApplyStatus;

        /// <summary><p>The status of parameter updates. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ParameterApplyStatus { get => this._parameterApplyStatus; set => this._parameterApplyStatus = value; }

        /// <summary>Backing field for <see cref="ParameterGroupName" /> property.</summary>
        private string _parameterGroupName;

        /// <summary><p>The name of the parameter group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ParameterGroupName { get => this._parameterGroupName; set => this._parameterGroupName = value; }

        /// <summary>Creates an new <see cref="ParameterGroupStatus" /> instance.</summary>
        public ParameterGroupStatus()
        {

        }
    }
    /// Definition of ParameterGroupStatus
    public partial interface IParameterGroupStatus :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>The node IDs of one or more nodes to be rebooted.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The node IDs of one or more nodes to be rebooted.</p>",
        SerializedName = @"nodeIdsToReboot",
        PossibleTypes = new [] { typeof(string) })]
        string[] NodeIdsToReboot { get; set; }
        /// <summary><p>The status of parameter updates. </p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The status of parameter updates. </p>",
        SerializedName = @"parameterApplyStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ParameterApplyStatus { get; set; }
        /// <summary><p>The name of the parameter group.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the parameter group.</p>",
        SerializedName = @"parameterGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ParameterGroupName { get; set; }

    }
    /// Definition of ParameterGroupStatus
    internal partial interface IParameterGroupStatusInternal

    {
        /// <summary><p>The node IDs of one or more nodes to be rebooted.</p></summary>
        string[] NodeIdsToReboot { get; set; }
        /// <summary><p>The status of parameter updates. </p></summary>
        string ParameterApplyStatus { get; set; }
        /// <summary><p>The name of the parameter group.</p></summary>
        string ParameterGroupName { get; set; }

    }
}