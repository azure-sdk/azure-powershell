// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsEcsTaskDefinition</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsEcsTaskDefinitionPropertiesTypeConverter))]
    public partial class AwsEcsTaskDefinitionProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEcsTaskDefinitionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsEcsTaskDefinitionProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("EphemeralStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).EphemeralStorage = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorage) content.GetValueForProperty("EphemeralStorage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).EphemeralStorage, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EphemeralStorageTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProxyConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProxyConfiguration) content.GetValueForProperty("ProxyConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProxyConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("RuntimePlatform"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatform = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimePlatform) content.GetValueForProperty("RuntimePlatform",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatform, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RuntimePlatformTypeConverter.ConvertFrom);
            }
            if (content.Contains("ContainerDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ContainerDefinition = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition[]) content.GetValueForProperty("ContainerDefinition",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ContainerDefinition, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ContainerDefinitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("Cpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Cpu = (string) content.GetValueForProperty("Cpu",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Cpu, global::System.Convert.ToString);
            }
            if (content.Contains("ExecutionRoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ExecutionRoleArn = (string) content.GetValueForProperty("ExecutionRoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ExecutionRoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("Family"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Family = (string) content.GetValueForProperty("Family",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Family, global::System.Convert.ToString);
            }
            if (content.Contains("InferenceAccelerator"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).InferenceAccelerator = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInferenceAccelerator[]) content.GetValueForProperty("InferenceAccelerator",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).InferenceAccelerator, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInferenceAccelerator>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InferenceAcceleratorTypeConverter.ConvertFrom));
            }
            if (content.Contains("IpcMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).IpcMode = (string) content.GetValueForProperty("IpcMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).IpcMode, global::System.Convert.ToString);
            }
            if (content.Contains("Memory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Memory = (string) content.GetValueForProperty("Memory",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Memory, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).NetworkMode = (string) content.GetValueForProperty("NetworkMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).NetworkMode, global::System.Convert.ToString);
            }
            if (content.Contains("PidMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).PidMode = (string) content.GetValueForProperty("PidMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).PidMode, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementConstraint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).PlacementConstraint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITaskDefinitionPlacementConstraint[]) content.GetValueForProperty("PlacementConstraint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).PlacementConstraint, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITaskDefinitionPlacementConstraint>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TaskDefinitionPlacementConstraintTypeConverter.ConvertFrom));
            }
            if (content.Contains("RequiresCompatibility"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RequiresCompatibility = (string[]) content.GetValueForProperty("RequiresCompatibility",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RequiresCompatibility, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated28[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated28>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated28TypeConverter.ConvertFrom));
            }
            if (content.Contains("TaskDefinitionArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).TaskDefinitionArn = (string) content.GetValueForProperty("TaskDefinitionArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).TaskDefinitionArn, global::System.Convert.ToString);
            }
            if (content.Contains("TaskRoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).TaskRoleArn = (string) content.GetValueForProperty("TaskRoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).TaskRoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("Volume"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Volume = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolume[]) content.GetValueForProperty("Volume",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Volume, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolume>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VolumeTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProxyConfigurationContainerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationContainerName = (string) content.GetValueForProperty("ProxyConfigurationContainerName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationContainerName, global::System.Convert.ToString);
            }
            if (content.Contains("ProxyConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationType = (string) content.GetValueForProperty("ProxyConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("RuntimePlatformCpuArchitecture"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatformCpuArchitecture = (string) content.GetValueForProperty("RuntimePlatformCpuArchitecture",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatformCpuArchitecture, global::System.Convert.ToString);
            }
            if (content.Contains("EphemeralStorageSizeInGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).EphemeralStorageSizeInGiB = (int?) content.GetValueForProperty("EphemeralStorageSizeInGiB",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).EphemeralStorageSizeInGiB, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ProxyConfigurationProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationProperty = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair[]) content.GetValueForProperty("ProxyConfigurationProperty",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationProperty, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KeyValuePairTypeConverter.ConvertFrom));
            }
            if (content.Contains("RuntimePlatformOperatingSystemFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatformOperatingSystemFamily = (string) content.GetValueForProperty("RuntimePlatformOperatingSystemFamily",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatformOperatingSystemFamily, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEcsTaskDefinitionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsEcsTaskDefinitionProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("EphemeralStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).EphemeralStorage = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEphemeralStorage) content.GetValueForProperty("EphemeralStorage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).EphemeralStorage, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EphemeralStorageTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProxyConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProxyConfiguration) content.GetValueForProperty("ProxyConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProxyConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("RuntimePlatform"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatform = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRuntimePlatform) content.GetValueForProperty("RuntimePlatform",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatform, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RuntimePlatformTypeConverter.ConvertFrom);
            }
            if (content.Contains("ContainerDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ContainerDefinition = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition[]) content.GetValueForProperty("ContainerDefinition",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ContainerDefinition, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ContainerDefinitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("Cpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Cpu = (string) content.GetValueForProperty("Cpu",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Cpu, global::System.Convert.ToString);
            }
            if (content.Contains("ExecutionRoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ExecutionRoleArn = (string) content.GetValueForProperty("ExecutionRoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ExecutionRoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("Family"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Family = (string) content.GetValueForProperty("Family",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Family, global::System.Convert.ToString);
            }
            if (content.Contains("InferenceAccelerator"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).InferenceAccelerator = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInferenceAccelerator[]) content.GetValueForProperty("InferenceAccelerator",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).InferenceAccelerator, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInferenceAccelerator>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InferenceAcceleratorTypeConverter.ConvertFrom));
            }
            if (content.Contains("IpcMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).IpcMode = (string) content.GetValueForProperty("IpcMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).IpcMode, global::System.Convert.ToString);
            }
            if (content.Contains("Memory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Memory = (string) content.GetValueForProperty("Memory",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Memory, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).NetworkMode = (string) content.GetValueForProperty("NetworkMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).NetworkMode, global::System.Convert.ToString);
            }
            if (content.Contains("PidMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).PidMode = (string) content.GetValueForProperty("PidMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).PidMode, global::System.Convert.ToString);
            }
            if (content.Contains("PlacementConstraint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).PlacementConstraint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITaskDefinitionPlacementConstraint[]) content.GetValueForProperty("PlacementConstraint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).PlacementConstraint, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITaskDefinitionPlacementConstraint>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TaskDefinitionPlacementConstraintTypeConverter.ConvertFrom));
            }
            if (content.Contains("RequiresCompatibility"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RequiresCompatibility = (string[]) content.GetValueForProperty("RequiresCompatibility",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RequiresCompatibility, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated28[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated28>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated28TypeConverter.ConvertFrom));
            }
            if (content.Contains("TaskDefinitionArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).TaskDefinitionArn = (string) content.GetValueForProperty("TaskDefinitionArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).TaskDefinitionArn, global::System.Convert.ToString);
            }
            if (content.Contains("TaskRoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).TaskRoleArn = (string) content.GetValueForProperty("TaskRoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).TaskRoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("Volume"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Volume = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolume[]) content.GetValueForProperty("Volume",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).Volume, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolume>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VolumeTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProxyConfigurationContainerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationContainerName = (string) content.GetValueForProperty("ProxyConfigurationContainerName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationContainerName, global::System.Convert.ToString);
            }
            if (content.Contains("ProxyConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationType = (string) content.GetValueForProperty("ProxyConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("RuntimePlatformCpuArchitecture"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatformCpuArchitecture = (string) content.GetValueForProperty("RuntimePlatformCpuArchitecture",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatformCpuArchitecture, global::System.Convert.ToString);
            }
            if (content.Contains("EphemeralStorageSizeInGiB"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).EphemeralStorageSizeInGiB = (int?) content.GetValueForProperty("EphemeralStorageSizeInGiB",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).EphemeralStorageSizeInGiB, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ProxyConfigurationProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationProperty = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair[]) content.GetValueForProperty("ProxyConfigurationProperty",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).ProxyConfigurationProperty, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KeyValuePairTypeConverter.ConvertFrom));
            }
            if (content.Contains("RuntimePlatformOperatingSystemFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatformOperatingSystemFamily = (string) content.GetValueForProperty("RuntimePlatformOperatingSystemFamily",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionPropertiesInternal)this).RuntimePlatformOperatingSystemFamily, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEcsTaskDefinitionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsEcsTaskDefinitionProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEcsTaskDefinitionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsEcsTaskDefinitionProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsEcsTaskDefinitionProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsEcsTaskDefinitionProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEcsTaskDefinitionProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsEcsTaskDefinition
    [System.ComponentModel.TypeConverter(typeof(AwsEcsTaskDefinitionPropertiesTypeConverter))]
    public partial interface IAwsEcsTaskDefinitionProperties

    {

    }
}