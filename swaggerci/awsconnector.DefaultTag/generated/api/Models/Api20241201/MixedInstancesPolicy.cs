// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of MixedInstancesPolicy</summary>
    public partial class MixedInstancesPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicy,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal
    {

        /// <summary>
        /// The allocation strategy to apply to your On-Demand Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + lowest-price Uses price to
        /// determine which instance types are the highest priority, launching the lowest priced instance types within an Availability
        /// Zone first. This is the default value for Auto Scaling groups that specify InstanceRequirements. + prioritized You set
        /// the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the
        /// list). Amazon EC2 Auto Scaling launches your highest priority instance types first. If all your On-Demand capacity cannot
        /// be fulfilled using your highest priority instance type, then Amazon EC2 Auto Scaling launches the remaining capacity using
        /// the second priority instance type, and so on. This is the default value for Auto Scaling groups that don't specify InstanceRequirements
        /// and cannot be used for groups that do.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string InstanceDistributionOnDemandAllocationStrategy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).OnDemandAllocationStrategy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).OnDemandAllocationStrategy = value ?? null; }

        /// <summary>
        /// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion
        /// is launched first as your group scales. This number has the same unit of measurement as the group's desired capacity.
        /// If you change the default unit of measurement (number of instances) by specifying weighted capacity values in your launch
        /// template overrides list, or by changing the default desired capacity type setting of the group, you must specify this
        /// number using the same unit of measurement. Default: 0 An update to this setting means a gradual replacement of instances
        /// to adjust the current On-Demand Instance levels. When replacing instances, Amazon EC2 Auto Scaling launches new instances
        /// before terminating the previous ones.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? InstanceDistributionOnDemandBaseCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).OnDemandBaseCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).OnDemandBaseCapacity = value ?? default(int); }

        /// <summary>
        /// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond ``OnDemandBaseCapacity``.
        /// Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances). If set to 100, only On-Demand
        /// Instances are used. Default: 100 An update to this setting means a gradual replacement of instances to adjust the current
        /// On-Demand and Spot Instance levels for your additional capacity higher than the base capacity. When replacing instances,
        /// Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? InstanceDistributionOnDemandPercentageAboveBaseCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).OnDemandPercentageAboveBaseCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).OnDemandPercentageAboveBaseCapacity = value ?? default(int); }

        /// <summary>
        /// The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + capacity-optimized Requests
        /// Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest
        /// risk of interruption. To give certain instance types a higher chance of launching first, use capacity-optimized-prioritized.
        /// + capacity-optimized-prioritized You set the order of instance types for the launch template overrides from highest to
        /// lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best
        /// effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to prioritized, the
        /// same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify
        /// InstanceRequirements. + lowest-price Requests Spot Instances using the lowest priced pools within an Availability Zone,
        /// across the number of Spot pools that you specify for the SpotInstancePools property. To ensure that your desired capacity
        /// is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption
        /// rates because this strategy only considers instance price and not available capacity. + price-capacity-optimized (recommended)
        /// The price and capacity optimized allocation strategy looks at both price and capacity to select the Spot Instance pools
        /// that are the least likely to be interrupted and have the lowest possible price.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string InstanceDistributionSpotAllocationStrategy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).SpotAllocationStrategy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).SpotAllocationStrategy = value ?? null; }

        /// <summary>
        /// The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the
        /// different instance types in the overrides. Valid only when the ``SpotAllocationStrategy`` is ``lowest-price``. Value must
        /// be in the range of 1â€“20. Default: 2
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? InstanceDistributionSpotInstancePool { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).SpotInstancePool; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).SpotInstancePool = value ?? default(int); }

        /// <summary>
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. If your maximum price is lower than the
        /// Spot price for the instance types that you selected, your Spot Instances are not launched. We do not recommend specifying
        /// a maximum price because it can lead to increased interruptions. When Spot Instances launch, you pay the current Spot price.
        /// To remove a maximum price that you previously set, include the property but specify an empty string ('') for the value.
        /// If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify one. Valid
        /// Range: Minimum value of 0.001
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string InstanceDistributionSpotMaxPrice { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).SpotMaxPrice; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistributionInternal)InstancesDistribution).SpotMaxPrice = value ?? null; }

        /// <summary>Backing field for <see cref="InstancesDistribution" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistribution _instancesDistribution;

        /// <summary>
        /// The instances distribution. Use this structure to specify the distribution of On-Demand Instances and Spot Instances and
        /// the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy. For more information,
        /// see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. ``InstancesDistribution`` is a property of the [AWS::AutoScaling::AutoScalingGroup
        /// MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html)
        /// property type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistribution InstancesDistribution { get => (this._instancesDistribution = this._instancesDistribution ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstancesDistribution()); set => this._instancesDistribution = value; }

        /// <summary>Backing field for <see cref="LaunchTemplate" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplate _launchTemplate;

        /// <summary>
        /// One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand
        /// and Spot capacities. Use this structure to specify the launch templates and instance types (overrides) for a mixed instances
        /// policy. ``LaunchTemplate`` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html)
        /// property type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplate LaunchTemplate { get => (this._launchTemplate = this._launchTemplate ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LaunchTemplate()); set => this._launchTemplate = value; }

        /// <summary>
        /// Any properties that you specify override the same properties in the launch template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateOverrides[] LaunchTemplateOverride { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateInternal)LaunchTemplate).Override; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateInternal)LaunchTemplate).Override = value ?? null /* arrayOf */; }

        /// <summary>
        /// The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateSpecificationLaunchTemplateId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateInternal)LaunchTemplate).SpecificationLaunchTemplateId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateInternal)LaunchTemplate).SpecificationLaunchTemplateId = value ?? null; }

        /// <summary>
        /// The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateSpecificationLaunchTemplateName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateInternal)LaunchTemplate).SpecificationLaunchTemplateName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateInternal)LaunchTemplate).SpecificationLaunchTemplateName = value ?? null; }

        /// <summary>
        /// The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not
        /// supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic
        /// function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).
        /// For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples)
        /// section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LaunchTemplateSpecificationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateInternal)LaunchTemplate).SpecificationVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateInternal)LaunchTemplate).SpecificationVersion = value ?? null; }

        /// <summary>Internal Acessors for InstancesDistribution</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistribution Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal.InstancesDistribution { get => (this._instancesDistribution = this._instancesDistribution ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstancesDistribution()); set { {_instancesDistribution = value;} } }

        /// <summary>Internal Acessors for LaunchTemplate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplate Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal.LaunchTemplate { get => (this._launchTemplate = this._launchTemplate ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LaunchTemplate()); set { {_launchTemplate = value;} } }

        /// <summary>Internal Acessors for LaunchTemplateSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecification Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMixedInstancesPolicyInternal.LaunchTemplateSpecification { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateInternal)LaunchTemplate).Specification; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateInternal)LaunchTemplate).Specification = value; }

        /// <summary>Creates an new <see cref="MixedInstancesPolicy" /> instance.</summary>
        public MixedInstancesPolicy()
        {

        }
    }
    /// Definition of MixedInstancesPolicy
    public partial interface IMixedInstancesPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The allocation strategy to apply to your On-Demand Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + lowest-price Uses price to
        /// determine which instance types are the highest priority, launching the lowest priced instance types within an Availability
        /// Zone first. This is the default value for Auto Scaling groups that specify InstanceRequirements. + prioritized You set
        /// the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the
        /// list). Amazon EC2 Auto Scaling launches your highest priority instance types first. If all your On-Demand capacity cannot
        /// be fulfilled using your highest priority instance type, then Amazon EC2 Auto Scaling launches the remaining capacity using
        /// the second priority instance type, and so on. This is the default value for Auto Scaling groups that don't specify InstanceRequirements
        /// and cannot be used for groups that do.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The allocation strategy to apply to your On-Demand Instances when they are launched. Possible instance types are determined by the launch template overrides that you specify. The following lists the valid values:  + lowest-price Uses price to determine which instance types are the highest priority, launching the lowest priced instance types within an Availability Zone first. This is the default value for Auto Scaling groups that specify InstanceRequirements. + prioritized You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling launches your highest priority instance types first. If all your On-Demand capacity cannot be fulfilled using your highest priority instance type, then Amazon EC2 Auto Scaling launches the remaining capacity using the second priority instance type, and so on. This is the default value for Auto Scaling groups that don't specify InstanceRequirements and cannot be used for groups that do.",
        SerializedName = @"onDemandAllocationStrategy",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceDistributionOnDemandAllocationStrategy { get; set; }
        /// <summary>
        /// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion
        /// is launched first as your group scales. This number has the same unit of measurement as the group's desired capacity.
        /// If you change the default unit of measurement (number of instances) by specifying weighted capacity values in your launch
        /// template overrides list, or by changing the default desired capacity type setting of the group, you must specify this
        /// number using the same unit of measurement. Default: 0 An update to this setting means a gradual replacement of instances
        /// to adjust the current On-Demand Instance levels. When replacing instances, Amazon EC2 Auto Scaling launches new instances
        /// before terminating the previous ones.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is launched first as your group scales. This number has the same unit of measurement as the group's desired capacity. If you change the default unit of measurement (number of instances) by specifying weighted capacity values in your launch template overrides list, or by changing the default desired capacity type setting of the group, you must specify this number using the same unit of measurement. Default: 0  An update to this setting means a gradual replacement of instances to adjust the current On-Demand Instance levels. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.",
        SerializedName = @"onDemandBaseCapacity",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceDistributionOnDemandBaseCapacity { get; set; }
        /// <summary>
        /// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond ``OnDemandBaseCapacity``.
        /// Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances). If set to 100, only On-Demand
        /// Instances are used. Default: 100 An update to this setting means a gradual replacement of instances to adjust the current
        /// On-Demand and Spot Instance levels for your additional capacity higher than the base capacity. When replacing instances,
        /// Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond ``OnDemandBaseCapacity``. Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances). If set to 100, only On-Demand Instances are used. Default: 100  An update to this setting means a gradual replacement of instances to adjust the current On-Demand and Spot Instance levels for your additional capacity higher than the base capacity. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.",
        SerializedName = @"onDemandPercentageAboveBaseCapacity",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceDistributionOnDemandPercentageAboveBaseCapacity { get; set; }
        /// <summary>
        /// The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + capacity-optimized Requests
        /// Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest
        /// risk of interruption. To give certain instance types a higher chance of launching first, use capacity-optimized-prioritized.
        /// + capacity-optimized-prioritized You set the order of instance types for the launch template overrides from highest to
        /// lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best
        /// effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to prioritized, the
        /// same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify
        /// InstanceRequirements. + lowest-price Requests Spot Instances using the lowest priced pools within an Availability Zone,
        /// across the number of Spot pools that you specify for the SpotInstancePools property. To ensure that your desired capacity
        /// is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption
        /// rates because this strategy only considers instance price and not available capacity. + price-capacity-optimized (recommended)
        /// The price and capacity optimized allocation strategy looks at both price and capacity to select the Spot Instance pools
        /// that are the least likely to be interrupted and have the lowest possible price.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined by the launch template overrides that you specify. The following lists the valid values:  + capacity-optimized Requests Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest risk of interruption. To give certain instance types a higher chance of launching first, use capacity-optimized-prioritized. + capacity-optimized-prioritized You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to prioritized, the same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify InstanceRequirements. + lowest-price Requests Spot Instances using the lowest priced pools within an Availability Zone, across the number of Spot pools that you specify for the SpotInstancePools property. To ensure that your desired capacity is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption rates because this strategy only considers instance price and not available capacity. + price-capacity-optimized (recommended) The price and capacity optimized allocation strategy looks at both price and capacity to select the Spot Instance pools that are the least likely to be interrupted and have the lowest possible price.",
        SerializedName = @"spotAllocationStrategy",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceDistributionSpotAllocationStrategy { get; set; }
        /// <summary>
        /// The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the
        /// different instance types in the overrides. Valid only when the ``SpotAllocationStrategy`` is ``lowest-price``. Value must
        /// be in the range of 1â€“20. Default: 2
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the different instance types in the overrides. Valid only when the ``SpotAllocationStrategy`` is ``lowest-price``. Value must be in the range of 1â€“20. Default: 2",
        SerializedName = @"spotInstancePools",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceDistributionSpotInstancePool { get; set; }
        /// <summary>
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. If your maximum price is lower than the
        /// Spot price for the instance types that you selected, your Spot Instances are not launched. We do not recommend specifying
        /// a maximum price because it can lead to increased interruptions. When Spot Instances launch, you pay the current Spot price.
        /// To remove a maximum price that you previously set, include the property but specify an empty string ('') for the value.
        /// If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify one. Valid
        /// Range: Minimum value of 0.001
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum price per unit hour that you are willing to pay for a Spot Instance. If your maximum price is lower than the Spot price for the instance types that you selected, your Spot Instances are not launched. We do not recommend specifying a maximum price because it can lead to increased interruptions. When Spot Instances launch, you pay the current Spot price. To remove a maximum price that you previously set, include the property but specify an empty string ('') for the value.  If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify one.  Valid Range: Minimum value of 0.001",
        SerializedName = @"spotMaxPrice",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceDistributionSpotMaxPrice { get; set; }
        /// <summary>
        /// Any properties that you specify override the same properties in the launch template.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Any properties that you specify override the same properties in the launch template.",
        SerializedName = @"overrides",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateOverrides) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateOverrides[] LaunchTemplateOverride { get; set; }
        /// <summary>
        /// The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.",
        SerializedName = @"launchTemplateId",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateSpecificationLaunchTemplateId { get; set; }
        /// <summary>
        /// The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.",
        SerializedName = @"launchTemplateName",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateSpecificationLaunchTemplateName { get; set; }
        /// <summary>
        /// The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not
        /// supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic
        /// function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).
        /// For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples)
        /// section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).  For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples) section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string LaunchTemplateSpecificationVersion { get; set; }

    }
    /// Definition of MixedInstancesPolicy
    internal partial interface IMixedInstancesPolicyInternal

    {
        /// <summary>
        /// The allocation strategy to apply to your On-Demand Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + lowest-price Uses price to
        /// determine which instance types are the highest priority, launching the lowest priced instance types within an Availability
        /// Zone first. This is the default value for Auto Scaling groups that specify InstanceRequirements. + prioritized You set
        /// the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the
        /// list). Amazon EC2 Auto Scaling launches your highest priority instance types first. If all your On-Demand capacity cannot
        /// be fulfilled using your highest priority instance type, then Amazon EC2 Auto Scaling launches the remaining capacity using
        /// the second priority instance type, and so on. This is the default value for Auto Scaling groups that don't specify InstanceRequirements
        /// and cannot be used for groups that do.
        /// </summary>
        string InstanceDistributionOnDemandAllocationStrategy { get; set; }
        /// <summary>
        /// The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion
        /// is launched first as your group scales. This number has the same unit of measurement as the group's desired capacity.
        /// If you change the default unit of measurement (number of instances) by specifying weighted capacity values in your launch
        /// template overrides list, or by changing the default desired capacity type setting of the group, you must specify this
        /// number using the same unit of measurement. Default: 0 An update to this setting means a gradual replacement of instances
        /// to adjust the current On-Demand Instance levels. When replacing instances, Amazon EC2 Auto Scaling launches new instances
        /// before terminating the previous ones.
        /// </summary>
        int? InstanceDistributionOnDemandBaseCapacity { get; set; }
        /// <summary>
        /// Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond ``OnDemandBaseCapacity``.
        /// Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances). If set to 100, only On-Demand
        /// Instances are used. Default: 100 An update to this setting means a gradual replacement of instances to adjust the current
        /// On-Demand and Spot Instance levels for your additional capacity higher than the base capacity. When replacing instances,
        /// Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.
        /// </summary>
        int? InstanceDistributionOnDemandPercentageAboveBaseCapacity { get; set; }
        /// <summary>
        /// The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined
        /// by the launch template overrides that you specify. The following lists the valid values: + capacity-optimized Requests
        /// Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest
        /// risk of interruption. To give certain instance types a higher chance of launching first, use capacity-optimized-prioritized.
        /// + capacity-optimized-prioritized You set the order of instance types for the launch template overrides from highest to
        /// lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best
        /// effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to prioritized, the
        /// same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify
        /// InstanceRequirements. + lowest-price Requests Spot Instances using the lowest priced pools within an Availability Zone,
        /// across the number of Spot pools that you specify for the SpotInstancePools property. To ensure that your desired capacity
        /// is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption
        /// rates because this strategy only considers instance price and not available capacity. + price-capacity-optimized (recommended)
        /// The price and capacity optimized allocation strategy looks at both price and capacity to select the Spot Instance pools
        /// that are the least likely to be interrupted and have the lowest possible price.
        /// </summary>
        string InstanceDistributionSpotAllocationStrategy { get; set; }
        /// <summary>
        /// The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the
        /// different instance types in the overrides. Valid only when the ``SpotAllocationStrategy`` is ``lowest-price``. Value must
        /// be in the range of 1â€“20. Default: 2
        /// </summary>
        int? InstanceDistributionSpotInstancePool { get; set; }
        /// <summary>
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. If your maximum price is lower than the
        /// Spot price for the instance types that you selected, your Spot Instances are not launched. We do not recommend specifying
        /// a maximum price because it can lead to increased interruptions. When Spot Instances launch, you pay the current Spot price.
        /// To remove a maximum price that you previously set, include the property but specify an empty string ('') for the value.
        /// If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify one. Valid
        /// Range: Minimum value of 0.001
        /// </summary>
        string InstanceDistributionSpotMaxPrice { get; set; }
        /// <summary>
        /// The instances distribution. Use this structure to specify the distribution of On-Demand Instances and Spot Instances and
        /// the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy. For more information,
        /// see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. ``InstancesDistribution`` is a property of the [AWS::AutoScaling::AutoScalingGroup
        /// MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html)
        /// property type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstancesDistribution InstancesDistribution { get; set; }
        /// <summary>
        /// One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand
        /// and Spot capacities. Use this structure to specify the launch templates and instance types (overrides) for a mixed instances
        /// policy. ``LaunchTemplate`` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html)
        /// property type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplate LaunchTemplate { get; set; }
        /// <summary>
        /// Any properties that you specify override the same properties in the launch template.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateOverrides[] LaunchTemplateOverride { get; set; }
        /// <summary>
        /// The launch template. Specifies a launch template to use when provisioning EC2 instances for an Auto Scaling group. You
        /// must specify the following: + The ID or the name of the launch template, but not both. + The version of the launch template.
        /// ``LaunchTemplateSpecification`` is property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html)
        /// resource. It is also a property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplate.html)
        /// and [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html)
        /// property types. For information about creating a launch template, see [AWS::EC2::LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html)
        /// and [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html)
        /// in the *Amazon EC2 Auto Scaling User Guide*. For examples of launch templates, see [Auto scaling template snippets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-autoscaling.html)
        /// and the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#aws-resource-ec2-launchtemplate--examples)
        /// section in the ``AWS::EC2::LaunchTemplate`` resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILaunchTemplateSpecification LaunchTemplateSpecification { get; set; }
        /// <summary>
        /// The ID of the launch template. You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.
        /// </summary>
        string LaunchTemplateSpecificationLaunchTemplateId { get; set; }
        /// <summary>
        /// The name of the launch template. You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.
        /// </summary>
        string LaunchTemplateSpecificationLaunchTemplateName { get; set; }
        /// <summary>
        /// The version number of the launch template. Specifying ``$Latest`` or ``$Default`` for the template version number is not
        /// supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic
        /// function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).
        /// For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples)
        /// section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
        /// </summary>
        string LaunchTemplateSpecificationVersion { get; set; }

    }
}