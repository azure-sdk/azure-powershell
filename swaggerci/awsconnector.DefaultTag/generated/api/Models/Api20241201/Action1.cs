// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of Action</summary>
    public partial class Action1 :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAction1,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAction1Internal
    {

        /// <summary>Backing field for <see cref="AuthenticateCognitoConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfig _authenticateCognitoConfig;

        /// <summary>
        /// [HTTPS listeners] Information for using Amazon Cognito to authenticate users. Specify only when ``Type`` is ``authenticate-cognito``.
        /// Specifies information required when integrating with Amazon Cognito to authenticate users.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfig AuthenticateCognitoConfig { get => (this._authenticateCognitoConfig = this._authenticateCognitoConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AuthenticateCognitoConfig()); set => this._authenticateCognitoConfig = value; }

        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigAuthenticationRequestExtraParams AuthenticateCognitoConfigAuthenticationRequestExtraParam { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).AuthenticationRequestExtraParam; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).AuthenticationRequestExtraParam = value ?? null /* model class */; }

        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateCognitoConfigOnUnauthenticatedRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).OnUnauthenticatedRequest; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).OnUnauthenticatedRequest = value ?? null; }

        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateCognitoConfigScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).Scope = value ?? null; }

        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateCognitoConfigSessionCookieName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).SessionCookieName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).SessionCookieName = value ?? null; }

        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateCognitoConfigSessionTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).SessionTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).SessionTimeout = value ?? null; }

        /// <summary>The Amazon Resource Name (ARN) of the Amazon Cognito user pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateCognitoConfigUserPoolArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).UserPoolArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).UserPoolArn = value ?? null; }

        /// <summary>The ID of the Amazon Cognito user pool client.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateCognitoConfigUserPoolClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).UserPoolClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).UserPoolClientId = value ?? null; }

        /// <summary>
        /// The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateCognitoConfigUserPoolDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).UserPoolDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal)AuthenticateCognitoConfig).UserPoolDomain = value ?? null; }

        /// <summary>Backing field for <see cref="AuthenticateOidcConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfig _authenticateOidcConfig;

        /// <summary>
        /// [HTTPS listeners] Information about an identity provider that is compliant with OpenID Connect (OIDC). Specify only when
        /// ``Type`` is ``authenticate-oidc``. Specifies information required using an identity provide (IdP) that is compliant with
        /// OpenID Connect (OIDC) to authenticate users.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfig AuthenticateOidcConfig { get => (this._authenticateOidcConfig = this._authenticateOidcConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AuthenticateOidcConfig()); set => this._authenticateOidcConfig = value; }

        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigAuthenticationRequestExtraParams AuthenticateOidcConfigAuthenticationRequestExtraParam { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).AuthenticationRequestExtraParam; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).AuthenticationRequestExtraParam = value ?? null /* model class */; }

        /// <summary>
        /// The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateOidcConfigAuthorizationEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).AuthorizationEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).AuthorizationEndpoint = value ?? null; }

        /// <summary>The OAuth 2.0 client identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateOidcConfigClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).ClientId = value ?? null; }

        /// <summary>
        /// The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can
        /// omit this parameter if you set ``UseExistingClientSecret`` to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateOidcConfigClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).ClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).ClientSecret = value ?? null; }

        /// <summary>
        /// The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateOidcConfigIssuer { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).Issuer; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).Issuer = value ?? null; }

        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateOidcConfigOnUnauthenticatedRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).OnUnauthenticatedRequest; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).OnUnauthenticatedRequest = value ?? null; }

        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateOidcConfigScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).Scope = value ?? null; }

        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateOidcConfigSessionCookieName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).SessionCookieName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).SessionCookieName = value ?? null; }

        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateOidcConfigSessionTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).SessionTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).SessionTimeout = value ?? null; }

        /// <summary>
        /// The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateOidcConfigTokenEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).TokenEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).TokenEndpoint = value ?? null; }

        /// <summary>
        /// Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this
        /// parameter or set it to false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AuthenticateOidcConfigUseExistingClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).UseExistingClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).UseExistingClientSecret = value ?? default(bool); }

        /// <summary>
        /// The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AuthenticateOidcConfigUserInfoEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).UserInfoEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigInternal)AuthenticateOidcConfig).UserInfoEndpoint = value ?? null; }

        /// <summary>Backing field for <see cref="FixedResponseConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFixedResponseConfig _fixedResponseConfig;

        /// <summary>
        /// [Application Load Balancer] Information for creating an action that returns a custom HTTP response. Specify only when
        /// ``Type`` is ``fixed-response``. Specifies information required when returning a custom HTTP response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFixedResponseConfig FixedResponseConfig { get => (this._fixedResponseConfig = this._fixedResponseConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.FixedResponseConfig()); set => this._fixedResponseConfig = value; }

        /// <summary>
        /// The content type. Valid Values: text/plain | text/css | text/html | application/javascript | application/json
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string FixedResponseConfigContentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFixedResponseConfigInternal)FixedResponseConfig).ContentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFixedResponseConfigInternal)FixedResponseConfig).ContentType = value ?? null; }

        /// <summary>The message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string FixedResponseConfigMessageBody { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFixedResponseConfigInternal)FixedResponseConfig).MessageBody; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFixedResponseConfigInternal)FixedResponseConfig).MessageBody = value ?? null; }

        /// <summary>The HTTP response code (2XX, 4XX, or 5XX).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string FixedResponseConfigStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFixedResponseConfigInternal)FixedResponseConfig).StatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFixedResponseConfigInternal)FixedResponseConfig).StatusCode = value ?? null; }

        /// <summary>Backing field for <see cref="ForwardConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfig _forwardConfig;

        /// <summary>
        /// Information for creating an action that distributes requests among one or more target groups. For Network Load Balancers,
        /// you can specify a single target group. Specify only when ``Type`` is ``forward``. If you specify both ``ForwardConfig``
        /// and ``TargetGroupArn``, you can specify only one target group using ``ForwardConfig`` and it must be the same target group
        /// specified in ``TargetGroupArn``. Information for creating an action that distributes requests among one or more target
        /// groups. For Network Load Balancers, you can specify a single target group. Specify only when ``Type`` is ``forward``.
        /// If you specify both ``ForwardConfig`` and ``TargetGroupArn``, you can specify only one target group using ``ForwardConfig``
        /// and it must be the same target group specified in ``TargetGroupArn``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfig ForwardConfig { get => (this._forwardConfig = this._forwardConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ForwardConfig()); set => this._forwardConfig = value; }

        /// <summary>
        /// Information about how traffic will be distributed between multiple target groups in a forward rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetGroupTuple[] ForwardConfigTargetGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfigInternal)ForwardConfig).TargetGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfigInternal)ForwardConfig).TargetGroup = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for AuthenticateCognitoConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAction1Internal.AuthenticateCognitoConfig { get => (this._authenticateCognitoConfig = this._authenticateCognitoConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AuthenticateCognitoConfig()); set { {_authenticateCognitoConfig = value;} } }

        /// <summary>Internal Acessors for AuthenticateOidcConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAction1Internal.AuthenticateOidcConfig { get => (this._authenticateOidcConfig = this._authenticateOidcConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AuthenticateOidcConfig()); set { {_authenticateOidcConfig = value;} } }

        /// <summary>Internal Acessors for FixedResponseConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFixedResponseConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAction1Internal.FixedResponseConfig { get => (this._fixedResponseConfig = this._fixedResponseConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.FixedResponseConfig()); set { {_fixedResponseConfig = value;} } }

        /// <summary>Internal Acessors for ForwardConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAction1Internal.ForwardConfig { get => (this._forwardConfig = this._forwardConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ForwardConfig()); set { {_forwardConfig = value;} } }

        /// <summary>Internal Acessors for ForwardConfigTargetGroupStickinessConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetGroupStickinessConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAction1Internal.ForwardConfigTargetGroupStickinessConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfigInternal)ForwardConfig).TargetGroupStickinessConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfigInternal)ForwardConfig).TargetGroupStickinessConfig = value; }

        /// <summary>Internal Acessors for RedirectConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAction1Internal.RedirectConfig { get => (this._redirectConfig = this._redirectConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RedirectConfig()); set { {_redirectConfig = value;} } }

        /// <summary>Backing field for <see cref="Order" /> property.</summary>
        private int? _order;

        /// <summary>
        /// The order for the action. This value is required for rules with multiple actions. The action with the lowest value for
        /// order is performed first.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? Order { get => this._order; set => this._order = value; }

        /// <summary>Backing field for <see cref="RedirectConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfig _redirectConfig;

        /// <summary>
        /// [Application Load Balancer] Information for creating a redirect action. Specify only when ``Type`` is ``redirect``. Information
        /// about a redirect action. A URI consists of the following components: protocol://hostname:port/path?query. You must modify
        /// at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that
        /// you do not modify retain their original values. You can reuse URI components using the following reserved keywords: +
        /// #{protocol} + #{host} + #{port} + #{path} (the leading '/' is removed) + #{query} For example, you can change the path
        /// to '/new/#{path}', the hostname to 'example.#{host}', or the query to '#{query}&value=xyz'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfig RedirectConfig { get => (this._redirectConfig = this._redirectConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RedirectConfig()); set => this._redirectConfig = value; }

        /// <summary>
        /// The hostname. This component is not percent-encoded. The hostname can contain #{host}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RedirectConfigHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).Host; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).Host = value ?? null; }

        /// <summary>
        /// The absolute path, starting with the leading '/'. This component is not percent-encoded. The path can contain #{host},
        /// #{path}, and #{port}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RedirectConfigPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).Path; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).Path = value ?? null; }

        /// <summary>The port. You can specify a value from 1 to 65535 or #{port}.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RedirectConfigPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).Port; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).Port = value ?? null; }

        /// <summary>
        /// The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to
        /// HTTPS. You cannot redirect HTTPS to HTTP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RedirectConfigProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).Protocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).Protocol = value ?? null; }

        /// <summary>
        /// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading '?', as it is automatically
        /// added. You can specify any of the reserved keywords.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RedirectConfigQuery { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).Query; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).Query = value ?? null; }

        /// <summary>
        /// The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RedirectConfigStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).StatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfigInternal)RedirectConfig).StatusCode = value ?? null; }

        /// <summary>Backing field for <see cref="TargetGroupArn" /> property.</summary>
        private string _targetGroupArn;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the target group. Specify only when ``Type`` is ``forward`` and you want to route to
        /// a single target group. To route to one or more target groups, use ``ForwardConfig`` instead.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string TargetGroupArn { get => this._targetGroupArn; set => this._targetGroupArn = value; }

        /// <summary>
        /// The time period, in seconds, during which requests from a client should be routed to the same target group. The range
        /// is 1-604800 seconds (7 days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? TargetGroupStickinessConfigDurationSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfigInternal)ForwardConfig).TargetGroupStickinessConfigDurationSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfigInternal)ForwardConfig).TargetGroupStickinessConfigDurationSecond = value ?? default(int); }

        /// <summary>Indicates whether target group stickiness is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? TargetGroupStickinessConfigEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfigInternal)ForwardConfig).TargetGroupStickinessConfigEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfigInternal)ForwardConfig).TargetGroupStickinessConfigEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="Action1" /> instance.</summary>
        public Action1()
        {

        }
    }
    /// Definition of Action
    public partial interface IAction1 :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The query parameters (up to 10) to include in the redirect request to the authorization endpoint.",
        SerializedName = @"authenticationRequestExtraParams",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigAuthenticationRequestExtraParams) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigAuthenticationRequestExtraParams AuthenticateCognitoConfigAuthenticationRequestExtraParam { get; set; }
        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The behavior if the user is not authenticated. The following are possible values:  +  deny```` - Return an HTTP 401 Unauthorized error.  +  allow```` - Allow the request to be forwarded to the target.  +  authenticate```` - Redirect the request to the IdP authorization endpoint. This is the default value.",
        SerializedName = @"onUnauthenticatedRequest",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateCognitoConfigOnUnauthenticatedRequest { get; set; }
        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateCognitoConfigScope { get; set; }
        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.",
        SerializedName = @"sessionCookieName",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateCognitoConfigSessionCookieName { get; set; }
        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).",
        SerializedName = @"sessionTimeout",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateCognitoConfigSessionTimeout { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of the Amazon Cognito user pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the Amazon Cognito user pool.",
        SerializedName = @"userPoolArn",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateCognitoConfigUserPoolArn { get; set; }
        /// <summary>The ID of the Amazon Cognito user pool client.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the Amazon Cognito user pool client.",
        SerializedName = @"userPoolClientId",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateCognitoConfigUserPoolClientId { get; set; }
        /// <summary>
        /// The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.",
        SerializedName = @"userPoolDomain",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateCognitoConfigUserPoolDomain { get; set; }
        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The query parameters (up to 10) to include in the redirect request to the authorization endpoint.",
        SerializedName = @"authenticationRequestExtraParams",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigAuthenticationRequestExtraParams) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigAuthenticationRequestExtraParams AuthenticateOidcConfigAuthenticationRequestExtraParam { get; set; }
        /// <summary>
        /// The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
        SerializedName = @"authorizationEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateOidcConfigAuthorizationEndpoint { get; set; }
        /// <summary>The OAuth 2.0 client identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OAuth 2.0 client identifier.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateOidcConfigClientId { get; set; }
        /// <summary>
        /// The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can
        /// omit this parameter if you set ``UseExistingClientSecret`` to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can omit this parameter if you set ``UseExistingClientSecret`` to true.",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateOidcConfigClientSecret { get; set; }
        /// <summary>
        /// The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
        SerializedName = @"issuer",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateOidcConfigIssuer { get; set; }
        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The behavior if the user is not authenticated. The following are possible values:  +  deny```` - Return an HTTP 401 Unauthorized error.  +  allow```` - Allow the request to be forwarded to the target.  +  authenticate```` - Redirect the request to the IdP authorization endpoint. This is the default value.",
        SerializedName = @"onUnauthenticatedRequest",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateOidcConfigOnUnauthenticatedRequest { get; set; }
        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateOidcConfigScope { get; set; }
        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.",
        SerializedName = @"sessionCookieName",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateOidcConfigSessionCookieName { get; set; }
        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).",
        SerializedName = @"sessionTimeout",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateOidcConfigSessionTimeout { get; set; }
        /// <summary>
        /// The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
        SerializedName = @"tokenEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateOidcConfigTokenEndpoint { get; set; }
        /// <summary>
        /// Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this
        /// parameter or set it to false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this parameter or set it to false.",
        SerializedName = @"useExistingClientSecret",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AuthenticateOidcConfigUseExistingClientSecret { get; set; }
        /// <summary>
        /// The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
        SerializedName = @"userInfoEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticateOidcConfigUserInfoEndpoint { get; set; }
        /// <summary>
        /// The content type. Valid Values: text/plain | text/css | text/html | application/javascript | application/json
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The content type. Valid Values: text/plain | text/css | text/html | application/javascript | application/json",
        SerializedName = @"contentType",
        PossibleTypes = new [] { typeof(string) })]
        string FixedResponseConfigContentType { get; set; }
        /// <summary>The message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The message.",
        SerializedName = @"messageBody",
        PossibleTypes = new [] { typeof(string) })]
        string FixedResponseConfigMessageBody { get; set; }
        /// <summary>The HTTP response code (2XX, 4XX, or 5XX).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HTTP response code (2XX, 4XX, or 5XX).",
        SerializedName = @"statusCode",
        PossibleTypes = new [] { typeof(string) })]
        string FixedResponseConfigStatusCode { get; set; }
        /// <summary>
        /// Information about how traffic will be distributed between multiple target groups in a forward rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Information about how traffic will be distributed between multiple target groups in a forward rule.",
        SerializedName = @"targetGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetGroupTuple) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetGroupTuple[] ForwardConfigTargetGroup { get; set; }
        /// <summary>
        /// The order for the action. This value is required for rules with multiple actions. The action with the lowest value for
        /// order is performed first.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first.",
        SerializedName = @"order",
        PossibleTypes = new [] { typeof(int) })]
        int? Order { get; set; }
        /// <summary>
        /// The hostname. This component is not percent-encoded. The hostname can contain #{host}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hostname. This component is not percent-encoded. The hostname can contain #{host}.",
        SerializedName = @"host",
        PossibleTypes = new [] { typeof(string) })]
        string RedirectConfigHost { get; set; }
        /// <summary>
        /// The absolute path, starting with the leading '/'. This component is not percent-encoded. The path can contain #{host},
        /// #{path}, and #{port}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The absolute path, starting with the leading '/'. This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string RedirectConfigPath { get; set; }
        /// <summary>The port. You can specify a value from 1 to 65535 or #{port}.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The port. You can specify a value from 1 to 65535 or #{port}.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(string) })]
        string RedirectConfigPort { get; set; }
        /// <summary>
        /// The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to
        /// HTTPS. You cannot redirect HTTPS to HTTP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.",
        SerializedName = @"protocol",
        PossibleTypes = new [] { typeof(string) })]
        string RedirectConfigProtocol { get; set; }
        /// <summary>
        /// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading '?', as it is automatically
        /// added. You can specify any of the reserved keywords.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading '?', as it is automatically added. You can specify any of the reserved keywords.",
        SerializedName = @"query",
        PossibleTypes = new [] { typeof(string) })]
        string RedirectConfigQuery { get; set; }
        /// <summary>
        /// The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).",
        SerializedName = @"statusCode",
        PossibleTypes = new [] { typeof(string) })]
        string RedirectConfigStatusCode { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the target group. Specify only when ``Type`` is ``forward`` and you want to route to
        /// a single target group. To route to one or more target groups, use ``ForwardConfig`` instead.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the target group. Specify only when ``Type`` is ``forward`` and you want to route to a single target group. To route to one or more target groups, use ``ForwardConfig`` instead.",
        SerializedName = @"targetGroupArn",
        PossibleTypes = new [] { typeof(string) })]
        string TargetGroupArn { get; set; }
        /// <summary>
        /// The time period, in seconds, during which requests from a client should be routed to the same target group. The range
        /// is 1-604800 seconds (7 days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).",
        SerializedName = @"durationSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TargetGroupStickinessConfigDurationSecond { get; set; }
        /// <summary>Indicates whether target group stickiness is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether target group stickiness is enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TargetGroupStickinessConfigEnabled { get; set; }
        /// <summary>The type of action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of action.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// Definition of Action
    internal partial interface IAction1Internal

    {
        /// <summary>
        /// [HTTPS listeners] Information for using Amazon Cognito to authenticate users. Specify only when ``Type`` is ``authenticate-cognito``.
        /// Specifies information required when integrating with Amazon Cognito to authenticate users.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfig AuthenticateCognitoConfig { get; set; }
        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigAuthenticationRequestExtraParams AuthenticateCognitoConfigAuthenticationRequestExtraParam { get; set; }
        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        string AuthenticateCognitoConfigOnUnauthenticatedRequest { get; set; }
        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        string AuthenticateCognitoConfigScope { get; set; }
        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        string AuthenticateCognitoConfigSessionCookieName { get; set; }
        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        string AuthenticateCognitoConfigSessionTimeout { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of the Amazon Cognito user pool.</summary>
        string AuthenticateCognitoConfigUserPoolArn { get; set; }
        /// <summary>The ID of the Amazon Cognito user pool client.</summary>
        string AuthenticateCognitoConfigUserPoolClientId { get; set; }
        /// <summary>
        /// The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.
        /// </summary>
        string AuthenticateCognitoConfigUserPoolDomain { get; set; }
        /// <summary>
        /// [HTTPS listeners] Information about an identity provider that is compliant with OpenID Connect (OIDC). Specify only when
        /// ``Type`` is ``authenticate-oidc``. Specifies information required using an identity provide (IdP) that is compliant with
        /// OpenID Connect (OIDC) to authenticate users.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfig AuthenticateOidcConfig { get; set; }
        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateOidcConfigAuthenticationRequestExtraParams AuthenticateOidcConfigAuthenticationRequestExtraParam { get; set; }
        /// <summary>
        /// The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        string AuthenticateOidcConfigAuthorizationEndpoint { get; set; }
        /// <summary>The OAuth 2.0 client identifier.</summary>
        string AuthenticateOidcConfigClientId { get; set; }
        /// <summary>
        /// The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can
        /// omit this parameter if you set ``UseExistingClientSecret`` to true.
        /// </summary>
        string AuthenticateOidcConfigClientSecret { get; set; }
        /// <summary>
        /// The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        string AuthenticateOidcConfigIssuer { get; set; }
        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        string AuthenticateOidcConfigOnUnauthenticatedRequest { get; set; }
        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        string AuthenticateOidcConfigScope { get; set; }
        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        string AuthenticateOidcConfigSessionCookieName { get; set; }
        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        string AuthenticateOidcConfigSessionTimeout { get; set; }
        /// <summary>
        /// The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        string AuthenticateOidcConfigTokenEndpoint { get; set; }
        /// <summary>
        /// Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this
        /// parameter or set it to false.
        /// </summary>
        bool? AuthenticateOidcConfigUseExistingClientSecret { get; set; }
        /// <summary>
        /// The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.
        /// </summary>
        string AuthenticateOidcConfigUserInfoEndpoint { get; set; }
        /// <summary>
        /// [Application Load Balancer] Information for creating an action that returns a custom HTTP response. Specify only when
        /// ``Type`` is ``fixed-response``. Specifies information required when returning a custom HTTP response.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFixedResponseConfig FixedResponseConfig { get; set; }
        /// <summary>
        /// The content type. Valid Values: text/plain | text/css | text/html | application/javascript | application/json
        /// </summary>
        string FixedResponseConfigContentType { get; set; }
        /// <summary>The message.</summary>
        string FixedResponseConfigMessageBody { get; set; }
        /// <summary>The HTTP response code (2XX, 4XX, or 5XX).</summary>
        string FixedResponseConfigStatusCode { get; set; }
        /// <summary>
        /// Information for creating an action that distributes requests among one or more target groups. For Network Load Balancers,
        /// you can specify a single target group. Specify only when ``Type`` is ``forward``. If you specify both ``ForwardConfig``
        /// and ``TargetGroupArn``, you can specify only one target group using ``ForwardConfig`` and it must be the same target group
        /// specified in ``TargetGroupArn``. Information for creating an action that distributes requests among one or more target
        /// groups. For Network Load Balancers, you can specify a single target group. Specify only when ``Type`` is ``forward``.
        /// If you specify both ``ForwardConfig`` and ``TargetGroupArn``, you can specify only one target group using ``ForwardConfig``
        /// and it must be the same target group specified in ``TargetGroupArn``.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IForwardConfig ForwardConfig { get; set; }
        /// <summary>
        /// Information about how traffic will be distributed between multiple target groups in a forward rule.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetGroupTuple[] ForwardConfigTargetGroup { get; set; }
        /// <summary>
        /// Information about the target group stickiness for a rule. Information about the target group stickiness for a rule.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITargetGroupStickinessConfig ForwardConfigTargetGroupStickinessConfig { get; set; }
        /// <summary>
        /// The order for the action. This value is required for rules with multiple actions. The action with the lowest value for
        /// order is performed first.
        /// </summary>
        int? Order { get; set; }
        /// <summary>
        /// [Application Load Balancer] Information for creating a redirect action. Specify only when ``Type`` is ``redirect``. Information
        /// about a redirect action. A URI consists of the following components: protocol://hostname:port/path?query. You must modify
        /// at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that
        /// you do not modify retain their original values. You can reuse URI components using the following reserved keywords: +
        /// #{protocol} + #{host} + #{port} + #{path} (the leading '/' is removed) + #{query} For example, you can change the path
        /// to '/new/#{path}', the hostname to 'example.#{host}', or the query to '#{query}&value=xyz'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRedirectConfig RedirectConfig { get; set; }
        /// <summary>
        /// The hostname. This component is not percent-encoded. The hostname can contain #{host}.
        /// </summary>
        string RedirectConfigHost { get; set; }
        /// <summary>
        /// The absolute path, starting with the leading '/'. This component is not percent-encoded. The path can contain #{host},
        /// #{path}, and #{port}.
        /// </summary>
        string RedirectConfigPath { get; set; }
        /// <summary>The port. You can specify a value from 1 to 65535 or #{port}.</summary>
        string RedirectConfigPort { get; set; }
        /// <summary>
        /// The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to
        /// HTTPS. You cannot redirect HTTPS to HTTP.
        /// </summary>
        string RedirectConfigProtocol { get; set; }
        /// <summary>
        /// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading '?', as it is automatically
        /// added. You can specify any of the reserved keywords.
        /// </summary>
        string RedirectConfigQuery { get; set; }
        /// <summary>
        /// The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).
        /// </summary>
        string RedirectConfigStatusCode { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the target group. Specify only when ``Type`` is ``forward`` and you want to route to
        /// a single target group. To route to one or more target groups, use ``ForwardConfig`` instead.
        /// </summary>
        string TargetGroupArn { get; set; }
        /// <summary>
        /// The time period, in seconds, during which requests from a client should be routed to the same target group. The range
        /// is 1-604800 seconds (7 days).
        /// </summary>
        int? TargetGroupStickinessConfigDurationSecond { get; set; }
        /// <summary>Indicates whether target group stickiness is enabled.</summary>
        bool? TargetGroupStickinessConfigEnabled { get; set; }
        /// <summary>The type of action.</summary>
        string Type { get; set; }

    }
}