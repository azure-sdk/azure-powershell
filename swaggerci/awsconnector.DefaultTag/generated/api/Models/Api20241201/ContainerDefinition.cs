// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ContainerDefinition</summary>
    public partial class ContainerDefinition :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal
    {

        /// <summary>
        /// The Linux capabilities for the container that have been added to the default configuration provided by Docker. This parameter
        /// maps to ``CapAdd`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cap-add``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// Tasks launched on FARGATElong only support adding the ``SYS_PTRACE`` kernel capability. Valid values: ``'ALL' | 'AUDIT_CONTROL'
        /// | 'AUDIT_WRITE' | 'BLOCK_SUSPEND' | 'CHOWN' | 'DAC_OVERRIDE' | 'DAC_READ_SEARCH' | 'FOWNER' | 'FSETID' | 'IPC_LOCK' |
        /// 'IPC_OWNER' | 'KILL' | 'LEASE' | 'LINUX_IMMUTABLE' | 'MAC_ADMIN' | 'MAC_OVERRIDE' | 'MKNOD' | 'NET_ADMIN' | 'NET_BIND_SERVICE'
        /// | 'NET_BROADCAST' | 'NET_RAW' | 'SETFCAP' | 'SETGID' | 'SETPCAP' | 'SETUID' | 'SYS_ADMIN' | 'SYS_BOOT' | 'SYS_CHROOT'
        /// | 'SYS_MODULE' | 'SYS_NICE' | 'SYS_PACCT' | 'SYS_PTRACE' | 'SYS_RAWIO' | 'SYS_RESOURCE' | 'SYS_TIME' | 'SYS_TTY_CONFIG'
        /// | 'SYSLOG' | 'WAKE_ALARM'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] CapabilityAdd { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).CapabilityAdd; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).CapabilityAdd = value ?? null /* arrayOf */; }

        /// <summary>
        /// The Linux capabilities for the container that have been removed from the default configuration provided by Docker. This
        /// parameter maps to ``CapDrop`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cap-drop``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// Valid values: ``'ALL' | 'AUDIT_CONTROL' | 'AUDIT_WRITE' | 'BLOCK_SUSPEND' | 'CHOWN' | 'DAC_OVERRIDE' | 'DAC_READ_SEARCH'
        /// | 'FOWNER' | 'FSETID' | 'IPC_LOCK' | 'IPC_OWNER' | 'KILL' | 'LEASE' | 'LINUX_IMMUTABLE' | 'MAC_ADMIN' | 'MAC_OVERRIDE'
        /// | 'MKNOD' | 'NET_ADMIN' | 'NET_BIND_SERVICE' | 'NET_BROADCAST' | 'NET_RAW' | 'SETFCAP' | 'SETGID' | 'SETPCAP' | 'SETUID'
        /// | 'SYS_ADMIN' | 'SYS_BOOT' | 'SYS_CHROOT' | 'SYS_MODULE' | 'SYS_NICE' | 'SYS_PACCT' | 'SYS_PTRACE' | 'SYS_RAWIO' | 'SYS_RESOURCE'
        /// | 'SYS_TIME' | 'SYS_TTY_CONFIG' | 'SYSLOG' | 'WAKE_ALARM'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] CapabilityDrop { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).CapabilityDrop; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).CapabilityDrop = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Command" /> property.</summary>
        private string[] _command;

        /// <summary>
        /// The command that's passed to the container. This parameter maps to ``Cmd`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``COMMAND``
        /// parameter to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// For more information, see [https://docs.docker.com/engine/reference/builder/#cmd](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/builder/#cmd).
        /// If there are multiple arguments, each argument is a separated string in the array.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Command { get => this._command; set => this._command = value; }

        /// <summary>Backing field for <see cref="Cpu" /> property.</summary>
        private int? _cpu;

        /// <summary>
        /// The number of ``cpu`` units reserved for the container. This parameter maps to ``CpuShares`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cpu-shares``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This field is optional for tasks using the Fargate launch type, and the only requirement is that the total amount of CPU
        /// reserved for all containers within a task be lower than the task-level ``cpu`` value. You can determine the number of
        /// CPU units that are available per EC2 instance type by multiplying the vCPUs listed for that instance type on the [Amazon
        /// EC2 Instances](https://docs.aws.amazon.com/ec2/instance-types/) detail page by 1,024. Linux containers share unallocated
        /// CPU units with other containers on the container instance with the same ratio as their allocated amount. For example,
        /// if you run a single-container task on a single-core instance type with 512 CPU units specified for that container, and
        /// that's the only task running on the container instance, that container could use the full 1,024 CPU unit share at any
        /// given time. However, if you launched another copy of the same task on that container instance, each task is guaranteed
        /// a minimum of 512 CPU units when needed. Moreover, each container could float to higher CPU usage if the other container
        /// was not using it. If both tasks were 100% active all of the time, they would be limited to 512 CPU units. On Linux container
        /// instances, the Docker daemon on the container instance uses the CPU value to calculate the relative CPU share ratios for
        /// running containers. For more information, see [CPU share constraint](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#cpu-share-constraint)
        /// in the Docker documentation. The minimum valid CPU share value that the Linux kernel allows is 2. However, the CPU parameter
        /// isn't required, and you can use CPU values below 2 in your container definitions. For CPU values below 2 (including null),
        /// the behavior varies based on your Amazon ECS container agent version: + *Agent versions less than or equal to 1.1.0:*
        /// Null and zero CPU values are passed to Docker as 0, which Docker then converts to 1,024 CPU shares. CPU values of 1 are
        /// passed to Docker as 1, which the Linux kernel converts to two CPU shares. + *Agent versions greater than or equal to 1.2.0:*
        /// Null, zero, and CPU values of 1 are passed to Docker as 2. On Windows container instances, the CPU limit is enforced as
        /// an absolute limit, or a quota. Windows containers only have access to the specified amount of CPU that's described in
        /// the task definition. A null or zero CPU value is passed to Docker as ``0``, which Windows interprets as 1% of one CPU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? Cpu { get => this._cpu; set => this._cpu = value; }

        /// <summary>Backing field for <see cref="CredentialSpec" /> property.</summary>
        private string[] _credentialSpec;

        /// <summary>
        /// A list of ARNs in SSM or Amazon S3 to a credential spec (``CredSpec``) file that configures the container for Active Directory
        /// authentication. We recommend that you use this parameter instead of the ``dockerSecurityOptions``. The maximum number
        /// of ARNs is 1. There are two formats for each ARN. + credentialspecdomainless:MyARN You use credentialspecdomainless:MyARN
        /// to provide a CredSpec with an additional section for a secret in . You provide the login credentials to the domain in
        /// the secret. Each task that runs on any container instance can join different domains. You can use this format without
        /// joining the container instance to a domain. + credentialspec:MyARN You use credentialspec:MyARN to provide a CredSpec
        /// for a single domain. You must join the container instance to the domain before you start any tasks that use this task
        /// definition. In both formats, replace ``MyARN`` with the ARN in SSM or Amazon S3. If you provide a ``credentialspecdomainless:MyARN``,
        /// the ``credspec`` must provide a ARN in ASMlong for a secret containing the username, password, and the domain to connect
        /// to. For better security, the instance isn't joined to the domain for domainless authentication. Other applications on
        /// the instance can't use the domainless credentials. You can use this parameter to run tasks on the same instance, even
        /// it the tasks need to join different domains. For more information, see [Using gMSAs for Windows Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html)
        /// and [Using gMSAs for Linux Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/linux-gmsa.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] CredentialSpec { get => this._credentialSpec; set => this._credentialSpec = value; }

        /// <summary>Backing field for <see cref="DependsOn" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDependency[] _dependsOn;

        /// <summary>
        /// The dependencies defined for container startup and shutdown. A container can contain multiple dependencies. When a dependency
        /// is defined for container startup, for container shutdown it is reversed. For tasks using the EC2 launch type, the container
        /// instances require at least version 1.26.0 of the container agent to turn on container dependencies. However, we recommend
        /// using the latest container agent version. For information about checking your agent version and updating to the latest
        /// version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance
        /// needs at least version 1.26.0-1 of the ``ecs-init`` package. If your container instances are launched from version ``20190301``
        /// or later, then they contain the required versions of the container agent and ``ecs-init``. For more information, see [Amazon
        /// ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. For tasks using the Fargate launch type, the task or service requires the
        /// following platforms: + Linux platform version ``1.3.0`` or later. + Windows platform version ``1.0.0`` or later. If the
        /// task definition is used in a blue/green deployment that uses [AWS::CodeDeploy::DeploymentGroup BlueGreenDeploymentConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-bluegreendeploymentconfiguration.html),
        /// the ``dependsOn`` parameter is not supported. For more information see [Issue #680](https://docs.aws.amazon.com/https://github.com/aws-cloudformation/cloudformation-coverage-roadmap/issues/680)
        /// on the on the GitHub website.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDependency[] DependsOn { get => this._dependsOn; set => this._dependsOn = value; }

        /// <summary>Backing field for <see cref="DisableNetworking" /> property.</summary>
        private bool? _disableNetworking;

        /// <summary>
        /// When this parameter is true, networking is off within the container. This parameter maps to ``NetworkDisabled`` in the
        /// [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/). This parameter
        /// is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? DisableNetworking { get => this._disableNetworking; set => this._disableNetworking = value; }

        /// <summary>Backing field for <see cref="DnsSearchDomain" /> property.</summary>
        private string[] _dnsSearchDomain;

        /// <summary>
        /// A list of DNS search domains that are presented to the container. This parameter maps to ``DnsSearch`` in the [Create
        /// a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section
        /// of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--dns-search``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] DnsSearchDomain { get => this._dnsSearchDomain; set => this._dnsSearchDomain = value; }

        /// <summary>Backing field for <see cref="DnsServer" /> property.</summary>
        private string[] _dnsServer;

        /// <summary>
        /// A list of DNS servers that are presented to the container. This parameter maps to ``Dns`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--dns``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] DnsServer { get => this._dnsServer; set => this._dnsServer = value; }

        /// <summary>Backing field for <see cref="DockerLabel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny _dockerLabel;

        /// <summary>
        /// A key/value map of labels to add to the container. This parameter maps to ``Labels`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--label``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker
        /// Remote API version on your container instance, log in to your container instance and run the following command: ``sudo
        /// docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny DockerLabel { get => (this._dockerLabel = this._dockerLabel ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Any()); set => this._dockerLabel = value; }

        /// <summary>Backing field for <see cref="DockerSecurityOption" /> property.</summary>
        private string[] _dockerSecurityOption;

        /// <summary>
        /// A list of strings to provide custom configuration for multiple security systems. For more information about valid values,
        /// see [Docker Run Security Configuration](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This field isn't valid for containers in tasks using the Fargate launch type. For Linux tasks on EC2, this parameter can
        /// be used to reference custom labels for SELinux and AppArmor multi-level security systems. For any tasks on EC2, this parameter
        /// can be used to reference a credential spec file that configures a container for Active Directory authentication. For more
        /// information, see [Using gMSAs for Windows Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html)
        /// and [Using gMSAs for Linux Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/linux-gmsa.html) in
        /// the *Amazon Elastic Container Service Developer Guide*. This parameter maps to ``SecurityOpt`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--security-opt``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// The Amazon ECS container agent running on a container instance must register with the ``ECS_SELINUX_CAPABLE=true`` or
        /// ``ECS_APPARMOR_CAPABLE=true`` environment variables before containers placed on that instance can use these security options.
        /// For more information, see [Amazon ECS Container Agent Configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For more information about valid values, see [Docker Run Security
        /// Configuration](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). Valid
        /// values: 'no-new-privileges' | 'apparmor:PROFILE' | 'label:value' | 'credentialspec:CredentialSpecFilePath'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] DockerSecurityOption { get => this._dockerSecurityOption; set => this._dockerSecurityOption = value; }

        /// <summary>Backing field for <see cref="EntryPoint" /> property.</summary>
        private string[] _entryPoint;

        /// <summary>
        /// Early versions of the Amazon ECS container agent don't properly handle ``entryPoint`` parameters. If you have problems
        /// using ``entryPoint``, update your container agent or enter your commands and arguments as ``command`` array items instead.
        /// The entry point that's passed to the container. This parameter maps to ``Entrypoint`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--entrypoint``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// For more information, see [https://docs.docker.com/engine/reference/builder/#entrypoint](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/builder/#entrypoint).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] EntryPoint { get => this._entryPoint; set => this._entryPoint = value; }

        /// <summary>Backing field for <see cref="Environment" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair[] _environment;

        /// <summary>
        /// The environment variables to pass to a container. This parameter maps to ``Env`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--env``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// We don't recommend that you use plaintext environment variables for sensitive information, such as credential data.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair[] Environment { get => this._environment; set => this._environment = value; }

        /// <summary>Backing field for <see cref="EnvironmentFile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentFile[] _environmentFile;

        /// <summary>
        /// A list of files containing the environment variables to pass to a container. This parameter maps to the ``--env-file``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// You can specify up to ten environment files. The file must have a ``.env`` file extension. Each line in an environment
        /// file contains an environment variable in ``VARIABLE=VALUE`` format. Lines beginning with ``#`` are treated as comments
        /// and are ignored. For more information about the environment variable file syntax, see [Declare default environment variables
        /// in file](https://docs.aws.amazon.com/https://docs.docker.com/compose/env-file/). If there are environment variables specified
        /// using the ``environment`` parameter in a container definition, they take precedence over the variables contained within
        /// an environment file. If multiple environment files are specified that contain the same variable, they're processed from
        /// the top down. We recommend that you use unique variable names. For more information, see [Specifying Environment Variables](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentFile[] EnvironmentFile { get => this._environmentFile; set => this._environmentFile = value; }

        /// <summary>Backing field for <see cref="Essential" /> property.</summary>
        private bool? _essential;

        /// <summary>
        /// If the ``essential`` parameter of a container is marked as ``true``, and that container fails or stops for any reason,
        /// all other containers that are part of the task are stopped. If the ``essential`` parameter of a container is marked as
        /// ``false``, its failure doesn't affect the rest of the containers in a task. If this parameter is omitted, a container
        /// is assumed to be essential. All tasks must have at least one essential container. If you have an application that's composed
        /// of multiple containers, group containers that are used for a common purpose into components, and separate the different
        /// components into multiple task definitions. For more information, see [Application Architecture](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/application_architecture.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Essential { get => this._essential; set => this._essential = value; }

        /// <summary>Backing field for <see cref="ExtraHost" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostEntry[] _extraHost;

        /// <summary>
        /// A list of hostnames and IP address mappings to append to the ``/etc/hosts`` file on the container. This parameter maps
        /// to ``ExtraHosts`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--add-host``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter isn't supported for Windows containers or tasks that use the ``awsvpc`` network mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostEntry[] ExtraHost { get => this._extraHost; set => this._extraHost = value; }

        /// <summary>
        /// The options to use when configuring the log router. This field is optional and can be used to add additional metadata,
        /// such as the task, task definition, cluster, and container instance details to the log event. If specified, valid option
        /// keys are: + ``enable-ecs-log-metadata``, which can be ``true`` or ``false`` + ``config-file-type``, which can be ``s3``
        /// or ``file`` + ``config-file-value``, which is either an S3 ARN or a file path
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny FirelenConfigurationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFirelensConfigurationInternal)FirelensConfiguration).Option; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFirelensConfigurationInternal)FirelensConfiguration).Option = value ?? null /* model class */; }

        /// <summary>The log router to use. The valid values are ``fluentd`` or ``fluentbit``.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string FirelenConfigurationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFirelensConfigurationInternal)FirelensConfiguration).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFirelensConfigurationInternal)FirelensConfiguration).Type = value ?? null; }

        /// <summary>Backing field for <see cref="FirelensConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFirelensConfiguration _firelensConfiguration;

        /// <summary>
        /// The FireLens configuration for the container. This is used to specify and configure a log router for container logs. For
        /// more information, see [Custom Log Routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. The FireLens configuration for the container. This is used
        /// to specify and configure a log router for container logs. For more information, see [Custom log routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFirelensConfiguration FirelensConfiguration { get => (this._firelensConfiguration = this._firelensConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.FirelensConfiguration()); set => this._firelensConfiguration = value; }

        /// <summary>Backing field for <see cref="HealthCheck" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheck _healthCheck;

        /// <summary>
        /// The container health check command and associated configuration parameters for the container. This parameter maps to ``HealthCheck``
        /// in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``HEALTHCHECK``
        /// parameter of [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// The ``HealthCheck`` property specifies an object representing a container health check. Health check parameters that are
        /// specified in a container definition override any Docker health checks that exist in the container image (such as those
        /// specified in a parent image or from the image's Dockerfile). This configuration maps to the ``HEALTHCHECK`` parameter
        /// of [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). The Amazon ECS container agent
        /// only monitors and reports on the health checks specified in the task definition. Amazon ECS does not monitor Docker health
        /// checks that are embedded in a container image and not specified in the container definition. Health check parameters that
        /// are specified in a container definition override any Docker health checks that exist in the container image. If a task
        /// is run manually, and not as part of a service, the task will continue its lifecycle regardless of its health status. For
        /// tasks that are part of a service, if the task reports as unhealthy then the task will be stopped and the service scheduler
        /// will replace it. The following are notes about container health check support: + Container health checks require version
        /// 1.17.0 or greater of the Amazon ECS container agent. For more information, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html).
        /// + Container health checks are supported for Fargate tasks if you are using platform version 1.1.0 or greater. For more
        /// information, see [Platform Versions](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html).
        /// + Container health checks are not supported for tasks that are part of a service that is configured to use a Classic Load
        /// Balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheck HealthCheck { get => (this._healthCheck = this._healthCheck ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HealthCheck()); set => this._healthCheck = value; }

        /// <summary>
        /// A string array representing the command that the container runs to determine if it is healthy. The string array must start
        /// with ``CMD`` to run the command arguments directly, or ``CMD-SHELL`` to run the command with the container's default shell.
        /// When you use the AWS Management Console JSON panel, the CLIlong, or the APIs, enclose the list of commands in double quotes
        /// and brackets. ``[ 'CMD-SHELL', 'curl -f http://localhost/ || exit 1' ]`` You don't include the double quotes and brackets
        /// when you use the AWS Management Console. ``CMD-SHELL, curl -f http://localhost/ || exit 1`` An exit code of 0 indicates
        /// success, and non-zero exit code indicates failure. For more information, see ``HealthCheck`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] HealthCheckCommand { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheckInternal)HealthCheck).Command; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheckInternal)HealthCheck).Command = value ?? null /* arrayOf */; }

        /// <summary>
        /// The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default
        /// value is 30 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? HealthCheckInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheckInternal)HealthCheck).Interval; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheckInternal)HealthCheck).Interval = value ?? default(int); }

        /// <summary>
        /// The number of times to retry a failed health check before the container is considered unhealthy. You may specify between
        /// 1 and 10 retries. The default value is 3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? HealthCheckRetry { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheckInternal)HealthCheck).Retry; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheckInternal)HealthCheck).Retry = value ?? default(int); }

        /// <summary>
        /// The optional grace period to provide containers time to bootstrap before failed health checks count towards the maximum
        /// number of retries. You can specify between 0 and 300 seconds. By default, the ``startPeriod`` is off. If a health check
        /// succeeds within the ``startPeriod``, then the container is considered healthy and any subsequent failures count toward
        /// the maximum number of retries.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? HealthCheckStartPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheckInternal)HealthCheck).StartPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheckInternal)HealthCheck).StartPeriod = value ?? default(int); }

        /// <summary>
        /// The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between
        /// 2 and 60 seconds. The default value is 5.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? HealthCheckTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheckInternal)HealthCheck).Timeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheckInternal)HealthCheck).Timeout = value ?? default(int); }

        /// <summary>Backing field for <see cref="Hostname" /> property.</summary>
        private string _hostname;

        /// <summary>
        /// The hostname to use for your container. This parameter maps to ``Hostname`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--hostname``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// The ``hostname`` parameter is not supported if you're using the ``awsvpc`` network mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Hostname { get => this._hostname; set => this._hostname = value; }

        /// <summary>Backing field for <see cref="Image" /> property.</summary>
        private string _image;

        /// <summary>
        /// The image used to start a container. This string is passed directly to the Docker daemon. By default, images in the Docker
        /// Hub registry are available. Other repositories are specified with either ``repository-url/image:tag`` or ``repository-url/image@digest``.
        /// Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes, and number
        /// signs are allowed. This parameter maps to ``Image`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``IMAGE``
        /// parameter of [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// + When a new task starts, the Amazon ECS container agent pulls the latest version of the specified image and tag for the
        /// container to use. However, subsequent updates to a repository image aren't propagated to already running tasks. + Images
        /// in Amazon ECR repositories can be specified by either using the full ``registry/repository:tag`` or ``registry/repository@digest``.
        /// For example, ``012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>:latest`` or ``012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE``.
        /// + Images in official repositories on Docker Hub use a single name (for example, ``ubuntu`` or ``mongo``). + Images in
        /// other repositories on Docker Hub are qualified with an organization name (for example, ``amazon/amazon-ecs-agent``). +
        /// Images in other online repositories are qualified further by a domain name (for example, ``quay.io/assemblyline/ubuntu``).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Image { get => this._image; set => this._image = value; }

        /// <summary>Backing field for <see cref="Interactive" /> property.</summary>
        private bool? _interactive;

        /// <summary>
        /// When this parameter is ``true``, you can deploy containerized applications that require ``stdin`` or a ``tty`` to be allocated.
        /// This parameter maps to ``OpenStdin`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--interactive``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Interactive { get => this._interactive; set => this._interactive = value; }

        /// <summary>Backing field for <see cref="Link" /> property.</summary>
        private string[] _link;

        /// <summary>
        /// The ``links`` parameter allows containers to communicate with each other without the need for port mappings. This parameter
        /// is only supported if the network mode of a task definition is ``bridge``. The ``name:internalName`` construct is analogous
        /// to ``name:alias`` in Docker links. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are
        /// allowed. For more information about linking Docker containers, go to [Legacy container links](https://docs.aws.amazon.com/https://docs.docker.com/network/links/)
        /// in the Docker documentation. This parameter maps to ``Links`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--link``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers. Containers that are collocated on a single container instance
        /// may be able to communicate with each other without requiring links or host port mappings. Network isolation is achieved
        /// on the container instance using security groups and VPC settings.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Link { get => this._link; set => this._link = value; }

        /// <summary>Backing field for <see cref="LinuxParameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParameters _linuxParameter;

        /// <summary>
        /// Linux-specific modifications that are applied to the container, such as Linux kernel capabilities. For more information
        /// see [KernelCapabilities](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_KernelCapabilities.html). This
        /// parameter is not supported for Windows containers. The Linux-specific options that are applied to the container, such
        /// as Linux [KernelCapabilities](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_KernelCapabilities.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParameters LinuxParameter { get => (this._linuxParameter = this._linuxParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LinuxParameters()); set => this._linuxParameter = value; }

        /// <summary>
        /// Any host devices to expose to the container. This parameter maps to ``Devices`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--device``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If you're using tasks that use the Fargate launch type, the ``devices`` parameter isn't supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDevice[] LinuxParameterDevice { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).Device; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).Device = value ?? null /* arrayOf */; }

        /// <summary>
        /// Run an ``init`` process inside the container that forwards signals and reaps processes. This parameter maps to the ``--init``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter requires version 1.25 of the Docker Remote API or greater on your container instance. To check the Docker
        /// Remote API version on your container instance, log in to your container instance and run the following command: ``sudo
        /// docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? LinuxParameterInitProcessEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).InitProcessEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).InitProcessEnabled = value ?? default(bool); }

        /// <summary>
        /// The total amount of swap memory (in MiB) a container can use. This parameter will be translated to the ``--memory-swap``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration)
        /// where the value would be the sum of the container memory plus the ``maxSwap`` value. If a ``maxSwap`` value of ``0`` is
        /// specified, the container will not use swap. Accepted values are ``0`` or any positive integer. If the ``maxSwap`` parameter
        /// is omitted, the container will use the swap configuration for the container instance it is running on. A ``maxSwap`` value
        /// must be set for the ``swappiness`` parameter to be used. If you're using tasks that use the Fargate launch type, the ``maxSwap``
        /// parameter isn't supported. If you're using tasks on Amazon Linux 2023 the ``swappiness`` parameter isn't supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? LinuxParameterMaxSwap { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).MaxSwap; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).MaxSwap = value ?? default(int); }

        /// <summary>
        /// The value for the size (in MiB) of the ``/dev/shm`` volume. This parameter maps to the ``--shm-size`` option to [docker
        /// run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). If you are using
        /// tasks that use the Fargate launch type, the ``sharedMemorySize`` parameter is not supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? LinuxParameterSharedMemorySize { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).SharedMemorySize; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).SharedMemorySize = value ?? default(int); }

        /// <summary>
        /// This allows you to tune a container's memory swappiness behavior. A ``swappiness`` value of ``0`` will cause swapping
        /// to not happen unless absolutely necessary. A ``swappiness`` value of ``100`` will cause pages to be swapped very aggressively.
        /// Accepted values are whole numbers between ``0`` and ``100``. If the ``swappiness`` parameter is not specified, a default
        /// value of ``60`` is used. If a value is not specified for ``maxSwap`` then this parameter is ignored. This parameter maps
        /// to the ``--memory-swappiness`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If you're using tasks that use the Fargate launch type, the ``swappiness`` parameter isn't supported. If you're using
        /// tasks on Amazon Linux 2023 the ``swappiness`` parameter isn't supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? LinuxParameterSwappiness { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).Swappiness; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).Swappiness = value ?? default(int); }

        /// <summary>
        /// The container path, mount options, and size (in MiB) of the tmpfs mount. This parameter maps to the ``--tmpfs`` option
        /// to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). If
        /// you're using tasks that use the Fargate launch type, the ``tmpfs`` parameter isn't supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITmpfs[] LinuxParameterTmpf { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).Tmpf; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).Tmpf = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="LogConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration _logConfiguration;

        /// <summary>
        /// The log configuration specification for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). By default, containers
        /// use the same logging driver that the Docker daemon uses. However, the container may use a different logging driver than
        /// the Docker daemon by specifying a log driver with this parameter in the container definition. To use a different logging
        /// driver for a container, the log system must be configured properly on the container instance (or on a different log server
        /// for remote logging options). For more information on the options for different supported log drivers, see [Configure logging
        /// drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation.
        /// Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon (shown in the [LogConfiguration](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_LogConfiguration.html)
        /// data type). Additional log drivers may be available in future releases of the Amazon ECS container agent. This parameter
        /// requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version
        /// on your container instance, log in to your container instance and run the following command: ``sudo docker version --format
        /// '{{.Server.APIVersion}}'`` The Amazon ECS container agent running on a container instance must register the logging drivers
        /// available on that instance with the ``ECS_AVAILABLE_LOGGING_DRIVERS`` environment variable before containers placed on
        /// that instance can use these log configuration options. For more information, see [Amazon ECS Container Agent Configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. The ``LogConfiguration`` property specifies log configuration
        /// options to send to a custom log driver for the container.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration LogConfiguration { get => (this._logConfiguration = this._logConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogConfiguration()); set => this._logConfiguration = value; }

        /// <summary>
        /// The log driver to use for the container. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``,
        /// and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``,
        /// ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. For more information
        /// about using the ``awslogs`` log driver, see [Using the awslogs log driver](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For more information about using the ``awsfirelens`` log driver,
        /// see [Custom log routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. If you have a custom driver that isn't listed, you can fork the Amazon ECS
        /// container agent project that's [available on GitHub](https://docs.aws.amazon.com/https://github.com/aws/amazon-ecs-agent)
        /// and customize it to work with that driver. We encourage you to submit pull requests for changes that you would like to
        /// have included. However, we don't currently provide support for running modified copies of this software.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LogConfigurationLogDriver { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).LogDriver; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).LogDriver = value ?? null; }

        /// <summary>
        /// The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or
        /// greater on your container instance. To check the Docker Remote API version on your container instance, log in to your
        /// container instance and run the following command: ``sudo docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny LogConfigurationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).Option; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).Option = value ?? null /* model class */; }

        /// <summary>
        /// The secrets to pass to the log configuration. For more information, see [Specifying sensitive data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[] LogConfigurationSecretOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).SecretOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).SecretOption = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Memory" /> property.</summary>
        private int? _memory;

        /// <summary>
        /// The amount (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here,
        /// the container is killed. The total amount of memory reserved for all containers within a task must be lower than the task
        /// ``memory`` value, if one is specified. This parameter maps to ``Memory`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--memory``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If using the Fargate launch type, this parameter is optional. If using the EC2 launch type, you must specify either a
        /// task-level memory value or a container-level memory value. If you specify both a container-level ``memory`` and ``memoryReservation``
        /// value, ``memory`` must be greater than ``memoryReservation``. If you specify ``memoryReservation``, then that value is
        /// subtracted from the available memory resources for the container instance where the container is placed. Otherwise, the
        /// value of ``memory`` is used. The Docker 20.10.0 or later daemon reserves a minimum of 6 MiB of memory for a container,
        /// so you should not specify fewer than 6 MiB of memory for your containers. The Docker 19.03.13-ce or earlier daemon reserves
        /// a minimum of 4 MiB of memory for a container, so you should not specify fewer than 4 MiB of memory for your containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? Memory { get => this._memory; set => this._memory = value; }

        /// <summary>Backing field for <see cref="MemoryReservation" /> property.</summary>
        private int? _memoryReservation;

        /// <summary>
        /// The soft limit (in MiB) of memory to reserve for the container. When system memory is under heavy contention, Docker attempts
        /// to keep the container memory to this soft limit. However, your container can consume more memory when it needs to, up
        /// to either the hard limit specified with the ``memory`` parameter (if applicable), or all of the available memory on the
        /// container instance, whichever comes first. This parameter maps to ``MemoryReservation`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--memory-reservation``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If a task-level memory value is not specified, you must specify a non-zero integer for one or both of ``memory`` or ``memoryReservation``
        /// in a container definition. If you specify both, ``memory`` must be greater than ``memoryReservation``. If you specify
        /// ``memoryReservation``, then that value is subtracted from the available memory resources for the container instance where
        /// the container is placed. Otherwise, the value of ``memory`` is used. For example, if your container normally uses 128
        /// MiB of memory, but occasionally bursts to 256 MiB of memory for short periods of time, you can set a ``memoryReservation``
        /// of 128 MiB, and a ``memory`` hard limit of 300 MiB. This configuration would allow the container to only reserve 128 MiB
        /// of memory from the remaining resources on the container instance, but also allow the container to consume more memory
        /// resources when needed. The Docker 20.10.0 or later daemon reserves a minimum of 6 MiB of memory for a container. So, don't
        /// specify less than 6 MiB of memory for your containers. The Docker 19.03.13-ce or earlier daemon reserves a minimum of
        /// 4 MiB of memory for a container. So, don't specify less than 4 MiB of memory for your containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? MemoryReservation { get => this._memoryReservation; set => this._memoryReservation = value; }

        /// <summary>Internal Acessors for FirelensConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFirelensConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal.FirelensConfiguration { get => (this._firelensConfiguration = this._firelensConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.FirelensConfiguration()); set { {_firelensConfiguration = value;} } }

        /// <summary>Internal Acessors for HealthCheck</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheck Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal.HealthCheck { get => (this._healthCheck = this._healthCheck ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HealthCheck()); set { {_healthCheck = value;} } }

        /// <summary>Internal Acessors for LinuxParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParameters Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal.LinuxParameter { get => (this._linuxParameter = this._linuxParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LinuxParameters()); set { {_linuxParameter = value;} } }

        /// <summary>Internal Acessors for LinuxParameterCapability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKernelCapabilities Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal.LinuxParameterCapability { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).Capability; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParametersInternal)LinuxParameter).Capability = value; }

        /// <summary>Internal Acessors for LogConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal.LogConfiguration { get => (this._logConfiguration = this._logConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogConfiguration()); set { {_logConfiguration = value;} } }

        /// <summary>Internal Acessors for RepositoryCredentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepositoryCredentials Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinitionInternal.RepositoryCredentials { get => (this._repositoryCredentials = this._repositoryCredentials ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RepositoryCredentials()); set { {_repositoryCredentials = value;} } }

        /// <summary>Backing field for <see cref="MountPoint" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint[] _mountPoint;

        /// <summary>
        /// The mount points for data volumes in your container. This parameter maps to ``Volumes`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--volume``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// Windows containers can mount whole directories on the same drive as ``$env:ProgramData``. Windows containers can't mount
        /// directories on a different drive, and mount point can't be across drives.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint[] MountPoint { get => this._mountPoint; set => this._mountPoint = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// The name of a container. If you're linking multiple containers together in a task definition, the ``name`` of one container
        /// can be entered in the ``links`` of another container to connect the containers. Up to 255 letters (uppercase and lowercase),
        /// numbers, underscores, and hyphens are allowed. This parameter maps to ``name`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--name``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="PortMapping" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPortMapping[] _portMapping;

        /// <summary>
        /// The list of port mappings for the container. Port mappings allow containers to access ports on the host container instance
        /// to send or receive traffic. For task definitions that use the ``awsvpc`` network mode, you should only specify the ``containerPort``.
        /// The ``hostPort`` can be left blank or it must be the same value as the ``containerPort``. Port mappings on Windows use
        /// the ``NetNAT`` gateway address rather than ``localhost``. There is no loopback for port mappings on Windows, so you cannot
        /// access a container's mapped port from the host itself. This parameter maps to ``PortBindings`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--publish``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). If the network mode
        /// of a task definition is set to ``none``, then you can't specify port mappings. If the network mode of a task definition
        /// is set to ``host``, then host ports must either be undefined or they must match the container port in the port mapping.
        /// After a task reaches the ``RUNNING`` status, manual and automatic host and container port assignments are visible in the
        /// *Network Bindings* section of a container description for a selected task in the Amazon ECS console. The assignments are
        /// also visible in the ``networkBindings`` section [DescribeTasks](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html)
        /// responses.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPortMapping[] PortMapping { get => this._portMapping; set => this._portMapping = value; }

        /// <summary>Backing field for <see cref="Privileged" /> property.</summary>
        private bool? _privileged;

        /// <summary>
        /// When this parameter is true, the container is given elevated privileges on the host container instance (similar to the
        /// ``root`` user). This parameter maps to ``Privileged`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--privileged``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers or tasks run on FARGATElong.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Privileged { get => this._privileged; set => this._privileged = value; }

        /// <summary>Backing field for <see cref="PseudoTerminal" /> property.</summary>
        private bool? _pseudoTerminal;

        /// <summary>
        /// When this parameter is ``true``, a TTY is allocated. This parameter maps to ``Tty`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--tty``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? PseudoTerminal { get => this._pseudoTerminal; set => this._pseudoTerminal = value; }

        /// <summary>Backing field for <see cref="ReadonlyRootFilesystem" /> property.</summary>
        private bool? _readonlyRootFilesystem;

        /// <summary>
        /// When this parameter is true, the container is given read-only access to its root file system. This parameter maps to ``ReadonlyRootfs``
        /// in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--read-only``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? ReadonlyRootFilesystem { get => this._readonlyRootFilesystem; set => this._readonlyRootFilesystem = value; }

        /// <summary>Backing field for <see cref="RepositoryCredentials" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepositoryCredentials _repositoryCredentials;

        /// <summary>
        /// The private repository authentication credentials to use. The repository credentials for private registry authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepositoryCredentials RepositoryCredentials { get => (this._repositoryCredentials = this._repositoryCredentials ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RepositoryCredentials()); set => this._repositoryCredentials = value; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the secret containing the private repository credentials. When you use the Amazon ECS
        /// API, CLI, or AWS SDK, if the secret exists in the same Region as the task that you're launching then you can use either
        /// the full ARN or the name of the secret. When you use the AWS Management Console, you must specify the full ARN of the
        /// secret.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string RepositoryCredentialsParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepositoryCredentialsInternal)RepositoryCredentials).CredentialsParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepositoryCredentialsInternal)RepositoryCredentials).CredentialsParameter = value ?? null; }

        /// <summary>Backing field for <see cref="ResourceRequirement" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceRequirement[] _resourceRequirement;

        /// <summary>
        /// The type and amount of a resource to assign to a container. The only supported resource is a GPU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceRequirement[] ResourceRequirement { get => this._resourceRequirement; set => this._resourceRequirement = value; }

        /// <summary>Backing field for <see cref="Secret" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[] _secret;

        /// <summary>
        /// The secrets to pass to the container. For more information, see [Specifying Sensitive Data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[] Secret { get => this._secret; set => this._secret = value; }

        /// <summary>Backing field for <see cref="StartTimeout" /> property.</summary>
        private int? _startTimeout;

        /// <summary>
        /// Time duration (in seconds) to wait before giving up on resolving dependencies for a container. For example, you specify
        /// two containers in a task definition with containerA having a dependency on containerB reaching a ``COMPLETE``, ``SUCCESS``,
        /// or ``HEALTHY`` status. If a ``startTimeout`` value is specified for containerB and it doesn't reach the desired status
        /// within that time then containerA gives up and not start. This results in the task transitioning to a ``STOPPED`` state.
        /// When the ``ECS_CONTAINER_START_TIMEOUT`` container agent configuration variable is used, it's enforced independently from
        /// this start timeout value. For tasks using the Fargate launch type, the task or service requires the following platforms:
        /// + Linux platform version ``1.3.0`` or later. + Windows platform version ``1.0.0`` or later. For tasks using the EC2 launch
        /// type, your container instances require at least version ``1.26.0`` of the container agent to use a container start timeout
        /// value. However, we recommend using the latest container agent version. For information about checking your agent version
        /// and updating to the latest version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance
        /// needs at least version ``1.26.0-1`` of the ``ecs-init`` package. If your container instances are launched from version
        /// ``20190301`` or later, then they contain the required versions of the container agent and ``ecs-init``. For more information,
        /// see [Amazon ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. The valid values are 2-120 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? StartTimeout { get => this._startTimeout; set => this._startTimeout = value; }

        /// <summary>Backing field for <see cref="StopTimeout" /> property.</summary>
        private int? _stopTimeout;

        /// <summary>
        /// Time duration (in seconds) to wait before the container is forcefully killed if it doesn't exit normally on its own. For
        /// tasks using the Fargate launch type, the task or service requires the following platforms: + Linux platform version ``1.3.0``
        /// or later. + Windows platform version ``1.0.0`` or later. The max stop timeout value is 120 seconds and if the parameter
        /// is not specified, the default value of 30 seconds is used. For tasks that use the EC2 launch type, if the ``stopTimeout``
        /// parameter isn't specified, the value set for the Amazon ECS container agent configuration variable ``ECS_CONTAINER_STOP_TIMEOUT``
        /// is used. If neither the ``stopTimeout`` parameter or the ``ECS_CONTAINER_STOP_TIMEOUT`` agent configuration variable are
        /// set, then the default values of 30 seconds for Linux containers and 30 seconds on Windows containers are used. Your container
        /// instances require at least version 1.26.0 of the container agent to use a container stop timeout value. However, we recommend
        /// using the latest container agent version. For information about checking your agent version and updating to the latest
        /// version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance
        /// needs at least version 1.26.0-1 of the ``ecs-init`` package. If your container instances are launched from version ``20190301``
        /// or later, then they contain the required versions of the container agent and ``ecs-init``. For more information, see [Amazon
        /// ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. The valid values are 2-120 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? StopTimeout { get => this._stopTimeout; set => this._stopTimeout = value; }

        /// <summary>Backing field for <see cref="SystemControl" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISystemControl[] _systemControl;

        /// <summary>
        /// A list of namespaced kernel parameters to set in the container. This parameter maps to ``Sysctls`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--sysctl``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// For example, you can configure ``net.ipv4.tcp_keepalive_time`` setting to maintain longer lived connections.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISystemControl[] SystemControl { get => this._systemControl; set => this._systemControl = value; }

        /// <summary>Backing field for <see cref="Ulimit" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUlimit[] _ulimit;

        /// <summary>
        /// A list of ``ulimits`` to set in the container. This parameter maps to ``Ulimits`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--ulimit``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). Valid naming values
        /// are displayed in the [Ulimit](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Ulimit.html) data type. This
        /// parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote
        /// API version on your container instance, log in to your container instance and run the following command: ``sudo docker
        /// version --format '{{.Server.APIVersion}}'`` This parameter is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUlimit[] Ulimit { get => this._ulimit; set => this._ulimit = value; }

        /// <summary>Backing field for <see cref="User" /> property.</summary>
        private string _user;

        /// <summary>
        /// The user to use inside the container. This parameter maps to ``User`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--user``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// When running tasks using the ``host`` network mode, don't run containers using the root user (UID 0). We recommend using
        /// a non-root user for better security. You can specify the ``user`` using the following formats. If specifying a UID or
        /// GID, you must specify it as a positive integer. + ``user`` + ``user:group`` + ``uid`` + ``uid:gid`` + ``user:gid`` + ``uid:group``
        /// This parameter is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string User { get => this._user; set => this._user = value; }

        /// <summary>Backing field for <see cref="VolumesFrom" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeFrom[] _volumesFrom;

        /// <summary>
        /// Data volumes to mount from another container. This parameter maps to ``VolumesFrom`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--volumes-from``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeFrom[] VolumesFrom { get => this._volumesFrom; set => this._volumesFrom = value; }

        /// <summary>Backing field for <see cref="WorkingDirectory" /> property.</summary>
        private string _workingDirectory;

        /// <summary>
        /// The working directory to run commands inside the container in. This parameter maps to ``WorkingDir`` in the [Create a
        /// container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of
        /// the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--workdir`` option
        /// to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string WorkingDirectory { get => this._workingDirectory; set => this._workingDirectory = value; }

        /// <summary>Creates an new <see cref="ContainerDefinition" /> instance.</summary>
        public ContainerDefinition()
        {

        }
    }
    /// Definition of ContainerDefinition
    public partial interface IContainerDefinition :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The Linux capabilities for the container that have been added to the default configuration provided by Docker. This parameter
        /// maps to ``CapAdd`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cap-add``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// Tasks launched on FARGATElong only support adding the ``SYS_PTRACE`` kernel capability. Valid values: ``'ALL' | 'AUDIT_CONTROL'
        /// | 'AUDIT_WRITE' | 'BLOCK_SUSPEND' | 'CHOWN' | 'DAC_OVERRIDE' | 'DAC_READ_SEARCH' | 'FOWNER' | 'FSETID' | 'IPC_LOCK' |
        /// 'IPC_OWNER' | 'KILL' | 'LEASE' | 'LINUX_IMMUTABLE' | 'MAC_ADMIN' | 'MAC_OVERRIDE' | 'MKNOD' | 'NET_ADMIN' | 'NET_BIND_SERVICE'
        /// | 'NET_BROADCAST' | 'NET_RAW' | 'SETFCAP' | 'SETGID' | 'SETPCAP' | 'SETUID' | 'SYS_ADMIN' | 'SYS_BOOT' | 'SYS_CHROOT'
        /// | 'SYS_MODULE' | 'SYS_NICE' | 'SYS_PACCT' | 'SYS_PTRACE' | 'SYS_RAWIO' | 'SYS_RESOURCE' | 'SYS_TIME' | 'SYS_TTY_CONFIG'
        /// | 'SYSLOG' | 'WAKE_ALARM'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Linux capabilities for the container that have been added to the default configuration provided by Docker. This parameter maps to ``CapAdd`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cap-add`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  Tasks launched on FARGATElong only support adding the ``SYS_PTRACE`` kernel capability.  Valid values: ``'ALL' | 'AUDIT_CONTROL' | 'AUDIT_WRITE' | 'BLOCK_SUSPEND' | 'CHOWN' | 'DAC_OVERRIDE' | 'DAC_READ_SEARCH' | 'FOWNER' | 'FSETID' | 'IPC_LOCK' | 'IPC_OWNER' | 'KILL' | 'LEASE' | 'LINUX_IMMUTABLE' | 'MAC_ADMIN' | 'MAC_OVERRIDE' | 'MKNOD' | 'NET_ADMIN' | 'NET_BIND_SERVICE' | 'NET_BROADCAST' | 'NET_RAW' | 'SETFCAP' | 'SETGID' | 'SETPCAP' | 'SETUID' | 'SYS_ADMIN' | 'SYS_BOOT' | 'SYS_CHROOT' | 'SYS_MODULE' | 'SYS_NICE' | 'SYS_PACCT' | 'SYS_PTRACE' | 'SYS_RAWIO' | 'SYS_RESOURCE' | 'SYS_TIME' | 'SYS_TTY_CONFIG' | 'SYSLOG' | 'WAKE_ALARM'``",
        SerializedName = @"add",
        PossibleTypes = new [] { typeof(string) })]
        string[] CapabilityAdd { get; set; }
        /// <summary>
        /// The Linux capabilities for the container that have been removed from the default configuration provided by Docker. This
        /// parameter maps to ``CapDrop`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cap-drop``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// Valid values: ``'ALL' | 'AUDIT_CONTROL' | 'AUDIT_WRITE' | 'BLOCK_SUSPEND' | 'CHOWN' | 'DAC_OVERRIDE' | 'DAC_READ_SEARCH'
        /// | 'FOWNER' | 'FSETID' | 'IPC_LOCK' | 'IPC_OWNER' | 'KILL' | 'LEASE' | 'LINUX_IMMUTABLE' | 'MAC_ADMIN' | 'MAC_OVERRIDE'
        /// | 'MKNOD' | 'NET_ADMIN' | 'NET_BIND_SERVICE' | 'NET_BROADCAST' | 'NET_RAW' | 'SETFCAP' | 'SETGID' | 'SETPCAP' | 'SETUID'
        /// | 'SYS_ADMIN' | 'SYS_BOOT' | 'SYS_CHROOT' | 'SYS_MODULE' | 'SYS_NICE' | 'SYS_PACCT' | 'SYS_PTRACE' | 'SYS_RAWIO' | 'SYS_RESOURCE'
        /// | 'SYS_TIME' | 'SYS_TTY_CONFIG' | 'SYSLOG' | 'WAKE_ALARM'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Linux capabilities for the container that have been removed from the default configuration provided by Docker. This parameter maps to ``CapDrop`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cap-drop`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). Valid values: ``'ALL' | 'AUDIT_CONTROL' | 'AUDIT_WRITE' | 'BLOCK_SUSPEND' | 'CHOWN' | 'DAC_OVERRIDE' | 'DAC_READ_SEARCH' | 'FOWNER' | 'FSETID' | 'IPC_LOCK' | 'IPC_OWNER' | 'KILL' | 'LEASE' | 'LINUX_IMMUTABLE' | 'MAC_ADMIN' | 'MAC_OVERRIDE' | 'MKNOD' | 'NET_ADMIN' | 'NET_BIND_SERVICE' | 'NET_BROADCAST' | 'NET_RAW' | 'SETFCAP' | 'SETGID' | 'SETPCAP' | 'SETUID' | 'SYS_ADMIN' | 'SYS_BOOT' | 'SYS_CHROOT' | 'SYS_MODULE' | 'SYS_NICE' | 'SYS_PACCT' | 'SYS_PTRACE' | 'SYS_RAWIO' | 'SYS_RESOURCE' | 'SYS_TIME' | 'SYS_TTY_CONFIG' | 'SYSLOG' | 'WAKE_ALARM'``",
        SerializedName = @"drop",
        PossibleTypes = new [] { typeof(string) })]
        string[] CapabilityDrop { get; set; }
        /// <summary>
        /// The command that's passed to the container. This parameter maps to ``Cmd`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``COMMAND``
        /// parameter to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// For more information, see [https://docs.docker.com/engine/reference/builder/#cmd](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/builder/#cmd).
        /// If there are multiple arguments, each argument is a separated string in the array.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The command that's passed to the container. This parameter maps to ``Cmd`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``COMMAND`` parameter to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). For more information, see [https://docs.docker.com/engine/reference/builder/#cmd](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/builder/#cmd). If there are multiple arguments, each argument is a separated string in the array.",
        SerializedName = @"command",
        PossibleTypes = new [] { typeof(string) })]
        string[] Command { get; set; }
        /// <summary>
        /// The number of ``cpu`` units reserved for the container. This parameter maps to ``CpuShares`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cpu-shares``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This field is optional for tasks using the Fargate launch type, and the only requirement is that the total amount of CPU
        /// reserved for all containers within a task be lower than the task-level ``cpu`` value. You can determine the number of
        /// CPU units that are available per EC2 instance type by multiplying the vCPUs listed for that instance type on the [Amazon
        /// EC2 Instances](https://docs.aws.amazon.com/ec2/instance-types/) detail page by 1,024. Linux containers share unallocated
        /// CPU units with other containers on the container instance with the same ratio as their allocated amount. For example,
        /// if you run a single-container task on a single-core instance type with 512 CPU units specified for that container, and
        /// that's the only task running on the container instance, that container could use the full 1,024 CPU unit share at any
        /// given time. However, if you launched another copy of the same task on that container instance, each task is guaranteed
        /// a minimum of 512 CPU units when needed. Moreover, each container could float to higher CPU usage if the other container
        /// was not using it. If both tasks were 100% active all of the time, they would be limited to 512 CPU units. On Linux container
        /// instances, the Docker daemon on the container instance uses the CPU value to calculate the relative CPU share ratios for
        /// running containers. For more information, see [CPU share constraint](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#cpu-share-constraint)
        /// in the Docker documentation. The minimum valid CPU share value that the Linux kernel allows is 2. However, the CPU parameter
        /// isn't required, and you can use CPU values below 2 in your container definitions. For CPU values below 2 (including null),
        /// the behavior varies based on your Amazon ECS container agent version: + *Agent versions less than or equal to 1.1.0:*
        /// Null and zero CPU values are passed to Docker as 0, which Docker then converts to 1,024 CPU shares. CPU values of 1 are
        /// passed to Docker as 1, which the Linux kernel converts to two CPU shares. + *Agent versions greater than or equal to 1.2.0:*
        /// Null, zero, and CPU values of 1 are passed to Docker as 2. On Windows container instances, the CPU limit is enforced as
        /// an absolute limit, or a quota. Windows containers only have access to the specified amount of CPU that's described in
        /// the task definition. A null or zero CPU value is passed to Docker as ``0``, which Windows interprets as 1% of one CPU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of ``cpu`` units reserved for the container. This parameter maps to ``CpuShares`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cpu-shares`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). This field is optional for tasks using the Fargate launch type, and the only requirement is that the total amount of CPU reserved for all containers within a task be lower than the task-level ``cpu`` value.  You can determine the number of CPU units that are available per EC2 instance type by multiplying the vCPUs listed for that instance type on the [Amazon EC2 Instances](https://docs.aws.amazon.com/ec2/instance-types/) detail page by 1,024.  Linux containers share unallocated CPU units with other containers on the container instance with the same ratio as their allocated amount. For example, if you run a single-container task on a single-core instance type with 512 CPU units specified for that container, and that's the only task running on the container instance, that container could use the full 1,024 CPU unit share at any given time. However, if you launched another copy of the same task on that container instance, each task is guaranteed a minimum of 512 CPU units when needed. Moreover, each container could float to higher CPU usage if the other container was not using it. If both tasks were 100% active all of the time, they would be limited to 512 CPU units. On Linux container instances, the Docker daemon on the container instance uses the CPU value to calculate the relative CPU share ratios for running containers. For more information, see [CPU share constraint](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#cpu-share-constraint) in the Docker documentation. The minimum valid CPU share value that the Linux kernel allows is 2. However, the CPU parameter isn't required, and you can use CPU values below 2 in your container definitions. For CPU values below 2 (including null), the behavior varies based on your Amazon ECS container agent version:  +   *Agent versions less than or equal to 1.1.0:* Null and zero CPU values are passed to Docker as 0, which Docker then converts to 1,024 CPU shares. CPU values of 1 are passed to Docker as 1, which the Linux kernel converts to two CPU shares.  +   *Agent versions greater than or equal to 1.2.0:* Null, zero, and CPU values of 1 are passed to Docker as 2.   On Windows container instances, the CPU limit is enforced as an absolute limit, or a quota. Windows containers only have access to the specified amount of CPU that's described in the task definition. A null or zero CPU value is passed to Docker as ``0``, which Windows interprets as 1% of one CPU.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(int) })]
        int? Cpu { get; set; }
        /// <summary>
        /// A list of ARNs in SSM or Amazon S3 to a credential spec (``CredSpec``) file that configures the container for Active Directory
        /// authentication. We recommend that you use this parameter instead of the ``dockerSecurityOptions``. The maximum number
        /// of ARNs is 1. There are two formats for each ARN. + credentialspecdomainless:MyARN You use credentialspecdomainless:MyARN
        /// to provide a CredSpec with an additional section for a secret in . You provide the login credentials to the domain in
        /// the secret. Each task that runs on any container instance can join different domains. You can use this format without
        /// joining the container instance to a domain. + credentialspec:MyARN You use credentialspec:MyARN to provide a CredSpec
        /// for a single domain. You must join the container instance to the domain before you start any tasks that use this task
        /// definition. In both formats, replace ``MyARN`` with the ARN in SSM or Amazon S3. If you provide a ``credentialspecdomainless:MyARN``,
        /// the ``credspec`` must provide a ARN in ASMlong for a secret containing the username, password, and the domain to connect
        /// to. For better security, the instance isn't joined to the domain for domainless authentication. Other applications on
        /// the instance can't use the domainless credentials. You can use this parameter to run tasks on the same instance, even
        /// it the tasks need to join different domains. For more information, see [Using gMSAs for Windows Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html)
        /// and [Using gMSAs for Linux Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/linux-gmsa.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of ARNs in SSM or Amazon S3 to a credential spec (``CredSpec``) file that configures the container for Active Directory authentication. We recommend that you use this parameter instead of the ``dockerSecurityOptions``. The maximum number of ARNs is 1. There are two formats for each ARN.  + credentialspecdomainless:MyARN You use credentialspecdomainless:MyARN to provide a CredSpec with an additional section for a secret in . You provide the login credentials to the domain in the secret. Each task that runs on any container instance can join different domains. You can use this format without joining the container instance to a domain. + credentialspec:MyARN You use credentialspec:MyARN to provide a CredSpec for a single domain. You must join the container instance to the domain before you start any tasks that use this task definition.  In both formats, replace ``MyARN`` with the ARN in SSM or Amazon S3. If you provide a ``credentialspecdomainless:MyARN``, the ``credspec`` must provide a ARN in ASMlong for a secret containing the username, password, and the domain to connect to. For better security, the instance isn't joined to the domain for domainless authentication. Other applications on the instance can't use the domainless credentials. You can use this parameter to run tasks on the same instance, even it the tasks need to join different domains. For more information, see [Using gMSAs for Windows Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html) and [Using gMSAs for Linux Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/linux-gmsa.html).",
        SerializedName = @"credentialSpecs",
        PossibleTypes = new [] { typeof(string) })]
        string[] CredentialSpec { get; set; }
        /// <summary>
        /// The dependencies defined for container startup and shutdown. A container can contain multiple dependencies. When a dependency
        /// is defined for container startup, for container shutdown it is reversed. For tasks using the EC2 launch type, the container
        /// instances require at least version 1.26.0 of the container agent to turn on container dependencies. However, we recommend
        /// using the latest container agent version. For information about checking your agent version and updating to the latest
        /// version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance
        /// needs at least version 1.26.0-1 of the ``ecs-init`` package. If your container instances are launched from version ``20190301``
        /// or later, then they contain the required versions of the container agent and ``ecs-init``. For more information, see [Amazon
        /// ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. For tasks using the Fargate launch type, the task or service requires the
        /// following platforms: + Linux platform version ``1.3.0`` or later. + Windows platform version ``1.0.0`` or later. If the
        /// task definition is used in a blue/green deployment that uses [AWS::CodeDeploy::DeploymentGroup BlueGreenDeploymentConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-bluegreendeploymentconfiguration.html),
        /// the ``dependsOn`` parameter is not supported. For more information see [Issue #680](https://docs.aws.amazon.com/https://github.com/aws-cloudformation/cloudformation-coverage-roadmap/issues/680)
        /// on the on the GitHub website.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The dependencies defined for container startup and shutdown. A container can contain multiple dependencies. When a dependency is defined for container startup, for container shutdown it is reversed. For tasks using the EC2 launch type, the container instances require at least version 1.26.0 of the container agent to turn on container dependencies. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html) in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance needs at least version 1.26.0-1 of the ``ecs-init`` package. If your container instances are launched from version ``20190301`` or later, then they contain the required versions of the container agent and ``ecs-init``. For more information, see [Amazon ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html) in the *Amazon Elastic Container Service Developer Guide*. For tasks using the Fargate launch type, the task or service requires the following platforms:  +  Linux platform version ``1.3.0`` or later.  +  Windows platform version ``1.0.0`` or later.   If the task definition is used in a blue/green deployment that uses [AWS::CodeDeploy::DeploymentGroup BlueGreenDeploymentConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-bluegreendeploymentconfiguration.html), the ``dependsOn`` parameter is not supported. For more information see [Issue #680](https://docs.aws.amazon.com/https://github.com/aws-cloudformation/cloudformation-coverage-roadmap/issues/680) on the on the GitHub website.",
        SerializedName = @"dependsOn",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDependency) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDependency[] DependsOn { get; set; }
        /// <summary>
        /// When this parameter is true, networking is off within the container. This parameter maps to ``NetworkDisabled`` in the
        /// [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/). This parameter
        /// is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When this parameter is true, networking is off within the container. This parameter maps to ``NetworkDisabled`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/).  This parameter is not supported for Windows containers.",
        SerializedName = @"disableNetworking",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisableNetworking { get; set; }
        /// <summary>
        /// A list of DNS search domains that are presented to the container. This parameter maps to ``DnsSearch`` in the [Create
        /// a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section
        /// of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--dns-search``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of DNS search domains that are presented to the container. This parameter maps to ``DnsSearch`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--dns-search`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  This parameter is not supported for Windows containers.",
        SerializedName = @"dnsSearchDomains",
        PossibleTypes = new [] { typeof(string) })]
        string[] DnsSearchDomain { get; set; }
        /// <summary>
        /// A list of DNS servers that are presented to the container. This parameter maps to ``Dns`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--dns``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of DNS servers that are presented to the container. This parameter maps to ``Dns`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--dns`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  This parameter is not supported for Windows containers.",
        SerializedName = @"dnsServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] DnsServer { get; set; }
        /// <summary>
        /// A key/value map of labels to add to the container. This parameter maps to ``Labels`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--label``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker
        /// Remote API version on your container instance, log in to your container instance and run the following command: ``sudo
        /// docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A key/value map of labels to add to the container. This parameter maps to ``Labels`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--label`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: ``sudo docker version --format '{{.Server.APIVersion}}'``",
        SerializedName = @"dockerLabels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny DockerLabel { get; set; }
        /// <summary>
        /// A list of strings to provide custom configuration for multiple security systems. For more information about valid values,
        /// see [Docker Run Security Configuration](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This field isn't valid for containers in tasks using the Fargate launch type. For Linux tasks on EC2, this parameter can
        /// be used to reference custom labels for SELinux and AppArmor multi-level security systems. For any tasks on EC2, this parameter
        /// can be used to reference a credential spec file that configures a container for Active Directory authentication. For more
        /// information, see [Using gMSAs for Windows Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html)
        /// and [Using gMSAs for Linux Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/linux-gmsa.html) in
        /// the *Amazon Elastic Container Service Developer Guide*. This parameter maps to ``SecurityOpt`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--security-opt``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// The Amazon ECS container agent running on a container instance must register with the ``ECS_SELINUX_CAPABLE=true`` or
        /// ``ECS_APPARMOR_CAPABLE=true`` environment variables before containers placed on that instance can use these security options.
        /// For more information, see [Amazon ECS Container Agent Configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For more information about valid values, see [Docker Run Security
        /// Configuration](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). Valid
        /// values: 'no-new-privileges' | 'apparmor:PROFILE' | 'label:value' | 'credentialspec:CredentialSpecFilePath'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of strings to provide custom configuration for multiple security systems. For more information about valid values, see [Docker Run Security Configuration](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). This field isn't valid for containers in tasks using the Fargate launch type. For Linux tasks on EC2, this parameter can be used to reference custom labels for SELinux and AppArmor multi-level security systems. For any tasks on EC2, this parameter can be used to reference a credential spec file that configures a container for Active Directory authentication. For more information, see [Using gMSAs for Windows Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html) and [Using gMSAs for Linux Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/linux-gmsa.html) in the *Amazon Elastic Container Service Developer Guide*. This parameter maps to ``SecurityOpt`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--security-opt`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  The Amazon ECS container agent running on a container instance must register with the ``ECS_SELINUX_CAPABLE=true`` or ``ECS_APPARMOR_CAPABLE=true`` environment variables before containers placed on that instance can use these security options. For more information, see [Amazon ECS Container Agent Configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the *Amazon Elastic Container Service Developer Guide*.  For more information about valid values, see [Docker Run Security Configuration](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  Valid values: 'no-new-privileges' | 'apparmor:PROFILE' | 'label:value' | 'credentialspec:CredentialSpecFilePath'",
        SerializedName = @"dockerSecurityOptions",
        PossibleTypes = new [] { typeof(string) })]
        string[] DockerSecurityOption { get; set; }
        /// <summary>
        /// Early versions of the Amazon ECS container agent don't properly handle ``entryPoint`` parameters. If you have problems
        /// using ``entryPoint``, update your container agent or enter your commands and arguments as ``command`` array items instead.
        /// The entry point that's passed to the container. This parameter maps to ``Entrypoint`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--entrypoint``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// For more information, see [https://docs.docker.com/engine/reference/builder/#entrypoint](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/builder/#entrypoint).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Early versions of the Amazon ECS container agent don't properly handle ``entryPoint`` parameters. If you have problems using ``entryPoint``, update your container agent or enter your commands and arguments as ``command`` array items instead.  The entry point that's passed to the container. This parameter maps to ``Entrypoint`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--entrypoint`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). For more information, see [https://docs.docker.com/engine/reference/builder/#entrypoint](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/builder/#entrypoint).",
        SerializedName = @"entryPoint",
        PossibleTypes = new [] { typeof(string) })]
        string[] EntryPoint { get; set; }
        /// <summary>
        /// The environment variables to pass to a container. This parameter maps to ``Env`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--env``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// We don't recommend that you use plaintext environment variables for sensitive information, such as credential data.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The environment variables to pass to a container. This parameter maps to ``Env`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--env`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  We don't recommend that you use plaintext environment variables for sensitive information, such as credential data.",
        SerializedName = @"environment",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair[] Environment { get; set; }
        /// <summary>
        /// A list of files containing the environment variables to pass to a container. This parameter maps to the ``--env-file``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// You can specify up to ten environment files. The file must have a ``.env`` file extension. Each line in an environment
        /// file contains an environment variable in ``VARIABLE=VALUE`` format. Lines beginning with ``#`` are treated as comments
        /// and are ignored. For more information about the environment variable file syntax, see [Declare default environment variables
        /// in file](https://docs.aws.amazon.com/https://docs.docker.com/compose/env-file/). If there are environment variables specified
        /// using the ``environment`` parameter in a container definition, they take precedence over the variables contained within
        /// an environment file. If multiple environment files are specified that contain the same variable, they're processed from
        /// the top down. We recommend that you use unique variable names. For more information, see [Specifying Environment Variables](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of files containing the environment variables to pass to a container. This parameter maps to the ``--env-file`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). You can specify up to ten environment files. The file must have a ``.env`` file extension. Each line in an environment file contains an environment variable in ``VARIABLE=VALUE`` format. Lines beginning with ``#`` are treated as comments and are ignored. For more information about the environment variable file syntax, see [Declare default environment variables in file](https://docs.aws.amazon.com/https://docs.docker.com/compose/env-file/). If there are environment variables specified using the ``environment`` parameter in a container definition, they take precedence over the variables contained within an environment file. If multiple environment files are specified that contain the same variable, they're processed from the top down. We recommend that you use unique variable names. For more information, see [Specifying Environment Variables](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html) in the *Amazon Elastic Container Service Developer Guide*.",
        SerializedName = @"environmentFiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentFile) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentFile[] EnvironmentFile { get; set; }
        /// <summary>
        /// If the ``essential`` parameter of a container is marked as ``true``, and that container fails or stops for any reason,
        /// all other containers that are part of the task are stopped. If the ``essential`` parameter of a container is marked as
        /// ``false``, its failure doesn't affect the rest of the containers in a task. If this parameter is omitted, a container
        /// is assumed to be essential. All tasks must have at least one essential container. If you have an application that's composed
        /// of multiple containers, group containers that are used for a common purpose into components, and separate the different
        /// components into multiple task definitions. For more information, see [Application Architecture](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/application_architecture.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the ``essential`` parameter of a container is marked as ``true``, and that container fails or stops for any reason, all other containers that are part of the task are stopped. If the ``essential`` parameter of a container is marked as ``false``, its failure doesn't affect the rest of the containers in a task. If this parameter is omitted, a container is assumed to be essential. All tasks must have at least one essential container. If you have an application that's composed of multiple containers, group containers that are used for a common purpose into components, and separate the different components into multiple task definitions. For more information, see [Application Architecture](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/application_architecture.html) in the *Amazon Elastic Container Service Developer Guide*.",
        SerializedName = @"essential",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Essential { get; set; }
        /// <summary>
        /// A list of hostnames and IP address mappings to append to the ``/etc/hosts`` file on the container. This parameter maps
        /// to ``ExtraHosts`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--add-host``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter isn't supported for Windows containers or tasks that use the ``awsvpc`` network mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of hostnames and IP address mappings to append to the ``/etc/hosts`` file on the container. This parameter maps to ``ExtraHosts`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--add-host`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  This parameter isn't supported for Windows containers or tasks that use the ``awsvpc`` network mode.",
        SerializedName = @"extraHosts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostEntry) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostEntry[] ExtraHost { get; set; }
        /// <summary>
        /// The options to use when configuring the log router. This field is optional and can be used to add additional metadata,
        /// such as the task, task definition, cluster, and container instance details to the log event. If specified, valid option
        /// keys are: + ``enable-ecs-log-metadata``, which can be ``true`` or ``false`` + ``config-file-type``, which can be ``s3``
        /// or ``file`` + ``config-file-value``, which is either an S3 ARN or a file path
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The options to use when configuring the log router. This field is optional and can be used to add additional metadata, such as the task, task definition, cluster, and container instance details to the log event.  If specified, valid option keys are:  +   ``enable-ecs-log-metadata``, which can be ``true`` or ``false``   +   ``config-file-type``, which can be ``s3`` or ``file``   +   ``config-file-value``, which is either an S3 ARN or a file path",
        SerializedName = @"options",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny FirelenConfigurationOption { get; set; }
        /// <summary>The log router to use. The valid values are ``fluentd`` or ``fluentbit``.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The log router to use. The valid values are ``fluentd`` or ``fluentbit``.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string FirelenConfigurationType { get; set; }
        /// <summary>
        /// A string array representing the command that the container runs to determine if it is healthy. The string array must start
        /// with ``CMD`` to run the command arguments directly, or ``CMD-SHELL`` to run the command with the container's default shell.
        /// When you use the AWS Management Console JSON panel, the CLIlong, or the APIs, enclose the list of commands in double quotes
        /// and brackets. ``[ 'CMD-SHELL', 'curl -f http://localhost/ || exit 1' ]`` You don't include the double quotes and brackets
        /// when you use the AWS Management Console. ``CMD-SHELL, curl -f http://localhost/ || exit 1`` An exit code of 0 indicates
        /// success, and non-zero exit code indicates failure. For more information, see ``HealthCheck`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A string array representing the command that the container runs to determine if it is healthy. The string array must start with ``CMD`` to run the command arguments directly, or ``CMD-SHELL`` to run the command with the container's default shell.   When you use the AWS Management Console JSON panel, the CLIlong, or the APIs, enclose the list of commands in double quotes and brackets.  ``[ 'CMD-SHELL', 'curl -f http://localhost/ || exit 1' ]``  You don't include the double quotes and brackets when you use the AWS Management Console.  ``CMD-SHELL, curl -f http://localhost/ || exit 1``  An exit code of 0 indicates success, and non-zero exit code indicates failure. For more information, see ``HealthCheck`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/).",
        SerializedName = @"command",
        PossibleTypes = new [] { typeof(string) })]
        string[] HealthCheckCommand { get; set; }
        /// <summary>
        /// The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default
        /// value is 30 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default value is 30 seconds.",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? HealthCheckInterval { get; set; }
        /// <summary>
        /// The number of times to retry a failed health check before the container is considered unhealthy. You may specify between
        /// 1 and 10 retries. The default value is 3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of times to retry a failed health check before the container is considered unhealthy. You may specify between 1 and 10 retries. The default value is 3.",
        SerializedName = @"retries",
        PossibleTypes = new [] { typeof(int) })]
        int? HealthCheckRetry { get; set; }
        /// <summary>
        /// The optional grace period to provide containers time to bootstrap before failed health checks count towards the maximum
        /// number of retries. You can specify between 0 and 300 seconds. By default, the ``startPeriod`` is off. If a health check
        /// succeeds within the ``startPeriod``, then the container is considered healthy and any subsequent failures count toward
        /// the maximum number of retries.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The optional grace period to provide containers time to bootstrap before failed health checks count towards the maximum number of retries. You can specify between 0 and 300 seconds. By default, the ``startPeriod`` is off.  If a health check succeeds within the ``startPeriod``, then the container is considered healthy and any subsequent failures count toward the maximum number of retries.",
        SerializedName = @"startPeriod",
        PossibleTypes = new [] { typeof(int) })]
        int? HealthCheckStartPeriod { get; set; }
        /// <summary>
        /// The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between
        /// 2 and 60 seconds. The default value is 5.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between 2 and 60 seconds. The default value is 5.",
        SerializedName = @"timeout",
        PossibleTypes = new [] { typeof(int) })]
        int? HealthCheckTimeout { get; set; }
        /// <summary>
        /// The hostname to use for your container. This parameter maps to ``Hostname`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--hostname``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// The ``hostname`` parameter is not supported if you're using the ``awsvpc`` network mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hostname to use for your container. This parameter maps to ``Hostname`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--hostname`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  The ``hostname`` parameter is not supported if you're using the ``awsvpc`` network mode.",
        SerializedName = @"hostname",
        PossibleTypes = new [] { typeof(string) })]
        string Hostname { get; set; }
        /// <summary>
        /// The image used to start a container. This string is passed directly to the Docker daemon. By default, images in the Docker
        /// Hub registry are available. Other repositories are specified with either ``repository-url/image:tag`` or ``repository-url/image@digest``.
        /// Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes, and number
        /// signs are allowed. This parameter maps to ``Image`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``IMAGE``
        /// parameter of [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// + When a new task starts, the Amazon ECS container agent pulls the latest version of the specified image and tag for the
        /// container to use. However, subsequent updates to a repository image aren't propagated to already running tasks. + Images
        /// in Amazon ECR repositories can be specified by either using the full ``registry/repository:tag`` or ``registry/repository@digest``.
        /// For example, ``012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>:latest`` or ``012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE``.
        /// + Images in official repositories on Docker Hub use a single name (for example, ``ubuntu`` or ``mongo``). + Images in
        /// other repositories on Docker Hub are qualified with an organization name (for example, ``amazon/amazon-ecs-agent``). +
        /// Images in other online repositories are qualified further by a domain name (for example, ``quay.io/assemblyline/ubuntu``).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The image used to start a container. This string is passed directly to the Docker daemon. By default, images in the Docker Hub registry are available. Other repositories are specified with either ``repository-url/image:tag`` or ``repository-url/image@digest``. Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes, and number signs are allowed. This parameter maps to ``Image`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``IMAGE`` parameter of [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  +  When a new task starts, the Amazon ECS container agent pulls the latest version of the specified image and tag for the container to use. However, subsequent updates to a repository image aren't propagated to already running tasks.  +  Images in Amazon ECR repositories can be specified by either using the full ``registry/repository:tag`` or ``registry/repository@digest``. For example, ``012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>:latest`` or ``012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE``.   +  Images in official repositories on Docker Hub use a single name (for example, ``ubuntu`` or ``mongo``).  +  Images in other repositories on Docker Hub are qualified with an organization name (for example, ``amazon/amazon-ecs-agent``).  +  Images in other online repositories are qualified further by a domain name (for example, ``quay.io/assemblyline/ubuntu``).",
        SerializedName = @"image",
        PossibleTypes = new [] { typeof(string) })]
        string Image { get; set; }
        /// <summary>
        /// When this parameter is ``true``, you can deploy containerized applications that require ``stdin`` or a ``tty`` to be allocated.
        /// This parameter maps to ``OpenStdin`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--interactive``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When this parameter is ``true``, you can deploy containerized applications that require ``stdin`` or a ``tty`` to be allocated. This parameter maps to ``OpenStdin`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--interactive`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).",
        SerializedName = @"interactive",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Interactive { get; set; }
        /// <summary>
        /// The ``links`` parameter allows containers to communicate with each other without the need for port mappings. This parameter
        /// is only supported if the network mode of a task definition is ``bridge``. The ``name:internalName`` construct is analogous
        /// to ``name:alias`` in Docker links. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are
        /// allowed. For more information about linking Docker containers, go to [Legacy container links](https://docs.aws.amazon.com/https://docs.docker.com/network/links/)
        /// in the Docker documentation. This parameter maps to ``Links`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--link``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers. Containers that are collocated on a single container instance
        /// may be able to communicate with each other without requiring links or host port mappings. Network isolation is achieved
        /// on the container instance using security groups and VPC settings.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ``links`` parameter allows containers to communicate with each other without the need for port mappings. This parameter is only supported if the network mode of a task definition is ``bridge``. The ``name:internalName`` construct is analogous to ``name:alias`` in Docker links. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. For more information about linking Docker containers, go to [Legacy container links](https://docs.aws.amazon.com/https://docs.docker.com/network/links/) in the Docker documentation. This parameter maps to ``Links`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--link`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  This parameter is not supported for Windows containers.   Containers that are collocated on a single container instance may be able to communicate with each other without requiring links or host port mappings. Network isolation is achieved on the container instance using security groups and VPC settings.",
        SerializedName = @"links",
        PossibleTypes = new [] { typeof(string) })]
        string[] Link { get; set; }
        /// <summary>
        /// Any host devices to expose to the container. This parameter maps to ``Devices`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--device``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If you're using tasks that use the Fargate launch type, the ``devices`` parameter isn't supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Any host devices to expose to the container. This parameter maps to ``Devices`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--device`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  If you're using tasks that use the Fargate launch type, the ``devices`` parameter isn't supported.",
        SerializedName = @"devices",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDevice) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDevice[] LinuxParameterDevice { get; set; }
        /// <summary>
        /// Run an ``init`` process inside the container that forwards signals and reaps processes. This parameter maps to the ``--init``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter requires version 1.25 of the Docker Remote API or greater on your container instance. To check the Docker
        /// Remote API version on your container instance, log in to your container instance and run the following command: ``sudo
        /// docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Run an ``init`` process inside the container that forwards signals and reaps processes. This parameter maps to the ``--init`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). This parameter requires version 1.25 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: ``sudo docker version --format '{{.Server.APIVersion}}'``",
        SerializedName = @"initProcessEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxParameterInitProcessEnabled { get; set; }
        /// <summary>
        /// The total amount of swap memory (in MiB) a container can use. This parameter will be translated to the ``--memory-swap``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration)
        /// where the value would be the sum of the container memory plus the ``maxSwap`` value. If a ``maxSwap`` value of ``0`` is
        /// specified, the container will not use swap. Accepted values are ``0`` or any positive integer. If the ``maxSwap`` parameter
        /// is omitted, the container will use the swap configuration for the container instance it is running on. A ``maxSwap`` value
        /// must be set for the ``swappiness`` parameter to be used. If you're using tasks that use the Fargate launch type, the ``maxSwap``
        /// parameter isn't supported. If you're using tasks on Amazon Linux 2023 the ``swappiness`` parameter isn't supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total amount of swap memory (in MiB) a container can use. This parameter will be translated to the ``--memory-swap`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration) where the value would be the sum of the container memory plus the ``maxSwap`` value. If a ``maxSwap`` value of ``0`` is specified, the container will not use swap. Accepted values are ``0`` or any positive integer. If the ``maxSwap`` parameter is omitted, the container will use the swap configuration for the container instance it is running on. A ``maxSwap`` value must be set for the ``swappiness`` parameter to be used.  If you're using tasks that use the Fargate launch type, the ``maxSwap`` parameter isn't supported. If you're using tasks on Amazon Linux 2023 the ``swappiness`` parameter isn't supported.",
        SerializedName = @"maxSwap",
        PossibleTypes = new [] { typeof(int) })]
        int? LinuxParameterMaxSwap { get; set; }
        /// <summary>
        /// The value for the size (in MiB) of the ``/dev/shm`` volume. This parameter maps to the ``--shm-size`` option to [docker
        /// run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). If you are using
        /// tasks that use the Fargate launch type, the ``sharedMemorySize`` parameter is not supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value for the size (in MiB) of the ``/dev/shm`` volume. This parameter maps to the ``--shm-size`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  If you are using tasks that use the Fargate launch type, the ``sharedMemorySize`` parameter is not supported.",
        SerializedName = @"sharedMemorySize",
        PossibleTypes = new [] { typeof(int) })]
        int? LinuxParameterSharedMemorySize { get; set; }
        /// <summary>
        /// This allows you to tune a container's memory swappiness behavior. A ``swappiness`` value of ``0`` will cause swapping
        /// to not happen unless absolutely necessary. A ``swappiness`` value of ``100`` will cause pages to be swapped very aggressively.
        /// Accepted values are whole numbers between ``0`` and ``100``. If the ``swappiness`` parameter is not specified, a default
        /// value of ``60`` is used. If a value is not specified for ``maxSwap`` then this parameter is ignored. This parameter maps
        /// to the ``--memory-swappiness`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If you're using tasks that use the Fargate launch type, the ``swappiness`` parameter isn't supported. If you're using
        /// tasks on Amazon Linux 2023 the ``swappiness`` parameter isn't supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This allows you to tune a container's memory swappiness behavior. A ``swappiness`` value of ``0`` will cause swapping to not happen unless absolutely necessary. A ``swappiness`` value of ``100`` will cause pages to be swapped very aggressively. Accepted values are whole numbers between ``0`` and ``100``. If the ``swappiness`` parameter is not specified, a default value of ``60`` is used. If a value is not specified for ``maxSwap`` then this parameter is ignored. This parameter maps to the ``--memory-swappiness`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  If you're using tasks that use the Fargate launch type, the ``swappiness`` parameter isn't supported. If you're using tasks on Amazon Linux 2023 the ``swappiness`` parameter isn't supported.",
        SerializedName = @"swappiness",
        PossibleTypes = new [] { typeof(int) })]
        int? LinuxParameterSwappiness { get; set; }
        /// <summary>
        /// The container path, mount options, and size (in MiB) of the tmpfs mount. This parameter maps to the ``--tmpfs`` option
        /// to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). If
        /// you're using tasks that use the Fargate launch type, the ``tmpfs`` parameter isn't supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The container path, mount options, and size (in MiB) of the tmpfs mount. This parameter maps to the ``--tmpfs`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  If you're using tasks that use the Fargate launch type, the ``tmpfs`` parameter isn't supported.",
        SerializedName = @"tmpfs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITmpfs) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITmpfs[] LinuxParameterTmpf { get; set; }
        /// <summary>
        /// The log driver to use for the container. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``,
        /// and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``,
        /// ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. For more information
        /// about using the ``awslogs`` log driver, see [Using the awslogs log driver](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For more information about using the ``awsfirelens`` log driver,
        /// see [Custom log routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. If you have a custom driver that isn't listed, you can fork the Amazon ECS
        /// container agent project that's [available on GitHub](https://docs.aws.amazon.com/https://github.com/aws/amazon-ecs-agent)
        /// and customize it to work with that driver. We encourage you to submit pull requests for changes that you would like to
        /// have included. However, we don't currently provide support for running modified copies of this software.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The log driver to use for the container. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. For more information about using the ``awslogs`` log driver, see [Using the awslogs log driver](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html) in the *Amazon Elastic Container Service Developer Guide*. For more information about using the ``awsfirelens`` log driver, see [Custom log routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html) in the *Amazon Elastic Container Service Developer Guide*.  If you have a custom driver that isn't listed, you can fork the Amazon ECS container agent project that's [available on GitHub](https://docs.aws.amazon.com/https://github.com/aws/amazon-ecs-agent) and customize it to work with that driver. We encourage you to submit pull requests for changes that you would like to have included. However, we don't currently provide support for running modified copies of this software.",
        SerializedName = @"logDriver",
        PossibleTypes = new [] { typeof(string) })]
        string LogConfigurationLogDriver { get; set; }
        /// <summary>
        /// The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or
        /// greater on your container instance. To check the Docker Remote API version on your container instance, log in to your
        /// container instance and run the following command: ``sudo docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: ``sudo docker version --format '{{.Server.APIVersion}}'``",
        SerializedName = @"options",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny LogConfigurationOption { get; set; }
        /// <summary>
        /// The secrets to pass to the log configuration. For more information, see [Specifying sensitive data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The secrets to pass to the log configuration. For more information, see [Specifying sensitive data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html) in the *Amazon Elastic Container Service Developer Guide*.",
        SerializedName = @"secretOptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[] LogConfigurationSecretOption { get; set; }
        /// <summary>
        /// The amount (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here,
        /// the container is killed. The total amount of memory reserved for all containers within a task must be lower than the task
        /// ``memory`` value, if one is specified. This parameter maps to ``Memory`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--memory``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If using the Fargate launch type, this parameter is optional. If using the EC2 launch type, you must specify either a
        /// task-level memory value or a container-level memory value. If you specify both a container-level ``memory`` and ``memoryReservation``
        /// value, ``memory`` must be greater than ``memoryReservation``. If you specify ``memoryReservation``, then that value is
        /// subtracted from the available memory resources for the container instance where the container is placed. Otherwise, the
        /// value of ``memory`` is used. The Docker 20.10.0 or later daemon reserves a minimum of 6 MiB of memory for a container,
        /// so you should not specify fewer than 6 MiB of memory for your containers. The Docker 19.03.13-ce or earlier daemon reserves
        /// a minimum of 4 MiB of memory for a container, so you should not specify fewer than 4 MiB of memory for your containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here, the container is killed. The total amount of memory reserved for all containers within a task must be lower than the task ``memory`` value, if one is specified. This parameter maps to ``Memory`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--memory`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). If using the Fargate launch type, this parameter is optional. If using the EC2 launch type, you must specify either a task-level memory value or a container-level memory value. If you specify both a container-level ``memory`` and ``memoryReservation`` value, ``memory`` must be greater than ``memoryReservation``. If you specify ``memoryReservation``, then that value is subtracted from the available memory resources for the container instance where the container is placed. Otherwise, the value of ``memory`` is used. The Docker 20.10.0 or later daemon reserves a minimum of 6 MiB of memory for a container, so you should not specify fewer than 6 MiB of memory for your containers. The Docker 19.03.13-ce or earlier daemon reserves a minimum of 4 MiB of memory for a container, so you should not specify fewer than 4 MiB of memory for your containers.",
        SerializedName = @"memory",
        PossibleTypes = new [] { typeof(int) })]
        int? Memory { get; set; }
        /// <summary>
        /// The soft limit (in MiB) of memory to reserve for the container. When system memory is under heavy contention, Docker attempts
        /// to keep the container memory to this soft limit. However, your container can consume more memory when it needs to, up
        /// to either the hard limit specified with the ``memory`` parameter (if applicable), or all of the available memory on the
        /// container instance, whichever comes first. This parameter maps to ``MemoryReservation`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--memory-reservation``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If a task-level memory value is not specified, you must specify a non-zero integer for one or both of ``memory`` or ``memoryReservation``
        /// in a container definition. If you specify both, ``memory`` must be greater than ``memoryReservation``. If you specify
        /// ``memoryReservation``, then that value is subtracted from the available memory resources for the container instance where
        /// the container is placed. Otherwise, the value of ``memory`` is used. For example, if your container normally uses 128
        /// MiB of memory, but occasionally bursts to 256 MiB of memory for short periods of time, you can set a ``memoryReservation``
        /// of 128 MiB, and a ``memory`` hard limit of 300 MiB. This configuration would allow the container to only reserve 128 MiB
        /// of memory from the remaining resources on the container instance, but also allow the container to consume more memory
        /// resources when needed. The Docker 20.10.0 or later daemon reserves a minimum of 6 MiB of memory for a container. So, don't
        /// specify less than 6 MiB of memory for your containers. The Docker 19.03.13-ce or earlier daemon reserves a minimum of
        /// 4 MiB of memory for a container. So, don't specify less than 4 MiB of memory for your containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The soft limit (in MiB) of memory to reserve for the container. When system memory is under heavy contention, Docker attempts to keep the container memory to this soft limit. However, your container can consume more memory when it needs to, up to either the hard limit specified with the ``memory`` parameter (if applicable), or all of the available memory on the container instance, whichever comes first. This parameter maps to ``MemoryReservation`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--memory-reservation`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). If a task-level memory value is not specified, you must specify a non-zero integer for one or both of ``memory`` or ``memoryReservation`` in a container definition. If you specify both, ``memory`` must be greater than ``memoryReservation``. If you specify ``memoryReservation``, then that value is subtracted from the available memory resources for the container instance where the container is placed. Otherwise, the value of ``memory`` is used. For example, if your container normally uses 128 MiB of memory, but occasionally bursts to 256 MiB of memory for short periods of time, you can set a ``memoryReservation`` of 128 MiB, and a ``memory`` hard limit of 300 MiB. This configuration would allow the container to only reserve 128 MiB of memory from the remaining resources on the container instance, but also allow the container to consume more memory resources when needed. The Docker 20.10.0 or later daemon reserves a minimum of 6 MiB of memory for a container. So, don't specify less than 6 MiB of memory for your containers.  The Docker 19.03.13-ce or earlier daemon reserves a minimum of 4 MiB of memory for a container. So, don't specify less than 4 MiB of memory for your containers.",
        SerializedName = @"memoryReservation",
        PossibleTypes = new [] { typeof(int) })]
        int? MemoryReservation { get; set; }
        /// <summary>
        /// The mount points for data volumes in your container. This parameter maps to ``Volumes`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--volume``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// Windows containers can mount whole directories on the same drive as ``$env:ProgramData``. Windows containers can't mount
        /// directories on a different drive, and mount point can't be across drives.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mount points for data volumes in your container. This parameter maps to ``Volumes`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--volume`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). Windows containers can mount whole directories on the same drive as ``$env:ProgramData``. Windows containers can't mount directories on a different drive, and mount point can't be across drives.",
        SerializedName = @"mountPoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint[] MountPoint { get; set; }
        /// <summary>
        /// The name of a container. If you're linking multiple containers together in a task definition, the ``name`` of one container
        /// can be entered in the ``links`` of another container to connect the containers. Up to 255 letters (uppercase and lowercase),
        /// numbers, underscores, and hyphens are allowed. This parameter maps to ``name`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--name``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of a container. If you're linking multiple containers together in a task definition, the ``name`` of one container can be entered in the ``links`` of another container to connect the containers. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. This parameter maps to ``name`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--name`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// The list of port mappings for the container. Port mappings allow containers to access ports on the host container instance
        /// to send or receive traffic. For task definitions that use the ``awsvpc`` network mode, you should only specify the ``containerPort``.
        /// The ``hostPort`` can be left blank or it must be the same value as the ``containerPort``. Port mappings on Windows use
        /// the ``NetNAT`` gateway address rather than ``localhost``. There is no loopback for port mappings on Windows, so you cannot
        /// access a container's mapped port from the host itself. This parameter maps to ``PortBindings`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--publish``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). If the network mode
        /// of a task definition is set to ``none``, then you can't specify port mappings. If the network mode of a task definition
        /// is set to ``host``, then host ports must either be undefined or they must match the container port in the port mapping.
        /// After a task reaches the ``RUNNING`` status, manual and automatic host and container port assignments are visible in the
        /// *Network Bindings* section of a container description for a selected task in the Amazon ECS console. The assignments are
        /// also visible in the ``networkBindings`` section [DescribeTasks](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html)
        /// responses.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of port mappings for the container. Port mappings allow containers to access ports on the host container instance to send or receive traffic. For task definitions that use the ``awsvpc`` network mode, you should only specify the ``containerPort``. The ``hostPort`` can be left blank or it must be the same value as the ``containerPort``. Port mappings on Windows use the ``NetNAT`` gateway address rather than ``localhost``. There is no loopback for port mappings on Windows, so you cannot access a container's mapped port from the host itself.  This parameter maps to ``PortBindings`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--publish`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). If the network mode of a task definition is set to ``none``, then you can't specify port mappings. If the network mode of a task definition is set to ``host``, then host ports must either be undefined or they must match the container port in the port mapping.  After a task reaches the ``RUNNING`` status, manual and automatic host and container port assignments are visible in the *Network Bindings* section of a container description for a selected task in the Amazon ECS console. The assignments are also visible in the ``networkBindings`` section [DescribeTasks](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html) responses.",
        SerializedName = @"portMappings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPortMapping) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPortMapping[] PortMapping { get; set; }
        /// <summary>
        /// When this parameter is true, the container is given elevated privileges on the host container instance (similar to the
        /// ``root`` user). This parameter maps to ``Privileged`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--privileged``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers or tasks run on FARGATElong.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When this parameter is true, the container is given elevated privileges on the host container instance (similar to the ``root`` user). This parameter maps to ``Privileged`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--privileged`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  This parameter is not supported for Windows containers or tasks run on FARGATElong.",
        SerializedName = @"privileged",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Privileged { get; set; }
        /// <summary>
        /// When this parameter is ``true``, a TTY is allocated. This parameter maps to ``Tty`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--tty``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When this parameter is ``true``, a TTY is allocated. This parameter maps to ``Tty`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--tty`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).",
        SerializedName = @"pseudoTerminal",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PseudoTerminal { get; set; }
        /// <summary>
        /// When this parameter is true, the container is given read-only access to its root file system. This parameter maps to ``ReadonlyRootfs``
        /// in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--read-only``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When this parameter is true, the container is given read-only access to its root file system. This parameter maps to ``ReadonlyRootfs`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--read-only`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  This parameter is not supported for Windows containers.",
        SerializedName = @"readonlyRootFilesystem",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ReadonlyRootFilesystem { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the secret containing the private repository credentials. When you use the Amazon ECS
        /// API, CLI, or AWS SDK, if the secret exists in the same Region as the task that you're launching then you can use either
        /// the full ARN or the name of the secret. When you use the AWS Management Console, you must specify the full ARN of the
        /// secret.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the secret containing the private repository credentials.  When you use the Amazon ECS API, CLI, or AWS SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the AWS Management Console, you must specify the full ARN of the secret.",
        SerializedName = @"credentialsParameter",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryCredentialsParameter { get; set; }
        /// <summary>
        /// The type and amount of a resource to assign to a container. The only supported resource is a GPU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type and amount of a resource to assign to a container. The only supported resource is a GPU.",
        SerializedName = @"resourceRequirements",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceRequirement) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceRequirement[] ResourceRequirement { get; set; }
        /// <summary>
        /// The secrets to pass to the container. For more information, see [Specifying Sensitive Data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The secrets to pass to the container. For more information, see [Specifying Sensitive Data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html) in the *Amazon Elastic Container Service Developer Guide*.",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[] Secret { get; set; }
        /// <summary>
        /// Time duration (in seconds) to wait before giving up on resolving dependencies for a container. For example, you specify
        /// two containers in a task definition with containerA having a dependency on containerB reaching a ``COMPLETE``, ``SUCCESS``,
        /// or ``HEALTHY`` status. If a ``startTimeout`` value is specified for containerB and it doesn't reach the desired status
        /// within that time then containerA gives up and not start. This results in the task transitioning to a ``STOPPED`` state.
        /// When the ``ECS_CONTAINER_START_TIMEOUT`` container agent configuration variable is used, it's enforced independently from
        /// this start timeout value. For tasks using the Fargate launch type, the task or service requires the following platforms:
        /// + Linux platform version ``1.3.0`` or later. + Windows platform version ``1.0.0`` or later. For tasks using the EC2 launch
        /// type, your container instances require at least version ``1.26.0`` of the container agent to use a container start timeout
        /// value. However, we recommend using the latest container agent version. For information about checking your agent version
        /// and updating to the latest version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance
        /// needs at least version ``1.26.0-1`` of the ``ecs-init`` package. If your container instances are launched from version
        /// ``20190301`` or later, then they contain the required versions of the container agent and ``ecs-init``. For more information,
        /// see [Amazon ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. The valid values are 2-120 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time duration (in seconds) to wait before giving up on resolving dependencies for a container. For example, you specify two containers in a task definition with containerA having a dependency on containerB reaching a ``COMPLETE``, ``SUCCESS``, or ``HEALTHY`` status. If a ``startTimeout`` value is specified for containerB and it doesn't reach the desired status within that time then containerA gives up and not start. This results in the task transitioning to a ``STOPPED`` state.  When the ``ECS_CONTAINER_START_TIMEOUT`` container agent configuration variable is used, it's enforced independently from this start timeout value.  For tasks using the Fargate launch type, the task or service requires the following platforms:  +  Linux platform version ``1.3.0`` or later.  +  Windows platform version ``1.0.0`` or later.   For tasks using the EC2 launch type, your container instances require at least version ``1.26.0`` of the container agent to use a container start timeout value. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html) in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance needs at least version ``1.26.0-1`` of the ``ecs-init`` package. If your container instances are launched from version ``20190301`` or later, then they contain the required versions of the container agent and ``ecs-init``. For more information, see [Amazon ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html) in the *Amazon Elastic Container Service Developer Guide*. The valid values are 2-120 seconds.",
        SerializedName = @"startTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? StartTimeout { get; set; }
        /// <summary>
        /// Time duration (in seconds) to wait before the container is forcefully killed if it doesn't exit normally on its own. For
        /// tasks using the Fargate launch type, the task or service requires the following platforms: + Linux platform version ``1.3.0``
        /// or later. + Windows platform version ``1.0.0`` or later. The max stop timeout value is 120 seconds and if the parameter
        /// is not specified, the default value of 30 seconds is used. For tasks that use the EC2 launch type, if the ``stopTimeout``
        /// parameter isn't specified, the value set for the Amazon ECS container agent configuration variable ``ECS_CONTAINER_STOP_TIMEOUT``
        /// is used. If neither the ``stopTimeout`` parameter or the ``ECS_CONTAINER_STOP_TIMEOUT`` agent configuration variable are
        /// set, then the default values of 30 seconds for Linux containers and 30 seconds on Windows containers are used. Your container
        /// instances require at least version 1.26.0 of the container agent to use a container stop timeout value. However, we recommend
        /// using the latest container agent version. For information about checking your agent version and updating to the latest
        /// version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance
        /// needs at least version 1.26.0-1 of the ``ecs-init`` package. If your container instances are launched from version ``20190301``
        /// or later, then they contain the required versions of the container agent and ``ecs-init``. For more information, see [Amazon
        /// ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. The valid values are 2-120 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time duration (in seconds) to wait before the container is forcefully killed if it doesn't exit normally on its own. For tasks using the Fargate launch type, the task or service requires the following platforms:  +  Linux platform version ``1.3.0`` or later.  +  Windows platform version ``1.0.0`` or later.   The max stop timeout value is 120 seconds and if the parameter is not specified, the default value of 30 seconds is used. For tasks that use the EC2 launch type, if the ``stopTimeout`` parameter isn't specified, the value set for the Amazon ECS container agent configuration variable ``ECS_CONTAINER_STOP_TIMEOUT`` is used. If neither the ``stopTimeout`` parameter or the ``ECS_CONTAINER_STOP_TIMEOUT`` agent configuration variable are set, then the default values of 30 seconds for Linux containers and 30 seconds on Windows containers are used. Your container instances require at least version 1.26.0 of the container agent to use a container stop timeout value. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html) in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance needs at least version 1.26.0-1 of the ``ecs-init`` package. If your container instances are launched from version ``20190301`` or later, then they contain the required versions of the container agent and ``ecs-init``. For more information, see [Amazon ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html) in the *Amazon Elastic Container Service Developer Guide*. The valid values are 2-120 seconds.",
        SerializedName = @"stopTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? StopTimeout { get; set; }
        /// <summary>
        /// A list of namespaced kernel parameters to set in the container. This parameter maps to ``Sysctls`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--sysctl``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// For example, you can configure ``net.ipv4.tcp_keepalive_time`` setting to maintain longer lived connections.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of namespaced kernel parameters to set in the container. This parameter maps to ``Sysctls`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--sysctl`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). For example, you can configure ``net.ipv4.tcp_keepalive_time`` setting to maintain longer lived connections.",
        SerializedName = @"systemControls",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISystemControl) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISystemControl[] SystemControl { get; set; }
        /// <summary>
        /// A list of ``ulimits`` to set in the container. This parameter maps to ``Ulimits`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--ulimit``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). Valid naming values
        /// are displayed in the [Ulimit](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Ulimit.html) data type. This
        /// parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote
        /// API version on your container instance, log in to your container instance and run the following command: ``sudo docker
        /// version --format '{{.Server.APIVersion}}'`` This parameter is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of ``ulimits`` to set in the container. This parameter maps to ``Ulimits`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--ulimit`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). Valid naming values are displayed in the [Ulimit](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Ulimit.html) data type. This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: ``sudo docker version --format '{{.Server.APIVersion}}'``   This parameter is not supported for Windows containers.",
        SerializedName = @"ulimits",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUlimit) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUlimit[] Ulimit { get; set; }
        /// <summary>
        /// The user to use inside the container. This parameter maps to ``User`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--user``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// When running tasks using the ``host`` network mode, don't run containers using the root user (UID 0). We recommend using
        /// a non-root user for better security. You can specify the ``user`` using the following formats. If specifying a UID or
        /// GID, you must specify it as a positive integer. + ``user`` + ``user:group`` + ``uid`` + ``uid:gid`` + ``user:gid`` + ``uid:group``
        /// This parameter is not supported for Windows containers.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user to use inside the container. This parameter maps to ``User`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--user`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).  When running tasks using the ``host`` network mode, don't run containers using the root user (UID 0). We recommend using a non-root user for better security.  You can specify the ``user`` using the following formats. If specifying a UID or GID, you must specify it as a positive integer.  +   ``user``   +   ``user:group``   +   ``uid``   +   ``uid:gid``   +   ``user:gid``   +   ``uid:group``     This parameter is not supported for Windows containers.",
        SerializedName = @"user",
        PossibleTypes = new [] { typeof(string) })]
        string User { get; set; }
        /// <summary>
        /// Data volumes to mount from another container. This parameter maps to ``VolumesFrom`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--volumes-from``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data volumes to mount from another container. This parameter maps to ``VolumesFrom`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--volumes-from`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).",
        SerializedName = @"volumesFrom",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeFrom) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeFrom[] VolumesFrom { get; set; }
        /// <summary>
        /// The working directory to run commands inside the container in. This parameter maps to ``WorkingDir`` in the [Create a
        /// container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of
        /// the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--workdir`` option
        /// to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The working directory to run commands inside the container in. This parameter maps to ``WorkingDir`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--workdir`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).",
        SerializedName = @"workingDirectory",
        PossibleTypes = new [] { typeof(string) })]
        string WorkingDirectory { get; set; }

    }
    /// Definition of ContainerDefinition
    internal partial interface IContainerDefinitionInternal

    {
        /// <summary>
        /// The Linux capabilities for the container that have been added to the default configuration provided by Docker. This parameter
        /// maps to ``CapAdd`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cap-add``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// Tasks launched on FARGATElong only support adding the ``SYS_PTRACE`` kernel capability. Valid values: ``'ALL' | 'AUDIT_CONTROL'
        /// | 'AUDIT_WRITE' | 'BLOCK_SUSPEND' | 'CHOWN' | 'DAC_OVERRIDE' | 'DAC_READ_SEARCH' | 'FOWNER' | 'FSETID' | 'IPC_LOCK' |
        /// 'IPC_OWNER' | 'KILL' | 'LEASE' | 'LINUX_IMMUTABLE' | 'MAC_ADMIN' | 'MAC_OVERRIDE' | 'MKNOD' | 'NET_ADMIN' | 'NET_BIND_SERVICE'
        /// | 'NET_BROADCAST' | 'NET_RAW' | 'SETFCAP' | 'SETGID' | 'SETPCAP' | 'SETUID' | 'SYS_ADMIN' | 'SYS_BOOT' | 'SYS_CHROOT'
        /// | 'SYS_MODULE' | 'SYS_NICE' | 'SYS_PACCT' | 'SYS_PTRACE' | 'SYS_RAWIO' | 'SYS_RESOURCE' | 'SYS_TIME' | 'SYS_TTY_CONFIG'
        /// | 'SYSLOG' | 'WAKE_ALARM'``
        /// </summary>
        string[] CapabilityAdd { get; set; }
        /// <summary>
        /// The Linux capabilities for the container that have been removed from the default configuration provided by Docker. This
        /// parameter maps to ``CapDrop`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cap-drop``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// Valid values: ``'ALL' | 'AUDIT_CONTROL' | 'AUDIT_WRITE' | 'BLOCK_SUSPEND' | 'CHOWN' | 'DAC_OVERRIDE' | 'DAC_READ_SEARCH'
        /// | 'FOWNER' | 'FSETID' | 'IPC_LOCK' | 'IPC_OWNER' | 'KILL' | 'LEASE' | 'LINUX_IMMUTABLE' | 'MAC_ADMIN' | 'MAC_OVERRIDE'
        /// | 'MKNOD' | 'NET_ADMIN' | 'NET_BIND_SERVICE' | 'NET_BROADCAST' | 'NET_RAW' | 'SETFCAP' | 'SETGID' | 'SETPCAP' | 'SETUID'
        /// | 'SYS_ADMIN' | 'SYS_BOOT' | 'SYS_CHROOT' | 'SYS_MODULE' | 'SYS_NICE' | 'SYS_PACCT' | 'SYS_PTRACE' | 'SYS_RAWIO' | 'SYS_RESOURCE'
        /// | 'SYS_TIME' | 'SYS_TTY_CONFIG' | 'SYSLOG' | 'WAKE_ALARM'``
        /// </summary>
        string[] CapabilityDrop { get; set; }
        /// <summary>
        /// The command that's passed to the container. This parameter maps to ``Cmd`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``COMMAND``
        /// parameter to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// For more information, see [https://docs.docker.com/engine/reference/builder/#cmd](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/builder/#cmd).
        /// If there are multiple arguments, each argument is a separated string in the array.
        /// </summary>
        string[] Command { get; set; }
        /// <summary>
        /// The number of ``cpu`` units reserved for the container. This parameter maps to ``CpuShares`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--cpu-shares``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This field is optional for tasks using the Fargate launch type, and the only requirement is that the total amount of CPU
        /// reserved for all containers within a task be lower than the task-level ``cpu`` value. You can determine the number of
        /// CPU units that are available per EC2 instance type by multiplying the vCPUs listed for that instance type on the [Amazon
        /// EC2 Instances](https://docs.aws.amazon.com/ec2/instance-types/) detail page by 1,024. Linux containers share unallocated
        /// CPU units with other containers on the container instance with the same ratio as their allocated amount. For example,
        /// if you run a single-container task on a single-core instance type with 512 CPU units specified for that container, and
        /// that's the only task running on the container instance, that container could use the full 1,024 CPU unit share at any
        /// given time. However, if you launched another copy of the same task on that container instance, each task is guaranteed
        /// a minimum of 512 CPU units when needed. Moreover, each container could float to higher CPU usage if the other container
        /// was not using it. If both tasks were 100% active all of the time, they would be limited to 512 CPU units. On Linux container
        /// instances, the Docker daemon on the container instance uses the CPU value to calculate the relative CPU share ratios for
        /// running containers. For more information, see [CPU share constraint](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#cpu-share-constraint)
        /// in the Docker documentation. The minimum valid CPU share value that the Linux kernel allows is 2. However, the CPU parameter
        /// isn't required, and you can use CPU values below 2 in your container definitions. For CPU values below 2 (including null),
        /// the behavior varies based on your Amazon ECS container agent version: + *Agent versions less than or equal to 1.1.0:*
        /// Null and zero CPU values are passed to Docker as 0, which Docker then converts to 1,024 CPU shares. CPU values of 1 are
        /// passed to Docker as 1, which the Linux kernel converts to two CPU shares. + *Agent versions greater than or equal to 1.2.0:*
        /// Null, zero, and CPU values of 1 are passed to Docker as 2. On Windows container instances, the CPU limit is enforced as
        /// an absolute limit, or a quota. Windows containers only have access to the specified amount of CPU that's described in
        /// the task definition. A null or zero CPU value is passed to Docker as ``0``, which Windows interprets as 1% of one CPU.
        /// </summary>
        int? Cpu { get; set; }
        /// <summary>
        /// A list of ARNs in SSM or Amazon S3 to a credential spec (``CredSpec``) file that configures the container for Active Directory
        /// authentication. We recommend that you use this parameter instead of the ``dockerSecurityOptions``. The maximum number
        /// of ARNs is 1. There are two formats for each ARN. + credentialspecdomainless:MyARN You use credentialspecdomainless:MyARN
        /// to provide a CredSpec with an additional section for a secret in . You provide the login credentials to the domain in
        /// the secret. Each task that runs on any container instance can join different domains. You can use this format without
        /// joining the container instance to a domain. + credentialspec:MyARN You use credentialspec:MyARN to provide a CredSpec
        /// for a single domain. You must join the container instance to the domain before you start any tasks that use this task
        /// definition. In both formats, replace ``MyARN`` with the ARN in SSM or Amazon S3. If you provide a ``credentialspecdomainless:MyARN``,
        /// the ``credspec`` must provide a ARN in ASMlong for a secret containing the username, password, and the domain to connect
        /// to. For better security, the instance isn't joined to the domain for domainless authentication. Other applications on
        /// the instance can't use the domainless credentials. You can use this parameter to run tasks on the same instance, even
        /// it the tasks need to join different domains. For more information, see [Using gMSAs for Windows Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html)
        /// and [Using gMSAs for Linux Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/linux-gmsa.html).
        /// </summary>
        string[] CredentialSpec { get; set; }
        /// <summary>
        /// The dependencies defined for container startup and shutdown. A container can contain multiple dependencies. When a dependency
        /// is defined for container startup, for container shutdown it is reversed. For tasks using the EC2 launch type, the container
        /// instances require at least version 1.26.0 of the container agent to turn on container dependencies. However, we recommend
        /// using the latest container agent version. For information about checking your agent version and updating to the latest
        /// version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance
        /// needs at least version 1.26.0-1 of the ``ecs-init`` package. If your container instances are launched from version ``20190301``
        /// or later, then they contain the required versions of the container agent and ``ecs-init``. For more information, see [Amazon
        /// ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. For tasks using the Fargate launch type, the task or service requires the
        /// following platforms: + Linux platform version ``1.3.0`` or later. + Windows platform version ``1.0.0`` or later. If the
        /// task definition is used in a blue/green deployment that uses [AWS::CodeDeploy::DeploymentGroup BlueGreenDeploymentConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-bluegreendeploymentconfiguration.html),
        /// the ``dependsOn`` parameter is not supported. For more information see [Issue #680](https://docs.aws.amazon.com/https://github.com/aws-cloudformation/cloudformation-coverage-roadmap/issues/680)
        /// on the on the GitHub website.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDependency[] DependsOn { get; set; }
        /// <summary>
        /// When this parameter is true, networking is off within the container. This parameter maps to ``NetworkDisabled`` in the
        /// [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/). This parameter
        /// is not supported for Windows containers.
        /// </summary>
        bool? DisableNetworking { get; set; }
        /// <summary>
        /// A list of DNS search domains that are presented to the container. This parameter maps to ``DnsSearch`` in the [Create
        /// a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section
        /// of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--dns-search``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers.
        /// </summary>
        string[] DnsSearchDomain { get; set; }
        /// <summary>
        /// A list of DNS servers that are presented to the container. This parameter maps to ``Dns`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--dns``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers.
        /// </summary>
        string[] DnsServer { get; set; }
        /// <summary>
        /// A key/value map of labels to add to the container. This parameter maps to ``Labels`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--label``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker
        /// Remote API version on your container instance, log in to your container instance and run the following command: ``sudo
        /// docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny DockerLabel { get; set; }
        /// <summary>
        /// A list of strings to provide custom configuration for multiple security systems. For more information about valid values,
        /// see [Docker Run Security Configuration](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This field isn't valid for containers in tasks using the Fargate launch type. For Linux tasks on EC2, this parameter can
        /// be used to reference custom labels for SELinux and AppArmor multi-level security systems. For any tasks on EC2, this parameter
        /// can be used to reference a credential spec file that configures a container for Active Directory authentication. For more
        /// information, see [Using gMSAs for Windows Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html)
        /// and [Using gMSAs for Linux Containers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/linux-gmsa.html) in
        /// the *Amazon Elastic Container Service Developer Guide*. This parameter maps to ``SecurityOpt`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--security-opt``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// The Amazon ECS container agent running on a container instance must register with the ``ECS_SELINUX_CAPABLE=true`` or
        /// ``ECS_APPARMOR_CAPABLE=true`` environment variables before containers placed on that instance can use these security options.
        /// For more information, see [Amazon ECS Container Agent Configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For more information about valid values, see [Docker Run Security
        /// Configuration](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). Valid
        /// values: 'no-new-privileges' | 'apparmor:PROFILE' | 'label:value' | 'credentialspec:CredentialSpecFilePath'
        /// </summary>
        string[] DockerSecurityOption { get; set; }
        /// <summary>
        /// Early versions of the Amazon ECS container agent don't properly handle ``entryPoint`` parameters. If you have problems
        /// using ``entryPoint``, update your container agent or enter your commands and arguments as ``command`` array items instead.
        /// The entry point that's passed to the container. This parameter maps to ``Entrypoint`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--entrypoint``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// For more information, see [https://docs.docker.com/engine/reference/builder/#entrypoint](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/builder/#entrypoint).
        /// </summary>
        string[] EntryPoint { get; set; }
        /// <summary>
        /// The environment variables to pass to a container. This parameter maps to ``Env`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--env``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// We don't recommend that you use plaintext environment variables for sensitive information, such as credential data.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair[] Environment { get; set; }
        /// <summary>
        /// A list of files containing the environment variables to pass to a container. This parameter maps to the ``--env-file``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// You can specify up to ten environment files. The file must have a ``.env`` file extension. Each line in an environment
        /// file contains an environment variable in ``VARIABLE=VALUE`` format. Lines beginning with ``#`` are treated as comments
        /// and are ignored. For more information about the environment variable file syntax, see [Declare default environment variables
        /// in file](https://docs.aws.amazon.com/https://docs.docker.com/compose/env-file/). If there are environment variables specified
        /// using the ``environment`` parameter in a container definition, they take precedence over the variables contained within
        /// an environment file. If multiple environment files are specified that contain the same variable, they're processed from
        /// the top down. We recommend that you use unique variable names. For more information, see [Specifying Environment Variables](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentFile[] EnvironmentFile { get; set; }
        /// <summary>
        /// If the ``essential`` parameter of a container is marked as ``true``, and that container fails or stops for any reason,
        /// all other containers that are part of the task are stopped. If the ``essential`` parameter of a container is marked as
        /// ``false``, its failure doesn't affect the rest of the containers in a task. If this parameter is omitted, a container
        /// is assumed to be essential. All tasks must have at least one essential container. If you have an application that's composed
        /// of multiple containers, group containers that are used for a common purpose into components, and separate the different
        /// components into multiple task definitions. For more information, see [Application Architecture](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/application_architecture.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        bool? Essential { get; set; }
        /// <summary>
        /// A list of hostnames and IP address mappings to append to the ``/etc/hosts`` file on the container. This parameter maps
        /// to ``ExtraHosts`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--add-host``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter isn't supported for Windows containers or tasks that use the ``awsvpc`` network mode.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostEntry[] ExtraHost { get; set; }
        /// <summary>
        /// The options to use when configuring the log router. This field is optional and can be used to add additional metadata,
        /// such as the task, task definition, cluster, and container instance details to the log event. If specified, valid option
        /// keys are: + ``enable-ecs-log-metadata``, which can be ``true`` or ``false`` + ``config-file-type``, which can be ``s3``
        /// or ``file`` + ``config-file-value``, which is either an S3 ARN or a file path
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny FirelenConfigurationOption { get; set; }
        /// <summary>The log router to use. The valid values are ``fluentd`` or ``fluentbit``.</summary>
        string FirelenConfigurationType { get; set; }
        /// <summary>
        /// The FireLens configuration for the container. This is used to specify and configure a log router for container logs. For
        /// more information, see [Custom Log Routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. The FireLens configuration for the container. This is used
        /// to specify and configure a log router for container logs. For more information, see [Custom log routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFirelensConfiguration FirelensConfiguration { get; set; }
        /// <summary>
        /// The container health check command and associated configuration parameters for the container. This parameter maps to ``HealthCheck``
        /// in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``HEALTHCHECK``
        /// parameter of [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// The ``HealthCheck`` property specifies an object representing a container health check. Health check parameters that are
        /// specified in a container definition override any Docker health checks that exist in the container image (such as those
        /// specified in a parent image or from the image's Dockerfile). This configuration maps to the ``HEALTHCHECK`` parameter
        /// of [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). The Amazon ECS container agent
        /// only monitors and reports on the health checks specified in the task definition. Amazon ECS does not monitor Docker health
        /// checks that are embedded in a container image and not specified in the container definition. Health check parameters that
        /// are specified in a container definition override any Docker health checks that exist in the container image. If a task
        /// is run manually, and not as part of a service, the task will continue its lifecycle regardless of its health status. For
        /// tasks that are part of a service, if the task reports as unhealthy then the task will be stopped and the service scheduler
        /// will replace it. The following are notes about container health check support: + Container health checks require version
        /// 1.17.0 or greater of the Amazon ECS container agent. For more information, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html).
        /// + Container health checks are supported for Fargate tasks if you are using platform version 1.1.0 or greater. For more
        /// information, see [Platform Versions](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html).
        /// + Container health checks are not supported for tasks that are part of a service that is configured to use a Classic Load
        /// Balancer.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHealthCheck HealthCheck { get; set; }
        /// <summary>
        /// A string array representing the command that the container runs to determine if it is healthy. The string array must start
        /// with ``CMD`` to run the command arguments directly, or ``CMD-SHELL`` to run the command with the container's default shell.
        /// When you use the AWS Management Console JSON panel, the CLIlong, or the APIs, enclose the list of commands in double quotes
        /// and brackets. ``[ 'CMD-SHELL', 'curl -f http://localhost/ || exit 1' ]`` You don't include the double quotes and brackets
        /// when you use the AWS Management Console. ``CMD-SHELL, curl -f http://localhost/ || exit 1`` An exit code of 0 indicates
        /// success, and non-zero exit code indicates failure. For more information, see ``HealthCheck`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/).
        /// </summary>
        string[] HealthCheckCommand { get; set; }
        /// <summary>
        /// The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default
        /// value is 30 seconds.
        /// </summary>
        int? HealthCheckInterval { get; set; }
        /// <summary>
        /// The number of times to retry a failed health check before the container is considered unhealthy. You may specify between
        /// 1 and 10 retries. The default value is 3.
        /// </summary>
        int? HealthCheckRetry { get; set; }
        /// <summary>
        /// The optional grace period to provide containers time to bootstrap before failed health checks count towards the maximum
        /// number of retries. You can specify between 0 and 300 seconds. By default, the ``startPeriod`` is off. If a health check
        /// succeeds within the ``startPeriod``, then the container is considered healthy and any subsequent failures count toward
        /// the maximum number of retries.
        /// </summary>
        int? HealthCheckStartPeriod { get; set; }
        /// <summary>
        /// The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between
        /// 2 and 60 seconds. The default value is 5.
        /// </summary>
        int? HealthCheckTimeout { get; set; }
        /// <summary>
        /// The hostname to use for your container. This parameter maps to ``Hostname`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--hostname``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// The ``hostname`` parameter is not supported if you're using the ``awsvpc`` network mode.
        /// </summary>
        string Hostname { get; set; }
        /// <summary>
        /// The image used to start a container. This string is passed directly to the Docker daemon. By default, images in the Docker
        /// Hub registry are available. Other repositories are specified with either ``repository-url/image:tag`` or ``repository-url/image@digest``.
        /// Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes, and number
        /// signs are allowed. This parameter maps to ``Image`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``IMAGE``
        /// parameter of [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// + When a new task starts, the Amazon ECS container agent pulls the latest version of the specified image and tag for the
        /// container to use. However, subsequent updates to a repository image aren't propagated to already running tasks. + Images
        /// in Amazon ECR repositories can be specified by either using the full ``registry/repository:tag`` or ``registry/repository@digest``.
        /// For example, ``012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>:latest`` or ``012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name>@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE``.
        /// + Images in official repositories on Docker Hub use a single name (for example, ``ubuntu`` or ``mongo``). + Images in
        /// other repositories on Docker Hub are qualified with an organization name (for example, ``amazon/amazon-ecs-agent``). +
        /// Images in other online repositories are qualified further by a domain name (for example, ``quay.io/assemblyline/ubuntu``).
        /// </summary>
        string Image { get; set; }
        /// <summary>
        /// When this parameter is ``true``, you can deploy containerized applications that require ``stdin`` or a ``tty`` to be allocated.
        /// This parameter maps to ``OpenStdin`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--interactive``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        bool? Interactive { get; set; }
        /// <summary>
        /// The ``links`` parameter allows containers to communicate with each other without the need for port mappings. This parameter
        /// is only supported if the network mode of a task definition is ``bridge``. The ``name:internalName`` construct is analogous
        /// to ``name:alias`` in Docker links. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are
        /// allowed. For more information about linking Docker containers, go to [Legacy container links](https://docs.aws.amazon.com/https://docs.docker.com/network/links/)
        /// in the Docker documentation. This parameter maps to ``Links`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--link``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers. Containers that are collocated on a single container instance
        /// may be able to communicate with each other without requiring links or host port mappings. Network isolation is achieved
        /// on the container instance using security groups and VPC settings.
        /// </summary>
        string[] Link { get; set; }
        /// <summary>
        /// Linux-specific modifications that are applied to the container, such as Linux kernel capabilities. For more information
        /// see [KernelCapabilities](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_KernelCapabilities.html). This
        /// parameter is not supported for Windows containers. The Linux-specific options that are applied to the container, such
        /// as Linux [KernelCapabilities](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_KernelCapabilities.html).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILinuxParameters LinuxParameter { get; set; }
        /// <summary>
        /// The Linux capabilities for the container that are added to or dropped from the default configuration provided by Docker.
        /// For tasks that use the Fargate launch type, ``capabilities`` is supported for all platform versions but the ``add`` parameter
        /// is only supported if using platform version 1.4.0 or later. The Linux capabilities to add or remove from the default Docker
        /// configuration for a container defined in the task definition. For more information about the default capabilities and
        /// the non-default available capabilities, see [Runtime privilege and Linux capabilities](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities)
        /// in the *Docker run reference*. For more detailed information about these Linux capabilities, see the [capabilities(7)](https://docs.aws.amazon.com/http://man7.org/linux/man-pages/man7/capabilities.7.html)
        /// Linux manual page.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKernelCapabilities LinuxParameterCapability { get; set; }
        /// <summary>
        /// Any host devices to expose to the container. This parameter maps to ``Devices`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--device``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If you're using tasks that use the Fargate launch type, the ``devices`` parameter isn't supported.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDevice[] LinuxParameterDevice { get; set; }
        /// <summary>
        /// Run an ``init`` process inside the container that forwards signals and reaps processes. This parameter maps to the ``--init``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter requires version 1.25 of the Docker Remote API or greater on your container instance. To check the Docker
        /// Remote API version on your container instance, log in to your container instance and run the following command: ``sudo
        /// docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        bool? LinuxParameterInitProcessEnabled { get; set; }
        /// <summary>
        /// The total amount of swap memory (in MiB) a container can use. This parameter will be translated to the ``--memory-swap``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration)
        /// where the value would be the sum of the container memory plus the ``maxSwap`` value. If a ``maxSwap`` value of ``0`` is
        /// specified, the container will not use swap. Accepted values are ``0`` or any positive integer. If the ``maxSwap`` parameter
        /// is omitted, the container will use the swap configuration for the container instance it is running on. A ``maxSwap`` value
        /// must be set for the ``swappiness`` parameter to be used. If you're using tasks that use the Fargate launch type, the ``maxSwap``
        /// parameter isn't supported. If you're using tasks on Amazon Linux 2023 the ``swappiness`` parameter isn't supported.
        /// </summary>
        int? LinuxParameterMaxSwap { get; set; }
        /// <summary>
        /// The value for the size (in MiB) of the ``/dev/shm`` volume. This parameter maps to the ``--shm-size`` option to [docker
        /// run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). If you are using
        /// tasks that use the Fargate launch type, the ``sharedMemorySize`` parameter is not supported.
        /// </summary>
        int? LinuxParameterSharedMemorySize { get; set; }
        /// <summary>
        /// This allows you to tune a container's memory swappiness behavior. A ``swappiness`` value of ``0`` will cause swapping
        /// to not happen unless absolutely necessary. A ``swappiness`` value of ``100`` will cause pages to be swapped very aggressively.
        /// Accepted values are whole numbers between ``0`` and ``100``. If the ``swappiness`` parameter is not specified, a default
        /// value of ``60`` is used. If a value is not specified for ``maxSwap`` then this parameter is ignored. This parameter maps
        /// to the ``--memory-swappiness`` option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If you're using tasks that use the Fargate launch type, the ``swappiness`` parameter isn't supported. If you're using
        /// tasks on Amazon Linux 2023 the ``swappiness`` parameter isn't supported.
        /// </summary>
        int? LinuxParameterSwappiness { get; set; }
        /// <summary>
        /// The container path, mount options, and size (in MiB) of the tmpfs mount. This parameter maps to the ``--tmpfs`` option
        /// to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration). If
        /// you're using tasks that use the Fargate launch type, the ``tmpfs`` parameter isn't supported.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITmpfs[] LinuxParameterTmpf { get; set; }
        /// <summary>
        /// The log configuration specification for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). By default, containers
        /// use the same logging driver that the Docker daemon uses. However, the container may use a different logging driver than
        /// the Docker daemon by specifying a log driver with this parameter in the container definition. To use a different logging
        /// driver for a container, the log system must be configured properly on the container instance (or on a different log server
        /// for remote logging options). For more information on the options for different supported log drivers, see [Configure logging
        /// drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation.
        /// Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon (shown in the [LogConfiguration](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_LogConfiguration.html)
        /// data type). Additional log drivers may be available in future releases of the Amazon ECS container agent. This parameter
        /// requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version
        /// on your container instance, log in to your container instance and run the following command: ``sudo docker version --format
        /// '{{.Server.APIVersion}}'`` The Amazon ECS container agent running on a container instance must register the logging drivers
        /// available on that instance with the ``ECS_AVAILABLE_LOGGING_DRIVERS`` environment variable before containers placed on
        /// that instance can use these log configuration options. For more information, see [Amazon ECS Container Agent Configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. The ``LogConfiguration`` property specifies log configuration
        /// options to send to a custom log driver for the container.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration LogConfiguration { get; set; }
        /// <summary>
        /// The log driver to use for the container. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``,
        /// and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``,
        /// ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. For more information
        /// about using the ``awslogs`` log driver, see [Using the awslogs log driver](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For more information about using the ``awsfirelens`` log driver,
        /// see [Custom log routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. If you have a custom driver that isn't listed, you can fork the Amazon ECS
        /// container agent project that's [available on GitHub](https://docs.aws.amazon.com/https://github.com/aws/amazon-ecs-agent)
        /// and customize it to work with that driver. We encourage you to submit pull requests for changes that you would like to
        /// have included. However, we don't currently provide support for running modified copies of this software.
        /// </summary>
        string LogConfigurationLogDriver { get; set; }
        /// <summary>
        /// The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or
        /// greater on your container instance. To check the Docker Remote API version on your container instance, log in to your
        /// container instance and run the following command: ``sudo docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny LogConfigurationOption { get; set; }
        /// <summary>
        /// The secrets to pass to the log configuration. For more information, see [Specifying sensitive data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[] LogConfigurationSecretOption { get; set; }
        /// <summary>
        /// The amount (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here,
        /// the container is killed. The total amount of memory reserved for all containers within a task must be lower than the task
        /// ``memory`` value, if one is specified. This parameter maps to ``Memory`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--memory``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If using the Fargate launch type, this parameter is optional. If using the EC2 launch type, you must specify either a
        /// task-level memory value or a container-level memory value. If you specify both a container-level ``memory`` and ``memoryReservation``
        /// value, ``memory`` must be greater than ``memoryReservation``. If you specify ``memoryReservation``, then that value is
        /// subtracted from the available memory resources for the container instance where the container is placed. Otherwise, the
        /// value of ``memory`` is used. The Docker 20.10.0 or later daemon reserves a minimum of 6 MiB of memory for a container,
        /// so you should not specify fewer than 6 MiB of memory for your containers. The Docker 19.03.13-ce or earlier daemon reserves
        /// a minimum of 4 MiB of memory for a container, so you should not specify fewer than 4 MiB of memory for your containers.
        /// </summary>
        int? Memory { get; set; }
        /// <summary>
        /// The soft limit (in MiB) of memory to reserve for the container. When system memory is under heavy contention, Docker attempts
        /// to keep the container memory to this soft limit. However, your container can consume more memory when it needs to, up
        /// to either the hard limit specified with the ``memory`` parameter (if applicable), or all of the available memory on the
        /// container instance, whichever comes first. This parameter maps to ``MemoryReservation`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--memory-reservation``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// If a task-level memory value is not specified, you must specify a non-zero integer for one or both of ``memory`` or ``memoryReservation``
        /// in a container definition. If you specify both, ``memory`` must be greater than ``memoryReservation``. If you specify
        /// ``memoryReservation``, then that value is subtracted from the available memory resources for the container instance where
        /// the container is placed. Otherwise, the value of ``memory`` is used. For example, if your container normally uses 128
        /// MiB of memory, but occasionally bursts to 256 MiB of memory for short periods of time, you can set a ``memoryReservation``
        /// of 128 MiB, and a ``memory`` hard limit of 300 MiB. This configuration would allow the container to only reserve 128 MiB
        /// of memory from the remaining resources on the container instance, but also allow the container to consume more memory
        /// resources when needed. The Docker 20.10.0 or later daemon reserves a minimum of 6 MiB of memory for a container. So, don't
        /// specify less than 6 MiB of memory for your containers. The Docker 19.03.13-ce or earlier daemon reserves a minimum of
        /// 4 MiB of memory for a container. So, don't specify less than 4 MiB of memory for your containers.
        /// </summary>
        int? MemoryReservation { get; set; }
        /// <summary>
        /// The mount points for data volumes in your container. This parameter maps to ``Volumes`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--volume``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// Windows containers can mount whole directories on the same drive as ``$env:ProgramData``. Windows containers can't mount
        /// directories on a different drive, and mount point can't be across drives.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint[] MountPoint { get; set; }
        /// <summary>
        /// The name of a container. If you're linking multiple containers together in a task definition, the ``name`` of one container
        /// can be entered in the ``links`` of another container to connect the containers. Up to 255 letters (uppercase and lowercase),
        /// numbers, underscores, and hyphens are allowed. This parameter maps to ``name`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--name``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        string Name { get; set; }
        /// <summary>
        /// The list of port mappings for the container. Port mappings allow containers to access ports on the host container instance
        /// to send or receive traffic. For task definitions that use the ``awsvpc`` network mode, you should only specify the ``containerPort``.
        /// The ``hostPort`` can be left blank or it must be the same value as the ``containerPort``. Port mappings on Windows use
        /// the ``NetNAT`` gateway address rather than ``localhost``. There is no loopback for port mappings on Windows, so you cannot
        /// access a container's mapped port from the host itself. This parameter maps to ``PortBindings`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--publish``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). If the network mode
        /// of a task definition is set to ``none``, then you can't specify port mappings. If the network mode of a task definition
        /// is set to ``host``, then host ports must either be undefined or they must match the container port in the port mapping.
        /// After a task reaches the ``RUNNING`` status, manual and automatic host and container port assignments are visible in the
        /// *Network Bindings* section of a container description for a selected task in the Amazon ECS console. The assignments are
        /// also visible in the ``networkBindings`` section [DescribeTasks](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html)
        /// responses.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPortMapping[] PortMapping { get; set; }
        /// <summary>
        /// When this parameter is true, the container is given elevated privileges on the host container instance (similar to the
        /// ``root`` user). This parameter maps to ``Privileged`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--privileged``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers or tasks run on FARGATElong.
        /// </summary>
        bool? Privileged { get; set; }
        /// <summary>
        /// When this parameter is ``true``, a TTY is allocated. This parameter maps to ``Tty`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--tty``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        bool? PseudoTerminal { get; set; }
        /// <summary>
        /// When this parameter is true, the container is given read-only access to its root file system. This parameter maps to ``ReadonlyRootfs``
        /// in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--read-only``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// This parameter is not supported for Windows containers.
        /// </summary>
        bool? ReadonlyRootFilesystem { get; set; }
        /// <summary>
        /// The private repository authentication credentials to use. The repository credentials for private registry authentication.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRepositoryCredentials RepositoryCredentials { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the secret containing the private repository credentials. When you use the Amazon ECS
        /// API, CLI, or AWS SDK, if the secret exists in the same Region as the task that you're launching then you can use either
        /// the full ARN or the name of the secret. When you use the AWS Management Console, you must specify the full ARN of the
        /// secret.
        /// </summary>
        string RepositoryCredentialsParameter { get; set; }
        /// <summary>
        /// The type and amount of a resource to assign to a container. The only supported resource is a GPU.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceRequirement[] ResourceRequirement { get; set; }
        /// <summary>
        /// The secrets to pass to the container. For more information, see [Specifying Sensitive Data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[] Secret { get; set; }
        /// <summary>
        /// Time duration (in seconds) to wait before giving up on resolving dependencies for a container. For example, you specify
        /// two containers in a task definition with containerA having a dependency on containerB reaching a ``COMPLETE``, ``SUCCESS``,
        /// or ``HEALTHY`` status. If a ``startTimeout`` value is specified for containerB and it doesn't reach the desired status
        /// within that time then containerA gives up and not start. This results in the task transitioning to a ``STOPPED`` state.
        /// When the ``ECS_CONTAINER_START_TIMEOUT`` container agent configuration variable is used, it's enforced independently from
        /// this start timeout value. For tasks using the Fargate launch type, the task or service requires the following platforms:
        /// + Linux platform version ``1.3.0`` or later. + Windows platform version ``1.0.0`` or later. For tasks using the EC2 launch
        /// type, your container instances require at least version ``1.26.0`` of the container agent to use a container start timeout
        /// value. However, we recommend using the latest container agent version. For information about checking your agent version
        /// and updating to the latest version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance
        /// needs at least version ``1.26.0-1`` of the ``ecs-init`` package. If your container instances are launched from version
        /// ``20190301`` or later, then they contain the required versions of the container agent and ``ecs-init``. For more information,
        /// see [Amazon ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. The valid values are 2-120 seconds.
        /// </summary>
        int? StartTimeout { get; set; }
        /// <summary>
        /// Time duration (in seconds) to wait before the container is forcefully killed if it doesn't exit normally on its own. For
        /// tasks using the Fargate launch type, the task or service requires the following platforms: + Linux platform version ``1.3.0``
        /// or later. + Windows platform version ``1.0.0`` or later. The max stop timeout value is 120 seconds and if the parameter
        /// is not specified, the default value of 30 seconds is used. For tasks that use the EC2 launch type, if the ``stopTimeout``
        /// parameter isn't specified, the value set for the Amazon ECS container agent configuration variable ``ECS_CONTAINER_STOP_TIMEOUT``
        /// is used. If neither the ``stopTimeout`` parameter or the ``ECS_CONTAINER_STOP_TIMEOUT`` agent configuration variable are
        /// set, then the default values of 30 seconds for Linux containers and 30 seconds on Windows containers are used. Your container
        /// instances require at least version 1.26.0 of the container agent to use a container stop timeout value. However, we recommend
        /// using the latest container agent version. For information about checking your agent version and updating to the latest
        /// version, see [Updating the Amazon ECS Container Agent](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. If you're using an Amazon ECS-optimized Linux AMI, your instance
        /// needs at least version 1.26.0-1 of the ``ecs-init`` package. If your container instances are launched from version ``20190301``
        /// or later, then they contain the required versions of the container agent and ``ecs-init``. For more information, see [Amazon
        /// ECS-optimized Linux AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. The valid values are 2-120 seconds.
        /// </summary>
        int? StopTimeout { get; set; }
        /// <summary>
        /// A list of namespaced kernel parameters to set in the container. This parameter maps to ``Sysctls`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--sysctl``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// For example, you can configure ``net.ipv4.tcp_keepalive_time`` setting to maintain longer lived connections.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISystemControl[] SystemControl { get; set; }
        /// <summary>
        /// A list of ``ulimits`` to set in the container. This parameter maps to ``Ulimits`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--ulimit``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/). Valid naming values
        /// are displayed in the [Ulimit](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Ulimit.html) data type. This
        /// parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote
        /// API version on your container instance, log in to your container instance and run the following command: ``sudo docker
        /// version --format '{{.Server.APIVersion}}'`` This parameter is not supported for Windows containers.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUlimit[] Ulimit { get; set; }
        /// <summary>
        /// The user to use inside the container. This parameter maps to ``User`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--user``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// When running tasks using the ``host`` network mode, don't run containers using the root user (UID 0). We recommend using
        /// a non-root user for better security. You can specify the ``user`` using the following formats. If specifying a UID or
        /// GID, you must specify it as a positive integer. + ``user`` + ``user:group`` + ``uid`` + ``uid:gid`` + ``user:gid`` + ``uid:group``
        /// This parameter is not supported for Windows containers.
        /// </summary>
        string User { get; set; }
        /// <summary>
        /// Data volumes to mount from another container. This parameter maps to ``VolumesFrom`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--volumes-from``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeFrom[] VolumesFrom { get; set; }
        /// <summary>
        /// The working directory to run commands inside the container in. This parameter maps to ``WorkingDir`` in the [Create a
        /// container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of
        /// the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--workdir`` option
        /// to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/run/#security-configuration).
        /// </summary>
        string WorkingDirectory { get; set; }

    }
}