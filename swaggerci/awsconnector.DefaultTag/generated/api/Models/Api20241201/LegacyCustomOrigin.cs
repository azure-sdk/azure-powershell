// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of LegacyCustomOrigin</summary>
    public partial class LegacyCustomOrigin :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOrigin,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOriginInternal
    {

        /// <summary>Backing field for <see cref="DnsName" /> property.</summary>
        private string _dnsName;

        /// <summary>Property dnsName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DnsName { get => this._dnsName; set => this._dnsName = value; }

        /// <summary>Backing field for <see cref="HttpPort" /> property.</summary>
        private int? _httpPort;

        /// <summary>Property httpPort</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? HttpPort { get => this._httpPort; set => this._httpPort = value; }

        /// <summary>Backing field for <see cref="HttpsPort" /> property.</summary>
        private int? _httpsPort;

        /// <summary>Property httpsPort</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? HttpsPort { get => this._httpsPort; set => this._httpsPort = value; }

        /// <summary>Backing field for <see cref="OriginProtocolPolicy" /> property.</summary>
        private string _originProtocolPolicy;

        /// <summary>Property originProtocolPolicy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OriginProtocolPolicy { get => this._originProtocolPolicy; set => this._originProtocolPolicy = value; }

        /// <summary>Backing field for <see cref="OriginSslProtocol" /> property.</summary>
        private string[] _originSslProtocol;

        /// <summary>Property originSSLProtocols</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] OriginSslProtocol { get => this._originSslProtocol; set => this._originSslProtocol = value; }

        /// <summary>Creates an new <see cref="LegacyCustomOrigin" /> instance.</summary>
        public LegacyCustomOrigin()
        {

        }
    }
    /// Definition of LegacyCustomOrigin
    public partial interface ILegacyCustomOrigin :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property dnsName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property dnsName",
        SerializedName = @"dnsName",
        PossibleTypes = new [] { typeof(string) })]
        string DnsName { get; set; }
        /// <summary>Property httpPort</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property httpPort",
        SerializedName = @"httpPort",
        PossibleTypes = new [] { typeof(int) })]
        int? HttpPort { get; set; }
        /// <summary>Property httpsPort</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property httpsPort",
        SerializedName = @"httpsPort",
        PossibleTypes = new [] { typeof(int) })]
        int? HttpsPort { get; set; }
        /// <summary>Property originProtocolPolicy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property originProtocolPolicy",
        SerializedName = @"originProtocolPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string OriginProtocolPolicy { get; set; }
        /// <summary>Property originSSLProtocols</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property originSSLProtocols",
        SerializedName = @"originSSLProtocols",
        PossibleTypes = new [] { typeof(string) })]
        string[] OriginSslProtocol { get; set; }

    }
    /// Definition of LegacyCustomOrigin
    internal partial interface ILegacyCustomOriginInternal

    {
        /// <summary>Property dnsName</summary>
        string DnsName { get; set; }
        /// <summary>Property httpPort</summary>
        int? HttpPort { get; set; }
        /// <summary>Property httpsPort</summary>
        int? HttpsPort { get; set; }
        /// <summary>Property originProtocolPolicy</summary>
        string OriginProtocolPolicy { get; set; }
        /// <summary>Property originSSLProtocols</summary>
        string[] OriginSslProtocol { get; set; }

    }
}