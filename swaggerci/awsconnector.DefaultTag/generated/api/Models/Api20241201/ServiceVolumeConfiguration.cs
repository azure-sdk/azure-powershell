// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ServiceVolumeConfiguration</summary>
    public partial class ServiceVolumeConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceVolumeConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceVolumeConfigurationInternal
    {

        /// <summary>
        /// Indicates whether the volume should be encrypted. If no value is specified, encryption is turned on by default. This parameter
        /// maps 1:1 with the ``Encrypted`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ManagedEbVolumeEncrypted { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).Encrypted; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).Encrypted = value ?? default(bool); }

        /// <summary>
        /// The Linux filesystem type for the volume. For volumes created from a snapshot, you must specify the same filesystem type
        /// that the volume was using when the snapshot was created. If there is a filesystem type mismatch, the task will fail to
        /// start. The available filesystem types are ``ext3``, ``ext4``, and ``xfs``. If no value is specified, the ``xfs`` filesystem
        /// type is used by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ManagedEbVolumeFilesystemType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).FilesystemType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).FilesystemType = value ?? null; }

        /// <summary>
        /// The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number
        /// of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume
        /// and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each
        /// volume type. + ``gp3``: 3,000 - 16,000 IOPS + ``io1``: 100 - 64,000 IOPS + ``io2``: 100 - 256,000 IOPS This parameter
        /// is required for ``io1`` and ``io2`` volume types. The default for ``gp3`` volumes is ``3,000 IOPS``. This parameter is
        /// not supported for ``st1``, ``sc1``, or ``standard`` volume types. This parameter maps 1:1 with the ``Iops`` parameter
        /// of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon
        /// EC2 API Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ManagedEbVolumeIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).Iop; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).Iop = value ?? default(int); }

        /// <summary>
        /// The Amazon Resource Name (ARN) identifier of the AWS Key Management Service key to use for Amazon EBS encryption. When
        /// encryption is turned on and no AWS Key Management Service key is specified, the default AWS managed key for Amazon EBS
        /// volumes is used. This parameter maps 1:1 with the ``KmsKeyId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*. AWS authenticates the AWS Key Management Service key asynchronously. Therefore, if
        /// you specify an ID, alias, or ARN that is invalid, the action can appear to complete, but eventually fails.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ManagedEbVolumeKmsKeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).KmsKeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).KmsKeyId = value ?? null; }

        /// <summary>
        /// The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure IAM role that is used to
        /// manage your AWS infrastructure. We recommend using the Amazon ECS-managed ``AmazonECSInfrastructureRolePolicyForVolumes``
        /// IAM policy with this role. For more information, see [Amazon ECS infrastructure IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html)
        /// in the *Amazon ECS Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ManagedEbVolumeRoleArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).RoleArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).RoleArn = value ?? null; }

        /// <summary>
        /// The size of the volume in GiB. You must specify either a volume size or a snapshot ID. If you specify a snapshot ID, the
        /// snapshot size is used for the volume size by default. You can optionally specify a volume size greater than or equal to
        /// the snapshot size. This parameter maps 1:1 with the ``Size`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*. The following are the supported volume size values for each volume type. + ``gp2``
        /// and ``gp3``: 1-16,384 + ``io1`` and ``io2``: 4-16,384 + ``st1`` and ``sc1``: 125-16,384 + ``standard``: 1-1,024
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ManagedEbVolumeSizeInGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).SizeInGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).SizeInGiB = value ?? default(int); }

        /// <summary>
        /// The snapshot that Amazon ECS uses to create the volume. You must specify either a snapshot ID or a volume size. This parameter
        /// maps 1:1 with the ``SnapshotId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ManagedEbVolumeSnapshotId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).SnapshotId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).SnapshotId = value ?? null; }

        /// <summary>
        /// The tags to apply to the volume. Amazon ECS applies service-managed tags by default. This parameter maps 1:1 with the
        /// ``TagSpecifications.N`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsTagSpecification[] ManagedEbVolumeTagSpecification { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).TagSpecification; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).TagSpecification = value ?? null /* arrayOf */; }

        /// <summary>
        /// The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s. This parameter maps 1:1 with the ``Throughput``
        /// parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the
        /// *Amazon EC2 API Reference*. This parameter is only supported for the ``gp3`` volume type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? ManagedEbVolumeThroughput { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).Throughput; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).Throughput = value ?? default(int); }

        /// <summary>
        /// The volume type. This parameter maps 1:1 with the ``VolumeType`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html)
        /// in the *Amazon EC2 User Guide*. The following are the supported volume types. + General Purpose SSD: ``gp2``|``gp3`` +
        /// Provisioned IOPS SSD: ``io1``|``io2`` + Throughput Optimized HDD: ``st1`` + Cold HDD: ``sc1`` + Magnetic: ``standard``
        /// The magnetic volume type is not supported on Fargate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ManagedEbVolumeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).VolumeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfigurationInternal)ManagedEbsVolume).VolumeType = value ?? null; }

        /// <summary>Backing field for <see cref="ManagedEbsVolume" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfiguration _managedEbsVolume;

        /// <summary>
        /// The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used
        /// to create each Amazon EBS volume, with one volume created for each task in the service. The Amazon EBS volumes are visible
        /// in your account in the Amazon EC2 console once they are created. The configuration for the Amazon EBS volume that Amazon
        /// ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created
        /// for each task in the service. Many of these parameters map 1:1 with the Amazon EBS ``CreateVolume`` API request parameters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfiguration ManagedEbsVolume { get => (this._managedEbsVolume = this._managedEbsVolume ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceManagedEbsVolumeConfiguration()); set => this._managedEbsVolume = value; }

        /// <summary>Internal Acessors for ManagedEbsVolume</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceVolumeConfigurationInternal.ManagedEbsVolume { get => (this._managedEbsVolume = this._managedEbsVolume ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServiceManagedEbsVolumeConfiguration()); set { {_managedEbsVolume = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// The name of the volume. This value must match the volume name from the ``Volume`` object in the task definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Creates an new <see cref="ServiceVolumeConfiguration" /> instance.</summary>
        public ServiceVolumeConfiguration()
        {

        }
    }
    /// Definition of ServiceVolumeConfiguration
    public partial interface IServiceVolumeConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Indicates whether the volume should be encrypted. If no value is specified, encryption is turned on by default. This parameter
        /// maps 1:1 with the ``Encrypted`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the volume should be encrypted. If no value is specified, encryption is turned on by default. This parameter maps 1:1 with the ``Encrypted`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.",
        SerializedName = @"encrypted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ManagedEbVolumeEncrypted { get; set; }
        /// <summary>
        /// The Linux filesystem type for the volume. For volumes created from a snapshot, you must specify the same filesystem type
        /// that the volume was using when the snapshot was created. If there is a filesystem type mismatch, the task will fail to
        /// start. The available filesystem types are ``ext3``, ``ext4``, and ``xfs``. If no value is specified, the ``xfs`` filesystem
        /// type is used by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Linux filesystem type for the volume. For volumes created from a snapshot, you must specify the same filesystem type that the volume was using when the snapshot was created. If there is a filesystem type mismatch, the task will fail to start. The available filesystem types are ``ext3``, ``ext4``, and ``xfs``. If no value is specified, the ``xfs`` filesystem type is used by default.",
        SerializedName = @"filesystemType",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedEbVolumeFilesystemType { get; set; }
        /// <summary>
        /// The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number
        /// of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume
        /// and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each
        /// volume type. + ``gp3``: 3,000 - 16,000 IOPS + ``io1``: 100 - 64,000 IOPS + ``io2``: 100 - 256,000 IOPS This parameter
        /// is required for ``io1`` and ``io2`` volume types. The default for ``gp3`` volumes is ``3,000 IOPS``. This parameter is
        /// not supported for ``st1``, ``sc1``, or ``standard`` volume types. This parameter maps 1:1 with the ``Iops`` parameter
        /// of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon
        /// EC2 API Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each volume type.  +   ``gp3``: 3,000 - 16,000 IOPS  +   ``io1``: 100 - 64,000 IOPS  +   ``io2``: 100 - 256,000 IOPS   This parameter is required for ``io1`` and ``io2`` volume types. The default for ``gp3`` volumes is ``3,000 IOPS``. This parameter is not supported for ``st1``, ``sc1``, or ``standard`` volume types. This parameter maps 1:1 with the ``Iops`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.",
        SerializedName = @"iops",
        PossibleTypes = new [] { typeof(int) })]
        int? ManagedEbVolumeIop { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) identifier of the AWS Key Management Service key to use for Amazon EBS encryption. When
        /// encryption is turned on and no AWS Key Management Service key is specified, the default AWS managed key for Amazon EBS
        /// volumes is used. This parameter maps 1:1 with the ``KmsKeyId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*. AWS authenticates the AWS Key Management Service key asynchronously. Therefore, if
        /// you specify an ID, alias, or ARN that is invalid, the action can appear to complete, but eventually fails.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) identifier of the AWS Key Management Service key to use for Amazon EBS encryption. When encryption is turned on and no AWS Key Management Service key is specified, the default AWS managed key for Amazon EBS volumes is used. This parameter maps 1:1 with the ``KmsKeyId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.   AWS authenticates the AWS Key Management Service key asynchronously. Therefore, if you specify an ID, alias, or ARN that is invalid, the action can appear to complete, but eventually fails.",
        SerializedName = @"kmsKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedEbVolumeKmsKeyId { get; set; }
        /// <summary>
        /// The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure IAM role that is used to
        /// manage your AWS infrastructure. We recommend using the Amazon ECS-managed ``AmazonECSInfrastructureRolePolicyForVolumes``
        /// IAM policy with this role. For more information, see [Amazon ECS infrastructure IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html)
        /// in the *Amazon ECS Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure IAM role that is used to manage your AWS infrastructure. We recommend using the Amazon ECS-managed ``AmazonECSInfrastructureRolePolicyForVolumes`` IAM policy with this role. For more information, see [Amazon ECS infrastructure IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html) in the *Amazon ECS Developer Guide*.",
        SerializedName = @"roleArn",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedEbVolumeRoleArn { get; set; }
        /// <summary>
        /// The size of the volume in GiB. You must specify either a volume size or a snapshot ID. If you specify a snapshot ID, the
        /// snapshot size is used for the volume size by default. You can optionally specify a volume size greater than or equal to
        /// the snapshot size. This parameter maps 1:1 with the ``Size`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*. The following are the supported volume size values for each volume type. + ``gp2``
        /// and ``gp3``: 1-16,384 + ``io1`` and ``io2``: 4-16,384 + ``st1`` and ``sc1``: 125-16,384 + ``standard``: 1-1,024
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size of the volume in GiB. You must specify either a volume size or a snapshot ID. If you specify a snapshot ID, the snapshot size is used for the volume size by default. You can optionally specify a volume size greater than or equal to the snapshot size. This parameter maps 1:1 with the ``Size`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. The following are the supported volume size values for each volume type.  +   ``gp2`` and ``gp3``: 1-16,384  +   ``io1`` and ``io2``: 4-16,384  +   ``st1`` and ``sc1``: 125-16,384  +   ``standard``: 1-1,024",
        SerializedName = @"sizeInGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? ManagedEbVolumeSizeInGiB { get; set; }
        /// <summary>
        /// The snapshot that Amazon ECS uses to create the volume. You must specify either a snapshot ID or a volume size. This parameter
        /// maps 1:1 with the ``SnapshotId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The snapshot that Amazon ECS uses to create the volume. You must specify either a snapshot ID or a volume size. This parameter maps 1:1 with the ``SnapshotId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.",
        SerializedName = @"snapshotId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedEbVolumeSnapshotId { get; set; }
        /// <summary>
        /// The tags to apply to the volume. Amazon ECS applies service-managed tags by default. This parameter maps 1:1 with the
        /// ``TagSpecifications.N`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags to apply to the volume. Amazon ECS applies service-managed tags by default. This parameter maps 1:1 with the ``TagSpecifications.N`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.",
        SerializedName = @"tagSpecifications",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsTagSpecification) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsTagSpecification[] ManagedEbVolumeTagSpecification { get; set; }
        /// <summary>
        /// The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s. This parameter maps 1:1 with the ``Throughput``
        /// parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the
        /// *Amazon EC2 API Reference*. This parameter is only supported for the ``gp3`` volume type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s. This parameter maps 1:1 with the ``Throughput`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*.  This parameter is only supported for the ``gp3`` volume type.",
        SerializedName = @"throughput",
        PossibleTypes = new [] { typeof(int) })]
        int? ManagedEbVolumeThroughput { get; set; }
        /// <summary>
        /// The volume type. This parameter maps 1:1 with the ``VolumeType`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html)
        /// in the *Amazon EC2 User Guide*. The following are the supported volume types. + General Purpose SSD: ``gp2``|``gp3`` +
        /// Provisioned IOPS SSD: ``io1``|``io2`` + Throughput Optimized HDD: ``st1`` + Cold HDD: ``sc1`` + Magnetic: ``standard``
        /// The magnetic volume type is not supported on Fargate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The volume type. This parameter maps 1:1 with the ``VolumeType`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon EC2 API Reference*. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html) in the *Amazon EC2 User Guide*. The following are the supported volume types.  +  General Purpose SSD: ``gp2``|``gp3``   +  Provisioned IOPS SSD: ``io1``|``io2``   +  Throughput Optimized HDD: ``st1``   +  Cold HDD: ``sc1``   +  Magnetic: ``standard``   The magnetic volume type is not supported on Fargate.",
        SerializedName = @"volumeType",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedEbVolumeType { get; set; }
        /// <summary>
        /// The name of the volume. This value must match the volume name from the ``Volume`` object in the task definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the volume. This value must match the volume name from the ``Volume`` object in the task definition.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }

    }
    /// Definition of ServiceVolumeConfiguration
    internal partial interface IServiceVolumeConfigurationInternal

    {
        /// <summary>
        /// Indicates whether the volume should be encrypted. If no value is specified, encryption is turned on by default. This parameter
        /// maps 1:1 with the ``Encrypted`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*.
        /// </summary>
        bool? ManagedEbVolumeEncrypted { get; set; }
        /// <summary>
        /// The Linux filesystem type for the volume. For volumes created from a snapshot, you must specify the same filesystem type
        /// that the volume was using when the snapshot was created. If there is a filesystem type mismatch, the task will fail to
        /// start. The available filesystem types are ``ext3``, ``ext4``, and ``xfs``. If no value is specified, the ``xfs`` filesystem
        /// type is used by default.
        /// </summary>
        string ManagedEbVolumeFilesystemType { get; set; }
        /// <summary>
        /// The number of I/O operations per second (IOPS). For ``gp3``, ``io1``, and ``io2`` volumes, this represents the number
        /// of IOPS that are provisioned for the volume. For ``gp2`` volumes, this represents the baseline performance of the volume
        /// and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each
        /// volume type. + ``gp3``: 3,000 - 16,000 IOPS + ``io1``: 100 - 64,000 IOPS + ``io2``: 100 - 256,000 IOPS This parameter
        /// is required for ``io1`` and ``io2`` volume types. The default for ``gp3`` volumes is ``3,000 IOPS``. This parameter is
        /// not supported for ``st1``, ``sc1``, or ``standard`` volume types. This parameter maps 1:1 with the ``Iops`` parameter
        /// of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the *Amazon
        /// EC2 API Reference*.
        /// </summary>
        int? ManagedEbVolumeIop { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) identifier of the AWS Key Management Service key to use for Amazon EBS encryption. When
        /// encryption is turned on and no AWS Key Management Service key is specified, the default AWS managed key for Amazon EBS
        /// volumes is used. This parameter maps 1:1 with the ``KmsKeyId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*. AWS authenticates the AWS Key Management Service key asynchronously. Therefore, if
        /// you specify an ID, alias, or ARN that is invalid, the action can appear to complete, but eventually fails.
        /// </summary>
        string ManagedEbVolumeKmsKeyId { get; set; }
        /// <summary>
        /// The ARN of the IAM role to associate with this volume. This is the Amazon ECS infrastructure IAM role that is used to
        /// manage your AWS infrastructure. We recommend using the Amazon ECS-managed ``AmazonECSInfrastructureRolePolicyForVolumes``
        /// IAM policy with this role. For more information, see [Amazon ECS infrastructure IAM role](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html)
        /// in the *Amazon ECS Developer Guide*.
        /// </summary>
        string ManagedEbVolumeRoleArn { get; set; }
        /// <summary>
        /// The size of the volume in GiB. You must specify either a volume size or a snapshot ID. If you specify a snapshot ID, the
        /// snapshot size is used for the volume size by default. You can optionally specify a volume size greater than or equal to
        /// the snapshot size. This parameter maps 1:1 with the ``Size`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*. The following are the supported volume size values for each volume type. + ``gp2``
        /// and ``gp3``: 1-16,384 + ``io1`` and ``io2``: 4-16,384 + ``st1`` and ``sc1``: 125-16,384 + ``standard``: 1-1,024
        /// </summary>
        int? ManagedEbVolumeSizeInGiB { get; set; }
        /// <summary>
        /// The snapshot that Amazon ECS uses to create the volume. You must specify either a snapshot ID or a volume size. This parameter
        /// maps 1:1 with the ``SnapshotId`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*.
        /// </summary>
        string ManagedEbVolumeSnapshotId { get; set; }
        /// <summary>
        /// The tags to apply to the volume. Amazon ECS applies service-managed tags by default. This parameter maps 1:1 with the
        /// ``TagSpecifications.N`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsTagSpecification[] ManagedEbVolumeTagSpecification { get; set; }
        /// <summary>
        /// The throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s. This parameter maps 1:1 with the ``Throughput``
        /// parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html) in the
        /// *Amazon EC2 API Reference*. This parameter is only supported for the ``gp3`` volume type.
        /// </summary>
        int? ManagedEbVolumeThroughput { get; set; }
        /// <summary>
        /// The volume type. This parameter maps 1:1 with the ``VolumeType`` parameter of the [CreateVolume API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
        /// in the *Amazon EC2 API Reference*. For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html)
        /// in the *Amazon EC2 User Guide*. The following are the supported volume types. + General Purpose SSD: ``gp2``|``gp3`` +
        /// Provisioned IOPS SSD: ``io1``|``io2`` + Throughput Optimized HDD: ``st1`` + Cold HDD: ``sc1`` + Magnetic: ``standard``
        /// The magnetic volume type is not supported on Fargate.
        /// </summary>
        string ManagedEbVolumeType { get; set; }
        /// <summary>
        /// The configuration for the Amazon EBS volume that Amazon ECS creates and manages on your behalf. These settings are used
        /// to create each Amazon EBS volume, with one volume created for each task in the service. The Amazon EBS volumes are visible
        /// in your account in the Amazon EC2 console once they are created. The configuration for the Amazon EBS volume that Amazon
        /// ECS creates and manages on your behalf. These settings are used to create each Amazon EBS volume, with one volume created
        /// for each task in the service. Many of these parameters map 1:1 with the Amazon EBS ``CreateVolume`` API request parameters.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceManagedEbsVolumeConfiguration ManagedEbsVolume { get; set; }
        /// <summary>
        /// The name of the volume. This value must match the volume name from the ``Volume`` object in the task definition.
        /// </summary>
        string Name { get; set; }

    }
}