// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ConnectionTrackingSpecificationResponse</summary>
    public partial class ConnectionTrackingSpecificationResponse :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponse,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectionTrackingSpecificationResponseInternal
    {

        /// <summary>Backing field for <see cref="TcpEstablishedTimeout" /> property.</summary>
        private int? _tcpEstablishedTimeout;

        /// <summary>
        /// <p>Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days).
        /// Default: 432000 seconds. Recommended: Less than 432000 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? TcpEstablishedTimeout { get => this._tcpEstablishedTimeout; set => this._tcpEstablishedTimeout = value; }

        /// <summary>Backing field for <see cref="UdpStreamTimeout" /> property.</summary>
        private int? _udpStreamTimeout;

        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction.
        /// Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? UdpStreamTimeout { get => this._udpStreamTimeout; set => this._udpStreamTimeout = value; }

        /// <summary>Backing field for <see cref="UdpTimeout" /> property.</summary>
        private int? _udpTimeout;

        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response
        /// transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? UdpTimeout { get => this._udpTimeout; set => this._udpTimeout = value; }

        /// <summary>Creates an new <see cref="ConnectionTrackingSpecificationResponse" /> instance.</summary>
        public ConnectionTrackingSpecificationResponse()
        {

        }
    }
    /// Definition of ConnectionTrackingSpecificationResponse
    public partial interface IConnectionTrackingSpecificationResponse :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days).
        /// Default: 432000 seconds. Recommended: Less than 432000 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days). Default: 432000 seconds. Recommended: Less than 432000 seconds.</p>",
        SerializedName = @"tcpEstablishedTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? TcpEstablishedTimeout { get; set; }
        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction.
        /// Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction. Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.</p>",
        SerializedName = @"udpStreamTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? UdpStreamTimeout { get; set; }
        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response
        /// transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.</p>",
        SerializedName = @"udpTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? UdpTimeout { get; set; }

    }
    /// Definition of ConnectionTrackingSpecificationResponse
    internal partial interface IConnectionTrackingSpecificationResponseInternal

    {
        /// <summary>
        /// <p>Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days).
        /// Default: 432000 seconds. Recommended: Less than 432000 seconds.</p>
        /// </summary>
        int? TcpEstablishedTimeout { get; set; }
        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction.
        /// Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.</p>
        /// </summary>
        int? UdpStreamTimeout { get; set; }
        /// <summary>
        /// <p>Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response
        /// transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.</p>
        /// </summary>
        int? UdpTimeout { get; set; }

    }
}