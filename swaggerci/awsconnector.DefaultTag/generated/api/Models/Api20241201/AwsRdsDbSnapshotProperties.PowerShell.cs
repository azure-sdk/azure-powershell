// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsRdsDBSnapshot</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsRdsDbSnapshotPropertiesTypeConverter))]
    public partial class AwsRdsDbSnapshotProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRdsDbSnapshotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsRdsDbSnapshotProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AllocatedStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).AllocatedStorage = (int?) content.GetValueForProperty("AllocatedStorage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).AllocatedStorage, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).AvailabilityZone = (string) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).AvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("DbInstanceIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbInstanceIdentifier = (string) content.GetValueForProperty("DbInstanceIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbInstanceIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("DbSnapshotArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSnapshotArn = (string) content.GetValueForProperty("DbSnapshotArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSnapshotArn, global::System.Convert.ToString);
            }
            if (content.Contains("DbSnapshotIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSnapshotIdentifier = (string) content.GetValueForProperty("DbSnapshotIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSnapshotIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("DbSystemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSystemId = (string) content.GetValueForProperty("DbSystemId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSystemId, global::System.Convert.ToString);
            }
            if (content.Contains("DbiResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbiResourceId = (string) content.GetValueForProperty("DbiResourceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbiResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("DedicatedLogVolume"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DedicatedLogVolume = (bool?) content.GetValueForProperty("DedicatedLogVolume",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DedicatedLogVolume, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Encrypted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Encrypted = (bool?) content.GetValueForProperty("Encrypted",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Encrypted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Engine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Engine = (string) content.GetValueForProperty("Engine",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Engine, global::System.Convert.ToString);
            }
            if (content.Contains("EngineVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).EngineVersion = (string) content.GetValueForProperty("EngineVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).EngineVersion, global::System.Convert.ToString);
            }
            if (content.Contains("IamDatabaseAuthenticationEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).IamDatabaseAuthenticationEnabled = (bool?) content.GetValueForProperty("IamDatabaseAuthenticationEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).IamDatabaseAuthenticationEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("InstanceCreateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).InstanceCreateTime = (global::System.DateTime?) content.GetValueForProperty("InstanceCreateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).InstanceCreateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Iop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Iop = (int?) content.GetValueForProperty("Iop",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Iop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).KmsKeyId = (string) content.GetValueForProperty("KmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).KmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("LicenseModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).LicenseModel = (string) content.GetValueForProperty("LicenseModel",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).LicenseModel, global::System.Convert.ToString);
            }
            if (content.Contains("MasterUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).MasterUsername = (string) content.GetValueForProperty("MasterUsername",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).MasterUsername, global::System.Convert.ToString);
            }
            if (content.Contains("MultiTenant"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).MultiTenant = (bool?) content.GetValueForProperty("MultiTenant",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).MultiTenant, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("OptionGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).OptionGroupName = (string) content.GetValueForProperty("OptionGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).OptionGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("OriginalSnapshotCreateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).OriginalSnapshotCreateTime = (global::System.DateTime?) content.GetValueForProperty("OriginalSnapshotCreateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).OriginalSnapshotCreateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PercentProgress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).PercentProgress = (int?) content.GetValueForProperty("PercentProgress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).PercentProgress, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Port"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Port = (int?) content.GetValueForProperty("Port",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Port, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ProcessorFeature"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).ProcessorFeature = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProcessorFeatureAutoGenerated[]) content.GetValueForProperty("ProcessorFeature",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).ProcessorFeature, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProcessorFeatureAutoGenerated>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProcessorFeatureAutoGeneratedTypeConverter.ConvertFrom));
            }
            if (content.Contains("SnapshotCreateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotCreateTime = (global::System.DateTime?) content.GetValueForProperty("SnapshotCreateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotCreateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SnapshotDatabaseTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotDatabaseTime = (global::System.DateTime?) content.GetValueForProperty("SnapshotDatabaseTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotDatabaseTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SnapshotTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotTarget = (string) content.GetValueForProperty("SnapshotTarget",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotTarget, global::System.Convert.ToString);
            }
            if (content.Contains("SnapshotType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotType = (string) content.GetValueForProperty("SnapshotType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotType, global::System.Convert.ToString);
            }
            if (content.Contains("SourceDbSnapshotIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SourceDbSnapshotIdentifier = (string) content.GetValueForProperty("SourceDbSnapshotIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SourceDbSnapshotIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("SourceRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SourceRegion = (string) content.GetValueForProperty("SourceRegion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SourceRegion, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Status = (string) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("StorageThroughput"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).StorageThroughput = (int?) content.GetValueForProperty("StorageThroughput",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).StorageThroughput, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).StorageType = (string) content.GetValueForProperty("StorageType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).StorageType, global::System.Convert.ToString);
            }
            if (content.Contains("TagList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).TagList = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated48[]) content.GetValueForProperty("TagList",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).TagList, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated48>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated48TypeConverter.ConvertFrom));
            }
            if (content.Contains("TdeCredentialArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).TdeCredentialArn = (string) content.GetValueForProperty("TdeCredentialArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).TdeCredentialArn, global::System.Convert.ToString);
            }
            if (content.Contains("Timezone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Timezone = (string) content.GetValueForProperty("Timezone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Timezone, global::System.Convert.ToString);
            }
            if (content.Contains("VpcId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).VpcId = (string) content.GetValueForProperty("VpcId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).VpcId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRdsDbSnapshotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsRdsDbSnapshotProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AllocatedStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).AllocatedStorage = (int?) content.GetValueForProperty("AllocatedStorage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).AllocatedStorage, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).AvailabilityZone = (string) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).AvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("DbInstanceIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbInstanceIdentifier = (string) content.GetValueForProperty("DbInstanceIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbInstanceIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("DbSnapshotArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSnapshotArn = (string) content.GetValueForProperty("DbSnapshotArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSnapshotArn, global::System.Convert.ToString);
            }
            if (content.Contains("DbSnapshotIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSnapshotIdentifier = (string) content.GetValueForProperty("DbSnapshotIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSnapshotIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("DbSystemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSystemId = (string) content.GetValueForProperty("DbSystemId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbSystemId, global::System.Convert.ToString);
            }
            if (content.Contains("DbiResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbiResourceId = (string) content.GetValueForProperty("DbiResourceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DbiResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("DedicatedLogVolume"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DedicatedLogVolume = (bool?) content.GetValueForProperty("DedicatedLogVolume",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).DedicatedLogVolume, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Encrypted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Encrypted = (bool?) content.GetValueForProperty("Encrypted",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Encrypted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Engine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Engine = (string) content.GetValueForProperty("Engine",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Engine, global::System.Convert.ToString);
            }
            if (content.Contains("EngineVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).EngineVersion = (string) content.GetValueForProperty("EngineVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).EngineVersion, global::System.Convert.ToString);
            }
            if (content.Contains("IamDatabaseAuthenticationEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).IamDatabaseAuthenticationEnabled = (bool?) content.GetValueForProperty("IamDatabaseAuthenticationEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).IamDatabaseAuthenticationEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("InstanceCreateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).InstanceCreateTime = (global::System.DateTime?) content.GetValueForProperty("InstanceCreateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).InstanceCreateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Iop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Iop = (int?) content.GetValueForProperty("Iop",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Iop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).KmsKeyId = (string) content.GetValueForProperty("KmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).KmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("LicenseModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).LicenseModel = (string) content.GetValueForProperty("LicenseModel",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).LicenseModel, global::System.Convert.ToString);
            }
            if (content.Contains("MasterUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).MasterUsername = (string) content.GetValueForProperty("MasterUsername",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).MasterUsername, global::System.Convert.ToString);
            }
            if (content.Contains("MultiTenant"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).MultiTenant = (bool?) content.GetValueForProperty("MultiTenant",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).MultiTenant, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("OptionGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).OptionGroupName = (string) content.GetValueForProperty("OptionGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).OptionGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("OriginalSnapshotCreateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).OriginalSnapshotCreateTime = (global::System.DateTime?) content.GetValueForProperty("OriginalSnapshotCreateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).OriginalSnapshotCreateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PercentProgress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).PercentProgress = (int?) content.GetValueForProperty("PercentProgress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).PercentProgress, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Port"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Port = (int?) content.GetValueForProperty("Port",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Port, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ProcessorFeature"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).ProcessorFeature = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProcessorFeatureAutoGenerated[]) content.GetValueForProperty("ProcessorFeature",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).ProcessorFeature, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IProcessorFeatureAutoGenerated>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ProcessorFeatureAutoGeneratedTypeConverter.ConvertFrom));
            }
            if (content.Contains("SnapshotCreateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotCreateTime = (global::System.DateTime?) content.GetValueForProperty("SnapshotCreateTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotCreateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SnapshotDatabaseTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotDatabaseTime = (global::System.DateTime?) content.GetValueForProperty("SnapshotDatabaseTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotDatabaseTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SnapshotTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotTarget = (string) content.GetValueForProperty("SnapshotTarget",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotTarget, global::System.Convert.ToString);
            }
            if (content.Contains("SnapshotType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotType = (string) content.GetValueForProperty("SnapshotType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SnapshotType, global::System.Convert.ToString);
            }
            if (content.Contains("SourceDbSnapshotIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SourceDbSnapshotIdentifier = (string) content.GetValueForProperty("SourceDbSnapshotIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SourceDbSnapshotIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("SourceRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SourceRegion = (string) content.GetValueForProperty("SourceRegion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).SourceRegion, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Status = (string) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("StorageThroughput"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).StorageThroughput = (int?) content.GetValueForProperty("StorageThroughput",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).StorageThroughput, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).StorageType = (string) content.GetValueForProperty("StorageType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).StorageType, global::System.Convert.ToString);
            }
            if (content.Contains("TagList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).TagList = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated48[]) content.GetValueForProperty("TagList",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).TagList, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated48>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated48TypeConverter.ConvertFrom));
            }
            if (content.Contains("TdeCredentialArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).TdeCredentialArn = (string) content.GetValueForProperty("TdeCredentialArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).TdeCredentialArn, global::System.Convert.ToString);
            }
            if (content.Contains("Timezone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Timezone = (string) content.GetValueForProperty("Timezone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).Timezone, global::System.Convert.ToString);
            }
            if (content.Contains("VpcId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).VpcId = (string) content.GetValueForProperty("VpcId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotPropertiesInternal)this).VpcId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRdsDbSnapshotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsRdsDbSnapshotProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRdsDbSnapshotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsRdsDbSnapshotProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsRdsDbSnapshotProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsRdsDbSnapshotProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbSnapshotProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsRdsDBSnapshot
    [System.ComponentModel.TypeConverter(typeof(AwsRdsDbSnapshotPropertiesTypeConverter))]
    public partial interface IAwsRdsDbSnapshotProperties

    {

    }
}