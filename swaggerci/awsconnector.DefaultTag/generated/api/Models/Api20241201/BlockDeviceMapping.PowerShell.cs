// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of BlockDeviceMapping</summary>
    [System.ComponentModel.TypeConverter(typeof(BlockDeviceMappingTypeConverter))]
    public partial class BlockDeviceMapping
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BlockDeviceMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal BlockDeviceMapping(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Eb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).Eb = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDevice) content.GetValueForProperty("Eb",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).Eb, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EbsBlockDeviceTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeviceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).DeviceName = (string) content.GetValueForProperty("DeviceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).DeviceName, global::System.Convert.ToString);
            }
            if (content.Contains("NoDevice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).NoDevice = (string) content.GetValueForProperty("NoDevice",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).NoDevice, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).VirtualName = (string) content.GetValueForProperty("VirtualName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).VirtualName, global::System.Convert.ToString);
            }
            if (content.Contains("EbVolumeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbVolumeType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeTypeEnumValue) content.GetValueForProperty("EbVolumeType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbVolumeType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VolumeTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("EbDeleteOnTermination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbDeleteOnTermination = (bool?) content.GetValueForProperty("EbDeleteOnTermination",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbDeleteOnTermination, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EbEncrypted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbEncrypted = (bool?) content.GetValueForProperty("EbEncrypted",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbEncrypted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EbIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbIop = (int?) content.GetValueForProperty("EbIop",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbIop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EbKmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbKmsKeyId = (string) content.GetValueForProperty("EbKmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbKmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("EbOutpostArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbOutpostArn = (string) content.GetValueForProperty("EbOutpostArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbOutpostArn, global::System.Convert.ToString);
            }
            if (content.Contains("EbSnapshotId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbSnapshotId = (string) content.GetValueForProperty("EbSnapshotId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbSnapshotId, global::System.Convert.ToString);
            }
            if (content.Contains("EbThroughput"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbThroughput = (int?) content.GetValueForProperty("EbThroughput",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbThroughput, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EbVolumeSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbVolumeSize = (int?) content.GetValueForProperty("EbVolumeSize",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbVolumeSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VolumeTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).VolumeTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType?) content.GetValueForProperty("VolumeTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).VolumeTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BlockDeviceMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal BlockDeviceMapping(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Eb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).Eb = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEbsBlockDevice) content.GetValueForProperty("Eb",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).Eb, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EbsBlockDeviceTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeviceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).DeviceName = (string) content.GetValueForProperty("DeviceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).DeviceName, global::System.Convert.ToString);
            }
            if (content.Contains("NoDevice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).NoDevice = (string) content.GetValueForProperty("NoDevice",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).NoDevice, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).VirtualName = (string) content.GetValueForProperty("VirtualName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).VirtualName, global::System.Convert.ToString);
            }
            if (content.Contains("EbVolumeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbVolumeType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeTypeEnumValue) content.GetValueForProperty("EbVolumeType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbVolumeType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VolumeTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("EbDeleteOnTermination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbDeleteOnTermination = (bool?) content.GetValueForProperty("EbDeleteOnTermination",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbDeleteOnTermination, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EbEncrypted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbEncrypted = (bool?) content.GetValueForProperty("EbEncrypted",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbEncrypted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EbIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbIop = (int?) content.GetValueForProperty("EbIop",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbIop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EbKmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbKmsKeyId = (string) content.GetValueForProperty("EbKmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbKmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("EbOutpostArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbOutpostArn = (string) content.GetValueForProperty("EbOutpostArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbOutpostArn, global::System.Convert.ToString);
            }
            if (content.Contains("EbSnapshotId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbSnapshotId = (string) content.GetValueForProperty("EbSnapshotId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbSnapshotId, global::System.Convert.ToString);
            }
            if (content.Contains("EbThroughput"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbThroughput = (int?) content.GetValueForProperty("EbThroughput",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbThroughput, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EbVolumeSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbVolumeSize = (int?) content.GetValueForProperty("EbVolumeSize",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).EbVolumeSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VolumeTypeValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).VolumeTypeValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType?) content.GetValueForProperty("VolumeTypeValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMappingInternal)this).VolumeTypeValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VolumeType.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BlockDeviceMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new BlockDeviceMapping(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BlockDeviceMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new BlockDeviceMapping(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="BlockDeviceMapping" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="BlockDeviceMapping" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IBlockDeviceMapping FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of BlockDeviceMapping
    [System.ComponentModel.TypeConverter(typeof(BlockDeviceMappingTypeConverter))]
    public partial interface IBlockDeviceMapping

    {

    }
}