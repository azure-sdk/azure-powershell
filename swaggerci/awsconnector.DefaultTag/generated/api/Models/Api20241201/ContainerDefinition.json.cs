// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ContainerDefinition</summary>
    public partial class ContainerDefinition
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject into a new instance of <see cref="ContainerDefinition" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ContainerDefinition(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_firelensConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("firelensConfiguration"), out var __jsonFirelensConfiguration) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.FirelensConfiguration.FromJson(__jsonFirelensConfiguration) : FirelensConfiguration;}
            {_healthCheck = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("healthCheck"), out var __jsonHealthCheck) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HealthCheck.FromJson(__jsonHealthCheck) : HealthCheck;}
            {_linuxParameter = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("linuxParameters"), out var __jsonLinuxParameters) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LinuxParameters.FromJson(__jsonLinuxParameters) : LinuxParameter;}
            {_logConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("logConfiguration"), out var __jsonLogConfiguration) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogConfiguration.FromJson(__jsonLogConfiguration) : LogConfiguration;}
            {_repositoryCredentials = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("repositoryCredentials"), out var __jsonRepositoryCredentials) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RepositoryCredentials.FromJson(__jsonRepositoryCredentials) : RepositoryCredentials;}
            {_command = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("command"), out var __jsonCommand) ? If( __jsonCommand as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : Command;}
            {_cpu = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("cpu"), out var __jsonCpu) ? (int?)__jsonCpu : Cpu;}
            {_credentialSpec = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("credentialSpecs"), out var __jsonCredentialSpecs) ? If( __jsonCredentialSpecs as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(string) (__p is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __o ? (string)(__o.ToString()) : null)) ))() : null : CredentialSpec;}
            {_dependsOn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("dependsOn"), out var __jsonDependsOn) ? If( __jsonDependsOn as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDependency[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDependency) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ContainerDependency.FromJson(__k) )) ))() : null : DependsOn;}
            {_disableNetworking = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("disableNetworking"), out var __jsonDisableNetworking) ? (bool?)__jsonDisableNetworking : DisableNetworking;}
            {_dnsSearchDomain = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("dnsSearchDomains"), out var __jsonDnsSearchDomains) ? If( __jsonDnsSearchDomains as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(string) (__f is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __e ? (string)(__e.ToString()) : null)) ))() : null : DnsSearchDomain;}
            {_dnsServer = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("dnsServers"), out var __jsonDnsServers) ? If( __jsonDnsServers as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__b, (__a)=>(string) (__a is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString ___z ? (string)(___z.ToString()) : null)) ))() : null : DnsServer;}
            {_dockerLabel = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("dockerLabels"), out var __jsonDockerLabels) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Any.FromJson(__jsonDockerLabels) : DockerLabel;}
            {_dockerSecurityOption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("dockerSecurityOptions"), out var __jsonDockerSecurityOptions) ? If( __jsonDockerSecurityOptions as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ___w) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___w, (___v)=>(string) (___v is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString ___u ? (string)(___u.ToString()) : null)) ))() : null : DockerSecurityOption;}
            {_entryPoint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("entryPoint"), out var __jsonEntryPoint) ? If( __jsonEntryPoint as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ___r) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___r, (___q)=>(string) (___q is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString ___p ? (string)(___p.ToString()) : null)) ))() : null : EntryPoint;}
            {_environment = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("environment"), out var __jsonEnvironment) ? If( __jsonEnvironment as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ___m) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___m, (___l)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKeyValuePair) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KeyValuePair.FromJson(___l) )) ))() : null : Environment;}
            {_environmentFile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("environmentFiles"), out var __jsonEnvironmentFiles) ? If( __jsonEnvironmentFiles as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ___h) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentFile[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___h, (___g)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEnvironmentFile) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EnvironmentFile.FromJson(___g) )) ))() : null : EnvironmentFile;}
            {_essential = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("essential"), out var __jsonEssential) ? (bool?)__jsonEssential : Essential;}
            {_extraHost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("extraHosts"), out var __jsonExtraHosts) ? If( __jsonExtraHosts as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ___c) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostEntry[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___c, (___b)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IHostEntry) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.HostEntry.FromJson(___b) )) ))() : null : ExtraHost;}
            {_hostname = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("hostname"), out var __jsonHostname) ? (string)__jsonHostname : (string)Hostname;}
            {_image = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("image"), out var __jsonImage) ? (string)__jsonImage : (string)Image;}
            {_interactive = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("interactive"), out var __jsonInteractive) ? (bool?)__jsonInteractive : Interactive;}
            {_link = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("links"), out var __jsonLinks) ? If( __jsonLinks as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ____x) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(____x, (____w)=>(string) (____w is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString ____v ? (string)(____v.ToString()) : null)) ))() : null : Link;}
            {_memory = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("memory"), out var __jsonMemory) ? (int?)__jsonMemory : Memory;}
            {_memoryReservation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("memoryReservation"), out var __jsonMemoryReservation) ? (int?)__jsonMemoryReservation : MemoryReservation;}
            {_mountPoint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("mountPoints"), out var __jsonMountPoints) ? If( __jsonMountPoints as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ____s) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(____s, (____r)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMountPoint) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MountPoint.FromJson(____r) )) ))() : null : MountPoint;}
            {_name = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("name"), out var __jsonName) ? (string)__jsonName : (string)Name;}
            {_portMapping = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("portMappings"), out var __jsonPortMappings) ? If( __jsonPortMappings as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ____n) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPortMapping[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(____n, (____m)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPortMapping) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PortMapping.FromJson(____m) )) ))() : null : PortMapping;}
            {_privileged = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("privileged"), out var __jsonPrivileged) ? (bool?)__jsonPrivileged : Privileged;}
            {_pseudoTerminal = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("pseudoTerminal"), out var __jsonPseudoTerminal) ? (bool?)__jsonPseudoTerminal : PseudoTerminal;}
            {_readonlyRootFilesystem = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("readonlyRootFilesystem"), out var __jsonReadonlyRootFilesystem) ? (bool?)__jsonReadonlyRootFilesystem : ReadonlyRootFilesystem;}
            {_resourceRequirement = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("resourceRequirements"), out var __jsonResourceRequirements) ? If( __jsonResourceRequirements as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ____i) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceRequirement[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(____i, (____h)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IResourceRequirement) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ResourceRequirement.FromJson(____h) )) ))() : null : ResourceRequirement;}
            {_secret = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("secrets"), out var __jsonSecrets) ? If( __jsonSecrets as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ____d) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(____d, (____c)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Secret.FromJson(____c) )) ))() : null : Secret;}
            {_startTimeout = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("startTimeout"), out var __jsonStartTimeout) ? (int?)__jsonStartTimeout : StartTimeout;}
            {_stopTimeout = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("stopTimeout"), out var __jsonStopTimeout) ? (int?)__jsonStopTimeout : StopTimeout;}
            {_systemControl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("systemControls"), out var __jsonSystemControls) ? If( __jsonSystemControls as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var _____y) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISystemControl[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(_____y, (_____x)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISystemControl) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SystemControl.FromJson(_____x) )) ))() : null : SystemControl;}
            {_ulimit = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("ulimits"), out var __jsonUlimits) ? If( __jsonUlimits as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var _____t) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUlimit[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(_____t, (_____s)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IUlimit) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Ulimit.FromJson(_____s) )) ))() : null : Ulimit;}
            {_user = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("user"), out var __jsonUser) ? (string)__jsonUser : (string)User;}
            {_volumesFrom = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("volumesFrom"), out var __jsonVolumesFrom) ? If( __jsonVolumesFrom as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var _____o) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeFrom[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(_____o, (_____n)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVolumeFrom) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VolumeFrom.FromJson(_____n) )) ))() : null : VolumesFrom;}
            {_workingDirectory = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("workingDirectory"), out var __jsonWorkingDirectory) ? (string)__jsonWorkingDirectory : (string)WorkingDirectory;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IContainerDefinition FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json ? new ContainerDefinition(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="ContainerDefinition" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ContainerDefinition" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._firelensConfiguration ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._firelensConfiguration.ToJson(null,serializationMode) : null, "firelensConfiguration" ,container.Add );
            AddIf( null != this._healthCheck ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._healthCheck.ToJson(null,serializationMode) : null, "healthCheck" ,container.Add );
            AddIf( null != this._linuxParameter ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._linuxParameter.ToJson(null,serializationMode) : null, "linuxParameters" ,container.Add );
            AddIf( null != this._logConfiguration ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._logConfiguration.ToJson(null,serializationMode) : null, "logConfiguration" ,container.Add );
            AddIf( null != this._repositoryCredentials ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._repositoryCredentials.ToJson(null,serializationMode) : null, "repositoryCredentials" ,container.Add );
            if (null != this._command)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __x in this._command )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("command",__w);
            }
            AddIf( null != this._cpu ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._cpu) : null, "cpu" ,container.Add );
            if (null != this._credentialSpec)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __s in this._credentialSpec )
                {
                    AddIf(null != (((object)__s)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__s.ToString()) : null ,__r.Add);
                }
                container.Add("credentialSpecs",__r);
            }
            if (null != this._dependsOn)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __n in this._dependsOn )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("dependsOn",__m);
            }
            AddIf( null != this._disableNetworking ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._disableNetworking) : null, "disableNetworking" ,container.Add );
            if (null != this._dnsSearchDomain)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __i in this._dnsSearchDomain )
                {
                    AddIf(null != (((object)__i)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__i.ToString()) : null ,__h.Add);
                }
                container.Add("dnsSearchDomains",__h);
            }
            if (null != this._dnsServer)
            {
                var __c = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __d in this._dnsServer )
                {
                    AddIf(null != (((object)__d)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__d.ToString()) : null ,__c.Add);
                }
                container.Add("dnsServers",__c);
            }
            AddIf( null != this._dockerLabel ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._dockerLabel.ToJson(null,serializationMode) : null, "dockerLabels" ,container.Add );
            if (null != this._dockerSecurityOption)
            {
                var ___x = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ___y in this._dockerSecurityOption )
                {
                    AddIf(null != (((object)___y)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(___y.ToString()) : null ,___x.Add);
                }
                container.Add("dockerSecurityOptions",___x);
            }
            if (null != this._entryPoint)
            {
                var ___s = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ___t in this._entryPoint )
                {
                    AddIf(null != (((object)___t)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(___t.ToString()) : null ,___s.Add);
                }
                container.Add("entryPoint",___s);
            }
            if (null != this._environment)
            {
                var ___n = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ___o in this._environment )
                {
                    AddIf(___o?.ToJson(null, serializationMode) ,___n.Add);
                }
                container.Add("environment",___n);
            }
            if (null != this._environmentFile)
            {
                var ___i = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ___j in this._environmentFile )
                {
                    AddIf(___j?.ToJson(null, serializationMode) ,___i.Add);
                }
                container.Add("environmentFiles",___i);
            }
            AddIf( null != this._essential ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._essential) : null, "essential" ,container.Add );
            if (null != this._extraHost)
            {
                var ___d = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ___e in this._extraHost )
                {
                    AddIf(___e?.ToJson(null, serializationMode) ,___d.Add);
                }
                container.Add("extraHosts",___d);
            }
            AddIf( null != (((object)this._hostname)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._hostname.ToString()) : null, "hostname" ,container.Add );
            AddIf( null != (((object)this._image)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._image.ToString()) : null, "image" ,container.Add );
            AddIf( null != this._interactive ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._interactive) : null, "interactive" ,container.Add );
            if (null != this._link)
            {
                var ____y = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ____z in this._link )
                {
                    AddIf(null != (((object)____z)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(____z.ToString()) : null ,____y.Add);
                }
                container.Add("links",____y);
            }
            AddIf( null != this._memory ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._memory) : null, "memory" ,container.Add );
            AddIf( null != this._memoryReservation ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._memoryReservation) : null, "memoryReservation" ,container.Add );
            if (null != this._mountPoint)
            {
                var ____t = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ____u in this._mountPoint )
                {
                    AddIf(____u?.ToJson(null, serializationMode) ,____t.Add);
                }
                container.Add("mountPoints",____t);
            }
            AddIf( null != (((object)this._name)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._name.ToString()) : null, "name" ,container.Add );
            if (null != this._portMapping)
            {
                var ____o = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ____p in this._portMapping )
                {
                    AddIf(____p?.ToJson(null, serializationMode) ,____o.Add);
                }
                container.Add("portMappings",____o);
            }
            AddIf( null != this._privileged ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._privileged) : null, "privileged" ,container.Add );
            AddIf( null != this._pseudoTerminal ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._pseudoTerminal) : null, "pseudoTerminal" ,container.Add );
            AddIf( null != this._readonlyRootFilesystem ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._readonlyRootFilesystem) : null, "readonlyRootFilesystem" ,container.Add );
            if (null != this._resourceRequirement)
            {
                var ____j = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ____k in this._resourceRequirement )
                {
                    AddIf(____k?.ToJson(null, serializationMode) ,____j.Add);
                }
                container.Add("resourceRequirements",____j);
            }
            if (null != this._secret)
            {
                var ____e = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ____f in this._secret )
                {
                    AddIf(____f?.ToJson(null, serializationMode) ,____e.Add);
                }
                container.Add("secrets",____e);
            }
            AddIf( null != this._startTimeout ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._startTimeout) : null, "startTimeout" ,container.Add );
            AddIf( null != this._stopTimeout ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._stopTimeout) : null, "stopTimeout" ,container.Add );
            if (null != this._systemControl)
            {
                var _____z = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ____a in this._systemControl )
                {
                    AddIf(____a?.ToJson(null, serializationMode) ,_____z.Add);
                }
                container.Add("systemControls",_____z);
            }
            if (null != this._ulimit)
            {
                var _____u = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var _____v in this._ulimit )
                {
                    AddIf(_____v?.ToJson(null, serializationMode) ,_____u.Add);
                }
                container.Add("ulimits",_____u);
            }
            AddIf( null != (((object)this._user)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._user.ToString()) : null, "user" ,container.Add );
            if (null != this._volumesFrom)
            {
                var _____p = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var _____q in this._volumesFrom )
                {
                    AddIf(_____q?.ToJson(null, serializationMode) ,_____p.Add);
                }
                container.Add("volumesFrom",_____p);
            }
            AddIf( null != (((object)this._workingDirectory)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._workingDirectory.ToString()) : null, "workingDirectory" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}