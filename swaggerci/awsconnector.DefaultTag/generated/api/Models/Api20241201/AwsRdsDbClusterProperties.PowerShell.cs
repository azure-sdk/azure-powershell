// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsRdsDBCluster</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsRdsDbClusterPropertiesTypeConverter))]
    public partial class AwsRdsDbClusterProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRdsDbClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsRdsDbClusterProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Endpoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpointAutoGenerated) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Endpoint, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EndpointAutoGeneratedTypeConverter.ConvertFrom);
            }
            if (content.Contains("MasterUserSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecret = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMasterUserSecret) content.GetValueForProperty("MasterUserSecret",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecret, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MasterUserSecretTypeConverter.ConvertFrom);
            }
            if (content.Contains("ReadEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReadEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReadEndpoint) content.GetValueForProperty("ReadEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReadEndpoint, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ReadEndpointTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScalingConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfiguration) content.GetValueForProperty("ScalingConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ScalingConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServerlessV2ScalingConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerlessV2ScalingConfiguration) content.GetValueForProperty("ServerlessV2ScalingConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServerlessV2ScalingConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AllocatedStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AllocatedStorage = (int?) content.GetValueForProperty("AllocatedStorage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AllocatedStorage, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AssociatedRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AssociatedRole = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDbClusterRole[]) content.GetValueForProperty("AssociatedRole",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AssociatedRole, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDbClusterRole>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DbClusterRoleTypeConverter.ConvertFrom));
            }
            if (content.Contains("AutoMinorVersionUpgrade"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AutoMinorVersionUpgrade = (bool?) content.GetValueForProperty("AutoMinorVersionUpgrade",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AutoMinorVersionUpgrade, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AvailabilityZone = (string[]) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AvailabilityZone, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BacktrackWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).BacktrackWindow = (int?) content.GetValueForProperty("BacktrackWindow",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).BacktrackWindow, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("BackupRetentionPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).BackupRetentionPeriod = (int?) content.GetValueForProperty("BackupRetentionPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).BackupRetentionPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CopyTagsToSnapshot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).CopyTagsToSnapshot = (bool?) content.GetValueForProperty("CopyTagsToSnapshot",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).CopyTagsToSnapshot, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DbClusterArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterArn = (string) content.GetValueForProperty("DbClusterArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterArn, global::System.Convert.ToString);
            }
            if (content.Contains("DbClusterIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterIdentifier = (string) content.GetValueForProperty("DbClusterIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("DbClusterInstanceClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterInstanceClass = (string) content.GetValueForProperty("DbClusterInstanceClass",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterInstanceClass, global::System.Convert.ToString);
            }
            if (content.Contains("DbClusterParameterGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterParameterGroupName = (string) content.GetValueForProperty("DbClusterParameterGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterParameterGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("DbClusterResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterResourceId = (string) content.GetValueForProperty("DbClusterResourceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("DbInstanceParameterGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbInstanceParameterGroupName = (string) content.GetValueForProperty("DbInstanceParameterGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbInstanceParameterGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("DbSubnetGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbSubnetGroupName = (string) content.GetValueForProperty("DbSubnetGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbSubnetGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("DbSystemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbSystemId = (string) content.GetValueForProperty("DbSystemId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbSystemId, global::System.Convert.ToString);
            }
            if (content.Contains("DatabaseName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DatabaseName = (string) content.GetValueForProperty("DatabaseName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DatabaseName, global::System.Convert.ToString);
            }
            if (content.Contains("DeletionProtection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DeletionProtection = (bool?) content.GetValueForProperty("DeletionProtection",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DeletionProtection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Domain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Domain = (string) content.GetValueForProperty("Domain",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Domain, global::System.Convert.ToString);
            }
            if (content.Contains("DomainIamRoleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DomainIamRoleName = (string) content.GetValueForProperty("DomainIamRoleName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DomainIamRoleName, global::System.Convert.ToString);
            }
            if (content.Contains("EnableCloudwatchLogsExport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableCloudwatchLogsExport = (string[]) content.GetValueForProperty("EnableCloudwatchLogsExport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableCloudwatchLogsExport, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EnableGlobalWriteForwarding"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableGlobalWriteForwarding = (bool?) content.GetValueForProperty("EnableGlobalWriteForwarding",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableGlobalWriteForwarding, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableHttpEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableHttpEndpoint = (bool?) content.GetValueForProperty("EnableHttpEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableHttpEndpoint, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableIamDatabaseAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableIamDatabaseAuthentication = (bool?) content.GetValueForProperty("EnableIamDatabaseAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableIamDatabaseAuthentication, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Engine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Engine = (string) content.GetValueForProperty("Engine",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Engine, global::System.Convert.ToString);
            }
            if (content.Contains("EngineMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EngineMode = (string) content.GetValueForProperty("EngineMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EngineMode, global::System.Convert.ToString);
            }
            if (content.Contains("EngineVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EngineVersion = (string) content.GetValueForProperty("EngineVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EngineVersion, global::System.Convert.ToString);
            }
            if (content.Contains("GlobalClusterIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).GlobalClusterIdentifier = (string) content.GetValueForProperty("GlobalClusterIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).GlobalClusterIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("Iop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Iop = (int?) content.GetValueForProperty("Iop",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Iop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).KmsKeyId = (string) content.GetValueForProperty("KmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).KmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("ManageMasterUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ManageMasterUserPassword = (bool?) content.GetValueForProperty("ManageMasterUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ManageMasterUserPassword, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MasterUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserPassword = (string) content.GetValueForProperty("MasterUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserPassword, global::System.Convert.ToString);
            }
            if (content.Contains("MasterUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUsername = (string) content.GetValueForProperty("MasterUsername",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUsername, global::System.Convert.ToString);
            }
            if (content.Contains("MonitoringInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MonitoringInterval = (int?) content.GetValueForProperty("MonitoringInterval",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MonitoringInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MonitoringRoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MonitoringRoleArn = (string) content.GetValueForProperty("MonitoringRoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MonitoringRoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).NetworkType = (string) content.GetValueForProperty("NetworkType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).NetworkType, global::System.Convert.ToString);
            }
            if (content.Contains("PerformanceInsightsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsEnabled = (bool?) content.GetValueForProperty("PerformanceInsightsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PerformanceInsightsKmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsKmsKeyId = (string) content.GetValueForProperty("PerformanceInsightsKmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsKmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("PerformanceInsightsRetentionPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsRetentionPeriod = (int?) content.GetValueForProperty("PerformanceInsightsRetentionPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsRetentionPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Port"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Port = (int?) content.GetValueForProperty("Port",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Port, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PreferredBackupWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PreferredBackupWindow = (string) content.GetValueForProperty("PreferredBackupWindow",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PreferredBackupWindow, global::System.Convert.ToString);
            }
            if (content.Contains("PreferredMaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PreferredMaintenanceWindow = (string) content.GetValueForProperty("PreferredMaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PreferredMaintenanceWindow, global::System.Convert.ToString);
            }
            if (content.Contains("PubliclyAccessible"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PubliclyAccessible = (bool?) content.GetValueForProperty("PubliclyAccessible",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PubliclyAccessible, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ReplicationSourceIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReplicationSourceIdentifier = (string) content.GetValueForProperty("ReplicationSourceIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReplicationSourceIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreToTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).RestoreToTime = (string) content.GetValueForProperty("RestoreToTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).RestoreToTime, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).RestoreType = (string) content.GetValueForProperty("RestoreType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).RestoreType, global::System.Convert.ToString);
            }
            if (content.Contains("SnapshotIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SnapshotIdentifier = (string) content.GetValueForProperty("SnapshotIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SnapshotIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("SourceDbClusterIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SourceDbClusterIdentifier = (string) content.GetValueForProperty("SourceDbClusterIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SourceDbClusterIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("SourceRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SourceRegion = (string) content.GetValueForProperty("SourceRegion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SourceRegion, global::System.Convert.ToString);
            }
            if (content.Contains("StorageEncrypted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageEncrypted = (bool?) content.GetValueForProperty("StorageEncrypted",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageEncrypted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("StorageThroughput"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageThroughput = (int?) content.GetValueForProperty("StorageThroughput",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageThroughput, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageType = (string) content.GetValueForProperty("StorageType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageType, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated46[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated46>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated46TypeConverter.ConvertFrom));
            }
            if (content.Contains("UseLatestRestorableTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).UseLatestRestorableTime = (bool?) content.GetValueForProperty("UseLatestRestorableTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).UseLatestRestorableTime, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VpcSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).VpcSecurityGroupId = (string[]) content.GetValueForProperty("VpcSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).VpcSecurityGroupId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EndpointAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EndpointAddress = (string) content.GetValueForProperty("EndpointAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EndpointAddress, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EndpointPort = (string) content.GetValueForProperty("EndpointPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EndpointPort, global::System.Convert.ToString);
            }
            if (content.Contains("ReadEndpointAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReadEndpointAddress = (string) content.GetValueForProperty("ReadEndpointAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReadEndpointAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ScalingConfigurationMaxCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationMaxCapacity = (int?) content.GetValueForProperty("ScalingConfigurationMaxCapacity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationMaxCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScalingConfigurationMinCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationMinCapacity = (int?) content.GetValueForProperty("ScalingConfigurationMinCapacity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationMinCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScalingConfigurationTimeoutAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationTimeoutAction = (string) content.GetValueForProperty("ScalingConfigurationTimeoutAction",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationTimeoutAction, global::System.Convert.ToString);
            }
            if (content.Contains("ServerlessV2ScalingConfigurationMaxCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfigurationMaxCapacity = (float?) content.GetValueForProperty("ServerlessV2ScalingConfigurationMaxCapacity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfigurationMaxCapacity, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ServerlessV2ScalingConfigurationMinCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfigurationMinCapacity = (float?) content.GetValueForProperty("ServerlessV2ScalingConfigurationMinCapacity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfigurationMinCapacity, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("MasterUserSecretKmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecretKmsKeyId = (string) content.GetValueForProperty("MasterUserSecretKmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecretKmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("MasterUserSecretArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecretArn = (string) content.GetValueForProperty("MasterUserSecretArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecretArn, global::System.Convert.ToString);
            }
            if (content.Contains("ScalingConfigurationAutoPause"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationAutoPause = (bool?) content.GetValueForProperty("ScalingConfigurationAutoPause",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationAutoPause, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ScalingConfigurationSecondsBeforeTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationSecondsBeforeTimeout = (int?) content.GetValueForProperty("ScalingConfigurationSecondsBeforeTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationSecondsBeforeTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScalingConfigurationSecondsUntilAutoPause"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationSecondsUntilAutoPause = (int?) content.GetValueForProperty("ScalingConfigurationSecondsUntilAutoPause",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationSecondsUntilAutoPause, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRdsDbClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsRdsDbClusterProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Endpoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEndpointAutoGenerated) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Endpoint, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EndpointAutoGeneratedTypeConverter.ConvertFrom);
            }
            if (content.Contains("MasterUserSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecret = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMasterUserSecret) content.GetValueForProperty("MasterUserSecret",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecret, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MasterUserSecretTypeConverter.ConvertFrom);
            }
            if (content.Contains("ReadEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReadEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IReadEndpoint) content.GetValueForProperty("ReadEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReadEndpoint, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ReadEndpointTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScalingConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IScalingConfiguration) content.GetValueForProperty("ScalingConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ScalingConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServerlessV2ScalingConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServerlessV2ScalingConfiguration) content.GetValueForProperty("ServerlessV2ScalingConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfiguration, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ServerlessV2ScalingConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("AllocatedStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AllocatedStorage = (int?) content.GetValueForProperty("AllocatedStorage",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AllocatedStorage, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AssociatedRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AssociatedRole = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDbClusterRole[]) content.GetValueForProperty("AssociatedRole",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AssociatedRole, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDbClusterRole>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DbClusterRoleTypeConverter.ConvertFrom));
            }
            if (content.Contains("AutoMinorVersionUpgrade"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AutoMinorVersionUpgrade = (bool?) content.GetValueForProperty("AutoMinorVersionUpgrade",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AutoMinorVersionUpgrade, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AvailabilityZone = (string[]) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).AvailabilityZone, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BacktrackWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).BacktrackWindow = (int?) content.GetValueForProperty("BacktrackWindow",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).BacktrackWindow, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("BackupRetentionPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).BackupRetentionPeriod = (int?) content.GetValueForProperty("BackupRetentionPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).BackupRetentionPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CopyTagsToSnapshot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).CopyTagsToSnapshot = (bool?) content.GetValueForProperty("CopyTagsToSnapshot",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).CopyTagsToSnapshot, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DbClusterArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterArn = (string) content.GetValueForProperty("DbClusterArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterArn, global::System.Convert.ToString);
            }
            if (content.Contains("DbClusterIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterIdentifier = (string) content.GetValueForProperty("DbClusterIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("DbClusterInstanceClass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterInstanceClass = (string) content.GetValueForProperty("DbClusterInstanceClass",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterInstanceClass, global::System.Convert.ToString);
            }
            if (content.Contains("DbClusterParameterGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterParameterGroupName = (string) content.GetValueForProperty("DbClusterParameterGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterParameterGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("DbClusterResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterResourceId = (string) content.GetValueForProperty("DbClusterResourceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbClusterResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("DbInstanceParameterGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbInstanceParameterGroupName = (string) content.GetValueForProperty("DbInstanceParameterGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbInstanceParameterGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("DbSubnetGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbSubnetGroupName = (string) content.GetValueForProperty("DbSubnetGroupName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbSubnetGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("DbSystemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbSystemId = (string) content.GetValueForProperty("DbSystemId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DbSystemId, global::System.Convert.ToString);
            }
            if (content.Contains("DatabaseName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DatabaseName = (string) content.GetValueForProperty("DatabaseName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DatabaseName, global::System.Convert.ToString);
            }
            if (content.Contains("DeletionProtection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DeletionProtection = (bool?) content.GetValueForProperty("DeletionProtection",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DeletionProtection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Domain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Domain = (string) content.GetValueForProperty("Domain",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Domain, global::System.Convert.ToString);
            }
            if (content.Contains("DomainIamRoleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DomainIamRoleName = (string) content.GetValueForProperty("DomainIamRoleName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).DomainIamRoleName, global::System.Convert.ToString);
            }
            if (content.Contains("EnableCloudwatchLogsExport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableCloudwatchLogsExport = (string[]) content.GetValueForProperty("EnableCloudwatchLogsExport",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableCloudwatchLogsExport, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EnableGlobalWriteForwarding"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableGlobalWriteForwarding = (bool?) content.GetValueForProperty("EnableGlobalWriteForwarding",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableGlobalWriteForwarding, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableHttpEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableHttpEndpoint = (bool?) content.GetValueForProperty("EnableHttpEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableHttpEndpoint, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableIamDatabaseAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableIamDatabaseAuthentication = (bool?) content.GetValueForProperty("EnableIamDatabaseAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EnableIamDatabaseAuthentication, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Engine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Engine = (string) content.GetValueForProperty("Engine",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Engine, global::System.Convert.ToString);
            }
            if (content.Contains("EngineMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EngineMode = (string) content.GetValueForProperty("EngineMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EngineMode, global::System.Convert.ToString);
            }
            if (content.Contains("EngineVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EngineVersion = (string) content.GetValueForProperty("EngineVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EngineVersion, global::System.Convert.ToString);
            }
            if (content.Contains("GlobalClusterIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).GlobalClusterIdentifier = (string) content.GetValueForProperty("GlobalClusterIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).GlobalClusterIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("Iop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Iop = (int?) content.GetValueForProperty("Iop",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Iop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).KmsKeyId = (string) content.GetValueForProperty("KmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).KmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("ManageMasterUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ManageMasterUserPassword = (bool?) content.GetValueForProperty("ManageMasterUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ManageMasterUserPassword, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MasterUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserPassword = (string) content.GetValueForProperty("MasterUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserPassword, global::System.Convert.ToString);
            }
            if (content.Contains("MasterUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUsername = (string) content.GetValueForProperty("MasterUsername",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUsername, global::System.Convert.ToString);
            }
            if (content.Contains("MonitoringInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MonitoringInterval = (int?) content.GetValueForProperty("MonitoringInterval",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MonitoringInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MonitoringRoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MonitoringRoleArn = (string) content.GetValueForProperty("MonitoringRoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MonitoringRoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).NetworkType = (string) content.GetValueForProperty("NetworkType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).NetworkType, global::System.Convert.ToString);
            }
            if (content.Contains("PerformanceInsightsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsEnabled = (bool?) content.GetValueForProperty("PerformanceInsightsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PerformanceInsightsKmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsKmsKeyId = (string) content.GetValueForProperty("PerformanceInsightsKmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsKmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("PerformanceInsightsRetentionPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsRetentionPeriod = (int?) content.GetValueForProperty("PerformanceInsightsRetentionPeriod",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PerformanceInsightsRetentionPeriod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Port"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Port = (int?) content.GetValueForProperty("Port",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Port, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PreferredBackupWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PreferredBackupWindow = (string) content.GetValueForProperty("PreferredBackupWindow",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PreferredBackupWindow, global::System.Convert.ToString);
            }
            if (content.Contains("PreferredMaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PreferredMaintenanceWindow = (string) content.GetValueForProperty("PreferredMaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PreferredMaintenanceWindow, global::System.Convert.ToString);
            }
            if (content.Contains("PubliclyAccessible"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PubliclyAccessible = (bool?) content.GetValueForProperty("PubliclyAccessible",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).PubliclyAccessible, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ReplicationSourceIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReplicationSourceIdentifier = (string) content.GetValueForProperty("ReplicationSourceIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReplicationSourceIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreToTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).RestoreToTime = (string) content.GetValueForProperty("RestoreToTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).RestoreToTime, global::System.Convert.ToString);
            }
            if (content.Contains("RestoreType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).RestoreType = (string) content.GetValueForProperty("RestoreType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).RestoreType, global::System.Convert.ToString);
            }
            if (content.Contains("SnapshotIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SnapshotIdentifier = (string) content.GetValueForProperty("SnapshotIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SnapshotIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("SourceDbClusterIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SourceDbClusterIdentifier = (string) content.GetValueForProperty("SourceDbClusterIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SourceDbClusterIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("SourceRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SourceRegion = (string) content.GetValueForProperty("SourceRegion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).SourceRegion, global::System.Convert.ToString);
            }
            if (content.Contains("StorageEncrypted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageEncrypted = (bool?) content.GetValueForProperty("StorageEncrypted",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageEncrypted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("StorageThroughput"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageThroughput = (int?) content.GetValueForProperty("StorageThroughput",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageThroughput, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageType = (string) content.GetValueForProperty("StorageType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).StorageType, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated46[]) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).Tag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated46>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated46TypeConverter.ConvertFrom));
            }
            if (content.Contains("UseLatestRestorableTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).UseLatestRestorableTime = (bool?) content.GetValueForProperty("UseLatestRestorableTime",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).UseLatestRestorableTime, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VpcSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).VpcSecurityGroupId = (string[]) content.GetValueForProperty("VpcSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).VpcSecurityGroupId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EndpointAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EndpointAddress = (string) content.GetValueForProperty("EndpointAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EndpointAddress, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EndpointPort = (string) content.GetValueForProperty("EndpointPort",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).EndpointPort, global::System.Convert.ToString);
            }
            if (content.Contains("ReadEndpointAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReadEndpointAddress = (string) content.GetValueForProperty("ReadEndpointAddress",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ReadEndpointAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ScalingConfigurationMaxCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationMaxCapacity = (int?) content.GetValueForProperty("ScalingConfigurationMaxCapacity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationMaxCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScalingConfigurationMinCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationMinCapacity = (int?) content.GetValueForProperty("ScalingConfigurationMinCapacity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationMinCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScalingConfigurationTimeoutAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationTimeoutAction = (string) content.GetValueForProperty("ScalingConfigurationTimeoutAction",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationTimeoutAction, global::System.Convert.ToString);
            }
            if (content.Contains("ServerlessV2ScalingConfigurationMaxCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfigurationMaxCapacity = (float?) content.GetValueForProperty("ServerlessV2ScalingConfigurationMaxCapacity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfigurationMaxCapacity, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ServerlessV2ScalingConfigurationMinCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfigurationMinCapacity = (float?) content.GetValueForProperty("ServerlessV2ScalingConfigurationMinCapacity",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ServerlessV2ScalingConfigurationMinCapacity, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("MasterUserSecretKmsKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecretKmsKeyId = (string) content.GetValueForProperty("MasterUserSecretKmsKeyId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecretKmsKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("MasterUserSecretArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecretArn = (string) content.GetValueForProperty("MasterUserSecretArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).MasterUserSecretArn, global::System.Convert.ToString);
            }
            if (content.Contains("ScalingConfigurationAutoPause"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationAutoPause = (bool?) content.GetValueForProperty("ScalingConfigurationAutoPause",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationAutoPause, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ScalingConfigurationSecondsBeforeTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationSecondsBeforeTimeout = (int?) content.GetValueForProperty("ScalingConfigurationSecondsBeforeTimeout",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationSecondsBeforeTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScalingConfigurationSecondsUntilAutoPause"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationSecondsUntilAutoPause = (int?) content.GetValueForProperty("ScalingConfigurationSecondsUntilAutoPause",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterPropertiesInternal)this).ScalingConfigurationSecondsUntilAutoPause, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRdsDbClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsRdsDbClusterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsRdsDbClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsRdsDbClusterProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsRdsDbClusterProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AwsRdsDbClusterProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsRdsDbClusterProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsRdsDBCluster
    [System.ComponentModel.TypeConverter(typeof(AwsRdsDbClusterPropertiesTypeConverter))]
    public partial interface IAwsRdsDbClusterProperties

    {

    }
}