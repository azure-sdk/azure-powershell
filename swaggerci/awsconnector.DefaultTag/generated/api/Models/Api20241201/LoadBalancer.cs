// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of LoadBalancer</summary>
    public partial class LoadBalancer :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoadBalancer,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoadBalancerInternal
    {

        /// <summary>Backing field for <see cref="ContainerName" /> property.</summary>
        private string _containerName;

        /// <summary>
        /// The name of the container (as it appears in a container definition) to associate with the load balancer. You need to specify
        /// the container name when configuring the target group for an Amazon ECS load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ContainerName { get => this._containerName; set => this._containerName = value; }

        /// <summary>Backing field for <see cref="ContainerPort" /> property.</summary>
        private int? _containerPort;

        /// <summary>
        /// The port on the container to associate with the load balancer. This port must correspond to a ``containerPort`` in the
        /// task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they're
        /// launched on must allow ingress traffic on the ``hostPort`` of the port mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public int? ContainerPort { get => this._containerPort; set => this._containerPort = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// The name of the load balancer to associate with the Amazon ECS service or task set. If you are using an Application Load
        /// Balancer or a Network Load Balancer the load balancer name parameter should be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="TargetGroupArn" /> property.</summary>
        private string _targetGroupArn;

        /// <summary>
        /// The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or groups associated with a service or
        /// task set. A target group ARN is only specified when using an Application Load Balancer or Network Load Balancer. For services
        /// using the ``ECS`` deployment controller, you can specify one or multiple target groups. For more information, see [Registering
        /// multiple target groups with a service](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For services using the ``CODE_DEPLOY`` deployment controller,
        /// you're required to define two target groups for the load balancer. For more information, see [Blue/green deployment with
        /// CodeDeploy](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. If your service's task definition uses the ``awsvpc`` network mode, you must
        /// choose ``ip`` as the target type, not ``instance``. Do this when creating your target groups because tasks that use the
        /// ``awsvpc`` network mode are associated with an elastic network interface, not an Amazon EC2 instance. This network mode
        /// is required for the Fargate launch type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string TargetGroupArn { get => this._targetGroupArn; set => this._targetGroupArn = value; }

        /// <summary>Creates an new <see cref="LoadBalancer" /> instance.</summary>
        public LoadBalancer()
        {

        }
    }
    /// Definition of LoadBalancer
    public partial interface ILoadBalancer :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the container (as it appears in a container definition) to associate with the load balancer. You need to specify
        /// the container name when configuring the target group for an Amazon ECS load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the container (as it appears in a container definition) to associate with the load balancer. You need to specify the container name when configuring the target group for an Amazon ECS load balancer.",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerName { get; set; }
        /// <summary>
        /// The port on the container to associate with the load balancer. This port must correspond to a ``containerPort`` in the
        /// task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they're
        /// launched on must allow ingress traffic on the ``hostPort`` of the port mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The port on the container to associate with the load balancer. This port must correspond to a ``containerPort`` in the task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they're launched on must allow ingress traffic on the ``hostPort`` of the port mapping.",
        SerializedName = @"containerPort",
        PossibleTypes = new [] { typeof(int) })]
        int? ContainerPort { get; set; }
        /// <summary>
        /// The name of the load balancer to associate with the Amazon ECS service or task set. If you are using an Application Load
        /// Balancer or a Network Load Balancer the load balancer name parameter should be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the load balancer to associate with the Amazon ECS service or task set. If you are using an Application Load Balancer or a Network Load Balancer the load balancer name parameter should be omitted.",
        SerializedName = @"loadBalancerName",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or groups associated with a service or
        /// task set. A target group ARN is only specified when using an Application Load Balancer or Network Load Balancer. For services
        /// using the ``ECS`` deployment controller, you can specify one or multiple target groups. For more information, see [Registering
        /// multiple target groups with a service](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For services using the ``CODE_DEPLOY`` deployment controller,
        /// you're required to define two target groups for the load balancer. For more information, see [Blue/green deployment with
        /// CodeDeploy](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. If your service's task definition uses the ``awsvpc`` network mode, you must
        /// choose ``ip`` as the target type, not ``instance``. Do this when creating your target groups because tasks that use the
        /// ``awsvpc`` network mode are associated with an elastic network interface, not an Amazon EC2 instance. This network mode
        /// is required for the Fargate launch type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or groups associated with a service or task set. A target group ARN is only specified when using an Application Load Balancer or Network Load Balancer.  For services using the ``ECS`` deployment controller, you can specify one or multiple target groups. For more information, see [Registering multiple target groups with a service](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html) in the *Amazon Elastic Container Service Developer Guide*. For services using the ``CODE_DEPLOY`` deployment controller, you're required to define two target groups for the load balancer. For more information, see [Blue/green deployment with CodeDeploy](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html) in the *Amazon Elastic Container Service Developer Guide*.  If your service's task definition uses the ``awsvpc`` network mode, you must choose ``ip`` as the target type, not ``instance``. Do this when creating your target groups because tasks that use the ``awsvpc`` network mode are associated with an elastic network interface, not an Amazon EC2 instance. This network mode is required for the Fargate launch type.",
        SerializedName = @"targetGroupArn",
        PossibleTypes = new [] { typeof(string) })]
        string TargetGroupArn { get; set; }

    }
    /// Definition of LoadBalancer
    internal partial interface ILoadBalancerInternal

    {
        /// <summary>
        /// The name of the container (as it appears in a container definition) to associate with the load balancer. You need to specify
        /// the container name when configuring the target group for an Amazon ECS load balancer.
        /// </summary>
        string ContainerName { get; set; }
        /// <summary>
        /// The port on the container to associate with the load balancer. This port must correspond to a ``containerPort`` in the
        /// task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they're
        /// launched on must allow ingress traffic on the ``hostPort`` of the port mapping.
        /// </summary>
        int? ContainerPort { get; set; }
        /// <summary>
        /// The name of the load balancer to associate with the Amazon ECS service or task set. If you are using an Application Load
        /// Balancer or a Network Load Balancer the load balancer name parameter should be omitted.
        /// </summary>
        string Name { get; set; }
        /// <summary>
        /// The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or groups associated with a service or
        /// task set. A target group ARN is only specified when using an Application Load Balancer or Network Load Balancer. For services
        /// using the ``ECS`` deployment controller, you can specify one or multiple target groups. For more information, see [Registering
        /// multiple target groups with a service](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For services using the ``CODE_DEPLOY`` deployment controller,
        /// you're required to define two target groups for the load balancer. For more information, see [Blue/green deployment with
        /// CodeDeploy](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. If your service's task definition uses the ``awsvpc`` network mode, you must
        /// choose ``ip`` as the target type, not ``instance``. Do this when creating your target groups because tasks that use the
        /// ``awsvpc`` network mode are associated with an elastic network interface, not an Amazon EC2 instance. This network mode
        /// is required for the Fargate launch type.
        /// </summary>
        string TargetGroupArn { get; set; }

    }
}