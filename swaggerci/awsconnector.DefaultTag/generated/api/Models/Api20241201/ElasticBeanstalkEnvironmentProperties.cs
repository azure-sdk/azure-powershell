// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ElasticBeanstalkEnvironment</summary>
    public partial class ElasticBeanstalkEnvironmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>The name of the application that is associated with this environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyApplicationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).ApplicationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).ApplicationName = value ?? null; }

        /// <summary>
        /// If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment
        /// URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment
        /// name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyCnamePrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).CnamePrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).CnamePrefix = value ?? null; }

        /// <summary>Your description for this environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).Description = value ?? null; }

        /// <summary>Property endpointURL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyEndpointUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).EndpointUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).EndpointUrl = value ?? null; }

        /// <summary>A unique name for the environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyEnvironmentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).EnvironmentName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).EnvironmentName = value ?? null; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyOperationsRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).OperationsRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).OperationsRole = value ?? null; }

        /// <summary>
        /// Key-value pairs defining configuration options for this environment, such as the instance type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOptionSetting[] AwPropertyOptionSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).OptionSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).OptionSetting = value ?? null /* arrayOf */; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the custom platform to use with the environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyPlatformArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).PlatformArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).PlatformArn = value ?? null; }

        /// <summary>
        /// The name of an Elastic Beanstalk solution stack (platform version) to use with the environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertySolutionStackName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).SolutionStackName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).SolutionStackName = value ?? null; }

        /// <summary>Specifies the tags applied to resources in the environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated29[] AwPropertyTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).Tag = value ?? null /* arrayOf */; }

        /// <summary>
        /// The name of the Elastic Beanstalk configuration template to use with the environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyTemplateName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).TemplateName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).TemplateName = value ?? null; }

        /// <summary>The name of the application version to deploy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyVersionLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).VersionLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).VersionLabel = value ?? null; }

        /// <summary>Backing field for <see cref="AwsAccountId" /> property.</summary>
        private string _awsAccountId;

        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsAccountId { get => this._awsAccountId; set => this._awsAccountId = value; }

        /// <summary>Backing field for <see cref="AwsProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentProperties _awsProperty;

        /// <summary>AWS Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentProperties AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsElasticBeanstalkEnvironmentProperties()); set => this._awsProperty = value; }

        /// <summary>Backing field for <see cref="AwsRegion" /> property.</summary>
        private string _awsRegion;

        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsRegion { get => this._awsRegion; set => this._awsRegion = value; }

        /// <summary>Backing field for <see cref="AwsSourceSchema" /> property.</summary>
        private string _awsSourceSchema;

        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsSourceSchema { get => this._awsSourceSchema; set => this._awsSourceSchema = value; }

        /// <summary>Backing field for <see cref="AwsTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentPropertiesAwsTags _awsTag;

        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentPropertiesAwsTags AwsTag { get => (this._awsTag = this._awsTag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticBeanstalkEnvironmentPropertiesAwsTags()); set => this._awsTag = value; }

        /// <summary>Internal Acessors for AwPropertyTier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITier1 Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentPropertiesInternal.AwPropertyTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).Tier = value; }

        /// <summary>Internal Acessors for AwsProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentPropertiesInternal.AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsElasticBeanstalkEnvironmentProperties()); set { {_awsProperty = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicCloudConnectorsResourceId" /> property.</summary>
        private string _publicCloudConnectorsResourceId;

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudConnectorsResourceId { get => this._publicCloudConnectorsResourceId; set => this._publicCloudConnectorsResourceId = value; }

        /// <summary>Backing field for <see cref="PublicCloudResourceName" /> property.</summary>
        private string _publicCloudResourceName;

        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudResourceName { get => this._publicCloudResourceName; set => this._publicCloudResourceName = value; }

        /// <summary>The name of this environment tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string TierName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).TierName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).TierName = value ?? null; }

        /// <summary>The type of this environment tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string TierType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).TierType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).TierType = value ?? null; }

        /// <summary>
        /// The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker
        /// tier version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string TierVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).TierVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentPropertiesInternal)AwsProperty).TierVersion = value ?? null; }

        /// <summary>Creates an new <see cref="ElasticBeanstalkEnvironmentProperties" /> instance.</summary>
        public ElasticBeanstalkEnvironmentProperties()
        {

        }
    }
    /// Definition of ElasticBeanstalkEnvironment
    public partial interface IElasticBeanstalkEnvironmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>The name of the application that is associated with this environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the application that is associated with this environment.",
        SerializedName = @"applicationName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyApplicationName { get; set; }
        /// <summary>
        /// If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment
        /// URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment
        /// name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.",
        SerializedName = @"cnamePrefix",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyCnamePrefix { get; set; }
        /// <summary>Your description for this environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Your description for this environment.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyDescription { get; set; }
        /// <summary>Property endpointURL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property endpointURL",
        SerializedName = @"endpointURL",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyEndpointUrl { get; set; }
        /// <summary>A unique name for the environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A unique name for the environment.",
        SerializedName = @"environmentName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyEnvironmentName { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role.",
        SerializedName = @"operationsRole",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyOperationsRole { get; set; }
        /// <summary>
        /// Key-value pairs defining configuration options for this environment, such as the instance type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key-value pairs defining configuration options for this environment, such as the instance type.",
        SerializedName = @"optionSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOptionSetting) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOptionSetting[] AwPropertyOptionSetting { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the custom platform to use with the environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the custom platform to use with the environment.",
        SerializedName = @"platformArn",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyPlatformArn { get; set; }
        /// <summary>
        /// The name of an Elastic Beanstalk solution stack (platform version) to use with the environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of an Elastic Beanstalk solution stack (platform version) to use with the environment.",
        SerializedName = @"solutionStackName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertySolutionStackName { get; set; }
        /// <summary>Specifies the tags applied to resources in the environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the tags applied to resources in the environment.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated29) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated29[] AwPropertyTag { get; set; }
        /// <summary>
        /// The name of the Elastic Beanstalk configuration template to use with the environment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the Elastic Beanstalk configuration template to use with the environment.",
        SerializedName = @"templateName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyTemplateName { get; set; }
        /// <summary>The name of the application version to deploy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the application version to deploy.",
        SerializedName = @"versionLabel",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyVersionLabel { get; set; }
        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AwsAccountId { get; set; }
        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentPropertiesAwsTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudResourceName { get; set; }
        /// <summary>The name of this environment tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of this environment tier.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string TierName { get; set; }
        /// <summary>The type of this environment tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of this environment tier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string TierType { get; set; }
        /// <summary>
        /// The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker
        /// tier version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string TierVersion { get; set; }

    }
    /// Definition of ElasticBeanstalkEnvironment
    internal partial interface IElasticBeanstalkEnvironmentPropertiesInternal

    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        string Arn { get; set; }
        /// <summary>The name of the application that is associated with this environment.</summary>
        string AwPropertyApplicationName { get; set; }
        /// <summary>
        /// If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment
        /// URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment
        /// name.
        /// </summary>
        string AwPropertyCnamePrefix { get; set; }
        /// <summary>Your description for this environment.</summary>
        string AwPropertyDescription { get; set; }
        /// <summary>Property endpointURL</summary>
        string AwPropertyEndpointUrl { get; set; }
        /// <summary>A unique name for the environment.</summary>
        string AwPropertyEnvironmentName { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role.
        /// </summary>
        string AwPropertyOperationsRole { get; set; }
        /// <summary>
        /// Key-value pairs defining configuration options for this environment, such as the instance type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOptionSetting[] AwPropertyOptionSetting { get; set; }
        /// <summary>
        /// The Amazon Resource Name (ARN) of the custom platform to use with the environment.
        /// </summary>
        string AwPropertyPlatformArn { get; set; }
        /// <summary>
        /// The name of an Elastic Beanstalk solution stack (platform version) to use with the environment.
        /// </summary>
        string AwPropertySolutionStackName { get; set; }
        /// <summary>Specifies the tags applied to resources in the environment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated29[] AwPropertyTag { get; set; }
        /// <summary>
        /// The name of the Elastic Beanstalk configuration template to use with the environment.
        /// </summary>
        string AwPropertyTemplateName { get; set; }
        /// <summary>
        /// Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic
        /// Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles
        /// background-processing tasks.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITier1 AwPropertyTier { get; set; }
        /// <summary>The name of the application version to deploy.</summary>
        string AwPropertyVersionLabel { get; set; }
        /// <summary>AWS Account ID</summary>
        string AwsAccountId { get; set; }
        /// <summary>AWS Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentProperties AwsProperty { get; set; }
        /// <summary>AWS Region</summary>
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        string PublicCloudResourceName { get; set; }
        /// <summary>The name of this environment tier.</summary>
        string TierName { get; set; }
        /// <summary>The type of this environment tier.</summary>
        string TierType { get; set; }
        /// <summary>
        /// The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker
        /// tier version.
        /// </summary>
        string TierVersion { get; set; }

    }
}