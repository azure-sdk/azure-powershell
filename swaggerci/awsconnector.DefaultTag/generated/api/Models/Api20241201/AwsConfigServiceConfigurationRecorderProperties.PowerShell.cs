// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>Definition of awsConfigServiceConfigurationRecorder</summary>
    [System.ComponentModel.TypeConverter(typeof(AwsConfigServiceConfigurationRecorderPropertiesTypeConverter))]
    public partial class AwsConfigServiceConfigurationRecorderProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsConfigServiceConfigurationRecorderProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AwsConfigServiceConfigurationRecorderProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("RecordingGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroup = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingGroup) content.GetValueForProperty("RecordingGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroup, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingGroupTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecordingMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingMode) content.GetValueForProperty("RecordingMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingModeTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("RoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RoleArn = (string) content.GetValueForProperty("RoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("RecordingGroupRecordingStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupRecordingStrategy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingStrategy) content.GetValueForProperty("RecordingGroupRecordingStrategy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupRecordingStrategy, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingStrategyTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecordingGroupResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupResourceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType[]) content.GetValueForProperty("RecordingGroupResourceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupResourceType, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType.CreateFrom));
            }
            if (content.Contains("RecordingGroupExclusionByResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupExclusionByResourceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IExclusionByResourceTypes) content.GetValueForProperty("RecordingGroupExclusionByResourceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupExclusionByResourceType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ExclusionByResourceTypesTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecordingGroupAllSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupAllSupported = (bool?) content.GetValueForProperty("RecordingGroupAllSupported",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupAllSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RecordingGroupIncludeGlobalResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupIncludeGlobalResourceType = (bool?) content.GetValueForProperty("RecordingGroupIncludeGlobalResourceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupIncludeGlobalResourceType, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RecordingModeRecordingFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingModeRecordingFrequency = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingFrequencyEnumValue) content.GetValueForProperty("RecordingModeRecordingFrequency",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingModeRecordingFrequency, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingFrequencyEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecordingModeOverride"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingModeOverride = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingModeOverride[]) content.GetValueForProperty("RecordingModeOverride",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingModeOverride, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingModeOverride>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingModeOverrideTypeConverter.ConvertFrom));
            }
            if (content.Contains("RecordingFrequencyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingFrequencyValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RecordingFrequency?) content.GetValueForProperty("RecordingFrequencyValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingFrequencyValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RecordingFrequency.CreateFrom);
            }
            if (content.Contains("ExclusionByResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).ExclusionByResourceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType[]) content.GetValueForProperty("ExclusionByResourceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).ExclusionByResourceType, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType.CreateFrom));
            }
            if (content.Contains("RecordingStrategyUseOnly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingStrategyUseOnly = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingStrategyTypeEnumValue) content.GetValueForProperty("RecordingStrategyUseOnly",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingStrategyUseOnly, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingStrategyTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("UseOnlyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).UseOnlyValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RecordingStrategyType?) content.GetValueForProperty("UseOnlyValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).UseOnlyValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RecordingStrategyType.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsConfigServiceConfigurationRecorderProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AwsConfigServiceConfigurationRecorderProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("RecordingGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroup = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingGroup) content.GetValueForProperty("RecordingGroup",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroup, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingGroupTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecordingMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingMode = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingMode) content.GetValueForProperty("RecordingMode",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingMode, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingModeTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("RoleArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RoleArn = (string) content.GetValueForProperty("RoleArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RoleArn, global::System.Convert.ToString);
            }
            if (content.Contains("RecordingGroupRecordingStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupRecordingStrategy = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingStrategy) content.GetValueForProperty("RecordingGroupRecordingStrategy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupRecordingStrategy, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingStrategyTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecordingGroupResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupResourceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType[]) content.GetValueForProperty("RecordingGroupResourceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupResourceType, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType.CreateFrom));
            }
            if (content.Contains("RecordingGroupExclusionByResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupExclusionByResourceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IExclusionByResourceTypes) content.GetValueForProperty("RecordingGroupExclusionByResourceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupExclusionByResourceType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ExclusionByResourceTypesTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecordingGroupAllSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupAllSupported = (bool?) content.GetValueForProperty("RecordingGroupAllSupported",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupAllSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RecordingGroupIncludeGlobalResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupIncludeGlobalResourceType = (bool?) content.GetValueForProperty("RecordingGroupIncludeGlobalResourceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingGroupIncludeGlobalResourceType, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RecordingModeRecordingFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingModeRecordingFrequency = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingFrequencyEnumValue) content.GetValueForProperty("RecordingModeRecordingFrequency",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingModeRecordingFrequency, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingFrequencyEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecordingModeOverride"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingModeOverride = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingModeOverride[]) content.GetValueForProperty("RecordingModeOverride",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingModeOverride, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingModeOverride>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingModeOverrideTypeConverter.ConvertFrom));
            }
            if (content.Contains("RecordingFrequencyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingFrequencyValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RecordingFrequency?) content.GetValueForProperty("RecordingFrequencyValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingFrequencyValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RecordingFrequency.CreateFrom);
            }
            if (content.Contains("ExclusionByResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).ExclusionByResourceType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType[]) content.GetValueForProperty("ExclusionByResourceType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).ExclusionByResourceType, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceType.CreateFrom));
            }
            if (content.Contains("RecordingStrategyUseOnly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingStrategyUseOnly = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRecordingStrategyTypeEnumValue) content.GetValueForProperty("RecordingStrategyUseOnly",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).RecordingStrategyUseOnly, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RecordingStrategyTypeEnumValueTypeConverter.ConvertFrom);
            }
            if (content.Contains("UseOnlyValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).UseOnlyValue = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RecordingStrategyType?) content.GetValueForProperty("UseOnlyValue",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderPropertiesInternal)this).UseOnlyValue, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.RecordingStrategyType.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsConfigServiceConfigurationRecorderProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AwsConfigServiceConfigurationRecorderProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsConfigServiceConfigurationRecorderProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AwsConfigServiceConfigurationRecorderProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AwsConfigServiceConfigurationRecorderProperties" />, deserializing the content from
        /// a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="AwsConfigServiceConfigurationRecorderProperties" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsConfigServiceConfigurationRecorderProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Definition of awsConfigServiceConfigurationRecorder
    [System.ComponentModel.TypeConverter(typeof(AwsConfigServiceConfigurationRecorderPropertiesTypeConverter))]
    public partial interface IAwsConfigServiceConfigurationRecorderProperties

    {

    }
}