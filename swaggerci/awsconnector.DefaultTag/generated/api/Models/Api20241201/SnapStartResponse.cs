// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of SnapStartResponse</summary>
    public partial class SnapStartResponse :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponse,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISnapStartResponseInternal
    {

        /// <summary>Backing field for <see cref="ApplyOn" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn? _applyOn;

        /// <summary>
        /// When set to ``PublishedVersions``, Lambda creates a snapshot of the execution environment when you publish a function
        /// version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn? ApplyOn { get => this._applyOn; set => this._applyOn = value; }

        /// <summary>Backing field for <see cref="OptimizationStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus? _optimizationStatus;

        /// <summary>
        /// When you provide a [qualified Amazon Resource Name (ARN)](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html#versioning-versions-using),
        /// this response element indicates whether SnapStart is activated for the specified function version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus? OptimizationStatus { get => this._optimizationStatus; set => this._optimizationStatus = value; }

        /// <summary>Creates an new <see cref="SnapStartResponse" /> instance.</summary>
        public SnapStartResponse()
        {

        }
    }
    /// Definition of SnapStartResponse
    public partial interface ISnapStartResponse :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// When set to ``PublishedVersions``, Lambda creates a snapshot of the execution environment when you publish a function
        /// version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When set to ``PublishedVersions``, Lambda creates a snapshot of the execution environment when you publish a function version.",
        SerializedName = @"applyOn",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn? ApplyOn { get; set; }
        /// <summary>
        /// When you provide a [qualified Amazon Resource Name (ARN)](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html#versioning-versions-using),
        /// this response element indicates whether SnapStart is activated for the specified function version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When you provide a [qualified Amazon Resource Name (ARN)](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html#versioning-versions-using), this response element indicates whether SnapStart is activated for the specified function version.",
        SerializedName = @"optimizationStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus? OptimizationStatus { get; set; }

    }
    /// Definition of SnapStartResponse
    internal partial interface ISnapStartResponseInternal

    {
        /// <summary>
        /// When set to ``PublishedVersions``, Lambda creates a snapshot of the execution environment when you publish a function
        /// version.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseApplyOn? ApplyOn { get; set; }
        /// <summary>
        /// When you provide a [qualified Amazon Resource Name (ARN)](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html#versioning-versions-using),
        /// this response element indicates whether SnapStart is activated for the specified function version.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.SnapStartResponseOptimizationStatus? OptimizationStatus { get; set; }

    }
}