// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEksCluster</summary>
    public partial class AwsEksClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccessConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponse _accessConfig;

        /// <summary><p>The access configuration for the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponse AccessConfig { get => (this._accessConfig = this._accessConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AccessConfigResponse()); set => this._accessConfig = value; }

        /// <summary>
        /// <p>Specifies whether or not the cluster creator IAM principal was set as a cluster admin access entry during cluster creation
        /// time.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AccessConfigBootstrapClusterCreatorAdminPermission { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponseInternal)AccessConfig).BootstrapClusterCreatorAdminPermission; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponseInternal)AccessConfig).BootstrapClusterCreatorAdminPermission = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary><p>The Amazon Resource Name (ARN) of the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationMode? AuthenticationModeValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponseInternal)AccessConfig).AuthenticationModeValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponseInternal)AccessConfig).AuthenticationModeValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationMode)""); }

        /// <summary>Backing field for <see cref="CertificateAuthority" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificate _certificateAuthority;

        /// <summary><p>The <code>certificate-authority-data</code> for your cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificate CertificateAuthority { get => (this._certificateAuthority = this._certificateAuthority ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Certificate()); set => this._certificateAuthority = value; }

        /// <summary>
        /// <p>The Base64-encoded certificate data required to communicate with your cluster. Add this to the <code>certificate-authority-data</code>
        /// section of the <code>kubeconfig</code> file for your cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CertificateAuthorityData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificateInternal)CertificateAuthority).Data; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificateInternal)CertificateAuthority).Data = value ?? null; }

        /// <summary>Backing field for <see cref="ClientRequestToken" /> property.</summary>
        private string _clientRequestToken;

        /// <summary>
        /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ClientRequestToken { get => this._clientRequestToken; set => this._clientRequestToken = value; }

        /// <summary>Backing field for <see cref="ConnectorConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponse _connectorConfig;

        /// <summary><p>The configuration used to connect to a cluster for registration.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponse ConnectorConfig { get => (this._connectorConfig = this._connectorConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ConnectorConfigResponse()); set => this._connectorConfig = value; }

        /// <summary><p>A unique code associated with the cluster for registration purposes.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ConnectorConfigActivationCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponseInternal)ConnectorConfig).ActivationCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponseInternal)ConnectorConfig).ActivationCode = value ?? null; }

        /// <summary>
        /// <p>The expiration time of the connected cluster. The cluster's YAML file must be applied through the native provider.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public global::System.DateTime? ConnectorConfigActivationExpiry { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponseInternal)ConnectorConfig).ActivationExpiry; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponseInternal)ConnectorConfig).ActivationExpiry = value ?? default(global::System.DateTime); }

        /// <summary><p>A unique ID associated with the cluster for registration purposes.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ConnectorConfigActivationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponseInternal)ConnectorConfig).ActivationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponseInternal)ConnectorConfig).ActivationId = value ?? null; }

        /// <summary><p>The cluster's cloud service provider.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ConnectorConfigProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponseInternal)ConnectorConfig).Provider; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponseInternal)ConnectorConfig).Provider = value ?? null; }

        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the role to communicate with services from the connected Kubernetes cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ConnectorConfigRoleArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponseInternal)ConnectorConfig).RoleArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponseInternal)ConnectorConfig).RoleArn = value ?? null; }

        /// <summary>
        /// <p>The name of the placement group for the Kubernetes control plane instances.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ControlPlanePlacementGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponseInternal)OutpostConfig).ControlPlanePlacementGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponseInternal)OutpostConfig).ControlPlanePlacementGroupName = value ?? null; }

        /// <summary>Backing field for <see cref="CreatedAt" /> property.</summary>
        private global::System.DateTime? _createdAt;

        /// <summary><p>The Unix epoch timestamp at object creation.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedAt { get => this._createdAt; set => this._createdAt = value; }

        /// <summary>Backing field for <see cref="EncryptionConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfig[] _encryptionConfig;

        /// <summary><p>The encryption configuration for the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfig[] EncryptionConfig { get => this._encryptionConfig; set => this._encryptionConfig = value; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private string _endpoint;

        /// <summary><p>The endpoint for your Kubernetes API server.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Endpoint { get => this._endpoint; set => this._endpoint = value; }

        /// <summary>Backing field for <see cref="Health" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterHealth _health;

        /// <summary>
        /// <p>An object representing the health of your local Amazon EKS cluster on an Amazon Web Services Outpost. This object isn't
        /// available for clusters on the Amazon Web Services cloud.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterHealth Health { get => (this._health = this._health ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterHealth()); set => this._health = value; }

        /// <summary>
        /// <p>An object representing the health issues of your local Amazon EKS cluster on an Amazon Web Services Outpost.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterIssue[] HealthIssue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterHealthInternal)Health).Issue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterHealthInternal)Health).Issue = value ?? null /* arrayOf */; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily? IPFamilyValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponseInternal)KubernetesNetworkConfig).IPFamilyValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponseInternal)KubernetesNetworkConfig).IPFamilyValue = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily)""); }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// <p>The ID of your local Amazon EKS cluster on an Amazon Web Services Outpost. This property isn't available for an Amazon
        /// EKS cluster on the Amazon Web Services cloud.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIdentity _identity;

        /// <summary><p>The identity provider information for the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Identity()); set => this._identity = value; }

        /// <summary>
        /// <p>The CIDR block that Kubernetes <code>Pod</code> and <code>Service</code> object IP addresses are assigned from. Kubernetes
        /// assigns addresses from an <code>IPv4</code> CIDR block assigned to a subnet that the node is in. If you didn't specify
        /// a CIDR block when you created the cluster, then Kubernetes assigns addresses from either the <code>10.100.0.0/16</code>
        /// or <code>172.20.0.0/16</code> CIDR blocks. If this was specified, then it was specified when the cluster was created and
        /// it can't be changed.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string KuberneteNetworkConfigServiceIpv4Cidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponseInternal)KubernetesNetworkConfig).ServiceIpv4Cidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponseInternal)KubernetesNetworkConfig).ServiceIpv4Cidr = value ?? null; }

        /// <summary>
        /// <p>The CIDR block that Kubernetes pod and service IP addresses are assigned from if you created a 1.21 or later cluster
        /// with version 1.10.1 or later of the Amazon VPC CNI add-on and specified <code>ipv6</code> for <b>ipFamily</b> when you
        /// created the cluster. Kubernetes assigns service addresses from the unique local address range (<code>fc00::/7</code>)
        /// because you can't specify a custom IPv6 CIDR block when you create the cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string KuberneteNetworkConfigServiceIpv6Cidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponseInternal)KubernetesNetworkConfig).ServiceIpv6Cidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponseInternal)KubernetesNetworkConfig).ServiceIpv6Cidr = value ?? null; }

        /// <summary>Backing field for <see cref="KubernetesNetworkConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponse _kubernetesNetworkConfig;

        /// <summary><p>The Kubernetes network configuration for the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponse KubernetesNetworkConfig { get => (this._kubernetesNetworkConfig = this._kubernetesNetworkConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KubernetesNetworkConfigResponse()); set => this._kubernetesNetworkConfig = value; }

        /// <summary>Backing field for <see cref="Logging" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingAutoGenerated _logging;

        /// <summary><p>The logging configuration for your cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingAutoGenerated Logging { get => (this._logging = this._logging ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingAutoGenerated()); set => this._logging = value; }

        /// <summary><p>The cluster control plane logging configuration for your cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogSetup[] LoggingClusterLogging { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingAutoGeneratedInternal)Logging).ClusterLogging; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingAutoGeneratedInternal)Logging).ClusterLogging = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for AccessConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.AccessConfig { get => (this._accessConfig = this._accessConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AccessConfigResponse()); set { {_accessConfig = value;} } }

        /// <summary>Internal Acessors for AccessConfigAuthenticationMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticationModeEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.AccessConfigAuthenticationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponseInternal)AccessConfig).AuthenticationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponseInternal)AccessConfig).AuthenticationMode = value; }

        /// <summary>Internal Acessors for CertificateAuthority</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificate Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.CertificateAuthority { get => (this._certificateAuthority = this._certificateAuthority ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Certificate()); set { {_certificateAuthority = value;} } }

        /// <summary>Internal Acessors for ConnectorConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.ConnectorConfig { get => (this._connectorConfig = this._connectorConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ConnectorConfigResponse()); set { {_connectorConfig = value;} } }

        /// <summary>Internal Acessors for Health</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterHealth Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.Health { get => (this._health = this._health ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterHealth()); set { {_health = value;} } }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIdentity Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Identity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityOidc</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOidc Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.IdentityOidc { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIdentityInternal)Identity).Oidc; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIdentityInternal)Identity).Oidc = value; }

        /// <summary>Internal Acessors for KuberneteNetworkConfigIPFamily</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPFamilyEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.KuberneteNetworkConfigIPFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponseInternal)KubernetesNetworkConfig).IPFamily; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponseInternal)KubernetesNetworkConfig).IPFamily = value; }

        /// <summary>Internal Acessors for KubernetesNetworkConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.KubernetesNetworkConfig { get => (this._kubernetesNetworkConfig = this._kubernetesNetworkConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KubernetesNetworkConfigResponse()); set { {_kubernetesNetworkConfig = value;} } }

        /// <summary>Internal Acessors for Logging</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.Logging { get => (this._logging = this._logging ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingAutoGenerated()); set { {_logging = value;} } }

        /// <summary>Internal Acessors for OutpostConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.OutpostConfig { get => (this._outpostConfig = this._outpostConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OutpostConfigResponse()); set { {_outpostConfig = value;} } }

        /// <summary>Internal Acessors for OutpostConfigControlPlanePlacement</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IControlPlanePlacementResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.OutpostConfigControlPlanePlacement { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponseInternal)OutpostConfig).ControlPlanePlacement; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponseInternal)OutpostConfig).ControlPlanePlacement = value; }

        /// <summary>Internal Acessors for ResourcesVpcConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponse Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.ResourcesVpcConfig { get => (this._resourcesVpcConfig = this._resourcesVpcConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcConfigResponse()); set { {_resourcesVpcConfig = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatusEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStatusEnumValue()); set { {_status = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary><p>The name of your cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary><p>The issuer URL for the OIDC identity provider.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string OidcIssuer { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIdentityInternal)Identity).OidcIssuer; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIdentityInternal)Identity).OidcIssuer = value ?? null; }

        /// <summary>Backing field for <see cref="OutpostConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponse _outpostConfig;

        /// <summary>
        /// <p>An object representing the configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. This object
        /// isn't available for clusters on the Amazon Web Services cloud.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponse OutpostConfig { get => (this._outpostConfig = this._outpostConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OutpostConfigResponse()); set => this._outpostConfig = value; }

        /// <summary>
        /// <p>The Amazon EC2 instance type used for the control plane. The instance type is the same for all control plane instances.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string OutpostConfigControlPlaneInstanceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponseInternal)OutpostConfig).ControlPlaneInstanceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponseInternal)OutpostConfig).ControlPlaneInstanceType = value ?? null; }

        /// <summary>
        /// <p>The ARN of the Outpost that you specified for use with your local Amazon EKS cluster on Outposts.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] OutpostConfigOutpostArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponseInternal)OutpostConfig).OutpostArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponseInternal)OutpostConfig).OutpostArn = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="PlatformVersion" /> property.</summary>
        private string _platformVersion;

        /// <summary>
        /// <p>The platform version of your Amazon EKS cluster. For more information about clusters deployed on the Amazon Web Services
        /// Cloud, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html'>Platform versions</a> in
        /// the <i> <i>Amazon EKS User Guide</i> </i>. For more information about local clusters deployed on an Outpost, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-platform-versions.html'>Amazon
        /// EKS local cluster platform versions</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PlatformVersion { get => this._platformVersion; set => this._platformVersion = value; }

        /// <summary>
        /// <p>The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group
        /// for control-plane-to-data-plane communication.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ResourceVpcConfigClusterSecurityGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).ClusterSecurityGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).ClusterSecurityGroupId = value ?? null; }

        /// <summary>
        /// <p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API
        /// server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC
        /// endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster,
        /// then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or
        /// Fargate pods. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html'>Amazon
        /// EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ResourceVpcConfigEndpointPrivateAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).EndpointPrivateAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).EndpointPrivateAccess = value ?? default(bool); }

        /// <summary><p>Whether the public API server endpoint is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ResourceVpcConfigEndpointPublicAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).EndpointPublicAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).EndpointPublicAccess = value ?? default(bool); }

        /// <summary>
        /// <p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] ResourceVpcConfigPublicAccessCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).PublicAccessCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).PublicAccessCidr = value ?? null /* arrayOf */; }

        /// <summary>
        /// <p>The security groups associated with the cross-account elastic network interfaces that are used to allow communication
        /// between your nodes and the Kubernetes control plane.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] ResourceVpcConfigSecurityGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).SecurityGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).SecurityGroupId = value ?? null /* arrayOf */; }

        /// <summary><p>The subnets associated with your cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] ResourceVpcConfigSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).SubnetId = value ?? null /* arrayOf */; }

        /// <summary><p>The VPC associated with your cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ResourceVpcConfigVpcId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).VpcId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponseInternal)ResourcesVpcConfig).VpcId = value ?? null; }

        /// <summary>Backing field for <see cref="ResourcesVpcConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponse _resourcesVpcConfig;

        /// <summary>
        /// <p>The VPC configuration used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work
        /// properly with Kubernetes. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html'>Cluster
        /// VPC considerations</a> and <a href='https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html'>Cluster security
        /// group considerations</a> in the <i>Amazon EKS User Guide</i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponse ResourcesVpcConfig { get => (this._resourcesVpcConfig = this._resourcesVpcConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcConfigResponse()); set => this._resourcesVpcConfig = value; }

        /// <summary>Backing field for <see cref="RoleArn" /> property.</summary>
        private string _roleArn;

        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls
        /// to Amazon Web Services API operations on your behalf.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string RoleArn { get => this._roleArn; set => this._roleArn = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatusEnumValue _status;

        /// <summary><p>The current status of the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatusEnumValue Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStatusEnumValue()); set => this._status = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStatus? StatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatusEnumValueInternal)Status).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatusEnumValueInternal)Status).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStatus)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesTags _tag;

        /// <summary>
        /// <p>Metadata that assists with categorization and organization. Each tag consists of a key and an optional value. You define
        /// both. Tags don't propagate to any other cluster or Amazon Web Services resources.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEksClusterPropertiesTags()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary><p>The Kubernetes server version for the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="AwsEksClusterProperties" /> instance.</summary>
        public AwsEksClusterProperties()
        {

        }
    }
    /// Definition of awsEksCluster
    public partial interface IAwsEksClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>Specifies whether or not the cluster creator IAM principal was set as a cluster admin access entry during cluster creation
        /// time.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Specifies whether or not the cluster creator IAM principal was set as a cluster admin access entry during cluster creation time.</p>",
        SerializedName = @"bootstrapClusterCreatorAdminPermissions",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AccessConfigBootstrapClusterCreatorAdminPermission { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) of the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the cluster.</p>",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationMode? AuthenticationModeValue { get; set; }
        /// <summary>
        /// <p>The Base64-encoded certificate data required to communicate with your cluster. Add this to the <code>certificate-authority-data</code>
        /// section of the <code>kubeconfig</code> file for your cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Base64-encoded certificate data required to communicate with your cluster. Add this to the <code>certificate-authority-data</code> section of the <code>kubeconfig</code> file for your cluster.</p>",
        SerializedName = @"data",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateAuthorityData { get; set; }
        /// <summary>
        /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
        SerializedName = @"clientRequestToken",
        PossibleTypes = new [] { typeof(string) })]
        string ClientRequestToken { get; set; }
        /// <summary><p>A unique code associated with the cluster for registration purposes.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A unique code associated with the cluster for registration purposes.</p>",
        SerializedName = @"activationCode",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorConfigActivationCode { get; set; }
        /// <summary>
        /// <p>The expiration time of the connected cluster. The cluster's YAML file must be applied through the native provider.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The expiration time of the connected cluster. The cluster's YAML file must be applied through the native provider.</p>",
        SerializedName = @"activationExpiry",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ConnectorConfigActivationExpiry { get; set; }
        /// <summary><p>A unique ID associated with the cluster for registration purposes.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>A unique ID associated with the cluster for registration purposes.</p>",
        SerializedName = @"activationId",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorConfigActivationId { get; set; }
        /// <summary><p>The cluster's cloud service provider.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The cluster's cloud service provider.</p>",
        SerializedName = @"provider",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorConfigProvider { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the role to communicate with services from the connected Kubernetes cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the role to communicate with services from the connected Kubernetes cluster.</p>",
        SerializedName = @"roleArn",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorConfigRoleArn { get; set; }
        /// <summary>
        /// <p>The name of the placement group for the Kubernetes control plane instances.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of the placement group for the Kubernetes control plane instances.</p>",
        SerializedName = @"groupName",
        PossibleTypes = new [] { typeof(string) })]
        string ControlPlanePlacementGroupName { get; set; }
        /// <summary><p>The Unix epoch timestamp at object creation.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Unix epoch timestamp at object creation.</p>",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedAt { get; set; }
        /// <summary><p>The encryption configuration for the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The encryption configuration for the cluster.</p>",
        SerializedName = @"encryptionConfig",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfig) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfig[] EncryptionConfig { get; set; }
        /// <summary><p>The endpoint for your Kubernetes API server.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The endpoint for your Kubernetes API server.</p>",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get; set; }
        /// <summary>
        /// <p>An object representing the health issues of your local Amazon EKS cluster on an Amazon Web Services Outpost.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>An object representing the health issues of your local Amazon EKS cluster on an Amazon Web Services Outpost.</p>",
        SerializedName = @"issues",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterIssue) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterIssue[] HealthIssue { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily? IPFamilyValue { get; set; }
        /// <summary>
        /// <p>The ID of your local Amazon EKS cluster on an Amazon Web Services Outpost. This property isn't available for an Amazon
        /// EKS cluster on the Amazon Web Services cloud.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ID of your local Amazon EKS cluster on an Amazon Web Services Outpost. This property isn't available for an Amazon EKS cluster on the Amazon Web Services cloud.</p>",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>
        /// <p>The CIDR block that Kubernetes <code>Pod</code> and <code>Service</code> object IP addresses are assigned from. Kubernetes
        /// assigns addresses from an <code>IPv4</code> CIDR block assigned to a subnet that the node is in. If you didn't specify
        /// a CIDR block when you created the cluster, then Kubernetes assigns addresses from either the <code>10.100.0.0/16</code>
        /// or <code>172.20.0.0/16</code> CIDR blocks. If this was specified, then it was specified when the cluster was created and
        /// it can't be changed.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The CIDR block that Kubernetes <code>Pod</code> and <code>Service</code> object IP addresses are assigned from. Kubernetes assigns addresses from an <code>IPv4</code> CIDR block assigned to a subnet that the node is in. If you didn't specify a CIDR block when you created the cluster, then Kubernetes assigns addresses from either the <code>10.100.0.0/16</code> or <code>172.20.0.0/16</code> CIDR blocks. If this was specified, then it was specified when the cluster was created and it can't be changed.</p>",
        SerializedName = @"serviceIpv4Cidr",
        PossibleTypes = new [] { typeof(string) })]
        string KuberneteNetworkConfigServiceIpv4Cidr { get; set; }
        /// <summary>
        /// <p>The CIDR block that Kubernetes pod and service IP addresses are assigned from if you created a 1.21 or later cluster
        /// with version 1.10.1 or later of the Amazon VPC CNI add-on and specified <code>ipv6</code> for <b>ipFamily</b> when you
        /// created the cluster. Kubernetes assigns service addresses from the unique local address range (<code>fc00::/7</code>)
        /// because you can't specify a custom IPv6 CIDR block when you create the cluster.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The CIDR block that Kubernetes pod and service IP addresses are assigned from if you created a 1.21 or later cluster with version 1.10.1 or later of the Amazon VPC CNI add-on and specified <code>ipv6</code> for <b>ipFamily</b> when you created the cluster. Kubernetes assigns service addresses from the unique local address range (<code>fc00::/7</code>) because you can't specify a custom IPv6 CIDR block when you create the cluster.</p>",
        SerializedName = @"serviceIpv6Cidr",
        PossibleTypes = new [] { typeof(string) })]
        string KuberneteNetworkConfigServiceIpv6Cidr { get; set; }
        /// <summary><p>The cluster control plane logging configuration for your cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The cluster control plane logging configuration for your cluster.</p>",
        SerializedName = @"clusterLogging",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogSetup) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogSetup[] LoggingClusterLogging { get; set; }
        /// <summary><p>The name of your cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The name of your cluster.</p>",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary><p>The issuer URL for the OIDC identity provider.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The issuer URL for the OIDC identity provider.</p>",
        SerializedName = @"issuer",
        PossibleTypes = new [] { typeof(string) })]
        string OidcIssuer { get; set; }
        /// <summary>
        /// <p>The Amazon EC2 instance type used for the control plane. The instance type is the same for all control plane instances.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon EC2 instance type used for the control plane. The instance type is the same for all control plane instances.</p>",
        SerializedName = @"controlPlaneInstanceType",
        PossibleTypes = new [] { typeof(string) })]
        string OutpostConfigControlPlaneInstanceType { get; set; }
        /// <summary>
        /// <p>The ARN of the Outpost that you specified for use with your local Amazon EKS cluster on Outposts.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The ARN of the Outpost that you specified for use with your local Amazon EKS cluster on Outposts.</p>",
        SerializedName = @"outpostArns",
        PossibleTypes = new [] { typeof(string) })]
        string[] OutpostConfigOutpostArn { get; set; }
        /// <summary>
        /// <p>The platform version of your Amazon EKS cluster. For more information about clusters deployed on the Amazon Web Services
        /// Cloud, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html'>Platform versions</a> in
        /// the <i> <i>Amazon EKS User Guide</i> </i>. For more information about local clusters deployed on an Outpost, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-platform-versions.html'>Amazon
        /// EKS local cluster platform versions</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The platform version of your Amazon EKS cluster. For more information about clusters deployed on the Amazon Web Services Cloud, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html'>Platform versions</a> in the <i> <i>Amazon EKS User Guide</i> </i>. For more information about local clusters deployed on an Outpost, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-platform-versions.html'>Amazon EKS local cluster platform versions</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>",
        SerializedName = @"platformVersion",
        PossibleTypes = new [] { typeof(string) })]
        string PlatformVersion { get; set; }
        /// <summary>
        /// <p>The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group
        /// for control-plane-to-data-plane communication.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.</p>",
        SerializedName = @"clusterSecurityGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceVpcConfigClusterSecurityGroupId { get; set; }
        /// <summary>
        /// <p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API
        /// server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC
        /// endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster,
        /// then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or
        /// Fargate pods. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html'>Amazon
        /// EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster, then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html'>Amazon EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>",
        SerializedName = @"endpointPrivateAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ResourceVpcConfigEndpointPrivateAccess { get; set; }
        /// <summary><p>Whether the public API server endpoint is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether the public API server endpoint is enabled.</p>",
        SerializedName = @"endpointPublicAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ResourceVpcConfigEndpointPublicAccess { get; set; }
        /// <summary>
        /// <p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint.</p>",
        SerializedName = @"publicAccessCidrs",
        PossibleTypes = new [] { typeof(string) })]
        string[] ResourceVpcConfigPublicAccessCidr { get; set; }
        /// <summary>
        /// <p>The security groups associated with the cross-account elastic network interfaces that are used to allow communication
        /// between your nodes and the Kubernetes control plane.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The security groups associated with the cross-account elastic network interfaces that are used to allow communication between your nodes and the Kubernetes control plane.</p>",
        SerializedName = @"securityGroupIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] ResourceVpcConfigSecurityGroupId { get; set; }
        /// <summary><p>The subnets associated with your cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The subnets associated with your cluster.</p>",
        SerializedName = @"subnetIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] ResourceVpcConfigSubnetId { get; set; }
        /// <summary><p>The VPC associated with your cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The VPC associated with your cluster.</p>",
        SerializedName = @"vpcId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceVpcConfigVpcId { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls
        /// to Amazon Web Services API operations on your behalf.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf.</p>",
        SerializedName = @"roleArn",
        PossibleTypes = new [] { typeof(string) })]
        string RoleArn { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStatus? StatusValue { get; set; }
        /// <summary>
        /// <p>Metadata that assists with categorization and organization. Each tag consists of a key and an optional value. You define
        /// both. Tags don't propagate to any other cluster or Amazon Web Services resources.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Metadata that assists with categorization and organization. Each tag consists of a key and an optional value. You define both. Tags don't propagate to any other cluster or Amazon Web Services resources.</p>",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesTags Tag { get; set; }
        /// <summary><p>The Kubernetes server version for the cluster.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The Kubernetes server version for the cluster.</p>",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// Definition of awsEksCluster
    internal partial interface IAwsEksClusterPropertiesInternal

    {
        /// <summary><p>The access configuration for the cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAccessConfigResponse AccessConfig { get; set; }
        /// <summary><p>The current authentication mode of the cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticationModeEnumValue AccessConfigAuthenticationMode { get; set; }
        /// <summary>
        /// <p>Specifies whether or not the cluster creator IAM principal was set as a cluster admin access entry during cluster creation
        /// time.</p>
        /// </summary>
        bool? AccessConfigBootstrapClusterCreatorAdminPermission { get; set; }
        /// <summary><p>The Amazon Resource Name (ARN) of the cluster.</p></summary>
        string Arn { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AuthenticationMode? AuthenticationModeValue { get; set; }
        /// <summary><p>The <code>certificate-authority-data</code> for your cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICertificate CertificateAuthority { get; set; }
        /// <summary>
        /// <p>The Base64-encoded certificate data required to communicate with your cluster. Add this to the <code>certificate-authority-data</code>
        /// section of the <code>kubeconfig</code> file for your cluster.</p>
        /// </summary>
        string CertificateAuthorityData { get; set; }
        /// <summary>
        /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
        /// </summary>
        string ClientRequestToken { get; set; }
        /// <summary><p>The configuration used to connect to a cluster for registration.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConnectorConfigResponse ConnectorConfig { get; set; }
        /// <summary><p>A unique code associated with the cluster for registration purposes.</p></summary>
        string ConnectorConfigActivationCode { get; set; }
        /// <summary>
        /// <p>The expiration time of the connected cluster. The cluster's YAML file must be applied through the native provider.</p>
        /// </summary>
        global::System.DateTime? ConnectorConfigActivationExpiry { get; set; }
        /// <summary><p>A unique ID associated with the cluster for registration purposes.</p></summary>
        string ConnectorConfigActivationId { get; set; }
        /// <summary><p>The cluster's cloud service provider.</p></summary>
        string ConnectorConfigProvider { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the role to communicate with services from the connected Kubernetes cluster.</p>
        /// </summary>
        string ConnectorConfigRoleArn { get; set; }
        /// <summary>
        /// <p>The name of the placement group for the Kubernetes control plane instances.</p>
        /// </summary>
        string ControlPlanePlacementGroupName { get; set; }
        /// <summary><p>The Unix epoch timestamp at object creation.</p></summary>
        global::System.DateTime? CreatedAt { get; set; }
        /// <summary><p>The encryption configuration for the cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEncryptionConfig[] EncryptionConfig { get; set; }
        /// <summary><p>The endpoint for your Kubernetes API server.</p></summary>
        string Endpoint { get; set; }
        /// <summary>
        /// <p>An object representing the health of your local Amazon EKS cluster on an Amazon Web Services Outpost. This object isn't
        /// available for clusters on the Amazon Web Services cloud.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterHealth Health { get; set; }
        /// <summary>
        /// <p>An object representing the health issues of your local Amazon EKS cluster on an Amazon Web Services Outpost.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterIssue[] HealthIssue { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.IPFamily? IPFamilyValue { get; set; }
        /// <summary>
        /// <p>The ID of your local Amazon EKS cluster on an Amazon Web Services Outpost. This property isn't available for an Amazon
        /// EKS cluster on the Amazon Web Services cloud.</p>
        /// </summary>
        string Id { get; set; }
        /// <summary><p>The identity provider information for the cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIdentity Identity { get; set; }
        /// <summary>
        /// <p>An object representing the <a href='https://openid.net/connect/'>OpenID Connect</a> identity provider information.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOidc IdentityOidc { get; set; }
        /// <summary>
        /// <p>The IP family used to assign Kubernetes <code>Pod</code> and <code>Service</code> objects IP addresses. The IP family
        /// is always <code>ipv4</code>, unless you have a <code>1.21</code> or later cluster running version <code>1.10.1</code>
        /// or later of the Amazon VPC CNI plugin for Kubernetes and specified <code>ipv6</code> when you created the cluster. </p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IIPFamilyEnumValue KuberneteNetworkConfigIPFamily { get; set; }
        /// <summary>
        /// <p>The CIDR block that Kubernetes <code>Pod</code> and <code>Service</code> object IP addresses are assigned from. Kubernetes
        /// assigns addresses from an <code>IPv4</code> CIDR block assigned to a subnet that the node is in. If you didn't specify
        /// a CIDR block when you created the cluster, then Kubernetes assigns addresses from either the <code>10.100.0.0/16</code>
        /// or <code>172.20.0.0/16</code> CIDR blocks. If this was specified, then it was specified when the cluster was created and
        /// it can't be changed.</p>
        /// </summary>
        string KuberneteNetworkConfigServiceIpv4Cidr { get; set; }
        /// <summary>
        /// <p>The CIDR block that Kubernetes pod and service IP addresses are assigned from if you created a 1.21 or later cluster
        /// with version 1.10.1 or later of the Amazon VPC CNI add-on and specified <code>ipv6</code> for <b>ipFamily</b> when you
        /// created the cluster. Kubernetes assigns service addresses from the unique local address range (<code>fc00::/7</code>)
        /// because you can't specify a custom IPv6 CIDR block when you create the cluster.</p>
        /// </summary>
        string KuberneteNetworkConfigServiceIpv6Cidr { get; set; }
        /// <summary><p>The Kubernetes network configuration for the cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IKubernetesNetworkConfigResponse KubernetesNetworkConfig { get; set; }
        /// <summary><p>The logging configuration for your cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingAutoGenerated Logging { get; set; }
        /// <summary><p>The cluster control plane logging configuration for your cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogSetup[] LoggingClusterLogging { get; set; }
        /// <summary><p>The name of your cluster.</p></summary>
        string Name { get; set; }
        /// <summary><p>The issuer URL for the OIDC identity provider.</p></summary>
        string OidcIssuer { get; set; }
        /// <summary>
        /// <p>An object representing the configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. This object
        /// isn't available for clusters on the Amazon Web Services cloud.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOutpostConfigResponse OutpostConfig { get; set; }
        /// <summary>
        /// <p>The Amazon EC2 instance type used for the control plane. The instance type is the same for all control plane instances.</p>
        /// </summary>
        string OutpostConfigControlPlaneInstanceType { get; set; }
        /// <summary>
        /// <p>An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster
        /// on an Amazon Web Services Outpost. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html'>Capacity
        /// considerations</a> in the <i>Amazon EKS User Guide</i>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IControlPlanePlacementResponse OutpostConfigControlPlanePlacement { get; set; }
        /// <summary>
        /// <p>The ARN of the Outpost that you specified for use with your local Amazon EKS cluster on Outposts.</p>
        /// </summary>
        string[] OutpostConfigOutpostArn { get; set; }
        /// <summary>
        /// <p>The platform version of your Amazon EKS cluster. For more information about clusters deployed on the Amazon Web Services
        /// Cloud, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html'>Platform versions</a> in
        /// the <i> <i>Amazon EKS User Guide</i> </i>. For more information about local clusters deployed on an Outpost, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-platform-versions.html'>Amazon
        /// EKS local cluster platform versions</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
        /// </summary>
        string PlatformVersion { get; set; }
        /// <summary>
        /// <p>The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group
        /// for control-plane-to-data-plane communication.</p>
        /// </summary>
        string ResourceVpcConfigClusterSecurityGroupId { get; set; }
        /// <summary>
        /// <p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API
        /// server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC
        /// endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster,
        /// then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for communication with the nodes or
        /// Fargate pods. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html'>Amazon
        /// EKS cluster endpoint access control</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
        /// </summary>
        bool? ResourceVpcConfigEndpointPrivateAccess { get; set; }
        /// <summary><p>Whether the public API server endpoint is enabled.</p></summary>
        bool? ResourceVpcConfigEndpointPublicAccess { get; set; }
        /// <summary>
        /// <p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint.</p>
        /// </summary>
        string[] ResourceVpcConfigPublicAccessCidr { get; set; }
        /// <summary>
        /// <p>The security groups associated with the cross-account elastic network interfaces that are used to allow communication
        /// between your nodes and the Kubernetes control plane.</p>
        /// </summary>
        string[] ResourceVpcConfigSecurityGroupId { get; set; }
        /// <summary><p>The subnets associated with your cluster.</p></summary>
        string[] ResourceVpcConfigSubnetId { get; set; }
        /// <summary><p>The VPC associated with your cluster.</p></summary>
        string ResourceVpcConfigVpcId { get; set; }
        /// <summary>
        /// <p>The VPC configuration used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work
        /// properly with Kubernetes. For more information, see <a href='https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html'>Cluster
        /// VPC considerations</a> and <a href='https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html'>Cluster security
        /// group considerations</a> in the <i>Amazon EKS User Guide</i>.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IVpcConfigResponse ResourcesVpcConfig { get; set; }
        /// <summary>
        /// <p>The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls
        /// to Amazon Web Services API operations on your behalf.</p>
        /// </summary>
        string RoleArn { get; set; }
        /// <summary><p>The current status of the cluster.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IClusterStatusEnumValue Status { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ClusterStatus? StatusValue { get; set; }
        /// <summary>
        /// <p>Metadata that assists with categorization and organization. Each tag consists of a key and an optional value. You define
        /// both. Tags don't propagate to any other cluster or Amazon Web Services resources.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEksClusterPropertiesTags Tag { get; set; }
        /// <summary><p>The Kubernetes server version for the cluster.</p></summary>
        string Version { get; set; }

    }
}