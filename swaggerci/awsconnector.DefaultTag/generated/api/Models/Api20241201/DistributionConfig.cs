// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of DistributionConfig</summary>
    public partial class DistributionConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfig,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal
    {

        /// <summary>Backing field for <see cref="Alias" /> property.</summary>
        private string[] _alias;

        /// <summary>
        /// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] Alias { get => this._alias; set => this._alias = value; }

        /// <summary>Backing field for <see cref="CacheBehavior" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICacheBehavior[] _cacheBehavior;

        /// <summary>A complex type that contains zero or more ``CacheBehavior`` elements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICacheBehavior[] CacheBehavior { get => this._cacheBehavior; set => this._cacheBehavior = value; }

        /// <summary>Backing field for <see cref="CnamE" /> property.</summary>
        private string[] _cnamE;

        /// <summary>Property cnamEs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] CnamE { get => this._cnamE; set => this._cnamE = value; }

        /// <summary>Backing field for <see cref="Comment" /> property.</summary>
        private string _comment;

        /// <summary>
        /// A comment to describe the distribution. The comment cannot be longer than 128 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Comment { get => this._comment; set => this._comment = value; }

        /// <summary>Backing field for <see cref="ContinuousDeploymentPolicyId" /> property.</summary>
        private string _continuousDeploymentPolicyId;

        /// <summary>
        /// The identifier of a continuous deployment policy. For more information, see ``CreateContinuousDeploymentPolicy``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ContinuousDeploymentPolicyId { get => this._continuousDeploymentPolicyId; set => this._continuousDeploymentPolicyId = value; }

        /// <summary>Backing field for <see cref="CustomErrorResponse" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICustomErrorResponse[] _customErrorResponse;

        /// <summary>
        /// A complex type that controls the following: + Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
        /// custom error messages before returning the response to the viewer. + How long CloudFront caches HTTP status codes in the
        /// 4xx and 5xx range. For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICustomErrorResponse[] CustomErrorResponse { get => this._customErrorResponse; set => this._customErrorResponse = value; }

        /// <summary>Backing field for <see cref="CustomOrigin" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOrigin _customOrigin;

        /// <summary>Property customOrigin</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOrigin CustomOrigin { get => (this._customOrigin = this._customOrigin ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LegacyCustomOrigin()); set => this._customOrigin = value; }

        /// <summary>Property dnsName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CustomOriginDnsName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOriginInternal)CustomOrigin).DnsName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOriginInternal)CustomOrigin).DnsName = value ?? null; }

        /// <summary>Property httpPort</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? CustomOriginHttpPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOriginInternal)CustomOrigin).HttpPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOriginInternal)CustomOrigin).HttpPort = value ?? default(int); }

        /// <summary>Property httpsPort</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? CustomOriginHttpsPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOriginInternal)CustomOrigin).HttpsPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOriginInternal)CustomOrigin).HttpsPort = value ?? default(int); }

        /// <summary>Property originProtocolPolicy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string CustomOriginProtocolPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOriginInternal)CustomOrigin).OriginProtocolPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOriginInternal)CustomOrigin).OriginProtocolPolicy = value ?? null; }

        /// <summary>Property originSSLProtocols</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] CustomOriginSslProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOriginInternal)CustomOrigin).OriginSslProtocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOriginInternal)CustomOrigin).OriginSslProtocol = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="DefaultCacheBehavior" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDefaultCacheBehavior _defaultCacheBehavior;

        /// <summary>
        /// A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or if files
        /// don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default cache
        /// behavior. A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or
        /// if request URLs don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly
        /// one default cache behavior.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDefaultCacheBehavior DefaultCacheBehavior { get => (this._defaultCacheBehavior = this._defaultCacheBehavior ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DefaultCacheBehavior()); set => this._defaultCacheBehavior = value; }

        /// <summary>Backing field for <see cref="DefaultRootObject" /> property.</summary>
        private string _defaultRootObject;

        /// <summary>
        /// The object that you want CloudFront to request from your origin (for example, ``index.html``) when a viewer requests the
        /// root URL for your distribution (``https://www.example.com``) instead of an object in your distribution (``https://www.example.com/product-description.html``).
        /// Specifying a default root object avoids exposing the contents of your distribution. Specify only the object name, for
        /// example, ``index.html``. Don't add a ``/`` before the object name. If you don't want to specify a default root object
        /// when you create a distribution, include an empty ``DefaultRootObject`` element. To delete the default root object from
        /// an existing distribution, update the distribution configuration and include an empty ``DefaultRootObject`` element. To
        /// replace the default root object, update the distribution configuration and specify the new object. For more information
        /// about the default root object, see [Creating a Default Root Object](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string DefaultRootObject { get => this._defaultRootObject; set => this._defaultRootObject = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>From this field, you can enable or disable the selected distribution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>
        /// A complex type that contains a ``Location`` element for each country in which you want CloudFront either to distribute
        /// your content or not distribute your content.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string[] GeoRestrictionLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictionsInternal)Restriction).GeoRestrictionLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictionsInternal)Restriction).GeoRestrictionLocation = value ?? null /* arrayOf */; }

        /// <summary>
        /// The method that you want to use to restrict distribution of your content by country.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string GeoRestrictionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictionsInternal)Restriction).GeoRestrictionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictionsInternal)Restriction).GeoRestrictionType = value ?? null; }

        /// <summary>Backing field for <see cref="HttpVersion" /> property.</summary>
        private string _httpVersion;

        /// <summary>
        /// (Optional) Specify the maximum HTTP version(s) that you want viewers to use to communicate with CF. The default value
        /// for new distributions is ``http1.1``. For viewers and CF to use HTTP/2, viewers must support TLSv1.2 or later, and must
        /// support Server Name Indication (SNI). For viewers and CF to use HTTP/3, viewers must support TLSv1.3 and Server Name Indication
        /// (SNI). CF supports HTTP/3 connection migration to allow the viewer to switch networks without losing connection. For more
        /// information about connection migration, see [Connection Migration](https://docs.aws.amazon.com/https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-migration)
        /// at RFC 9000. For more information about supported TLSv1.3 ciphers, see [Supported protocols and ciphers between viewers
        /// and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string HttpVersion { get => this._httpVersion; set => this._httpVersion = value; }

        /// <summary>Backing field for <see cref="Ipv6Enabled" /> property.</summary>
        private bool? _ipv6Enabled;

        /// <summary>
        /// If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify ``true``. If
        /// you specify ``false``, CloudFront responds to IPv6 DNS requests with the DNS response code ``NOERROR`` and with no IP
        /// addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution. In general, you
        /// should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you're using signed
        /// URLs or signed cookies to restrict access to your content, and if you're using a custom policy that includes the ``IpAddress``
        /// parameter to restrict the IP addresses that can access your content, don't enable IPv6. If you want to restrict access
        /// to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you
        /// can create two distributions. For more information, see [Creating a Signed URL Using a Custom Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html)
        /// in the *Amazon CloudFront Developer Guide*. If you're using an R53AWSIntlong alias resource record set to route traffic
        /// to your CloudFront distribution, you need to create a second alias resource record set when both of the following are
        /// true: + You enable IPv6 for the distribution + You're using alternate domain names in the URLs for your objects For more
        /// information, see [Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html)
        /// in the *Developer Guide*. If you created a CNAME resource record set, either with R53AWSIntlong or with another DNS service,
        /// you don't need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address
        /// format of the viewer request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Ipv6Enabled { get => this._ipv6Enabled; set => this._ipv6Enabled = value; }

        /// <summary>Backing field for <see cref="Logging" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogging _logging;

        /// <summary>
        /// A complex type that controls whether access logs are written for the distribution. For more information about logging,
        /// see [Access Logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) in the *Amazon CloudFront
        /// Developer Guide*. A complex type that controls whether access logs are written for the distribution.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogging Logging { get => (this._logging = this._logging ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Logging()); set => this._logging = value; }

        /// <summary>
        /// The Amazon S3 bucket to store the access logs in, for example, ``myawslogbucket.s3.amazonaws.com``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LoggingBucket { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingInternal)Logging).Bucket; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingInternal)Logging).Bucket = value ?? null; }

        /// <summary>
        /// Specifies whether you want CloudFront to include cookies in access logs, specify ``true`` for ``IncludeCookies``. If you
        /// choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for
        /// this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include
        /// cookies for an existing distribution, specify ``false`` for ``IncludeCookies``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? LoggingIncludeCooky { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingInternal)Logging).IncludeCooky; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingInternal)Logging).IncludeCooky = value ?? default(bool); }

        /// <summary>
        /// An optional string that you want CloudFront to prefix to the access log ``filenames`` for this distribution, for example,
        /// ``myprefix/``. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty
        /// ``Prefix`` element in the ``Logging`` element.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LoggingPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingInternal)Logging).Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILoggingInternal)Logging).Prefix = value ?? null; }

        /// <summary>Internal Acessors for CustomOrigin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOrigin Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal.CustomOrigin { get => (this._customOrigin = this._customOrigin ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LegacyCustomOrigin()); set { {_customOrigin = value;} } }

        /// <summary>Internal Acessors for Logging</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogging Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal.Logging { get => (this._logging = this._logging ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Logging()); set { {_logging = value;} } }

        /// <summary>Internal Acessors for OriginGroup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroups Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal.OriginGroup { get => (this._originGroup = this._originGroup ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OriginGroups()); set { {_originGroup = value;} } }

        /// <summary>Internal Acessors for Restriction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictions Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal.Restriction { get => (this._restriction = this._restriction ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Restrictions()); set { {_restriction = value;} } }

        /// <summary>Internal Acessors for RestrictionGeoRestriction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGeoRestriction Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal.RestrictionGeoRestriction { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictionsInternal)Restriction).GeoRestriction; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictionsInternal)Restriction).GeoRestriction = value; }

        /// <summary>Internal Acessors for S3Origin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyS3Origin Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal.S3Origin { get => (this._s3Origin = this._s3Origin ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LegacyS3Origin()); set { {_s3Origin = value;} } }

        /// <summary>Internal Acessors for ViewerCertificate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificate Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDistributionConfigInternal.ViewerCertificate { get => (this._viewerCertificate = this._viewerCertificate ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ViewerCertificate()); set { {_viewerCertificate = value;} } }

        /// <summary>Backing field for <see cref="Origin" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOrigin[] _origin;

        /// <summary>A complex type that contains information about origins for this distribution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOrigin[] Origin { get => this._origin; set => this._origin = value; }

        /// <summary>Backing field for <see cref="OriginGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroups _originGroup;

        /// <summary>
        /// A complex type that contains information about origin groups for this distribution. A complex data type for the origin
        /// groups specified for a distribution.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroups OriginGroup { get => (this._originGroup = this._originGroup ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OriginGroups()); set => this._originGroup = value; }

        /// <summary>The items (origin groups) in a distribution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroup[] OriginGroupItem { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroupsInternal)OriginGroup).Item; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroupsInternal)OriginGroup).Item = value ?? null /* arrayOf */; }

        /// <summary>The number of origin groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? OriginGroupQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroupsInternal)OriginGroup).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroupsInternal)OriginGroup).Quantity = value ?? default(int); }

        /// <summary>Backing field for <see cref="PriceClass" /> property.</summary>
        private string _priceClass;

        /// <summary>
        /// The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify ``PriceClass_All``,
        /// CloudFront responds to requests for your objects from all CloudFront edge locations. If you specify a price class other
        /// than ``PriceClass_All``, CloudFront serves your objects from the CloudFront edge location that has the lowest latency
        /// among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified
        /// price class may encounter slower performance. For more information about price classes, see [Choosing the Price Class
        /// for a CloudFront Distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html) in
        /// the *Amazon CloudFront Developer Guide*. For information about CloudFront pricing, including how price classes (such as
        /// Price Class 100) map to CloudFront regions, see [Amazon CloudFront Pricing](https://docs.aws.amazon.com/cloudfront/pricing/).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PriceClass { get => this._priceClass; set => this._priceClass = value; }

        /// <summary>Backing field for <see cref="Restriction" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictions _restriction;

        /// <summary>
        /// A complex type that identifies ways in which you want to restrict distribution of your content. A complex type that identifies
        /// ways in which you want to restrict distribution of your content.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictions Restriction { get => (this._restriction = this._restriction ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Restrictions()); set => this._restriction = value; }

        /// <summary>Backing field for <see cref="S3Origin" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyS3Origin _s3Origin;

        /// <summary>Property s3Origin</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyS3Origin S3Origin { get => (this._s3Origin = this._s3Origin ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LegacyS3Origin()); set => this._s3Origin = value; }

        /// <summary>Property originAccessIdentity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string S3OriginAccessIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyS3OriginInternal)S3Origin).OriginAccessIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyS3OriginInternal)S3Origin).OriginAccessIdentity = value ?? null; }

        /// <summary>Property dnsName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string S3OriginDnsName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyS3OriginInternal)S3Origin).DnsName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyS3OriginInternal)S3Origin).DnsName = value ?? null; }

        /// <summary>Backing field for <see cref="Staging" /> property.</summary>
        private bool? _staging;

        /// <summary>
        /// A Boolean that indicates whether this is a staging distribution. When this value is ``true``, this is a staging distribution.
        /// When this value is ``false``, this is not a staging distribution.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Staging { get => this._staging; set => this._staging = value; }

        /// <summary>Backing field for <see cref="ViewerCertificate" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificate _viewerCertificate;

        /// <summary>
        /// A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers. A complex type
        /// that determines the distribution's SSL/TLS configuration for communicating with viewers. If the distribution doesn't use
        /// ``Aliases`` (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name
        /// such as ``d111111abcdef8.cloudfront.net``—set ``CloudFrontDefaultCertificate`` to ``true`` and leave all other fields
        /// empty. If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), use the fields in this type to specify
        /// the following settings: + Which viewers the distribution accepts HTTPS connections from: only viewers that support [server
        /// name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication) (recommended),
        /// or all viewers including those that don't support SNI. + To accept HTTPS connections from only viewers that support SNI,
        /// set ``SSLSupportMethod`` to ``sni-only``. This is recommended. Most browsers and clients support SNI. (In CloudFormation,
        /// the field name is ``SslSupportMethod``. Note the different capitalization.) + To accept HTTPS connections from all viewers,
        /// including those that don't support SNI, set ``SSLSupportMethod`` to ``vip``. This is not recommended, and results in additional
        /// monthly charges from CloudFront. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// + The minimum SSL/TLS protocol version that the distribution can use to communicate with viewers. To specify a minimum
        /// version, choose a value for ``MinimumProtocolVersion``. For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy)
        /// in the *Amazon CloudFront Developer Guide*. + The location of the SSL/TLS certificate, [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html)
        /// (recommended) or [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html). You specify
        /// the location by setting a value in one of the following fields (not both): + ``ACMCertificateArn`` (In CloudFormation,
        /// this field name is ``AcmCertificateArn``. Note the different capitalization.) + ``IAMCertificateId`` (In CloudFormation,
        /// this field name is ``IamCertificateId``. Note the different capitalization.) All distributions support HTTPS connections
        /// from viewers. To require viewers to use HTTPS only, or to redirect them from HTTP to HTTPS, use ``ViewerProtocolPolicy``
        /// in the ``CacheBehavior`` or ``DefaultCacheBehavior``. To specify how CloudFront should use SSL/TLS to communicate with
        /// your custom origin, use ``CustomOriginConfig``. For more information, see [Using HTTPS with CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html)
        /// and [Using Alternate Domain Names and HTTPS](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificate ViewerCertificate { get => (this._viewerCertificate = this._viewerCertificate ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ViewerCertificate()); set => this._viewerCertificate = value; }

        /// <summary>
        /// In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html),
        /// provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East
        /// (N. Virginia) Region (``us-east-1``). If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ViewerCertificateAcmCertificateArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificateInternal)ViewerCertificate).AcmCertificateArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificateInternal)ViewerCertificate).AcmCertificateArn = value ?? null; }

        /// <summary>
        /// If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``.
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following
        /// fields: + ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both) + ``MinimumProtocolVersion``
        /// + ``SslSupportMethod``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? ViewerCertificateCloudFrontDefaultCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificateInternal)ViewerCertificate).CloudFrontDefaultCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificateInternal)ViewerCertificate).CloudFrontDefaultCertificate = value ?? default(bool); }

        /// <summary>
        /// In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html),
        /// provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ViewerCertificateIamCertificateId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificateInternal)ViewerCertificate).IamCertificateId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificateInternal)ViewerCertificate).IamCertificateId = value ?? null; }

        /// <summary>
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront
        /// to use for HTTPS connections with viewers. The security policy determines two settings: + The minimum SSL/TLS protocol
        /// that CloudFront can use to communicate with viewers. + The ciphers that CloudFront can use to encrypt the content that
        /// it returns to viewers. For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy)
        /// and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers)
        /// in the *Amazon CloudFront Developer Guide*. On the CloudFront console, this setting is called *Security Policy*. When
        /// you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation,
        /// the field name is ``SslSupportMethod``. Note the different capitalization.) If the distribution uses the CloudFront domain
        /// name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically
        /// sets the security policy to ``TLSv1`` regardless of the value that you set here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ViewerCertificateMinimumProtocolVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificateInternal)ViewerCertificate).MinimumProtocolVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificateInternal)ViewerCertificate).MinimumProtocolVersion = value ?? null; }

        /// <summary>
        /// In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.
        /// + ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication).
        /// This is recommended. Most browsers and clients support SNI. + ``vip`` – The distribution accepts HTTPS connections from
        /// all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges
        /// from CloudFront. + ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature
        /// by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront
        /// through the [Center](https://docs.aws.amazon.com/support/home). If the distribution uses the CloudFront domain name such
        /// as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string ViewerCertificateSslSupportMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificateInternal)ViewerCertificate).SslSupportMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificateInternal)ViewerCertificate).SslSupportMethod = value ?? null; }

        /// <summary>Backing field for <see cref="WebAclId" /> property.</summary>
        private string _webAclId;

        /// <summary>
        /// A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL
        /// created using the latest version of WAF, use the ACL ARN, for example ``arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a``.
        /// To specify a web ACL created using WAF Classic, use the ACL ID, for example ``473e64fd-f30b-4765-81a0-62ad96dd167a``.
        /// WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront,
        /// and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests
        /// originate from or the values of query strings, CloudFront responds to requests either with the requested content or with
        /// an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is
        /// blocked. For more information about WAF, see the [Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string WebAclId { get => this._webAclId; set => this._webAclId = value; }

        /// <summary>Creates an new <see cref="DistributionConfig" /> instance.</summary>
        public DistributionConfig()
        {

        }
    }
    /// Definition of DistributionConfig
    public partial interface IDistributionConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
        SerializedName = @"aliases",
        PossibleTypes = new [] { typeof(string) })]
        string[] Alias { get; set; }
        /// <summary>A complex type that contains zero or more ``CacheBehavior`` elements.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A complex type that contains zero or more ``CacheBehavior`` elements.",
        SerializedName = @"cacheBehaviors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICacheBehavior) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICacheBehavior[] CacheBehavior { get; set; }
        /// <summary>Property cnamEs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property cnamEs",
        SerializedName = @"cnamEs",
        PossibleTypes = new [] { typeof(string) })]
        string[] CnamE { get; set; }
        /// <summary>
        /// A comment to describe the distribution. The comment cannot be longer than 128 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A comment to describe the distribution. The comment cannot be longer than 128 characters.",
        SerializedName = @"comment",
        PossibleTypes = new [] { typeof(string) })]
        string Comment { get; set; }
        /// <summary>
        /// The identifier of a continuous deployment policy. For more information, see ``CreateContinuousDeploymentPolicy``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identifier of a continuous deployment policy. For more information, see ``CreateContinuousDeploymentPolicy``.",
        SerializedName = @"continuousDeploymentPolicyId",
        PossibleTypes = new [] { typeof(string) })]
        string ContinuousDeploymentPolicyId { get; set; }
        /// <summary>
        /// A complex type that controls the following: + Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
        /// custom error messages before returning the response to the viewer. + How long CloudFront caches HTTP status codes in the
        /// 4xx and 5xx range. For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A complex type that controls the following:  +  Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.  +  How long CloudFront caches HTTP status codes in the 4xx and 5xx range.   For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.",
        SerializedName = @"customErrorResponses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICustomErrorResponse) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICustomErrorResponse[] CustomErrorResponse { get; set; }
        /// <summary>Property dnsName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property dnsName",
        SerializedName = @"dnsName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomOriginDnsName { get; set; }
        /// <summary>Property httpPort</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property httpPort",
        SerializedName = @"httpPort",
        PossibleTypes = new [] { typeof(int) })]
        int? CustomOriginHttpPort { get; set; }
        /// <summary>Property httpsPort</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property httpsPort",
        SerializedName = @"httpsPort",
        PossibleTypes = new [] { typeof(int) })]
        int? CustomOriginHttpsPort { get; set; }
        /// <summary>Property originProtocolPolicy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property originProtocolPolicy",
        SerializedName = @"originProtocolPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string CustomOriginProtocolPolicy { get; set; }
        /// <summary>Property originSSLProtocols</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property originSSLProtocols",
        SerializedName = @"originSSLProtocols",
        PossibleTypes = new [] { typeof(string) })]
        string[] CustomOriginSslProtocol { get; set; }
        /// <summary>
        /// A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or if files
        /// don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default cache
        /// behavior. A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or
        /// if request URLs don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly
        /// one default cache behavior.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or if files don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default cache behavior. A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or if request URLs don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default cache behavior.",
        SerializedName = @"defaultCacheBehavior",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDefaultCacheBehavior) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDefaultCacheBehavior DefaultCacheBehavior { get; set; }
        /// <summary>
        /// The object that you want CloudFront to request from your origin (for example, ``index.html``) when a viewer requests the
        /// root URL for your distribution (``https://www.example.com``) instead of an object in your distribution (``https://www.example.com/product-description.html``).
        /// Specifying a default root object avoids exposing the contents of your distribution. Specify only the object name, for
        /// example, ``index.html``. Don't add a ``/`` before the object name. If you don't want to specify a default root object
        /// when you create a distribution, include an empty ``DefaultRootObject`` element. To delete the default root object from
        /// an existing distribution, update the distribution configuration and include an empty ``DefaultRootObject`` element. To
        /// replace the default root object, update the distribution configuration and specify the new object. For more information
        /// about the default root object, see [Creating a Default Root Object](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object that you want CloudFront to request from your origin (for example, ``index.html``) when a viewer requests the root URL for your distribution (``https://www.example.com``) instead of an object in your distribution (``https://www.example.com/product-description.html``). Specifying a default root object avoids exposing the contents of your distribution. Specify only the object name, for example, ``index.html``. Don't add a ``/`` before the object name. If you don't want to specify a default root object when you create a distribution, include an empty ``DefaultRootObject`` element. To delete the default root object from an existing distribution, update the distribution configuration and include an empty ``DefaultRootObject`` element. To replace the default root object, update the distribution configuration and specify the new object. For more information about the default root object, see [Creating a Default Root Object](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html) in the *Amazon CloudFront Developer Guide*.",
        SerializedName = @"defaultRootObject",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultRootObject { get; set; }
        /// <summary>From this field, you can enable or disable the selected distribution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"From this field, you can enable or disable the selected distribution.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>
        /// A complex type that contains a ``Location`` element for each country in which you want CloudFront either to distribute
        /// your content or not distribute your content.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A complex type that contains a ``Location`` element for each country in which you want CloudFront either to distribute your content or not distribute your content.",
        SerializedName = @"locations",
        PossibleTypes = new [] { typeof(string) })]
        string[] GeoRestrictionLocation { get; set; }
        /// <summary>
        /// The method that you want to use to restrict distribution of your content by country.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The method that you want to use to restrict distribution of your content by country.",
        SerializedName = @"restrictionType",
        PossibleTypes = new [] { typeof(string) })]
        string GeoRestrictionType { get; set; }
        /// <summary>
        /// (Optional) Specify the maximum HTTP version(s) that you want viewers to use to communicate with CF. The default value
        /// for new distributions is ``http1.1``. For viewers and CF to use HTTP/2, viewers must support TLSv1.2 or later, and must
        /// support Server Name Indication (SNI). For viewers and CF to use HTTP/3, viewers must support TLSv1.3 and Server Name Indication
        /// (SNI). CF supports HTTP/3 connection migration to allow the viewer to switch networks without losing connection. For more
        /// information about connection migration, see [Connection Migration](https://docs.aws.amazon.com/https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-migration)
        /// at RFC 9000. For more information about supported TLSv1.3 ciphers, see [Supported protocols and ciphers between viewers
        /// and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"(Optional) Specify the maximum HTTP version(s) that you want viewers to use to communicate with CF. The default value for new distributions is ``http1.1``. For viewers and CF to use HTTP/2, viewers must support TLSv1.2 or later, and must support Server Name Indication (SNI). For viewers and CF to use HTTP/3, viewers must support TLSv1.3 and Server Name Indication (SNI). CF supports HTTP/3 connection migration to allow the viewer to switch networks without losing connection. For more information about connection migration, see [Connection Migration](https://docs.aws.amazon.com/https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-migration) at RFC 9000. For more information about supported TLSv1.3 ciphers, see [Supported protocols and ciphers between viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html).",
        SerializedName = @"httpVersion",
        PossibleTypes = new [] { typeof(string) })]
        string HttpVersion { get; set; }
        /// <summary>
        /// If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify ``true``. If
        /// you specify ``false``, CloudFront responds to IPv6 DNS requests with the DNS response code ``NOERROR`` and with no IP
        /// addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution. In general, you
        /// should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you're using signed
        /// URLs or signed cookies to restrict access to your content, and if you're using a custom policy that includes the ``IpAddress``
        /// parameter to restrict the IP addresses that can access your content, don't enable IPv6. If you want to restrict access
        /// to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you
        /// can create two distributions. For more information, see [Creating a Signed URL Using a Custom Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html)
        /// in the *Amazon CloudFront Developer Guide*. If you're using an R53AWSIntlong alias resource record set to route traffic
        /// to your CloudFront distribution, you need to create a second alias resource record set when both of the following are
        /// true: + You enable IPv6 for the distribution + You're using alternate domain names in the URLs for your objects For more
        /// information, see [Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html)
        /// in the *Developer Guide*. If you created a CNAME resource record set, either with R53AWSIntlong or with another DNS service,
        /// you don't need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address
        /// format of the viewer request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify ``true``. If you specify ``false``, CloudFront responds to IPv6 DNS requests with the DNS response code ``NOERROR`` and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution. In general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you're using signed URLs or signed cookies to restrict access to your content, and if you're using a custom policy that includes the ``IpAddress`` parameter to restrict the IP addresses that can access your content, don't enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see [Creating a Signed URL Using a Custom Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html) in the *Amazon CloudFront Developer Guide*. If you're using an R53AWSIntlong alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:  +  You enable IPv6 for the distribution  +  You're using alternate domain names in the URLs for your objects   For more information, see [Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html) in the *Developer Guide*. If you created a CNAME resource record set, either with R53AWSIntlong or with another DNS service, you don't need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.",
        SerializedName = @"ipV6Enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Ipv6Enabled { get; set; }
        /// <summary>
        /// The Amazon S3 bucket to store the access logs in, for example, ``myawslogbucket.s3.amazonaws.com``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon S3 bucket to store the access logs in, for example, ``myawslogbucket.s3.amazonaws.com``.",
        SerializedName = @"bucket",
        PossibleTypes = new [] { typeof(string) })]
        string LoggingBucket { get; set; }
        /// <summary>
        /// Specifies whether you want CloudFront to include cookies in access logs, specify ``true`` for ``IncludeCookies``. If you
        /// choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for
        /// this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include
        /// cookies for an existing distribution, specify ``false`` for ``IncludeCookies``.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether you want CloudFront to include cookies in access logs, specify ``true`` for ``IncludeCookies``. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify ``false`` for ``IncludeCookies``.",
        SerializedName = @"includeCookies",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LoggingIncludeCooky { get; set; }
        /// <summary>
        /// An optional string that you want CloudFront to prefix to the access log ``filenames`` for this distribution, for example,
        /// ``myprefix/``. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty
        /// ``Prefix`` element in the ``Logging`` element.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An optional string that you want CloudFront to prefix to the access log ``filenames`` for this distribution, for example, ``myprefix/``. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty ``Prefix`` element in the ``Logging`` element.",
        SerializedName = @"prefix",
        PossibleTypes = new [] { typeof(string) })]
        string LoggingPrefix { get; set; }
        /// <summary>A complex type that contains information about origins for this distribution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A complex type that contains information about origins for this distribution.",
        SerializedName = @"origins",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOrigin) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOrigin[] Origin { get; set; }
        /// <summary>The items (origin groups) in a distribution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The items (origin groups) in a distribution.",
        SerializedName = @"items",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroup) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroup[] OriginGroupItem { get; set; }
        /// <summary>The number of origin groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of origin groups.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? OriginGroupQuantity { get; set; }
        /// <summary>
        /// The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify ``PriceClass_All``,
        /// CloudFront responds to requests for your objects from all CloudFront edge locations. If you specify a price class other
        /// than ``PriceClass_All``, CloudFront serves your objects from the CloudFront edge location that has the lowest latency
        /// among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified
        /// price class may encounter slower performance. For more information about price classes, see [Choosing the Price Class
        /// for a CloudFront Distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html) in
        /// the *Amazon CloudFront Developer Guide*. For information about CloudFront pricing, including how price classes (such as
        /// Price Class 100) map to CloudFront regions, see [Amazon CloudFront Pricing](https://docs.aws.amazon.com/cloudfront/pricing/).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify ``PriceClass_All``, CloudFront responds to requests for your objects from all CloudFront edge locations. If you specify a price class other than ``PriceClass_All``, CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance. For more information about price classes, see [Choosing the Price Class for a CloudFront Distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html) in the *Amazon CloudFront Developer Guide*. For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see [Amazon CloudFront Pricing](https://docs.aws.amazon.com/cloudfront/pricing/).",
        SerializedName = @"priceClass",
        PossibleTypes = new [] { typeof(string) })]
        string PriceClass { get; set; }
        /// <summary>Property originAccessIdentity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property originAccessIdentity",
        SerializedName = @"originAccessIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string S3OriginAccessIdentity { get; set; }
        /// <summary>Property dnsName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property dnsName",
        SerializedName = @"dnsName",
        PossibleTypes = new [] { typeof(string) })]
        string S3OriginDnsName { get; set; }
        /// <summary>
        /// A Boolean that indicates whether this is a staging distribution. When this value is ``true``, this is a staging distribution.
        /// When this value is ``false``, this is not a staging distribution.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A Boolean that indicates whether this is a staging distribution. When this value is ``true``, this is a staging distribution. When this value is ``false``, this is not a staging distribution.",
        SerializedName = @"staging",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Staging { get; set; }
        /// <summary>
        /// In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html),
        /// provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East
        /// (N. Virginia) Region (``us-east-1``). If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (``us-east-1``). If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)",
        SerializedName = @"acmCertificateArn",
        PossibleTypes = new [] { typeof(string) })]
        string ViewerCertificateAcmCertificateArn { get; set; }
        /// <summary>
        /// If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``.
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following
        /// fields: + ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both) + ``MinimumProtocolVersion``
        /// + ``SslSupportMethod``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``. If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following fields:  +   ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both)   +   ``MinimumProtocolVersion``   +   ``SslSupportMethod``",
        SerializedName = @"cloudFrontDefaultCertificate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ViewerCertificateCloudFrontDefaultCertificate { get; set; }
        /// <summary>
        /// In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html),
        /// provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)",
        SerializedName = @"iamCertificateId",
        PossibleTypes = new [] { typeof(string) })]
        string ViewerCertificateIamCertificateId { get; set; }
        /// <summary>
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront
        /// to use for HTTPS connections with viewers. The security policy determines two settings: + The minimum SSL/TLS protocol
        /// that CloudFront can use to communicate with viewers. + The ciphers that CloudFront can use to encrypt the content that
        /// it returns to viewers. For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy)
        /// and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers)
        /// in the *Amazon CloudFront Developer Guide*. On the CloudFront console, this setting is called *Security Policy*. When
        /// you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation,
        /// the field name is ``SslSupportMethod``. Note the different capitalization.) If the distribution uses the CloudFront domain
        /// name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically
        /// sets the security policy to ``TLSv1`` regardless of the value that you set here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:  +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.  +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.   For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.  On the CloudFront console, this setting is called *Security Policy*.  When you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.) If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically sets the security policy to ``TLSv1`` regardless of the value that you set here.",
        SerializedName = @"minimumProtocolVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ViewerCertificateMinimumProtocolVersion { get; set; }
        /// <summary>
        /// In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.
        /// + ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication).
        /// This is recommended. Most browsers and clients support SNI. + ``vip`` – The distribution accepts HTTPS connections from
        /// all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges
        /// from CloudFront. + ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature
        /// by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront
        /// through the [Center](https://docs.aws.amazon.com/support/home). If the distribution uses the CloudFront domain name such
        /// as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization.  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.  +   ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.  +   ``vip`` – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.  +   ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).   If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.",
        SerializedName = @"sslSupportMethod",
        PossibleTypes = new [] { typeof(string) })]
        string ViewerCertificateSslSupportMethod { get; set; }
        /// <summary>
        /// A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL
        /// created using the latest version of WAF, use the ACL ARN, for example ``arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a``.
        /// To specify a web ACL created using WAF Classic, use the ACL ID, for example ``473e64fd-f30b-4765-81a0-62ad96dd167a``.
        /// WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront,
        /// and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests
        /// originate from or the values of query strings, CloudFront responds to requests either with the requested content or with
        /// an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is
        /// blocked. For more information about WAF, see the [Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example ``arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a``. To specify a web ACL created using WAF Classic, use the ACL ID, for example ``473e64fd-f30b-4765-81a0-62ad96dd167a``.  WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the [Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html).",
        SerializedName = @"webACLId",
        PossibleTypes = new [] { typeof(string) })]
        string WebAclId { get; set; }

    }
    /// Definition of DistributionConfig
    internal partial interface IDistributionConfigInternal

    {
        /// <summary>
        /// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.
        /// </summary>
        string[] Alias { get; set; }
        /// <summary>A complex type that contains zero or more ``CacheBehavior`` elements.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICacheBehavior[] CacheBehavior { get; set; }
        /// <summary>Property cnamEs</summary>
        string[] CnamE { get; set; }
        /// <summary>
        /// A comment to describe the distribution. The comment cannot be longer than 128 characters.
        /// </summary>
        string Comment { get; set; }
        /// <summary>
        /// The identifier of a continuous deployment policy. For more information, see ``CreateContinuousDeploymentPolicy``.
        /// </summary>
        string ContinuousDeploymentPolicyId { get; set; }
        /// <summary>
        /// A complex type that controls the following: + Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
        /// custom error messages before returning the response to the viewer. + How long CloudFront caches HTTP status codes in the
        /// 4xx and 5xx range. For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICustomErrorResponse[] CustomErrorResponse { get; set; }
        /// <summary>Property customOrigin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyCustomOrigin CustomOrigin { get; set; }
        /// <summary>Property dnsName</summary>
        string CustomOriginDnsName { get; set; }
        /// <summary>Property httpPort</summary>
        int? CustomOriginHttpPort { get; set; }
        /// <summary>Property httpsPort</summary>
        int? CustomOriginHttpsPort { get; set; }
        /// <summary>Property originProtocolPolicy</summary>
        string CustomOriginProtocolPolicy { get; set; }
        /// <summary>Property originSSLProtocols</summary>
        string[] CustomOriginSslProtocol { get; set; }
        /// <summary>
        /// A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or if files
        /// don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default cache
        /// behavior. A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or
        /// if request URLs don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly
        /// one default cache behavior.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IDefaultCacheBehavior DefaultCacheBehavior { get; set; }
        /// <summary>
        /// The object that you want CloudFront to request from your origin (for example, ``index.html``) when a viewer requests the
        /// root URL for your distribution (``https://www.example.com``) instead of an object in your distribution (``https://www.example.com/product-description.html``).
        /// Specifying a default root object avoids exposing the contents of your distribution. Specify only the object name, for
        /// example, ``index.html``. Don't add a ``/`` before the object name. If you don't want to specify a default root object
        /// when you create a distribution, include an empty ``DefaultRootObject`` element. To delete the default root object from
        /// an existing distribution, update the distribution configuration and include an empty ``DefaultRootObject`` element. To
        /// replace the default root object, update the distribution configuration and specify the new object. For more information
        /// about the default root object, see [Creating a Default Root Object](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        string DefaultRootObject { get; set; }
        /// <summary>From this field, you can enable or disable the selected distribution.</summary>
        bool? Enabled { get; set; }
        /// <summary>
        /// A complex type that contains a ``Location`` element for each country in which you want CloudFront either to distribute
        /// your content or not distribute your content.
        /// </summary>
        string[] GeoRestrictionLocation { get; set; }
        /// <summary>
        /// The method that you want to use to restrict distribution of your content by country.
        /// </summary>
        string GeoRestrictionType { get; set; }
        /// <summary>
        /// (Optional) Specify the maximum HTTP version(s) that you want viewers to use to communicate with CF. The default value
        /// for new distributions is ``http1.1``. For viewers and CF to use HTTP/2, viewers must support TLSv1.2 or later, and must
        /// support Server Name Indication (SNI). For viewers and CF to use HTTP/3, viewers must support TLSv1.3 and Server Name Indication
        /// (SNI). CF supports HTTP/3 connection migration to allow the viewer to switch networks without losing connection. For more
        /// information about connection migration, see [Connection Migration](https://docs.aws.amazon.com/https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-migration)
        /// at RFC 9000. For more information about supported TLSv1.3 ciphers, see [Supported protocols and ciphers between viewers
        /// and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html).
        /// </summary>
        string HttpVersion { get; set; }
        /// <summary>
        /// If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify ``true``. If
        /// you specify ``false``, CloudFront responds to IPv6 DNS requests with the DNS response code ``NOERROR`` and with no IP
        /// addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution. In general, you
        /// should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you're using signed
        /// URLs or signed cookies to restrict access to your content, and if you're using a custom policy that includes the ``IpAddress``
        /// parameter to restrict the IP addresses that can access your content, don't enable IPv6. If you want to restrict access
        /// to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you
        /// can create two distributions. For more information, see [Creating a Signed URL Using a Custom Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html)
        /// in the *Amazon CloudFront Developer Guide*. If you're using an R53AWSIntlong alias resource record set to route traffic
        /// to your CloudFront distribution, you need to create a second alias resource record set when both of the following are
        /// true: + You enable IPv6 for the distribution + You're using alternate domain names in the URLs for your objects For more
        /// information, see [Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html)
        /// in the *Developer Guide*. If you created a CNAME resource record set, either with R53AWSIntlong or with another DNS service,
        /// you don't need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address
        /// format of the viewer request.
        /// </summary>
        bool? Ipv6Enabled { get; set; }
        /// <summary>
        /// A complex type that controls whether access logs are written for the distribution. For more information about logging,
        /// see [Access Logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) in the *Amazon CloudFront
        /// Developer Guide*. A complex type that controls whether access logs are written for the distribution.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogging Logging { get; set; }
        /// <summary>
        /// The Amazon S3 bucket to store the access logs in, for example, ``myawslogbucket.s3.amazonaws.com``.
        /// </summary>
        string LoggingBucket { get; set; }
        /// <summary>
        /// Specifies whether you want CloudFront to include cookies in access logs, specify ``true`` for ``IncludeCookies``. If you
        /// choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for
        /// this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include
        /// cookies for an existing distribution, specify ``false`` for ``IncludeCookies``.
        /// </summary>
        bool? LoggingIncludeCooky { get; set; }
        /// <summary>
        /// An optional string that you want CloudFront to prefix to the access log ``filenames`` for this distribution, for example,
        /// ``myprefix/``. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty
        /// ``Prefix`` element in the ``Logging`` element.
        /// </summary>
        string LoggingPrefix { get; set; }
        /// <summary>A complex type that contains information about origins for this distribution.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOrigin[] Origin { get; set; }
        /// <summary>
        /// A complex type that contains information about origin groups for this distribution. A complex data type for the origin
        /// groups specified for a distribution.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroups OriginGroup { get; set; }
        /// <summary>The items (origin groups) in a distribution.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOriginGroup[] OriginGroupItem { get; set; }
        /// <summary>The number of origin groups.</summary>
        int? OriginGroupQuantity { get; set; }
        /// <summary>
        /// The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify ``PriceClass_All``,
        /// CloudFront responds to requests for your objects from all CloudFront edge locations. If you specify a price class other
        /// than ``PriceClass_All``, CloudFront serves your objects from the CloudFront edge location that has the lowest latency
        /// among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified
        /// price class may encounter slower performance. For more information about price classes, see [Choosing the Price Class
        /// for a CloudFront Distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html) in
        /// the *Amazon CloudFront Developer Guide*. For information about CloudFront pricing, including how price classes (such as
        /// Price Class 100) map to CloudFront regions, see [Amazon CloudFront Pricing](https://docs.aws.amazon.com/cloudfront/pricing/).
        /// </summary>
        string PriceClass { get; set; }
        /// <summary>
        /// A complex type that identifies ways in which you want to restrict distribution of your content. A complex type that identifies
        /// ways in which you want to restrict distribution of your content.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IRestrictions Restriction { get; set; }
        /// <summary>
        /// A complex type that controls the countries in which your content is distributed. CF determines the location of your users
        /// using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions)
        /// property from your stack template. A complex type that controls the countries in which your content is distributed. CF
        /// determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions)
        /// property from your stack template.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IGeoRestriction RestrictionGeoRestriction { get; set; }
        /// <summary>Property s3Origin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILegacyS3Origin S3Origin { get; set; }
        /// <summary>Property originAccessIdentity</summary>
        string S3OriginAccessIdentity { get; set; }
        /// <summary>Property dnsName</summary>
        string S3OriginDnsName { get; set; }
        /// <summary>
        /// A Boolean that indicates whether this is a staging distribution. When this value is ``true``, this is a staging distribution.
        /// When this value is ``false``, this is not a staging distribution.
        /// </summary>
        bool? Staging { get; set; }
        /// <summary>
        /// A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers. A complex type
        /// that determines the distribution's SSL/TLS configuration for communicating with viewers. If the distribution doesn't use
        /// ``Aliases`` (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name
        /// such as ``d111111abcdef8.cloudfront.net``—set ``CloudFrontDefaultCertificate`` to ``true`` and leave all other fields
        /// empty. If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), use the fields in this type to specify
        /// the following settings: + Which viewers the distribution accepts HTTPS connections from: only viewers that support [server
        /// name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication) (recommended),
        /// or all viewers including those that don't support SNI. + To accept HTTPS connections from only viewers that support SNI,
        /// set ``SSLSupportMethod`` to ``sni-only``. This is recommended. Most browsers and clients support SNI. (In CloudFormation,
        /// the field name is ``SslSupportMethod``. Note the different capitalization.) + To accept HTTPS connections from all viewers,
        /// including those that don't support SNI, set ``SSLSupportMethod`` to ``vip``. This is not recommended, and results in additional
        /// monthly charges from CloudFront. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// + The minimum SSL/TLS protocol version that the distribution can use to communicate with viewers. To specify a minimum
        /// version, choose a value for ``MinimumProtocolVersion``. For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy)
        /// in the *Amazon CloudFront Developer Guide*. + The location of the SSL/TLS certificate, [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html)
        /// (recommended) or [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html). You specify
        /// the location by setting a value in one of the following fields (not both): + ``ACMCertificateArn`` (In CloudFormation,
        /// this field name is ``AcmCertificateArn``. Note the different capitalization.) + ``IAMCertificateId`` (In CloudFormation,
        /// this field name is ``IamCertificateId``. Note the different capitalization.) All distributions support HTTPS connections
        /// from viewers. To require viewers to use HTTPS only, or to redirect them from HTTP to HTTPS, use ``ViewerProtocolPolicy``
        /// in the ``CacheBehavior`` or ``DefaultCacheBehavior``. To specify how CloudFront should use SSL/TLS to communicate with
        /// your custom origin, use ``CustomOriginConfig``. For more information, see [Using HTTPS with CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html)
        /// and [Using Alternate Domain Names and HTTPS](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html)
        /// in the *Amazon CloudFront Developer Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IViewerCertificate ViewerCertificate { get; set; }
        /// <summary>
        /// In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html),
        /// provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East
        /// (N. Virginia) Region (``us-east-1``). If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        string ViewerCertificateAcmCertificateArn { get; set; }
        /// <summary>
        /// If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``.
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following
        /// fields: + ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both) + ``MinimumProtocolVersion``
        /// + ``SslSupportMethod``
        /// </summary>
        bool? ViewerCertificateCloudFrontDefaultCertificate { get; set; }
        /// <summary>
        /// In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html),
        /// provide the ID of the IAM certificate. If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion``
        /// and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        /// </summary>
        string ViewerCertificateIamCertificateId { get; set; }
        /// <summary>
        /// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront
        /// to use for HTTPS connections with viewers. The security policy determines two settings: + The minimum SSL/TLS protocol
        /// that CloudFront can use to communicate with viewers. + The ciphers that CloudFront can use to encrypt the content that
        /// it returns to viewers. For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy)
        /// and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers)
        /// in the *Amazon CloudFront Developer Guide*. On the CloudFront console, this setting is called *Security Policy*. When
        /// you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation,
        /// the field name is ``SslSupportMethod``. Note the different capitalization.) If the distribution uses the CloudFront domain
        /// name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically
        /// sets the security policy to ``TLSv1`` regardless of the value that you set here.
        /// </summary>
        string ViewerCertificateMinimumProtocolVersion { get; set; }
        /// <summary>
        /// In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization. If the distribution uses
        /// ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.
        /// + ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication).
        /// This is recommended. Most browsers and clients support SNI. + ``vip`` – The distribution accepts HTTPS connections from
        /// all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges
        /// from CloudFront. + ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature
        /// by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront
        /// through the [Center](https://docs.aws.amazon.com/support/home). If the distribution uses the CloudFront domain name such
        /// as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.
        /// </summary>
        string ViewerCertificateSslSupportMethod { get; set; }
        /// <summary>
        /// A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL
        /// created using the latest version of WAF, use the ACL ARN, for example ``arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a``.
        /// To specify a web ACL created using WAF Classic, use the ACL ID, for example ``473e64fd-f30b-4765-81a0-62ad96dd167a``.
        /// WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront,
        /// and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests
        /// originate from or the values of query strings, CloudFront responds to requests either with the requested content or with
        /// an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is
        /// blocked. For more information about WAF, see the [Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html).
        /// </summary>
        string WebAclId { get; set; }

    }
}