// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of AdvancedSecurityOptions</summary>
    public partial class AdvancedSecurityOptions :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptions,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal
    {

        /// <summary>Backing field for <see cref="AnonymousAuthDisableDate" /> property.</summary>
        private global::System.DateTime? _anonymousAuthDisableDate;

        /// <summary>
        /// <p>Date and time when the migration period will be disabled. Only necessary when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public global::System.DateTime? AnonymousAuthDisableDate { get => this._anonymousAuthDisableDate; set => this._anonymousAuthDisableDate = value; }

        /// <summary>Backing field for <see cref="AnonymousAuthEnabled" /> property.</summary>
        private bool? _anonymousAuthEnabled;

        /// <summary>
        /// <p>True if a 30-day migration period is enabled, during which administrators can create role mappings. Only necessary
        /// when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? AnonymousAuthEnabled { get => this._anonymousAuthEnabled; set => this._anonymousAuthEnabled = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary><p>True if fine-grained access control is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary><p>The unique entity ID of the application in the SAML identity provider.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string IdpEntityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).IdpEntityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).IdpEntityId = value ?? null; }

        /// <summary><p>The metadata of the SAML application, in XML format.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string IdpMetadataContent { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).IdpMetadataContent; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).IdpMetadataContent = value ?? null; }

        /// <summary>Backing field for <see cref="InternalUserDatabaseEnabled" /> property.</summary>
        private bool? _internalUserDatabaseEnabled;

        /// <summary><p>True if the internal user database is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? InternalUserDatabaseEnabled { get => this._internalUserDatabaseEnabled; set => this._internalUserDatabaseEnabled = value; }

        /// <summary>Internal Acessors for SamlOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutput Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal.SamlOption { get => (this._samlOption = this._samlOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SamlOptionsOutput()); set { {_samlOption = value;} } }

        /// <summary>Internal Acessors for SamlOptionIdp</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlIdp Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedSecurityOptionsInternal.SamlOptionIdp { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).Idp; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).Idp = value; }

        /// <summary>Backing field for <see cref="SamlOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutput _samlOption;

        /// <summary>
        /// <p>Container for information about the SAML configuration for OpenSearch Dashboards.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutput SamlOption { get => (this._samlOption = this._samlOption ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SamlOptionsOutput()); set => this._samlOption = value; }

        /// <summary><p>True if SAML is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? SamlOptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).Enabled = value ?? default(bool); }

        /// <summary><p>The key used for matching the SAML roles attribute.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string SamlOptionRolesKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).RolesKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).RolesKey = value ?? null; }

        /// <summary><p>The duration, in minutes, after which a user session becomes inactive.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? SamlOptionSessionTimeoutMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).SessionTimeoutMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).SessionTimeoutMinute = value ?? default(int); }

        /// <summary><p>The key used for matching the SAML subject attribute.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string SamlOptionSubjectKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).SubjectKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutputInternal)SamlOption).SubjectKey = value ?? null; }

        /// <summary>Creates an new <see cref="AdvancedSecurityOptions" /> instance.</summary>
        public AdvancedSecurityOptions()
        {

        }
    }
    /// Definition of AdvancedSecurityOptions
    public partial interface IAdvancedSecurityOptions :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>Date and time when the migration period will be disabled. Only necessary when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Date and time when the migration period will be disabled. Only necessary when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling fine-grained access control on an existing domain</a>.</p>",
        SerializedName = @"anonymousAuthDisableDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AnonymousAuthDisableDate { get; set; }
        /// <summary>
        /// <p>True if a 30-day migration period is enabled, during which administrators can create role mappings. Only necessary
        /// when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True if a 30-day migration period is enabled, during which administrators can create role mappings. Only necessary when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling fine-grained access control on an existing domain</a>.</p>",
        SerializedName = @"anonymousAuthEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AnonymousAuthEnabled { get; set; }
        /// <summary><p>True if fine-grained access control is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True if fine-grained access control is enabled.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary><p>The unique entity ID of the application in the SAML identity provider.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The unique entity ID of the application in the SAML identity provider.</p>",
        SerializedName = @"entityId",
        PossibleTypes = new [] { typeof(string) })]
        string IdpEntityId { get; set; }
        /// <summary><p>The metadata of the SAML application, in XML format.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The metadata of the SAML application, in XML format.</p>",
        SerializedName = @"metadataContent",
        PossibleTypes = new [] { typeof(string) })]
        string IdpMetadataContent { get; set; }
        /// <summary><p>True if the internal user database is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True if the internal user database is enabled.</p>",
        SerializedName = @"internalUserDatabaseEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? InternalUserDatabaseEnabled { get; set; }
        /// <summary><p>True if SAML is enabled.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>True if SAML is enabled.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SamlOptionEnabled { get; set; }
        /// <summary><p>The key used for matching the SAML roles attribute.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The key used for matching the SAML roles attribute.</p>",
        SerializedName = @"rolesKey",
        PossibleTypes = new [] { typeof(string) })]
        string SamlOptionRolesKey { get; set; }
        /// <summary><p>The duration, in minutes, after which a user session becomes inactive.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The duration, in minutes, after which a user session becomes inactive.</p>",
        SerializedName = @"sessionTimeoutMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? SamlOptionSessionTimeoutMinute { get; set; }
        /// <summary><p>The key used for matching the SAML subject attribute.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The key used for matching the SAML subject attribute.</p>",
        SerializedName = @"subjectKey",
        PossibleTypes = new [] { typeof(string) })]
        string SamlOptionSubjectKey { get; set; }

    }
    /// Definition of AdvancedSecurityOptions
    internal partial interface IAdvancedSecurityOptionsInternal

    {
        /// <summary>
        /// <p>Date and time when the migration period will be disabled. Only necessary when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        global::System.DateTime? AnonymousAuthDisableDate { get; set; }
        /// <summary>
        /// <p>True if a 30-day migration period is enabled, during which administrators can create role mappings. Only necessary
        /// when <a href='https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing'>enabling
        /// fine-grained access control on an existing domain</a>.</p>
        /// </summary>
        bool? AnonymousAuthEnabled { get; set; }
        /// <summary><p>True if fine-grained access control is enabled.</p></summary>
        bool? Enabled { get; set; }
        /// <summary><p>The unique entity ID of the application in the SAML identity provider.</p></summary>
        string IdpEntityId { get; set; }
        /// <summary><p>The metadata of the SAML application, in XML format.</p></summary>
        string IdpMetadataContent { get; set; }
        /// <summary><p>True if the internal user database is enabled.</p></summary>
        bool? InternalUserDatabaseEnabled { get; set; }
        /// <summary>
        /// <p>Container for information about the SAML configuration for OpenSearch Dashboards.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlOptionsOutput SamlOption { get; set; }
        /// <summary><p>True if SAML is enabled.</p></summary>
        bool? SamlOptionEnabled { get; set; }
        /// <summary><p>Describes the SAML identity provider's information.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISamlIdp SamlOptionIdp { get; set; }
        /// <summary><p>The key used for matching the SAML roles attribute.</p></summary>
        string SamlOptionRolesKey { get; set; }
        /// <summary><p>The duration, in minutes, after which a user session becomes inactive.</p></summary>
        int? SamlOptionSessionTimeoutMinute { get; set; }
        /// <summary><p>The key used for matching the SAML subject attribute.</p></summary>
        string SamlOptionSubjectKey { get; set; }

    }
}