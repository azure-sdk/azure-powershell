// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of AutoTuneOptionsOutput</summary>
    public partial class AutoTuneOptionsOutput :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutput,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutputInternal
    {

        /// <summary>Backing field for <see cref="ErrorMessage" /> property.</summary>
        private string _errorMessage;

        /// <summary><p>Any errors that occurred while enabling or disabling Auto-Tune.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ErrorMessage { get => this._errorMessage; set => this._errorMessage = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneStateEnumValue Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneOptionsOutputInternal.State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AutoTuneStateEnumValue()); set { {_state = value;} } }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneStateEnumValue _state;

        /// <summary><p>The current state of Auto-Tune on the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneStateEnumValue State { get => (this._state = this._state ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AutoTuneStateEnumValue()); set => this._state = value; }

        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AutoTuneState? StateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneStateEnumValueInternal)State).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneStateEnumValueInternal)State).Value = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AutoTuneState)""); }

        /// <summary>Backing field for <see cref="UseOffPeakWindow" /> property.</summary>
        private bool? _useOffPeakWindow;

        /// <summary>
        /// <p>Whether the domain's off-peak window will be used to deploy Auto-Tune changes rather than a maintenance schedule.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? UseOffPeakWindow { get => this._useOffPeakWindow; set => this._useOffPeakWindow = value; }

        /// <summary>Creates an new <see cref="AutoTuneOptionsOutput" /> instance.</summary>
        public AutoTuneOptionsOutput()
        {

        }
    }
    /// Definition of AutoTuneOptionsOutput
    public partial interface IAutoTuneOptionsOutput :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary><p>Any errors that occurred while enabling or disabling Auto-Tune.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Any errors that occurred while enabling or disabling Auto-Tune.</p>",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorMessage { get; set; }
        /// <summary>Property value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AutoTuneState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AutoTuneState? StateValue { get; set; }
        /// <summary>
        /// <p>Whether the domain's off-peak window will be used to deploy Auto-Tune changes rather than a maintenance schedule.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether the domain's off-peak window will be used to deploy Auto-Tune changes rather than a maintenance schedule.</p>",
        SerializedName = @"useOffPeakWindow",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UseOffPeakWindow { get; set; }

    }
    /// Definition of AutoTuneOptionsOutput
    internal partial interface IAutoTuneOptionsOutputInternal

    {
        /// <summary><p>Any errors that occurred while enabling or disabling Auto-Tune.</p></summary>
        string ErrorMessage { get; set; }
        /// <summary><p>The current state of Auto-Tune on the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAutoTuneStateEnumValue State { get; set; }
        /// <summary>Property value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.AutoTuneState? StateValue { get; set; }
        /// <summary>
        /// <p>Whether the domain's off-peak window will be used to deploy Auto-Tune changes rather than a maintenance schedule.</p>
        /// </summary>
        bool? UseOffPeakWindow { get; set; }

    }
}