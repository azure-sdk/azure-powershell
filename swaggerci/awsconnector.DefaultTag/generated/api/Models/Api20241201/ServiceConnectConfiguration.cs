// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ServiceConnectConfiguration</summary>
    public partial class ServiceConnectConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectConfigurationInternal
    {

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Specifies whether to use Service Connect with this service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="LogConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration _logConfiguration;

        /// <summary>
        /// The log configuration for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default,
        /// containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging
        /// driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information
        /// about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/)
        /// in the Docker documentation. Understand the following when specifying a log configuration for your containers. + Amazon
        /// ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available
        /// in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are ``awslogs``,
        /// ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``,
        /// ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. + This
        /// parameter requires version 1.18 of the Docker Remote API or greater on your container instance. + For tasks that are hosted
        /// on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ``ECS_AVAILABLE_LOGGING_DRIVERS``
        /// environment variable before containers placed on that instance can use these log configuration options. For more information,
        /// see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. + For tasks that are on FARGATElong, because you don't have
        /// access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside
        /// of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to. The log
        /// configuration for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default,
        /// containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging
        /// driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information
        /// about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/)
        /// in the Docker documentation. Understand the following when specifying a log configuration for your containers. + Amazon
        /// ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available
        /// in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are ``awslogs``,
        /// ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``,
        /// ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. + This
        /// parameter requires version 1.18 of the Docker Remote API or greater on your container instance. + For tasks that are hosted
        /// on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ``ECS_AVAILABLE_LOGGING_DRIVERS``
        /// environment variable before containers placed on that instance can use these log configuration options. For more information,
        /// see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. + For tasks that are on FARGATElong, because you don't have
        /// access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside
        /// of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration LogConfiguration { get => (this._logConfiguration = this._logConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogConfiguration()); set => this._logConfiguration = value; }

        /// <summary>
        /// The log driver to use for the container. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``,
        /// and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``,
        /// ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. For more information
        /// about using the ``awslogs`` log driver, see [Using the awslogs log driver](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For more information about using the ``awsfirelens`` log driver,
        /// see [Custom log routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. If you have a custom driver that isn't listed, you can fork the Amazon ECS
        /// container agent project that's [available on GitHub](https://docs.aws.amazon.com/https://github.com/aws/amazon-ecs-agent)
        /// and customize it to work with that driver. We encourage you to submit pull requests for changes that you would like to
        /// have included. However, we don't currently provide support for running modified copies of this software.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string LogConfigurationLogDriver { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).LogDriver; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).LogDriver = value ?? null; }

        /// <summary>
        /// The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or
        /// greater on your container instance. To check the Docker Remote API version on your container instance, log in to your
        /// container instance and run the following command: ``sudo docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny LogConfigurationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).Option; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).Option = value ?? null /* model class */; }

        /// <summary>
        /// The secrets to pass to the log configuration. For more information, see [Specifying sensitive data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[] LogConfigurationSecretOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).SecretOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfigurationInternal)LogConfiguration).SecretOption = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for LogConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectConfigurationInternal.LogConfiguration { get => (this._logConfiguration = this._logConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LogConfiguration()); set { {_logConfiguration = value;} } }

        /// <summary>Backing field for <see cref="Namespace" /> property.</summary>
        private string _namespace;

        /// <summary>
        /// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace for use with Service Connect. The namespace
        /// must be in the same AWS Region as the Amazon ECS service and cluster. The type of namespace doesn't affect Service Connect.
        /// For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html)
        /// in the *Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Namespace { get => this._namespace; set => this._namespace = value; }

        /// <summary>Backing field for <see cref="Service" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectService[] _service;

        /// <summary>
        /// The list of Service Connect service objects. These are names and aliases (also known as endpoints) that are used by other
        /// Amazon ECS services to connect to this service. This field is not required for a 'client' Amazon ECS service that's a
        /// member of a namespace only to connect to other services within the namespace. An example of this would be a frontend application
        /// that accepts incoming requests from either a load balancer that's attached to the service or by other means. An object
        /// selects a port from the task definition, assigns a name for the CMAPlong service, and a list of aliases (endpoints) and
        /// ports for client applications to refer to this service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectService[] Service { get => this._service; set => this._service = value; }

        /// <summary>Creates an new <see cref="ServiceConnectConfiguration" /> instance.</summary>
        public ServiceConnectConfiguration()
        {

        }
    }
    /// Definition of ServiceConnectConfiguration
    public partial interface IServiceConnectConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Specifies whether to use Service Connect with this service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether to use Service Connect with this service.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>
        /// The log driver to use for the container. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``,
        /// and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``,
        /// ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. For more information
        /// about using the ``awslogs`` log driver, see [Using the awslogs log driver](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For more information about using the ``awsfirelens`` log driver,
        /// see [Custom log routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. If you have a custom driver that isn't listed, you can fork the Amazon ECS
        /// container agent project that's [available on GitHub](https://docs.aws.amazon.com/https://github.com/aws/amazon-ecs-agent)
        /// and customize it to work with that driver. We encourage you to submit pull requests for changes that you would like to
        /// have included. However, we don't currently provide support for running modified copies of this software.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The log driver to use for the container. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. For more information about using the ``awslogs`` log driver, see [Using the awslogs log driver](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html) in the *Amazon Elastic Container Service Developer Guide*. For more information about using the ``awsfirelens`` log driver, see [Custom log routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html) in the *Amazon Elastic Container Service Developer Guide*.  If you have a custom driver that isn't listed, you can fork the Amazon ECS container agent project that's [available on GitHub](https://docs.aws.amazon.com/https://github.com/aws/amazon-ecs-agent) and customize it to work with that driver. We encourage you to submit pull requests for changes that you would like to have included. However, we don't currently provide support for running modified copies of this software.",
        SerializedName = @"logDriver",
        PossibleTypes = new [] { typeof(string) })]
        string LogConfigurationLogDriver { get; set; }
        /// <summary>
        /// The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or
        /// greater on your container instance. To check the Docker Remote API version on your container instance, log in to your
        /// container instance and run the following command: ``sudo docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: ``sudo docker version --format '{{.Server.APIVersion}}'``",
        SerializedName = @"options",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny LogConfigurationOption { get; set; }
        /// <summary>
        /// The secrets to pass to the log configuration. For more information, see [Specifying sensitive data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The secrets to pass to the log configuration. For more information, see [Specifying sensitive data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html) in the *Amazon Elastic Container Service Developer Guide*.",
        SerializedName = @"secretOptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[] LogConfigurationSecretOption { get; set; }
        /// <summary>
        /// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace for use with Service Connect. The namespace
        /// must be in the same AWS Region as the Amazon ECS service and cluster. The type of namespace doesn't affect Service Connect.
        /// For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html)
        /// in the *Developer Guide*.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace for use with Service Connect. The namespace must be in the same AWS Region as the Amazon ECS service and cluster. The type of namespace doesn't affect Service Connect. For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html) in the *Developer Guide*.",
        SerializedName = @"namespace",
        PossibleTypes = new [] { typeof(string) })]
        string Namespace { get; set; }
        /// <summary>
        /// The list of Service Connect service objects. These are names and aliases (also known as endpoints) that are used by other
        /// Amazon ECS services to connect to this service. This field is not required for a 'client' Amazon ECS service that's a
        /// member of a namespace only to connect to other services within the namespace. An example of this would be a frontend application
        /// that accepts incoming requests from either a load balancer that's attached to the service or by other means. An object
        /// selects a port from the task definition, assigns a name for the CMAPlong service, and a list of aliases (endpoints) and
        /// ports for client applications to refer to this service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Service Connect service objects. These are names and aliases (also known as endpoints) that are used by other Amazon ECS services to connect to this service.  This field is not required for a 'client' Amazon ECS service that's a member of a namespace only to connect to other services within the namespace. An example of this would be a frontend application that accepts incoming requests from either a load balancer that's attached to the service or by other means. An object selects a port from the task definition, assigns a name for the CMAPlong service, and a list of aliases (endpoints) and ports for client applications to refer to this service.",
        SerializedName = @"services",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectService) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectService[] Service { get; set; }

    }
    /// Definition of ServiceConnectConfiguration
    internal partial interface IServiceConnectConfigurationInternal

    {
        /// <summary>Specifies whether to use Service Connect with this service.</summary>
        bool? Enabled { get; set; }
        /// <summary>
        /// The log configuration for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default,
        /// containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging
        /// driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information
        /// about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/)
        /// in the Docker documentation. Understand the following when specifying a log configuration for your containers. + Amazon
        /// ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available
        /// in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are ``awslogs``,
        /// ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``,
        /// ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. + This
        /// parameter requires version 1.18 of the Docker Remote API or greater on your container instance. + For tasks that are hosted
        /// on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ``ECS_AVAILABLE_LOGGING_DRIVERS``
        /// environment variable before containers placed on that instance can use these log configuration options. For more information,
        /// see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. + For tasks that are on FARGATElong, because you don't have
        /// access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside
        /// of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to. The log
        /// configuration for the container. This parameter maps to ``LogConfig`` in the [Create a container](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)
        /// section of the [Docker Remote API](https://docs.aws.amazon.com/https://docs.docker.com/engine/api/v1.35/) and the ``--log-driver``
        /// option to [docker run](https://docs.aws.amazon.com/https://docs.docker.com/engine/reference/commandline/run/). By default,
        /// containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging
        /// driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information
        /// about the options for different supported log drivers, see [Configure logging drivers](https://docs.aws.amazon.com/https://docs.docker.com/engine/admin/logging/overview/)
        /// in the Docker documentation. Understand the following when specifying a log configuration for your containers. + Amazon
        /// ECS currently supports a subset of the logging drivers available to the Docker daemon. Additional log drivers may be available
        /// in future releases of the Amazon ECS container agent. For tasks on FARGATElong, the supported log drivers are ``awslogs``,
        /// ``splunk``, and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``,
        /// ``fluentd``, ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. + This
        /// parameter requires version 1.18 of the Docker Remote API or greater on your container instance. + For tasks that are hosted
        /// on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ``ECS_AVAILABLE_LOGGING_DRIVERS``
        /// environment variable before containers placed on that instance can use these log configuration options. For more information,
        /// see [Amazon ECS container agent configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. + For tasks that are on FARGATElong, because you don't have
        /// access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside
        /// of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ILogConfiguration LogConfiguration { get; set; }
        /// <summary>
        /// The log driver to use for the container. For tasks on FARGATElong, the supported log drivers are ``awslogs``, ``splunk``,
        /// and ``awsfirelens``. For tasks hosted on Amazon EC2 instances, the supported log drivers are ``awslogs``, ``fluentd``,
        /// ``gelf``, ``json-file``, ``journald``, ``logentries``,``syslog``, ``splunk``, and ``awsfirelens``. For more information
        /// about using the ``awslogs`` log driver, see [Using the awslogs log driver](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_awslogs.html)
        /// in the *Amazon Elastic Container Service Developer Guide*. For more information about using the ``awsfirelens`` log driver,
        /// see [Custom log routing](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html) in the *Amazon
        /// Elastic Container Service Developer Guide*. If you have a custom driver that isn't listed, you can fork the Amazon ECS
        /// container agent project that's [available on GitHub](https://docs.aws.amazon.com/https://github.com/aws/amazon-ecs-agent)
        /// and customize it to work with that driver. We encourage you to submit pull requests for changes that you would like to
        /// have included. However, we don't currently provide support for running modified copies of this software.
        /// </summary>
        string LogConfigurationLogDriver { get; set; }
        /// <summary>
        /// The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or
        /// greater on your container instance. To check the Docker Remote API version on your container instance, log in to your
        /// container instance and run the following command: ``sudo docker version --format '{{.Server.APIVersion}}'``
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.IAny LogConfigurationOption { get; set; }
        /// <summary>
        /// The secrets to pass to the log configuration. For more information, see [Specifying sensitive data](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)
        /// in the *Amazon Elastic Container Service Developer Guide*.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ISecret[] LogConfigurationSecretOption { get; set; }
        /// <summary>
        /// The namespace name or full Amazon Resource Name (ARN) of the CMAPlong namespace for use with Service Connect. The namespace
        /// must be in the same AWS Region as the Amazon ECS service and cluster. The type of namespace doesn't affect Service Connect.
        /// For more information about CMAPlong, see [Working with Services](https://docs.aws.amazon.com/cloud-map/latest/dg/working-with-services.html)
        /// in the *Developer Guide*.
        /// </summary>
        string Namespace { get; set; }
        /// <summary>
        /// The list of Service Connect service objects. These are names and aliases (also known as endpoints) that are used by other
        /// Amazon ECS services to connect to this service. This field is not required for a 'client' Amazon ECS service that's a
        /// member of a namespace only to connect to other services within the namespace. An example of this would be a frontend application
        /// that accepts incoming requests from either a load balancer that's attached to the service or by other means. An object
        /// selects a port from the task definition, assigns a name for the CMAPlong service, and a list of aliases (endpoints) and
        /// ports for client applications to refer to this service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IServiceConnectService[] Service { get; set; }

    }
}