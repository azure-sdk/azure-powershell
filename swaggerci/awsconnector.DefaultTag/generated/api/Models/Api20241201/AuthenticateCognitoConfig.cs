// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of AuthenticateCognitoConfig</summary>
    public partial class AuthenticateCognitoConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfig,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigInternal
    {

        /// <summary>Backing field for <see cref="AuthenticationRequestExtraParam" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigAuthenticationRequestExtraParams _authenticationRequestExtraParam;

        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigAuthenticationRequestExtraParams AuthenticationRequestExtraParam { get => (this._authenticationRequestExtraParam = this._authenticationRequestExtraParam ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AuthenticateCognitoConfigAuthenticationRequestExtraParams()); set => this._authenticationRequestExtraParam = value; }

        /// <summary>Backing field for <see cref="OnUnauthenticatedRequest" /> property.</summary>
        private string _onUnauthenticatedRequest;

        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string OnUnauthenticatedRequest { get => this._onUnauthenticatedRequest; set => this._onUnauthenticatedRequest = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="SessionCookieName" /> property.</summary>
        private string _sessionCookieName;

        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SessionCookieName { get => this._sessionCookieName; set => this._sessionCookieName = value; }

        /// <summary>Backing field for <see cref="SessionTimeout" /> property.</summary>
        private string _sessionTimeout;

        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string SessionTimeout { get => this._sessionTimeout; set => this._sessionTimeout = value; }

        /// <summary>Backing field for <see cref="UserPoolArn" /> property.</summary>
        private string _userPoolArn;

        /// <summary>The Amazon Resource Name (ARN) of the Amazon Cognito user pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string UserPoolArn { get => this._userPoolArn; set => this._userPoolArn = value; }

        /// <summary>Backing field for <see cref="UserPoolClientId" /> property.</summary>
        private string _userPoolClientId;

        /// <summary>The ID of the Amazon Cognito user pool client.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string UserPoolClientId { get => this._userPoolClientId; set => this._userPoolClientId = value; }

        /// <summary>Backing field for <see cref="UserPoolDomain" /> property.</summary>
        private string _userPoolDomain;

        /// <summary>
        /// The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string UserPoolDomain { get => this._userPoolDomain; set => this._userPoolDomain = value; }

        /// <summary>Creates an new <see cref="AuthenticateCognitoConfig" /> instance.</summary>
        public AuthenticateCognitoConfig()
        {

        }
    }
    /// Definition of AuthenticateCognitoConfig
    public partial interface IAuthenticateCognitoConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The query parameters (up to 10) to include in the redirect request to the authorization endpoint.",
        SerializedName = @"authenticationRequestExtraParams",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigAuthenticationRequestExtraParams) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigAuthenticationRequestExtraParams AuthenticationRequestExtraParam { get; set; }
        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The behavior if the user is not authenticated. The following are possible values:  +  deny```` - Return an HTTP 401 Unauthorized error.  +  allow```` - Allow the request to be forwarded to the target.  +  authenticate```` - Redirect the request to the IdP authorization endpoint. This is the default value.",
        SerializedName = @"onUnauthenticatedRequest",
        PossibleTypes = new [] { typeof(string) })]
        string OnUnauthenticatedRequest { get; set; }
        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.",
        SerializedName = @"sessionCookieName",
        PossibleTypes = new [] { typeof(string) })]
        string SessionCookieName { get; set; }
        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).",
        SerializedName = @"sessionTimeout",
        PossibleTypes = new [] { typeof(string) })]
        string SessionTimeout { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of the Amazon Cognito user pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Amazon Resource Name (ARN) of the Amazon Cognito user pool.",
        SerializedName = @"userPoolArn",
        PossibleTypes = new [] { typeof(string) })]
        string UserPoolArn { get; set; }
        /// <summary>The ID of the Amazon Cognito user pool client.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the Amazon Cognito user pool client.",
        SerializedName = @"userPoolClientId",
        PossibleTypes = new [] { typeof(string) })]
        string UserPoolClientId { get; set; }
        /// <summary>
        /// The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.",
        SerializedName = @"userPoolDomain",
        PossibleTypes = new [] { typeof(string) })]
        string UserPoolDomain { get; set; }

    }
    /// Definition of AuthenticateCognitoConfig
    internal partial interface IAuthenticateCognitoConfigInternal

    {
        /// <summary>
        /// The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAuthenticateCognitoConfigAuthenticationRequestExtraParams AuthenticationRequestExtraParam { get; set; }
        /// <summary>
        /// The behavior if the user is not authenticated. The following are possible values: + deny```` - Return an HTTP 401 Unauthorized
        /// error. + allow```` - Allow the request to be forwarded to the target. + authenticate```` - Redirect the request to the
        /// IdP authorization endpoint. This is the default value.
        /// </summary>
        string OnUnauthenticatedRequest { get; set; }
        /// <summary>
        /// The set of user claims to be requested from the IdP. The default is ``openid``. To verify which scope values your IdP
        /// supports and how to separate multiple values, see the documentation for your IdP.
        /// </summary>
        string Scope { get; set; }
        /// <summary>
        /// The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
        /// </summary>
        string SessionCookieName { get; set; }
        /// <summary>
        /// The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).
        /// </summary>
        string SessionTimeout { get; set; }
        /// <summary>The Amazon Resource Name (ARN) of the Amazon Cognito user pool.</summary>
        string UserPoolArn { get; set; }
        /// <summary>The ID of the Amazon Cognito user pool client.</summary>
        string UserPoolClientId { get; set; }
        /// <summary>
        /// The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.
        /// </summary>
        string UserPoolDomain { get; set; }

    }
}