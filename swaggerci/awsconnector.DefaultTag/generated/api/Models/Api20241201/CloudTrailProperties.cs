// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of CloudTrailTrail</summary>
    public partial class CloudTrailProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudTrailProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudTrailPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Arn" /> property.</summary>
        private string _arn;

        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Arn { get => this._arn; set => this._arn = value; }

        /// <summary>
        /// The advanced event selectors that were used to select events for the data store.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedEventSelector[] AwPropertyAdvancedEventSelector { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).AdvancedEventSelector; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).AdvancedEventSelector = value ?? null /* arrayOf */; }

        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).Arn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).Arn = value ?? null; }

        /// <summary>
        /// Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which
        /// CloudTrail logs will be delivered. Not required unless you specify CloudWatchLogsRoleArn.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyCloudWatchLogsLogGroupArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).CloudWatchLogsLogGroupArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).CloudWatchLogsLogGroupArn = value ?? null; }

        /// <summary>
        /// Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyCloudWatchLogsRoleArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).CloudWatchLogsRoleArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).CloudWatchLogsRoleArn = value ?? null; }

        /// <summary>Specifies whether log file validation is enabled. The default is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyEnableLogFileValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).EnableLogFileValidation; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).EnableLogFileValidation = value ?? default(bool); }

        /// <summary>
        /// Use event selectors to further specify the management and data event settings for your trail. By default, trails created
        /// without specific event selectors will be configured to log all read and write management events, and no data events. When
        /// an event occurs in your account, CloudTrail evaluates the event selector for all trails. For each trail, if the event
        /// matches any event selector, the trail processes and logs the event. If the event doesn't match any event selector, the
        /// trail doesn't log the event. You can configure up to five event selectors for a trail.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEventSelector[] AwPropertyEventSelector { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).EventSelector; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).EventSelector = value ?? null /* arrayOf */; }

        /// <summary>
        /// Specifies whether the trail is publishing events from global services such as IAM to the log files.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyIncludeGlobalServiceEvent { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).IncludeGlobalServiceEvent; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).IncludeGlobalServiceEvent = value ?? default(bool); }

        /// <summary>
        /// Lets you enable Insights event logging by specifying the Insights selectors that you want to enable on an existing trail.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInsightSelector[] AwPropertyInsightSelector { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).InsightSelector; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).InsightSelector = value ?? null /* arrayOf */; }

        /// <summary>Whether the CloudTrail is currently logging AWS API calls.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyIsLogging { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).IsLogging; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).IsLogging = value ?? default(bool); }

        /// <summary>
        /// Specifies whether the trail applies only to the current region or to all regions. The default is false. If the trail exists
        /// only in the current region and this value is set to true, shadow trails (replications of the trail) will be created in
        /// the other regions. If the trail exists in all regions and this value is set to false, the trail will remain in the region
        /// where it was created, and its shadow trails in other regions will be deleted. As a best practice, consider using trails
        /// that log events in all regions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyIsMultiRegionTrail { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).IsMultiRegionTrail; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).IsMultiRegionTrail = value ?? default(bool); }

        /// <summary>
        /// Specifies whether the trail is created for all accounts in an organization in AWS Organizations, or only for the current
        /// AWS account. The default is false, and cannot be true unless the call is made on behalf of an AWS account that is the
        /// master account for an organization in AWS Organizations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? AwPropertyIsOrganizationTrail { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).IsOrganizationTrail; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).IsOrganizationTrail = value ?? default(bool); }

        /// <summary>
        /// Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. The value can be an alias name prefixed by
        /// 'alias/', a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyKmsKeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).KmsKeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).KmsKeyId = value ?? null; }

        /// <summary>
        /// Specifies the name of the Amazon S3 bucket designated for publishing log files. See Amazon S3 Bucket Naming Requirements.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyS3BucketName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).S3BucketName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).S3BucketName = value ?? null; }

        /// <summary>
        /// Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery.
        /// For more information, see Finding Your CloudTrail Log Files. The maximum length is 200 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyS3KeyPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).S3KeyPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).S3KeyPrefix = value ?? null; }

        /// <summary>Property snsTopicArn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertySnsTopicArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).SnsTopicArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).SnsTopicArn = value ?? null; }

        /// <summary>
        /// Specifies the name of the Amazon SNS topic defined for notification of log file delivery. The maximum length is 256 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertySnsTopicName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).SnsTopicName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).SnsTopicName = value ?? null; }

        /// <summary>Property tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated6[] AwPropertyTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).Tag = value ?? null /* arrayOf */; }

        /// <summary>Property trailName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public string AwPropertyTrailName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).TrailName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailPropertiesInternal)AwsProperty).TrailName = value ?? null; }

        /// <summary>Backing field for <see cref="AwsAccountId" /> property.</summary>
        private string _awsAccountId;

        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsAccountId { get => this._awsAccountId; set => this._awsAccountId = value; }

        /// <summary>Backing field for <see cref="AwsProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailProperties _awsProperty;

        /// <summary>AWS Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailProperties AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsCloudTrailProperties()); set => this._awsProperty = value; }

        /// <summary>Backing field for <see cref="AwsRegion" /> property.</summary>
        private string _awsRegion;

        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsRegion { get => this._awsRegion; set => this._awsRegion = value; }

        /// <summary>Backing field for <see cref="AwsSourceSchema" /> property.</summary>
        private string _awsSourceSchema;

        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string AwsSourceSchema { get => this._awsSourceSchema; set => this._awsSourceSchema = value; }

        /// <summary>Backing field for <see cref="AwsTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudTrailPropertiesAwsTags _awsTag;

        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudTrailPropertiesAwsTags AwsTag { get => (this._awsTag = this._awsTag ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.CloudTrailPropertiesAwsTags()); set => this._awsTag = value; }

        /// <summary>Internal Acessors for AwsProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailProperties Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudTrailPropertiesInternal.AwsProperty { get => (this._awsProperty = this._awsProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsCloudTrailProperties()); set { {_awsProperty = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudTrailPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicCloudConnectorsResourceId" /> property.</summary>
        private string _publicCloudConnectorsResourceId;

        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudConnectorsResourceId { get => this._publicCloudConnectorsResourceId; set => this._publicCloudConnectorsResourceId = value; }

        /// <summary>Backing field for <see cref="PublicCloudResourceName" /> property.</summary>
        private string _publicCloudResourceName;

        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string PublicCloudResourceName { get => this._publicCloudResourceName; set => this._publicCloudResourceName = value; }

        /// <summary>Creates an new <see cref="CloudTrailProperties" /> instance.</summary>
        public CloudTrailProperties()
        {

        }
    }
    /// Definition of CloudTrailTrail
    public partial interface ICloudTrailProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amazon Resource Name (ARN)",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string Arn { get; set; }
        /// <summary>
        /// The advanced event selectors that were used to select events for the data store.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The advanced event selectors that were used to select events for the data store.",
        SerializedName = @"advancedEventSelectors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedEventSelector) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedEventSelector[] AwPropertyAdvancedEventSelector { get; set; }
        /// <summary>Property arn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property arn",
        SerializedName = @"arn",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyArn { get; set; }
        /// <summary>
        /// Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which
        /// CloudTrail logs will be delivered. Not required unless you specify CloudWatchLogsRoleArn.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which CloudTrail logs will be delivered. Not required unless you specify CloudWatchLogsRoleArn.",
        SerializedName = @"cloudWatchLogsLogGroupArn",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyCloudWatchLogsLogGroupArn { get; set; }
        /// <summary>
        /// Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group.",
        SerializedName = @"cloudWatchLogsRoleArn",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyCloudWatchLogsRoleArn { get; set; }
        /// <summary>Specifies whether log file validation is enabled. The default is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether log file validation is enabled. The default is false.",
        SerializedName = @"enableLogFileValidation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyEnableLogFileValidation { get; set; }
        /// <summary>
        /// Use event selectors to further specify the management and data event settings for your trail. By default, trails created
        /// without specific event selectors will be configured to log all read and write management events, and no data events. When
        /// an event occurs in your account, CloudTrail evaluates the event selector for all trails. For each trail, if the event
        /// matches any event selector, the trail processes and logs the event. If the event doesn't match any event selector, the
        /// trail doesn't log the event. You can configure up to five event selectors for a trail.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Use event selectors to further specify the management and data event settings for your trail. By default, trails created without specific event selectors will be configured to log all read and write management events, and no data events. When an event occurs in your account, CloudTrail evaluates the event selector for all trails. For each trail, if the event matches any event selector, the trail processes and logs the event. If the event doesn't match any event selector, the trail doesn't log the event. You can configure up to five event selectors for a trail.",
        SerializedName = @"eventSelectors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEventSelector) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEventSelector[] AwPropertyEventSelector { get; set; }
        /// <summary>
        /// Specifies whether the trail is publishing events from global services such as IAM to the log files.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the trail is publishing events from global services such as IAM to the log files.",
        SerializedName = @"includeGlobalServiceEvents",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyIncludeGlobalServiceEvent { get; set; }
        /// <summary>
        /// Lets you enable Insights event logging by specifying the Insights selectors that you want to enable on an existing trail.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Lets you enable Insights event logging by specifying the Insights selectors that you want to enable on an existing trail.",
        SerializedName = @"insightSelectors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInsightSelector) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInsightSelector[] AwPropertyInsightSelector { get; set; }
        /// <summary>Whether the CloudTrail is currently logging AWS API calls.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the CloudTrail is currently logging AWS API calls.",
        SerializedName = @"isLogging",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyIsLogging { get; set; }
        /// <summary>
        /// Specifies whether the trail applies only to the current region or to all regions. The default is false. If the trail exists
        /// only in the current region and this value is set to true, shadow trails (replications of the trail) will be created in
        /// the other regions. If the trail exists in all regions and this value is set to false, the trail will remain in the region
        /// where it was created, and its shadow trails in other regions will be deleted. As a best practice, consider using trails
        /// that log events in all regions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the trail applies only to the current region or to all regions. The default is false. If the trail exists only in the current region and this value is set to true, shadow trails (replications of the trail) will be created in the other regions. If the trail exists in all regions and this value is set to false, the trail will remain in the region where it was created, and its shadow trails in other regions will be deleted. As a best practice, consider using trails that log events in all regions.",
        SerializedName = @"isMultiRegionTrail",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyIsMultiRegionTrail { get; set; }
        /// <summary>
        /// Specifies whether the trail is created for all accounts in an organization in AWS Organizations, or only for the current
        /// AWS account. The default is false, and cannot be true unless the call is made on behalf of an AWS account that is the
        /// master account for an organization in AWS Organizations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the trail is created for all accounts in an organization in AWS Organizations, or only for the current AWS account. The default is false, and cannot be true unless the call is made on behalf of an AWS account that is the master account for an organization in AWS Organizations.",
        SerializedName = @"isOrganizationTrail",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AwPropertyIsOrganizationTrail { get; set; }
        /// <summary>
        /// Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. The value can be an alias name prefixed by
        /// 'alias/', a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. The value can be an alias name prefixed by 'alias/', a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.",
        SerializedName = @"kmsKeyId",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyKmsKeyId { get; set; }
        /// <summary>
        /// Specifies the name of the Amazon S3 bucket designated for publishing log files. See Amazon S3 Bucket Naming Requirements.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the name of the Amazon S3 bucket designated for publishing log files. See Amazon S3 Bucket Naming Requirements.",
        SerializedName = @"s3BucketName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyS3BucketName { get; set; }
        /// <summary>
        /// Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery.
        /// For more information, see Finding Your CloudTrail Log Files. The maximum length is 200 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery. For more information, see Finding Your CloudTrail Log Files. The maximum length is 200 characters.",
        SerializedName = @"s3KeyPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyS3KeyPrefix { get; set; }
        /// <summary>Property snsTopicArn</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property snsTopicArn",
        SerializedName = @"snsTopicArn",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertySnsTopicArn { get; set; }
        /// <summary>
        /// Specifies the name of the Amazon SNS topic defined for notification of log file delivery. The maximum length is 256 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the name of the Amazon SNS topic defined for notification of log file delivery. The maximum length is 256 characters.",
        SerializedName = @"snsTopicName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertySnsTopicName { get; set; }
        /// <summary>Property tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property tags",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated6) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated6[] AwPropertyTag { get; set; }
        /// <summary>Property trailName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property trailName",
        SerializedName = @"trailName",
        PossibleTypes = new [] { typeof(string) })]
        string AwPropertyTrailName { get; set; }
        /// <summary>AWS Account ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Account ID",
        SerializedName = @"awsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string AwsAccountId { get; set; }
        /// <summary>AWS Region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Region",
        SerializedName = @"awsRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Source Schema",
        SerializedName = @"awsSourceSchema",
        PossibleTypes = new [] { typeof(string) })]
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AWS Tags",
        SerializedName = @"awsTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudTrailPropertiesAwsTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudTrailPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Connectors Resource ID",
        SerializedName = @"publicCloudConnectorsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public Cloud Resource Name",
        SerializedName = @"publicCloudResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCloudResourceName { get; set; }

    }
    /// Definition of CloudTrailTrail
    internal partial interface ICloudTrailPropertiesInternal

    {
        /// <summary>Amazon Resource Name (ARN)</summary>
        string Arn { get; set; }
        /// <summary>
        /// The advanced event selectors that were used to select events for the data store.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAdvancedEventSelector[] AwPropertyAdvancedEventSelector { get; set; }
        /// <summary>Property arn</summary>
        string AwPropertyArn { get; set; }
        /// <summary>
        /// Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which
        /// CloudTrail logs will be delivered. Not required unless you specify CloudWatchLogsRoleArn.
        /// </summary>
        string AwPropertyCloudWatchLogsLogGroupArn { get; set; }
        /// <summary>
        /// Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group.
        /// </summary>
        string AwPropertyCloudWatchLogsRoleArn { get; set; }
        /// <summary>Specifies whether log file validation is enabled. The default is false.</summary>
        bool? AwPropertyEnableLogFileValidation { get; set; }
        /// <summary>
        /// Use event selectors to further specify the management and data event settings for your trail. By default, trails created
        /// without specific event selectors will be configured to log all read and write management events, and no data events. When
        /// an event occurs in your account, CloudTrail evaluates the event selector for all trails. For each trail, if the event
        /// matches any event selector, the trail processes and logs the event. If the event doesn't match any event selector, the
        /// trail doesn't log the event. You can configure up to five event selectors for a trail.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IEventSelector[] AwPropertyEventSelector { get; set; }
        /// <summary>
        /// Specifies whether the trail is publishing events from global services such as IAM to the log files.
        /// </summary>
        bool? AwPropertyIncludeGlobalServiceEvent { get; set; }
        /// <summary>
        /// Lets you enable Insights event logging by specifying the Insights selectors that you want to enable on an existing trail.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInsightSelector[] AwPropertyInsightSelector { get; set; }
        /// <summary>Whether the CloudTrail is currently logging AWS API calls.</summary>
        bool? AwPropertyIsLogging { get; set; }
        /// <summary>
        /// Specifies whether the trail applies only to the current region or to all regions. The default is false. If the trail exists
        /// only in the current region and this value is set to true, shadow trails (replications of the trail) will be created in
        /// the other regions. If the trail exists in all regions and this value is set to false, the trail will remain in the region
        /// where it was created, and its shadow trails in other regions will be deleted. As a best practice, consider using trails
        /// that log events in all regions.
        /// </summary>
        bool? AwPropertyIsMultiRegionTrail { get; set; }
        /// <summary>
        /// Specifies whether the trail is created for all accounts in an organization in AWS Organizations, or only for the current
        /// AWS account. The default is false, and cannot be true unless the call is made on behalf of an AWS account that is the
        /// master account for an organization in AWS Organizations.
        /// </summary>
        bool? AwPropertyIsOrganizationTrail { get; set; }
        /// <summary>
        /// Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. The value can be an alias name prefixed by
        /// 'alias/', a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
        /// </summary>
        string AwPropertyKmsKeyId { get; set; }
        /// <summary>
        /// Specifies the name of the Amazon S3 bucket designated for publishing log files. See Amazon S3 Bucket Naming Requirements.
        /// </summary>
        string AwPropertyS3BucketName { get; set; }
        /// <summary>
        /// Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery.
        /// For more information, see Finding Your CloudTrail Log Files. The maximum length is 200 characters.
        /// </summary>
        string AwPropertyS3KeyPrefix { get; set; }
        /// <summary>Property snsTopicArn</summary>
        string AwPropertySnsTopicArn { get; set; }
        /// <summary>
        /// Specifies the name of the Amazon SNS topic defined for notification of log file delivery. The maximum length is 256 characters.
        /// </summary>
        string AwPropertySnsTopicName { get; set; }
        /// <summary>Property tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated6[] AwPropertyTag { get; set; }
        /// <summary>Property trailName</summary>
        string AwPropertyTrailName { get; set; }
        /// <summary>AWS Account ID</summary>
        string AwsAccountId { get; set; }
        /// <summary>AWS Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsCloudTrailProperties AwsProperty { get; set; }
        /// <summary>AWS Region</summary>
        string AwsRegion { get; set; }
        /// <summary>AWS Source Schema</summary>
        string AwsSourceSchema { get; set; }
        /// <summary>AWS Tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ICloudTrailPropertiesAwsTags AwsTag { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Public Cloud Connectors Resource ID</summary>
        string PublicCloudConnectorsResourceId { get; set; }
        /// <summary>Public Cloud Resource Name</summary>
        string PublicCloudResourceName { get; set; }

    }
}