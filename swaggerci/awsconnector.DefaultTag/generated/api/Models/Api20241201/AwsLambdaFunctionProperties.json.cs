// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsLambdaFunction</summary>
    public partial class AwsLambdaFunctionProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject into a new instance of <see cref="AwsLambdaFunctionProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AwsLambdaFunctionProperties(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_code = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("code"), out var __jsonCode) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Code.FromJson(__jsonCode) : Code;}
            {_deadLetterConfig = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("deadLetterConfig"), out var __jsonDeadLetterConfig) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.DeadLetterConfig.FromJson(__jsonDeadLetterConfig) : DeadLetterConfig;}
            {_environment = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("environment"), out var __jsonEnvironment) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Environment.FromJson(__jsonEnvironment) : Environment;}
            {_ephemeralStorage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("ephemeralStorage"), out var __jsonEphemeralStorage) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.EphemeralStorageAutoGenerated.FromJson(__jsonEphemeralStorage) : EphemeralStorage;}
            {_imageConfig = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("imageConfig"), out var __jsonImageConfig) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ImageConfig.FromJson(__jsonImageConfig) : ImageConfig;}
            {_loggingConfig = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("loggingConfig"), out var __jsonLoggingConfig) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.LoggingConfig.FromJson(__jsonLoggingConfig) : LoggingConfig;}
            {_runtimeManagementConfig = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("runtimeManagementConfig"), out var __jsonRuntimeManagementConfig) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RuntimeManagementConfig.FromJson(__jsonRuntimeManagementConfig) : RuntimeManagementConfig;}
            {_snapStart = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("snapStart"), out var __jsonSnapStart) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapStart.FromJson(__jsonSnapStart) : SnapStart;}
            {_snapStartResponse = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("snapStartResponse"), out var __jsonSnapStartResponse) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.SnapStartResponse.FromJson(__jsonSnapStartResponse) : SnapStartResponse;}
            {_tracingConfig = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("tracingConfig"), out var __jsonTracingConfig) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TracingConfig.FromJson(__jsonTracingConfig) : TracingConfig;}
            {_vpcConfig = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("vpcConfig"), out var __jsonVpcConfig) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VpcConfigAutoGenerated.FromJson(__jsonVpcConfig) : VpcConfig;}
            {_architecture = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("architectures"), out var __jsonArchitectures) ? If( __jsonArchitectures as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures) (__u is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __t ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures)(__t.ToString()) : ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.Architectures)""))) ))() : null : Architecture;}
            {_arn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("arn"), out var __jsonArn) ? (string)__jsonArn : (string)Arn;}
            {_codeSigningConfigArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("codeSigningConfigArn"), out var __jsonCodeSigningConfigArn) ? (string)__jsonCodeSigningConfigArn : (string)CodeSigningConfigArn;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("description"), out var __jsonDescription) ? (string)__jsonDescription : (string)Description;}
            {_fileSystemConfig = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("fileSystemConfigs"), out var __jsonFileSystemConfigs) ? If( __jsonFileSystemConfigs as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFileSystemConfig[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IFileSystemConfig) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.FileSystemConfig.FromJson(__p) )) ))() : null : FileSystemConfig;}
            {_functionName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("functionName"), out var __jsonFunctionName) ? (string)__jsonFunctionName : (string)FunctionName;}
            {_handler = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("handler"), out var __jsonHandler) ? (string)__jsonHandler : (string)Handler;}
            {_kmsKeyArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("kmsKeyArn"), out var __jsonKmsKeyArn) ? (string)__jsonKmsKeyArn : (string)KmsKeyArn;}
            {_layer = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("layers"), out var __jsonLayers) ? If( __jsonLayers as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(string) (__k is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __j ? (string)(__j.ToString()) : null)) ))() : null : Layer;}
            {_memorySize = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("memorySize"), out var __jsonMemorySize) ? (int?)__jsonMemorySize : MemorySize;}
            {_packageType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("packageType"), out var __jsonPackageType) ? (string)__jsonPackageType : (string)PackageType;}
            {_reservedConcurrentExecution = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("reservedConcurrentExecutions"), out var __jsonReservedConcurrentExecutions) ? (int?)__jsonReservedConcurrentExecutions : ReservedConcurrentExecution;}
            {_role = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("role"), out var __jsonRole) ? (string)__jsonRole : (string)Role;}
            {_runtime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("runtime"), out var __jsonRuntime) ? (string)__jsonRuntime : (string)Runtime;}
            {_tag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("tags"), out var __jsonTags) ? If( __jsonTags as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated37[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated37) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated37.FromJson(__f) )) ))() : null : Tag;}
            {_timeout = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("timeout"), out var __jsonTimeout) ? (int?)__jsonTimeout : Timeout;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsLambdaFunctionProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json ? new AwsLambdaFunctionProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AwsLambdaFunctionProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AwsLambdaFunctionProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._code ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._code.ToJson(null,serializationMode) : null, "code" ,container.Add );
            AddIf( null != this._deadLetterConfig ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._deadLetterConfig.ToJson(null,serializationMode) : null, "deadLetterConfig" ,container.Add );
            AddIf( null != this._environment ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._environment.ToJson(null,serializationMode) : null, "environment" ,container.Add );
            AddIf( null != this._ephemeralStorage ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._ephemeralStorage.ToJson(null,serializationMode) : null, "ephemeralStorage" ,container.Add );
            AddIf( null != this._imageConfig ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._imageConfig.ToJson(null,serializationMode) : null, "imageConfig" ,container.Add );
            AddIf( null != this._loggingConfig ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._loggingConfig.ToJson(null,serializationMode) : null, "loggingConfig" ,container.Add );
            AddIf( null != this._runtimeManagementConfig ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._runtimeManagementConfig.ToJson(null,serializationMode) : null, "runtimeManagementConfig" ,container.Add );
            AddIf( null != this._snapStart ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._snapStart.ToJson(null,serializationMode) : null, "snapStart" ,container.Add );
            AddIf( null != this._snapStartResponse ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._snapStartResponse.ToJson(null,serializationMode) : null, "snapStartResponse" ,container.Add );
            AddIf( null != this._tracingConfig ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._tracingConfig.ToJson(null,serializationMode) : null, "tracingConfig" ,container.Add );
            AddIf( null != this._vpcConfig ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._vpcConfig.ToJson(null,serializationMode) : null, "vpcConfig" ,container.Add );
            if (null != this._architecture)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __x in this._architecture )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("architectures",__w);
            }
            AddIf( null != (((object)this._arn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._arn.ToString()) : null, "arn" ,container.Add );
            AddIf( null != (((object)this._codeSigningConfigArn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._codeSigningConfigArn.ToString()) : null, "codeSigningConfigArn" ,container.Add );
            AddIf( null != (((object)this._description)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._description.ToString()) : null, "description" ,container.Add );
            if (null != this._fileSystemConfig)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __s in this._fileSystemConfig )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("fileSystemConfigs",__r);
            }
            AddIf( null != (((object)this._functionName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._functionName.ToString()) : null, "functionName" ,container.Add );
            AddIf( null != (((object)this._handler)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._handler.ToString()) : null, "handler" ,container.Add );
            AddIf( null != (((object)this._kmsKeyArn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._kmsKeyArn.ToString()) : null, "kmsKeyArn" ,container.Add );
            if (null != this._layer)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __n in this._layer )
                {
                    AddIf(null != (((object)__n)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__n.ToString()) : null ,__m.Add);
                }
                container.Add("layers",__m);
            }
            AddIf( null != this._memorySize ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._memorySize) : null, "memorySize" ,container.Add );
            AddIf( null != (((object)this._packageType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._packageType.ToString()) : null, "packageType" ,container.Add );
            AddIf( null != this._reservedConcurrentExecution ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._reservedConcurrentExecution) : null, "reservedConcurrentExecutions" ,container.Add );
            AddIf( null != (((object)this._role)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._role.ToString()) : null, "role" ,container.Add );
            AddIf( null != (((object)this._runtime)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._runtime.ToString()) : null, "runtime" ,container.Add );
            if (null != this._tag)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __i in this._tag )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("tags",__h);
            }
            AddIf( null != this._timeout ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._timeout) : null, "timeout" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}