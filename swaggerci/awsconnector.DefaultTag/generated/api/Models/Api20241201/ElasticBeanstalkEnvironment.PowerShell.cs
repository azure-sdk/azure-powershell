// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.PowerShell;

    /// <summary>A Microsoft.AwsConnector resource</summary>
    [System.ComponentModel.TypeConverter(typeof(ElasticBeanstalkEnvironmentTypeConverter))]
    public partial class ElasticBeanstalkEnvironment
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticBeanstalkEnvironment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironment"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironment DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ElasticBeanstalkEnvironment(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticBeanstalkEnvironment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironment"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironment DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ElasticBeanstalkEnvironment(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticBeanstalkEnvironment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ElasticBeanstalkEnvironment(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticBeanstalkEnvironmentPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureAsyncOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AzureAsyncOperation = (string) content.GetValueForProperty("AzureAsyncOperation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AzureAsyncOperation, global::System.Convert.ToString);
            }
            if (content.Contains("RetryAfter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).RetryAfter = (int?) content.GetValueForProperty("RetryAfter",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).RetryAfter, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("AwsProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsProperty = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentProperties) content.GetValueForProperty("AwsProperty",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsProperty, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsElasticBeanstalkEnvironmentPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("PublicCloudConnectorsResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).PublicCloudConnectorsResourceId = (string) content.GetValueForProperty("PublicCloudConnectorsResourceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).PublicCloudConnectorsResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("AwsAccountId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsAccountId = (string) content.GetValueForProperty("AwsAccountId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsAccountId, global::System.Convert.ToString);
            }
            if (content.Contains("Arn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).Arn = (string) content.GetValueForProperty("Arn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).Arn, global::System.Convert.ToString);
            }
            if (content.Contains("PublicCloudResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).PublicCloudResourceName = (string) content.GetValueForProperty("PublicCloudResourceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).PublicCloudResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("AwsSourceSchema"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsSourceSchema = (string) content.GetValueForProperty("AwsSourceSchema",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsSourceSchema, global::System.Convert.ToString);
            }
            if (content.Contains("AwsRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsRegion = (string) content.GetValueForProperty("AwsRegion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsRegion, global::System.Convert.ToString);
            }
            if (content.Contains("AwsTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsTag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentPropertiesAwsTags) content.GetValueForProperty("AwsTag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsTag, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticBeanstalkEnvironmentPropertiesAwsTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AwPropertyTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTier = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITier1) content.GetValueForProperty("AwPropertyTier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTier, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Tier1TypeConverter.ConvertFrom);
            }
            if (content.Contains("AwPropertyApplicationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyApplicationName = (string) content.GetValueForProperty("AwPropertyApplicationName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyApplicationName, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyCnamePrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyCnamePrefix = (string) content.GetValueForProperty("AwPropertyCnamePrefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyCnamePrefix, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyDescription = (string) content.GetValueForProperty("AwPropertyDescription",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyDescription, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyEndpointUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyEndpointUrl = (string) content.GetValueForProperty("AwPropertyEndpointUrl",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyEndpointUrl, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyEnvironmentName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyEnvironmentName = (string) content.GetValueForProperty("AwPropertyEnvironmentName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyEnvironmentName, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyOperationsRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyOperationsRole = (string) content.GetValueForProperty("AwPropertyOperationsRole",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyOperationsRole, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyOptionSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyOptionSetting = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOptionSetting[]) content.GetValueForProperty("AwPropertyOptionSetting",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyOptionSetting, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOptionSetting>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OptionSettingTypeConverter.ConvertFrom));
            }
            if (content.Contains("AwPropertyPlatformArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyPlatformArn = (string) content.GetValueForProperty("AwPropertyPlatformArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyPlatformArn, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertySolutionStackName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertySolutionStackName = (string) content.GetValueForProperty("AwPropertySolutionStackName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertySolutionStackName, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated29[]) content.GetValueForProperty("AwPropertyTag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated29>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated29TypeConverter.ConvertFrom));
            }
            if (content.Contains("AwPropertyTemplateName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTemplateName = (string) content.GetValueForProperty("AwPropertyTemplateName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTemplateName, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyVersionLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyVersionLabel = (string) content.GetValueForProperty("AwPropertyVersionLabel",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyVersionLabel, global::System.Convert.ToString);
            }
            if (content.Contains("TierName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierName = (string) content.GetValueForProperty("TierName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierName, global::System.Convert.ToString);
            }
            if (content.Contains("TierType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierType = (string) content.GetValueForProperty("TierType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierType, global::System.Convert.ToString);
            }
            if (content.Contains("TierVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierVersion = (string) content.GetValueForProperty("TierVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierVersion, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticBeanstalkEnvironment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ElasticBeanstalkEnvironment(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticBeanstalkEnvironmentPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureAsyncOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AzureAsyncOperation = (string) content.GetValueForProperty("AzureAsyncOperation",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AzureAsyncOperation, global::System.Convert.ToString);
            }
            if (content.Contains("RetryAfter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).RetryAfter = (int?) content.GetValueForProperty("RetryAfter",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).RetryAfter, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api50.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("AwsProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsProperty = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsElasticBeanstalkEnvironmentProperties) content.GetValueForProperty("AwsProperty",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsProperty, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsElasticBeanstalkEnvironmentPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("PublicCloudConnectorsResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).PublicCloudConnectorsResourceId = (string) content.GetValueForProperty("PublicCloudConnectorsResourceId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).PublicCloudConnectorsResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("AwsAccountId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsAccountId = (string) content.GetValueForProperty("AwsAccountId",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsAccountId, global::System.Convert.ToString);
            }
            if (content.Contains("Arn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).Arn = (string) content.GetValueForProperty("Arn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).Arn, global::System.Convert.ToString);
            }
            if (content.Contains("PublicCloudResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).PublicCloudResourceName = (string) content.GetValueForProperty("PublicCloudResourceName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).PublicCloudResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("AwsSourceSchema"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsSourceSchema = (string) content.GetValueForProperty("AwsSourceSchema",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsSourceSchema, global::System.Convert.ToString);
            }
            if (content.Contains("AwsRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsRegion = (string) content.GetValueForProperty("AwsRegion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsRegion, global::System.Convert.ToString);
            }
            if (content.Contains("AwsTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsTag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentPropertiesAwsTags) content.GetValueForProperty("AwsTag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwsTag, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ElasticBeanstalkEnvironmentPropertiesAwsTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AwPropertyTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTier = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITier1) content.GetValueForProperty("AwPropertyTier",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTier, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Tier1TypeConverter.ConvertFrom);
            }
            if (content.Contains("AwPropertyApplicationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyApplicationName = (string) content.GetValueForProperty("AwPropertyApplicationName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyApplicationName, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyCnamePrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyCnamePrefix = (string) content.GetValueForProperty("AwPropertyCnamePrefix",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyCnamePrefix, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyDescription = (string) content.GetValueForProperty("AwPropertyDescription",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyDescription, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyEndpointUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyEndpointUrl = (string) content.GetValueForProperty("AwPropertyEndpointUrl",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyEndpointUrl, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyEnvironmentName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyEnvironmentName = (string) content.GetValueForProperty("AwPropertyEnvironmentName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyEnvironmentName, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyOperationsRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyOperationsRole = (string) content.GetValueForProperty("AwPropertyOperationsRole",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyOperationsRole, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyOptionSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyOptionSetting = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOptionSetting[]) content.GetValueForProperty("AwPropertyOptionSetting",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyOptionSetting, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOptionSetting>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OptionSettingTypeConverter.ConvertFrom));
            }
            if (content.Contains("AwPropertyPlatformArn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyPlatformArn = (string) content.GetValueForProperty("AwPropertyPlatformArn",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyPlatformArn, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertySolutionStackName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertySolutionStackName = (string) content.GetValueForProperty("AwPropertySolutionStackName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertySolutionStackName, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTag = (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated29[]) content.GetValueForProperty("AwPropertyTag",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTag, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated29>(__y, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated29TypeConverter.ConvertFrom));
            }
            if (content.Contains("AwPropertyTemplateName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTemplateName = (string) content.GetValueForProperty("AwPropertyTemplateName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyTemplateName, global::System.Convert.ToString);
            }
            if (content.Contains("AwPropertyVersionLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyVersionLabel = (string) content.GetValueForProperty("AwPropertyVersionLabel",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).AwPropertyVersionLabel, global::System.Convert.ToString);
            }
            if (content.Contains("TierName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierName = (string) content.GetValueForProperty("TierName",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierName, global::System.Convert.ToString);
            }
            if (content.Contains("TierType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierType = (string) content.GetValueForProperty("TierType",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierType, global::System.Convert.ToString);
            }
            if (content.Contains("TierVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierVersion = (string) content.GetValueForProperty("TierVersion",((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironmentInternal)this).TierVersion, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ElasticBeanstalkEnvironment" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ElasticBeanstalkEnvironment" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IElasticBeanstalkEnvironment FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A Microsoft.AwsConnector resource
    [System.ComponentModel.TypeConverter(typeof(ElasticBeanstalkEnvironmentTypeConverter))]
    public partial interface IElasticBeanstalkEnvironment

    {

    }
}