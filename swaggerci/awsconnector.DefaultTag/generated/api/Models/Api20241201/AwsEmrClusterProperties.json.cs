// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEmrCluster</summary>
    public partial class AwsEmrClusterProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject into a new instance of <see cref="AwsEmrClusterProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AwsEmrClusterProperties(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_ec2InstanceAttribute = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("ec2InstanceAttributes"), out var __jsonEc2InstanceAttributes) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Ec2InstanceAttributes.FromJson(__jsonEc2InstanceAttributes) : Ec2InstanceAttribute;}
            {_instanceCollectionType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("instanceCollectionType"), out var __jsonInstanceCollectionType) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.InstanceCollectionTypeEnumValue.FromJson(__jsonInstanceCollectionType) : InstanceCollectionType;}
            {_kerberosAttribute = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("kerberosAttributes"), out var __jsonKerberosAttributes) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.KerberosAttributes.FromJson(__jsonKerberosAttributes) : KerberosAttribute;}
            {_repoUpgradeOnBoot = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("repoUpgradeOnBoot"), out var __jsonRepoUpgradeOnBoot) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.RepoUpgradeOnBootEnumValue.FromJson(__jsonRepoUpgradeOnBoot) : RepoUpgradeOnBoot;}
            {_scaleDownBehavior = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("scaleDownBehavior"), out var __jsonScaleDownBehavior) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ScaleDownBehaviorEnumValue.FromJson(__jsonScaleDownBehavior) : ScaleDownBehavior;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("status"), out var __jsonStatus) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ClusterStatus1.FromJson(__jsonStatus) : Status;}
            {_application = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("applications"), out var __jsonApplications) ? If( __jsonApplications as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplication[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplication) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Application.FromJson(__u) )) ))() : null : Application;}
            {_autoScalingRole = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("autoScalingRole"), out var __jsonAutoScalingRole) ? (string)__jsonAutoScalingRole : (string)AutoScalingRole;}
            {_autoTerminate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("autoTerminate"), out var __jsonAutoTerminate) ? (bool?)__jsonAutoTerminate : AutoTerminate;}
            {_clusterArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("clusterArn"), out var __jsonClusterArn) ? (string)__jsonClusterArn : (string)ClusterArn;}
            {_configuration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("configurations"), out var __jsonConfigurations) ? If( __jsonConfigurations as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfiguration[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IConfiguration) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.Configuration.FromJson(__p) )) ))() : null : Configuration;}
            {_customAmiId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("customAmiId"), out var __jsonCustomAmiId) ? (string)__jsonCustomAmiId : (string)CustomAmiId;}
            {_ebsRootVolumeIop = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("ebsRootVolumeIops"), out var __jsonEbsRootVolumeIops) ? (int?)__jsonEbsRootVolumeIops : EbsRootVolumeIop;}
            {_ebsRootVolumeSize = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("ebsRootVolumeSize"), out var __jsonEbsRootVolumeSize) ? (int?)__jsonEbsRootVolumeSize : EbsRootVolumeSize;}
            {_ebsRootVolumeThroughput = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("ebsRootVolumeThroughput"), out var __jsonEbsRootVolumeThroughput) ? (int?)__jsonEbsRootVolumeThroughput : EbsRootVolumeThroughput;}
            {_id = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("id"), out var __jsonId) ? (string)__jsonId : (string)Id;}
            {_logEncryptionKmsKeyId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("logEncryptionKmsKeyId"), out var __jsonLogEncryptionKmsKeyId) ? (string)__jsonLogEncryptionKmsKeyId : (string)LogEncryptionKmsKeyId;}
            {_logUri = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("logUri"), out var __jsonLogUri) ? (string)__jsonLogUri : (string)LogUri;}
            {_masterPublicDnsName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("masterPublicDnsName"), out var __jsonMasterPublicDnsName) ? (string)__jsonMasterPublicDnsName : (string)MasterPublicDnsName;}
            {_name = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("name"), out var __jsonName) ? (string)__jsonName : (string)Name;}
            {_normalizedInstanceHour = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("normalizedInstanceHours"), out var __jsonNormalizedInstanceHours) ? (int?)__jsonNormalizedInstanceHours : NormalizedInstanceHour;}
            {_oSReleaseLabel = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("osReleaseLabel"), out var __jsonOSReleaseLabel) ? (string)__jsonOSReleaseLabel : (string)OSReleaseLabel;}
            {_outpostArn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("outpostArn"), out var __jsonOutpostArn) ? (string)__jsonOutpostArn : (string)OutpostArn;}
            {_placementGroup = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("placementGroups"), out var __jsonPlacementGroups) ? If( __jsonPlacementGroups as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementGroupConfig[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IPlacementGroupConfig) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.PlacementGroupConfig.FromJson(__k) )) ))() : null : PlacementGroup;}
            {_releaseLabel = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("releaseLabel"), out var __jsonReleaseLabel) ? (string)__jsonReleaseLabel : (string)ReleaseLabel;}
            {_requestedAmiVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("requestedAmiVersion"), out var __jsonRequestedAmiVersion) ? (string)__jsonRequestedAmiVersion : (string)RequestedAmiVersion;}
            {_runningAmiVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("runningAmiVersion"), out var __jsonRunningAmiVersion) ? (string)__jsonRunningAmiVersion : (string)RunningAmiVersion;}
            {_securityConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("securityConfiguration"), out var __jsonSecurityConfiguration) ? (string)__jsonSecurityConfiguration : (string)SecurityConfiguration;}
            {_serviceRole = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("serviceRole"), out var __jsonServiceRole) ? (string)__jsonServiceRole : (string)ServiceRole;}
            {_stepConcurrencyLevel = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("stepConcurrencyLevel"), out var __jsonStepConcurrencyLevel) ? (int?)__jsonStepConcurrencyLevel : StepConcurrencyLevel;}
            {_tag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("tags"), out var __jsonTags) ? If( __jsonTags as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated32[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ITagAutoGenerated32) (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TagAutoGenerated32.FromJson(__f) )) ))() : null : Tag;}
            {_terminationProtected = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("terminationProtected"), out var __jsonTerminationProtected) ? (bool?)__jsonTerminationProtected : TerminationProtected;}
            {_unhealthyNodeReplacement = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("unhealthyNodeReplacement"), out var __jsonUnhealthyNodeReplacement) ? (bool?)__jsonUnhealthyNodeReplacement : UnhealthyNodeReplacement;}
            {_visibleToAllUser = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("visibleToAllUsers"), out var __jsonVisibleToAllUsers) ? (bool?)__jsonVisibleToAllUsers : VisibleToAllUser;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEmrClusterProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json ? new AwsEmrClusterProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AwsEmrClusterProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AwsEmrClusterProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._ec2InstanceAttribute ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._ec2InstanceAttribute.ToJson(null,serializationMode) : null, "ec2InstanceAttributes" ,container.Add );
            AddIf( null != this._instanceCollectionType ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._instanceCollectionType.ToJson(null,serializationMode) : null, "instanceCollectionType" ,container.Add );
            AddIf( null != this._kerberosAttribute ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._kerberosAttribute.ToJson(null,serializationMode) : null, "kerberosAttributes" ,container.Add );
            AddIf( null != this._repoUpgradeOnBoot ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._repoUpgradeOnBoot.ToJson(null,serializationMode) : null, "repoUpgradeOnBoot" ,container.Add );
            AddIf( null != this._scaleDownBehavior ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._scaleDownBehavior.ToJson(null,serializationMode) : null, "scaleDownBehavior" ,container.Add );
            AddIf( null != this._status ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._status.ToJson(null,serializationMode) : null, "status" ,container.Add );
            if (null != this._application)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __x in this._application )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("applications",__w);
            }
            AddIf( null != (((object)this._autoScalingRole)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._autoScalingRole.ToString()) : null, "autoScalingRole" ,container.Add );
            AddIf( null != this._autoTerminate ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._autoTerminate) : null, "autoTerminate" ,container.Add );
            AddIf( null != (((object)this._clusterArn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._clusterArn.ToString()) : null, "clusterArn" ,container.Add );
            if (null != this._configuration)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __s in this._configuration )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("configurations",__r);
            }
            AddIf( null != (((object)this._customAmiId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._customAmiId.ToString()) : null, "customAmiId" ,container.Add );
            AddIf( null != this._ebsRootVolumeIop ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._ebsRootVolumeIop) : null, "ebsRootVolumeIops" ,container.Add );
            AddIf( null != this._ebsRootVolumeSize ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._ebsRootVolumeSize) : null, "ebsRootVolumeSize" ,container.Add );
            AddIf( null != this._ebsRootVolumeThroughput ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._ebsRootVolumeThroughput) : null, "ebsRootVolumeThroughput" ,container.Add );
            AddIf( null != (((object)this._id)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._id.ToString()) : null, "id" ,container.Add );
            AddIf( null != (((object)this._logEncryptionKmsKeyId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._logEncryptionKmsKeyId.ToString()) : null, "logEncryptionKmsKeyId" ,container.Add );
            AddIf( null != (((object)this._logUri)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._logUri.ToString()) : null, "logUri" ,container.Add );
            AddIf( null != (((object)this._masterPublicDnsName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._masterPublicDnsName.ToString()) : null, "masterPublicDnsName" ,container.Add );
            AddIf( null != (((object)this._name)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._name.ToString()) : null, "name" ,container.Add );
            AddIf( null != this._normalizedInstanceHour ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._normalizedInstanceHour) : null, "normalizedInstanceHours" ,container.Add );
            AddIf( null != (((object)this._oSReleaseLabel)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._oSReleaseLabel.ToString()) : null, "osReleaseLabel" ,container.Add );
            AddIf( null != (((object)this._outpostArn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._outpostArn.ToString()) : null, "outpostArn" ,container.Add );
            if (null != this._placementGroup)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __n in this._placementGroup )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("placementGroups",__m);
            }
            AddIf( null != (((object)this._releaseLabel)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._releaseLabel.ToString()) : null, "releaseLabel" ,container.Add );
            AddIf( null != (((object)this._requestedAmiVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._requestedAmiVersion.ToString()) : null, "requestedAmiVersion" ,container.Add );
            AddIf( null != (((object)this._runningAmiVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._runningAmiVersion.ToString()) : null, "runningAmiVersion" ,container.Add );
            AddIf( null != (((object)this._securityConfiguration)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._securityConfiguration.ToString()) : null, "securityConfiguration" ,container.Add );
            AddIf( null != (((object)this._serviceRole)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._serviceRole.ToString()) : null, "serviceRole" ,container.Add );
            AddIf( null != this._stepConcurrencyLevel ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._stepConcurrencyLevel) : null, "stepConcurrencyLevel" ,container.Add );
            if (null != this._tag)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __i in this._tag )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("tags",__h);
            }
            AddIf( null != this._terminationProtected ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._terminationProtected) : null, "terminationProtected" ,container.Add );
            AddIf( null != this._unhealthyNodeReplacement ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._unhealthyNodeReplacement) : null, "unhealthyNodeReplacement" ,container.Add );
            AddIf( null != this._visibleToAllUser ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._visibleToAllUser) : null, "visibleToAllUsers" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}