// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of ApplicationResourceLifecycleConfig</summary>
    public partial class ApplicationResourceLifecycleConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfig,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal
    {

        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxAgeRuleDeleteSourceFromS3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxAgeRuleDeleteSourceFromS3; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxAgeRuleDeleteSourceFromS3 = value ?? default(bool); }

        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxAgeRuleEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxAgeRuleEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxAgeRuleEnabled = value ?? default(bool); }

        /// <summary>Specify the number of days to retain an application versions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? MaxAgeRuleMaxAgeInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxAgeRuleMaxAgeInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxAgeRuleMaxAgeInDay = value ?? default(int); }

        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxCountRuleDeleteSourceFromS3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxCountRuleDeleteSourceFromS3; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxCountRuleDeleteSourceFromS3 = value ?? default(bool); }

        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public bool? MaxCountRuleEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxCountRuleEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxCountRuleEnabled = value ?? default(bool); }

        /// <summary>Specify the maximum number of application versions to retain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public int? MaxCountRuleMaxCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxCountRuleMaxCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxCountRuleMaxCount = value ?? default(int); }

        /// <summary>Internal Acessors for VersionLifecycleConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfig Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal.VersionLifecycleConfig { get => (this._versionLifecycleConfig = this._versionLifecycleConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ApplicationVersionLifecycleConfig()); set { {_versionLifecycleConfig = value;} } }

        /// <summary>Internal Acessors for VersionLifecycleConfigMaxAgeRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRule Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal.VersionLifecycleConfigMaxAgeRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxAgeRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxAgeRule = value; }

        /// <summary>Internal Acessors for VersionLifecycleConfigMaxCountRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRule Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationResourceLifecycleConfigInternal.VersionLifecycleConfigMaxCountRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxCountRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfigInternal)VersionLifecycleConfig).MaxCountRule = value; }

        /// <summary>Backing field for <see cref="ServiceRole" /> property.</summary>
        private string _serviceRole;

        /// <summary>
        /// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the
        /// first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk
        /// persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in
        /// subsequent updates to change the Service Role to another value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ServiceRole { get => this._serviceRole; set => this._serviceRole = value; }

        /// <summary>Backing field for <see cref="VersionLifecycleConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfig _versionLifecycleConfig;

        /// <summary>Defines lifecycle settings for application versions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfig VersionLifecycleConfig { get => (this._versionLifecycleConfig = this._versionLifecycleConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.ApplicationVersionLifecycleConfig()); set => this._versionLifecycleConfig = value; }

        /// <summary>Creates an new <see cref="ApplicationResourceLifecycleConfig" /> instance.</summary>
        public ApplicationResourceLifecycleConfig()
        {

        }
    }
    /// Definition of ApplicationResourceLifecycleConfig
    public partial interface IApplicationResourceLifecycleConfig :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.",
        SerializedName = @"deleteSourceFromS3",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxAgeRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify true to apply the rule, or false to disable it.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxAgeRuleEnabled { get; set; }
        /// <summary>Specify the number of days to retain an application versions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the number of days to retain an application versions.",
        SerializedName = @"maxAgeInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxAgeRuleMaxAgeInDay { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.",
        SerializedName = @"deleteSourceFromS3",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxCountRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify true to apply the rule, or false to disable it.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaxCountRuleEnabled { get; set; }
        /// <summary>Specify the maximum number of application versions to retain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify the maximum number of application versions to retain.",
        SerializedName = @"maxCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCountRuleMaxCount { get; set; }
        /// <summary>
        /// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the
        /// first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk
        /// persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in
        /// subsequent updates to change the Service Role to another value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in subsequent updates to change the Service Role to another value.",
        SerializedName = @"serviceRole",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceRole { get; set; }

    }
    /// Definition of ApplicationResourceLifecycleConfig
    internal partial interface IApplicationResourceLifecycleConfigInternal

    {
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        bool? MaxAgeRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        bool? MaxAgeRuleEnabled { get; set; }
        /// <summary>Specify the number of days to retain an application versions.</summary>
        int? MaxAgeRuleMaxAgeInDay { get; set; }
        /// <summary>
        /// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
        /// </summary>
        bool? MaxCountRuleDeleteSourceFromS3 { get; set; }
        /// <summary>Specify true to apply the rule, or false to disable it.</summary>
        bool? MaxCountRuleEnabled { get; set; }
        /// <summary>Specify the maximum number of application versions to retain.</summary>
        int? MaxCountRuleMaxCount { get; set; }
        /// <summary>
        /// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the
        /// first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk
        /// persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in
        /// subsequent updates to change the Service Role to another value.
        /// </summary>
        string ServiceRole { get; set; }
        /// <summary>Defines lifecycle settings for application versions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IApplicationVersionLifecycleConfig VersionLifecycleConfig { get; set; }
        /// <summary>
        /// Specify a max age rule to restrict the length of time that application versions are retained for an application.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxAgeRule VersionLifecycleConfigMaxAgeRule { get; set; }
        /// <summary>
        /// Specify a max count rule to restrict the number of application versions that are retained for an application.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IMaxCountRule VersionLifecycleConfigMaxCountRule { get; set; }

    }
}