// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of OffPeakWindowOptions</summary>
    public partial class OffPeakWindowOptions :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptions,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal
    {

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>
        /// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to
        /// February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled
        /// by default. You can't disable the off-peak window after it's enabled for a domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Internal Acessors for OffPeakWindow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindow Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal.OffPeakWindow { get => (this._offPeakWindow = this._offPeakWindow ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OffPeakWindow()); set { {_offPeakWindow = value;} } }

        /// <summary>Internal Acessors for OffPeakWindowStartTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWindowStartTime Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowOptionsInternal.OffPeakWindowStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowInternal)OffPeakWindow).WindowStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowInternal)OffPeakWindow).WindowStartTime = value; }

        /// <summary>Backing field for <see cref="OffPeakWindow" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindow _offPeakWindow;

        /// <summary><p>Off-peak window settings for the domain.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindow OffPeakWindow { get => (this._offPeakWindow = this._offPeakWindow ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.OffPeakWindow()); set => this._offPeakWindow = value; }

        /// <summary>
        /// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code>
        /// refers to 5:00 P.M. UTC.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public long? WindowStartTimeHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowInternal)OffPeakWindow).WindowStartTimeHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowInternal)OffPeakWindow).WindowStartTimeHour = value ?? default(long); }

        /// <summary><p>The start minute of the window, in UTC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Inlined)]
        public long? WindowStartTimeMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowInternal)OffPeakWindow).WindowStartTimeMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindowInternal)OffPeakWindow).WindowStartTimeMinute = value ?? default(long); }

        /// <summary>Creates an new <see cref="OffPeakWindowOptions" /> instance.</summary>
        public OffPeakWindowOptions()
        {

        }
    }
    /// Definition of OffPeakWindowOptions
    public partial interface IOffPeakWindowOptions :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>
        /// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to
        /// February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled
        /// by default. You can't disable the off-peak window after it's enabled for a domain.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can't disable the off-peak window after it's enabled for a domain.</p>",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>
        /// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code>
        /// refers to 5:00 P.M. UTC.</p>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code> refers to 5:00 P.M. UTC.</p>",
        SerializedName = @"hours",
        PossibleTypes = new [] { typeof(long) })]
        long? WindowStartTimeHour { get; set; }
        /// <summary><p>The start minute of the window, in UTC.</p></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"<p>The start minute of the window, in UTC.</p>",
        SerializedName = @"minutes",
        PossibleTypes = new [] { typeof(long) })]
        long? WindowStartTimeMinute { get; set; }

    }
    /// Definition of OffPeakWindowOptions
    internal partial interface IOffPeakWindowOptionsInternal

    {
        /// <summary>
        /// <p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to
        /// February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled
        /// by default. You can't disable the off-peak window after it's enabled for a domain.</p>
        /// </summary>
        bool? Enabled { get; set; }
        /// <summary><p>Off-peak window settings for the domain.</p></summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IOffPeakWindow OffPeakWindow { get; set; }
        /// <summary>
        /// <p>A custom start time for the off-peak window, in Coordinated Universal Time (UTC). The window length will always be
        /// 10 hours, so you can't specify an end time. For example, if you specify 11:00 P.M. UTC as a start time, the end time will
        /// automatically be set to 9:00 A.M.</p>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IWindowStartTime OffPeakWindowStartTime { get; set; }
        /// <summary>
        /// <p>The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code>
        /// refers to 5:00 P.M. UTC.</p>
        /// </summary>
        long? WindowStartTimeHour { get; set; }
        /// <summary><p>The start minute of the window, in UTC.</p></summary>
        long? WindowStartTimeMinute { get; set; }

    }
}