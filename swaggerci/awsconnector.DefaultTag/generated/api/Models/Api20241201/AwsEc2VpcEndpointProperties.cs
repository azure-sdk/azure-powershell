// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of awsEc2VPCEndpoint</summary>
    public partial class AwsEc2VpcEndpointProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreationTimestamp" /> property.</summary>
        private string _creationTimestamp;

        /// <summary>Property creationTimestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string CreationTimestamp { get => this._creationTimestamp; set => this._creationTimestamp = value; }

        /// <summary>Backing field for <see cref="DnsEntry" /> property.</summary>
        private string[] _dnsEntry;

        /// <summary>Property dnsEntries</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] DnsEntry { get => this._dnsEntry; set => this._dnsEntry = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="NetworkInterfaceId" /> property.</summary>
        private string[] _networkInterfaceId;

        /// <summary>Property networkInterfaceIds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] NetworkInterfaceId { get => this._networkInterfaceId; set => this._networkInterfaceId = value; }

        /// <summary>Backing field for <see cref="PolicyDocument" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesPolicyDocument _policyDocument;

        /// <summary>
        /// An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access
        /// to the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates
        /// in YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling
        /// the API to create or modify the VPC endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesPolicyDocument PolicyDocument { get => (this._policyDocument = this._policyDocument ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AwsEc2VpcEndpointPropertiesPolicyDocument()); set => this._policyDocument = value; }

        /// <summary>Backing field for <see cref="PrivateDnsEnabled" /> property.</summary>
        private bool? _privateDnsEnabled;

        /// <summary>
        /// Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record
        /// set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``),
        /// which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests
        /// to the default public DNS name for the service instead of the public DNS names that are automatically generated by the
        /// VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames``
        /// and ``enableDnsSupport``. This property is supported only for interface endpoints. Default: ``false``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public bool? PrivateDnsEnabled { get => this._privateDnsEnabled; set => this._privateDnsEnabled = value; }

        /// <summary>Backing field for <see cref="RouteTableId" /> property.</summary>
        private string[] _routeTableId;

        /// <summary>The IDs of the route tables. Routing is supported only for gateway endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] RouteTableId { get => this._routeTableId; set => this._routeTableId = value; }

        /// <summary>Backing field for <see cref="SecurityGroupId" /> property.</summary>
        private string[] _securityGroupId;

        /// <summary>
        /// The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified,
        /// we use the default security group for the VPC. Security groups are supported only for interface endpoints.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] SecurityGroupId { get => this._securityGroupId; set => this._securityGroupId = value; }

        /// <summary>Backing field for <see cref="ServiceName" /> property.</summary>
        private string _serviceName;

        /// <summary>The name of the endpoint service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string ServiceName { get => this._serviceName; set => this._serviceName = value; }

        /// <summary>Backing field for <see cref="SubnetId" /> property.</summary>
        private string[] _subnetId;

        /// <summary>
        /// The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface
        /// endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load
        /// Balancer endpoint, you can specify only one subnet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string[] SubnetId { get => this._subnetId; set => this._subnetId = value; }

        /// <summary>Backing field for <see cref="VpcEndpointType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VpcEndpointType? _vpcEndpointType;

        /// <summary>The type of endpoint. Default: Gateway</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VpcEndpointType? VpcEndpointType { get => this._vpcEndpointType; set => this._vpcEndpointType = value; }

        /// <summary>Backing field for <see cref="VpcId" /> property.</summary>
        private string _vpcId;

        /// <summary>The ID of the VPC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Origin(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.PropertyOrigin.Owned)]
        public string VpcId { get => this._vpcId; set => this._vpcId = value; }

        /// <summary>Creates an new <see cref="AwsEc2VpcEndpointProperties" /> instance.</summary>
        public AwsEc2VpcEndpointProperties()
        {

        }
    }
    /// Definition of awsEc2VPCEndpoint
    public partial interface IAwsEc2VpcEndpointProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.IJsonSerializable
    {
        /// <summary>Property creationTimestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property creationTimestamp",
        SerializedName = @"creationTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string CreationTimestamp { get; set; }
        /// <summary>Property dnsEntries</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property dnsEntries",
        SerializedName = @"dnsEntries",
        PossibleTypes = new [] { typeof(string) })]
        string[] DnsEntry { get; set; }
        /// <summary>Property id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Property networkInterfaceIds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property networkInterfaceIds",
        SerializedName = @"networkInterfaceIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] NetworkInterfaceId { get; set; }
        /// <summary>
        /// An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access
        /// to the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates
        /// in YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling
        /// the API to create or modify the VPC endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access to the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates in YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling the API to create or modify the VPC endpoint.",
        SerializedName = @"policyDocument",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesPolicyDocument) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesPolicyDocument PolicyDocument { get; set; }
        /// <summary>
        /// Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record
        /// set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``),
        /// which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests
        /// to the default public DNS name for the service instead of the public DNS names that are automatically generated by the
        /// VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames``
        /// and ``enableDnsSupport``. This property is supported only for interface endpoints. Default: ``false``
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames`` and ``enableDnsSupport``. This property is supported only for interface endpoints. Default: ``false``",
        SerializedName = @"privateDnsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PrivateDnsEnabled { get; set; }
        /// <summary>The IDs of the route tables. Routing is supported only for gateway endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IDs of the route tables. Routing is supported only for gateway endpoints.",
        SerializedName = @"routeTableIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] RouteTableId { get; set; }
        /// <summary>
        /// The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified,
        /// we use the default security group for the VPC. Security groups are supported only for interface endpoints.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified, we use the default security group for the VPC. Security groups are supported only for interface endpoints.",
        SerializedName = @"securityGroupIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] SecurityGroupId { get; set; }
        /// <summary>The name of the endpoint service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the endpoint service.",
        SerializedName = @"serviceName",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceName { get; set; }
        /// <summary>
        /// The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface
        /// endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load
        /// Balancer endpoint, you can specify only one subnet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.",
        SerializedName = @"subnetIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] SubnetId { get; set; }
        /// <summary>The type of endpoint. Default: Gateway</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of endpoint. Default: Gateway",
        SerializedName = @"vpcEndpointType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VpcEndpointType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VpcEndpointType? VpcEndpointType { get; set; }
        /// <summary>The ID of the VPC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the VPC.",
        SerializedName = @"vpcId",
        PossibleTypes = new [] { typeof(string) })]
        string VpcId { get; set; }

    }
    /// Definition of awsEc2VPCEndpoint
    internal partial interface IAwsEc2VpcEndpointPropertiesInternal

    {
        /// <summary>Property creationTimestamp</summary>
        string CreationTimestamp { get; set; }
        /// <summary>Property dnsEntries</summary>
        string[] DnsEntry { get; set; }
        /// <summary>Property id</summary>
        string Id { get; set; }
        /// <summary>Property networkInterfaceIds</summary>
        string[] NetworkInterfaceId { get; set; }
        /// <summary>
        /// An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access
        /// to the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates
        /// in YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling
        /// the API to create or modify the VPC endpoint.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IAwsEc2VpcEndpointPropertiesPolicyDocument PolicyDocument { get; set; }
        /// <summary>
        /// Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record
        /// set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``),
        /// which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests
        /// to the default public DNS name for the service instead of the public DNS names that are automatically generated by the
        /// VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames``
        /// and ``enableDnsSupport``. This property is supported only for interface endpoints. Default: ``false``
        /// </summary>
        bool? PrivateDnsEnabled { get; set; }
        /// <summary>The IDs of the route tables. Routing is supported only for gateway endpoints.</summary>
        string[] RouteTableId { get; set; }
        /// <summary>
        /// The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified,
        /// we use the default security group for the VPC. Security groups are supported only for interface endpoints.
        /// </summary>
        string[] SecurityGroupId { get; set; }
        /// <summary>The name of the endpoint service.</summary>
        string ServiceName { get; set; }
        /// <summary>
        /// The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface
        /// endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load
        /// Balancer endpoint, you can specify only one subnet.
        /// </summary>
        string[] SubnetId { get; set; }
        /// <summary>The type of endpoint. Default: Gateway</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.VpcEndpointType? VpcEndpointType { get; set; }
        /// <summary>The ID of the VPC.</summary>
        string VpcId { get; set; }

    }
}