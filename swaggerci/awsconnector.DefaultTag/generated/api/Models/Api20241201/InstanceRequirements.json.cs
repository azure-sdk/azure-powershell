// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Extensions;

    /// <summary>Definition of InstanceRequirements</summary>
    public partial class InstanceRequirements
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceRequirements.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceRequirements.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.IInstanceRequirements FromJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json ? new InstanceRequirements(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject into a new instance of <see cref="InstanceRequirements" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal InstanceRequirements(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_acceleratorCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("acceleratorCount"), out var __jsonAcceleratorCount) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AcceleratorCountRequest.FromJson(__jsonAcceleratorCount) : AcceleratorCount;}
            {_acceleratorTotalMemoryMiB = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("acceleratorTotalMemoryMiB"), out var __jsonAcceleratorTotalMemoryMiB) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.AcceleratorTotalMemoryMiBRequest.FromJson(__jsonAcceleratorTotalMemoryMiB) : AcceleratorTotalMemoryMiB;}
            {_baselineEbsBandwidthMbps = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("baselineEbsBandwidthMbps"), out var __jsonBaselineEbsBandwidthMbps) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.BaselineEbsBandwidthMbpsRequest.FromJson(__jsonBaselineEbsBandwidthMbps) : BaselineEbsBandwidthMbps;}
            {_memoryGiBPerVcpu = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("memoryGiBPerVCpu"), out var __jsonMemoryGiBPerVcpu) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MemoryGiBPerVcpuRequest.FromJson(__jsonMemoryGiBPerVcpu) : MemoryGiBPerVcpu;}
            {_memoryMiB = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("memoryMiB"), out var __jsonMemoryMiB) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.MemoryMiBRequest.FromJson(__jsonMemoryMiB) : MemoryMiB;}
            {_networkBandwidthGbps = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("networkBandwidthGbps"), out var __jsonNetworkBandwidthGbps) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NetworkBandwidthGbpsRequest.FromJson(__jsonNetworkBandwidthGbps) : NetworkBandwidthGbps;}
            {_networkInterfaceCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("networkInterfaceCount"), out var __jsonNetworkInterfaceCount) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.NetworkInterfaceCountRequest.FromJson(__jsonNetworkInterfaceCount) : NetworkInterfaceCount;}
            {_totalLocalStorageGb = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("totalLocalStorageGB"), out var __jsonTotalLocalStorageGb) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.TotalLocalStorageGbRequest.FromJson(__jsonTotalLocalStorageGb) : TotalLocalStorageGb;}
            {_vCpuCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject>("vCpuCount"), out var __jsonVCpuCount) ? Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Models.Api20241201.VCpuCountRequest.FromJson(__jsonVCpuCount) : VCpuCount;}
            {_acceleratorManufacturer = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("acceleratorManufacturers"), out var __jsonAcceleratorManufacturers) ? If( __jsonAcceleratorManufacturers as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : AcceleratorManufacturer;}
            {_acceleratorName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("acceleratorNames"), out var __jsonAcceleratorNames) ? If( __jsonAcceleratorNames as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(string) (__p is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __o ? (string)(__o.ToString()) : null)) ))() : null : AcceleratorName;}
            {_acceleratorType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("acceleratorTypes"), out var __jsonAcceleratorTypes) ? If( __jsonAcceleratorTypes as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(string) (__k is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __j ? (string)(__j.ToString()) : null)) ))() : null : AcceleratorType;}
            {_allowedInstanceType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("allowedInstanceTypes"), out var __jsonAllowedInstanceTypes) ? If( __jsonAllowedInstanceTypes as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(string) (__f is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString __e ? (string)(__e.ToString()) : null)) ))() : null : AllowedInstanceType;}
            {_bareMetal = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("bareMetal"), out var __jsonBareMetal) ? (string)__jsonBareMetal : (string)BareMetal;}
            {_burstablePerformance = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("burstablePerformance"), out var __jsonBurstablePerformance) ? (string)__jsonBurstablePerformance : (string)BurstablePerformance;}
            {_cpuManufacturer = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("cpuManufacturers"), out var __jsonCpuManufacturers) ? If( __jsonCpuManufacturers as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__b, (__a)=>(string) (__a is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString ___z ? (string)(___z.ToString()) : null)) ))() : null : CpuManufacturer;}
            {_excludedInstanceType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("excludedInstanceTypes"), out var __jsonExcludedInstanceTypes) ? If( __jsonExcludedInstanceTypes as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ___w) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___w, (___v)=>(string) (___v is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString ___u ? (string)(___u.ToString()) : null)) ))() : null : ExcludedInstanceType;}
            {_instanceGeneration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("instanceGenerations"), out var __jsonInstanceGenerations) ? If( __jsonInstanceGenerations as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ___r) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___r, (___q)=>(string) (___q is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString ___p ? (string)(___p.ToString()) : null)) ))() : null : InstanceGeneration;}
            {_localStorage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString>("localStorage"), out var __jsonLocalStorage) ? (string)__jsonLocalStorage : (string)LocalStorage;}
            {_localStorageType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray>("localStorageTypes"), out var __jsonLocalStorageTypes) ? If( __jsonLocalStorageTypes as Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonArray, out var ___m) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___m, (___l)=>(string) (___l is Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString ___k ? (string)(___k.ToString()) : null)) ))() : null : LocalStorageType;}
            {_maxSpotPriceAsPercentageOfOptimalOnDemandPrice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("maxSpotPriceAsPercentageOfOptimalOnDemandPrice"), out var __jsonMaxSpotPriceAsPercentageOfOptimalOnDemandPrice) ? (int?)__jsonMaxSpotPriceAsPercentageOfOptimalOnDemandPrice : MaxSpotPriceAsPercentageOfOptimalOnDemandPrice;}
            {_onDemandMaxPricePercentageOverLowestPrice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("onDemandMaxPricePercentageOverLowestPrice"), out var __jsonOnDemandMaxPricePercentageOverLowestPrice) ? (int?)__jsonOnDemandMaxPricePercentageOverLowestPrice : OnDemandMaxPricePercentageOverLowestPrice;}
            {_requireHibernateSupport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean>("requireHibernateSupport"), out var __jsonRequireHibernateSupport) ? (bool?)__jsonRequireHibernateSupport : RequireHibernateSupport;}
            {_spotMaxPricePercentageOverLowestPrice = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber>("spotMaxPricePercentageOverLowestPrice"), out var __jsonSpotMaxPricePercentageOverLowestPrice) ? (int?)__jsonSpotMaxPricePercentageOverLowestPrice : SpotMaxPricePercentageOverLowestPrice;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="InstanceRequirements" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="InstanceRequirements" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._acceleratorCount ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._acceleratorCount.ToJson(null,serializationMode) : null, "acceleratorCount" ,container.Add );
            AddIf( null != this._acceleratorTotalMemoryMiB ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._acceleratorTotalMemoryMiB.ToJson(null,serializationMode) : null, "acceleratorTotalMemoryMiB" ,container.Add );
            AddIf( null != this._baselineEbsBandwidthMbps ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._baselineEbsBandwidthMbps.ToJson(null,serializationMode) : null, "baselineEbsBandwidthMbps" ,container.Add );
            AddIf( null != this._memoryGiBPerVcpu ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._memoryGiBPerVcpu.ToJson(null,serializationMode) : null, "memoryGiBPerVCpu" ,container.Add );
            AddIf( null != this._memoryMiB ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._memoryMiB.ToJson(null,serializationMode) : null, "memoryMiB" ,container.Add );
            AddIf( null != this._networkBandwidthGbps ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._networkBandwidthGbps.ToJson(null,serializationMode) : null, "networkBandwidthGbps" ,container.Add );
            AddIf( null != this._networkInterfaceCount ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._networkInterfaceCount.ToJson(null,serializationMode) : null, "networkInterfaceCount" ,container.Add );
            AddIf( null != this._totalLocalStorageGb ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._totalLocalStorageGb.ToJson(null,serializationMode) : null, "totalLocalStorageGB" ,container.Add );
            AddIf( null != this._vCpuCount ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) this._vCpuCount.ToJson(null,serializationMode) : null, "vCpuCount" ,container.Add );
            if (null != this._acceleratorManufacturer)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __x in this._acceleratorManufacturer )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("acceleratorManufacturers",__w);
            }
            if (null != this._acceleratorName)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __s in this._acceleratorName )
                {
                    AddIf(null != (((object)__s)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__s.ToString()) : null ,__r.Add);
                }
                container.Add("acceleratorNames",__r);
            }
            if (null != this._acceleratorType)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __n in this._acceleratorType )
                {
                    AddIf(null != (((object)__n)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__n.ToString()) : null ,__m.Add);
                }
                container.Add("acceleratorTypes",__m);
            }
            if (null != this._allowedInstanceType)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __i in this._allowedInstanceType )
                {
                    AddIf(null != (((object)__i)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__i.ToString()) : null ,__h.Add);
                }
                container.Add("allowedInstanceTypes",__h);
            }
            AddIf( null != (((object)this._bareMetal)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._bareMetal.ToString()) : null, "bareMetal" ,container.Add );
            AddIf( null != (((object)this._burstablePerformance)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._burstablePerformance.ToString()) : null, "burstablePerformance" ,container.Add );
            if (null != this._cpuManufacturer)
            {
                var __c = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var __d in this._cpuManufacturer )
                {
                    AddIf(null != (((object)__d)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(__d.ToString()) : null ,__c.Add);
                }
                container.Add("cpuManufacturers",__c);
            }
            if (null != this._excludedInstanceType)
            {
                var ___x = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ___y in this._excludedInstanceType )
                {
                    AddIf(null != (((object)___y)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(___y.ToString()) : null ,___x.Add);
                }
                container.Add("excludedInstanceTypes",___x);
            }
            if (null != this._instanceGeneration)
            {
                var ___s = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ___t in this._instanceGeneration )
                {
                    AddIf(null != (((object)___t)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(___t.ToString()) : null ,___s.Add);
                }
                container.Add("instanceGenerations",___s);
            }
            AddIf( null != (((object)this._localStorage)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(this._localStorage.ToString()) : null, "localStorage" ,container.Add );
            if (null != this._localStorageType)
            {
                var ___n = new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.XNodeArray();
                foreach( var ___o in this._localStorageType )
                {
                    AddIf(null != (((object)___o)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonString(___o.ToString()) : null ,___n.Add);
                }
                container.Add("localStorageTypes",___n);
            }
            AddIf( null != this._maxSpotPriceAsPercentageOfOptimalOnDemandPrice ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._maxSpotPriceAsPercentageOfOptimalOnDemandPrice) : null, "maxSpotPriceAsPercentageOfOptimalOnDemandPrice" ,container.Add );
            AddIf( null != this._onDemandMaxPricePercentageOverLowestPrice ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._onDemandMaxPricePercentageOverLowestPrice) : null, "onDemandMaxPricePercentageOverLowestPrice" ,container.Add );
            AddIf( null != this._requireHibernateSupport ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonBoolean((bool)this._requireHibernateSupport) : null, "requireHibernateSupport" ,container.Add );
            AddIf( null != this._spotMaxPricePercentageOverLowestPrice ? (Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Runtime.Json.JsonNumber((int)this._spotMaxPricePercentageOverLowestPrice) : null, "spotMaxPricePercentageOverLowestPrice" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}