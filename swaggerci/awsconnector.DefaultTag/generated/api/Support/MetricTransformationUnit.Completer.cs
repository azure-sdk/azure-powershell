// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support
{

    /// <summary>MetricTransformationUnit enum</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnitTypeConverter))]
    public partial struct MetricTransformationUnit :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Bits".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Bits'", "Bits", global::System.Management.Automation.CompletionResultType.ParameterValue, "Bits");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Bits/Second".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Bits/Second'", "Bits/Second", global::System.Management.Automation.CompletionResultType.ParameterValue, "Bits/Second");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Bytes".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Bytes'", "Bytes", global::System.Management.Automation.CompletionResultType.ParameterValue, "Bytes");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Bytes/Second".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Bytes/Second'", "Bytes/Second", global::System.Management.Automation.CompletionResultType.ParameterValue, "Bytes/Second");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Count".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Count'", "Count", global::System.Management.Automation.CompletionResultType.ParameterValue, "Count");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Count/Second".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Count/Second'", "Count/Second", global::System.Management.Automation.CompletionResultType.ParameterValue, "Count/Second");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Gigabits".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Gigabits'", "Gigabits", global::System.Management.Automation.CompletionResultType.ParameterValue, "Gigabits");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Gigabits/Second".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Gigabits/Second'", "Gigabits/Second", global::System.Management.Automation.CompletionResultType.ParameterValue, "Gigabits/Second");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Gigabytes".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Gigabytes'", "Gigabytes", global::System.Management.Automation.CompletionResultType.ParameterValue, "Gigabytes");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Gigabytes/Second".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Gigabytes/Second'", "Gigabytes/Second", global::System.Management.Automation.CompletionResultType.ParameterValue, "Gigabytes/Second");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Kilobits".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Kilobits'", "Kilobits", global::System.Management.Automation.CompletionResultType.ParameterValue, "Kilobits");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Kilobits/Second".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Kilobits/Second'", "Kilobits/Second", global::System.Management.Automation.CompletionResultType.ParameterValue, "Kilobits/Second");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Kilobytes".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Kilobytes'", "Kilobytes", global::System.Management.Automation.CompletionResultType.ParameterValue, "Kilobytes");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Kilobytes/Second".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Kilobytes/Second'", "Kilobytes/Second", global::System.Management.Automation.CompletionResultType.ParameterValue, "Kilobytes/Second");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Megabits".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Megabits'", "Megabits", global::System.Management.Automation.CompletionResultType.ParameterValue, "Megabits");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Megabits/Second".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Megabits/Second'", "Megabits/Second", global::System.Management.Automation.CompletionResultType.ParameterValue, "Megabits/Second");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Megabytes".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Megabytes'", "Megabytes", global::System.Management.Automation.CompletionResultType.ParameterValue, "Megabytes");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Megabytes/Second".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Megabytes/Second'", "Megabytes/Second", global::System.Management.Automation.CompletionResultType.ParameterValue, "Megabytes/Second");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Microseconds".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Microseconds'", "Microseconds", global::System.Management.Automation.CompletionResultType.ParameterValue, "Microseconds");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Milliseconds".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Milliseconds'", "Milliseconds", global::System.Management.Automation.CompletionResultType.ParameterValue, "Milliseconds");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "None".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'None'", "None", global::System.Management.Automation.CompletionResultType.ParameterValue, "None");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Percent".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Percent'", "Percent", global::System.Management.Automation.CompletionResultType.ParameterValue, "Percent");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Seconds".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Seconds'", "Seconds", global::System.Management.Automation.CompletionResultType.ParameterValue, "Seconds");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Terabits".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Terabits'", "Terabits", global::System.Management.Automation.CompletionResultType.ParameterValue, "Terabits");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Terabits/Second".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Terabits/Second'", "Terabits/Second", global::System.Management.Automation.CompletionResultType.ParameterValue, "Terabits/Second");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Terabytes".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Terabytes'", "Terabytes", global::System.Management.Automation.CompletionResultType.ParameterValue, "Terabytes");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Terabytes/Second".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Terabytes/Second'", "Terabytes/Second", global::System.Management.Automation.CompletionResultType.ParameterValue, "Terabytes/Second");
            }
        }
    }
}