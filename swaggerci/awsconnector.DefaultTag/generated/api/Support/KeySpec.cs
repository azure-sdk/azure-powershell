// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support
{

    /// <summary>
    /// Specifies the type of KMS key to create. The default value, ``SYMMETRIC_DEFAULT``, creates a KMS key with a 256-bit symmetric
    /// key for encryption and decryption. In China Regions, ``SYMMETRIC_DEFAULT`` creates a 128-bit symmetric key that uses SM4
    /// encryption. You can't change the ``KeySpec`` value after the KMS key is created. For help choosing a key spec for your
    /// KMS key, see [Choosing a KMS key type](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html) in
    /// the *Developer Guide*. The ``KeySpec`` property determines the type of key material in the KMS key and the algorithms
    /// that the KMS key supports. To further restrict the algorithms that can be used with the KMS key, use a condition key in
    /// its key policy or IAM policy. For more information, see [condition keys](https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms)
    /// in the *Developer Guide*. If you change the value of the ``KeySpec`` property on an existing KMS key, the update request
    /// fails, regardless of the value of the [UpdateReplacePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html).
    /// This prevents you from accidentally deleting a KMS key by changing an immutable property value. [services that are integrated
    /// with](https://docs.aws.amazon.com/kms/features/#AWS_Service_Integration) use symmetric encryption KMS keys to protect
    /// your data. These services do not support encryption with asymmetric KMS keys. For help determining whether a KMS key is
    /// asymmetric, see [Identifying asymmetric KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/find-symm-asymm.html)
    /// in the *Developer Guide*. KMS supports the following key specs for KMS keys: + Symmetric encryption key (default) + ``SYMMETRIC_DEFAULT``
    /// (AES-256-GCM) + HMAC keys (symmetric) + ``HMAC_224`` + ``HMAC_256`` + ``HMAC_384`` + ``HMAC_512`` + Asymmetric RSA key
    /// pairs + ``RSA_2048`` + ``RSA_3072`` + ``RSA_4096`` + Asymmetric NIST-recommended elliptic curve key pairs + ``ECC_NIST_P256``
    /// (secp256r1) + ``ECC_NIST_P384`` (secp384r1) + ``ECC_NIST_P521`` (secp521r1) + Other asymmetric elliptic curve key pairs
    /// + ``ECC_SECG_P256K1`` (secp256k1), commonly used for cryptocurrencies. + SM2 key pairs (China Regions only) + ``SM2``
    /// </summary>
    public partial struct KeySpec :
        System.IEquatable<KeySpec>
    {
        /// <summary>KeySpec enum ECC_NIST_P256</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec EccNistP256 = @"ECC_NIST_P256";

        /// <summary>KeySpec enum ECC_NIST_P384</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec EccNistP384 = @"ECC_NIST_P384";

        /// <summary>KeySpec enum ECC_NIST_P521</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec EccNistP521 = @"ECC_NIST_P521";

        /// <summary>KeySpec enum ECC_SECG_P256K1</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec EccSecgP256K1 = @"ECC_SECG_P256K1";

        /// <summary>KeySpec enum HMAC_224</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec Hmac224 = @"HMAC_224";

        /// <summary>KeySpec enum HMAC_256</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec Hmac256 = @"HMAC_256";

        /// <summary>KeySpec enum HMAC_384</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec Hmac384 = @"HMAC_384";

        /// <summary>KeySpec enum HMAC_512</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec Hmac512 = @"HMAC_512";

        /// <summary>KeySpec enum RSA_2048</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec Rsa2048 = @"RSA_2048";

        /// <summary>KeySpec enum RSA_3072</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec Rsa3072 = @"RSA_3072";

        /// <summary>KeySpec enum RSA_4096</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec Rsa4096 = @"RSA_4096";

        /// <summary>KeySpec enum SM2</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec Sm2 = @"SM2";

        /// <summary>KeySpec enum SYMMETRIC_DEFAULT</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec SymmetricDefault = @"SYMMETRIC_DEFAULT";

        /// <summary>the value for an instance of the <see cref="KeySpec" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to KeySpec</summary>
        /// <param name="value">the value to convert to an instance of <see cref="KeySpec" />.</param>
        internal static object CreateFrom(object value)
        {
            return new KeySpec(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type KeySpec</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type KeySpec (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is KeySpec && Equals((KeySpec)obj);
        }

        /// <summary>Returns hashCode for enum KeySpec</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="KeySpec"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private KeySpec(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for KeySpec</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to KeySpec</summary>
        /// <param name="value">the value to convert to an instance of <see cref="KeySpec" />.</param>

        public static implicit operator KeySpec(string value)
        {
            return new KeySpec(value);
        }

        /// <summary>Implicit operator to convert KeySpec to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="KeySpec" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum KeySpec</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec e1, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum KeySpec</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec e1, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeySpec e2)
        {
            return e2.Equals(e1);
        }
    }
}