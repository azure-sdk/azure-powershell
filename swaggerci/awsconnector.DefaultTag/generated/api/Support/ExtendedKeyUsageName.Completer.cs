// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support
{

    /// <summary>ExtendedKeyUsageName enum</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ExtendedKeyUsageNameTypeConverter))]
    public partial struct ExtendedKeyUsageName :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ANY".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ANY'", "ANY", global::System.Management.Automation.CompletionResultType.ParameterValue, "ANY");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "CODE_SIGNING".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'CODE_SIGNING'", "CODE_SIGNING", global::System.Management.Automation.CompletionResultType.ParameterValue, "CODE_SIGNING");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "CUSTOM".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'CUSTOM'", "CUSTOM", global::System.Management.Automation.CompletionResultType.ParameterValue, "CUSTOM");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EMAIL_PROTECTION".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EMAIL_PROTECTION'", "EMAIL_PROTECTION", global::System.Management.Automation.CompletionResultType.ParameterValue, "EMAIL_PROTECTION");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPSEC_END_SYSTEM".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPSEC_END_SYSTEM'", "IPSEC_END_SYSTEM", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPSEC_END_SYSTEM");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPSEC_TUNNEL".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPSEC_TUNNEL'", "IPSEC_TUNNEL", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPSEC_TUNNEL");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPSEC_USER".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPSEC_USER'", "IPSEC_USER", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPSEC_USER");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "NONE".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'NONE'", "NONE", global::System.Management.Automation.CompletionResultType.ParameterValue, "NONE");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "OCSP_SIGNING".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'OCSP_SIGNING'", "OCSP_SIGNING", global::System.Management.Automation.CompletionResultType.ParameterValue, "OCSP_SIGNING");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TIME_STAMPING".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TIME_STAMPING'", "TIME_STAMPING", global::System.Management.Automation.CompletionResultType.ParameterValue, "TIME_STAMPING");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TLS_WEB_CLIENT_AUTHENTICATION".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TLS_WEB_CLIENT_AUTHENTICATION'", "TLS_WEB_CLIENT_AUTHENTICATION", global::System.Management.Automation.CompletionResultType.ParameterValue, "TLS_WEB_CLIENT_AUTHENTICATION");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TLS_WEB_SERVER_AUTHENTICATION".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TLS_WEB_SERVER_AUTHENTICATION'", "TLS_WEB_SERVER_AUTHENTICATION", global::System.Management.Automation.CompletionResultType.ParameterValue, "TLS_WEB_SERVER_AUTHENTICATION");
            }
        }
    }
}