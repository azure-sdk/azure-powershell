// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support
{

    /// <summary>ResourceType enum</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.ResourceTypeTypeConverter))]
    public partial struct ResourceType :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ACM::Certificate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ACM::Certificate'", "AWS::ACM::Certificate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ACM::Certificate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ACMPCA::CertificateAuthority".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ACMPCA::CertificateAuthority'", "AWS::ACMPCA::CertificateAuthority", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ACMPCA::CertificateAuthority");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ACMPCA::CertificateAuthorityActivation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ACMPCA::CertificateAuthorityActivation'", "AWS::ACMPCA::CertificateAuthorityActivation", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ACMPCA::CertificateAuthorityActivation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::APS::RuleGroupsNamespace".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::APS::RuleGroupsNamespace'", "AWS::APS::RuleGroupsNamespace", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::APS::RuleGroupsNamespace");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AccessAnalyzer::Analyzer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AccessAnalyzer::Analyzer'", "AWS::AccessAnalyzer::Analyzer", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AccessAnalyzer::Analyzer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AmazonMQ::Broker".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AmazonMQ::Broker'", "AWS::AmazonMQ::Broker", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AmazonMQ::Broker");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Amplify::App".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Amplify::App'", "AWS::Amplify::App", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Amplify::App");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Amplify::Branch".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Amplify::Branch'", "AWS::Amplify::Branch", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Amplify::Branch");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ApiGateway::RestApi".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ApiGateway::RestApi'", "AWS::ApiGateway::RestApi", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ApiGateway::RestApi");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ApiGateway::Stage".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ApiGateway::Stage'", "AWS::ApiGateway::Stage", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ApiGateway::Stage");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ApiGatewayV2::Api".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ApiGatewayV2::Api'", "AWS::ApiGatewayV2::Api", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ApiGatewayV2::Api");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ApiGatewayV2::Stage".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ApiGatewayV2::Stage'", "AWS::ApiGatewayV2::Stage", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ApiGatewayV2::Stage");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppConfig::Application".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppConfig::Application'", "AWS::AppConfig::Application", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppConfig::Application");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppConfig::ConfigurationProfile".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppConfig::ConfigurationProfile'", "AWS::AppConfig::ConfigurationProfile", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppConfig::ConfigurationProfile");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppConfig::DeploymentStrategy".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppConfig::DeploymentStrategy'", "AWS::AppConfig::DeploymentStrategy", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppConfig::DeploymentStrategy");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppConfig::Environment".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppConfig::Environment'", "AWS::AppConfig::Environment", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppConfig::Environment");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppConfig::HostedConfigurationVersion".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppConfig::HostedConfigurationVersion'", "AWS::AppConfig::HostedConfigurationVersion", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppConfig::HostedConfigurationVersion");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppFlow::Flow".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppFlow::Flow'", "AWS::AppFlow::Flow", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppFlow::Flow");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppIntegrations::EventIntegration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppIntegrations::EventIntegration'", "AWS::AppIntegrations::EventIntegration", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppIntegrations::EventIntegration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppMesh::GatewayRoute".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppMesh::GatewayRoute'", "AWS::AppMesh::GatewayRoute", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppMesh::GatewayRoute");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppMesh::Mesh".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppMesh::Mesh'", "AWS::AppMesh::Mesh", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppMesh::Mesh");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppMesh::Route".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppMesh::Route'", "AWS::AppMesh::Route", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppMesh::Route");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppMesh::VirtualGateway".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppMesh::VirtualGateway'", "AWS::AppMesh::VirtualGateway", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppMesh::VirtualGateway");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppMesh::VirtualNode".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppMesh::VirtualNode'", "AWS::AppMesh::VirtualNode", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppMesh::VirtualNode");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppMesh::VirtualRouter".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppMesh::VirtualRouter'", "AWS::AppMesh::VirtualRouter", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppMesh::VirtualRouter");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppMesh::VirtualService".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppMesh::VirtualService'", "AWS::AppMesh::VirtualService", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppMesh::VirtualService");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppRunner::Service".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppRunner::Service'", "AWS::AppRunner::Service", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppRunner::Service");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppRunner::VpcConnector".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppRunner::VpcConnector'", "AWS::AppRunner::VpcConnector", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppRunner::VpcConnector");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppStream::Application".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppStream::Application'", "AWS::AppStream::Application", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppStream::Application");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppStream::DirectoryConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppStream::DirectoryConfig'", "AWS::AppStream::DirectoryConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppStream::DirectoryConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppStream::Fleet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppStream::Fleet'", "AWS::AppStream::Fleet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppStream::Fleet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppStream::Stack".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppStream::Stack'", "AWS::AppStream::Stack", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppStream::Stack");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AppSync::GraphQLApi".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AppSync::GraphQLApi'", "AWS::AppSync::GraphQLApi", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AppSync::GraphQLApi");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Athena::DataCatalog".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Athena::DataCatalog'", "AWS::Athena::DataCatalog", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Athena::DataCatalog");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Athena::PreparedStatement".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Athena::PreparedStatement'", "AWS::Athena::PreparedStatement", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Athena::PreparedStatement");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Athena::WorkGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Athena::WorkGroup'", "AWS::Athena::WorkGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Athena::WorkGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AuditManager::Assessment".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AuditManager::Assessment'", "AWS::AuditManager::Assessment", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AuditManager::Assessment");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AutoScaling::AutoScalingGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AutoScaling::AutoScalingGroup'", "AWS::AutoScaling::AutoScalingGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AutoScaling::AutoScalingGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AutoScaling::LaunchConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AutoScaling::LaunchConfiguration'", "AWS::AutoScaling::LaunchConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AutoScaling::LaunchConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AutoScaling::ScalingPolicy".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AutoScaling::ScalingPolicy'", "AWS::AutoScaling::ScalingPolicy", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AutoScaling::ScalingPolicy");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AutoScaling::ScheduledAction".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AutoScaling::ScheduledAction'", "AWS::AutoScaling::ScheduledAction", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AutoScaling::ScheduledAction");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::AutoScaling::WarmPool".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::AutoScaling::WarmPool'", "AWS::AutoScaling::WarmPool", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::AutoScaling::WarmPool");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Backup::BackupPlan".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Backup::BackupPlan'", "AWS::Backup::BackupPlan", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Backup::BackupPlan");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Backup::BackupSelection".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Backup::BackupSelection'", "AWS::Backup::BackupSelection", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Backup::BackupSelection");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Backup::BackupVault".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Backup::BackupVault'", "AWS::Backup::BackupVault", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Backup::BackupVault");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Backup::RecoveryPoint".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Backup::RecoveryPoint'", "AWS::Backup::RecoveryPoint", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Backup::RecoveryPoint");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Backup::ReportPlan".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Backup::ReportPlan'", "AWS::Backup::ReportPlan", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Backup::ReportPlan");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Batch::ComputeEnvironment".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Batch::ComputeEnvironment'", "AWS::Batch::ComputeEnvironment", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Batch::ComputeEnvironment");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Batch::JobQueue".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Batch::JobQueue'", "AWS::Batch::JobQueue", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Batch::JobQueue");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Batch::SchedulingPolicy".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Batch::SchedulingPolicy'", "AWS::Batch::SchedulingPolicy", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Batch::SchedulingPolicy");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Budgets::BudgetsAction".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Budgets::BudgetsAction'", "AWS::Budgets::BudgetsAction", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Budgets::BudgetsAction");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Cassandra::Keyspace".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Cassandra::Keyspace'", "AWS::Cassandra::Keyspace", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Cassandra::Keyspace");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Cloud9::EnvironmentEC2".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Cloud9::EnvironmentEC2'", "AWS::Cloud9::EnvironmentEC2", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Cloud9::EnvironmentEC2");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CloudFormation::Stack".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CloudFormation::Stack'", "AWS::CloudFormation::Stack", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CloudFormation::Stack");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CloudFront::Distribution".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CloudFront::Distribution'", "AWS::CloudFront::Distribution", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CloudFront::Distribution");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CloudFront::StreamingDistribution".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CloudFront::StreamingDistribution'", "AWS::CloudFront::StreamingDistribution", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CloudFront::StreamingDistribution");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CloudTrail::Trail".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CloudTrail::Trail'", "AWS::CloudTrail::Trail", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CloudTrail::Trail");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CloudWatch::Alarm".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CloudWatch::Alarm'", "AWS::CloudWatch::Alarm", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CloudWatch::Alarm");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CloudWatch::MetricStream".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CloudWatch::MetricStream'", "AWS::CloudWatch::MetricStream", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CloudWatch::MetricStream");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CodeArtifact::Repository".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CodeArtifact::Repository'", "AWS::CodeArtifact::Repository", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CodeArtifact::Repository");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CodeBuild::Project".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CodeBuild::Project'", "AWS::CodeBuild::Project", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CodeBuild::Project");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CodeBuild::ReportGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CodeBuild::ReportGroup'", "AWS::CodeBuild::ReportGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CodeBuild::ReportGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CodeDeploy::Application".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CodeDeploy::Application'", "AWS::CodeDeploy::Application", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CodeDeploy::Application");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CodeDeploy::DeploymentConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CodeDeploy::DeploymentConfig'", "AWS::CodeDeploy::DeploymentConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CodeDeploy::DeploymentConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CodeDeploy::DeploymentGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CodeDeploy::DeploymentGroup'", "AWS::CodeDeploy::DeploymentGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CodeDeploy::DeploymentGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CodeGuruProfiler::ProfilingGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CodeGuruProfiler::ProfilingGroup'", "AWS::CodeGuruProfiler::ProfilingGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CodeGuruProfiler::ProfilingGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CodeGuruReviewer::RepositoryAssociation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CodeGuruReviewer::RepositoryAssociation'", "AWS::CodeGuruReviewer::RepositoryAssociation", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CodeGuruReviewer::RepositoryAssociation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CodePipeline::Pipeline".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CodePipeline::Pipeline'", "AWS::CodePipeline::Pipeline", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CodePipeline::Pipeline");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Cognito::UserPool".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Cognito::UserPool'", "AWS::Cognito::UserPool", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Cognito::UserPool");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Cognito::UserPoolClient".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Cognito::UserPoolClient'", "AWS::Cognito::UserPoolClient", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Cognito::UserPoolClient");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Cognito::UserPoolGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Cognito::UserPoolGroup'", "AWS::Cognito::UserPoolGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Cognito::UserPoolGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Config::ConformancePackCompliance".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Config::ConformancePackCompliance'", "AWS::Config::ConformancePackCompliance", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Config::ConformancePackCompliance");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Config::ResourceCompliance".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Config::ResourceCompliance'", "AWS::Config::ResourceCompliance", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Config::ResourceCompliance");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Connect::Instance".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Connect::Instance'", "AWS::Connect::Instance", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Connect::Instance");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Connect::PhoneNumber".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Connect::PhoneNumber'", "AWS::Connect::PhoneNumber", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Connect::PhoneNumber");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Connect::QuickConnect".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Connect::QuickConnect'", "AWS::Connect::QuickConnect", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Connect::QuickConnect");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CustomerProfiles::Domain".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CustomerProfiles::Domain'", "AWS::CustomerProfiles::Domain", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CustomerProfiles::Domain");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::CustomerProfiles::ObjectType".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::CustomerProfiles::ObjectType'", "AWS::CustomerProfiles::ObjectType", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::CustomerProfiles::ObjectType");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DMS::Certificate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DMS::Certificate'", "AWS::DMS::Certificate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DMS::Certificate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DMS::Endpoint".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DMS::Endpoint'", "AWS::DMS::Endpoint", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DMS::Endpoint");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DMS::EventSubscription".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DMS::EventSubscription'", "AWS::DMS::EventSubscription", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DMS::EventSubscription");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DMS::ReplicationSubnetGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DMS::ReplicationSubnetGroup'", "AWS::DMS::ReplicationSubnetGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DMS::ReplicationSubnetGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DataSync::LocationEFS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DataSync::LocationEFS'", "AWS::DataSync::LocationEFS", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DataSync::LocationEFS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DataSync::LocationFSxLustre".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DataSync::LocationFSxLustre'", "AWS::DataSync::LocationFSxLustre", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DataSync::LocationFSxLustre");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DataSync::LocationFSxWindows".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DataSync::LocationFSxWindows'", "AWS::DataSync::LocationFSxWindows", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DataSync::LocationFSxWindows");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DataSync::LocationHDFS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DataSync::LocationHDFS'", "AWS::DataSync::LocationHDFS", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DataSync::LocationHDFS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DataSync::LocationNFS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DataSync::LocationNFS'", "AWS::DataSync::LocationNFS", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DataSync::LocationNFS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DataSync::LocationObjectStorage".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DataSync::LocationObjectStorage'", "AWS::DataSync::LocationObjectStorage", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DataSync::LocationObjectStorage");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DataSync::LocationS3".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DataSync::LocationS3'", "AWS::DataSync::LocationS3", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DataSync::LocationS3");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DataSync::LocationSMB".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DataSync::LocationSMB'", "AWS::DataSync::LocationSMB", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DataSync::LocationSMB");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DataSync::Task".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DataSync::Task'", "AWS::DataSync::Task", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DataSync::Task");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Detective::Graph".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Detective::Graph'", "AWS::Detective::Graph", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Detective::Graph");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DeviceFarm::InstanceProfile".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DeviceFarm::InstanceProfile'", "AWS::DeviceFarm::InstanceProfile", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DeviceFarm::InstanceProfile");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DeviceFarm::Project".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DeviceFarm::Project'", "AWS::DeviceFarm::Project", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DeviceFarm::Project");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DeviceFarm::TestGridProject".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DeviceFarm::TestGridProject'", "AWS::DeviceFarm::TestGridProject", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DeviceFarm::TestGridProject");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::DynamoDB::Table".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::DynamoDB::Table'", "AWS::DynamoDB::Table", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::DynamoDB::Table");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::CapacityReservation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::CapacityReservation'", "AWS::EC2::CapacityReservation", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::CapacityReservation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::CarrierGateway".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::CarrierGateway'", "AWS::EC2::CarrierGateway", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::CarrierGateway");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::ClientVpnEndpoint".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::ClientVpnEndpoint'", "AWS::EC2::ClientVpnEndpoint", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::ClientVpnEndpoint");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::CustomerGateway".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::CustomerGateway'", "AWS::EC2::CustomerGateway", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::CustomerGateway");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::DHCPOptions".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::DHCPOptions'", "AWS::EC2::DHCPOptions", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::DHCPOptions");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::EC2Fleet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::EC2Fleet'", "AWS::EC2::EC2Fleet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::EC2Fleet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::EIP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::EIP'", "AWS::EC2::EIP", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::EIP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::EgressOnlyInternetGateway".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::EgressOnlyInternetGateway'", "AWS::EC2::EgressOnlyInternetGateway", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::EgressOnlyInternetGateway");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::FlowLog".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::FlowLog'", "AWS::EC2::FlowLog", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::FlowLog");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::Host".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::Host'", "AWS::EC2::Host", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::Host");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::IPAM".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::IPAM'", "AWS::EC2::IPAM", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::IPAM");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::IPAMPool".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::IPAMPool'", "AWS::EC2::IPAMPool", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::IPAMPool");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::IPAMScope".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::IPAMScope'", "AWS::EC2::IPAMScope", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::IPAMScope");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::Instance".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::Instance'", "AWS::EC2::Instance", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::Instance");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::InternetGateway".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::InternetGateway'", "AWS::EC2::InternetGateway", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::InternetGateway");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::LaunchTemplate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::LaunchTemplate'", "AWS::EC2::LaunchTemplate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::LaunchTemplate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::NatGateway".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::NatGateway'", "AWS::EC2::NatGateway", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::NatGateway");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::NetworkAcl".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::NetworkAcl'", "AWS::EC2::NetworkAcl", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::NetworkAcl");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::NetworkInsightsAccessScope".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::NetworkInsightsAccessScope'", "AWS::EC2::NetworkInsightsAccessScope", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::NetworkInsightsAccessScope");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::NetworkInsightsAccessScopeAnalysis".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::NetworkInsightsAccessScopeAnalysis'", "AWS::EC2::NetworkInsightsAccessScopeAnalysis", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::NetworkInsightsAccessScopeAnalysis");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::NetworkInsightsAnalysis".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::NetworkInsightsAnalysis'", "AWS::EC2::NetworkInsightsAnalysis", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::NetworkInsightsAnalysis");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::NetworkInsightsPath".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::NetworkInsightsPath'", "AWS::EC2::NetworkInsightsPath", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::NetworkInsightsPath");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::NetworkInterface".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::NetworkInterface'", "AWS::EC2::NetworkInterface", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::NetworkInterface");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::PrefixList".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::PrefixList'", "AWS::EC2::PrefixList", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::PrefixList");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::RegisteredHAInstance".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::RegisteredHAInstance'", "AWS::EC2::RegisteredHAInstance", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::RegisteredHAInstance");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::RouteTable".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::RouteTable'", "AWS::EC2::RouteTable", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::RouteTable");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::SecurityGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::SecurityGroup'", "AWS::EC2::SecurityGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::SecurityGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::SpotFleet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::SpotFleet'", "AWS::EC2::SpotFleet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::SpotFleet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::Subnet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::Subnet'", "AWS::EC2::Subnet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::Subnet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::SubnetRouteTableAssociation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::SubnetRouteTableAssociation'", "AWS::EC2::SubnetRouteTableAssociation", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::SubnetRouteTableAssociation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::TrafficMirrorFilter".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::TrafficMirrorFilter'", "AWS::EC2::TrafficMirrorFilter", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::TrafficMirrorFilter");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::TrafficMirrorSession".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::TrafficMirrorSession'", "AWS::EC2::TrafficMirrorSession", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::TrafficMirrorSession");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::TrafficMirrorTarget".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::TrafficMirrorTarget'", "AWS::EC2::TrafficMirrorTarget", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::TrafficMirrorTarget");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::TransitGateway".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::TransitGateway'", "AWS::EC2::TransitGateway", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::TransitGateway");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::TransitGatewayAttachment".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::TransitGatewayAttachment'", "AWS::EC2::TransitGatewayAttachment", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::TransitGatewayAttachment");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::TransitGatewayConnect".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::TransitGatewayConnect'", "AWS::EC2::TransitGatewayConnect", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::TransitGatewayConnect");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::TransitGatewayMulticastDomain".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::TransitGatewayMulticastDomain'", "AWS::EC2::TransitGatewayMulticastDomain", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::TransitGatewayMulticastDomain");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::TransitGatewayRouteTable".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::TransitGatewayRouteTable'", "AWS::EC2::TransitGatewayRouteTable", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::TransitGatewayRouteTable");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::VPC".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::VPC'", "AWS::EC2::VPC", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::VPC");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::VPCEndpoint".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::VPCEndpoint'", "AWS::EC2::VPCEndpoint", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::VPCEndpoint");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::VPCEndpointService".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::VPCEndpointService'", "AWS::EC2::VPCEndpointService", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::VPCEndpointService");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::VPCPeeringConnection".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::VPCPeeringConnection'", "AWS::EC2::VPCPeeringConnection", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::VPCPeeringConnection");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::VPNConnection".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::VPNConnection'", "AWS::EC2::VPNConnection", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::VPNConnection");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::VPNGateway".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::VPNGateway'", "AWS::EC2::VPNGateway", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::VPNGateway");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EC2::Volume".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EC2::Volume'", "AWS::EC2::Volume", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EC2::Volume");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ECR::PublicRepository".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ECR::PublicRepository'", "AWS::ECR::PublicRepository", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ECR::PublicRepository");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ECR::PullThroughCacheRule".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ECR::PullThroughCacheRule'", "AWS::ECR::PullThroughCacheRule", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ECR::PullThroughCacheRule");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ECR::RegistryPolicy".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ECR::RegistryPolicy'", "AWS::ECR::RegistryPolicy", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ECR::RegistryPolicy");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ECR::Repository".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ECR::Repository'", "AWS::ECR::Repository", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ECR::Repository");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ECS::CapacityProvider".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ECS::CapacityProvider'", "AWS::ECS::CapacityProvider", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ECS::CapacityProvider");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ECS::Cluster".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ECS::Cluster'", "AWS::ECS::Cluster", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ECS::Cluster");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ECS::Service".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ECS::Service'", "AWS::ECS::Service", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ECS::Service");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ECS::TaskDefinition".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ECS::TaskDefinition'", "AWS::ECS::TaskDefinition", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ECS::TaskDefinition");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ECS::TaskSet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ECS::TaskSet'", "AWS::ECS::TaskSet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ECS::TaskSet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EFS::AccessPoint".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EFS::AccessPoint'", "AWS::EFS::AccessPoint", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EFS::AccessPoint");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EFS::FileSystem".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EFS::FileSystem'", "AWS::EFS::FileSystem", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EFS::FileSystem");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EKS::Addon".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EKS::Addon'", "AWS::EKS::Addon", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EKS::Addon");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EKS::Cluster".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EKS::Cluster'", "AWS::EKS::Cluster", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EKS::Cluster");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EKS::FargateProfile".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EKS::FargateProfile'", "AWS::EKS::FargateProfile", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EKS::FargateProfile");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EKS::IdentityProviderConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EKS::IdentityProviderConfig'", "AWS::EKS::IdentityProviderConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EKS::IdentityProviderConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EMR::SecurityConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EMR::SecurityConfiguration'", "AWS::EMR::SecurityConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EMR::SecurityConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ElasticBeanstalk::Application".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ElasticBeanstalk::Application'", "AWS::ElasticBeanstalk::Application", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ElasticBeanstalk::Application");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ElasticBeanstalk::ApplicationVersion".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ElasticBeanstalk::ApplicationVersion'", "AWS::ElasticBeanstalk::ApplicationVersion", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ElasticBeanstalk::ApplicationVersion");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ElasticBeanstalk::Environment".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ElasticBeanstalk::Environment'", "AWS::ElasticBeanstalk::Environment", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ElasticBeanstalk::Environment");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ElasticLoadBalancing::LoadBalancer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ElasticLoadBalancing::LoadBalancer'", "AWS::ElasticLoadBalancing::LoadBalancer", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ElasticLoadBalancing::LoadBalancer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ElasticLoadBalancingV2::Listener".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ElasticLoadBalancingV2::Listener'", "AWS::ElasticLoadBalancingV2::Listener", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ElasticLoadBalancingV2::Listener");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ElasticLoadBalancingV2::LoadBalancer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ElasticLoadBalancingV2::LoadBalancer'", "AWS::ElasticLoadBalancingV2::LoadBalancer", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ElasticLoadBalancingV2::LoadBalancer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Elasticsearch::Domain".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Elasticsearch::Domain'", "AWS::Elasticsearch::Domain", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Elasticsearch::Domain");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EventSchemas::Discoverer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EventSchemas::Discoverer'", "AWS::EventSchemas::Discoverer", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EventSchemas::Discoverer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EventSchemas::Registry".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EventSchemas::Registry'", "AWS::EventSchemas::Registry", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EventSchemas::Registry");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EventSchemas::RegistryPolicy".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EventSchemas::RegistryPolicy'", "AWS::EventSchemas::RegistryPolicy", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EventSchemas::RegistryPolicy");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::EventSchemas::Schema".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::EventSchemas::Schema'", "AWS::EventSchemas::Schema", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::EventSchemas::Schema");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Events::ApiDestination".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Events::ApiDestination'", "AWS::Events::ApiDestination", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Events::ApiDestination");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Events::Archive".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Events::Archive'", "AWS::Events::Archive", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Events::Archive");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Events::Connection".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Events::Connection'", "AWS::Events::Connection", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Events::Connection");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Events::Endpoint".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Events::Endpoint'", "AWS::Events::Endpoint", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Events::Endpoint");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Events::EventBus".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Events::EventBus'", "AWS::Events::EventBus", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Events::EventBus");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Events::Rule".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Events::Rule'", "AWS::Events::Rule", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Events::Rule");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Evidently::Launch".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Evidently::Launch'", "AWS::Evidently::Launch", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Evidently::Launch");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Evidently::Project".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Evidently::Project'", "AWS::Evidently::Project", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Evidently::Project");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::FIS::ExperimentTemplate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::FIS::ExperimentTemplate'", "AWS::FIS::ExperimentTemplate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::FIS::ExperimentTemplate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Forecast::Dataset".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Forecast::Dataset'", "AWS::Forecast::Dataset", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Forecast::Dataset");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Forecast::DatasetGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Forecast::DatasetGroup'", "AWS::Forecast::DatasetGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Forecast::DatasetGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::FraudDetector::EntityType".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::FraudDetector::EntityType'", "AWS::FraudDetector::EntityType", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::FraudDetector::EntityType");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::FraudDetector::Label".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::FraudDetector::Label'", "AWS::FraudDetector::Label", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::FraudDetector::Label");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::FraudDetector::Outcome".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::FraudDetector::Outcome'", "AWS::FraudDetector::Outcome", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::FraudDetector::Outcome");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::FraudDetector::Variable".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::FraudDetector::Variable'", "AWS::FraudDetector::Variable", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::FraudDetector::Variable");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::GlobalAccelerator::Accelerator".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::GlobalAccelerator::Accelerator'", "AWS::GlobalAccelerator::Accelerator", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::GlobalAccelerator::Accelerator");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::GlobalAccelerator::EndpointGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::GlobalAccelerator::EndpointGroup'", "AWS::GlobalAccelerator::EndpointGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::GlobalAccelerator::EndpointGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::GlobalAccelerator::Listener".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::GlobalAccelerator::Listener'", "AWS::GlobalAccelerator::Listener", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::GlobalAccelerator::Listener");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Glue::Classifier".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Glue::Classifier'", "AWS::Glue::Classifier", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Glue::Classifier");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Glue::Job".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Glue::Job'", "AWS::Glue::Job", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Glue::Job");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Glue::MLTransform".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Glue::MLTransform'", "AWS::Glue::MLTransform", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Glue::MLTransform");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Grafana::Workspace".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Grafana::Workspace'", "AWS::Grafana::Workspace", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Grafana::Workspace");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::GreengrassV2::ComponentVersion".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::GreengrassV2::ComponentVersion'", "AWS::GreengrassV2::ComponentVersion", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::GreengrassV2::ComponentVersion");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::GroundStation::Config".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::GroundStation::Config'", "AWS::GroundStation::Config", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::GroundStation::Config");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::GroundStation::DataflowEndpointGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::GroundStation::DataflowEndpointGroup'", "AWS::GroundStation::DataflowEndpointGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::GroundStation::DataflowEndpointGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::GroundStation::MissionProfile".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::GroundStation::MissionProfile'", "AWS::GroundStation::MissionProfile", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::GroundStation::MissionProfile");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::GuardDuty::Detector".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::GuardDuty::Detector'", "AWS::GuardDuty::Detector", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::GuardDuty::Detector");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::GuardDuty::Filter".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::GuardDuty::Filter'", "AWS::GuardDuty::Filter", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::GuardDuty::Filter");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::GuardDuty::IPSet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::GuardDuty::IPSet'", "AWS::GuardDuty::IPSet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::GuardDuty::IPSet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::GuardDuty::ThreatIntelSet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::GuardDuty::ThreatIntelSet'", "AWS::GuardDuty::ThreatIntelSet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::GuardDuty::ThreatIntelSet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::HealthLake::FHIRDatastore".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::HealthLake::FHIRDatastore'", "AWS::HealthLake::FHIRDatastore", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::HealthLake::FHIRDatastore");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IAM::Group".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IAM::Group'", "AWS::IAM::Group", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IAM::Group");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IAM::InstanceProfile".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IAM::InstanceProfile'", "AWS::IAM::InstanceProfile", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IAM::InstanceProfile");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IAM::Policy".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IAM::Policy'", "AWS::IAM::Policy", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IAM::Policy");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IAM::Role".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IAM::Role'", "AWS::IAM::Role", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IAM::Role");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IAM::SAMLProvider".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IAM::SAMLProvider'", "AWS::IAM::SAMLProvider", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IAM::SAMLProvider");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IAM::ServerCertificate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IAM::ServerCertificate'", "AWS::IAM::ServerCertificate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IAM::ServerCertificate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IAM::User".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IAM::User'", "AWS::IAM::User", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IAM::User");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IVS::Channel".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IVS::Channel'", "AWS::IVS::Channel", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IVS::Channel");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IVS::PlaybackKeyPair".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IVS::PlaybackKeyPair'", "AWS::IVS::PlaybackKeyPair", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IVS::PlaybackKeyPair");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IVS::RecordingConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IVS::RecordingConfiguration'", "AWS::IVS::RecordingConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IVS::RecordingConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ImageBuilder::ContainerRecipe".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ImageBuilder::ContainerRecipe'", "AWS::ImageBuilder::ContainerRecipe", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ImageBuilder::ContainerRecipe");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ImageBuilder::DistributionConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ImageBuilder::DistributionConfiguration'", "AWS::ImageBuilder::DistributionConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ImageBuilder::DistributionConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ImageBuilder::ImagePipeline".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ImageBuilder::ImagePipeline'", "AWS::ImageBuilder::ImagePipeline", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ImageBuilder::ImagePipeline");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ImageBuilder::ImageRecipe".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ImageBuilder::ImageRecipe'", "AWS::ImageBuilder::ImageRecipe", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ImageBuilder::ImageRecipe");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ImageBuilder::InfrastructureConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ImageBuilder::InfrastructureConfiguration'", "AWS::ImageBuilder::InfrastructureConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ImageBuilder::InfrastructureConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::InspectorV2::Filter".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::InspectorV2::Filter'", "AWS::InspectorV2::Filter", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::InspectorV2::Filter");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::AccountAuditConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::AccountAuditConfiguration'", "AWS::IoT::AccountAuditConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::AccountAuditConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::Authorizer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::Authorizer'", "AWS::IoT::Authorizer", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::Authorizer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::CACertificate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::CACertificate'", "AWS::IoT::CACertificate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::CACertificate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::CustomMetric".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::CustomMetric'", "AWS::IoT::CustomMetric", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::CustomMetric");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::Dimension".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::Dimension'", "AWS::IoT::Dimension", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::Dimension");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::FleetMetric".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::FleetMetric'", "AWS::IoT::FleetMetric", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::FleetMetric");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::JobTemplate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::JobTemplate'", "AWS::IoT::JobTemplate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::JobTemplate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::MitigationAction".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::MitigationAction'", "AWS::IoT::MitigationAction", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::MitigationAction");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::Policy".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::Policy'", "AWS::IoT::Policy", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::Policy");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::ProvisioningTemplate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::ProvisioningTemplate'", "AWS::IoT::ProvisioningTemplate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::ProvisioningTemplate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::RoleAlias".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::RoleAlias'", "AWS::IoT::RoleAlias", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::RoleAlias");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::ScheduledAudit".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::ScheduledAudit'", "AWS::IoT::ScheduledAudit", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::ScheduledAudit");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoT::SecurityProfile".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoT::SecurityProfile'", "AWS::IoT::SecurityProfile", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoT::SecurityProfile");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTAnalytics::Channel".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTAnalytics::Channel'", "AWS::IoTAnalytics::Channel", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTAnalytics::Channel");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTAnalytics::Dataset".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTAnalytics::Dataset'", "AWS::IoTAnalytics::Dataset", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTAnalytics::Dataset");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTAnalytics::Datastore".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTAnalytics::Datastore'", "AWS::IoTAnalytics::Datastore", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTAnalytics::Datastore");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTAnalytics::Pipeline".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTAnalytics::Pipeline'", "AWS::IoTAnalytics::Pipeline", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTAnalytics::Pipeline");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTEvents::AlarmModel".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTEvents::AlarmModel'", "AWS::IoTEvents::AlarmModel", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTEvents::AlarmModel");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTEvents::DetectorModel".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTEvents::DetectorModel'", "AWS::IoTEvents::DetectorModel", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTEvents::DetectorModel");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTEvents::Input".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTEvents::Input'", "AWS::IoTEvents::Input", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTEvents::Input");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTSiteWise::AssetModel".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTSiteWise::AssetModel'", "AWS::IoTSiteWise::AssetModel", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTSiteWise::AssetModel");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTSiteWise::Dashboard".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTSiteWise::Dashboard'", "AWS::IoTSiteWise::Dashboard", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTSiteWise::Dashboard");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTSiteWise::Gateway".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTSiteWise::Gateway'", "AWS::IoTSiteWise::Gateway", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTSiteWise::Gateway");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTSiteWise::Portal".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTSiteWise::Portal'", "AWS::IoTSiteWise::Portal", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTSiteWise::Portal");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTSiteWise::Project".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTSiteWise::Project'", "AWS::IoTSiteWise::Project", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTSiteWise::Project");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTTwinMaker::ComponentType".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTTwinMaker::ComponentType'", "AWS::IoTTwinMaker::ComponentType", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTTwinMaker::ComponentType");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTTwinMaker::Entity".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTTwinMaker::Entity'", "AWS::IoTTwinMaker::Entity", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTTwinMaker::Entity");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTTwinMaker::Scene".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTTwinMaker::Scene'", "AWS::IoTTwinMaker::Scene", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTTwinMaker::Scene");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTTwinMaker::SyncJob".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTTwinMaker::SyncJob'", "AWS::IoTTwinMaker::SyncJob", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTTwinMaker::SyncJob");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTTwinMaker::Workspace".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTTwinMaker::Workspace'", "AWS::IoTTwinMaker::Workspace", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTTwinMaker::Workspace");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTWireless::FuotaTask".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTWireless::FuotaTask'", "AWS::IoTWireless::FuotaTask", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTWireless::FuotaTask");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTWireless::MulticastGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTWireless::MulticastGroup'", "AWS::IoTWireless::MulticastGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTWireless::MulticastGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::IoTWireless::ServiceProfile".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::IoTWireless::ServiceProfile'", "AWS::IoTWireless::ServiceProfile", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::IoTWireless::ServiceProfile");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::KMS::Alias".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::KMS::Alias'", "AWS::KMS::Alias", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::KMS::Alias");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::KMS::Key".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::KMS::Key'", "AWS::KMS::Key", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::KMS::Key");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::KafkaConnect::Connector".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::KafkaConnect::Connector'", "AWS::KafkaConnect::Connector", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::KafkaConnect::Connector");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Kendra::Index".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Kendra::Index'", "AWS::Kendra::Index", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Kendra::Index");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Kinesis::Stream".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Kinesis::Stream'", "AWS::Kinesis::Stream", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Kinesis::Stream");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Kinesis::StreamConsumer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Kinesis::StreamConsumer'", "AWS::Kinesis::StreamConsumer", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Kinesis::StreamConsumer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::KinesisAnalyticsV2::Application".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::KinesisAnalyticsV2::Application'", "AWS::KinesisAnalyticsV2::Application", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::KinesisAnalyticsV2::Application");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::KinesisFirehose::DeliveryStream".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::KinesisFirehose::DeliveryStream'", "AWS::KinesisFirehose::DeliveryStream", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::KinesisFirehose::DeliveryStream");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::KinesisVideo::SignalingChannel".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::KinesisVideo::SignalingChannel'", "AWS::KinesisVideo::SignalingChannel", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::KinesisVideo::SignalingChannel");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::KinesisVideo::Stream".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::KinesisVideo::Stream'", "AWS::KinesisVideo::Stream", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::KinesisVideo::Stream");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Lambda::CodeSigningConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Lambda::CodeSigningConfig'", "AWS::Lambda::CodeSigningConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Lambda::CodeSigningConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Lambda::Function".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Lambda::Function'", "AWS::Lambda::Function", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Lambda::Function");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Lex::Bot".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Lex::Bot'", "AWS::Lex::Bot", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Lex::Bot");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Lex::BotAlias".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Lex::BotAlias'", "AWS::Lex::BotAlias", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Lex::BotAlias");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Lightsail::Bucket".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Lightsail::Bucket'", "AWS::Lightsail::Bucket", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Lightsail::Bucket");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Lightsail::Certificate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Lightsail::Certificate'", "AWS::Lightsail::Certificate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Lightsail::Certificate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Lightsail::Disk".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Lightsail::Disk'", "AWS::Lightsail::Disk", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Lightsail::Disk");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Lightsail::StaticIp".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Lightsail::StaticIp'", "AWS::Lightsail::StaticIp", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Lightsail::StaticIp");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Logs::Destination".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Logs::Destination'", "AWS::Logs::Destination", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Logs::Destination");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::LookoutMetrics::Alert".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::LookoutMetrics::Alert'", "AWS::LookoutMetrics::Alert", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::LookoutMetrics::Alert");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::LookoutVision::Project".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::LookoutVision::Project'", "AWS::LookoutVision::Project", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::LookoutVision::Project");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::M2::Environment".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::M2::Environment'", "AWS::M2::Environment", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::M2::Environment");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::MSK::BatchScramSecret".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::MSK::BatchScramSecret'", "AWS::MSK::BatchScramSecret", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::MSK::BatchScramSecret");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::MSK::Cluster".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::MSK::Cluster'", "AWS::MSK::Cluster", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::MSK::Cluster");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::MSK::Configuration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::MSK::Configuration'", "AWS::MSK::Configuration", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::MSK::Configuration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::MediaConnect::FlowEntitlement".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::MediaConnect::FlowEntitlement'", "AWS::MediaConnect::FlowEntitlement", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::MediaConnect::FlowEntitlement");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::MediaConnect::FlowSource".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::MediaConnect::FlowSource'", "AWS::MediaConnect::FlowSource", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::MediaConnect::FlowSource");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::MediaConnect::FlowVpcInterface".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::MediaConnect::FlowVpcInterface'", "AWS::MediaConnect::FlowVpcInterface", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::MediaConnect::FlowVpcInterface");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::MediaPackage::PackagingConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::MediaPackage::PackagingConfiguration'", "AWS::MediaPackage::PackagingConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::MediaPackage::PackagingConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::MediaPackage::PackagingGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::MediaPackage::PackagingGroup'", "AWS::MediaPackage::PackagingGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::MediaPackage::PackagingGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::MediaTailor::PlaybackConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::MediaTailor::PlaybackConfiguration'", "AWS::MediaTailor::PlaybackConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::MediaTailor::PlaybackConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::NetworkFirewall::Firewall".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::NetworkFirewall::Firewall'", "AWS::NetworkFirewall::Firewall", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::NetworkFirewall::Firewall");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::NetworkFirewall::FirewallPolicy".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::NetworkFirewall::FirewallPolicy'", "AWS::NetworkFirewall::FirewallPolicy", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::NetworkFirewall::FirewallPolicy");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::NetworkFirewall::RuleGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::NetworkFirewall::RuleGroup'", "AWS::NetworkFirewall::RuleGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::NetworkFirewall::RuleGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::NetworkManager::ConnectPeer".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::NetworkManager::ConnectPeer'", "AWS::NetworkManager::ConnectPeer", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::NetworkManager::ConnectPeer");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::NetworkManager::CustomerGatewayAssociation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::NetworkManager::CustomerGatewayAssociation'", "AWS::NetworkManager::CustomerGatewayAssociation", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::NetworkManager::CustomerGatewayAssociation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::NetworkManager::Device".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::NetworkManager::Device'", "AWS::NetworkManager::Device", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::NetworkManager::Device");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::NetworkManager::GlobalNetwork".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::NetworkManager::GlobalNetwork'", "AWS::NetworkManager::GlobalNetwork", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::NetworkManager::GlobalNetwork");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::NetworkManager::Link".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::NetworkManager::Link'", "AWS::NetworkManager::Link", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::NetworkManager::Link");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::NetworkManager::LinkAssociation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::NetworkManager::LinkAssociation'", "AWS::NetworkManager::LinkAssociation", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::NetworkManager::LinkAssociation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::NetworkManager::Site".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::NetworkManager::Site'", "AWS::NetworkManager::Site", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::NetworkManager::Site");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::NetworkManager::TransitGatewayRegistration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::NetworkManager::TransitGatewayRegistration'", "AWS::NetworkManager::TransitGatewayRegistration", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::NetworkManager::TransitGatewayRegistration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::OpenSearch::Domain".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::OpenSearch::Domain'", "AWS::OpenSearch::Domain", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::OpenSearch::Domain");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Panorama::Package".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Panorama::Package'", "AWS::Panorama::Package", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Panorama::Package");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Personalize::Dataset".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Personalize::Dataset'", "AWS::Personalize::Dataset", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Personalize::Dataset");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Personalize::DatasetGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Personalize::DatasetGroup'", "AWS::Personalize::DatasetGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Personalize::DatasetGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Personalize::Schema".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Personalize::Schema'", "AWS::Personalize::Schema", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Personalize::Schema");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Personalize::Solution".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Personalize::Solution'", "AWS::Personalize::Solution", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Personalize::Solution");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Pinpoint::App".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Pinpoint::App'", "AWS::Pinpoint::App", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Pinpoint::App");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Pinpoint::ApplicationSettings".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Pinpoint::ApplicationSettings'", "AWS::Pinpoint::ApplicationSettings", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Pinpoint::ApplicationSettings");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Pinpoint::Campaign".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Pinpoint::Campaign'", "AWS::Pinpoint::Campaign", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Pinpoint::Campaign");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Pinpoint::EmailChannel".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Pinpoint::EmailChannel'", "AWS::Pinpoint::EmailChannel", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Pinpoint::EmailChannel");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Pinpoint::EmailTemplate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Pinpoint::EmailTemplate'", "AWS::Pinpoint::EmailTemplate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Pinpoint::EmailTemplate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Pinpoint::EventStream".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Pinpoint::EventStream'", "AWS::Pinpoint::EventStream", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Pinpoint::EventStream");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Pinpoint::InAppTemplate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Pinpoint::InAppTemplate'", "AWS::Pinpoint::InAppTemplate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Pinpoint::InAppTemplate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Pinpoint::Segment".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Pinpoint::Segment'", "AWS::Pinpoint::Segment", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Pinpoint::Segment");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::QLDB::Ledger".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::QLDB::Ledger'", "AWS::QLDB::Ledger", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::QLDB::Ledger");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::QuickSight::DataSource".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::QuickSight::DataSource'", "AWS::QuickSight::DataSource", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::QuickSight::DataSource");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::QuickSight::Template".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::QuickSight::Template'", "AWS::QuickSight::Template", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::QuickSight::Template");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::QuickSight::Theme".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::QuickSight::Theme'", "AWS::QuickSight::Theme", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::QuickSight::Theme");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RDS::DBCluster".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RDS::DBCluster'", "AWS::RDS::DBCluster", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RDS::DBCluster");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RDS::DBClusterSnapshot".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RDS::DBClusterSnapshot'", "AWS::RDS::DBClusterSnapshot", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RDS::DBClusterSnapshot");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RDS::DBInstance".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RDS::DBInstance'", "AWS::RDS::DBInstance", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RDS::DBInstance");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RDS::DBSecurityGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RDS::DBSecurityGroup'", "AWS::RDS::DBSecurityGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RDS::DBSecurityGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RDS::DBSnapshot".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RDS::DBSnapshot'", "AWS::RDS::DBSnapshot", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RDS::DBSnapshot");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RDS::DBSubnetGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RDS::DBSubnetGroup'", "AWS::RDS::DBSubnetGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RDS::DBSubnetGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RDS::EventSubscription".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RDS::EventSubscription'", "AWS::RDS::EventSubscription", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RDS::EventSubscription");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RDS::GlobalCluster".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RDS::GlobalCluster'", "AWS::RDS::GlobalCluster", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RDS::GlobalCluster");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RDS::OptionGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RDS::OptionGroup'", "AWS::RDS::OptionGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RDS::OptionGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RUM::AppMonitor".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RUM::AppMonitor'", "AWS::RUM::AppMonitor", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RUM::AppMonitor");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Redshift::Cluster".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Redshift::Cluster'", "AWS::Redshift::Cluster", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Redshift::Cluster");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Redshift::ClusterParameterGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Redshift::ClusterParameterGroup'", "AWS::Redshift::ClusterParameterGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Redshift::ClusterParameterGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Redshift::ClusterSecurityGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Redshift::ClusterSecurityGroup'", "AWS::Redshift::ClusterSecurityGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Redshift::ClusterSecurityGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Redshift::ClusterSnapshot".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Redshift::ClusterSnapshot'", "AWS::Redshift::ClusterSnapshot", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Redshift::ClusterSnapshot");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Redshift::ClusterSubnetGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Redshift::ClusterSubnetGroup'", "AWS::Redshift::ClusterSubnetGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Redshift::ClusterSubnetGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Redshift::EndpointAccess".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Redshift::EndpointAccess'", "AWS::Redshift::EndpointAccess", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Redshift::EndpointAccess");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Redshift::EventSubscription".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Redshift::EventSubscription'", "AWS::Redshift::EventSubscription", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Redshift::EventSubscription");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Redshift::ScheduledAction".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Redshift::ScheduledAction'", "AWS::Redshift::ScheduledAction", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Redshift::ScheduledAction");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ResilienceHub::App".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ResilienceHub::App'", "AWS::ResilienceHub::App", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ResilienceHub::App");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ResilienceHub::ResiliencyPolicy".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ResilienceHub::ResiliencyPolicy'", "AWS::ResilienceHub::ResiliencyPolicy", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ResilienceHub::ResiliencyPolicy");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ResourceExplorer2::Index".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ResourceExplorer2::Index'", "AWS::ResourceExplorer2::Index", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ResourceExplorer2::Index");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RoboMaker::RobotApplication".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RoboMaker::RobotApplication'", "AWS::RoboMaker::RobotApplication", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RoboMaker::RobotApplication");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RoboMaker::RobotApplicationVersion".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RoboMaker::RobotApplicationVersion'", "AWS::RoboMaker::RobotApplicationVersion", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RoboMaker::RobotApplicationVersion");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::RoboMaker::SimulationApplication".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::RoboMaker::SimulationApplication'", "AWS::RoboMaker::SimulationApplication", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::RoboMaker::SimulationApplication");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53::HostedZone".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53::HostedZone'", "AWS::Route53::HostedZone", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53::HostedZone");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53RecoveryControl::Cluster".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53RecoveryControl::Cluster'", "AWS::Route53RecoveryControl::Cluster", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53RecoveryControl::Cluster");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53RecoveryControl::ControlPanel".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53RecoveryControl::ControlPanel'", "AWS::Route53RecoveryControl::ControlPanel", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53RecoveryControl::ControlPanel");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53RecoveryControl::RoutingControl".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53RecoveryControl::RoutingControl'", "AWS::Route53RecoveryControl::RoutingControl", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53RecoveryControl::RoutingControl");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53RecoveryControl::SafetyRule".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53RecoveryControl::SafetyRule'", "AWS::Route53RecoveryControl::SafetyRule", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53RecoveryControl::SafetyRule");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53RecoveryReadiness::Cell".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53RecoveryReadiness::Cell'", "AWS::Route53RecoveryReadiness::Cell", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53RecoveryReadiness::Cell");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53RecoveryReadiness::ReadinessCheck".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53RecoveryReadiness::ReadinessCheck'", "AWS::Route53RecoveryReadiness::ReadinessCheck", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53RecoveryReadiness::ReadinessCheck");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53RecoveryReadiness::RecoveryGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53RecoveryReadiness::RecoveryGroup'", "AWS::Route53RecoveryReadiness::RecoveryGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53RecoveryReadiness::RecoveryGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53RecoveryReadiness::ResourceSet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53RecoveryReadiness::ResourceSet'", "AWS::Route53RecoveryReadiness::ResourceSet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53RecoveryReadiness::ResourceSet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53Resolver::FirewallDomainList".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53Resolver::FirewallDomainList'", "AWS::Route53Resolver::FirewallDomainList", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53Resolver::FirewallDomainList");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53Resolver::FirewallRuleGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53Resolver::FirewallRuleGroup'", "AWS::Route53Resolver::FirewallRuleGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53Resolver::FirewallRuleGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53Resolver::FirewallRuleGroupAssociation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53Resolver::FirewallRuleGroupAssociation'", "AWS::Route53Resolver::FirewallRuleGroupAssociation", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53Resolver::FirewallRuleGroupAssociation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53Resolver::ResolverEndpoint".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53Resolver::ResolverEndpoint'", "AWS::Route53Resolver::ResolverEndpoint", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53Resolver::ResolverEndpoint");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53Resolver::ResolverQueryLoggingConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53Resolver::ResolverQueryLoggingConfig'", "AWS::Route53Resolver::ResolverQueryLoggingConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53Resolver::ResolverQueryLoggingConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation'", "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53Resolver::ResolverRule".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53Resolver::ResolverRule'", "AWS::Route53Resolver::ResolverRule", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53Resolver::ResolverRule");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Route53Resolver::ResolverRuleAssociation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Route53Resolver::ResolverRuleAssociation'", "AWS::Route53Resolver::ResolverRuleAssociation", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Route53Resolver::ResolverRuleAssociation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::S3::AccessPoint".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::S3::AccessPoint'", "AWS::S3::AccessPoint", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::S3::AccessPoint");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::S3::AccountPublicAccessBlock".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::S3::AccountPublicAccessBlock'", "AWS::S3::AccountPublicAccessBlock", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::S3::AccountPublicAccessBlock");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::S3::Bucket".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::S3::Bucket'", "AWS::S3::Bucket", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::S3::Bucket");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::S3::MultiRegionAccessPoint".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::S3::MultiRegionAccessPoint'", "AWS::S3::MultiRegionAccessPoint", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::S3::MultiRegionAccessPoint");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::S3::StorageLens".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::S3::StorageLens'", "AWS::S3::StorageLens", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::S3::StorageLens");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SES::ConfigurationSet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SES::ConfigurationSet'", "AWS::SES::ConfigurationSet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SES::ConfigurationSet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SES::ContactList".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SES::ContactList'", "AWS::SES::ContactList", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SES::ContactList");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SES::ReceiptFilter".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SES::ReceiptFilter'", "AWS::SES::ReceiptFilter", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SES::ReceiptFilter");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SES::ReceiptRuleSet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SES::ReceiptRuleSet'", "AWS::SES::ReceiptRuleSet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SES::ReceiptRuleSet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SES::Template".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SES::Template'", "AWS::SES::Template", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SES::Template");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SNS::Topic".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SNS::Topic'", "AWS::SNS::Topic", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SNS::Topic");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SQS::Queue".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SQS::Queue'", "AWS::SQS::Queue", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SQS::Queue");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SSM::AssociationCompliance".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SSM::AssociationCompliance'", "AWS::SSM::AssociationCompliance", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SSM::AssociationCompliance");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SSM::Document".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SSM::Document'", "AWS::SSM::Document", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SSM::Document");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SSM::FileData".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SSM::FileData'", "AWS::SSM::FileData", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SSM::FileData");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SSM::ManagedInstanceInventory".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SSM::ManagedInstanceInventory'", "AWS::SSM::ManagedInstanceInventory", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SSM::ManagedInstanceInventory");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SSM::PatchCompliance".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SSM::PatchCompliance'", "AWS::SSM::PatchCompliance", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SSM::PatchCompliance");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SageMaker::AppImageConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SageMaker::AppImageConfig'", "AWS::SageMaker::AppImageConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SageMaker::AppImageConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SageMaker::CodeRepository".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SageMaker::CodeRepository'", "AWS::SageMaker::CodeRepository", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SageMaker::CodeRepository");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SageMaker::Domain".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SageMaker::Domain'", "AWS::SageMaker::Domain", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SageMaker::Domain");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SageMaker::FeatureGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SageMaker::FeatureGroup'", "AWS::SageMaker::FeatureGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SageMaker::FeatureGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SageMaker::Image".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SageMaker::Image'", "AWS::SageMaker::Image", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SageMaker::Image");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SageMaker::Model".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SageMaker::Model'", "AWS::SageMaker::Model", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SageMaker::Model");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SageMaker::NotebookInstanceLifecycleConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SageMaker::NotebookInstanceLifecycleConfig'", "AWS::SageMaker::NotebookInstanceLifecycleConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SageMaker::NotebookInstanceLifecycleConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SageMaker::Workteam".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SageMaker::Workteam'", "AWS::SageMaker::Workteam", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SageMaker::Workteam");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::SecretsManager::Secret".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::SecretsManager::Secret'", "AWS::SecretsManager::Secret", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::SecretsManager::Secret");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ServiceCatalog::CloudFormationProduct".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ServiceCatalog::CloudFormationProduct'", "AWS::ServiceCatalog::CloudFormationProduct", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ServiceCatalog::CloudFormationProduct");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ServiceCatalog::CloudFormationProvisionedProduct".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ServiceCatalog::CloudFormationProvisionedProduct'", "AWS::ServiceCatalog::CloudFormationProvisionedProduct", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ServiceCatalog::CloudFormationProvisionedProduct");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ServiceCatalog::Portfolio".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ServiceCatalog::Portfolio'", "AWS::ServiceCatalog::Portfolio", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ServiceCatalog::Portfolio");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ServiceDiscovery::HttpNamespace".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ServiceDiscovery::HttpNamespace'", "AWS::ServiceDiscovery::HttpNamespace", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ServiceDiscovery::HttpNamespace");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ServiceDiscovery::Instance".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ServiceDiscovery::Instance'", "AWS::ServiceDiscovery::Instance", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ServiceDiscovery::Instance");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ServiceDiscovery::PublicDnsNamespace".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ServiceDiscovery::PublicDnsNamespace'", "AWS::ServiceDiscovery::PublicDnsNamespace", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ServiceDiscovery::PublicDnsNamespace");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ServiceDiscovery::Service".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ServiceDiscovery::Service'", "AWS::ServiceDiscovery::Service", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ServiceDiscovery::Service");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Shield::Protection".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Shield::Protection'", "AWS::Shield::Protection", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Shield::Protection");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::ShieldRegional::Protection".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::ShieldRegional::Protection'", "AWS::ShieldRegional::Protection", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::ShieldRegional::Protection");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Signer::SigningProfile".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Signer::SigningProfile'", "AWS::Signer::SigningProfile", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Signer::SigningProfile");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::StepFunctions::Activity".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::StepFunctions::Activity'", "AWS::StepFunctions::Activity", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::StepFunctions::Activity");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::StepFunctions::StateMachine".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::StepFunctions::StateMachine'", "AWS::StepFunctions::StateMachine", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::StepFunctions::StateMachine");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Transfer::Agreement".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Transfer::Agreement'", "AWS::Transfer::Agreement", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Transfer::Agreement");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Transfer::Certificate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Transfer::Certificate'", "AWS::Transfer::Certificate", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Transfer::Certificate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Transfer::Connector".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Transfer::Connector'", "AWS::Transfer::Connector", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Transfer::Connector");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::Transfer::Workflow".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::Transfer::Workflow'", "AWS::Transfer::Workflow", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::Transfer::Workflow");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAF::RateBasedRule".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAF::RateBasedRule'", "AWS::WAF::RateBasedRule", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAF::RateBasedRule");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAF::Rule".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAF::Rule'", "AWS::WAF::Rule", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAF::Rule");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAF::RuleGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAF::RuleGroup'", "AWS::WAF::RuleGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAF::RuleGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAF::WebACL".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAF::WebACL'", "AWS::WAF::WebACL", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAF::WebACL");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAFRegional::RateBasedRule".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAFRegional::RateBasedRule'", "AWS::WAFRegional::RateBasedRule", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAFRegional::RateBasedRule");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAFRegional::Rule".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAFRegional::Rule'", "AWS::WAFRegional::Rule", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAFRegional::Rule");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAFRegional::RuleGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAFRegional::RuleGroup'", "AWS::WAFRegional::RuleGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAFRegional::RuleGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAFRegional::WebACL".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAFRegional::WebACL'", "AWS::WAFRegional::WebACL", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAFRegional::WebACL");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAFv2::IPSet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAFv2::IPSet'", "AWS::WAFv2::IPSet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAFv2::IPSet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAFv2::ManagedRuleSet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAFv2::ManagedRuleSet'", "AWS::WAFv2::ManagedRuleSet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAFv2::ManagedRuleSet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAFv2::RegexPatternSet".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAFv2::RegexPatternSet'", "AWS::WAFv2::RegexPatternSet", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAFv2::RegexPatternSet");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAFv2::RuleGroup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAFv2::RuleGroup'", "AWS::WAFv2::RuleGroup", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAFv2::RuleGroup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WAFv2::WebACL".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WAFv2::WebACL'", "AWS::WAFv2::WebACL", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WAFv2::WebACL");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WorkSpaces::ConnectionAlias".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WorkSpaces::ConnectionAlias'", "AWS::WorkSpaces::ConnectionAlias", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WorkSpaces::ConnectionAlias");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::WorkSpaces::Workspace".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::WorkSpaces::Workspace'", "AWS::WorkSpaces::Workspace", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::WorkSpaces::Workspace");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AWS::XRay::EncryptionConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AWS::XRay::EncryptionConfig'", "AWS::XRay::EncryptionConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "AWS::XRay::EncryptionConfig");
            }
        }
    }
}