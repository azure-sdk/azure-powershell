// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support
{

    /// <summary>HeaderProtocol enum</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.HeaderProtocolTypeConverter))]
    public partial struct HeaderProtocol :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DCERPC".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DCERPC'", "DCERPC", global::System.Management.Automation.CompletionResultType.ParameterValue, "DCERPC");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DHCP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DHCP'", "DHCP", global::System.Management.Automation.CompletionResultType.ParameterValue, "DHCP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DNS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DNS'", "DNS", global::System.Management.Automation.CompletionResultType.ParameterValue, "DNS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "FTP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'FTP'", "FTP", global::System.Management.Automation.CompletionResultType.ParameterValue, "FTP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HTTP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HTTP'", "HTTP", global::System.Management.Automation.CompletionResultType.ParameterValue, "HTTP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ICMP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ICMP'", "ICMP", global::System.Management.Automation.CompletionResultType.ParameterValue, "ICMP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IKEV2".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IKEV2'", "IKEV2", global::System.Management.Automation.CompletionResultType.ParameterValue, "IKEV2");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IMAP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IMAP'", "IMAP", global::System.Management.Automation.CompletionResultType.ParameterValue, "IMAP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IP'", "IP", global::System.Management.Automation.CompletionResultType.ParameterValue, "IP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "KRB5".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'KRB5'", "KRB5", global::System.Management.Automation.CompletionResultType.ParameterValue, "KRB5");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MSN".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MSN'", "MSN", global::System.Management.Automation.CompletionResultType.ParameterValue, "MSN");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "NTP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'NTP'", "NTP", global::System.Management.Automation.CompletionResultType.ParameterValue, "NTP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "SMB".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'SMB'", "SMB", global::System.Management.Automation.CompletionResultType.ParameterValue, "SMB");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "SMTP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'SMTP'", "SMTP", global::System.Management.Automation.CompletionResultType.ParameterValue, "SMTP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "SSH".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'SSH'", "SSH", global::System.Management.Automation.CompletionResultType.ParameterValue, "SSH");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TCP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TCP'", "TCP", global::System.Management.Automation.CompletionResultType.ParameterValue, "TCP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TFTP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TFTP'", "TFTP", global::System.Management.Automation.CompletionResultType.ParameterValue, "TFTP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TLS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TLS'", "TLS", global::System.Management.Automation.CompletionResultType.ParameterValue, "TLS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UDP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UDP'", "UDP", global::System.Management.Automation.CompletionResultType.ParameterValue, "UDP");
            }
        }
    }
}