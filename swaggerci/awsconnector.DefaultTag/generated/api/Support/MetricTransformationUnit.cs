// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support
{

    /// <summary>MetricTransformationUnit enum</summary>
    public partial struct MetricTransformationUnit :
        System.IEquatable<MetricTransformationUnit>
    {
        /// <summary>MetricTransformationUnit enum Bits</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Bits = @"Bits";

        /// <summary>MetricTransformationUnit enum Bits/Second</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit BitsSecond = @"Bits/Second";

        /// <summary>MetricTransformationUnit enum Bytes</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Bytes = @"Bytes";

        /// <summary>MetricTransformationUnit enum Bytes/Second</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit BytesSecond = @"Bytes/Second";

        /// <summary>MetricTransformationUnit enum Count</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Count = @"Count";

        /// <summary>MetricTransformationUnit enum Count/Second</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit CountSecond = @"Count/Second";

        /// <summary>MetricTransformationUnit enum Gigabits</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Gigabits = @"Gigabits";

        /// <summary>MetricTransformationUnit enum Gigabits/Second</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit GigabitsSecond = @"Gigabits/Second";

        /// <summary>MetricTransformationUnit enum Gigabytes</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Gigabytes = @"Gigabytes";

        /// <summary>MetricTransformationUnit enum Gigabytes/Second</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit GigabytesSecond = @"Gigabytes/Second";

        /// <summary>MetricTransformationUnit enum Kilobits</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Kilobits = @"Kilobits";

        /// <summary>MetricTransformationUnit enum Kilobits/Second</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit KilobitsSecond = @"Kilobits/Second";

        /// <summary>MetricTransformationUnit enum Kilobytes</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Kilobytes = @"Kilobytes";

        /// <summary>MetricTransformationUnit enum Kilobytes/Second</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit KilobytesSecond = @"Kilobytes/Second";

        /// <summary>MetricTransformationUnit enum Megabits</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Megabits = @"Megabits";

        /// <summary>MetricTransformationUnit enum Megabits/Second</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit MegabitsSecond = @"Megabits/Second";

        /// <summary>MetricTransformationUnit enum Megabytes</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Megabytes = @"Megabytes";

        /// <summary>MetricTransformationUnit enum Megabytes/Second</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit MegabytesSecond = @"Megabytes/Second";

        /// <summary>MetricTransformationUnit enum Microseconds</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Microseconds = @"Microseconds";

        /// <summary>MetricTransformationUnit enum Milliseconds</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Milliseconds = @"Milliseconds";

        /// <summary>MetricTransformationUnit enum None</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit None = @"None";

        /// <summary>MetricTransformationUnit enum Percent</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Percent = @"Percent";

        /// <summary>MetricTransformationUnit enum Seconds</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Seconds = @"Seconds";

        /// <summary>MetricTransformationUnit enum Terabits</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Terabits = @"Terabits";

        /// <summary>MetricTransformationUnit enum Terabits/Second</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit TerabitsSecond = @"Terabits/Second";

        /// <summary>MetricTransformationUnit enum Terabytes</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit Terabytes = @"Terabytes";

        /// <summary>MetricTransformationUnit enum Terabytes/Second</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit TerabytesSecond = @"Terabytes/Second";

        /// <summary>the value for an instance of the <see cref="MetricTransformationUnit" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to MetricTransformationUnit</summary>
        /// <param name="value">the value to convert to an instance of <see cref="MetricTransformationUnit" />.</param>
        internal static object CreateFrom(object value)
        {
            return new MetricTransformationUnit(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type MetricTransformationUnit</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type MetricTransformationUnit (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is MetricTransformationUnit && Equals((MetricTransformationUnit)obj);
        }

        /// <summary>Returns hashCode for enum MetricTransformationUnit</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="MetricTransformationUnit"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private MetricTransformationUnit(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for MetricTransformationUnit</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to MetricTransformationUnit</summary>
        /// <param name="value">the value to convert to an instance of <see cref="MetricTransformationUnit" />.</param>

        public static implicit operator MetricTransformationUnit(string value)
        {
            return new MetricTransformationUnit(value);
        }

        /// <summary>Implicit operator to convert MetricTransformationUnit to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="MetricTransformationUnit" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum MetricTransformationUnit</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit e1, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum MetricTransformationUnit</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit e1, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.MetricTransformationUnit e2)
        {
            return e2.Equals(e1);
        }
    }
}