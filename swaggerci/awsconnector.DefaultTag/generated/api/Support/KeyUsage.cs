// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support
{

    /// <summary>
    /// Determines the [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations)
    /// for which you can use the KMS key. The default value is ``ENCRYPT_DECRYPT``. This property is required for asymmetric
    /// KMS keys and HMAC KMS keys. You can't change the ``KeyUsage`` value after the KMS key is created. If you change the value
    /// of the ``KeyUsage`` property on an existing KMS key, the update request fails, regardless of the value of the [UpdateReplacePolicy
    /// attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html). This
    /// prevents you from accidentally deleting a KMS key by changing an immutable property value. Select only one valid value.
    /// + For symmetric encryption KMS keys, omit the property or specify ``ENCRYPT_DECRYPT``. + For asymmetric KMS keys with
    /// RSA key material, specify ``ENCRYPT_DECRYPT`` or ``SIGN_VERIFY``. + For asymmetric KMS keys with ECC key material, specify
    /// ``SIGN_VERIFY``. + For asymmetric KMS keys with SM2 (China Regions only) key material, specify ``ENCRYPT_DECRYPT`` or
    /// ``SIGN_VERIFY``. + For HMAC KMS keys, specify ``GENERATE_VERIFY_MAC``.
    /// </summary>
    public partial struct KeyUsage :
        System.IEquatable<KeyUsage>
    {
        /// <summary>KeyUsage enum ENCRYPT_DECRYPT</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage EncryptDecrypt = @"ENCRYPT_DECRYPT";

        /// <summary>KeyUsage enum GENERATE_VERIFY_MAC</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage GenerateVerifyMac = @"GENERATE_VERIFY_MAC";

        /// <summary>KeyUsage enum SIGN_VERIFY</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage SignVerify = @"SIGN_VERIFY";

        /// <summary>the value for an instance of the <see cref="KeyUsage" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to KeyUsage</summary>
        /// <param name="value">the value to convert to an instance of <see cref="KeyUsage" />.</param>
        internal static object CreateFrom(object value)
        {
            return new KeyUsage(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type KeyUsage</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type KeyUsage (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is KeyUsage && Equals((KeyUsage)obj);
        }

        /// <summary>Returns hashCode for enum KeyUsage</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="KeyUsage"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private KeyUsage(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for KeyUsage</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to KeyUsage</summary>
        /// <param name="value">the value to convert to an instance of <see cref="KeyUsage" />.</param>

        public static implicit operator KeyUsage(string value)
        {
            return new KeyUsage(value);
        }

        /// <summary>Implicit operator to convert KeyUsage to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="KeyUsage" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum KeyUsage</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage e1, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum KeyUsage</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage e1, Microsoft.Azure.PowerShell.Cmdlets.AwsConnector.Support.KeyUsage e2)
        {
            return e2.Equals(e1);
        }
    }
}