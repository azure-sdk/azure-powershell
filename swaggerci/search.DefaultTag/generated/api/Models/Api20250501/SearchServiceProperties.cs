// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Extensions;

    /// <summary>Properties of the search service.</summary>
    public partial class SearchServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal
    {

        /// <summary>
        /// Describes what response the data plane API of a search service would send for requests that failed authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.AadAuthFailureMode? AadOrApiKeyAadAuthFailureMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptionsInternal)AuthOption).AadOrApiKeyAadAuthFailureMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptionsInternal)AuthOption).AadOrApiKeyAadAuthFailureMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.AadAuthFailureMode)""); }

        /// <summary>Backing field for <see cref="AuthOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptions _authOption;

        /// <summary>
        /// Defines the options for how the data plane API of a search service authenticates requests. This cannot be set if 'disableLocalAuth'
        /// is set to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptions AuthOption { get => (this._authOption = this._authOption ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.DataPlaneAuthOptions()); set => this._authOption = value; }

        /// <summary>Indicates that only the API key can be used for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.IAny AuthOptionApiKeyOnly { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptionsInternal)AuthOption).ApiKeyOnly; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptionsInternal)AuthOption).ApiKeyOnly = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="DisableLocalAuth" /> property.</summary>
        private bool? _disableLocalAuth;

        /// <summary>
        /// When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot
        /// be set to true if 'dataPlaneAuthOptions' are defined.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public bool? DisableLocalAuth { get => this._disableLocalAuth; set => this._disableLocalAuth = value; }

        /// <summary>Backing field for <see cref="EncryptionWithCmk" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IEncryptionWithCmk _encryptionWithCmk;

        /// <summary>
        /// Specifies any policy regarding encryption of resources (such as indexes) using customer manager keys within a search service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IEncryptionWithCmk EncryptionWithCmk { get => (this._encryptionWithCmk = this._encryptionWithCmk ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.EncryptionWithCmk()); set => this._encryptionWithCmk = value; }

        /// <summary>
        /// Describes whether the search service is compliant or not with respect to having non-customer-encrypted resources. If a
        /// service has more than one non-customer-encrypted resource and 'Enforcement' is 'enabled' then the service will be marked
        /// as 'nonCompliant'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? EncryptionWithCmkEncryptionComplianceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IEncryptionWithCmkInternal)EncryptionWithCmk).EncryptionComplianceStatus; }

        /// <summary>
        /// Describes how a search service should enforce having one or more non-customer-encrypted resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk? EncryptionWithCmkEnforcement { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IEncryptionWithCmkInternal)EncryptionWithCmk).Enforcement; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IEncryptionWithCmkInternal)EncryptionWithCmk).Enforcement = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk)""); }

        /// <summary>Backing field for <see cref="HostingMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? _hostingMode;

        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get => this._hostingMode; set => this._hostingMode = value; }

        /// <summary>Internal Acessors for AuthOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptions Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.AuthOption { get => (this._authOption = this._authOption ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.DataPlaneAuthOptions()); set { {_authOption = value;} } }

        /// <summary>Internal Acessors for AuthOptionAadOrApiKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAadOrApiKeyAuthOption Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.AuthOptionAadOrApiKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptionsInternal)AuthOption).AadOrApiKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptionsInternal)AuthOption).AadOrApiKey = value; }

        /// <summary>Internal Acessors for EncryptionWithCmk</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IEncryptionWithCmk Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.EncryptionWithCmk { get => (this._encryptionWithCmk = this._encryptionWithCmk ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.EncryptionWithCmk()); set { {_encryptionWithCmk = value;} } }

        /// <summary>Internal Acessors for EncryptionWithCmkEncryptionComplianceStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.EncryptionWithCmkEncryptionComplianceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IEncryptionWithCmkInternal)EncryptionWithCmk).EncryptionComplianceStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IEncryptionWithCmkInternal)EncryptionWithCmk).EncryptionComplianceStatus = value; }

        /// <summary>Internal Acessors for NetworkRuleSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.INetworkRuleSet Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.NetworkRuleSet { get => (this._networkRuleSet = this._networkRuleSet ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.NetworkRuleSet()); set { {_networkRuleSet = value;} } }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ServiceUpgradeDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.ServiceUpgradeDate { get => this._serviceUpgradeDate; set { {_serviceUpgradeDate = value;} } }

        /// <summary>Internal Acessors for SharedPrivateLinkResource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISharedPrivateLinkResource[] Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.SharedPrivateLinkResource { get => this._sharedPrivateLinkResource; set { {_sharedPrivateLinkResource = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for StatusDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.StatusDetail { get => this._statusDetail; set { {_statusDetail = value;} } }

        /// <summary>Internal Acessors for UpgradeAvailable</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal.UpgradeAvailable { get => this._upgradeAvailable; set { {_upgradeAvailable = value;} } }

        /// <summary>Backing field for <see cref="NetworkRuleSet" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.INetworkRuleSet _networkRuleSet;

        /// <summary>Network-specific rules that determine how the search service may be reached.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.INetworkRuleSet NetworkRuleSet { get => (this._networkRuleSet = this._networkRuleSet ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.NetworkRuleSet()); set => this._networkRuleSet = value; }

        /// <summary>
        /// A list of IP restriction rules used for an IP firewall. Any IPs that do not match the rules are blocked by the firewall.
        /// These rules are only applied when the 'publicNetworkAccess' of the search service is 'enabled'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIPRule[] NetworkRuleSetIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.INetworkRuleSetInternal)NetworkRuleSet).IPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.INetworkRuleSetInternal)NetworkRuleSet).IPRule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="PartitionCount" /> property.</summary>
        private int? _partitionCount;

        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public int? PartitionCount { get => this._partitionCount; set => this._partitionCount = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IPrivateEndpointConnection[] _privateEndpointConnection;

        /// <summary>The list of private endpoint connections to the search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IPrivateEndpointConnection[] PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? _provisioningState;

        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded'
        /// or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? _publicNetworkAccess;

        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Backing field for <see cref="ReplicaCount" /> property.</summary>
        private int? _replicaCount;

        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public int? ReplicaCount { get => this._replicaCount; set => this._replicaCount = value; }

        /// <summary>Backing field for <see cref="SemanticSearch" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchSemanticSearch? _semanticSearch;

        /// <summary>
        /// Sets options that control the availability of semantic search. This configuration is only possible for certain search
        /// SKUs in certain locations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchSemanticSearch? SemanticSearch { get => this._semanticSearch; set => this._semanticSearch = value; }

        /// <summary>Backing field for <see cref="ServiceUpgradeDate" /> property.</summary>
        private global::System.DateTime? _serviceUpgradeDate;

        /// <summary>
        /// The date and time the search service was last upgraded. This field will be null until the service gets upgraded for the
        /// first time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public global::System.DateTime? ServiceUpgradeDate { get => this._serviceUpgradeDate; }

        /// <summary>Backing field for <see cref="SharedPrivateLinkResource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISharedPrivateLinkResource[] _sharedPrivateLinkResource;

        /// <summary>The list of shared private link resources managed by the search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get => this._sharedPrivateLinkResource; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? _status;

        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, Microsoft
        /// is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number
        /// of search units provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get => this._status; }

        /// <summary>Backing field for <see cref="StatusDetail" /> property.</summary>
        private string _statusDetail;

        /// <summary>The details of the search service status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public string StatusDetail { get => this._statusDetail; }

        /// <summary>Backing field for <see cref="UpgradeAvailable" /> property.</summary>
        private bool? _upgradeAvailable;

        /// <summary>Indicates whether or not the search service has an upgrade available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public bool? UpgradeAvailable { get => this._upgradeAvailable; }

        /// <summary>Creates an new <see cref="SearchServiceProperties" /> instance.</summary>
        public SearchServiceProperties()
        {

        }
    }
    /// Properties of the search service.
    public partial interface ISearchServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Describes what response the data plane API of a search service would send for requests that failed authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes what response the data plane API of a search service would send for requests that failed authentication.",
        SerializedName = @"aadAuthFailureMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.AadAuthFailureMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.AadAuthFailureMode? AadOrApiKeyAadAuthFailureMode { get; set; }
        /// <summary>Indicates that only the API key can be used for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates that only the API key can be used for authentication.",
        SerializedName = @"apiKeyOnly",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.IAny AuthOptionApiKeyOnly { get; set; }
        /// <summary>
        /// When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot
        /// be set to true if 'dataPlaneAuthOptions' are defined.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot be set to true if 'dataPlaneAuthOptions' are defined.",
        SerializedName = @"disableLocalAuth",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisableLocalAuth { get; set; }
        /// <summary>
        /// Describes whether the search service is compliant or not with respect to having non-customer-encrypted resources. If a
        /// service has more than one non-customer-encrypted resource and 'Enforcement' is 'enabled' then the service will be marked
        /// as 'nonCompliant'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Describes whether the search service is compliant or not with respect to having non-customer-encrypted resources. If a service has more than one non-customer-encrypted resource and 'Enforcement' is 'enabled' then the service will be marked as 'nonCompliant'.",
        SerializedName = @"encryptionComplianceStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? EncryptionWithCmkEncryptionComplianceStatus { get;  }
        /// <summary>
        /// Describes how a search service should enforce having one or more non-customer-encrypted resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes how a search service should enforce having one or more non-customer-encrypted resources.",
        SerializedName = @"enforcement",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk? EncryptionWithCmkEnforcement { get; set; }
        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.",
        SerializedName = @"hostingMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get; set; }
        /// <summary>
        /// A list of IP restriction rules used for an IP firewall. Any IPs that do not match the rules are blocked by the firewall.
        /// These rules are only applied when the 'publicNetworkAccess' of the search service is 'enabled'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of IP restriction rules used for an IP firewall. Any IPs that do not match the rules are blocked by the firewall. These rules are only applied when the 'publicNetworkAccess' of the search service is 'enabled'.",
        SerializedName = @"ipRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIPRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.",
        SerializedName = @"partitionCount",
        PossibleTypes = new [] { typeof(int) })]
        int? PartitionCount { get; set; }
        /// <summary>The list of private endpoint connections to the search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of private endpoint connections to the search service.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded'
        /// or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the free service uses capacity that is already set up.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.",
        SerializedName = @"replicaCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ReplicaCount { get; set; }
        /// <summary>
        /// Sets options that control the availability of semantic search. This configuration is only possible for certain search
        /// SKUs in certain locations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets options that control the availability of semantic search. This configuration is only possible for certain search SKUs in certain locations.",
        SerializedName = @"semanticSearch",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchSemanticSearch) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchSemanticSearch? SemanticSearch { get; set; }
        /// <summary>
        /// The date and time the search service was last upgraded. This field will be null until the service gets upgraded for the
        /// first time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date and time the search service was last upgraded. This field will be null until the service gets upgraded for the first time.",
        SerializedName = @"serviceUpgradeDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ServiceUpgradeDate { get;  }
        /// <summary>The list of shared private link resources managed by the search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of shared private link resources managed by the search service.",
        SerializedName = @"sharedPrivateLinkResources",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISharedPrivateLinkResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get;  }
        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, Microsoft
        /// is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number
        /// of search units provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the search service. Possible values include: 'running': The search service is running and no provisioning operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search units are not healthy. The search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests. 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, Microsoft is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get;  }
        /// <summary>The details of the search service status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The details of the search service status.",
        SerializedName = @"statusDetails",
        PossibleTypes = new [] { typeof(string) })]
        string StatusDetail { get;  }
        /// <summary>Indicates whether or not the search service has an upgrade available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates whether or not the search service has an upgrade available.",
        SerializedName = @"upgradeAvailable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UpgradeAvailable { get;  }

    }
    /// Properties of the search service.
    internal partial interface ISearchServicePropertiesInternal

    {
        /// <summary>
        /// Describes what response the data plane API of a search service would send for requests that failed authentication.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.AadAuthFailureMode? AadOrApiKeyAadAuthFailureMode { get; set; }
        /// <summary>
        /// Defines the options for how the data plane API of a search service authenticates requests. This cannot be set if 'disableLocalAuth'
        /// is set to true.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptions AuthOption { get; set; }
        /// <summary>
        /// Indicates that either the API key or an access token from a Microsoft Entra ID tenant can be used for authentication.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAadOrApiKeyAuthOption AuthOptionAadOrApiKey { get; set; }
        /// <summary>Indicates that only the API key can be used for authentication.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.IAny AuthOptionApiKeyOnly { get; set; }
        /// <summary>
        /// When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot
        /// be set to true if 'dataPlaneAuthOptions' are defined.
        /// </summary>
        bool? DisableLocalAuth { get; set; }
        /// <summary>
        /// Specifies any policy regarding encryption of resources (such as indexes) using customer manager keys within a search service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IEncryptionWithCmk EncryptionWithCmk { get; set; }
        /// <summary>
        /// Describes whether the search service is compliant or not with respect to having non-customer-encrypted resources. If a
        /// service has more than one non-customer-encrypted resource and 'Enforcement' is 'enabled' then the service will be marked
        /// as 'nonCompliant'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? EncryptionWithCmkEncryptionComplianceStatus { get; set; }
        /// <summary>
        /// Describes how a search service should enforce having one or more non-customer-encrypted resources.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk? EncryptionWithCmkEnforcement { get; set; }
        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get; set; }
        /// <summary>Network-specific rules that determine how the search service may be reached.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.INetworkRuleSet NetworkRuleSet { get; set; }
        /// <summary>
        /// A list of IP restriction rules used for an IP firewall. Any IPs that do not match the rules are blocked by the firewall.
        /// These rules are only applied when the 'publicNetworkAccess' of the search service is 'enabled'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        int? PartitionCount { get; set; }
        /// <summary>The list of private endpoint connections to the search service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded'
        /// or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        int? ReplicaCount { get; set; }
        /// <summary>
        /// Sets options that control the availability of semantic search. This configuration is only possible for certain search
        /// SKUs in certain locations.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchSemanticSearch? SemanticSearch { get; set; }
        /// <summary>
        /// The date and time the search service was last upgraded. This field will be null until the service gets upgraded for the
        /// first time.
        /// </summary>
        global::System.DateTime? ServiceUpgradeDate { get; set; }
        /// <summary>The list of shared private link resources managed by the search service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get; set; }
        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, Microsoft
        /// is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number
        /// of search units provisioned.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get; set; }
        /// <summary>The details of the search service status.</summary>
        string StatusDetail { get; set; }
        /// <summary>Indicates whether or not the search service has an upgrade available.</summary>
        bool? UpgradeAvailable { get; set; }

    }
}