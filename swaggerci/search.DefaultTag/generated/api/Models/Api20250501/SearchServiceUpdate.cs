// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Extensions;

    /// <summary>The parameters used to update an Azure AI Search service.</summary>
    public partial class SearchServiceUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.Resource();

        /// <summary>
        /// Describes what response the data plane API of a search service would send for requests that failed authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.AadAuthFailureMode? AadOrApiKeyAadAuthFailureMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).AadOrApiKeyAadAuthFailureMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).AadOrApiKeyAadAuthFailureMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.AadAuthFailureMode)""); }

        /// <summary>Indicates that only the API key can be used for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.IAny AuthOptionApiKeyOnly { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).AuthOptionApiKeyOnly; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).AuthOptionApiKeyOnly = value ?? null /* model class */; }

        /// <summary>
        /// Configure this property to support the search service using either the Default Compute or Azure Confidential Compute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ComputeType? ComputeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ComputeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ComputeType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ComputeType)""); }

        /// <summary>
        /// When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot
        /// be set to true if 'dataPlaneAuthOptions' are defined.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public bool? DisableLocalAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).DisableLocalAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).DisableLocalAuth = value ?? default(bool); }

        /// <summary>
        /// A list of data exfiltration scenarios that are explicitly disallowed for the search service. Currently, the only supported
        /// value is 'All' to disable all possible data export scenarios with more fine grained controls planned for the future.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchDisabledDataExfiltrationOption[] DisabledDataExfiltrationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).DisabledDataExfiltrationOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).DisabledDataExfiltrationOption = value ?? null /* arrayOf */; }

        /// <summary>
        /// A system generated property representing the service's etag that can be for optimistic concurrency control during updates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ETag; }

        /// <summary>
        /// Returns the status of search service compliance with respect to non-CMK-encrypted objects. If a service has more than
        /// one unencrypted object, and enforcement is enabled, the service is marked as noncompliant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? EncryptionWithCmkEncryptionComplianceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).EncryptionWithCmkEncryptionComplianceStatus; }

        /// <summary>
        /// Describes how a search service should enforce compliance if it finds objects that aren't encrypted with the customer-managed
        /// key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk? EncryptionWithCmkEnforcement { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).EncryptionWithCmkEnforcement; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).EncryptionWithCmkEnforcement = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk)""); }

        /// <summary>The endpoint of the Azure AI Search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public string Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).Endpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).Endpoint = value ?? null; }

        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).HostingMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).HostingMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode)""); }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentity _identity;

        /// <summary>
        /// Details about the search service identity. A null value indicates that the search service has no identity assigned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.Identity()); set => this._identity = value; }

        /// <summary>The principal ID of the system-assigned identity of the search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentityInternal)Identity).PrincipalId; }

        /// <summary>The tenant ID of the system-assigned identity of the search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created
        /// by the system and a set of user assigned identities. The type 'None' will remove all identities from the service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IdentityType)""); }

        /// <summary>
        /// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource
        /// IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IUserAssignedManagedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>
        /// The geographic location of the resource. This must be one of the supported and registered Azure geo regions (for example,
        /// West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for AuthOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptions Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.AuthOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).AuthOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).AuthOption = value; }

        /// <summary>Internal Acessors for AuthOptionAadOrApiKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAadOrApiKeyAuthOption Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.AuthOptionAadOrApiKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).AuthOptionAadOrApiKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).AuthOptionAadOrApiKey = value; }

        /// <summary>Internal Acessors for ETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ETag = value; }

        /// <summary>Internal Acessors for EncryptionWithCmk</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IEncryptionWithCmk Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.EncryptionWithCmk { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).EncryptionWithCmk; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).EncryptionWithCmk = value; }

        /// <summary>Internal Acessors for EncryptionWithCmkEncryptionComplianceStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.EncryptionWithCmkEncryptionComplianceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).EncryptionWithCmkEncryptionComplianceStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).EncryptionWithCmkEncryptionComplianceStatus = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentity Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.Identity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for NetworkRuleSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.INetworkRuleSet Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.NetworkRuleSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).NetworkRuleSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).NetworkRuleSet = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).PrivateEndpointConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).PrivateEndpointConnection = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceProperties Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.SearchServiceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ServiceUpgradedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.ServiceUpgradedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ServiceUpgradedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ServiceUpgradedAt = value; }

        /// <summary>Internal Acessors for SharedPrivateLinkResource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISharedPrivateLinkResource[] Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.SharedPrivateLinkResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).SharedPrivateLinkResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).SharedPrivateLinkResource = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISku Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for StatusDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateInternal.StatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).StatusDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).StatusDetail = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).Name; }

        /// <summary>
        /// Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchBypass? NetworkRuleSetBypass { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).NetworkRuleSetBypass; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).NetworkRuleSetBypass = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchBypass)""); }

        /// <summary>
        /// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint.
        /// At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when
        /// the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed
        /// even with any public IP rules, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIPRule[] NetworkRuleSetIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).NetworkRuleSetIPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).NetworkRuleSetIPRule = value ?? null /* arrayOf */; }

        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public int? PartitionCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).PartitionCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).PartitionCount = value ?? default(int); }

        /// <summary>The list of private endpoint connections to the Azure AI Search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IPrivateEndpointConnection[] PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).PrivateEndpointConnection; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceProperties _property;

        /// <summary>Properties of the search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.SearchServiceProperties()); set => this._property = value; }

        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'Succeeded'
        /// or 'Failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'Succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess)""); }

        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public int? ReplicaCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ReplicaCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ReplicaCount = value ?? default(int); }

        /// <summary>
        /// Sets options that control the availability of semantic search. This configuration is only possible for certain Azure AI
        /// Search SKUs in certain locations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchSemanticSearch? SemanticSearch { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).SemanticSearch; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).SemanticSearch = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchSemanticSearch)""); }

        /// <summary>
        /// The date and time the search service was last upgraded. This field will be null until the service gets upgraded for the
        /// first time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public global::System.DateTime? ServiceUpgradedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).ServiceUpgradedAt; }

        /// <summary>
        /// The list of shared private link resources managed by the Azure AI Search service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).SharedPrivateLinkResource; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISku _sku;

        /// <summary>
        /// The SKU of the search service, which determines price tier and capacity limits. This property is required when creating
        /// a new search service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.Sku()); set => this._sku = value; }

        /// <summary>
        /// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas.
        /// 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more
        /// capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to
        /// 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports
        /// 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISkuInternal)Sku).Name = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SkuName)""); }

        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. 'stopped': The search service is in a subscription that's disabled.
        /// If your service is in the degraded, disabled, or error states, it means the Azure AI Search team is actively investigating
        /// the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).Status; }

        /// <summary>The details of the search service status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public string StatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).StatusDetail; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.CreatedByType)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateTags _tag;

        /// <summary>Tags to help categorize the resource in the Azure portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.SearchServiceUpdateTags()); set => this._tag = value; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal)__resource).Type; }

        /// <summary>Indicates if the search service has an upgrade available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.UpgradeAvailable? UpgradeAvailable { get => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).UpgradeAvailable; set => ((Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServicePropertiesInternal)Property).UpgradeAvailable = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.UpgradeAvailable)""); }

        /// <summary>Creates an new <see cref="SearchServiceUpdate" /> instance.</summary>
        public SearchServiceUpdate()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The parameters used to update an Azure AI Search service.
    public partial interface ISearchServiceUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResource
    {
        /// <summary>
        /// Describes what response the data plane API of a search service would send for requests that failed authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes what response the data plane API of a search service would send for requests that failed authentication.",
        SerializedName = @"aadAuthFailureMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.AadAuthFailureMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.AadAuthFailureMode? AadOrApiKeyAadAuthFailureMode { get; set; }
        /// <summary>Indicates that only the API key can be used for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates that only the API key can be used for authentication.",
        SerializedName = @"apiKeyOnly",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.IAny AuthOptionApiKeyOnly { get; set; }
        /// <summary>
        /// Configure this property to support the search service using either the Default Compute or Azure Confidential Compute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configure this property to support the search service using either the Default Compute or Azure Confidential Compute.",
        SerializedName = @"computeType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ComputeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ComputeType? ComputeType { get; set; }
        /// <summary>
        /// When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot
        /// be set to true if 'dataPlaneAuthOptions' are defined.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot be set to true if 'dataPlaneAuthOptions' are defined.",
        SerializedName = @"disableLocalAuth",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisableLocalAuth { get; set; }
        /// <summary>
        /// A list of data exfiltration scenarios that are explicitly disallowed for the search service. Currently, the only supported
        /// value is 'All' to disable all possible data export scenarios with more fine grained controls planned for the future.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of data exfiltration scenarios that are explicitly disallowed for the search service. Currently, the only supported value is 'All' to disable all possible data export scenarios with more fine grained controls planned for the future.",
        SerializedName = @"disabledDataExfiltrationOptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchDisabledDataExfiltrationOption) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchDisabledDataExfiltrationOption[] DisabledDataExfiltrationOption { get; set; }
        /// <summary>
        /// A system generated property representing the service's etag that can be for optimistic concurrency control during updates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A system generated property representing the service's etag that can be for optimistic concurrency control during updates.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get;  }
        /// <summary>
        /// Returns the status of search service compliance with respect to non-CMK-encrypted objects. If a service has more than
        /// one unencrypted object, and enforcement is enabled, the service is marked as noncompliant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Returns the status of search service compliance with respect to non-CMK-encrypted objects. If a service has more than one unencrypted object, and enforcement is enabled, the service is marked as noncompliant.",
        SerializedName = @"encryptionComplianceStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? EncryptionWithCmkEncryptionComplianceStatus { get;  }
        /// <summary>
        /// Describes how a search service should enforce compliance if it finds objects that aren't encrypted with the customer-managed
        /// key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes how a search service should enforce compliance if it finds objects that aren't encrypted with the customer-managed key.",
        SerializedName = @"enforcement",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk? EncryptionWithCmkEnforcement { get; set; }
        /// <summary>The endpoint of the Azure AI Search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The endpoint of the Azure AI Search service.",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get; set; }
        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.",
        SerializedName = @"hostingMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get; set; }
        /// <summary>The principal ID of the system-assigned identity of the search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal ID of the system-assigned identity of the search service.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The tenant ID of the system-assigned identity of the search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of the system-assigned identity of the search service.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created
        /// by the system and a set of user assigned identities. The type 'None' will remove all identities from the service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created by the system and a set of user assigned identities. The type 'None' will remove all identities from the service.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource
        /// IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IUserAssignedManagedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IUserAssignedManagedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// The geographic location of the resource. This must be one of the supported and registered Azure geo regions (for example,
        /// West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The geographic location of the resource. This must be one of the supported and registered Azure geo regions (for example, West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>
        /// Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section.",
        SerializedName = @"bypass",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchBypass) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchBypass? NetworkRuleSetBypass { get; set; }
        /// <summary>
        /// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint.
        /// At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when
        /// the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed
        /// even with any public IP rules, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method.",
        SerializedName = @"ipRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIPRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.",
        SerializedName = @"partitionCount",
        PossibleTypes = new [] { typeof(int) })]
        int? PartitionCount { get; set; }
        /// <summary>The list of private endpoint connections to the Azure AI Search service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of private endpoint connections to the Azure AI Search service.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'Succeeded'
        /// or 'Failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'Succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'Succeeded' or 'Failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'Succeeded' directly in the call to Create search service. This is because the free service uses capacity that is already set up.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.",
        SerializedName = @"replicaCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ReplicaCount { get; set; }
        /// <summary>
        /// Sets options that control the availability of semantic search. This configuration is only possible for certain Azure AI
        /// Search SKUs in certain locations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets options that control the availability of semantic search. This configuration is only possible for certain Azure AI Search SKUs in certain locations.",
        SerializedName = @"semanticSearch",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchSemanticSearch) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchSemanticSearch? SemanticSearch { get; set; }
        /// <summary>
        /// The date and time the search service was last upgraded. This field will be null until the service gets upgraded for the
        /// first time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date and time the search service was last upgraded. This field will be null until the service gets upgraded for the first time.",
        SerializedName = @"serviceUpgradedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ServiceUpgradedAt { get;  }
        /// <summary>
        /// The list of shared private link resources managed by the Azure AI Search service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of shared private link resources managed by the Azure AI Search service.",
        SerializedName = @"sharedPrivateLinkResources",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISharedPrivateLinkResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get;  }
        /// <summary>
        /// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas.
        /// 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more
        /// capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to
        /// 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports
        /// 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SkuName? SkuName { get; set; }
        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. 'stopped': The search service is in a subscription that's disabled.
        /// If your service is in the degraded, disabled, or error states, it means the Azure AI Search team is actively investigating
        /// the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the search service. Possible values include: 'running': The search service is running and no provisioning operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search units are not healthy. The search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests. 'error': The search service is in an error state. 'stopped': The search service is in a subscription that's disabled. If your service is in the degraded, disabled, or error states, it means the Azure AI Search team is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get;  }
        /// <summary>The details of the search service status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The details of the search service status.",
        SerializedName = @"statusDetails",
        PossibleTypes = new [] { typeof(string) })]
        string StatusDetail { get;  }
        /// <summary>Tags to help categorize the resource in the Azure portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tags to help categorize the resource in the Azure portal.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateTags Tag { get; set; }
        /// <summary>Indicates if the search service has an upgrade available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if the search service has an upgrade available.",
        SerializedName = @"upgradeAvailable",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.UpgradeAvailable) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.UpgradeAvailable? UpgradeAvailable { get; set; }

    }
    /// The parameters used to update an Azure AI Search service.
    internal partial interface ISearchServiceUpdateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api60.IResourceInternal
    {
        /// <summary>
        /// Describes what response the data plane API of a search service would send for requests that failed authentication.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.AadAuthFailureMode? AadOrApiKeyAadAuthFailureMode { get; set; }
        /// <summary>
        /// Defines the options for how the data plane API of a search service authenticates requests. This cannot be set if 'disableLocalAuth'
        /// is set to true.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAuthOptions AuthOption { get; set; }
        /// <summary>
        /// Indicates that either the API key or an access token from a Microsoft Entra ID tenant can be used for authentication.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IDataPlaneAadOrApiKeyAuthOption AuthOptionAadOrApiKey { get; set; }
        /// <summary>Indicates that only the API key can be used for authentication.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.IAny AuthOptionApiKeyOnly { get; set; }
        /// <summary>
        /// Configure this property to support the search service using either the Default Compute or Azure Confidential Compute.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ComputeType? ComputeType { get; set; }
        /// <summary>
        /// When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot
        /// be set to true if 'dataPlaneAuthOptions' are defined.
        /// </summary>
        bool? DisableLocalAuth { get; set; }
        /// <summary>
        /// A list of data exfiltration scenarios that are explicitly disallowed for the search service. Currently, the only supported
        /// value is 'All' to disable all possible data export scenarios with more fine grained controls planned for the future.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchDisabledDataExfiltrationOption[] DisabledDataExfiltrationOption { get; set; }
        /// <summary>
        /// A system generated property representing the service's etag that can be for optimistic concurrency control during updates.
        /// </summary>
        string ETag { get; set; }
        /// <summary>
        /// Specifies any policy regarding encryption of resources (such as indexes) using customer manager keys within a search service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IEncryptionWithCmk EncryptionWithCmk { get; set; }
        /// <summary>
        /// Returns the status of search service compliance with respect to non-CMK-encrypted objects. If a service has more than
        /// one unencrypted object, and enforcement is enabled, the service is marked as noncompliant.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? EncryptionWithCmkEncryptionComplianceStatus { get; set; }
        /// <summary>
        /// Describes how a search service should enforce compliance if it finds objects that aren't encrypted with the customer-managed
        /// key.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk? EncryptionWithCmkEnforcement { get; set; }
        /// <summary>The endpoint of the Azure AI Search service.</summary>
        string Endpoint { get; set; }
        /// <summary>
        /// Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow
        /// up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the
        /// value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.HostingMode? HostingMode { get; set; }
        /// <summary>
        /// Details about the search service identity. A null value indicates that the search service has no identity assigned.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIdentity Identity { get; set; }
        /// <summary>The principal ID of the system-assigned identity of the search service.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of the system-assigned identity of the search service.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created
        /// by the system and a set of user assigned identities. The type 'None' will remove all identities from the service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource
        /// IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IUserAssignedManagedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// The geographic location of the resource. This must be one of the supported and registered Azure geo regions (for example,
        /// West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource.
        /// </summary>
        string Location { get; set; }
        /// <summary>
        /// Network specific rules that determine how the Azure AI Search service may be reached.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.INetworkRuleSet NetworkRuleSet { get; set; }
        /// <summary>
        /// Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchBypass? NetworkRuleSetBypass { get; set; }
        /// <summary>
        /// A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint.
        /// At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when
        /// the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed
        /// even with any public IP rules, and private endpoint connections would be the exclusive access method.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>
        /// The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are
        /// only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between
        /// 1 and 3.
        /// </summary>
        int? PartitionCount { get; set; }
        /// <summary>The list of private endpoint connections to the Azure AI Search service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>Properties of the search service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceProperties Property { get; set; }
        /// <summary>
        /// The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that
        /// occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'Succeeded'
        /// or 'Failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to
        /// one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free
        /// service, this value tends to come back as 'Succeeded' directly in the call to Create search service. This is because the
        /// free service uses capacity that is already set up.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled',
        /// traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard
        /// SKUs or between 1 and 3 inclusive for basic SKU.
        /// </summary>
        int? ReplicaCount { get; set; }
        /// <summary>
        /// Sets options that control the availability of semantic search. This configuration is only possible for certain Azure AI
        /// Search SKUs in certain locations.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchSemanticSearch? SemanticSearch { get; set; }
        /// <summary>
        /// The date and time the search service was last upgraded. This field will be null until the service gets upgraded for the
        /// first time.
        /// </summary>
        global::System.DateTime? ServiceUpgradedAt { get; set; }
        /// <summary>
        /// The list of shared private link resources managed by the Azure AI Search service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISharedPrivateLinkResource[] SharedPrivateLinkResource { get; set; }
        /// <summary>
        /// The SKU of the search service, which determines price tier and capacity limits. This property is required when creating
        /// a new search service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISku Sku { get; set; }
        /// <summary>
        /// The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas.
        /// 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more
        /// capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to
        /// 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports
        /// 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SkuName? SkuName { get; set; }
        /// <summary>
        /// The status of the search service. Possible values include: 'running': The search service is running and no provisioning
        /// operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The
        /// search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search
        /// units are not healthy. The search service is most likely operational, but performance might be slow and some requests
        /// might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests.
        /// 'error': The search service is in an error state. 'stopped': The search service is in a subscription that's disabled.
        /// If your service is in the degraded, disabled, or error states, it means the Azure AI Search team is actively investigating
        /// the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchServiceStatus? Status { get; set; }
        /// <summary>The details of the search service status.</summary>
        string StatusDetail { get; set; }
        /// <summary>Tags to help categorize the resource in the Azure portal.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250501.ISearchServiceUpdateTags Tag { get; set; }
        /// <summary>Indicates if the search service has an upgrade available.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.UpgradeAvailable? UpgradeAvailable { get; set; }

    }
}