// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20240601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Extensions;

    /// <summary>
    /// Describes a policy that determines how resources within the search service are to be encrypted with customer managed keys.
    /// </summary>
    public partial class EncryptionWithCmk :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20240601Preview.IEncryptionWithCmk,
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20240601Preview.IEncryptionWithCmkInternal
    {

        /// <summary>Backing field for <see cref="EncryptionComplianceStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? _encryptionComplianceStatus;

        /// <summary>
        /// Returns the status of search service compliance with respect to non-CMK-encrypted objects. If a service has more than
        /// one unencrypted object, and enforcement is enabled, the service is marked as noncompliant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? EncryptionComplianceStatus { get => this._encryptionComplianceStatus; }

        /// <summary>Backing field for <see cref="Enforcement" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk? _enforcement;

        /// <summary>
        /// Describes how a search service should enforce compliance if it finds objects that aren't encrypted with the customer-managed
        /// key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk? Enforcement { get => this._enforcement; set => this._enforcement = value; }

        /// <summary>Internal Acessors for EncryptionComplianceStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20240601Preview.IEncryptionWithCmkInternal.EncryptionComplianceStatus { get => this._encryptionComplianceStatus; set { {_encryptionComplianceStatus = value;} } }

        /// <summary>Creates an new <see cref="EncryptionWithCmk" /> instance.</summary>
        public EncryptionWithCmk()
        {

        }
    }
    /// Describes a policy that determines how resources within the search service are to be encrypted with customer managed keys.
    public partial interface IEncryptionWithCmk :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Returns the status of search service compliance with respect to non-CMK-encrypted objects. If a service has more than
        /// one unencrypted object, and enforcement is enabled, the service is marked as noncompliant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Returns the status of search service compliance with respect to non-CMK-encrypted objects. If a service has more than one unencrypted object, and enforcement is enabled, the service is marked as noncompliant.",
        SerializedName = @"encryptionComplianceStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? EncryptionComplianceStatus { get;  }
        /// <summary>
        /// Describes how a search service should enforce compliance if it finds objects that aren't encrypted with the customer-managed
        /// key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes how a search service should enforce compliance if it finds objects that aren't encrypted with the customer-managed key.",
        SerializedName = @"enforcement",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk? Enforcement { get; set; }

    }
    /// Describes a policy that determines how resources within the search service are to be encrypted with customer managed keys.
    internal partial interface IEncryptionWithCmkInternal

    {
        /// <summary>
        /// Returns the status of search service compliance with respect to non-CMK-encrypted objects. If a service has more than
        /// one unencrypted object, and enforcement is enabled, the service is marked as noncompliant.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionComplianceStatus? EncryptionComplianceStatus { get; set; }
        /// <summary>
        /// Describes how a search service should enforce compliance if it finds objects that aren't encrypted with the customer-managed
        /// key.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchEncryptionWithCmk? Enforcement { get; set; }

    }
}