// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Extensions;

    /// <summary>
    /// Details of a provisioning issue for a network security perimeter (NSP) configuration. Resource providers should generate
    /// separate provisioning issue elements for each separate issue detected, and include a meaningful and distinctive description,
    /// as well as any appropriate suggestedResourceIds and suggestedAccessRules
    /// </summary>
    public partial class ProvisioningIssueProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IProvisioningIssueProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IProvisioningIssuePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Description of the issue</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public string Description { get => this._description; }

        /// <summary>Backing field for <see cref="IssueType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType? _issueType;

        /// <summary>Type of issue</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType? IssueType { get => this._issueType; }

        /// <summary>Internal Acessors for Description</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IProvisioningIssuePropertiesInternal.Description { get => this._description; set { {_description = value;} } }

        /// <summary>Internal Acessors for IssueType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IProvisioningIssuePropertiesInternal.IssueType { get => this._issueType; set { {_issueType = value;} } }

        /// <summary>Internal Acessors for Severity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.Severity? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IProvisioningIssuePropertiesInternal.Severity { get => this._severity; set { {_severity = value;} } }

        /// <summary>Internal Acessors for SuggestedAccessRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IAccessRule[] Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IProvisioningIssuePropertiesInternal.SuggestedAccessRule { get => this._suggestedAccessRule; set { {_suggestedAccessRule = value;} } }

        /// <summary>Internal Acessors for SuggestedResourceId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IProvisioningIssuePropertiesInternal.SuggestedResourceId { get => this._suggestedResourceId; set { {_suggestedResourceId = value;} } }

        /// <summary>Backing field for <see cref="Severity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Support.Severity? _severity;

        /// <summary>Severity of the issue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Support.Severity? Severity { get => this._severity; }

        /// <summary>Backing field for <see cref="SuggestedAccessRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IAccessRule[] _suggestedAccessRule;

        /// <summary>
        /// Access rules that can be added to the network security profile (NSP) to remediate the issue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IAccessRule[] SuggestedAccessRule { get => this._suggestedAccessRule; }

        /// <summary>Backing field for <see cref="SuggestedResourceId" /> property.</summary>
        private string[] _suggestedResourceId;

        /// <summary>
        /// Fully qualified resource IDs of suggested resources that can be associated to the network security perimeter (NSP) to
        /// remediate the issue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Origin(Microsoft.Azure.PowerShell.Cmdlets.Search.PropertyOrigin.Owned)]
        public string[] SuggestedResourceId { get => this._suggestedResourceId; }

        /// <summary>Creates an new <see cref="ProvisioningIssueProperties" /> instance.</summary>
        public ProvisioningIssueProperties()
        {

        }
    }
    /// Details of a provisioning issue for a network security perimeter (NSP) configuration. Resource providers should generate
    /// separate provisioning issue elements for each separate issue detected, and include a meaningful and distinctive description,
    /// as well as any appropriate suggestedResourceIds and suggestedAccessRules
    public partial interface IProvisioningIssueProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.IJsonSerializable
    {
        /// <summary>Description of the issue</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Description of the issue",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get;  }
        /// <summary>Type of issue</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of issue",
        SerializedName = @"issueType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType? IssueType { get;  }
        /// <summary>Severity of the issue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Severity of the issue.",
        SerializedName = @"severity",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.Severity) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.Severity? Severity { get;  }
        /// <summary>
        /// Access rules that can be added to the network security profile (NSP) to remediate the issue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Access rules that can be added to the network security profile (NSP) to remediate the issue.",
        SerializedName = @"suggestedAccessRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IAccessRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IAccessRule[] SuggestedAccessRule { get;  }
        /// <summary>
        /// Fully qualified resource IDs of suggested resources that can be associated to the network security perimeter (NSP) to
        /// remediate the issue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Fully qualified resource IDs of suggested resources that can be associated to the network security perimeter (NSP) to remediate the issue.",
        SerializedName = @"suggestedResourceIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] SuggestedResourceId { get;  }

    }
    /// Details of a provisioning issue for a network security perimeter (NSP) configuration. Resource providers should generate
    /// separate provisioning issue elements for each separate issue detected, and include a meaningful and distinctive description,
    /// as well as any appropriate suggestedResourceIds and suggestedAccessRules
    internal partial interface IProvisioningIssuePropertiesInternal

    {
        /// <summary>Description of the issue</summary>
        string Description { get; set; }
        /// <summary>Type of issue</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType? IssueType { get; set; }
        /// <summary>Severity of the issue.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Support.Severity? Severity { get; set; }
        /// <summary>
        /// Access rules that can be added to the network security profile (NSP) to remediate the issue.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api000000.IAccessRule[] SuggestedAccessRule { get; set; }
        /// <summary>
        /// Fully qualified resource IDs of suggested resources that can be associated to the network security perimeter (NSP) to
        /// remediate the issue.
        /// </summary>
        string[] SuggestedResourceId { get; set; }

    }
}