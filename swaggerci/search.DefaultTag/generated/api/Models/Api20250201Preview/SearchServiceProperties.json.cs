// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Extensions;

    /// <summary>Properties of the search service.</summary>
    public partial class SearchServiceProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.ISearchServiceProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.ISearchServiceProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.ISearchServiceProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject json ? new SearchServiceProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject into a new instance of <see cref="SearchServiceProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal SearchServiceProperties(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_networkRuleSet = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject>("networkRuleSet"), out var __jsonNetworkRuleSet) ? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.NetworkRuleSet.FromJson(__jsonNetworkRuleSet) : NetworkRuleSet;}
            {_encryptionWithCmk = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject>("encryptionWithCmk"), out var __jsonEncryptionWithCmk) ? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.EncryptionWithCmk.FromJson(__jsonEncryptionWithCmk) : EncryptionWithCmk;}
            {_authOption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject>("authOptions"), out var __jsonAuthOptions) ? Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.DataPlaneAuthOptions.FromJson(__jsonAuthOptions) : AuthOption;}
            {_replicaCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNumber>("replicaCount"), out var __jsonReplicaCount) ? (int?)__jsonReplicaCount : ReplicaCount;}
            {_partitionCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNumber>("partitionCount"), out var __jsonPartitionCount) ? (int?)__jsonPartitionCount : PartitionCount;}
            {_endpoint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString>("endpoint"), out var __jsonEndpoint) ? (string)__jsonEndpoint : (string)Endpoint;}
            {_hostingMode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString>("hostingMode"), out var __jsonHostingMode) ? (string)__jsonHostingMode : (string)HostingMode;}
            {_computeType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString>("computeType"), out var __jsonComputeType) ? (string)__jsonComputeType : (string)ComputeType;}
            {_publicNetworkAccess = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString>("publicNetworkAccess"), out var __jsonPublicNetworkAccess) ? (string)__jsonPublicNetworkAccess : (string)PublicNetworkAccess;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_statusDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString>("statusDetails"), out var __jsonStatusDetails) ? (string)__jsonStatusDetails : (string)StatusDetail;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_disabledDataExfiltrationOption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonArray>("disabledDataExfiltrationOptions"), out var __jsonDisabledDataExfiltrationOptions) ? If( __jsonDisabledDataExfiltrationOptions as Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchDisabledDataExfiltrationOption[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchDisabledDataExfiltrationOption) (__u is Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString __t ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchDisabledDataExfiltrationOption)(__t.ToString()) : ((Microsoft.Azure.PowerShell.Cmdlets.Search.Support.SearchDisabledDataExfiltrationOption)""))) ))() : null : DisabledDataExfiltrationOption;}
            {_disableLocalAuth = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonBoolean>("disableLocalAuth"), out var __jsonDisableLocalAuth) ? (bool?)__jsonDisableLocalAuth : DisableLocalAuth;}
            {_semanticSearch = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString>("semanticSearch"), out var __jsonSemanticSearch) ? (string)__jsonSemanticSearch : (string)SemanticSearch;}
            {_privateEndpointConnection = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonArray>("privateEndpointConnections"), out var __jsonPrivateEndpointConnections) ? If( __jsonPrivateEndpointConnections as Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.IPrivateEndpointConnection[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.IPrivateEndpointConnection) (Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.PrivateEndpointConnection.FromJson(__p) )) ))() : null : PrivateEndpointConnection;}
            {_sharedPrivateLinkResource = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonArray>("sharedPrivateLinkResources"), out var __jsonSharedPrivateLinkResources) ? If( __jsonSharedPrivateLinkResources as Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.ISharedPrivateLinkResource[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.ISharedPrivateLinkResource) (Microsoft.Azure.PowerShell.Cmdlets.Search.Models.Api20250201Preview.SharedPrivateLinkResource.FromJson(__k) )) ))() : null : SharedPrivateLinkResource;}
            {_eTag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString>("eTag"), out var __jsonETag) ? (string)__jsonETag : (string)ETag;}
            {_upgradeAvailable = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonBoolean>("upgradeAvailable"), out var __jsonUpgradeAvailable) ? (bool?)__jsonUpgradeAvailable : UpgradeAvailable;}
            {_serviceUpgradeDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString>("serviceUpgradeDate"), out var __jsonServiceUpgradeDate) ? global::System.DateTime.TryParse((string)__jsonServiceUpgradeDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonServiceUpgradeDateValue) ? __jsonServiceUpgradeDateValue : ServiceUpgradeDate : ServiceUpgradeDate;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="SearchServiceProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="SearchServiceProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._networkRuleSet ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) this._networkRuleSet.ToJson(null,serializationMode) : null, "networkRuleSet" ,container.Add );
            AddIf( null != this._encryptionWithCmk ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) this._encryptionWithCmk.ToJson(null,serializationMode) : null, "encryptionWithCmk" ,container.Add );
            AddIf( null != this._authOption ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) this._authOption.ToJson(null,serializationMode) : null, "authOptions" ,container.Add );
            AddIf( null != this._replicaCount ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNumber((int)this._replicaCount) : null, "replicaCount" ,container.Add );
            AddIf( null != this._partitionCount ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNumber((int)this._partitionCount) : null, "partitionCount" ,container.Add );
            AddIf( null != (((object)this._endpoint)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString(this._endpoint.ToString()) : null, "endpoint" ,container.Add );
            AddIf( null != (((object)this._hostingMode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString(this._hostingMode.ToString()) : null, "hostingMode" ,container.Add );
            AddIf( null != (((object)this._computeType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString(this._computeType.ToString()) : null, "computeType" ,container.Add );
            AddIf( null != (((object)this._publicNetworkAccess)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString(this._publicNetworkAccess.ToString()) : null, "publicNetworkAccess" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._statusDetail)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString(this._statusDetail.ToString()) : null, "statusDetails" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (null != this._disabledDataExfiltrationOption)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.XNodeArray();
                foreach( var __x in this._disabledDataExfiltrationOption )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("disabledDataExfiltrationOptions",__w);
            }
            AddIf( null != this._disableLocalAuth ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonBoolean((bool)this._disableLocalAuth) : null, "disableLocalAuth" ,container.Add );
            AddIf( null != (((object)this._semanticSearch)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString(this._semanticSearch.ToString()) : null, "semanticSearch" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._privateEndpointConnection)
                {
                    var __r = new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.XNodeArray();
                    foreach( var __s in this._privateEndpointConnection )
                    {
                        AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                    }
                    container.Add("privateEndpointConnections",__r);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._sharedPrivateLinkResource)
                {
                    var __m = new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.XNodeArray();
                    foreach( var __n in this._sharedPrivateLinkResource )
                    {
                        AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                    }
                    container.Add("sharedPrivateLinkResources",__m);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._eTag)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString(this._eTag.ToString()) : null, "eTag" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._upgradeAvailable ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonBoolean((bool)this._upgradeAvailable) : null, "upgradeAvailable" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._serviceUpgradeDate ? (Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Search.Runtime.Json.JsonString(this._serviceUpgradeDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "serviceUpgradeDate" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}