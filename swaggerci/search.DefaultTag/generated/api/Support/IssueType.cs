// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Search.Support
{

    /// <summary>Type of issue</summary>
    public partial struct IssueType :
        System.IEquatable<IssueType>
    {
        /// <summary>
        /// An error occurred while applying the network security perimeter (NSP) configuration.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType ConfigurationPropagationFailure = @"ConfigurationPropagationFailure";

        /// <summary>
        /// An managed identity hasn't been associated with the resource. The resource will still be able to validate inbound traffic
        /// from the network security perimeter (NSP) or matching inbound access rules, but it won't be able to perform outbound access
        /// as a member of the NSP.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType MissingIdentityConfiguration = @"MissingIdentityConfiguration";

        /// <summary>
        /// A network connectivity issue is happening on the resource which could be addressed either by adding new resources to the
        /// network security perimeter (NSP) or by modifying access rules.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType MissingPerimeterConfiguration = @"MissingPerimeterConfiguration";

        /// <summary>Unknown issue type</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType Unknown = @"Unknown";

        /// <summary>the value for an instance of the <see cref="IssueType" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to IssueType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="IssueType" />.</param>
        internal static object CreateFrom(object value)
        {
            return new IssueType(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type IssueType</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type IssueType (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is IssueType && Equals((IssueType)obj);
        }

        /// <summary>Returns hashCode for enum IssueType</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="IssueType"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private IssueType(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for IssueType</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to IssueType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="IssueType" />.</param>

        public static implicit operator IssueType(string value)
        {
            return new IssueType(value);
        }

        /// <summary>Implicit operator to convert IssueType to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="IssueType" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum IssueType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType e1, Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum IssueType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType e1, Microsoft.Azure.PowerShell.Cmdlets.Search.Support.IssueType e2)
        {
            return e2.Equals(e1);
        }
    }
}