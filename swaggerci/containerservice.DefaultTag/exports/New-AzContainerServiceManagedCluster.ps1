
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Creates or updates a managed cluster.
.Description
Creates or updates a managed cluster.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedCluster
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

AGENTPOOLPROFILE <IManagedClusterAgentPoolProfile[]>: The agent pool properties.
  Name <String>: Windows agent pool names must be 6 characters or less.
  [ArtifactStreamingProfileEnabled <Boolean?>]: Artifact streaming speeds up the cold-start of containers on a node through on-demand image loading. To use this feature, container images must also enable artifact streaming on ACR. If not specified, the default is false.
  [AvailabilityZone <String[]>]: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
  [CapacityReservationGroupId <String>]: AKS will associate the specified agent pool with the Capacity Reservation Group.
  [Count <Int32?>]: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
  [CreationDataSourceResourceId <String>]: This is the ARM ID of the source object to be used to create the target object.
  [EnableAutoScaling <Boolean?>]: Whether to enable auto-scaler
  [EnableCustomCaTrust <Boolean?>]: When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded certificates into node trust stores. Defaults to false.
  [EnableEncryptionAtHost <Boolean?>]: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
  [EnableFips <Boolean?>]: See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.
  [EnableNodePublicIP <Boolean?>]: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.
  [EnableUltraSsd <Boolean?>]: Whether to enable UltraSSD
  [GatewayProfilePublicIPPrefixSize <Int32?>]: The Gateway agent pool associates one public IPPrefix for each static egress gateway to provide public egress. The size of Public IPPrefix should be selected by the user. Each node in the agent pool is assigned with one IP from the IPPrefix. The IPPrefix size thus serves as a cap on the size of the Gateway agent pool. Due to Azure public IPPrefix size limitation, the valid value range is [28, 31] (/31 = 2 nodes/IPs, /30 = 4 nodes/IPs, /29 = 8 nodes/IPs, /28 = 16 nodes/IPs). The default value is 31.
  [GpuInstanceProfile <GpuInstanceProfile?>]: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
  [GpuProfileInstallGpuDriver <Boolean?>]: The default value is true when the vmSize of the agent pool contains a GPU, false otherwise. GPU Driver Installation can only be set true when VM has an associated GPU resource. Setting this field to false prevents automatic GPU driver installation. In that case, in order for the GPU to be usable, the user must perform GPU driver installation themselves.
  [HostGroupId <String>]: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
  [KubeletConfigAllowedUnsafeSysctl <String[]>]: Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
  [KubeletConfigContainerLogMaxFile <Int32?>]: The maximum number of container log files that can be present for a container. The number must be â‰¥ 2.
  [KubeletConfigContainerLogMaxSizeMb <Int32?>]: The maximum size (e.g. 10Mi) of container log file before it is rotated.
  [KubeletConfigCpuCfsQuota <Boolean?>]: The default is true.
  [KubeletConfigCpuCfsQuotaPeriod <String>]: The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
  [KubeletConfigCpuManagerPolicy <String>]: The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.
  [KubeletConfigFailSwapOn <Boolean?>]: If set to true it will make the Kubelet fail to start if swap is enabled on the node.
  [KubeletConfigImageGcHighThreshold <Int32?>]: To disable image garbage collection, set to 100. The default is 85%
  [KubeletConfigImageGcLowThreshold <Int32?>]: This cannot be set higher than imageGcHighThreshold. The default is 80%
  [KubeletConfigPodMaxPid <Int32?>]: The maximum number of processes per pod.
  [KubeletConfigTopologyManagerPolicy <String>]: For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
  [KubeletDiskType <KubeletDiskType?>]: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
  [LinuxOSConfigSwapFileSizeMb <Int32?>]: The size in MB of a swap file that will be created on each node.
  [LinuxOSConfigSysctl <ISysctlConfig>]: Sysctl settings for Linux agent nodes.
    [FsAioMaxNr <Int32?>]: Sysctl setting fs.aio-max-nr.
    [FsFileMax <Int32?>]: Sysctl setting fs.file-max.
    [FsInotifyMaxUserWatch <Int32?>]: Sysctl setting fs.inotify.max_user_watches.
    [FsNrOpen <Int32?>]: Sysctl setting fs.nr_open.
    [KernelThreadsMax <Int32?>]: Sysctl setting kernel.threads-max.
    [NetCoreNetdevMaxBacklog <Int32?>]: Sysctl setting net.core.netdev_max_backlog.
    [NetCoreOptmemMax <Int32?>]: Sysctl setting net.core.optmem_max.
    [NetCoreRmemDefault <Int32?>]: Sysctl setting net.core.rmem_default.
    [NetCoreRmemMax <Int32?>]: Sysctl setting net.core.rmem_max.
    [NetCoreSomaxconn <Int32?>]: Sysctl setting net.core.somaxconn.
    [NetCoreWmemDefault <Int32?>]: Sysctl setting net.core.wmem_default.
    [NetCoreWmemMax <Int32?>]: Sysctl setting net.core.wmem_max.
    [NetIpv4IPLocalPortRange <String>]: Sysctl setting net.ipv4.ip_local_port_range.
    [NetIpv4NeighDefaultGcThresh1 <Int32?>]: Sysctl setting net.ipv4.neigh.default.gc_thresh1.
    [NetIpv4NeighDefaultGcThresh2 <Int32?>]: Sysctl setting net.ipv4.neigh.default.gc_thresh2.
    [NetIpv4NeighDefaultGcThresh3 <Int32?>]: Sysctl setting net.ipv4.neigh.default.gc_thresh3.
    [NetIpv4TcpFinTimeout <Int32?>]: Sysctl setting net.ipv4.tcp_fin_timeout.
    [NetIpv4TcpKeepaliveProbe <Int32?>]: Sysctl setting net.ipv4.tcp_keepalive_probes.
    [NetIpv4TcpKeepaliveTime <Int32?>]: Sysctl setting net.ipv4.tcp_keepalive_time.
    [NetIpv4TcpMaxSynBacklog <Int32?>]: Sysctl setting net.ipv4.tcp_max_syn_backlog.
    [NetIpv4TcpMaxTwBucket <Int32?>]: Sysctl setting net.ipv4.tcp_max_tw_buckets.
    [NetIpv4TcpTwReuse <Boolean?>]: Sysctl setting net.ipv4.tcp_tw_reuse.
    [NetIpv4TcpkeepaliveIntvl <Int32?>]: Sysctl setting net.ipv4.tcp_keepalive_intvl.
    [NetNetfilterNfConntrackBucket <Int32?>]: Sysctl setting net.netfilter.nf_conntrack_buckets.
    [NetNetfilterNfConntrackMax <Int32?>]: Sysctl setting net.netfilter.nf_conntrack_max.
    [VMMaxMapCount <Int32?>]: Sysctl setting vm.max_map_count.
    [VMSwappiness <Int32?>]: Sysctl setting vm.swappiness.
    [VMVfsCachePressure <Int32?>]: Sysctl setting vm.vfs_cache_pressure.
  [LinuxOSConfigTransparentHugePageDefrag <String>]: Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
  [LinuxOSConfigTransparentHugePageEnabled <String>]: Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
  [MaxCount <Int32?>]: The maximum number of nodes for auto-scaling
  [MaxPod <Int32?>]: The maximum number of pods that can run on a node.
  [MessageOfTheDay <String>]: A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).
  [MinCount <Int32?>]: The minimum number of nodes for auto-scaling
  [Mode <AgentPoolMode?>]: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
  [NetworkProfileAllowedHostPort <IPortRange[]>]: The port ranges that are allowed to access. The specified ranges are allowed to overlap.
    [PortEnd <Int32?>]: The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or equal to portStart.
    [PortStart <Int32?>]: The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or equal to portEnd.
    [Protocol <Protocol?>]: The network protocol of the port.
  [NetworkProfileApplicationSecurityGroup <String[]>]: The IDs of the application security groups which agent pool will associate when created.
  [NetworkProfileNodePublicIPTag <IIPTag[]>]: IPTags of instance-level public IPs.
    [Tag <String>]: The value of the IP tag associated with the public IP. Example: Internet.
    [Type <String>]: The IP tag type. Example: RoutingPreference.
  [NodeInitializationTaint <String[]>]: These taints will not be reconciled by AKS and can be removed with a kubectl call. This field can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint nodes node1 key1=value1:NoSchedule-`
  [NodeLabel <IManagedClusterAgentPoolProfilePropertiesNodeLabels>]: The node labels to be persisted across all nodes in agent pool.
    [(Any) <String>]: This indicates any property can be added to this object.
  [NodePublicIPPrefixId <String>]: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
  [NodeTaint <String[]>]: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
  [OSDiskSizeGb <Int32?>]: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
  [OSDiskType <OSDiskType?>]: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
  [OSSku <Ossku?>]: Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
  [OSType <OSType?>]: The operating system type. The default is Linux.
  [OrchestratorVersion <String>]: Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
  [PodIPAllocationMode <PodIPAllocationMode?>]: The IP allocation mode for pods in the agent pool. Must be used with podSubnetId. The default is 'DynamicIndividual'.
  [PodSubnetId <String>]: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
  [PowerStateCode <Code?>]: Tells whether the cluster is Running or Stopped
  [ProximityPlacementGroupId <String>]: The ID for Proximity Placement Group.
  [ScaleAutoscale <IAutoScaleProfile[]>]: Specifications on how to auto-scale the VirtualMachines agent pool within a predefined size range. Currently, at most one AutoScaleProfile is allowed.
    [MaxCount <Int32?>]: The maximum number of nodes of the specified sizes.
    [MinCount <Int32?>]: The minimum number of nodes of the specified sizes.
    [Size <String[]>]: The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the first available one when auto scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will use the next size.
  [ScaleDownMode <ScaleDownMode?>]: This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
  [ScaleManual <IManualScaleProfile[]>]: Specifications on how to scale the VirtualMachines agent pool to a fixed size. Currently, at most one ManualScaleProfile is allowed.
    [Count <Int32?>]: Number of nodes.
    [Size <String[]>]: The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the first available one when scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will use the next size.
  [ScaleSetEvictionPolicy <ScaleSetEvictionPolicy?>]: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
  [ScaleSetPriority <ScaleSetPriority?>]: The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
  [SecurityProfileEnableSecureBoot <Boolean?>]: Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and drivers can boot. For more details, see aka.ms/aks/trustedlaunch.  If not specified, the default is false.
  [SecurityProfileEnableVtpm <Boolean?>]: vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held locally on the node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
  [SecurityProfileSshAccess <AgentPoolSshAccess?>]: SSH access method of an agent pool.
  [SpotMaxPrice <Single?>]: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
  [Tag <IManagedClusterAgentPoolProfilePropertiesTags>]: The tags to be persisted on the agent pool virtual machine scale set.
    [(Any) <String>]: This indicates any property can be added to this object.
  [Type <AgentPoolType?>]: The type of Agent Pool.
  [UpgradeSettingDrainTimeoutInMinute <Int32?>]: The amount of time (in minutes) to wait on eviction of pods and graceful termination per node. This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not specified, the default is 30 minutes.
  [UpgradeSettingMaxSurge <String>]: This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
  [UpgradeSettingNodeSoakDurationInMinute <Int32?>]: The amount of time (in minutes) to wait after draining a node and before reimaging it and moving on to next node. If not specified, the default is 0 minutes.
  [UpgradeSettingUndrainableNodeBehavior <UndrainableNodeBehavior?>]: Defines the behavior for undrainable nodes during upgrade. The most common cause of undrainable nodes is Pod Disruption Budgets (PDBs), but other issues, such as pod termination grace period is exceeding the remaining per-node drain timeout or pod is still being in a running state, can also cause undrainable nodes.
  [VMSize <String>]: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
  [VirtualMachineNodesStatus <IVirtualMachineNodes[]>]: The status of nodes in a VirtualMachines agent pool.
    [Count <Int32?>]: Number of nodes.
    [Size <String>]: The VM size of the agents used to host this group of nodes.
  [VnetSubnetId <String>]: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
  [WindowProfileDisableOutboundNat <Boolean?>]: The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT Gateway and the Windows agent pool does not have node public IP enabled.
  [WorkloadRuntime <WorkloadRuntime?>]: Determines the type of workload a node can run.

COMPONENTEGRESSGATEWAY <IIstioEgressGateway[]>: Istio egress gateways.
  Enabled <Boolean>: Whether to enable the egress gateway.

COMPONENTINGRESSGATEWAY <IIstioIngressGateway[]>: Istio ingress gateways.
  Enabled <Boolean>: Whether to enable the ingress gateway.
  Mode <IstioIngressGatewayMode>: Mode of an ingress gateway.

NETWORKPROFILE <IContainerServiceNetworkProfile>: The network configuration profile.
  [DnsServiceIP <String>]: An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
  [IPFamily <IPFamily[]>]: IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6.
  [IpvConfigScheduler <IpvsScheduler?>]: IPVS scheduler, for more information please see http://www.linuxvirtualserver.org/docs/scheduling.html.
  [IpvConfigTcpFinTimeoutSecond <Int32?>]: The timeout value used for IPVS TCP sessions after receiving a FIN in seconds. Must be a positive integer value.
  [IpvConfigTcpTimeoutSecond <Int32?>]: The timeout value used for idle IPVS TCP sessions in seconds. Must be a positive integer value.
  [IpvConfigUdpTimeoutSecond <Int32?>]: The timeout value used for IPVS UDP packets in seconds. Must be a positive integer value.
  [KubeProxyConfigEnabled <Boolean?>]: Whether to enable on kube-proxy on the cluster (if no 'kubeProxyConfig' exists, kube-proxy is enabled in AKS by default without these customizations).
  [KubeProxyConfigMode <Mode?>]: Specify which proxy mode to use ('IPTABLES' or 'IPVS')
  [LoadBalancerProfileAllocatedOutboundPort <Int32?>]: The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
  [LoadBalancerProfileBackendPoolType <BackendPoolType?>]: The type of the managed inbound Load Balancer BackendPool.
  [LoadBalancerProfileClusterServiceLoadBalancerHealthProbeMode <ClusterServiceLoadBalancerHealthProbeMode?>]: The health probing behavior for External Traffic Policy Cluster services.
  [LoadBalancerProfileEffectiveOutboundIP <IResourceReference[]>]: The effective outbound IP resources of the cluster load balancer.
    [Id <String>]: The fully qualified Azure resource id.
  [LoadBalancerProfileEnableMultipleStandardLoadBalancer <Boolean?>]: Enable multiple standard load balancers per AKS cluster or not.
  [LoadBalancerProfileIdleTimeoutInMinute <Int32?>]: Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.
  [LoadBalancerSku <LoadBalancerSku?>]: The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs.
  [ManagedOutboundIPCount <Int32?>]: The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. 
  [ManagedOutboundIPCountIpv6 <Int32?>]: The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack. 
  [ManagedOutboundIPProfileCount <Int32?>]: The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1. 
  [MonitoringEnabled <Boolean?>]: Enable or disable the network monitoring plugin on the cluster
  [NatGatewayProfileEffectiveOutboundIP <IResourceReference[]>]: The effective outbound IP resources of the cluster NAT gateway.
  [NatGatewayProfileIdleTimeoutInMinute <Int32?>]: Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
  [NetworkDataplane <NetworkDataplane?>]: Network dataplane used in the Kubernetes cluster.
  [NetworkMode <NetworkMode?>]: This cannot be specified if networkPlugin is anything other than 'azure'.
  [NetworkPlugin <NetworkPlugin?>]: Network plugin used for building the Kubernetes network.
  [NetworkPluginMode <NetworkPluginMode?>]: Network plugin mode used for building the Kubernetes network.
  [NetworkPolicy <NetworkPolicy?>]: Network policy used for building the Kubernetes network.
  [ObservabilityEnabled <Boolean?>]: Indicates the enablement of Advanced Networking observability functionalities on clusters.
  [OutboundIPPrefixPublicIpprefix <IResourceReference[]>]: A list of public IP prefix resources.
  [OutboundIPPublicIP <IResourceReference[]>]: A list of public IP resources.
  [OutboundType <OutboundType?>]: This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
  [PodCidr <String>]: A CIDR notation IP range from which to assign pod IPs when kubenet is used.
  [PodCidrs <String[]>]: One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
  [PodLinkLocalAccess <PodLinkLocalAccess?>]: Defines access to special link local addresses (Azure Instance Metadata Service, aka IMDS) for pods with hostNetwork=false. if not specified, the default is 'IMDS'.
  [ServiceCidr <String>]: A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
  [ServiceCidrs <String[]>]: One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.
  [StaticEgressGatewayProfileEnabled <Boolean?>]: Indicates if Static Egress Gateway addon is enabled or not.

PODIDENTITYPROFILEUSERASSIGNEDIDENTITY <IManagedClusterPodIdentity[]>: The pod identities to use in the cluster.
  Name <String>: The name of the pod identity.
  Namespace <String>: The namespace of the pod identity.
  [BindingSelector <String>]: The binding selector to use for the AzureIdentityBinding resource.
  [Code <String>]: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
  [Detail <IManagedClusterPodIdentityProvisioningErrorBody[]>]: A list of additional details about the error.
    [Code <String>]: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    [Detail <IManagedClusterPodIdentityProvisioningErrorBody[]>]: A list of additional details about the error.
    [Message <String>]: A message describing the error, intended to be suitable for display in a user interface.
    [Target <String>]: The target of the particular error. For example, the name of the property in error.
  [IdentityClientId <String>]: The client ID of the user assigned identity.
  [IdentityObjectId <String>]: The object ID of the user assigned identity.
  [IdentityResourceId <String>]: The resource ID of the user assigned identity.
  [Message <String>]: A message describing the error, intended to be suitable for display in a user interface.
  [Target <String>]: The target of the particular error. For example, the name of the property in error.

PODIDENTITYPROFILEUSERASSIGNEDIDENTITYEXCEPTION <IManagedClusterPodIdentityException[]>: The pod identity exceptions to allow.
  Name <String>: The name of the pod identity exception.
  Namespace <String>: The namespace of the pod identity exception.
  PodLabel <IManagedClusterPodIdentityExceptionPodLabels>: The pod labels to match.
    [(Any) <String>]: This indicates any property can be added to this object.

PRIVATELINKRESOURCE <IPrivateLinkResource[]>: Private link resources associated with the cluster.
  [GroupId <String>]: The group ID of the resource.
  [Id <String>]: The ID of the private link resource.
  [Name <String>]: The name of the private link resource.
  [RequiredMember <String[]>]: The RequiredMembers of the resource
  [Type <String>]: The resource type.

SSHPUBLICKEY <IContainerServiceSshPublicKey[]>: The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
  KeyData <String>: Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
.Link
https://learn.microsoft.com/powershell/module/az.containerservice/new-azcontainerservicemanagedcluster
#>
function New-AzContainerServiceManagedCluster {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedCluster])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Path')]
    [System.String]
    # The name of the resource group.
    # The name is case insensitive.
    ${ResourceGroupName},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Path')]
    [System.String]
    # The name of the managed cluster resource.
    ${ResourceName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The ID of the target subscription.
    # The value must be an UUID.
    ${SubscriptionId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Header')]
    [System.String]
    # The request should only proceed if an entity matches this string.
    ${IfMatch},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Header')]
    [System.String]
    # The request should only proceed if no entity matches this string.
    ${IfNoneMatch},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The geo-location where the resource lives
    ${Location},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String[]]
    # The list of AAD group object IDs that will have admin role of the cluster.
    ${AadProfileAdminGroupObjectID},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # (DEPRECATED) The client AAD application ID.
    # Learn more at https://aka.ms/aks/aad-legacy.
    ${AadProfileClientAppId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable Azure RBAC for Kubernetes authorization.
    ${AadProfileEnableAzureRbac},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable managed AAD.
    ${AadProfileManaged},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # (DEPRECATED) The server AAD application ID.
    # Learn more at https://aka.ms/aks/aad-legacy.
    ${AadProfileServerAppId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # (DEPRECATED) The server AAD application secret.
    # Learn more at https://aka.ms/aks/aad-legacy.
    ${AadProfileServerAppSecret},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The AAD tenant ID to use for authentication.
    # If not specified, will use the tenant of the deployment subscription.
    ${AadProfileTenantId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterPropertiesAddonProfiles]))]
    [System.Collections.Hashtable]
    # The profile of managed cluster add-on.
    ${AddonProfile},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfile[]]
    # The agent pool properties.
    # To construct, see NOTES section for AGENTPOOLPROFILE properties and create a hash table.
    ${AgentPoolProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if AI toolchain operator enabled or not.
    ${AiToolchainOperatorProfileEnabled},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String[]]
    # IP ranges are specified in CIDR format, e.g.
    # 137.117.106.88/29.
    # This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer.
    # For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
    ${ApiServerAccessProfileAuthorizedIPRange},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to disable run command for the cluster or not.
    ${ApiServerAccessProfileDisableRunCommand},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
    ${ApiServerAccessProfileEnablePrivateCluster},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to create additional public FQDN for private cluster or not.
    ${ApiServerAccessProfileEnablePrivateClusterPublicFqdn},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable apiserver vnet integration for the cluster or not.
    ${ApiServerAccessProfileEnableVnetIntegration},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is System.
    # For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone).
    # Allowed values are 'system' and 'none'.
    ${ApiServerAccessProfilePrivateDnsZone},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # It is required when: 1.
    # creating a new cluster with BYO Vnet; 2.
    # updating an existing cluster to enable apiserver vnet integration.
    ${ApiServerAccessProfileSubnetId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if Application Monitoring Auto Instrumentation is enabled or not.
    ${AutoInstrumentationEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Valid values are 'true' and 'false'
    ${AutoScalerProfileBalanceSimilarNodeGroup},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # If set to true, all daemonset pods on empty nodes will be evicted before deletion of the node.
    # If the daemonset pod cannot be evicted another node will be chosen for scaling.
    # If set to false, the node will be deleted without ensuring that daemonset pods are deleted or evicted.
    ${AutoScalerProfileDaemonsetEvictionForEmptyNode},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # If set to true, all daemonset pods on occupied nodes will be evicted before deletion of the node.
    # If the daemonset pod cannot be evicted another node will be chosen for scaling.
    # If set to false, the node will be deleted without ensuring that daemonset pods are deleted or evicted.
    ${AutoScalerProfileDaemonsetEvictionForOccupiedNode},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Expander])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Expander]
    # Available values are: 'least-waste', 'most-pods', 'priority', 'random'.
    ${AutoScalerProfileExpander},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # If set to true, the resources used by daemonset will be taken into account when making scaling down decisions.
    ${AutoScalerProfileIgnoreDaemonsetsUtilization},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is 10.
    ${AutoScalerProfileMaxEmptyBulkDelete},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is 600.
    ${AutoScalerProfileMaxGracefulTerminationSec},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is '15m'.
    # Values must be an integer followed by an 'm'.
    # No unit of time other than minutes (m) is supported.
    ${AutoScalerProfileMaxNodeProvisionTime},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is 45.
    # The maximum is 100 and the minimum is 0.
    ${AutoScalerProfileMaxTotalUnreadyPercentage},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age.
    # The default is '0s'.
    # Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
    ${AutoScalerProfileNewPodScaleUpDelay},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # This must be an integer.
    # The default is 3.
    ${AutoScalerProfileOkTotalUnreadyCount},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is '10m'.
    # Values must be an integer followed by an 'm'.
    # No unit of time other than minutes (m) is supported.
    ${AutoScalerProfileScaleDownDelayAfterAdd},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is the scan-interval.
    # Values must be an integer followed by an 'm'.
    # No unit of time other than minutes (m) is supported.
    ${AutoScalerProfileScaleDownDelayAfterDelete},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is '3m'.
    # Values must be an integer followed by an 'm'.
    # No unit of time other than minutes (m) is supported.
    ${AutoScalerProfileScaleDownDelayAfterFailure},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is '10m'.
    # Values must be an integer followed by an 'm'.
    # No unit of time other than minutes (m) is supported.
    ${AutoScalerProfileScaleDownUnneededTime},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is '20m'.
    # Values must be an integer followed by an 'm'.
    # No unit of time other than minutes (m) is supported.
    ${AutoScalerProfileScaleDownUnreadyTime},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is '0.5'.
    ${AutoScalerProfileScaleDownUtilizationThreshold},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is '10'.
    # Values must be an integer number of seconds.
    ${AutoScalerProfileScanInterval},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is true.
    ${AutoScalerProfileSkipNodesWithLocalStorage},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The default is true.
    ${AutoScalerProfileSkipNodesWithSystemPod},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeOSUpgradeChannel])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeOSUpgradeChannel]
    # The default is Unmanaged, but may change to either NodeImage or SecurityPatch at GA.
    ${AutoUpgradeProfileNodeOSUpgradeChannel},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UpgradeChannel])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UpgradeChannel]
    # For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
    ${AutoUpgradeProfileUpgradeChannel},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable Azure Key Vault key management service.
    # The default is false.
    ${AzureKeyVaultKmEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Identifier of Azure Key Vault key.
    # See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details.
    # When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier.
    # When Azure Key Vault key management service is disabled, leave the field empty.
    ${AzureKeyVaultKmKeyId},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KeyVaultNetworkAccessTypes])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KeyVaultNetworkAccessTypes]
    # Network access of key vault.
    # The possible values are `Public` and `Private`.
    # `Public` means the key vault allows public access from all networks.
    # `Private` means the key vault disables public access and enables private link.
    # The default value is `Public`.
    ${AzureKeyVaultKmKeyVaultNetworkAccess},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Resource ID of key vault.
    # When keyVaultNetworkAccess is `Private`, this field is required and must be a valid resource ID.
    # When keyVaultNetworkAccess is `Public`, leave the field empty.
    ${AzureKeyVaultKmKeyVaultResourceId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable AzureBlob CSI Driver.
    # The default value is false.
    ${BlobCsiDriverEnabled},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ArtifactSource])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ArtifactSource]
    # The source where the artifacts are downloaded from.
    ${BootstrapProfileArtifactSource},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The resource Id of Azure Container Registry.
    # The registry must have private network access, premium SKU and zone redundancy.
    ${BootstrapProfileContainerRegistryId},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IIstioEgressGateway[]]
    # Istio egress gateways.
    # To construct, see NOTES section for COMPONENTEGRESSGATEWAY properties and create a hash table.
    ${ComponentEgressGateway},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IIstioIngressGateway[]]
    # Istio ingress gateways.
    # To construct, see NOTES section for COMPONENTINGRESSGATEWAY properties and create a hash table.
    ${ComponentIngressGateway},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether custom metrics collection has to be disabled or not.
    # If not specified the default is false.
    # No custom metrics will be emitted if this field is false but the container insights enabled field is false
    ${ContainerInsightDisableCustomMetric},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether prometheus metrics scraping is disabled or not.
    # If not specified the default is false.
    # No prometheus metrics will be emitted if this field is false but the container insights enabled field is false
    ${ContainerInsightDisablePrometheusMetricsScraping},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.
    ${ContainerInsightEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs.
    ${ContainerInsightLogAnalyticsWorkspaceResourceId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Int64]
    # The syslog host port.
    # If not specified, the default port is 28330.
    ${ContainerInsightSyslogPort},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # The Managed Cluster sku.tier must be set to 'Standard' or 'Premium' to enable this feature.
    # Enabling this will add Kubernetes Namespace and Deployment details to the Cost Analysis views in the Azure portal.
    # If not specified, the default is false.
    # For more information see aka.ms/aks/docs/cost-analysis.
    ${CostAnalysisEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # This is the ARM ID of the source object to be used to create the target object.
    ${CreationDataSourceResourceId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Resource ID of the Log Analytics workspace to be associated with Microsoft Defender.
    # When Microsoft Defender is enabled, this field is required and must be a valid workspace resource ID.
    # When Microsoft Defender is disabled, leave the field empty.
    ${DefenderLogAnalyticsWorkspaceResourceId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # If set to true, getting static credentials will be disabled for this cluster.
    # This must only be used on Managed Clusters that are AAD enabled.
    # For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
    ${DisableLocalAccount},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable AzureDisk CSI Driver.
    # The default value is true.
    ${DiskCsiDriverEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The version of AzureDisk CSI Driver.
    # The default value is v1.
    ${DiskCsiDriverVersion},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
    ${DiskEncryptionSetId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # This cannot be updated once the Managed Cluster has been created.
    ${DnsPrefix},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # The default value is false.
    # It can be enabled/disabled on creation and updating of the managed cluster.
    # See [https://aka.ms/NamespaceARMResource](https://aka.ms/NamespaceARMResource) for more details on Namespace as a ARM Resource.
    ${EnableNamespaceResource},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # (DEPRECATED) Whether to enable Kubernetes pod security policy (preview).
    # PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25.
    # Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.
    ${EnablePodSecurityPolicy},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable Kubernetes Role-Based Access Control.
    ${EnableRbac},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The name of the extended location.
    ${ExtendedLocationName},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ExtendedLocationTypes])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ExtendedLocationTypes]
    # The type of the extended location.
    ${ExtendedLocationType},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable AzureFile CSI Driver.
    # The default value is true.
    ${FileCsiDriverEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # This cannot be updated once the Managed Cluster has been created.
    ${FqdnSubdomain},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Specifies the DNS server for Windows gMSA.
    # 
    # 
    #  Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
    ${GmsaProfileDnsServer},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether to enable Windows gMSA in the managed cluster.
    ${GmsaProfileEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Specifies the root domain name for Windows gMSA.
    # 
    # 
    #  Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
    ${GmsaProfileRootDomainName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The HTTP proxy server endpoint to use.
    ${HttpProxyConfigHttpProxy},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The HTTPS proxy server endpoint to use.
    ${HttpProxyConfigHttpsProxy},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String[]]
    # The endpoints that should not go through proxy.
    ${HttpProxyConfigNoProxy},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Alternative CA cert to use for connecting to proxy servers.
    ${HttpProxyConfigTrustedCa},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api40.IDelegatedResources]))]
    [System.Collections.Hashtable]
    # The delegated identity resources assigned to this managed cluster.
    # This can only be set by another Azure Resource Provider, and managed cluster only accept one delegated identity resource.
    # Internal use only.
    ${IdentityDelegatedResource},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterPropertiesIdentityProfile]))]
    [System.Collections.Hashtable]
    # Identities associated with the cluster.
    ${IdentityProfile},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ResourceIdentityType])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ResourceIdentityType]
    # For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
    ${IdentityType},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterIdentityUserAssignedIdentities]))]
    [System.Collections.Hashtable]
    # The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
    ${IdentityUserAssignedIdentity},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable Image Cleaner on AKS cluster.
    ${ImageCleanerEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Int32]
    # Image Cleaner scanning interval in hours.
    ${ImageCleanerIntervalHour},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable image integrity.
    # The default value is false.
    ${ImageIntegrityEnabled},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String[]]
    # The list of revisions of the Istio control plane.
    # When an upgrade is not in progress, this holds one value.
    # When canary upgrade is in progress, this can only hold two consecutive values.
    # For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade
    ${IstioRevision},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable KEDA.
    ${KedaEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # This is primarily used to expose different UI experiences in the portal for different kinds
    ${Kind},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
    ${KubeStateMetricAnnotationsAllowList},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Comma-separated list of Kubernetes annotations keys that will be used in the resource's labels metric.
    ${KubeStateMetricLabelsAllowlist},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped.
    # All upgrades must be performed sequentially by major version number.
    # For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed.
    # See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.
    ${KubernetesVersion},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The administrator username to use for Linux VMs.
    ${LinuxProfileAdminUsername},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable the Prometheus collector
    ${MetricEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IContainerServiceNetworkProfile]
    # The network configuration profile.
    # To construct, see NOTES section for NETWORKPROFILE properties and create a hash table.
    ${NetworkProfile},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeProvisioningMode])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeProvisioningMode]
    # Once the mode it set to Auto, it cannot be changed back to Manual.
    ${NodeProvisioningProfileMode},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The name of the resource group containing agent pool nodes.
    ${NodeResourceGroup},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.RestrictionLevel])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.RestrictionLevel]
    # The restriction level applied to the cluster's node resource group
    ${NodeResourceGroupProfileRestrictionLevel},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable Node Restriction
    ${NodeRestrictionEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether the OIDC issuer is enabled.
    ${OidcIssuerProfileEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.
    ${OpenTelemetryLogEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Int64]
    # The Open Telemetry host port for Open Telemetry logs and traces.
    # If not specified, the default port is 28331.
    ${OpenTelemetryLogPort},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.
    ${OpenTelemetryMetricEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Int64]
    # The Open Telemetry host port for Open Telemetry metrics.
    # If not specified, the default port is 28333.
    ${OpenTelemetryMetricPort},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to force upgrade the cluster.
    # Note that this option instructs upgrade operation to bypass upgrade protections such as checking for deprecated API usage.
    # Enable this option only with caution.
    ${OverrideSettingForceUpgrade},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.DateTime]
    # Until when the overrides are effective.
    # Note that this only matches the start time of an upgrade, and the effectiveness won't change once an upgrade starts even if the `until` expires as upgrade proceeds.
    # This field is not set by default.
    # It must be set for the overrides to take effect.
    ${OverrideSettingUntil},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Certificate chain object name in Azure Key Vault.
    ${PluginCertChainObjectName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Intermediate certificate object name in Azure Key Vault.
    ${PluginCertObjectName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Intermediate certificate private key object name in Azure Key Vault.
    ${PluginKeyObjectName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The resource ID of the Key Vault.
    ${PluginKeyVaultId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Root certificate object name in Azure Key Vault.
    ${PluginRootCertObjectName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing.
    # See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information.
    ${PodIdentityProfileAllowNetworkPluginKubenet},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether the pod identity addon is enabled.
    ${PodIdentityProfileEnabled},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterPodIdentity[]]
    # The pod identities to use in the cluster.
    # To construct, see NOTES section for PODIDENTITYPROFILEUSERASSIGNEDIDENTITY properties and create a hash table.
    ${PodIdentityProfileUserAssignedIdentity},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterPodIdentityException[]]
    # The pod identity exceptions to allow.
    # To construct, see NOTES section for PODIDENTITYPROFILEUSERASSIGNEDIDENTITYEXCEPTION properties and create a hash table.
    ${PodIdentityProfileUserAssignedIdentityException},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IPrivateLinkResource[]]
    # Private link resources associated with the cluster.
    # To construct, see NOTES section for PRIVATELINKRESOURCE properties and create a hash table.
    ${PrivateLinkResource},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PublicNetworkAccess])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PublicNetworkAccess]
    # Allow or deny public network access for AKS
    ${PublicNetworkAccess},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String[]]
    # List of namespaces excluded from Safeguards checks
    ${SafeguardProfileExcludedNamespace},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level]
    # The Safeguards level to be used.
    # By default, Safeguards is enabled for all namespaces except those that AKS excludes via systemExcludedNamespaces
    ${SafeguardProfileLevel},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The version of constraints to use
    ${SafeguardProfileVersion},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable Defender threat detection
    ${SecurityMonitoringEnabled},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(PossibleTypes=([System.Byte[]]))]
    [System.Byte[][]]
    # A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the Custom CA Trust feature enabled.
    # For more information see [Custom CA Trust Certificates](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority)
    ${SecurityProfileCustomCaTrustCertificate},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ServiceMeshMode])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ServiceMeshMode]
    # Mode of the service mesh.
    ${ServiceMeshProfileMode},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The ID for the service principal.
    ${ServicePrincipalProfileClientId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # The secret password associated with the service principal in plain text.
    ${ServicePrincipalProfileSecret},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName]
    # The name of a managed cluster SKU.
    ${SkuName},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier]
    # If not specified, the default is 'Free'.
    # See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers) for more details.
    ${SkuTier},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable Snapshot Controller.
    # The default value is true.
    ${SnapshotControllerEnabled},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IContainerServiceSshPublicKey[]]
    # The list of SSH public keys used to authenticate with Linux-based VMs.
    # A maximum of 1 key may be specified.
    # To construct, see NOTES section for SSHPUBLICKEY properties and create a hash table.
    ${SshPublicKey},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubernetesSupportPlan])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubernetesSupportPlan]
    # The support plan for the Managed Cluster.
    # If unspecified, the default is 'KubernetesOfficial'.
    ${SupportPlan},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api40.ITrackedResourceTags]))]
    [System.Collections.Hashtable]
    # Resource tags.
    ${Tag},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AddonAutoscaling])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AddonAutoscaling]
    # Whether VPA add-on is enabled and configured to scale AKS-managed add-ons.
    ${VerticalPodAutoscalerAddonAutoscaling},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable VPA add-on in cluster.
    # Default value is false.
    ${VerticalPodAutoscalerEnabled},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String[]]
    # Resource IDs of the DNS zones to be associated with the Web App Routing add-on.
    # Used only when Web App Routing is enabled.
    # Public and private DNS zones can be in different resource groups, but all public DNS zones must be in the same resource group and all private DNS zones must be in the same resource group.
    ${WebAppRoutingDnsZoneResourceId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable Web App Routing.
    ${WebAppRoutingEnabled},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Specifies the password of the administrator account.
    # 
    # 
    #  **Minimum-length:** 8 characters 
    # 
    #  **Max-length:** 123 characters 
    # 
    #  **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled 
    #  Has lower characters 
    # Has upper characters 
    #  Has a digit 
    #  Has a special character (Regex match [\W_]) 
    # 
    #  **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
    ${WindowProfileAdminPassword},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.String]
    # Specifies the name of the administrator account.
    # 
    # 
    #  **Restriction:** Cannot end in "." 
    # 
    #  **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5".
    # 
    # 
    #  **Minimum-length:** 1 character 
    # 
    #  **Max-length:** 20 characters
    ${WindowProfileAdminUsername},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).
    ${WindowProfileEnableCsiProxy},

    [Parameter()]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LicenseType])]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LicenseType]
    # The license type to use for Windows VMs.
    # See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.
    ${WindowProfileLicenseType},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether to enable workload identity.
    ${WorkloadIdentityEnabled},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The DefaultProfile parameter is not functional.
    # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $PSVersionTable.PSVersion.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            CreateExpanded = 'Az.ContainerService.private\New-AzContainerServiceManagedCluster_CreateExpanded';
        }
        if (('CreateExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $testPlayback = $false
            $PSBoundParameters['HttpPipelinePrepend'] | Foreach-Object { if ($_) { $testPlayback = $testPlayback -or ('Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.PipelineMock' -eq $_.Target.GetType().FullName -and 'Playback' -eq $_.Target.Mode) } }
            if ($testPlayback) {
                $PSBoundParameters['SubscriptionId'] = . (Join-Path $PSScriptRoot '..' 'utils' 'Get-SubscriptionIdTestSafe.ps1')
            } else {
                $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
            }
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        if ($null -ne $MyInvocation.MyCommand -and [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets -notcontains $MyInvocation.MyCommand.Name -and [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.MessageAttributeHelper]::ContainsPreviewAttribute($cmdInfo, $MyInvocation)){
            [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.MessageAttributeHelper]::ProcessPreviewMessageAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets.Enqueue($MyInvocation.MyCommand.Name)
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
