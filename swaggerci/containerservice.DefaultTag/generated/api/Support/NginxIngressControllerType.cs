// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support
{

    /// <summary>Ingress type for the default NginxIngressController custom resource</summary>
    public partial struct NginxIngressControllerType :
        System.IEquatable<NginxIngressControllerType>
    {
        /// <summary>
        /// The default NginxIngressController will be created. Users can edit the default NginxIngressController Custom Resource
        /// to configure load balancer annotations.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType AnnotationControlled = @"AnnotationControlled";

        /// <summary>
        /// The default NginxIngressController will be created and the operator will provision an external loadbalancer with it. Any
        /// annotation to make the default loadbalancer internal will be overwritten.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType External = @"External";

        /// <summary>
        /// The default NginxIngressController will be created and the operator will provision an internal loadbalancer with it. Any
        /// annotation to make the default loadbalancer external will be overwritten.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType Internal = @"Internal";

        /// <summary>
        /// The default Ingress Controller will not be created. It will not be deleted by the system if it exists. Users should delete
        /// the default NginxIngressController Custom Resource manually if desired.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType None = @"None";

        /// <summary>
        /// the value for an instance of the <see cref="NginxIngressControllerType" /> Enum.
        /// </summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to NginxIngressControllerType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="NginxIngressControllerType" />.</param>
        internal static object CreateFrom(object value)
        {
            return new NginxIngressControllerType(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type NginxIngressControllerType</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type NginxIngressControllerType (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is NginxIngressControllerType && Equals((NginxIngressControllerType)obj);
        }

        /// <summary>Returns hashCode for enum NginxIngressControllerType</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="NginxIngressControllerType"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private NginxIngressControllerType(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for NginxIngressControllerType</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to NginxIngressControllerType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="NginxIngressControllerType" />.</param>

        public static implicit operator NginxIngressControllerType(string value)
        {
            return new NginxIngressControllerType(value);
        }

        /// <summary>Implicit operator to convert NginxIngressControllerType to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="NginxIngressControllerType" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum NginxIngressControllerType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType e1, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum NginxIngressControllerType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType e1, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType e2)
        {
            return e2.Equals(e1);
        }
    }
}