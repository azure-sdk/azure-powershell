// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>Rule for trusted access role</summary>
    public partial class TrustedAccessRoleRule :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240701.ITrustedAccessRoleRule,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240701.ITrustedAccessRoleRuleInternal
    {

        /// <summary>Backing field for <see cref="ApiGroup" /> property.</summary>
        private string[] _apiGroup;

        /// <summary>List of allowed apiGroups</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] ApiGroup { get => this._apiGroup; }

        /// <summary>Internal Acessors for ApiGroup</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240701.ITrustedAccessRoleRuleInternal.ApiGroup { get => this._apiGroup; set { {_apiGroup = value;} } }

        /// <summary>Internal Acessors for NonResourceUrL</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240701.ITrustedAccessRoleRuleInternal.NonResourceUrL { get => this._nonResourceUrL; set { {_nonResourceUrL = value;} } }

        /// <summary>Internal Acessors for Resource</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240701.ITrustedAccessRoleRuleInternal.Resource { get => this._resource; set { {_resource = value;} } }

        /// <summary>Internal Acessors for ResourceName</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240701.ITrustedAccessRoleRuleInternal.ResourceName { get => this._resourceName; set { {_resourceName = value;} } }

        /// <summary>Internal Acessors for Verb</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240701.ITrustedAccessRoleRuleInternal.Verb { get => this._verb; set { {_verb = value;} } }

        /// <summary>Backing field for <see cref="NonResourceUrL" /> property.</summary>
        private string[] _nonResourceUrL;

        /// <summary>List of allowed nonResourceURLs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] NonResourceUrL { get => this._nonResourceUrL; }

        /// <summary>Backing field for <see cref="Resource" /> property.</summary>
        private string[] _resource;

        /// <summary>List of allowed resources</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] Resource { get => this._resource; }

        /// <summary>Backing field for <see cref="ResourceName" /> property.</summary>
        private string[] _resourceName;

        /// <summary>List of allowed names</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] ResourceName { get => this._resourceName; }

        /// <summary>Backing field for <see cref="Verb" /> property.</summary>
        private string[] _verb;

        /// <summary>List of allowed verbs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] Verb { get => this._verb; }

        /// <summary>Creates an new <see cref="TrustedAccessRoleRule" /> instance.</summary>
        public TrustedAccessRoleRule()
        {

        }
    }
    /// Rule for trusted access role
    public partial interface ITrustedAccessRoleRule :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>List of allowed apiGroups</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of allowed apiGroups",
        SerializedName = @"apiGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] ApiGroup { get;  }
        /// <summary>List of allowed nonResourceURLs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of allowed nonResourceURLs",
        SerializedName = @"nonResourceURLs",
        PossibleTypes = new [] { typeof(string) })]
        string[] NonResourceUrL { get;  }
        /// <summary>List of allowed resources</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of allowed resources",
        SerializedName = @"resources",
        PossibleTypes = new [] { typeof(string) })]
        string[] Resource { get;  }
        /// <summary>List of allowed names</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of allowed names",
        SerializedName = @"resourceNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] ResourceName { get;  }
        /// <summary>List of allowed verbs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of allowed verbs",
        SerializedName = @"verbs",
        PossibleTypes = new [] { typeof(string) })]
        string[] Verb { get;  }

    }
    /// Rule for trusted access role
    internal partial interface ITrustedAccessRoleRuleInternal

    {
        /// <summary>List of allowed apiGroups</summary>
        string[] ApiGroup { get; set; }
        /// <summary>List of allowed nonResourceURLs</summary>
        string[] NonResourceUrL { get; set; }
        /// <summary>List of allowed resources</summary>
        string[] Resource { get; set; }
        /// <summary>List of allowed names</summary>
        string[] ResourceName { get; set; }
        /// <summary>List of allowed verbs</summary>
        string[] Verb { get; set; }

    }
}