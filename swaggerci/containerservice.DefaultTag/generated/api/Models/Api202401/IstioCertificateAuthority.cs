// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>
    /// Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described
    /// here https://aka.ms/asm-plugin-ca
    /// </summary>
    public partial class IstioCertificateAuthority :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioCertificateAuthority,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioCertificateAuthorityInternal
    {

        /// <summary>Internal Acessors for Plugin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthority Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioCertificateAuthorityInternal.Plugin { get => (this._plugin = this._plugin ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IstioPluginCertificateAuthority()); set { {_plugin = value;} } }

        /// <summary>Backing field for <see cref="Plugin" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthority _plugin;

        /// <summary>Plugin certificates information for Service Mesh.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthority Plugin { get => (this._plugin = this._plugin ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IstioPluginCertificateAuthority()); set => this._plugin = value; }

        /// <summary>Certificate chain object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginCertChainObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthorityInternal)Plugin).CertChainObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthorityInternal)Plugin).CertChainObjectName = value ?? null; }

        /// <summary>Intermediate certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginCertObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthorityInternal)Plugin).CertObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthorityInternal)Plugin).CertObjectName = value ?? null; }

        /// <summary>Intermediate certificate private key object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginKeyObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthorityInternal)Plugin).KeyObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthorityInternal)Plugin).KeyObjectName = value ?? null; }

        /// <summary>The resource ID of the Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginKeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthorityInternal)Plugin).KeyVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthorityInternal)Plugin).KeyVaultId = value ?? null; }

        /// <summary>Root certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginRootCertObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthorityInternal)Plugin).RootCertObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthorityInternal)Plugin).RootCertObjectName = value ?? null; }

        /// <summary>Creates an new <see cref="IstioCertificateAuthority" /> instance.</summary>
        public IstioCertificateAuthority()
        {

        }
    }
    /// Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described
    /// here https://aka.ms/asm-plugin-ca
    public partial interface IIstioCertificateAuthority :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>Certificate chain object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate chain object name in Azure Key Vault.",
        SerializedName = @"certChainObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginCertChainObjectName { get; set; }
        /// <summary>Intermediate certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Intermediate certificate object name in Azure Key Vault.",
        SerializedName = @"certObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginCertObjectName { get; set; }
        /// <summary>Intermediate certificate private key object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Intermediate certificate private key object name in Azure Key Vault.",
        SerializedName = @"keyObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginKeyObjectName { get; set; }
        /// <summary>The resource ID of the Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the Key Vault.",
        SerializedName = @"keyVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string PluginKeyVaultId { get; set; }
        /// <summary>Root certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Root certificate object name in Azure Key Vault.",
        SerializedName = @"rootCertObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginRootCertObjectName { get; set; }

    }
    /// Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described
    /// here https://aka.ms/asm-plugin-ca
    internal partial interface IIstioCertificateAuthorityInternal

    {
        /// <summary>Plugin certificates information for Service Mesh.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202401.IIstioPluginCertificateAuthority Plugin { get; set; }
        /// <summary>Certificate chain object name in Azure Key Vault.</summary>
        string PluginCertChainObjectName { get; set; }
        /// <summary>Intermediate certificate object name in Azure Key Vault.</summary>
        string PluginCertObjectName { get; set; }
        /// <summary>Intermediate certificate private key object name in Azure Key Vault.</summary>
        string PluginKeyObjectName { get; set; }
        /// <summary>The resource ID of the Key Vault.</summary>
        string PluginKeyVaultId { get; set; }
        /// <summary>Root certificate object name in Azure Key Vault.</summary>
        string PluginRootCertObjectName { get; set; }

    }
}