// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>A managed cluster snapshot resource.</summary>
    public partial class ManagedClusterSnapshot :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshot,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.TrackedResource();

        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string CreationDataSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).CreationDataSourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).CreationDataSourceResourceId = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Whether the cluster has enabled Kubernetes Role-Based Access Control or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ManagedClusterPropertyReadOnlyEnableRbac { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).ManagedClusterPropertyReadOnlyEnableRbac; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).ManagedClusterPropertyReadOnlyEnableRbac = value ?? default(bool); }

        /// <summary>The current kubernetes version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ManagedClusterPropertyReadOnlyKubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).ManagedClusterPropertyReadOnlyKubernetesVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).ManagedClusterPropertyReadOnlyKubernetesVersion = value ?? null; }

        /// <summary>Internal Acessors for CreationData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.ICreationData Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotInternal.CreationData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).CreationData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).CreationData = value; }

        /// <summary>Internal Acessors for ManagedClusterPropertiesReadOnly</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterPropertiesForSnapshot Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotInternal.ManagedClusterPropertiesReadOnly { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).ManagedClusterPropertiesReadOnly; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).ManagedClusterPropertiesReadOnly = value; }

        /// <summary>Internal Acessors for ManagedClusterPropertyReadOnlyNetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.INetworkProfileForSnapshot Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotInternal.ManagedClusterPropertyReadOnlyNetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).ManagedClusterPropertyReadOnlyNetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).ManagedClusterPropertyReadOnlyNetworkProfile = value; }

        /// <summary>Internal Acessors for ManagedClusterPropertyReadOnlySku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSku Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotInternal.ManagedClusterPropertyReadOnlySku { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).ManagedClusterPropertyReadOnlySku; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).ManagedClusterPropertyReadOnlySku = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.ManagedClusterSnapshotProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Name; }

        /// <summary>loadBalancerSku for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku? NetworkProfileLoadBalancerSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).NetworkProfileLoadBalancerSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).NetworkProfileLoadBalancerSku = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku)""); }

        /// <summary>networkMode for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode? NetworkProfileNetworkMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).NetworkProfileNetworkMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).NetworkProfileNetworkMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode)""); }

        /// <summary>networkPlugin for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin? NetworkProfileNetworkPlugin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).NetworkProfileNetworkPlugin; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).NetworkProfileNetworkPlugin = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin)""); }

        /// <summary>NetworkPluginMode for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode? NetworkProfileNetworkPluginMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).NetworkProfileNetworkPluginMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).NetworkProfileNetworkPluginMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode)""); }

        /// <summary>networkPolicy for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy? NetworkProfileNetworkPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).NetworkProfileNetworkPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).NetworkProfileNetworkPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotProperties _property;

        /// <summary>Properties of a managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.ManagedClusterSnapshotProperties()); set => this._property = value; }

        /// <summary>The name of a managed cluster SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).SkuName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName)""); }

        /// <summary>
        /// If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).SkuTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).SkuTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier)""); }

        /// <summary>The type of a snapshot. The default is NodePool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType? SnapshotType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).SnapshotType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotPropertiesInternal)Property).SnapshotType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType)""); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="ManagedClusterSnapshot" /> instance.</summary>
        public ManagedClusterSnapshot()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// A managed cluster snapshot resource.
    public partial interface IManagedClusterSnapshot :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResource
    {
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the ARM ID of the source object to be used to create the target object.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string CreationDataSourceResourceId { get; set; }
        /// <summary>Whether the cluster has enabled Kubernetes Role-Based Access Control or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the cluster has enabled Kubernetes Role-Based Access Control or not.",
        SerializedName = @"enableRbac",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ManagedClusterPropertyReadOnlyEnableRbac { get; set; }
        /// <summary>The current kubernetes version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current kubernetes version.",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedClusterPropertyReadOnlyKubernetesVersion { get; set; }
        /// <summary>loadBalancerSku for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"loadBalancerSku for managed cluster snapshot.",
        SerializedName = @"loadBalancerSku",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku? NetworkProfileLoadBalancerSku { get; set; }
        /// <summary>networkMode for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"networkMode for managed cluster snapshot.",
        SerializedName = @"networkMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode? NetworkProfileNetworkMode { get; set; }
        /// <summary>networkPlugin for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"networkPlugin for managed cluster snapshot.",
        SerializedName = @"networkPlugin",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin? NetworkProfileNetworkPlugin { get; set; }
        /// <summary>NetworkPluginMode for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"NetworkPluginMode for managed cluster snapshot.",
        SerializedName = @"networkPluginMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode? NetworkProfileNetworkPluginMode { get; set; }
        /// <summary>networkPolicy for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"networkPolicy for managed cluster snapshot.",
        SerializedName = @"networkPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy? NetworkProfileNetworkPolicy { get; set; }
        /// <summary>The name of a managed cluster SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of a managed cluster SKU.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName? SkuName { get; set; }
        /// <summary>
        /// If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers) for more details.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier? SkuTier { get; set; }
        /// <summary>The type of a snapshot. The default is NodePool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of a snapshot. The default is NodePool.",
        SerializedName = @"snapshotType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType? SnapshotType { get; set; }

    }
    /// A managed cluster snapshot resource.
    internal partial interface IManagedClusterSnapshotInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal
    {
        /// <summary>
        /// CreationData to be used to specify the source resource ID to create this snapshot.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.ICreationData CreationData { get; set; }
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        string CreationDataSourceResourceId { get; set; }
        /// <summary>
        /// What the properties will be showed when getting managed cluster snapshot. Those properties are read-only.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterPropertiesForSnapshot ManagedClusterPropertiesReadOnly { get; set; }
        /// <summary>Whether the cluster has enabled Kubernetes Role-Based Access Control or not.</summary>
        bool? ManagedClusterPropertyReadOnlyEnableRbac { get; set; }
        /// <summary>The current kubernetes version.</summary>
        string ManagedClusterPropertyReadOnlyKubernetesVersion { get; set; }
        /// <summary>The current network profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.INetworkProfileForSnapshot ManagedClusterPropertyReadOnlyNetworkProfile { get; set; }
        /// <summary>The current managed cluster sku.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSku ManagedClusterPropertyReadOnlySku { get; set; }
        /// <summary>loadBalancerSku for managed cluster snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku? NetworkProfileLoadBalancerSku { get; set; }
        /// <summary>networkMode for managed cluster snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode? NetworkProfileNetworkMode { get; set; }
        /// <summary>networkPlugin for managed cluster snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin? NetworkProfileNetworkPlugin { get; set; }
        /// <summary>NetworkPluginMode for managed cluster snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode? NetworkProfileNetworkPluginMode { get; set; }
        /// <summary>networkPolicy for managed cluster snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy? NetworkProfileNetworkPolicy { get; set; }
        /// <summary>Properties of a managed cluster snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240602Preview.IManagedClusterSnapshotProperties Property { get; set; }
        /// <summary>The name of a managed cluster SKU.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName? SkuName { get; set; }
        /// <summary>
        /// If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers)
        /// for more details.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier? SkuTier { get; set; }
        /// <summary>The type of a snapshot. The default is NodePool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType? SnapshotType { get; set; }

    }
}