// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>Istio service mesh configuration.</summary>
    public partial class IstioServiceMesh :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioServiceMesh,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioServiceMeshInternal
    {

        /// <summary>Backing field for <see cref="CertificateAuthority" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthority _certificateAuthority;

        /// <summary>
        /// Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described
        /// here https://aka.ms/asm-plugin-ca
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthority CertificateAuthority { get => (this._certificateAuthority = this._certificateAuthority ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IstioCertificateAuthority()); set => this._certificateAuthority = value; }

        /// <summary>Backing field for <see cref="Component" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioComponents _component;

        /// <summary>Istio components configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioComponents Component { get => (this._component = this._component ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IstioComponents()); set => this._component = value; }

        /// <summary>Istio egress gateways.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioEgressGateway[] ComponentEgressGateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioComponentsInternal)Component).EgressGateway; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioComponentsInternal)Component).EgressGateway = value ?? null /* arrayOf */; }

        /// <summary>Istio ingress gateways.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioIngressGateway[] ComponentIngressGateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioComponentsInternal)Component).IngressGateway; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioComponentsInternal)Component).IngressGateway = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for CertificateAuthority</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthority Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioServiceMeshInternal.CertificateAuthority { get => (this._certificateAuthority = this._certificateAuthority ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IstioCertificateAuthority()); set { {_certificateAuthority = value;} } }

        /// <summary>Internal Acessors for CertificateAuthorityPlugin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioPluginCertificateAuthority Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioServiceMeshInternal.CertificateAuthorityPlugin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).Plugin; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).Plugin = value; }

        /// <summary>Internal Acessors for Component</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioComponents Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioServiceMeshInternal.Component { get => (this._component = this._component ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IstioComponents()); set { {_component = value;} } }

        /// <summary>Certificate chain object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginCertChainObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).PluginCertChainObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).PluginCertChainObjectName = value ?? null; }

        /// <summary>Intermediate certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginCertObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).PluginCertObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).PluginCertObjectName = value ?? null; }

        /// <summary>Intermediate certificate private key object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginKeyObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).PluginKeyObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).PluginKeyObjectName = value ?? null; }

        /// <summary>The resource ID of the Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginKeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).PluginKeyVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).PluginKeyVaultId = value ?? null; }

        /// <summary>Root certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginRootCertObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).PluginRootCertObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthorityInternal)CertificateAuthority).PluginRootCertObjectName = value ?? null; }

        /// <summary>Backing field for <see cref="Revision" /> property.</summary>
        private string[] _revision;

        /// <summary>
        /// The list of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary
        /// upgrade is in progress, this can only hold two consecutive values. For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] Revision { get => this._revision; set => this._revision = value; }

        /// <summary>Creates an new <see cref="IstioServiceMesh" /> instance.</summary>
        public IstioServiceMesh()
        {

        }
    }
    /// Istio service mesh configuration.
    public partial interface IIstioServiceMesh :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>Istio egress gateways.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Istio egress gateways.",
        SerializedName = @"egressGateways",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioEgressGateway) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioEgressGateway[] ComponentEgressGateway { get; set; }
        /// <summary>Istio ingress gateways.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Istio ingress gateways.",
        SerializedName = @"ingressGateways",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioIngressGateway) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioIngressGateway[] ComponentIngressGateway { get; set; }
        /// <summary>Certificate chain object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate chain object name in Azure Key Vault.",
        SerializedName = @"certChainObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginCertChainObjectName { get; set; }
        /// <summary>Intermediate certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Intermediate certificate object name in Azure Key Vault.",
        SerializedName = @"certObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginCertObjectName { get; set; }
        /// <summary>Intermediate certificate private key object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Intermediate certificate private key object name in Azure Key Vault.",
        SerializedName = @"keyObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginKeyObjectName { get; set; }
        /// <summary>The resource ID of the Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the Key Vault.",
        SerializedName = @"keyVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string PluginKeyVaultId { get; set; }
        /// <summary>Root certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Root certificate object name in Azure Key Vault.",
        SerializedName = @"rootCertObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginRootCertObjectName { get; set; }
        /// <summary>
        /// The list of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary
        /// upgrade is in progress, this can only hold two consecutive values. For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary upgrade is in progress, this can only hold two consecutive values. For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade",
        SerializedName = @"revisions",
        PossibleTypes = new [] { typeof(string) })]
        string[] Revision { get; set; }

    }
    /// Istio service mesh configuration.
    internal partial interface IIstioServiceMeshInternal

    {
        /// <summary>
        /// Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described
        /// here https://aka.ms/asm-plugin-ca
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioCertificateAuthority CertificateAuthority { get; set; }
        /// <summary>Plugin certificates information for Service Mesh.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioPluginCertificateAuthority CertificateAuthorityPlugin { get; set; }
        /// <summary>Istio components configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioComponents Component { get; set; }
        /// <summary>Istio egress gateways.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioEgressGateway[] ComponentEgressGateway { get; set; }
        /// <summary>Istio ingress gateways.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20241001.IIstioIngressGateway[] ComponentIngressGateway { get; set; }
        /// <summary>Certificate chain object name in Azure Key Vault.</summary>
        string PluginCertChainObjectName { get; set; }
        /// <summary>Intermediate certificate object name in Azure Key Vault.</summary>
        string PluginCertObjectName { get; set; }
        /// <summary>Intermediate certificate private key object name in Azure Key Vault.</summary>
        string PluginKeyObjectName { get; set; }
        /// <summary>The resource ID of the Key Vault.</summary>
        string PluginKeyVaultId { get; set; }
        /// <summary>Root certificate object name in Azure Key Vault.</summary>
        string PluginRootCertObjectName { get; set; }
        /// <summary>
        /// The list of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary
        /// upgrade is in progress, this can only hold two consecutive values. For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade
        /// </summary>
        string[] Revision { get; set; }

    }
}