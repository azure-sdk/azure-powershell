// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>
    /// Application Monitoring Profile for Kubernetes Application Container. Collects application logs, metrics and traces through
    /// auto-instrumentation of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
    /// for an overview.
    /// </summary>
    public partial class ManagedClusterAzureMonitorProfileAppMonitoring :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoring,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal
    {

        /// <summary>Backing field for <see cref="AutoInstrumentation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation _autoInstrumentation;

        /// <summary>
        /// Application Monitoring Auto Instrumentation for Kubernetes Application Container. Deploys web hook to auto-instrument
        /// Azure Monitor OpenTelemetry based SDKs to collect OpenTelemetry metrics, logs and traces of the application. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation AutoInstrumentation { get => (this._autoInstrumentation = this._autoInstrumentation ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation()); set => this._autoInstrumentation = value; }

        /// <summary>Indicates if Application Monitoring Auto Instrumentation is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? AutoInstrumentationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentationInternal)AutoInstrumentation).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentationInternal)AutoInstrumentation).Enabled = value ?? default(bool); }

        /// <summary>Internal Acessors for AutoInstrumentation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal.AutoInstrumentation { get => (this._autoInstrumentation = this._autoInstrumentation ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation()); set { {_autoInstrumentation = value;} } }

        /// <summary>Internal Acessors for OpenTelemetryLog</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal.OpenTelemetryLog { get => (this._openTelemetryLog = this._openTelemetryLog ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs()); set { {_openTelemetryLog = value;} } }

        /// <summary>Internal Acessors for OpenTelemetryMetric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal.OpenTelemetryMetric { get => (this._openTelemetryMetric = this._openTelemetryMetric ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics()); set { {_openTelemetryMetric = value;} } }

        /// <summary>Backing field for <see cref="OpenTelemetryLog" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs _openTelemetryLog;

        /// <summary>
        /// Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Logs and Traces. Collects OpenTelemetry
        /// logs and traces of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs OpenTelemetryLog { get => (this._openTelemetryLog = this._openTelemetryLog ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs()); set => this._openTelemetryLog = value; }

        /// <summary>
        /// Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? OpenTelemetryLogEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogsInternal)OpenTelemetryLog).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogsInternal)OpenTelemetryLog).Enabled = value ?? default(bool); }

        /// <summary>
        /// The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public long? OpenTelemetryLogPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogsInternal)OpenTelemetryLog).Port; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogsInternal)OpenTelemetryLog).Port = value ?? default(long); }

        /// <summary>Backing field for <see cref="OpenTelemetryMetric" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics _openTelemetryMetric;

        /// <summary>
        /// Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Metrics. Collects OpenTelemetry
        /// metrics of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics OpenTelemetryMetric { get => (this._openTelemetryMetric = this._openTelemetryMetric ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics()); set => this._openTelemetryMetric = value; }

        /// <summary>Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? OpenTelemetryMetricEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetricsInternal)OpenTelemetryMetric).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetricsInternal)OpenTelemetryMetric).Enabled = value ?? default(bool); }

        /// <summary>
        /// The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public long? OpenTelemetryMetricPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetricsInternal)OpenTelemetryMetric).Port; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetricsInternal)OpenTelemetryMetric).Port = value ?? default(long); }

        /// <summary>
        /// Creates an new <see cref="ManagedClusterAzureMonitorProfileAppMonitoring" /> instance.
        /// </summary>
        public ManagedClusterAzureMonitorProfileAppMonitoring()
        {

        }
    }
    /// Application Monitoring Profile for Kubernetes Application Container. Collects application logs, metrics and traces through
    /// auto-instrumentation of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
    /// for an overview.
    public partial interface IManagedClusterAzureMonitorProfileAppMonitoring :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>Indicates if Application Monitoring Auto Instrumentation is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if Application Monitoring Auto Instrumentation is enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoInstrumentationEnabled { get; set; }
        /// <summary>
        /// Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OpenTelemetryLogEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(long) })]
        long? OpenTelemetryLogPort { get; set; }
        /// <summary>Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OpenTelemetryMetricEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(long) })]
        long? OpenTelemetryMetricPort { get; set; }

    }
    /// Application Monitoring Profile for Kubernetes Application Container. Collects application logs, metrics and traces through
    /// auto-instrumentation of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
    /// for an overview.
    internal partial interface IManagedClusterAzureMonitorProfileAppMonitoringInternal

    {
        /// <summary>
        /// Application Monitoring Auto Instrumentation for Kubernetes Application Container. Deploys web hook to auto-instrument
        /// Azure Monitor OpenTelemetry based SDKs to collect OpenTelemetry metrics, logs and traces of the application. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation AutoInstrumentation { get; set; }
        /// <summary>Indicates if Application Monitoring Auto Instrumentation is enabled or not.</summary>
        bool? AutoInstrumentationEnabled { get; set; }
        /// <summary>
        /// Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Logs and Traces. Collects OpenTelemetry
        /// logs and traces of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs OpenTelemetryLog { get; set; }
        /// <summary>
        /// Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.
        /// </summary>
        bool? OpenTelemetryLogEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.
        /// </summary>
        long? OpenTelemetryLogPort { get; set; }
        /// <summary>
        /// Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Metrics. Collects OpenTelemetry
        /// metrics of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics OpenTelemetryMetric { get; set; }
        /// <summary>Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.</summary>
        bool? OpenTelemetryMetricEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.
        /// </summary>
        long? OpenTelemetryMetricPort { get; set; }

    }
}