// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    public partial class LoadBalancerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllowServicePlacement" /> property.</summary>
        private bool? _allowServicePlacement;

        /// <summary>
        /// Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false
        /// manually, both of the external and the internal load balancer will not be selected for services unless they explicitly
        /// target it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public bool? AllowServicePlacement { get => this._allowServicePlacement; set => this._allowServicePlacement = value; }

        /// <summary>Internal Acessors for NodeSelector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerPropertiesInternal.NodeSelector { get => (this._nodeSelector = this._nodeSelector ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelector()); set { {_nodeSelector = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ServiceLabelSelector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerPropertiesInternal.ServiceLabelSelector { get => (this._serviceLabelSelector = this._serviceLabelSelector ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelector()); set { {_serviceLabelSelector = value;} } }

        /// <summary>Internal Acessors for ServiceNamespaceSelector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerPropertiesInternal.ServiceNamespaceSelector { get => (this._serviceNamespaceSelector = this._serviceNamespaceSelector ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelector()); set { {_serviceNamespaceSelector = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// Name of the public load balancer. There will be an internal load balancer created if needed, and the name will be `<name>-internal`.
        /// The internal lb shares the same configurations as the external one. The internal lbs are not needed to be included in
        /// LoadBalancer list. There must be a name of kubernetes in the list.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="NodeSelector" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector _nodeSelector;

        /// <summary>Nodes that match this selector will be possible members of this load balancer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector NodeSelector { get => (this._nodeSelector = this._nodeSelector ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelector()); set => this._nodeSelector = value; }

        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[] NodeSelectorMatchExpression { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)NodeSelector).MatchExpression; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)NodeSelector).MatchExpression = value ?? null /* arrayOf */; }

        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] NodeSelectorMatchLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)NodeSelector).MatchLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)NodeSelector).MatchLabel = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="PrimaryAgentPoolName" /> property.</summary>
        private string _primaryAgentPoolName;

        /// <summary>
        /// Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always
        /// be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations.
        /// An agent pool can only be the primary pool for a single load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string PrimaryAgentPoolName { get => this._primaryAgentPoolName; set => this._primaryAgentPoolName = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The current provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ServiceLabelSelector" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector _serviceLabelSelector;

        /// <summary>
        /// Only services that must match this selector can be placed on this load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector ServiceLabelSelector { get => (this._serviceLabelSelector = this._serviceLabelSelector ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelector()); set => this._serviceLabelSelector = value; }

        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[] ServiceLabelSelectorMatchExpression { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)ServiceLabelSelector).MatchExpression; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)ServiceLabelSelector).MatchExpression = value ?? null /* arrayOf */; }

        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] ServiceLabelSelectorMatchLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)ServiceLabelSelector).MatchLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)ServiceLabelSelector).MatchLabel = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ServiceNamespaceSelector" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector _serviceNamespaceSelector;

        /// <summary>
        /// Services created in namespaces that match the selector can be placed on this load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector ServiceNamespaceSelector { get => (this._serviceNamespaceSelector = this._serviceNamespaceSelector ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelector()); set => this._serviceNamespaceSelector = value; }

        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[] ServiceNamespaceSelectorMatchExpression { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)ServiceNamespaceSelector).MatchExpression; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)ServiceNamespaceSelector).MatchExpression = value ?? null /* arrayOf */; }

        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] ServiceNamespaceSelectorMatchLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)ServiceNamespaceSelector).MatchLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorInternal)ServiceNamespaceSelector).MatchLabel = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="LoadBalancerProperties" /> instance.</summary>
        public LoadBalancerProperties()
        {

        }
    }
    public partial interface ILoadBalancerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false
        /// manually, both of the external and the internal load balancer will not be selected for services unless they explicitly
        /// target it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false manually, both of the external and the internal load balancer will not be selected for services unless they explicitly target it.",
        SerializedName = @"allowServicePlacement",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowServicePlacement { get; set; }
        /// <summary>
        /// Name of the public load balancer. There will be an internal load balancer created if needed, and the name will be `<name>-internal`.
        /// The internal lb shares the same configurations as the external one. The internal lbs are not needed to be included in
        /// LoadBalancer list. There must be a name of kubernetes in the list.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of the public load balancer. There will be an internal load balancer created if needed, and the name will be `<name>-internal`. The internal lb shares the same configurations as the external one. The internal lbs are not needed to be included in LoadBalancer list. There must be a name of kubernetes in the list.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
        SerializedName = @"matchExpressions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[] NodeSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements are ANDed.",
        SerializedName = @"matchLabels",
        PossibleTypes = new [] { typeof(string) })]
        string[] NodeSelectorMatchLabel { get; set; }
        /// <summary>
        /// Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always
        /// be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations.
        /// An agent pool can only be the primary pool for a single load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations. An agent pool can only be the primary pool for a single load balancer.",
        SerializedName = @"primaryAgentPoolName",
        PossibleTypes = new [] { typeof(string) })]
        string PrimaryAgentPoolName { get; set; }
        /// <summary>The current provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
        SerializedName = @"matchExpressions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[] ServiceLabelSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements are ANDed.",
        SerializedName = @"matchLabels",
        PossibleTypes = new [] { typeof(string) })]
        string[] ServiceLabelSelectorMatchLabel { get; set; }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
        SerializedName = @"matchExpressions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[] ServiceNamespaceSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements are ANDed.",
        SerializedName = @"matchLabels",
        PossibleTypes = new [] { typeof(string) })]
        string[] ServiceNamespaceSelectorMatchLabel { get; set; }

    }
    internal partial interface ILoadBalancerPropertiesInternal

    {
        /// <summary>
        /// Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false
        /// manually, both of the external and the internal load balancer will not be selected for services unless they explicitly
        /// target it.
        /// </summary>
        bool? AllowServicePlacement { get; set; }
        /// <summary>
        /// Name of the public load balancer. There will be an internal load balancer created if needed, and the name will be `<name>-internal`.
        /// The internal lb shares the same configurations as the external one. The internal lbs are not needed to be included in
        /// LoadBalancer list. There must be a name of kubernetes in the list.
        /// </summary>
        string Name { get; set; }
        /// <summary>Nodes that match this selector will be possible members of this load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector NodeSelector { get; set; }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[] NodeSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        string[] NodeSelectorMatchLabel { get; set; }
        /// <summary>
        /// Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always
        /// be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations.
        /// An agent pool can only be the primary pool for a single load balancer.
        /// </summary>
        string PrimaryAgentPoolName { get; set; }
        /// <summary>The current provisioning state.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Only services that must match this selector can be placed on this load balancer.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector ServiceLabelSelector { get; set; }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[] ServiceLabelSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        string[] ServiceLabelSelectorMatchLabel { get; set; }
        /// <summary>
        /// Services created in namespaces that match the selector can be placed on this load balancer.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector ServiceNamespaceSelector { get; set; }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[] ServiceNamespaceSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        string[] ServiceNamespaceSelectorMatchLabel { get; set; }

    }
}