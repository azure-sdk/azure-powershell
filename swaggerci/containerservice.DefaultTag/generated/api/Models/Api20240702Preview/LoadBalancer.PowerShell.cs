// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.PowerShell;

    /// <summary>
    /// The configurations regarding multiple standard load balancers. If not supplied, single load balancer mode will be used.
    /// Multiple standard load balancers mode will be used if at lease one configuration is supplied. There has to be a configuration
    /// named `kubernetes`.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(LoadBalancerTypeConverter))]
    public partial class LoadBalancer
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LoadBalancer"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancer"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancer DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new LoadBalancer(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LoadBalancer"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancer"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancer DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new LoadBalancer(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="LoadBalancer" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="LoadBalancer" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancer FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LoadBalancer"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal LoadBalancer(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LoadBalancerPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceLabelSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector) content.GetValueForProperty("ServiceLabelSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceNamespaceSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector) content.GetValueForProperty("ServiceNamespaceSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector) content.GetValueForProperty("NodeSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("PropertiesName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).PropertiesName = (string) content.GetValueForProperty("PropertiesName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).PropertiesName, global::System.Convert.ToString);
            }
            if (content.Contains("PrimaryAgentPoolName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).PrimaryAgentPoolName = (string) content.GetValueForProperty("PrimaryAgentPoolName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).PrimaryAgentPoolName, global::System.Convert.ToString);
            }
            if (content.Contains("AllowServicePlacement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).AllowServicePlacement = (bool?) content.GetValueForProperty("AllowServicePlacement",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).AllowServicePlacement, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceLabelSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelectorMatchLabel = (string[]) content.GetValueForProperty("ServiceLabelSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceLabelSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("ServiceLabelSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            if (content.Contains("ServiceNamespaceSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelectorMatchLabel = (string[]) content.GetValueForProperty("ServiceNamespaceSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceNamespaceSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("ServiceNamespaceSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            if (content.Contains("NodeSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelectorMatchLabel = (string[]) content.GetValueForProperty("NodeSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NodeSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("NodeSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LoadBalancer"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal LoadBalancer(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LoadBalancerPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceLabelSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector) content.GetValueForProperty("ServiceLabelSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceNamespaceSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector) content.GetValueForProperty("ServiceNamespaceSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelector) content.GetValueForProperty("NodeSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("PropertiesName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).PropertiesName = (string) content.GetValueForProperty("PropertiesName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).PropertiesName, global::System.Convert.ToString);
            }
            if (content.Contains("PrimaryAgentPoolName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).PrimaryAgentPoolName = (string) content.GetValueForProperty("PrimaryAgentPoolName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).PrimaryAgentPoolName, global::System.Convert.ToString);
            }
            if (content.Contains("AllowServicePlacement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).AllowServicePlacement = (bool?) content.GetValueForProperty("AllowServicePlacement",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).AllowServicePlacement, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceLabelSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelectorMatchLabel = (string[]) content.GetValueForProperty("ServiceLabelSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceLabelSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("ServiceLabelSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceLabelSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            if (content.Contains("ServiceNamespaceSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelectorMatchLabel = (string[]) content.GetValueForProperty("ServiceNamespaceSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceNamespaceSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("ServiceNamespaceSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).ServiceNamespaceSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            if (content.Contains("NodeSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelectorMatchLabel = (string[]) content.GetValueForProperty("NodeSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NodeSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("NodeSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILoadBalancerInternal)this).NodeSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The configurations regarding multiple standard load balancers. If not supplied, single load balancer mode will be used.
    /// Multiple standard load balancers mode will be used if at lease one configuration is supplied. There has to be a configuration
    /// named `kubernetes`.
    [System.ComponentModel.TypeConverter(typeof(LoadBalancerTypeConverter))]
    public partial interface ILoadBalancer

    {

    }
}