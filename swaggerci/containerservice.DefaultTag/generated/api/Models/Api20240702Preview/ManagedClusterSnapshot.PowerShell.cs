// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.PowerShell;

    /// <summary>A managed cluster snapshot resource.</summary>
    [System.ComponentModel.TypeConverter(typeof(ManagedClusterSnapshotTypeConverter))]
    public partial class ManagedClusterSnapshot
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterSnapshot"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshot"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshot DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ManagedClusterSnapshot(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterSnapshot"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshot"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshot DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ManagedClusterSnapshot(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ManagedClusterSnapshot" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ManagedClusterSnapshot" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshot FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterSnapshot"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ManagedClusterSnapshot(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterSnapshotPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("CreationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).CreationData = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ICreationData) content.GetValueForProperty("CreationData",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).CreationData, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.CreationDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("SnapshotType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SnapshotType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType?) content.GetValueForProperty("SnapshotType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SnapshotType, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType.CreateFrom);
            }
            if (content.Contains("ManagedClusterPropertiesReadOnly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertiesReadOnly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterPropertiesForSnapshot) content.GetValueForProperty("ManagedClusterPropertiesReadOnly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertiesReadOnly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterPropertiesForSnapshotTypeConverter.ConvertFrom);
            }
            if (content.Contains("CreationDataSourceResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).CreationDataSourceResourceId = (string) content.GetValueForProperty("CreationDataSourceResourceId",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).CreationDataSourceResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedClusterPropertyReadOnlySku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlySku = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSku) content.GetValueForProperty("ManagedClusterPropertyReadOnlySku",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlySku, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterSkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedClusterPropertyReadOnlyNetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyNetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.INetworkProfileForSnapshot) content.GetValueForProperty("ManagedClusterPropertyReadOnlyNetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyNetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.NetworkProfileForSnapshotTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedClusterPropertyReadOnlyKubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyKubernetesVersion = (string) content.GetValueForProperty("ManagedClusterPropertyReadOnlyKubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyKubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedClusterPropertyReadOnlyEnableRbac"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyEnableRbac = (bool?) content.GetValueForProperty("ManagedClusterPropertyReadOnlyEnableRbac",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyEnableRbac, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NetworkProfileNetworkPlugin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPlugin = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin?) content.GetValueForProperty("NetworkProfileNetworkPlugin",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPlugin, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin.CreateFrom);
            }
            if (content.Contains("NetworkProfileNetworkPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPolicy = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy?) content.GetValueForProperty("NetworkProfileNetworkPolicy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPolicy, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy.CreateFrom);
            }
            if (content.Contains("NetworkProfileNetworkMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkMode = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode?) content.GetValueForProperty("NetworkProfileNetworkMode",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkMode, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode.CreateFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SkuName = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName?) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SkuName, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName.CreateFrom);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SkuTier = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier?) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SkuTier, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier.CreateFrom);
            }
            if (content.Contains("NetworkProfileNetworkPluginMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPluginMode = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode?) content.GetValueForProperty("NetworkProfileNetworkPluginMode",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPluginMode, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode.CreateFrom);
            }
            if (content.Contains("NetworkProfileLoadBalancerSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileLoadBalancerSku = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku?) content.GetValueForProperty("NetworkProfileLoadBalancerSku",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileLoadBalancerSku, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterSnapshot"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ManagedClusterSnapshot(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterSnapshotPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("CreationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).CreationData = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ICreationData) content.GetValueForProperty("CreationData",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).CreationData, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.CreationDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("SnapshotType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SnapshotType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType?) content.GetValueForProperty("SnapshotType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SnapshotType, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType.CreateFrom);
            }
            if (content.Contains("ManagedClusterPropertiesReadOnly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertiesReadOnly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterPropertiesForSnapshot) content.GetValueForProperty("ManagedClusterPropertiesReadOnly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertiesReadOnly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterPropertiesForSnapshotTypeConverter.ConvertFrom);
            }
            if (content.Contains("CreationDataSourceResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).CreationDataSourceResourceId = (string) content.GetValueForProperty("CreationDataSourceResourceId",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).CreationDataSourceResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedClusterPropertyReadOnlySku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlySku = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSku) content.GetValueForProperty("ManagedClusterPropertyReadOnlySku",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlySku, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.ManagedClusterSkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedClusterPropertyReadOnlyNetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyNetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.INetworkProfileForSnapshot) content.GetValueForProperty("ManagedClusterPropertyReadOnlyNetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyNetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.NetworkProfileForSnapshotTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedClusterPropertyReadOnlyKubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyKubernetesVersion = (string) content.GetValueForProperty("ManagedClusterPropertyReadOnlyKubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyKubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedClusterPropertyReadOnlyEnableRbac"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyEnableRbac = (bool?) content.GetValueForProperty("ManagedClusterPropertyReadOnlyEnableRbac",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).ManagedClusterPropertyReadOnlyEnableRbac, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NetworkProfileNetworkPlugin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPlugin = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin?) content.GetValueForProperty("NetworkProfileNetworkPlugin",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPlugin, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin.CreateFrom);
            }
            if (content.Contains("NetworkProfileNetworkPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPolicy = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy?) content.GetValueForProperty("NetworkProfileNetworkPolicy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPolicy, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy.CreateFrom);
            }
            if (content.Contains("NetworkProfileNetworkMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkMode = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode?) content.GetValueForProperty("NetworkProfileNetworkMode",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkMode, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode.CreateFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SkuName = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName?) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SkuName, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName.CreateFrom);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SkuTier = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier?) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).SkuTier, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier.CreateFrom);
            }
            if (content.Contains("NetworkProfileNetworkPluginMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPluginMode = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode?) content.GetValueForProperty("NetworkProfileNetworkPluginMode",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileNetworkPluginMode, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode.CreateFrom);
            }
            if (content.Contains("NetworkProfileLoadBalancerSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileLoadBalancerSku = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku?) content.GetValueForProperty("NetworkProfileLoadBalancerSku",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240702Preview.IManagedClusterSnapshotInternal)this).NetworkProfileLoadBalancerSku, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A managed cluster snapshot resource.
    [System.ComponentModel.TypeConverter(typeof(ManagedClusterSnapshotTypeConverter))]
    public partial interface IManagedClusterSnapshot

    {

    }
}