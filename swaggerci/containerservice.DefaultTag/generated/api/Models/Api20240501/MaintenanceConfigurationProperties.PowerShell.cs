// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501
{
    using Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.PowerShell;

    /// <summary>Properties used to configure planned maintenance for a Managed Cluster.</summary>
    [System.ComponentModel.TypeConverter(typeof(MaintenanceConfigurationPropertiesTypeConverter))]
    public partial class MaintenanceConfigurationProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.MaintenanceConfigurationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new MaintenanceConfigurationProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.MaintenanceConfigurationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new MaintenanceConfigurationProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="MaintenanceConfigurationProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="MaintenanceConfigurationProperties" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.MaintenanceConfigurationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal MaintenanceConfigurationProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindow = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceWindow) content.GetValueForProperty("MaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindow, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.MaintenanceWindowTypeConverter.ConvertFrom);
            }
            if (content.Contains("TimeInWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).TimeInWeek = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ITimeInWeek[]) content.GetValueForProperty("TimeInWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).TimeInWeek, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ITimeInWeek>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.TimeInWeekTypeConverter.ConvertFrom));
            }
            if (content.Contains("NotAllowedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).NotAllowedTime = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ITimeSpan[]) content.GetValueForProperty("NotAllowedTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).NotAllowedTime, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ITimeSpan>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.TimeSpanTypeConverter.ConvertFrom));
            }
            if (content.Contains("MaintenanceWindowSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowSchedule = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ISchedule) content.GetValueForProperty("MaintenanceWindowSchedule",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowSchedule, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("MaintenanceWindowDurationHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowDurationHour = (int) content.GetValueForProperty("MaintenanceWindowDurationHour",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowDurationHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MaintenanceWindowUtcOffset"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowUtcOffset = (string) content.GetValueForProperty("MaintenanceWindowUtcOffset",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowUtcOffset, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowStartDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowStartDate = (global::System.DateTime?) content.GetValueForProperty("MaintenanceWindowStartDate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowStartDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("MaintenanceWindowStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowStartTime = (string) content.GetValueForProperty("MaintenanceWindowStartTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowStartTime, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowNotAllowedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowNotAllowedDate = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IDateSpan[]) content.GetValueForProperty("MaintenanceWindowNotAllowedDate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowNotAllowedDate, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IDateSpan>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.DateSpanTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScheduleDaily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleDaily = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IDailySchedule) content.GetValueForProperty("ScheduleDaily",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleDaily, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.DailyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleWeekly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleWeekly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IWeeklySchedule) content.GetValueForProperty("ScheduleWeekly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleWeekly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.WeeklyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleAbsoluteMonthly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleAbsoluteMonthly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IAbsoluteMonthlySchedule) content.GetValueForProperty("ScheduleAbsoluteMonthly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleAbsoluteMonthly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.AbsoluteMonthlyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleRelativeMonthly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleRelativeMonthly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IRelativeMonthlySchedule) content.GetValueForProperty("ScheduleRelativeMonthly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleRelativeMonthly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.RelativeMonthlyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("DailyIntervalDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).DailyIntervalDay = (int) content.GetValueForProperty("DailyIntervalDay",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).DailyIntervalDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WeeklyIntervalWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).WeeklyIntervalWeek = (int) content.GetValueForProperty("WeeklyIntervalWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).WeeklyIntervalWeek, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WeeklyDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).WeeklyDayOfWeek = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) content.GetValueForProperty("WeeklyDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).WeeklyDayOfWeek, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay.CreateFrom);
            }
            if (content.Contains("AbsoluteMonthlyIntervalMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).AbsoluteMonthlyIntervalMonth = (int) content.GetValueForProperty("AbsoluteMonthlyIntervalMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).AbsoluteMonthlyIntervalMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AbsoluteMonthlyDayOfMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).AbsoluteMonthlyDayOfMonth = (int) content.GetValueForProperty("AbsoluteMonthlyDayOfMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).AbsoluteMonthlyDayOfMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RelativeMonthlyIntervalMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyIntervalMonth = (int) content.GetValueForProperty("RelativeMonthlyIntervalMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyIntervalMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RelativeMonthlyWeekIndex"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyWeekIndex = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type) content.GetValueForProperty("RelativeMonthlyWeekIndex",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyWeekIndex, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type.CreateFrom);
            }
            if (content.Contains("RelativeMonthlyDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyDayOfWeek = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) content.GetValueForProperty("RelativeMonthlyDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyDayOfWeek, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.MaintenanceConfigurationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal MaintenanceConfigurationProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindow = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceWindow) content.GetValueForProperty("MaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindow, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.MaintenanceWindowTypeConverter.ConvertFrom);
            }
            if (content.Contains("TimeInWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).TimeInWeek = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ITimeInWeek[]) content.GetValueForProperty("TimeInWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).TimeInWeek, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ITimeInWeek>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.TimeInWeekTypeConverter.ConvertFrom));
            }
            if (content.Contains("NotAllowedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).NotAllowedTime = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ITimeSpan[]) content.GetValueForProperty("NotAllowedTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).NotAllowedTime, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ITimeSpan>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.TimeSpanTypeConverter.ConvertFrom));
            }
            if (content.Contains("MaintenanceWindowSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowSchedule = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ISchedule) content.GetValueForProperty("MaintenanceWindowSchedule",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowSchedule, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.ScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("MaintenanceWindowDurationHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowDurationHour = (int) content.GetValueForProperty("MaintenanceWindowDurationHour",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowDurationHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MaintenanceWindowUtcOffset"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowUtcOffset = (string) content.GetValueForProperty("MaintenanceWindowUtcOffset",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowUtcOffset, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowStartDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowStartDate = (global::System.DateTime?) content.GetValueForProperty("MaintenanceWindowStartDate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowStartDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("MaintenanceWindowStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowStartTime = (string) content.GetValueForProperty("MaintenanceWindowStartTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowStartTime, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowNotAllowedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowNotAllowedDate = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IDateSpan[]) content.GetValueForProperty("MaintenanceWindowNotAllowedDate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).MaintenanceWindowNotAllowedDate, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IDateSpan>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.DateSpanTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScheduleDaily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleDaily = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IDailySchedule) content.GetValueForProperty("ScheduleDaily",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleDaily, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.DailyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleWeekly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleWeekly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IWeeklySchedule) content.GetValueForProperty("ScheduleWeekly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleWeekly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.WeeklyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleAbsoluteMonthly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleAbsoluteMonthly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IAbsoluteMonthlySchedule) content.GetValueForProperty("ScheduleAbsoluteMonthly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleAbsoluteMonthly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.AbsoluteMonthlyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleRelativeMonthly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleRelativeMonthly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IRelativeMonthlySchedule) content.GetValueForProperty("ScheduleRelativeMonthly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).ScheduleRelativeMonthly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.RelativeMonthlyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("DailyIntervalDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).DailyIntervalDay = (int) content.GetValueForProperty("DailyIntervalDay",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).DailyIntervalDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WeeklyIntervalWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).WeeklyIntervalWeek = (int) content.GetValueForProperty("WeeklyIntervalWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).WeeklyIntervalWeek, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WeeklyDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).WeeklyDayOfWeek = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) content.GetValueForProperty("WeeklyDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).WeeklyDayOfWeek, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay.CreateFrom);
            }
            if (content.Contains("AbsoluteMonthlyIntervalMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).AbsoluteMonthlyIntervalMonth = (int) content.GetValueForProperty("AbsoluteMonthlyIntervalMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).AbsoluteMonthlyIntervalMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AbsoluteMonthlyDayOfMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).AbsoluteMonthlyDayOfMonth = (int) content.GetValueForProperty("AbsoluteMonthlyDayOfMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).AbsoluteMonthlyDayOfMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RelativeMonthlyIntervalMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyIntervalMonth = (int) content.GetValueForProperty("RelativeMonthlyIntervalMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyIntervalMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RelativeMonthlyWeekIndex"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyWeekIndex = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type) content.GetValueForProperty("RelativeMonthlyWeekIndex",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyWeekIndex, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type.CreateFrom);
            }
            if (content.Contains("RelativeMonthlyDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyDayOfWeek = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) content.GetValueForProperty("RelativeMonthlyDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240501.IMaintenanceConfigurationPropertiesInternal)this).RelativeMonthlyDayOfWeek, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Properties used to configure planned maintenance for a Managed Cluster.
    [System.ComponentModel.TypeConverter(typeof(MaintenanceConfigurationPropertiesTypeConverter))]
    public partial interface IMaintenanceConfigurationProperties

    {

    }
}