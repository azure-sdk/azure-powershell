// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>Properties for a managed cluster snapshot.</summary>
    public partial class ManagedClusterSnapshotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterSnapshotProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterSnapshotPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreationData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.ICreationData _creationData;

        /// <summary>
        /// CreationData to be used to specify the source resource ID to create this snapshot.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.ICreationData CreationData { get => (this._creationData = this._creationData ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.CreationData()); set => this._creationData = value; }

        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string CreationDataSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.ICreationDataInternal)CreationData).SourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.ICreationDataInternal)CreationData).SourceResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="ManagedClusterPropertiesReadOnly" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshot _managedClusterPropertiesReadOnly;

        /// <summary>
        /// What the properties will be showed when getting managed cluster snapshot. Those properties are read-only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshot ManagedClusterPropertiesReadOnly { get => (this._managedClusterPropertiesReadOnly = this._managedClusterPropertiesReadOnly ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.ManagedClusterPropertiesForSnapshot()); }

        /// <summary>Whether the cluster has enabled Kubernetes Role-Based Access Control or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ManagedClusterPropertyReadOnlyEnableRbac { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).EnableRbac; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).EnableRbac = value ?? default(bool); }

        /// <summary>The current kubernetes version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ManagedClusterPropertyReadOnlyKubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).KubernetesVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).KubernetesVersion = value ?? null; }

        /// <summary>Internal Acessors for CreationData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.ICreationData Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterSnapshotPropertiesInternal.CreationData { get => (this._creationData = this._creationData ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.CreationData()); set { {_creationData = value;} } }

        /// <summary>Internal Acessors for ManagedClusterPropertiesReadOnly</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshot Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterSnapshotPropertiesInternal.ManagedClusterPropertiesReadOnly { get => (this._managedClusterPropertiesReadOnly = this._managedClusterPropertiesReadOnly ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.ManagedClusterPropertiesForSnapshot()); set { {_managedClusterPropertiesReadOnly = value;} } }

        /// <summary>Internal Acessors for ManagedClusterPropertyReadOnlyNetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.INetworkProfileForSnapshot Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterSnapshotPropertiesInternal.ManagedClusterPropertyReadOnlyNetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfile = value; }

        /// <summary>Internal Acessors for ManagedClusterPropertyReadOnlySku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterSku Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterSnapshotPropertiesInternal.ManagedClusterPropertyReadOnlySku { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).Sku = value; }

        /// <summary>loadBalancerSku for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku? NetworkProfileLoadBalancerSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfileLoadBalancerSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfileLoadBalancerSku = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku)""); }

        /// <summary>networkMode for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode? NetworkProfileNetworkMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfileNetworkMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfileNetworkMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode)""); }

        /// <summary>networkPlugin for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin? NetworkProfileNetworkPlugin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfileNetworkPlugin; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfileNetworkPlugin = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin)""); }

        /// <summary>NetworkPluginMode for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode? NetworkProfileNetworkPluginMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfileNetworkPluginMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfileNetworkPluginMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode)""); }

        /// <summary>networkPolicy for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy? NetworkProfileNetworkPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfileNetworkPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).NetworkProfileNetworkPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy)""); }

        /// <summary>The name of a managed cluster SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).SkuName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName)""); }

        /// <summary>
        /// If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).SkuTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshotInternal)ManagedClusterPropertiesReadOnly).SkuTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier)""); }

        /// <summary>Backing field for <see cref="SnapshotType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType? _snapshotType;

        /// <summary>The type of a snapshot. The default is NodePool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType? SnapshotType { get => this._snapshotType; set => this._snapshotType = value; }

        /// <summary>Creates an new <see cref="ManagedClusterSnapshotProperties" /> instance.</summary>
        public ManagedClusterSnapshotProperties()
        {

        }
    }
    /// Properties for a managed cluster snapshot.
    public partial interface IManagedClusterSnapshotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the ARM ID of the source object to be used to create the target object.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string CreationDataSourceResourceId { get; set; }
        /// <summary>Whether the cluster has enabled Kubernetes Role-Based Access Control or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the cluster has enabled Kubernetes Role-Based Access Control or not.",
        SerializedName = @"enableRbac",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ManagedClusterPropertyReadOnlyEnableRbac { get; set; }
        /// <summary>The current kubernetes version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current kubernetes version.",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedClusterPropertyReadOnlyKubernetesVersion { get; set; }
        /// <summary>loadBalancerSku for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"loadBalancerSku for managed cluster snapshot.",
        SerializedName = @"loadBalancerSku",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku? NetworkProfileLoadBalancerSku { get; set; }
        /// <summary>networkMode for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"networkMode for managed cluster snapshot.",
        SerializedName = @"networkMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode? NetworkProfileNetworkMode { get; set; }
        /// <summary>networkPlugin for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"networkPlugin for managed cluster snapshot.",
        SerializedName = @"networkPlugin",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin? NetworkProfileNetworkPlugin { get; set; }
        /// <summary>NetworkPluginMode for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"NetworkPluginMode for managed cluster snapshot.",
        SerializedName = @"networkPluginMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode? NetworkProfileNetworkPluginMode { get; set; }
        /// <summary>networkPolicy for managed cluster snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"networkPolicy for managed cluster snapshot.",
        SerializedName = @"networkPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy? NetworkProfileNetworkPolicy { get; set; }
        /// <summary>The name of a managed cluster SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of a managed cluster SKU.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName? SkuName { get; set; }
        /// <summary>
        /// If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers) for more details.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier? SkuTier { get; set; }
        /// <summary>The type of a snapshot. The default is NodePool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of a snapshot. The default is NodePool.",
        SerializedName = @"snapshotType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType? SnapshotType { get; set; }

    }
    /// Properties for a managed cluster snapshot.
    internal partial interface IManagedClusterSnapshotPropertiesInternal

    {
        /// <summary>
        /// CreationData to be used to specify the source resource ID to create this snapshot.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.ICreationData CreationData { get; set; }
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        string CreationDataSourceResourceId { get; set; }
        /// <summary>
        /// What the properties will be showed when getting managed cluster snapshot. Those properties are read-only.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterPropertiesForSnapshot ManagedClusterPropertiesReadOnly { get; set; }
        /// <summary>Whether the cluster has enabled Kubernetes Role-Based Access Control or not.</summary>
        bool? ManagedClusterPropertyReadOnlyEnableRbac { get; set; }
        /// <summary>The current kubernetes version.</summary>
        string ManagedClusterPropertyReadOnlyKubernetesVersion { get; set; }
        /// <summary>The current network profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.INetworkProfileForSnapshot ManagedClusterPropertyReadOnlyNetworkProfile { get; set; }
        /// <summary>The current managed cluster sku.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240902Preview.IManagedClusterSku ManagedClusterPropertyReadOnlySku { get; set; }
        /// <summary>loadBalancerSku for managed cluster snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LoadBalancerSku? NetworkProfileLoadBalancerSku { get; set; }
        /// <summary>networkMode for managed cluster snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkMode? NetworkProfileNetworkMode { get; set; }
        /// <summary>networkPlugin for managed cluster snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPlugin? NetworkProfileNetworkPlugin { get; set; }
        /// <summary>NetworkPluginMode for managed cluster snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPluginMode? NetworkProfileNetworkPluginMode { get; set; }
        /// <summary>networkPolicy for managed cluster snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NetworkPolicy? NetworkProfileNetworkPolicy { get; set; }
        /// <summary>The name of a managed cluster SKU.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName? SkuName { get; set; }
        /// <summary>
        /// If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers)
        /// for more details.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier? SkuTier { get; set; }
        /// <summary>The type of a snapshot. The default is NodePool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.SnapshotType? SnapshotType { get; set; }

    }
}