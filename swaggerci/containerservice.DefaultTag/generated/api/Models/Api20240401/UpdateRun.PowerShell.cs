// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401
{
    using Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Runtime.PowerShell;

    /// <summary>A multi-stage process to perform update operations across members of a Fleet.</summary>
    [System.ComponentModel.TypeConverter(typeof(UpdateRunTypeConverter))]
    public partial class UpdateRun
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateRun"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRun"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRun DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new UpdateRun(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateRun"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRun"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRun DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new UpdateRun(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="UpdateRun" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="UpdateRun" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRun FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateRun"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal UpdateRun(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateRunPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("RetryAfter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).RetryAfter = (int?) content.GetValueForProperty("RetryAfter",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).RetryAfter, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Strategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Strategy = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunStrategy) content.GetValueForProperty("Strategy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Strategy, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateRunStrategyTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedClusterUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdate = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IManagedClusterUpdate) content.GetValueForProperty("ManagedClusterUpdate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdate, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.ManagedClusterUpdateTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunStatus) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateRunStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.UpdateRunProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.UpdateRunProvisioningState.CreateFrom);
            }
            if (content.Contains("UpdateStrategyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpdateStrategyId = (string) content.GetValueForProperty("UpdateStrategyId",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpdateStrategyId, global::System.Convert.ToString);
            }
            if (content.Contains("UpdateStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpdateStatus = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateStatus) content.GetValueForProperty("UpdateStatus",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpdateStatus, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("StrategyStage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StrategyStage = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateStage[]) content.GetValueForProperty("StrategyStage",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StrategyStage, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateStage>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateStageTypeConverter.ConvertFrom));
            }
            if (content.Contains("ManagedClusterUpdateUpgrade"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdateUpgrade = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IManagedClusterUpgradeSpec) content.GetValueForProperty("ManagedClusterUpdateUpgrade",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdateUpgrade, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.ManagedClusterUpgradeSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedClusterUpdateNodeImageSelection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdateNodeImageSelection = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.INodeImageSelection) content.GetValueForProperty("ManagedClusterUpdateNodeImageSelection",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdateNodeImageSelection, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.NodeImageSelectionTypeConverter.ConvertFrom);
            }
            if (content.Contains("UpgradeKubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpgradeKubernetesVersion = (string) content.GetValueForProperty("UpgradeKubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpgradeKubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("NodeImageSelectionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).NodeImageSelectionType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.NodeImageSelectionType) content.GetValueForProperty("NodeImageSelectionType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).NodeImageSelectionType, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.NodeImageSelectionType.CreateFrom);
            }
            if (content.Contains("StatusNodeImageSelection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusNodeImageSelection = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.INodeImageSelectionStatus) content.GetValueForProperty("StatusNodeImageSelection",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusNodeImageSelection, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.NodeImageSelectionStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("StatusStage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusStage = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateStageStatus[]) content.GetValueForProperty("StatusStage",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusStage, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateStageStatus>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateStageStatusTypeConverter.ConvertFrom));
            }
            if (content.Contains("StatusError"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusError = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IErrorDetail) content.GetValueForProperty("StatusError",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusError, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.ErrorDetailTypeConverter.ConvertFrom);
            }
            if (content.Contains("StatusStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusStartTime = (global::System.DateTime?) content.GetValueForProperty("StatusStartTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusStartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StatusCompletedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusCompletedTime = (global::System.DateTime?) content.GetValueForProperty("StatusCompletedTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusCompletedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StatusState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusState = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.UpdateState?) content.GetValueForProperty("StatusState",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusState, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.UpdateState.CreateFrom);
            }
            if (content.Contains("UpgradeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpgradeType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.ManagedClusterUpgradeType) content.GetValueForProperty("UpgradeType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpgradeType, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.ManagedClusterUpgradeType.CreateFrom);
            }
            if (content.Contains("NodeImageSelectionSelectedNodeImageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).NodeImageSelectionSelectedNodeImageVersion = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.INodeImageVersion[]) content.GetValueForProperty("NodeImageSelectionSelectedNodeImageVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).NodeImageSelectionSelectedNodeImageVersion, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.INodeImageVersion>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.NodeImageVersionTypeConverter.ConvertFrom));
            }
            if (content.Contains("Code"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Code = (string) content.GetValueForProperty("Code",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Code, global::System.Convert.ToString);
            }
            if (content.Contains("Message"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Message = (string) content.GetValueForProperty("Message",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Message, global::System.Convert.ToString);
            }
            if (content.Contains("Target"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Target = (string) content.GetValueForProperty("Target",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Target, global::System.Convert.ToString);
            }
            if (content.Contains("Detail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Detail = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IErrorDetail[]) content.GetValueForProperty("Detail",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Detail, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IErrorDetail>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.ErrorDetailTypeConverter.ConvertFrom));
            }
            if (content.Contains("AdditionalInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).AdditionalInfo = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IErrorAdditionalInfo[]) content.GetValueForProperty("AdditionalInfo",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).AdditionalInfo, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IErrorAdditionalInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.ErrorAdditionalInfoTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateRun"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal UpdateRun(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateRunPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ETag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ETag = (string) content.GetValueForProperty("ETag",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ETag, global::System.Convert.ToString);
            }
            if (content.Contains("RetryAfter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).RetryAfter = (int?) content.GetValueForProperty("RetryAfter",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).RetryAfter, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Strategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Strategy = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunStrategy) content.GetValueForProperty("Strategy",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Strategy, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateRunStrategyTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedClusterUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdate = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IManagedClusterUpdate) content.GetValueForProperty("ManagedClusterUpdate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdate, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.ManagedClusterUpdateTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunStatus) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateRunStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.UpdateRunProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.UpdateRunProvisioningState.CreateFrom);
            }
            if (content.Contains("UpdateStrategyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpdateStrategyId = (string) content.GetValueForProperty("UpdateStrategyId",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpdateStrategyId, global::System.Convert.ToString);
            }
            if (content.Contains("UpdateStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpdateStatus = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateStatus) content.GetValueForProperty("UpdateStatus",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpdateStatus, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("StrategyStage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StrategyStage = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateStage[]) content.GetValueForProperty("StrategyStage",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StrategyStage, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateStage>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateStageTypeConverter.ConvertFrom));
            }
            if (content.Contains("ManagedClusterUpdateUpgrade"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdateUpgrade = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IManagedClusterUpgradeSpec) content.GetValueForProperty("ManagedClusterUpdateUpgrade",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdateUpgrade, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.ManagedClusterUpgradeSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedClusterUpdateNodeImageSelection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdateNodeImageSelection = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.INodeImageSelection) content.GetValueForProperty("ManagedClusterUpdateNodeImageSelection",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).ManagedClusterUpdateNodeImageSelection, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.NodeImageSelectionTypeConverter.ConvertFrom);
            }
            if (content.Contains("UpgradeKubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpgradeKubernetesVersion = (string) content.GetValueForProperty("UpgradeKubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpgradeKubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("NodeImageSelectionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).NodeImageSelectionType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.NodeImageSelectionType) content.GetValueForProperty("NodeImageSelectionType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).NodeImageSelectionType, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.NodeImageSelectionType.CreateFrom);
            }
            if (content.Contains("StatusNodeImageSelection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusNodeImageSelection = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.INodeImageSelectionStatus) content.GetValueForProperty("StatusNodeImageSelection",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusNodeImageSelection, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.NodeImageSelectionStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("StatusStage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusStage = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateStageStatus[]) content.GetValueForProperty("StatusStage",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusStage, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateStageStatus>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.UpdateStageStatusTypeConverter.ConvertFrom));
            }
            if (content.Contains("StatusError"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusError = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IErrorDetail) content.GetValueForProperty("StatusError",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusError, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.ErrorDetailTypeConverter.ConvertFrom);
            }
            if (content.Contains("StatusStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusStartTime = (global::System.DateTime?) content.GetValueForProperty("StatusStartTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusStartTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StatusCompletedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusCompletedTime = (global::System.DateTime?) content.GetValueForProperty("StatusCompletedTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusCompletedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StatusState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusState = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.UpdateState?) content.GetValueForProperty("StatusState",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).StatusState, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.UpdateState.CreateFrom);
            }
            if (content.Contains("UpgradeType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpgradeType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.ManagedClusterUpgradeType) content.GetValueForProperty("UpgradeType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).UpgradeType, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Support.ManagedClusterUpgradeType.CreateFrom);
            }
            if (content.Contains("NodeImageSelectionSelectedNodeImageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).NodeImageSelectionSelectedNodeImageVersion = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.INodeImageVersion[]) content.GetValueForProperty("NodeImageSelectionSelectedNodeImageVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).NodeImageSelectionSelectedNodeImageVersion, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.INodeImageVersion>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.NodeImageVersionTypeConverter.ConvertFrom));
            }
            if (content.Contains("Code"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Code = (string) content.GetValueForProperty("Code",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Code, global::System.Convert.ToString);
            }
            if (content.Contains("Message"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Message = (string) content.GetValueForProperty("Message",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Message, global::System.Convert.ToString);
            }
            if (content.Contains("Target"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Target = (string) content.GetValueForProperty("Target",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Target, global::System.Convert.ToString);
            }
            if (content.Contains("Detail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Detail = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IErrorDetail[]) content.GetValueForProperty("Detail",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).Detail, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IErrorDetail>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.ErrorDetailTypeConverter.ConvertFrom));
            }
            if (content.Contains("AdditionalInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).AdditionalInfo = (Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IErrorAdditionalInfo[]) content.GetValueForProperty("AdditionalInfo",((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api20240401.IUpdateRunInternal)this).AdditionalInfo, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.IErrorAdditionalInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleetForTesting.Models.Api30.ErrorAdditionalInfoTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// A multi-stage process to perform update operations across members of a Fleet.
    [System.ComponentModel.TypeConverter(typeof(UpdateRunTypeConverter))]
    public partial interface IUpdateRun

    {

    }
}