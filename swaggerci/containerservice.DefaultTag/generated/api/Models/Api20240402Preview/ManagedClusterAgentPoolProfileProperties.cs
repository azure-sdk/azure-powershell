// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>Properties for the container service agent pool profile.</summary>
    public partial class ManagedClusterAgentPoolProfileProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfileProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ArtifactStreamingProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolArtifactStreamingProfile _artifactStreamingProfile;

        /// <summary>Configuration for using artifact streaming on AKS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolArtifactStreamingProfile ArtifactStreamingProfile { get => (this._artifactStreamingProfile = this._artifactStreamingProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolArtifactStreamingProfile()); set => this._artifactStreamingProfile = value; }

        /// <summary>
        /// Artifact streaming speeds up the cold-start of containers on a node through on-demand image loading. To use this feature,
        /// container images must also enable artifact streaming on ACR. If not specified, the default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ArtifactStreamingProfileEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolArtifactStreamingProfileInternal)ArtifactStreamingProfile).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolArtifactStreamingProfileInternal)ArtifactStreamingProfile).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="AvailabilityZone" /> property.</summary>
        private string[] _availabilityZone;

        /// <summary>
        /// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] AvailabilityZone { get => this._availabilityZone; set => this._availabilityZone = value; }

        /// <summary>Backing field for <see cref="CapacityReservationGroupId" /> property.</summary>
        private string _capacityReservationGroupId;

        /// <summary>
        /// AKS will associate the specified agent pool with the Capacity Reservation Group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string CapacityReservationGroupId { get => this._capacityReservationGroupId; set => this._capacityReservationGroupId = value; }

        /// <summary>Backing field for <see cref="Count" /> property.</summary>
        private int? _count;

        /// <summary>
        /// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user
        /// pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public int? Count { get => this._count; set => this._count = value; }

        /// <summary>Backing field for <see cref="CreationData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ICreationData _creationData;

        /// <summary>
        /// CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ICreationData CreationData { get => (this._creationData = this._creationData ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.CreationData()); set => this._creationData = value; }

        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string CreationDataSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ICreationDataInternal)CreationData).SourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ICreationDataInternal)CreationData).SourceResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="CurrentOrchestratorVersion" /> property.</summary>
        private string _currentOrchestratorVersion;

        /// <summary>
        /// If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion
        /// was <major.minor>, this field will contain the full <major.minor.patch> version being used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string CurrentOrchestratorVersion { get => this._currentOrchestratorVersion; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>
        /// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated.
        /// Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency
        /// per the normal etag convention.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; }

        /// <summary>Backing field for <see cref="EnableAutoScaling" /> property.</summary>
        private bool? _enableAutoScaling;

        /// <summary>Whether to enable auto-scaler</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public bool? EnableAutoScaling { get => this._enableAutoScaling; set => this._enableAutoScaling = value; }

        /// <summary>Backing field for <see cref="EnableCustomCaTrust" /> property.</summary>
        private bool? _enableCustomCaTrust;

        /// <summary>
        /// When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a daemonset along with
        /// host services to sync custom certificate authorities from user-provided list of base64 encoded certificates into node
        /// trust stores. Defaults to false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public bool? EnableCustomCaTrust { get => this._enableCustomCaTrust; set => this._enableCustomCaTrust = value; }

        /// <summary>Backing field for <see cref="EnableEncryptionAtHost" /> property.</summary>
        private bool? _enableEncryptionAtHost;

        /// <summary>
        /// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public bool? EnableEncryptionAtHost { get => this._enableEncryptionAtHost; set => this._enableEncryptionAtHost = value; }

        /// <summary>Backing field for <see cref="EnableFips" /> property.</summary>
        private bool? _enableFips;

        /// <summary>
        /// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public bool? EnableFips { get => this._enableFips; set => this._enableFips = value; }

        /// <summary>Backing field for <see cref="EnableNodePublicIP" /> property.</summary>
        private bool? _enableNodePublicIP;

        /// <summary>
        /// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario
        /// is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops.
        /// For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools).
        /// The default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public bool? EnableNodePublicIP { get => this._enableNodePublicIP; set => this._enableNodePublicIP = value; }

        /// <summary>Backing field for <see cref="EnableUltraSsd" /> property.</summary>
        private bool? _enableUltraSsd;

        /// <summary>Whether to enable UltraSSD</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public bool? EnableUltraSsd { get => this._enableUltraSsd; set => this._enableUltraSsd = value; }

        /// <summary>Backing field for <see cref="GatewayProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGatewayProfile _gatewayProfile;

        /// <summary>
        /// Profile specific to a managed agent pool in Gateway mode. This field cannot be set if agent pool mode is not Gateway.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGatewayProfile GatewayProfile { get => (this._gatewayProfile = this._gatewayProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolGatewayProfile()); set => this._gatewayProfile = value; }

        /// <summary>
        /// The Gateway agent pool associates one public IPPrefix for each static egress gateway to provide public egress. The size
        /// of Public IPPrefix should be selected by the user. Each node in the agent pool is assigned with one IP from the IPPrefix.
        /// The IPPrefix size thus serves as a cap on the size of the Gateway agent pool. Due to Azure public IPPrefix size limitation,
        /// the valid value range is [28, 31] (/31 = 2 nodes/IPs, /30 = 4 nodes/IPs, /29 = 8 nodes/IPs, /28 = 16 nodes/IPs). The default
        /// value is 31.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? GatewayProfilePublicIPPrefixSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGatewayProfileInternal)GatewayProfile).PublicIPPrefixSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGatewayProfileInternal)GatewayProfile).PublicIPPrefixSize = value ?? default(int); }

        /// <summary>Backing field for <see cref="GpuInstanceProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.GpuInstanceProfile? _gpuInstanceProfile;

        /// <summary>
        /// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.GpuInstanceProfile? GpuInstanceProfile { get => this._gpuInstanceProfile; set => this._gpuInstanceProfile = value; }

        /// <summary>Backing field for <see cref="GpuProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGpuProfile _gpuProfile;

        /// <summary>The GPU settings of an agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGpuProfile GpuProfile { get => (this._gpuProfile = this._gpuProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolGpuProfile()); set => this._gpuProfile = value; }

        /// <summary>
        /// The default value is true when the vmSize of the agent pool contains a GPU, false otherwise. GPU Driver Installation can
        /// only be set true when VM has an associated GPU resource. Setting this field to false prevents automatic GPU driver installation.
        /// In that case, in order for the GPU to be usable, the user must perform GPU driver installation themselves.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? GpuProfileInstallGpuDriver { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGpuProfileInternal)GpuProfile).InstallGpuDriver; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGpuProfileInternal)GpuProfile).InstallGpuDriver = value ?? default(bool); }

        /// <summary>Backing field for <see cref="HostGroupId" /> property.</summary>
        private string _hostGroupId;

        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
        /// For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string HostGroupId { get => this._hostGroupId; set => this._hostGroupId = value; }

        /// <summary>Backing field for <see cref="KubeletConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfig _kubeletConfig;

        /// <summary>The Kubelet configuration on the agent pool nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfig KubeletConfig { get => (this._kubeletConfig = this._kubeletConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.KubeletConfig()); set => this._kubeletConfig = value; }

        /// <summary>Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] KubeletConfigAllowedUnsafeSysctl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).AllowedUnsafeSysctl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).AllowedUnsafeSysctl = value ?? null /* arrayOf */; }

        /// <summary>
        /// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? KubeletConfigContainerLogMaxFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).ContainerLogMaxFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).ContainerLogMaxFile = value ?? default(int); }

        /// <summary>The maximum size (e.g. 10Mi) of container log file before it is rotated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? KubeletConfigContainerLogMaxSizeMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).ContainerLogMaxSizeMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).ContainerLogMaxSizeMb = value ?? default(int); }

        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? KubeletConfigCpuCfsQuota { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).CpuCfsQuota; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).CpuCfsQuota = value ?? default(bool); }

        /// <summary>
        /// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For
        /// example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string KubeletConfigCpuCfsQuotaPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).CpuCfsQuotaPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).CpuCfsQuotaPeriod = value ?? null; }

        /// <summary>
        /// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies)
        /// for more information. Allowed values are 'none' and 'static'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string KubeletConfigCpuManagerPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).CpuManagerPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).CpuManagerPolicy = value ?? null; }

        /// <summary>
        /// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? KubeletConfigFailSwapOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).FailSwapOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).FailSwapOn = value ?? default(bool); }

        /// <summary>To disable image garbage collection, set to 100. The default is 85%</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? KubeletConfigImageGcHighThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).ImageGcHighThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).ImageGcHighThreshold = value ?? default(int); }

        /// <summary>This cannot be set higher than imageGcHighThreshold. The default is 80%</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? KubeletConfigImageGcLowThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).ImageGcLowThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).ImageGcLowThreshold = value ?? default(int); }

        /// <summary>The maximum number of processes per pod.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? KubeletConfigPodMaxPid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).PodMaxPid; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).PodMaxPid = value ?? default(int); }

        /// <summary>
        /// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager).
        /// The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string KubeletConfigTopologyManagerPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).TopologyManagerPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfigInternal)KubeletConfig).TopologyManagerPolicy = value ?? null; }

        /// <summary>Backing field for <see cref="KubeletDiskType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubeletDiskType? _kubeletDiskType;

        /// <summary>
        /// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubeletDiskType? KubeletDiskType { get => this._kubeletDiskType; set => this._kubeletDiskType = value; }

        /// <summary>Backing field for <see cref="LinuxOSConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfig _linuxOSConfig;

        /// <summary>The OS configuration of Linux agent nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfig LinuxOSConfig { get => (this._linuxOSConfig = this._linuxOSConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.LinuxOSConfig()); set => this._linuxOSConfig = value; }

        /// <summary>The size in MB of a swap file that will be created on each node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? LinuxOSConfigSwapFileSizeMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfigInternal)LinuxOSConfig).SwapFileSizeMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfigInternal)LinuxOSConfig).SwapFileSizeMb = value ?? default(int); }

        /// <summary>Sysctl settings for Linux agent nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ISysctlConfig LinuxOSConfigSysctl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfigInternal)LinuxOSConfig).Sysctl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfigInternal)LinuxOSConfig).Sysctl = value ?? null /* model class */; }

        /// <summary>
        /// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information
        /// see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string LinuxOSConfigTransparentHugePageDefrag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfigInternal)LinuxOSConfig).TransparentHugePageDefrag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfigInternal)LinuxOSConfig).TransparentHugePageDefrag = value ?? null; }

        /// <summary>
        /// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string LinuxOSConfigTransparentHugePageEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfigInternal)LinuxOSConfig).TransparentHugePageEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfigInternal)LinuxOSConfig).TransparentHugePageEnabled = value ?? null; }

        /// <summary>Backing field for <see cref="MaxCount" /> property.</summary>
        private int? _maxCount;

        /// <summary>The maximum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public int? MaxCount { get => this._maxCount; set => this._maxCount = value; }

        /// <summary>Backing field for <see cref="MaxPod" /> property.</summary>
        private int? _maxPod;

        /// <summary>The maximum number of pods that can run on a node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public int? MaxPod { get => this._maxPod; set => this._maxPod = value; }

        /// <summary>Backing field for <see cref="MessageOfTheDay" /> property.</summary>
        private string _messageOfTheDay;

        /// <summary>
        /// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of
        /// the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed
        /// raw and not be executed as a script).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string MessageOfTheDay { get => this._messageOfTheDay; set => this._messageOfTheDay = value; }

        /// <summary>Internal Acessors for ArtifactStreamingProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolArtifactStreamingProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.ArtifactStreamingProfile { get => (this._artifactStreamingProfile = this._artifactStreamingProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolArtifactStreamingProfile()); set { {_artifactStreamingProfile = value;} } }

        /// <summary>Internal Acessors for CreationData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ICreationData Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.CreationData { get => (this._creationData = this._creationData ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.CreationData()); set { {_creationData = value;} } }

        /// <summary>Internal Acessors for CurrentOrchestratorVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.CurrentOrchestratorVersion { get => this._currentOrchestratorVersion; set { {_currentOrchestratorVersion = value;} } }

        /// <summary>Internal Acessors for ETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.ETag { get => this._eTag; set { {_eTag = value;} } }

        /// <summary>Internal Acessors for GatewayProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGatewayProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.GatewayProfile { get => (this._gatewayProfile = this._gatewayProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolGatewayProfile()); set { {_gatewayProfile = value;} } }

        /// <summary>Internal Acessors for GpuProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGpuProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.GpuProfile { get => (this._gpuProfile = this._gpuProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolGpuProfile()); set { {_gpuProfile = value;} } }

        /// <summary>Internal Acessors for KubeletConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfig Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.KubeletConfig { get => (this._kubeletConfig = this._kubeletConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.KubeletConfig()); set { {_kubeletConfig = value;} } }

        /// <summary>Internal Acessors for LinuxOSConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfig Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.LinuxOSConfig { get => (this._linuxOSConfig = this._linuxOSConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.LinuxOSConfig()); set { {_linuxOSConfig = value;} } }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolNetworkProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolNetworkProfile()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for NodeImageVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.NodeImageVersion { get => this._nodeImageVersion; set { {_nodeImageVersion = value;} } }

        /// <summary>Internal Acessors for PowerState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IPowerState Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.PowerState { get => (this._powerState = this._powerState ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.PowerState()); set { {_powerState = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for SecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolSecurityProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.SecurityProfile { get => (this._securityProfile = this._securityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolSecurityProfile()); set { {_securityProfile = value;} } }

        /// <summary>Internal Acessors for UpgradeSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettings Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.UpgradeSetting { get => (this._upgradeSetting = this._upgradeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolUpgradeSettings()); set { {_upgradeSetting = value;} } }

        /// <summary>Internal Acessors for VirtualMachineProfileScale</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IScaleProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.VirtualMachineProfileScale { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachinesProfileInternal)VirtualMachinesProfile).Scale; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachinesProfileInternal)VirtualMachinesProfile).Scale = value; }

        /// <summary>Internal Acessors for VirtualMachinesProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachinesProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.VirtualMachinesProfile { get => (this._virtualMachinesProfile = this._virtualMachinesProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.VirtualMachinesProfile()); set { {_virtualMachinesProfile = value;} } }

        /// <summary>Internal Acessors for WindowsProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolWindowsProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesInternal.WindowsProfile { get => (this._windowsProfile = this._windowsProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolWindowsProfile()); set { {_windowsProfile = value;} } }

        /// <summary>Backing field for <see cref="MinCount" /> property.</summary>
        private int? _minCount;

        /// <summary>The minimum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public int? MinCount { get => this._minCount; set => this._minCount = value; }

        /// <summary>Backing field for <see cref="Mode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolMode? _mode;

        /// <summary>
        /// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions
        /// and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolMode? Mode { get => this._mode; set => this._mode = value; }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolNetworkProfile _networkProfile;

        /// <summary>Network-related settings of an agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolNetworkProfile NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolNetworkProfile()); set => this._networkProfile = value; }

        /// <summary>
        /// The port ranges that are allowed to access. The specified ranges are allowed to overlap.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IPortRange[] NetworkProfileAllowedHostPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolNetworkProfileInternal)NetworkProfile).AllowedHostPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolNetworkProfileInternal)NetworkProfile).AllowedHostPort = value ?? null /* arrayOf */; }

        /// <summary>
        /// The IDs of the application security groups which agent pool will associate when created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] NetworkProfileApplicationSecurityGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolNetworkProfileInternal)NetworkProfile).ApplicationSecurityGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolNetworkProfileInternal)NetworkProfile).ApplicationSecurityGroup = value ?? null /* arrayOf */; }

        /// <summary>IPTags of instance-level public IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IIPTag[] NetworkProfileNodePublicIPTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolNetworkProfileInternal)NetworkProfile).NodePublicIPTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolNetworkProfileInternal)NetworkProfile).NodePublicIPTag = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="NodeImageVersion" /> property.</summary>
        private string _nodeImageVersion;

        /// <summary>The version of node image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string NodeImageVersion { get => this._nodeImageVersion; }

        /// <summary>Backing field for <see cref="NodeInitializationTaint" /> property.</summary>
        private string[] _nodeInitializationTaint;

        /// <summary>
        /// These taints will not be reconciled by AKS and can be removed with a kubectl call. This field can be modified after node
        /// pool is created, but nodes will not be recreated with new taints until another operation that requires recreation (e.g.
        /// node image upgrade) happens. These taints allow for required configuration to run before the node is ready to accept workloads,
        /// for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint nodes node1 key1=value1:NoSchedule-`
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] NodeInitializationTaint { get => this._nodeInitializationTaint; set => this._nodeInitializationTaint = value; }

        /// <summary>Backing field for <see cref="NodeLabel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesNodeLabels _nodeLabel;

        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesNodeLabels NodeLabel { get => (this._nodeLabel = this._nodeLabel ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ManagedClusterAgentPoolProfilePropertiesNodeLabels()); set => this._nodeLabel = value; }

        /// <summary>Backing field for <see cref="NodePublicIPPrefixId" /> property.</summary>
        private string _nodePublicIPPrefixId;

        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string NodePublicIPPrefixId { get => this._nodePublicIPPrefixId; set => this._nodePublicIPPrefixId = value; }

        /// <summary>Backing field for <see cref="NodeTaint" /> property.</summary>
        private string[] _nodeTaint;

        /// <summary>
        /// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] NodeTaint { get => this._nodeTaint; set => this._nodeTaint = value; }

        /// <summary>Backing field for <see cref="OSDiskSizeGb" /> property.</summary>
        private int? _oSDiskSizeGb;

        /// <summary>
        /// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it
        /// will apply the default osDisk size according to the vmSize specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public int? OSDiskSizeGb { get => this._oSDiskSizeGb; set => this._oSDiskSizeGb = value; }

        /// <summary>Backing field for <see cref="OSDiskType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSDiskType? _oSDiskType;

        /// <summary>
        /// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise,
        /// defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSDiskType? OSDiskType { get => this._oSDiskType; set => this._oSDiskType = value; }

        /// <summary>Backing field for <see cref="OSSku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Ossku? _oSSku;

        /// <summary>
        /// Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if
        /// OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Ossku? OSSku { get => this._oSSku; set => this._oSSku = value; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSType? _oSType;

        /// <summary>The operating system type. The default is Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSType? OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="OrchestratorVersion" /> property.</summary>
        private string _orchestratorVersion;

        /// <summary>
        /// Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported
        /// patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will
        /// not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools
        /// in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control
        /// plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version
        /// cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string OrchestratorVersion { get => this._orchestratorVersion; set => this._orchestratorVersion = value; }

        /// <summary>Backing field for <see cref="PodIPAllocationMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PodIPAllocationMode? _podIPAllocationMode;

        /// <summary>
        /// The IP allocation mode for pods in the agent pool. Must be used with podSubnetId. The default is 'DynamicIndividual'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PodIPAllocationMode? PodIPAllocationMode { get => this._podIPAllocationMode; set => this._podIPAllocationMode = value; }

        /// <summary>Backing field for <see cref="PodSubnetId" /> property.</summary>
        private string _podSubnetId;

        /// <summary>
        /// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form:
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string PodSubnetId { get => this._podSubnetId; set => this._podSubnetId = value; }

        /// <summary>Backing field for <see cref="PowerState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IPowerState _powerState;

        /// <summary>
        /// When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped.
        /// A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it
        /// is Running and provisioning state is Succeeded
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IPowerState PowerState { get => (this._powerState = this._powerState ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.PowerState()); set => this._powerState = value; }

        /// <summary>Tells whether the cluster is Running or Stopped</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Code? PowerStateCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IPowerStateInternal)PowerState).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IPowerStateInternal)PowerState).Code = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Code)""); }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The current deployment or provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ProximityPlacementGroupId" /> property.</summary>
        private string _proximityPlacementGroupId;

        /// <summary>The ID for Proximity Placement Group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string ProximityPlacementGroupId { get => this._proximityPlacementGroupId; set => this._proximityPlacementGroupId = value; }

        /// <summary>
        /// Specifications on how to auto-scale the VirtualMachines agent pool within a predefined size range. Currently, at most
        /// one AutoScaleProfile is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAutoScaleProfile[] ScaleAutoscale { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachinesProfileInternal)VirtualMachinesProfile).ScaleAutoscale; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachinesProfileInternal)VirtualMachinesProfile).ScaleAutoscale = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ScaleDownMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleDownMode? _scaleDownMode;

        /// <summary>
        /// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleDownMode? ScaleDownMode { get => this._scaleDownMode; set => this._scaleDownMode = value; }

        /// <summary>
        /// Specifications on how to scale the VirtualMachines agent pool to a fixed size. Currently, at most one ManualScaleProfile
        /// is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManualScaleProfile[] ScaleManual { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachinesProfileInternal)VirtualMachinesProfile).ScaleManual; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachinesProfileInternal)VirtualMachinesProfile).ScaleManual = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ScaleSetEvictionPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleSetEvictionPolicy? _scaleSetEvictionPolicy;

        /// <summary>
        /// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleSetEvictionPolicy? ScaleSetEvictionPolicy { get => this._scaleSetEvictionPolicy; set => this._scaleSetEvictionPolicy = value; }

        /// <summary>Backing field for <see cref="ScaleSetPriority" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleSetPriority? _scaleSetPriority;

        /// <summary>
        /// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleSetPriority? ScaleSetPriority { get => this._scaleSetPriority; set => this._scaleSetPriority = value; }

        /// <summary>Backing field for <see cref="SecurityProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolSecurityProfile _securityProfile;

        /// <summary>The security settings of an agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolSecurityProfile SecurityProfile { get => (this._securityProfile = this._securityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolSecurityProfile()); set => this._securityProfile = value; }

        /// <summary>
        /// Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and drivers can boot. For
        /// more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? SecurityProfileEnableSecureBoot { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolSecurityProfileInternal)SecurityProfile).EnableSecureBoot; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolSecurityProfileInternal)SecurityProfile).EnableSecureBoot = value ?? default(bool); }

        /// <summary>
        /// vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held locally on the
        /// node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? SecurityProfileEnableVtpm { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolSecurityProfileInternal)SecurityProfile).EnableVtpm; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolSecurityProfileInternal)SecurityProfile).EnableVtpm = value ?? default(bool); }

        /// <summary>SSH access method of an agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolSshAccess? SecurityProfileSshAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolSecurityProfileInternal)SecurityProfile).SshAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolSecurityProfileInternal)SecurityProfile).SshAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolSshAccess)""); }

        /// <summary>Backing field for <see cref="SpotMaxPrice" /> property.</summary>
        private float? _spotMaxPrice;

        /// <summary>
        /// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price.
        /// For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public float? SpotMaxPrice { get => this._spotMaxPrice; set => this._spotMaxPrice = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesTags _tag;

        /// <summary>The tags to be persisted on the agent pool virtual machine scale set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ManagedClusterAgentPoolProfilePropertiesTags()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolType? _type;

        /// <summary>The type of Agent Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolType? Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="UpgradeSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettings _upgradeSetting;

        /// <summary>Settings for upgrading the agentpool</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettings UpgradeSetting { get => (this._upgradeSetting = this._upgradeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolUpgradeSettings()); set => this._upgradeSetting = value; }

        /// <summary>
        /// The amount of time (in minutes) to wait on eviction of pods and graceful termination per node. This eviction wait time
        /// honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not specified, the default is
        /// 30 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? UpgradeSettingDrainTimeoutInMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettingsInternal)UpgradeSetting).DrainTimeoutInMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettingsInternal)UpgradeSetting).DrainTimeoutInMinute = value ?? default(int); }

        /// <summary>
        /// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the
        /// percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up.
        /// If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string UpgradeSettingMaxSurge { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettingsInternal)UpgradeSetting).MaxSurge; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettingsInternal)UpgradeSetting).MaxSurge = value ?? null; }

        /// <summary>
        /// The amount of time (in minutes) to wait after draining a node and before reimaging it and moving on to next node. If not
        /// specified, the default is 0 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? UpgradeSettingNodeSoakDurationInMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettingsInternal)UpgradeSetting).NodeSoakDurationInMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettingsInternal)UpgradeSetting).NodeSoakDurationInMinute = value ?? default(int); }

        /// <summary>
        /// Defines the behavior for undrainable nodes during upgrade. The most common cause of undrainable nodes is Pod Disruption
        /// Budgets (PDBs), but other issues, such as pod termination grace period is exceeding the remaining per-node drain timeout
        /// or pod is still being in a running state, can also cause undrainable nodes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UndrainableNodeBehavior? UpgradeSettingUndrainableNodeBehavior { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettingsInternal)UpgradeSetting).UndrainableNodeBehavior; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettingsInternal)UpgradeSetting).UndrainableNodeBehavior = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UndrainableNodeBehavior)""); }

        /// <summary>Backing field for <see cref="VMSize" /> property.</summary>
        private string _vMSize;

        /// <summary>
        /// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might
        /// fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string VMSize { get => this._vMSize; set => this._vMSize = value; }

        /// <summary>Backing field for <see cref="VirtualMachineNodesStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachineNodes[] _virtualMachineNodesStatus;

        /// <summary>The status of nodes in a VirtualMachines agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachineNodes[] VirtualMachineNodesStatus { get => this._virtualMachineNodesStatus; set => this._virtualMachineNodesStatus = value; }

        /// <summary>Backing field for <see cref="VirtualMachinesProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachinesProfile _virtualMachinesProfile;

        /// <summary>Specifications on VirtualMachines agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachinesProfile VirtualMachinesProfile { get => (this._virtualMachinesProfile = this._virtualMachinesProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.VirtualMachinesProfile()); set => this._virtualMachinesProfile = value; }

        /// <summary>Backing field for <see cref="VnetSubnetId" /> property.</summary>
        private string _vnetSubnetId;

        /// <summary>
        /// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to
        /// nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string VnetSubnetId { get => this._vnetSubnetId; set => this._vnetSubnetId = value; }

        /// <summary>
        /// The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT Gateway and the Windows
        /// agent pool does not have node public IP enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? WindowProfileDisableOutboundNat { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolWindowsProfileInternal)WindowsProfile).DisableOutboundNat; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolWindowsProfileInternal)WindowsProfile).DisableOutboundNat = value ?? default(bool); }

        /// <summary>Backing field for <see cref="WindowsProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolWindowsProfile _windowsProfile;

        /// <summary>The Windows agent pool's specific profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolWindowsProfile WindowsProfile { get => (this._windowsProfile = this._windowsProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.AgentPoolWindowsProfile()); set => this._windowsProfile = value; }

        /// <summary>Backing field for <see cref="WorkloadRuntime" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WorkloadRuntime? _workloadRuntime;

        /// <summary>Determines the type of workload a node can run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WorkloadRuntime? WorkloadRuntime { get => this._workloadRuntime; set => this._workloadRuntime = value; }

        /// <summary>
        /// Creates an new <see cref="ManagedClusterAgentPoolProfileProperties" /> instance.
        /// </summary>
        public ManagedClusterAgentPoolProfileProperties()
        {

        }
    }
    /// Properties for the container service agent pool profile.
    public partial interface IManagedClusterAgentPoolProfileProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Artifact streaming speeds up the cold-start of containers on a node through on-demand image loading. To use this feature,
        /// container images must also enable artifact streaming on ACR. If not specified, the default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Artifact streaming speeds up the cold-start of containers on a node through on-demand image loading. To use this feature, container images must also enable artifact streaming on ACR. If not specified, the default is false.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ArtifactStreamingProfileEnabled { get; set; }
        /// <summary>
        /// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.",
        SerializedName = @"availabilityZones",
        PossibleTypes = new [] { typeof(string) })]
        string[] AvailabilityZone { get; set; }
        /// <summary>
        /// AKS will associate the specified agent pool with the Capacity Reservation Group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"AKS will associate the specified agent pool with the Capacity Reservation Group.",
        SerializedName = @"capacityReservationGroupID",
        PossibleTypes = new [] { typeof(string) })]
        string CapacityReservationGroupId { get; set; }
        /// <summary>
        /// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user
        /// pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? Count { get; set; }
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the ARM ID of the source object to be used to create the target object.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string CreationDataSourceResourceId { get; set; }
        /// <summary>
        /// If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion
        /// was <major.minor>, this field will contain the full <major.minor.patch> version being used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.",
        SerializedName = @"currentOrchestratorVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentOrchestratorVersion { get;  }
        /// <summary>
        /// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated.
        /// Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency
        /// per the normal etag convention.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal etag convention.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get;  }
        /// <summary>Whether to enable auto-scaler</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable auto-scaler",
        SerializedName = @"enableAutoScaling",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAutoScaling { get; set; }
        /// <summary>
        /// When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a daemonset along with
        /// host services to sync custom certificate authorities from user-provided list of base64 encoded certificates into node
        /// trust stores. Defaults to false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded certificates into node trust stores. Defaults to false.",
        SerializedName = @"enableCustomCATrust",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableCustomCaTrust { get; set; }
        /// <summary>
        /// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption",
        SerializedName = @"enableEncryptionAtHost",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableEncryptionAtHost { get; set; }
        /// <summary>
        /// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.",
        SerializedName = @"enableFIPS",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableFips { get; set; }
        /// <summary>
        /// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario
        /// is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops.
        /// For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools).
        /// The default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.",
        SerializedName = @"enableNodePublicIP",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableNodePublicIP { get; set; }
        /// <summary>Whether to enable UltraSSD</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable UltraSSD",
        SerializedName = @"enableUltraSSD",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableUltraSsd { get; set; }
        /// <summary>
        /// The Gateway agent pool associates one public IPPrefix for each static egress gateway to provide public egress. The size
        /// of Public IPPrefix should be selected by the user. Each node in the agent pool is assigned with one IP from the IPPrefix.
        /// The IPPrefix size thus serves as a cap on the size of the Gateway agent pool. Due to Azure public IPPrefix size limitation,
        /// the valid value range is [28, 31] (/31 = 2 nodes/IPs, /30 = 4 nodes/IPs, /29 = 8 nodes/IPs, /28 = 16 nodes/IPs). The default
        /// value is 31.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Gateway agent pool associates one public IPPrefix for each static egress gateway to provide public egress. The size of Public IPPrefix should be selected by the user. Each node in the agent pool is assigned with one IP from the IPPrefix. The IPPrefix size thus serves as a cap on the size of the Gateway agent pool. Due to Azure public IPPrefix size limitation, the valid value range is [28, 31] (/31 = 2 nodes/IPs, /30 = 4 nodes/IPs, /29 = 8 nodes/IPs, /28 = 16 nodes/IPs). The default value is 31.",
        SerializedName = @"publicIPPrefixSize",
        PossibleTypes = new [] { typeof(int) })]
        int? GatewayProfilePublicIPPrefixSize { get; set; }
        /// <summary>
        /// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.",
        SerializedName = @"gpuInstanceProfile",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.GpuInstanceProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.GpuInstanceProfile? GpuInstanceProfile { get; set; }
        /// <summary>
        /// The default value is true when the vmSize of the agent pool contains a GPU, false otherwise. GPU Driver Installation can
        /// only be set true when VM has an associated GPU resource. Setting this field to false prevents automatic GPU driver installation.
        /// In that case, in order for the GPU to be usable, the user must perform GPU driver installation themselves.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default value is true when the vmSize of the agent pool contains a GPU, false otherwise. GPU Driver Installation can only be set true when VM has an associated GPU resource. Setting this field to false prevents automatic GPU driver installation. In that case, in order for the GPU to be usable, the user must perform GPU driver installation themselves.",
        SerializedName = @"installGPUDriver",
        PossibleTypes = new [] { typeof(bool) })]
        bool? GpuProfileInstallGpuDriver { get; set; }
        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
        /// For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).",
        SerializedName = @"hostGroupID",
        PossibleTypes = new [] { typeof(string) })]
        string HostGroupId { get; set; }
        /// <summary>Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).",
        SerializedName = @"allowedUnsafeSysctls",
        PossibleTypes = new [] { typeof(string) })]
        string[] KubeletConfigAllowedUnsafeSysctl { get; set; }
        /// <summary>
        /// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of container log files that can be present for a container. The number must be ≥ 2.",
        SerializedName = @"containerLogMaxFiles",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeletConfigContainerLogMaxFile { get; set; }
        /// <summary>The maximum size (e.g. 10Mi) of container log file before it is rotated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum size (e.g. 10Mi) of container log file before it is rotated.",
        SerializedName = @"containerLogMaxSizeMB",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeletConfigContainerLogMaxSizeMb { get; set; }
        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is true.",
        SerializedName = @"cpuCfsQuota",
        PossibleTypes = new [] { typeof(bool) })]
        bool? KubeletConfigCpuCfsQuota { get; set; }
        /// <summary>
        /// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For
        /// example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.",
        SerializedName = @"cpuCfsQuotaPeriod",
        PossibleTypes = new [] { typeof(string) })]
        string KubeletConfigCpuCfsQuotaPeriod { get; set; }
        /// <summary>
        /// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies)
        /// for more information. Allowed values are 'none' and 'static'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.",
        SerializedName = @"cpuManagerPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string KubeletConfigCpuManagerPolicy { get; set; }
        /// <summary>
        /// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If set to true it will make the Kubelet fail to start if swap is enabled on the node.",
        SerializedName = @"failSwapOn",
        PossibleTypes = new [] { typeof(bool) })]
        bool? KubeletConfigFailSwapOn { get; set; }
        /// <summary>To disable image garbage collection, set to 100. The default is 85%</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To disable image garbage collection, set to 100. The default is 85%",
        SerializedName = @"imageGcHighThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeletConfigImageGcHighThreshold { get; set; }
        /// <summary>This cannot be set higher than imageGcHighThreshold. The default is 80%</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This cannot be set higher than imageGcHighThreshold. The default is 80%",
        SerializedName = @"imageGcLowThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeletConfigImageGcLowThreshold { get; set; }
        /// <summary>The maximum number of processes per pod.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of processes per pod.",
        SerializedName = @"podMaxPids",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeletConfigPodMaxPid { get; set; }
        /// <summary>
        /// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager).
        /// The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.",
        SerializedName = @"topologyManagerPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string KubeletConfigTopologyManagerPolicy { get; set; }
        /// <summary>
        /// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.",
        SerializedName = @"kubeletDiskType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubeletDiskType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubeletDiskType? KubeletDiskType { get; set; }
        /// <summary>The size in MB of a swap file that will be created on each node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size in MB of a swap file that will be created on each node.",
        SerializedName = @"swapFileSizeMB",
        PossibleTypes = new [] { typeof(int) })]
        int? LinuxOSConfigSwapFileSizeMb { get; set; }
        /// <summary>Sysctl settings for Linux agent nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sysctl settings for Linux agent nodes.",
        SerializedName = @"sysctls",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ISysctlConfig) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ISysctlConfig LinuxOSConfigSysctl { get; set; }
        /// <summary>
        /// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information
        /// see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).",
        SerializedName = @"transparentHugePageDefrag",
        PossibleTypes = new [] { typeof(string) })]
        string LinuxOSConfigTransparentHugePageDefrag { get; set; }
        /// <summary>
        /// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).",
        SerializedName = @"transparentHugePageEnabled",
        PossibleTypes = new [] { typeof(string) })]
        string LinuxOSConfigTransparentHugePageEnabled { get; set; }
        /// <summary>The maximum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of nodes for auto-scaling",
        SerializedName = @"maxCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCount { get; set; }
        /// <summary>The maximum number of pods that can run on a node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of pods that can run on a node.",
        SerializedName = @"maxPods",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxPod { get; set; }
        /// <summary>
        /// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of
        /// the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed
        /// raw and not be executed as a script).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).",
        SerializedName = @"messageOfTheDay",
        PossibleTypes = new [] { typeof(string) })]
        string MessageOfTheDay { get; set; }
        /// <summary>The minimum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum number of nodes for auto-scaling",
        SerializedName = @"minCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MinCount { get; set; }
        /// <summary>
        /// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions
        /// and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolMode? Mode { get; set; }
        /// <summary>
        /// The port ranges that are allowed to access. The specified ranges are allowed to overlap.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The port ranges that are allowed to access. The specified ranges are allowed to overlap.",
        SerializedName = @"allowedHostPorts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IPortRange) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IPortRange[] NetworkProfileAllowedHostPort { get; set; }
        /// <summary>
        /// The IDs of the application security groups which agent pool will associate when created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IDs of the application security groups which agent pool will associate when created.",
        SerializedName = @"applicationSecurityGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] NetworkProfileApplicationSecurityGroup { get; set; }
        /// <summary>IPTags of instance-level public IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IPTags of instance-level public IPs.",
        SerializedName = @"nodePublicIPTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IIPTag) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IIPTag[] NetworkProfileNodePublicIPTag { get; set; }
        /// <summary>The version of node image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of node image",
        SerializedName = @"nodeImageVersion",
        PossibleTypes = new [] { typeof(string) })]
        string NodeImageVersion { get;  }
        /// <summary>
        /// These taints will not be reconciled by AKS and can be removed with a kubectl call. This field can be modified after node
        /// pool is created, but nodes will not be recreated with new taints until another operation that requires recreation (e.g.
        /// node image upgrade) happens. These taints allow for required configuration to run before the node is ready to accept workloads,
        /// for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint nodes node1 key1=value1:NoSchedule-`
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"These taints will not be reconciled by AKS and can be removed with a kubectl call. This field can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint nodes node1 key1=value1:NoSchedule-`",
        SerializedName = @"nodeInitializationTaints",
        PossibleTypes = new [] { typeof(string) })]
        string[] NodeInitializationTaint { get; set; }
        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The node labels to be persisted across all nodes in agent pool.",
        SerializedName = @"nodeLabels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesNodeLabels) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesNodeLabels NodeLabel { get; set; }
        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}",
        SerializedName = @"nodePublicIPPrefixID",
        PossibleTypes = new [] { typeof(string) })]
        string NodePublicIPPrefixId { get; set; }
        /// <summary>
        /// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
        SerializedName = @"nodeTaints",
        PossibleTypes = new [] { typeof(string) })]
        string[] NodeTaint { get; set; }
        /// <summary>
        /// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it
        /// will apply the default osDisk size according to the vmSize specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.",
        SerializedName = @"osDiskSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? OSDiskSizeGb { get; set; }
        /// <summary>
        /// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise,
        /// defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).",
        SerializedName = @"osDiskType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSDiskType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSDiskType? OSDiskType { get; set; }
        /// <summary>
        /// Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if
        /// OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.",
        SerializedName = @"osSKU",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Ossku) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Ossku? OSSku { get; set; }
        /// <summary>The operating system type. The default is Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The operating system type. The default is Linux.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSType? OSType { get; set; }
        /// <summary>
        /// Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported
        /// patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will
        /// not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools
        /// in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control
        /// plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version
        /// cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).",
        SerializedName = @"orchestratorVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OrchestratorVersion { get; set; }
        /// <summary>
        /// The IP allocation mode for pods in the agent pool. Must be used with podSubnetId. The default is 'DynamicIndividual'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP allocation mode for pods in the agent pool. Must be used with podSubnetId. The default is 'DynamicIndividual'.",
        SerializedName = @"podIPAllocationMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PodIPAllocationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PodIPAllocationMode? PodIPAllocationMode { get; set; }
        /// <summary>
        /// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form:
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
        SerializedName = @"podSubnetID",
        PossibleTypes = new [] { typeof(string) })]
        string PodSubnetId { get; set; }
        /// <summary>Tells whether the cluster is Running or Stopped</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells whether the cluster is Running or Stopped",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Code) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Code? PowerStateCode { get; set; }
        /// <summary>The current deployment or provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current deployment or provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The ID for Proximity Placement Group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID for Proximity Placement Group.",
        SerializedName = @"proximityPlacementGroupID",
        PossibleTypes = new [] { typeof(string) })]
        string ProximityPlacementGroupId { get; set; }
        /// <summary>
        /// Specifications on how to auto-scale the VirtualMachines agent pool within a predefined size range. Currently, at most
        /// one AutoScaleProfile is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifications on how to auto-scale the VirtualMachines agent pool within a predefined size range. Currently, at most one AutoScaleProfile is allowed.",
        SerializedName = @"autoscale",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAutoScaleProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAutoScaleProfile[] ScaleAutoscale { get; set; }
        /// <summary>
        /// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.",
        SerializedName = @"scaleDownMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleDownMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleDownMode? ScaleDownMode { get; set; }
        /// <summary>
        /// Specifications on how to scale the VirtualMachines agent pool to a fixed size. Currently, at most one ManualScaleProfile
        /// is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifications on how to scale the VirtualMachines agent pool to a fixed size. Currently, at most one ManualScaleProfile is allowed.",
        SerializedName = @"manual",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManualScaleProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManualScaleProfile[] ScaleManual { get; set; }
        /// <summary>
        /// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.",
        SerializedName = @"scaleSetEvictionPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleSetEvictionPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleSetEvictionPolicy? ScaleSetEvictionPolicy { get; set; }
        /// <summary>
        /// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.",
        SerializedName = @"scaleSetPriority",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleSetPriority) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleSetPriority? ScaleSetPriority { get; set; }
        /// <summary>
        /// Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and drivers can boot. For
        /// more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and drivers can boot. For more details, see aka.ms/aks/trustedlaunch.  If not specified, the default is false.",
        SerializedName = @"enableSecureBoot",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SecurityProfileEnableSecureBoot { get; set; }
        /// <summary>
        /// vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held locally on the
        /// node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held locally on the node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.",
        SerializedName = @"enableVTPM",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SecurityProfileEnableVtpm { get; set; }
        /// <summary>SSH access method of an agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SSH access method of an agent pool.",
        SerializedName = @"sshAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolSshAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolSshAccess? SecurityProfileSshAccess { get; set; }
        /// <summary>
        /// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price.
        /// For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)",
        SerializedName = @"spotMaxPrice",
        PossibleTypes = new [] { typeof(float) })]
        float? SpotMaxPrice { get; set; }
        /// <summary>The tags to be persisted on the agent pool virtual machine scale set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags to be persisted on the agent pool virtual machine scale set.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesTags Tag { get; set; }
        /// <summary>The type of Agent Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of Agent Pool.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolType? Type { get; set; }
        /// <summary>
        /// The amount of time (in minutes) to wait on eviction of pods and graceful termination per node. This eviction wait time
        /// honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not specified, the default is
        /// 30 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of time (in minutes) to wait on eviction of pods and graceful termination per node. This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not specified, the default is 30 minutes.",
        SerializedName = @"drainTimeoutInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? UpgradeSettingDrainTimeoutInMinute { get; set; }
        /// <summary>
        /// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the
        /// percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up.
        /// If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade",
        SerializedName = @"maxSurge",
        PossibleTypes = new [] { typeof(string) })]
        string UpgradeSettingMaxSurge { get; set; }
        /// <summary>
        /// The amount of time (in minutes) to wait after draining a node and before reimaging it and moving on to next node. If not
        /// specified, the default is 0 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of time (in minutes) to wait after draining a node and before reimaging it and moving on to next node. If not specified, the default is 0 minutes.",
        SerializedName = @"nodeSoakDurationInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? UpgradeSettingNodeSoakDurationInMinute { get; set; }
        /// <summary>
        /// Defines the behavior for undrainable nodes during upgrade. The most common cause of undrainable nodes is Pod Disruption
        /// Budgets (PDBs), but other issues, such as pod termination grace period is exceeding the remaining per-node drain timeout
        /// or pod is still being in a running state, can also cause undrainable nodes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the behavior for undrainable nodes during upgrade. The most common cause of undrainable nodes is Pod Disruption Budgets (PDBs), but other issues, such as pod termination grace period is exceeding the remaining per-node drain timeout or pod is still being in a running state, can also cause undrainable nodes.",
        SerializedName = @"undrainableNodeBehavior",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UndrainableNodeBehavior) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UndrainableNodeBehavior? UpgradeSettingUndrainableNodeBehavior { get; set; }
        /// <summary>
        /// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might
        /// fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string VMSize { get; set; }
        /// <summary>The status of nodes in a VirtualMachines agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status of nodes in a VirtualMachines agent pool.",
        SerializedName = @"virtualMachineNodesStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachineNodes) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachineNodes[] VirtualMachineNodesStatus { get; set; }
        /// <summary>
        /// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to
        /// nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
        SerializedName = @"vnetSubnetID",
        PossibleTypes = new [] { typeof(string) })]
        string VnetSubnetId { get; set; }
        /// <summary>
        /// The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT Gateway and the Windows
        /// agent pool does not have node public IP enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT Gateway and the Windows agent pool does not have node public IP enabled.",
        SerializedName = @"disableOutboundNat",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowProfileDisableOutboundNat { get; set; }
        /// <summary>Determines the type of workload a node can run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines the type of workload a node can run.",
        SerializedName = @"workloadRuntime",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WorkloadRuntime) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WorkloadRuntime? WorkloadRuntime { get; set; }

    }
    /// Properties for the container service agent pool profile.
    internal partial interface IManagedClusterAgentPoolProfilePropertiesInternal

    {
        /// <summary>Configuration for using artifact streaming on AKS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolArtifactStreamingProfile ArtifactStreamingProfile { get; set; }
        /// <summary>
        /// Artifact streaming speeds up the cold-start of containers on a node through on-demand image loading. To use this feature,
        /// container images must also enable artifact streaming on ACR. If not specified, the default is false.
        /// </summary>
        bool? ArtifactStreamingProfileEnabled { get; set; }
        /// <summary>
        /// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
        /// </summary>
        string[] AvailabilityZone { get; set; }
        /// <summary>
        /// AKS will associate the specified agent pool with the Capacity Reservation Group.
        /// </summary>
        string CapacityReservationGroupId { get; set; }
        /// <summary>
        /// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user
        /// pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
        /// </summary>
        int? Count { get; set; }
        /// <summary>
        /// CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ICreationData CreationData { get; set; }
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        string CreationDataSourceResourceId { get; set; }
        /// <summary>
        /// If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion
        /// was <major.minor>, this field will contain the full <major.minor.patch> version being used.
        /// </summary>
        string CurrentOrchestratorVersion { get; set; }
        /// <summary>
        /// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated.
        /// Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency
        /// per the normal etag convention.
        /// </summary>
        string ETag { get; set; }
        /// <summary>Whether to enable auto-scaler</summary>
        bool? EnableAutoScaling { get; set; }
        /// <summary>
        /// When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a daemonset along with
        /// host services to sync custom certificate authorities from user-provided list of base64 encoded certificates into node
        /// trust stores. Defaults to false.
        /// </summary>
        bool? EnableCustomCaTrust { get; set; }
        /// <summary>
        /// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
        /// </summary>
        bool? EnableEncryptionAtHost { get; set; }
        /// <summary>
        /// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview)
        /// for more details.
        /// </summary>
        bool? EnableFips { get; set; }
        /// <summary>
        /// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario
        /// is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops.
        /// For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools).
        /// The default is false.
        /// </summary>
        bool? EnableNodePublicIP { get; set; }
        /// <summary>Whether to enable UltraSSD</summary>
        bool? EnableUltraSsd { get; set; }
        /// <summary>
        /// Profile specific to a managed agent pool in Gateway mode. This field cannot be set if agent pool mode is not Gateway.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGatewayProfile GatewayProfile { get; set; }
        /// <summary>
        /// The Gateway agent pool associates one public IPPrefix for each static egress gateway to provide public egress. The size
        /// of Public IPPrefix should be selected by the user. Each node in the agent pool is assigned with one IP from the IPPrefix.
        /// The IPPrefix size thus serves as a cap on the size of the Gateway agent pool. Due to Azure public IPPrefix size limitation,
        /// the valid value range is [28, 31] (/31 = 2 nodes/IPs, /30 = 4 nodes/IPs, /29 = 8 nodes/IPs, /28 = 16 nodes/IPs). The default
        /// value is 31.
        /// </summary>
        int? GatewayProfilePublicIPPrefixSize { get; set; }
        /// <summary>
        /// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.GpuInstanceProfile? GpuInstanceProfile { get; set; }
        /// <summary>The GPU settings of an agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolGpuProfile GpuProfile { get; set; }
        /// <summary>
        /// The default value is true when the vmSize of the agent pool contains a GPU, false otherwise. GPU Driver Installation can
        /// only be set true when VM has an associated GPU resource. Setting this field to false prevents automatic GPU driver installation.
        /// In that case, in order for the GPU to be usable, the user must perform GPU driver installation themselves.
        /// </summary>
        bool? GpuProfileInstallGpuDriver { get; set; }
        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
        /// For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
        /// </summary>
        string HostGroupId { get; set; }
        /// <summary>The Kubelet configuration on the agent pool nodes.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IKubeletConfig KubeletConfig { get; set; }
        /// <summary>Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).</summary>
        string[] KubeletConfigAllowedUnsafeSysctl { get; set; }
        /// <summary>
        /// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
        /// </summary>
        int? KubeletConfigContainerLogMaxFile { get; set; }
        /// <summary>The maximum size (e.g. 10Mi) of container log file before it is rotated.</summary>
        int? KubeletConfigContainerLogMaxSizeMb { get; set; }
        /// <summary>The default is true.</summary>
        bool? KubeletConfigCpuCfsQuota { get; set; }
        /// <summary>
        /// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For
        /// example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
        /// </summary>
        string KubeletConfigCpuCfsQuotaPeriod { get; set; }
        /// <summary>
        /// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies)
        /// for more information. Allowed values are 'none' and 'static'.
        /// </summary>
        string KubeletConfigCpuManagerPolicy { get; set; }
        /// <summary>
        /// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
        /// </summary>
        bool? KubeletConfigFailSwapOn { get; set; }
        /// <summary>To disable image garbage collection, set to 100. The default is 85%</summary>
        int? KubeletConfigImageGcHighThreshold { get; set; }
        /// <summary>This cannot be set higher than imageGcHighThreshold. The default is 80%</summary>
        int? KubeletConfigImageGcLowThreshold { get; set; }
        /// <summary>The maximum number of processes per pod.</summary>
        int? KubeletConfigPodMaxPid { get; set; }
        /// <summary>
        /// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager).
        /// The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
        /// </summary>
        string KubeletConfigTopologyManagerPolicy { get; set; }
        /// <summary>
        /// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubeletDiskType? KubeletDiskType { get; set; }
        /// <summary>The OS configuration of Linux agent nodes.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ILinuxOSConfig LinuxOSConfig { get; set; }
        /// <summary>The size in MB of a swap file that will be created on each node.</summary>
        int? LinuxOSConfigSwapFileSizeMb { get; set; }
        /// <summary>Sysctl settings for Linux agent nodes.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.ISysctlConfig LinuxOSConfigSysctl { get; set; }
        /// <summary>
        /// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information
        /// see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        string LinuxOSConfigTransparentHugePageDefrag { get; set; }
        /// <summary>
        /// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
        /// </summary>
        string LinuxOSConfigTransparentHugePageEnabled { get; set; }
        /// <summary>The maximum number of nodes for auto-scaling</summary>
        int? MaxCount { get; set; }
        /// <summary>The maximum number of pods that can run on a node.</summary>
        int? MaxPod { get; set; }
        /// <summary>
        /// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of
        /// the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed
        /// raw and not be executed as a script).
        /// </summary>
        string MessageOfTheDay { get; set; }
        /// <summary>The minimum number of nodes for auto-scaling</summary>
        int? MinCount { get; set; }
        /// <summary>
        /// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions
        /// and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolMode? Mode { get; set; }
        /// <summary>Network-related settings of an agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolNetworkProfile NetworkProfile { get; set; }
        /// <summary>
        /// The port ranges that are allowed to access. The specified ranges are allowed to overlap.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IPortRange[] NetworkProfileAllowedHostPort { get; set; }
        /// <summary>
        /// The IDs of the application security groups which agent pool will associate when created.
        /// </summary>
        string[] NetworkProfileApplicationSecurityGroup { get; set; }
        /// <summary>IPTags of instance-level public IPs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IIPTag[] NetworkProfileNodePublicIPTag { get; set; }
        /// <summary>The version of node image</summary>
        string NodeImageVersion { get; set; }
        /// <summary>
        /// These taints will not be reconciled by AKS and can be removed with a kubectl call. This field can be modified after node
        /// pool is created, but nodes will not be recreated with new taints until another operation that requires recreation (e.g.
        /// node image upgrade) happens. These taints allow for required configuration to run before the node is ready to accept workloads,
        /// for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint nodes node1 key1=value1:NoSchedule-`
        /// </summary>
        string[] NodeInitializationTaint { get; set; }
        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesNodeLabels NodeLabel { get; set; }
        /// <summary>
        /// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
        /// </summary>
        string NodePublicIPPrefixId { get; set; }
        /// <summary>
        /// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        string[] NodeTaint { get; set; }
        /// <summary>
        /// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it
        /// will apply the default osDisk size according to the vmSize specified.
        /// </summary>
        int? OSDiskSizeGb { get; set; }
        /// <summary>
        /// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise,
        /// defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSDiskType? OSDiskType { get; set; }
        /// <summary>
        /// Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if
        /// OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Ossku? OSSku { get; set; }
        /// <summary>The operating system type. The default is Linux.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSType? OSType { get; set; }
        /// <summary>
        /// Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported
        /// patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will
        /// not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools
        /// in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control
        /// plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version
        /// cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
        /// </summary>
        string OrchestratorVersion { get; set; }
        /// <summary>
        /// The IP allocation mode for pods in the agent pool. Must be used with podSubnetId. The default is 'DynamicIndividual'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PodIPAllocationMode? PodIPAllocationMode { get; set; }
        /// <summary>
        /// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form:
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        string PodSubnetId { get; set; }
        /// <summary>
        /// When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped.
        /// A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it
        /// is Running and provisioning state is Succeeded
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IPowerState PowerState { get; set; }
        /// <summary>Tells whether the cluster is Running or Stopped</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Code? PowerStateCode { get; set; }
        /// <summary>The current deployment or provisioning state.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The ID for Proximity Placement Group.</summary>
        string ProximityPlacementGroupId { get; set; }
        /// <summary>
        /// Specifications on how to auto-scale the VirtualMachines agent pool within a predefined size range. Currently, at most
        /// one AutoScaleProfile is allowed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAutoScaleProfile[] ScaleAutoscale { get; set; }
        /// <summary>
        /// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleDownMode? ScaleDownMode { get; set; }
        /// <summary>
        /// Specifications on how to scale the VirtualMachines agent pool to a fixed size. Currently, at most one ManualScaleProfile
        /// is allowed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManualScaleProfile[] ScaleManual { get; set; }
        /// <summary>
        /// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleSetEvictionPolicy? ScaleSetEvictionPolicy { get; set; }
        /// <summary>
        /// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ScaleSetPriority? ScaleSetPriority { get; set; }
        /// <summary>The security settings of an agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolSecurityProfile SecurityProfile { get; set; }
        /// <summary>
        /// Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and drivers can boot. For
        /// more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
        /// </summary>
        bool? SecurityProfileEnableSecureBoot { get; set; }
        /// <summary>
        /// vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held locally on the
        /// node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
        /// </summary>
        bool? SecurityProfileEnableVtpm { get; set; }
        /// <summary>SSH access method of an agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolSshAccess? SecurityProfileSshAccess { get; set; }
        /// <summary>
        /// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price.
        /// For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
        /// </summary>
        float? SpotMaxPrice { get; set; }
        /// <summary>The tags to be persisted on the agent pool virtual machine scale set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IManagedClusterAgentPoolProfilePropertiesTags Tag { get; set; }
        /// <summary>The type of Agent Pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AgentPoolType? Type { get; set; }
        /// <summary>Settings for upgrading the agentpool</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolUpgradeSettings UpgradeSetting { get; set; }
        /// <summary>
        /// The amount of time (in minutes) to wait on eviction of pods and graceful termination per node. This eviction wait time
        /// honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not specified, the default is
        /// 30 minutes.
        /// </summary>
        int? UpgradeSettingDrainTimeoutInMinute { get; set; }
        /// <summary>
        /// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the
        /// percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up.
        /// If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
        /// </summary>
        string UpgradeSettingMaxSurge { get; set; }
        /// <summary>
        /// The amount of time (in minutes) to wait after draining a node and before reimaging it and moving on to next node. If not
        /// specified, the default is 0 minutes.
        /// </summary>
        int? UpgradeSettingNodeSoakDurationInMinute { get; set; }
        /// <summary>
        /// Defines the behavior for undrainable nodes during upgrade. The most common cause of undrainable nodes is Pod Disruption
        /// Budgets (PDBs), but other issues, such as pod termination grace period is exceeding the remaining per-node drain timeout
        /// or pod is still being in a running state, can also cause undrainable nodes.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UndrainableNodeBehavior? UpgradeSettingUndrainableNodeBehavior { get; set; }
        /// <summary>
        /// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might
        /// fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
        /// </summary>
        string VMSize { get; set; }
        /// <summary>The status of nodes in a VirtualMachines agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachineNodes[] VirtualMachineNodesStatus { get; set; }
        /// <summary>Specifications on how to scale a VirtualMachines agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IScaleProfile VirtualMachineProfileScale { get; set; }
        /// <summary>Specifications on VirtualMachines agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IVirtualMachinesProfile VirtualMachinesProfile { get; set; }
        /// <summary>
        /// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to
        /// nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
        /// </summary>
        string VnetSubnetId { get; set; }
        /// <summary>
        /// The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT Gateway and the Windows
        /// agent pool does not have node public IP enabled.
        /// </summary>
        bool? WindowProfileDisableOutboundNat { get; set; }
        /// <summary>The Windows agent pool's specific profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240402Preview.IAgentPoolWindowsProfile WindowsProfile { get; set; }
        /// <summary>Determines the type of workload a node can run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WorkloadRuntime? WorkloadRuntime { get; set; }

    }
}