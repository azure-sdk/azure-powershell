// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>
    /// Maintenance window used to configure scheduled auto-upgrade for a Managed Cluster.
    /// </summary>
    public partial class MaintenanceWindow :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IMaintenanceWindow,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IMaintenanceWindowInternal
    {

        /// <summary>The date of the month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? AbsoluteMonthlyDayOfMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).AbsoluteMonthlyDayOfMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).AbsoluteMonthlyDayOfMonth = value ?? default(int); }

        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? AbsoluteMonthlyIntervalMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).AbsoluteMonthlyIntervalMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).AbsoluteMonthlyIntervalMonth = value ?? default(int); }

        /// <summary>Specifies the number of days between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? DailyIntervalDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).DailyIntervalDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).DailyIntervalDay = value ?? default(int); }

        /// <summary>Backing field for <see cref="DurationHour" /> property.</summary>
        private int _durationHour;

        /// <summary>Length of maintenance window range from 4 to 24 hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public int DurationHour { get => this._durationHour; set => this._durationHour = value; }

        /// <summary>Internal Acessors for Schedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.ISchedule Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IMaintenanceWindowInternal.Schedule { get => (this._schedule = this._schedule ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.Schedule()); set { {_schedule = value;} } }

        /// <summary>Internal Acessors for ScheduleAbsoluteMonthly</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IAbsoluteMonthlySchedule Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IMaintenanceWindowInternal.ScheduleAbsoluteMonthly { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).AbsoluteMonthly; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).AbsoluteMonthly = value; }

        /// <summary>Internal Acessors for ScheduleDaily</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IDailySchedule Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IMaintenanceWindowInternal.ScheduleDaily { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).Daily; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).Daily = value; }

        /// <summary>Internal Acessors for ScheduleRelativeMonthly</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IRelativeMonthlySchedule Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IMaintenanceWindowInternal.ScheduleRelativeMonthly { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).RelativeMonthly; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).RelativeMonthly = value; }

        /// <summary>Internal Acessors for ScheduleWeekly</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IWeeklySchedule Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IMaintenanceWindowInternal.ScheduleWeekly { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).Weekly; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).Weekly = value; }

        /// <summary>Backing field for <see cref="NotAllowedDate" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IDateSpan[] _notAllowedDate;

        /// <summary>
        /// Date ranges on which upgrade is not allowed. 'utcOffset' applies to this field. For example, with 'utcOffset: +02:00'
        /// and 'dateSpan' being '2022-12-23' to '2023-01-03', maintenance will be blocked from '2022-12-22 22:00' to '2023-01-03
        /// 22:00' in UTC time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IDateSpan[] NotAllowedDate { get => this._notAllowedDate; set => this._notAllowedDate = value; }

        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? RelativeMonthlyDayOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).RelativeMonthlyDayOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).RelativeMonthlyDayOfWeek = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay)""); }

        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? RelativeMonthlyIntervalMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).RelativeMonthlyIntervalMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).RelativeMonthlyIntervalMonth = value ?? default(int); }

        /// <summary>Specifies on which week of the month the dayOfWeek applies.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type? RelativeMonthlyWeekIndex { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).RelativeMonthlyWeekIndex; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).RelativeMonthlyWeekIndex = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type)""); }

        /// <summary>Backing field for <see cref="Schedule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.ISchedule _schedule;

        /// <summary>Recurrence schedule for the maintenance window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.ISchedule Schedule { get => (this._schedule = this._schedule ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.Schedule()); set => this._schedule = value; }

        /// <summary>Backing field for <see cref="StartDate" /> property.</summary>
        private global::System.DateTime? _startDate;

        /// <summary>
        /// The date the maintenance window activates. If the current date is before this date, the maintenance window is inactive
        /// and will not be used for upgrades. If not specified, the maintenance window will be active right away.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public global::System.DateTime? StartDate { get => this._startDate; set => this._startDate = value; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private string _startTime;

        /// <summary>
        /// The start time of the maintenance window. Accepted values are from '00:00' to '23:59'. 'utcOffset' applies to this field.
        /// For example: '02:00' with 'utcOffset: +02:00' means UTC time '00:00'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="UtcOffset" /> property.</summary>
        private string _utcOffset;

        /// <summary>
        /// The UTC offset in format +/-HH:mm. For example, '+05:30' for IST and '-07:00' for PST. If not specified, the default is
        /// '+00:00'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string UtcOffset { get => this._utcOffset; set => this._utcOffset = value; }

        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? WeeklyDayOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).WeeklyDayOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).WeeklyDayOfWeek = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay)""); }

        /// <summary>Specifies the number of weeks between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? WeeklyIntervalWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).WeeklyIntervalWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IScheduleInternal)Schedule).WeeklyIntervalWeek = value ?? default(int); }

        /// <summary>Creates an new <see cref="MaintenanceWindow" /> instance.</summary>
        public MaintenanceWindow()
        {

        }
    }
    /// Maintenance window used to configure scheduled auto-upgrade for a Managed Cluster.
    public partial interface IMaintenanceWindow :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>The date of the month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date of the month.",
        SerializedName = @"dayOfMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? AbsoluteMonthlyDayOfMonth { get; set; }
        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of months between each set of occurrences.",
        SerializedName = @"intervalMonths",
        PossibleTypes = new [] { typeof(int) })]
        int? AbsoluteMonthlyIntervalMonth { get; set; }
        /// <summary>Specifies the number of days between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of days between each set of occurrences.",
        SerializedName = @"intervalDays",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyIntervalDay { get; set; }
        /// <summary>Length of maintenance window range from 4 to 24 hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Length of maintenance window range from 4 to 24 hours.",
        SerializedName = @"durationHours",
        PossibleTypes = new [] { typeof(int) })]
        int DurationHour { get; set; }
        /// <summary>
        /// Date ranges on which upgrade is not allowed. 'utcOffset' applies to this field. For example, with 'utcOffset: +02:00'
        /// and 'dateSpan' being '2022-12-23' to '2023-01-03', maintenance will be blocked from '2022-12-22 22:00' to '2023-01-03
        /// 22:00' in UTC time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date ranges on which upgrade is not allowed. 'utcOffset' applies to this field. For example, with 'utcOffset: +02:00' and 'dateSpan' being '2022-12-23' to '2023-01-03', maintenance will be blocked from '2022-12-22 22:00' to '2023-01-03 22:00' in UTC time.",
        SerializedName = @"notAllowedDates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IDateSpan) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IDateSpan[] NotAllowedDate { get; set; }
        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies on which day of the week the maintenance occurs.",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? RelativeMonthlyDayOfWeek { get; set; }
        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of months between each set of occurrences.",
        SerializedName = @"intervalMonths",
        PossibleTypes = new [] { typeof(int) })]
        int? RelativeMonthlyIntervalMonth { get; set; }
        /// <summary>Specifies on which week of the month the dayOfWeek applies.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies on which week of the month the dayOfWeek applies.",
        SerializedName = @"weekIndex",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type? RelativeMonthlyWeekIndex { get; set; }
        /// <summary>
        /// The date the maintenance window activates. If the current date is before this date, the maintenance window is inactive
        /// and will not be used for upgrades. If not specified, the maintenance window will be active right away.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date the maintenance window activates. If the current date is before this date, the maintenance window is inactive and will not be used for upgrades. If not specified, the maintenance window will be active right away.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartDate { get; set; }
        /// <summary>
        /// The start time of the maintenance window. Accepted values are from '00:00' to '23:59'. 'utcOffset' applies to this field.
        /// For example: '02:00' with 'utcOffset: +02:00' means UTC time '00:00'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The start time of the maintenance window. Accepted values are from '00:00' to '23:59'. 'utcOffset' applies to this field. For example: '02:00' with 'utcOffset: +02:00' means UTC time '00:00'.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(string) })]
        string StartTime { get; set; }
        /// <summary>
        /// The UTC offset in format +/-HH:mm. For example, '+05:30' for IST and '-07:00' for PST. If not specified, the default is
        /// '+00:00'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The UTC offset in format +/-HH:mm. For example, '+05:30' for IST and '-07:00' for PST. If not specified, the default is '+00:00'.",
        SerializedName = @"utcOffset",
        PossibleTypes = new [] { typeof(string) })]
        string UtcOffset { get; set; }
        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies on which day of the week the maintenance occurs.",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? WeeklyDayOfWeek { get; set; }
        /// <summary>Specifies the number of weeks between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of weeks between each set of occurrences.",
        SerializedName = @"intervalWeeks",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyIntervalWeek { get; set; }

    }
    /// Maintenance window used to configure scheduled auto-upgrade for a Managed Cluster.
    internal partial interface IMaintenanceWindowInternal

    {
        /// <summary>The date of the month.</summary>
        int? AbsoluteMonthlyDayOfMonth { get; set; }
        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        int? AbsoluteMonthlyIntervalMonth { get; set; }
        /// <summary>Specifies the number of days between each set of occurrences.</summary>
        int? DailyIntervalDay { get; set; }
        /// <summary>Length of maintenance window range from 4 to 24 hours.</summary>
        int DurationHour { get; set; }
        /// <summary>
        /// Date ranges on which upgrade is not allowed. 'utcOffset' applies to this field. For example, with 'utcOffset: +02:00'
        /// and 'dateSpan' being '2022-12-23' to '2023-01-03', maintenance will be blocked from '2022-12-22 22:00' to '2023-01-03
        /// 22:00' in UTC time.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IDateSpan[] NotAllowedDate { get; set; }
        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? RelativeMonthlyDayOfWeek { get; set; }
        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        int? RelativeMonthlyIntervalMonth { get; set; }
        /// <summary>Specifies on which week of the month the dayOfWeek applies.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type? RelativeMonthlyWeekIndex { get; set; }
        /// <summary>Recurrence schedule for the maintenance window.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.ISchedule Schedule { get; set; }
        /// <summary>
        /// For schedules like: 'recur every month on the 15th' or 'recur every 3 months on the 20th'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IAbsoluteMonthlySchedule ScheduleAbsoluteMonthly { get; set; }
        /// <summary>For schedules like: 'recur every day' or 'recur every 3 days'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IDailySchedule ScheduleDaily { get; set; }
        /// <summary>
        /// For schedules like: 'recur every month on the first Monday' or 'recur every 3 months on last Friday'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IRelativeMonthlySchedule ScheduleRelativeMonthly { get; set; }
        /// <summary>For schedules like: 'recur every Monday' or 'recur every 3 weeks on Wednesday'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202501.IWeeklySchedule ScheduleWeekly { get; set; }
        /// <summary>
        /// The date the maintenance window activates. If the current date is before this date, the maintenance window is inactive
        /// and will not be used for upgrades. If not specified, the maintenance window will be active right away.
        /// </summary>
        global::System.DateTime? StartDate { get; set; }
        /// <summary>
        /// The start time of the maintenance window. Accepted values are from '00:00' to '23:59'. 'utcOffset' applies to this field.
        /// For example: '02:00' with 'utcOffset: +02:00' means UTC time '00:00'.
        /// </summary>
        string StartTime { get; set; }
        /// <summary>
        /// The UTC offset in format +/-HH:mm. For example, '+05:30' for IST and '-07:00' for PST. If not specified, the default is
        /// '+00:00'.
        /// </summary>
        string UtcOffset { get; set; }
        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? WeeklyDayOfWeek { get; set; }
        /// <summary>Specifies the number of weeks between each set of occurrences.</summary>
        int? WeeklyIntervalWeek { get; set; }

    }
}