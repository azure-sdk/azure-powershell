// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202502Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>
    /// Microsoft Defender settings for security gating, validates container images eligibility for deployment based on Defender
    /// for Containers security findings. Using Admission Controller, it either audits or prevents the deployment of images that
    /// do not meet security standards.
    /// </summary>
    public partial class ManagedClusterSecurityProfileDefenderSecurityGating :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202502Preview.IManagedClusterSecurityProfileDefenderSecurityGating,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202502Preview.IManagedClusterSecurityProfileDefenderSecurityGatingInternal
    {

        /// <summary>Backing field for <see cref="AllowSecretAccess" /> property.</summary>
        private bool? _allowSecretAccess;

        /// <summary>
        /// In use only while registry access granted by secret rather than managed identity. Set whether to grant the Defender gating
        /// agent access to the cluster's secrets for pulling images from registries. If secret access is denied and the registry
        /// requires pull secrets, the add-on will not perform any image validation. Default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public bool? AllowSecretAccess { get => this._allowSecretAccess; set => this._allowSecretAccess = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>
        /// Whether to enable Defender security gating. When enabled, the gating feature will scan container images and audit or block
        /// the deployment of images that do not meet security standards according to the configured security rules.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202502Preview.IManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem[] _identity;

        /// <summary>
        /// List of identities that the admission controller will make use of in order to pull security artifacts from the registry.
        /// These are the same identities used by the cluster to pull container images. Each identity provided should have federated
        /// identity credential attached to it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202502Preview.IManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem[] Identity { get => this._identity; set => this._identity = value; }

        /// <summary>
        /// Creates an new <see cref="ManagedClusterSecurityProfileDefenderSecurityGating" /> instance.
        /// </summary>
        public ManagedClusterSecurityProfileDefenderSecurityGating()
        {

        }
    }
    /// Microsoft Defender settings for security gating, validates container images eligibility for deployment based on Defender
    /// for Containers security findings. Using Admission Controller, it either audits or prevents the deployment of images that
    /// do not meet security standards.
    public partial interface IManagedClusterSecurityProfileDefenderSecurityGating :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>
        /// In use only while registry access granted by secret rather than managed identity. Set whether to grant the Defender gating
        /// agent access to the cluster's secrets for pulling images from registries. If secret access is denied and the registry
        /// requires pull secrets, the add-on will not perform any image validation. Default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In use only while registry access granted by secret rather than managed identity. Set whether to grant the Defender gating agent access to the cluster's secrets for pulling images from registries. If secret access is denied and the registry requires pull secrets, the add-on will not perform any image validation. Default value is false.",
        SerializedName = @"allowSecretAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowSecretAccess { get; set; }
        /// <summary>
        /// Whether to enable Defender security gating. When enabled, the gating feature will scan container images and audit or block
        /// the deployment of images that do not meet security standards according to the configured security rules.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable Defender security gating. When enabled, the gating feature will scan container images and audit or block the deployment of images that do not meet security standards according to the configured security rules.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>
        /// List of identities that the admission controller will make use of in order to pull security artifacts from the registry.
        /// These are the same identities used by the cluster to pull container images. Each identity provided should have federated
        /// identity credential attached to it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of identities that the admission controller will make use of in order to pull security artifacts from the registry. These are the same identities used by the cluster to pull container images. Each identity provided should have federated identity credential attached to it.",
        SerializedName = @"identities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202502Preview.IManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202502Preview.IManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem[] Identity { get; set; }

    }
    /// Microsoft Defender settings for security gating, validates container images eligibility for deployment based on Defender
    /// for Containers security findings. Using Admission Controller, it either audits or prevents the deployment of images that
    /// do not meet security standards.
    internal partial interface IManagedClusterSecurityProfileDefenderSecurityGatingInternal

    {
        /// <summary>
        /// In use only while registry access granted by secret rather than managed identity. Set whether to grant the Defender gating
        /// agent access to the cluster's secrets for pulling images from registries. If secret access is denied and the registry
        /// requires pull secrets, the add-on will not perform any image validation. Default value is false.
        /// </summary>
        bool? AllowSecretAccess { get; set; }
        /// <summary>
        /// Whether to enable Defender security gating. When enabled, the gating feature will scan container images and audit or block
        /// the deployment of images that do not meet security standards according to the configured security rules.
        /// </summary>
        bool? Enabled { get; set; }
        /// <summary>
        /// List of identities that the admission controller will make use of in order to pull security artifacts from the registry.
        /// These are the same identities used by the cluster to pull container images. Each identity provided should have federated
        /// identity credential attached to it.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api202502Preview.IManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem[] Identity { get; set; }

    }
}