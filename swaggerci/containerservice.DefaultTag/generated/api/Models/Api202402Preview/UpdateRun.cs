// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Extensions;

    /// <summary>A multi-stage process to perform update operations across members of a Fleet.</summary>
    public partial class UpdateRun :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRun,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.Resource();

        /// <summary>The error additional info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorAdditionalInfo[] AdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).AdditionalInfo; }

        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public string Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Code; }

        /// <summary>The error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorDetail[] Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Detail; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention. Entity tags
        /// are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section
        /// 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).Id; }

        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Message; }

        /// <summary>Internal Acessors for AdditionalInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorAdditionalInfo[] Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.AdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).AdditionalInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).AdditionalInfo = value; }

        /// <summary>Internal Acessors for Code</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Code = value; }

        /// <summary>Internal Acessors for Detail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorDetail[] Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Detail = value; }

        /// <summary>Internal Acessors for ETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.ETag { get => this._eTag; set { {_eTag = value;} } }

        /// <summary>Internal Acessors for ManagedClusterUpdate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IManagedClusterUpdate Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.ManagedClusterUpdate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).ManagedClusterUpdate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).ManagedClusterUpdate = value; }

        /// <summary>Internal Acessors for ManagedClusterUpdateNodeImageSelection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.INodeImageSelection Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.ManagedClusterUpdateNodeImageSelection { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).ManagedClusterUpdateNodeImageSelection; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).ManagedClusterUpdateNodeImageSelection = value; }

        /// <summary>Internal Acessors for ManagedClusterUpdateUpgrade</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IManagedClusterUpgradeSpec Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.ManagedClusterUpdateUpgrade { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).ManagedClusterUpdateUpgrade; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).ManagedClusterUpdateUpgrade = value; }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Message = value; }

        /// <summary>Internal Acessors for NodeImageSelectionSelectedNodeImageVersion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.INodeImageVersion[] Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.NodeImageSelectionSelectedNodeImageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).NodeImageSelectionSelectedNodeImageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).NodeImageSelectionSelectedNodeImageVersion = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.UpdateRunProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpdateRunProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunStatus Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for StatusCompletedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.StatusCompletedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusCompletedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusCompletedTime = value; }

        /// <summary>Internal Acessors for StatusError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorDetail Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.StatusError { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusError; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusError = value; }

        /// <summary>Internal Acessors for StatusNodeImageSelection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.INodeImageSelectionStatus Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.StatusNodeImageSelection { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusNodeImageSelection; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusNodeImageSelection = value; }

        /// <summary>Internal Acessors for StatusStage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateStageStatus[] Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.StatusStage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusStage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusStage = value; }

        /// <summary>Internal Acessors for StatusStartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.StatusStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusStartTime = value; }

        /// <summary>Internal Acessors for StatusState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpdateState? Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.StatusState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusState = value; }

        /// <summary>Internal Acessors for Strategy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunStrategy Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.Strategy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Strategy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Strategy = value; }

        /// <summary>Internal Acessors for Target</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Target = value; }

        /// <summary>Internal Acessors for UpdateStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateStatus Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal.UpdateStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).UpdateStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).UpdateStatus = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).Name; }

        /// <summary>The image versions to upgrade the nodes to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.INodeImageVersion[] NodeImageSelectionSelectedNodeImageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).NodeImageSelectionSelectedNodeImageVersion; }

        /// <summary>The node image upgrade type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.NodeImageSelectionType? NodeImageSelectionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).NodeImageSelectionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).NodeImageSelectionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.NodeImageSelectionType)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.UpdateRunProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the UpdateRun resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpdateRunProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Backing field for <see cref="RetryAfter" /> property.</summary>
        private int? _retryAfter;

        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Owned)]
        public int? RetryAfter { get => this._retryAfter; set => this._retryAfter = value; }

        /// <summary>The time the operation or group was completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public global::System.DateTime? StatusCompletedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusCompletedTime; }

        /// <summary>
        /// The stages composing an update run. Stages are run sequentially withing an UpdateRun.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateStageStatus[] StatusStage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusStage; }

        /// <summary>The time the operation or group was started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public global::System.DateTime? StatusStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusStartTime; }

        /// <summary>The State of the operation or group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpdateState? StatusState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StatusState; }

        /// <summary>The list of stages that compose this update run. Min size: 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateStage[] StrategyStage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StrategyStage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).StrategyStage = value ?? null /* arrayOf */; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.CreatedByType)""); }

        /// <summary>The error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public string Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).Target; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal)__resource).Type; }

        /// <summary>
        /// The resource id of the FleetUpdateStrategy resource to reference.
        /// When creating a new run, there are three ways to define a strategy for the run:
        /// 1. Define a new strategy in place: Set the "strategy" field.
        /// 2. Use an existing strategy: Set the "updateStrategyId" field. (since 2023-08-15-preview)
        /// 3. Use the default strategy to update all the members one by one: Leave both "updateStrategyId" and "strategy" unset.
        /// (since 2023-08-15-preview)
        /// Setting both "updateStrategyId" and "strategy" is invalid.
        /// UpdateRuns created by "updateStrategyId" snapshot the referenced UpdateStrategy at the time of creation and store it in
        /// the "strategy" field.
        /// Subsequent changes to the referenced FleetUpdateStrategy resource do not propagate.
        /// UpdateRunStrategy changes can be made directly on the "strategy" field before launching the UpdateRun.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public string UpdateStrategyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).UpdateStrategyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).UpdateStrategyId = value ?? null; }

        /// <summary>The Kubernetes version to upgrade the member clusters to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public string UpgradeKubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).UpgradeKubernetesVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).UpgradeKubernetesVersion = value ?? null; }

        /// <summary>
        /// The upgrade type.
        /// Full requires the KubernetesVersion property to be set.
        /// NodeImageOnly requires the KubernetesVersion property not to be set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.ManagedClusterUpgradeType? UpgradeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).UpgradeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunPropertiesInternal)Property).UpgradeType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.ManagedClusterUpgradeType)""); }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Retry-After", out var __retryAfterHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunInternal)this).RetryAfter = System.Linq.Enumerable.FirstOrDefault(__retryAfterHeader0) is string __headerRetryAfterHeader0 ? int.TryParse( __headerRetryAfterHeader0, out int __headerRetryAfterHeader0Value ) ? __headerRetryAfterHeader0Value : default(int?) : default(int?);
            }
        }

        /// <summary>Creates an new <see cref="UpdateRun" /> instance.</summary>
        public UpdateRun()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// A multi-stage process to perform update operations across members of a Fleet.
    public partial interface IUpdateRun :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResource
    {
        /// <summary>The error additional info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error additional info.",
        SerializedName = @"additionalInfo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorAdditionalInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorAdditionalInfo[] AdditionalInfo { get;  }
        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string Code { get;  }
        /// <summary>The error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error details.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorDetail[] Detail { get;  }
        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention. Entity tags
        /// are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section
        /// 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get;  }
        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>The image versions to upgrade the nodes to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The image versions to upgrade the nodes to.",
        SerializedName = @"selectedNodeImageVersions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.INodeImageVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.INodeImageVersion[] NodeImageSelectionSelectedNodeImageVersion { get;  }
        /// <summary>The node image upgrade type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The node image upgrade type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.NodeImageSelectionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.NodeImageSelectionType? NodeImageSelectionType { get; set; }
        /// <summary>The provisioning state of the UpdateRun resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the UpdateRun resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpdateRunProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpdateRunProvisioningState? ProvisioningState { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Retry-After",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryAfter { get; set; }
        /// <summary>The time the operation or group was completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time the operation or group was completed.",
        SerializedName = @"completedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StatusCompletedTime { get;  }
        /// <summary>
        /// The stages composing an update run. Stages are run sequentially withing an UpdateRun.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The stages composing an update run. Stages are run sequentially withing an UpdateRun.",
        SerializedName = @"stages",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateStageStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateStageStatus[] StatusStage { get;  }
        /// <summary>The time the operation or group was started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time the operation or group was started.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StatusStartTime { get;  }
        /// <summary>The State of the operation or group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The State of the operation or group.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpdateState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpdateState? StatusState { get;  }
        /// <summary>The list of stages that compose this update run. Min size: 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of stages that compose this update run. Min size: 1.",
        SerializedName = @"stages",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateStage) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateStage[] StrategyStage { get; set; }
        /// <summary>The error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error target.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string Target { get;  }
        /// <summary>
        /// The resource id of the FleetUpdateStrategy resource to reference.
        /// When creating a new run, there are three ways to define a strategy for the run:
        /// 1. Define a new strategy in place: Set the "strategy" field.
        /// 2. Use an existing strategy: Set the "updateStrategyId" field. (since 2023-08-15-preview)
        /// 3. Use the default strategy to update all the members one by one: Leave both "updateStrategyId" and "strategy" unset.
        /// (since 2023-08-15-preview)
        /// Setting both "updateStrategyId" and "strategy" is invalid.
        /// UpdateRuns created by "updateStrategyId" snapshot the referenced UpdateStrategy at the time of creation and store it in
        /// the "strategy" field.
        /// Subsequent changes to the referenced FleetUpdateStrategy resource do not propagate.
        /// UpdateRunStrategy changes can be made directly on the "strategy" field before launching the UpdateRun.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of the FleetUpdateStrategy resource to reference.

        When creating a new run, there are three ways to define a strategy for the run:
        1. Define a new strategy in place: Set the ""strategy"" field.
        2. Use an existing strategy: Set the ""updateStrategyId"" field. (since 2023-08-15-preview)
        3. Use the default strategy to update all the members one by one: Leave both ""updateStrategyId"" and ""strategy"" unset. (since 2023-08-15-preview)

        Setting both ""updateStrategyId"" and ""strategy"" is invalid.

        UpdateRuns created by ""updateStrategyId"" snapshot the referenced UpdateStrategy at the time of creation and store it in the ""strategy"" field.
        Subsequent changes to the referenced FleetUpdateStrategy resource do not propagate.
        UpdateRunStrategy changes can be made directly on the ""strategy"" field before launching the UpdateRun.",
        SerializedName = @"updateStrategyId",
        PossibleTypes = new [] { typeof(string) })]
        string UpdateStrategyId { get; set; }
        /// <summary>The Kubernetes version to upgrade the member clusters to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Kubernetes version to upgrade the member clusters to.",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string UpgradeKubernetesVersion { get; set; }
        /// <summary>
        /// The upgrade type.
        /// Full requires the KubernetesVersion property to be set.
        /// NodeImageOnly requires the KubernetesVersion property not to be set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The upgrade type.
        Full requires the KubernetesVersion property to be set.
        NodeImageOnly requires the KubernetesVersion property not to be set.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.ManagedClusterUpgradeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.ManagedClusterUpgradeType? UpgradeType { get; set; }

    }
    /// A multi-stage process to perform update operations across members of a Fleet.
    internal partial interface IUpdateRunInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IResourceInternal
    {
        /// <summary>The error additional info.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorAdditionalInfo[] AdditionalInfo { get; set; }
        /// <summary>The error code.</summary>
        string Code { get; set; }
        /// <summary>The error details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorDetail[] Detail { get; set; }
        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention. Entity tags
        /// are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section
        /// 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        string ETag { get; set; }
        /// <summary>
        /// The update to be applied to all clusters in the UpdateRun. The managedClusterUpdate can be modified until the run is started.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IManagedClusterUpdate ManagedClusterUpdate { get; set; }
        /// <summary>The node image upgrade to be applied to the target nodes in update run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.INodeImageSelection ManagedClusterUpdateNodeImageSelection { get; set; }
        /// <summary>The upgrade to apply to the ManagedClusters.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IManagedClusterUpgradeSpec ManagedClusterUpdateUpgrade { get; set; }
        /// <summary>The error message.</summary>
        string Message { get; set; }
        /// <summary>The image versions to upgrade the nodes to.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.INodeImageVersion[] NodeImageSelectionSelectedNodeImageVersion { get; set; }
        /// <summary>The node image upgrade type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.NodeImageSelectionType? NodeImageSelectionType { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunProperties Property { get; set; }
        /// <summary>The provisioning state of the UpdateRun resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpdateRunProvisioningState? ProvisioningState { get; set; }

        int? RetryAfter { get; set; }
        /// <summary>The status of the UpdateRun.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunStatus Status { get; set; }
        /// <summary>The time the operation or group was completed.</summary>
        global::System.DateTime? StatusCompletedTime { get; set; }
        /// <summary>The error details when a failure is encountered.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api30.IErrorDetail StatusError { get; set; }
        /// <summary>
        /// The node image upgrade specs for the update run. It is only set in update run when `NodeImageSelection.type` is `Consistent`.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.INodeImageSelectionStatus StatusNodeImageSelection { get; set; }
        /// <summary>
        /// The stages composing an update run. Stages are run sequentially withing an UpdateRun.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateStageStatus[] StatusStage { get; set; }
        /// <summary>The time the operation or group was started.</summary>
        global::System.DateTime? StatusStartTime { get; set; }
        /// <summary>The State of the operation or group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpdateState? StatusState { get; set; }
        /// <summary>
        /// The strategy defines the order in which the clusters will be updated.
        /// If not set, all members will be updated sequentially. The UpdateRun status will show a single UpdateStage and a single
        /// UpdateGroup targeting all members.
        /// The strategy of the UpdateRun can be modified until the run is started.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateRunStrategy Strategy { get; set; }
        /// <summary>The list of stages that compose this update run. Min size: 1.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateStage[] StrategyStage { get; set; }
        /// <summary>The error target.</summary>
        string Target { get; set; }
        /// <summary>The status of the UpdateRun.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api202402Preview.IUpdateStatus UpdateStatus { get; set; }
        /// <summary>
        /// The resource id of the FleetUpdateStrategy resource to reference.
        /// When creating a new run, there are three ways to define a strategy for the run:
        /// 1. Define a new strategy in place: Set the "strategy" field.
        /// 2. Use an existing strategy: Set the "updateStrategyId" field. (since 2023-08-15-preview)
        /// 3. Use the default strategy to update all the members one by one: Leave both "updateStrategyId" and "strategy" unset.
        /// (since 2023-08-15-preview)
        /// Setting both "updateStrategyId" and "strategy" is invalid.
        /// UpdateRuns created by "updateStrategyId" snapshot the referenced UpdateStrategy at the time of creation and store it in
        /// the "strategy" field.
        /// Subsequent changes to the referenced FleetUpdateStrategy resource do not propagate.
        /// UpdateRunStrategy changes can be made directly on the "strategy" field before launching the UpdateRun.
        /// </summary>
        string UpdateStrategyId { get; set; }
        /// <summary>The Kubernetes version to upgrade the member clusters to.</summary>
        string UpgradeKubernetesVersion { get; set; }
        /// <summary>
        /// The upgrade type.
        /// Full requires the KubernetesVersion property to be set.
        /// NodeImageOnly requires the KubernetesVersion property not to be set.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.ManagedClusterUpgradeType? UpgradeType { get; set; }

    }
}