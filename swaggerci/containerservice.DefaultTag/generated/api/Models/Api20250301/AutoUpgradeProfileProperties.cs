// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Extensions;

    /// <summary>The properties of the AutoUpgradeProfile.</summary>
    public partial class AutoUpgradeProfileProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AutoUpgradeProfileStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatus _autoUpgradeProfileStatus;

        /// <summary>The status of the auto upgrade profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatus AutoUpgradeProfileStatus { get => (this._autoUpgradeProfileStatus = this._autoUpgradeProfileStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.AutoUpgradeProfileStatus()); set => this._autoUpgradeProfileStatus = value; }

        /// <summary>The status of the last AutoUpgrade trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeLastTriggerStatus? AutoUpgradeProfileStatusLastTriggerStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerStatus; }

        /// <summary>The target Kubernetes version or node image versions of the last trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public string[] AutoUpgradeProfileStatusLastTriggerUpgradeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerUpgradeVersion; }

        /// <summary>
        /// The UTC time of the last attempt to automatically create and start an UpdateRun as triggered by the release of new versions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public global::System.DateTime? AutoUpgradeProfileStatusLastTriggeredAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggeredAt; }

        /// <summary>Backing field for <see cref="Channel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpgradeChannel _channel;

        /// <summary>Configures how auto-upgrade will be run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpgradeChannel Channel { get => this._channel; set => this._channel = value; }

        /// <summary>Backing field for <see cref="Disabled" /> property.</summary>
        private bool? _disabled;

        /// <summary>
        /// If set to False: the auto upgrade has effect - target managed clusters will be upgraded on schedule.
        /// If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
        /// This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade profile.
        /// By default, this is set to False.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Owned)]
        public bool? Disabled { get => this._disabled; set => this._disabled = value; }

        /// <summary>The error additional info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorAdditionalInfo[] LastTriggerErrorAdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorAdditionalInfo; }

        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public string LastTriggerErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorCode; }

        /// <summary>The error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorDetail[] LastTriggerErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorDetail; }

        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public string LastTriggerErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorMessage; }

        /// <summary>The error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public string LastTriggerErrorTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorTarget; }

        /// <summary>Internal Acessors for AutoUpgradeProfileStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatus Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.AutoUpgradeProfileStatus { get => (this._autoUpgradeProfileStatus = this._autoUpgradeProfileStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.AutoUpgradeProfileStatus()); set { {_autoUpgradeProfileStatus = value;} } }

        /// <summary>Internal Acessors for AutoUpgradeProfileStatusLastTriggerError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorDetail Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.AutoUpgradeProfileStatusLastTriggerError { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerError; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerError = value; }

        /// <summary>Internal Acessors for AutoUpgradeProfileStatusLastTriggerStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeLastTriggerStatus? Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.AutoUpgradeProfileStatusLastTriggerStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerStatus = value; }

        /// <summary>Internal Acessors for AutoUpgradeProfileStatusLastTriggerUpgradeVersion</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.AutoUpgradeProfileStatusLastTriggerUpgradeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerUpgradeVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerUpgradeVersion = value; }

        /// <summary>Internal Acessors for AutoUpgradeProfileStatusLastTriggeredAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.AutoUpgradeProfileStatusLastTriggeredAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggeredAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggeredAt = value; }

        /// <summary>Internal Acessors for LastTriggerErrorAdditionalInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorAdditionalInfo[] Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.LastTriggerErrorAdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorAdditionalInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorAdditionalInfo = value; }

        /// <summary>Internal Acessors for LastTriggerErrorCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.LastTriggerErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorCode = value; }

        /// <summary>Internal Acessors for LastTriggerErrorDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorDetail[] Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.LastTriggerErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorDetail = value; }

        /// <summary>Internal Acessors for LastTriggerErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.LastTriggerErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorMessage = value; }

        /// <summary>Internal Acessors for LastTriggerErrorTarget</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.LastTriggerErrorTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatusInternal)AutoUpgradeProfileStatus).LastTriggerErrorTarget = value; }

        /// <summary>Internal Acessors for NodeImageSelection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeNodeImageSelection Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.NodeImageSelection { get => (this._nodeImageSelection = this._nodeImageSelection ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.AutoUpgradeNodeImageSelection()); set { {_nodeImageSelection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeProfileProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfilePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="NodeImageSelection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeNodeImageSelection _nodeImageSelection;

        /// <summary>The node image upgrade to be applied to the target clusters in auto upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeNodeImageSelection NodeImageSelection { get => (this._nodeImageSelection = this._nodeImageSelection ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.AutoUpgradeNodeImageSelection()); set => this._nodeImageSelection = value; }

        /// <summary>The node image upgrade type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeNodeImageSelectionType? NodeImageSelectionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeNodeImageSelectionInternal)NodeImageSelection).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeNodeImageSelectionInternal)NodeImageSelection).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeNodeImageSelectionType)""); }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeProfileProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the AutoUpgradeProfile resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeProfileProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="UpdateStrategyId" /> property.</summary>
        private string _updateStrategyId;

        /// <summary>
        /// The resource id of the UpdateStrategy resource to reference. If not specified, the auto upgrade will run on all clusters
        /// which are members of the fleet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.PropertyOrigin.Owned)]
        public string UpdateStrategyId { get => this._updateStrategyId; set => this._updateStrategyId = value; }

        /// <summary>Creates an new <see cref="AutoUpgradeProfileProperties" /> instance.</summary>
        public AutoUpgradeProfileProperties()
        {

        }
    }
    /// The properties of the AutoUpgradeProfile.
    public partial interface IAutoUpgradeProfileProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.IJsonSerializable
    {
        /// <summary>The status of the last AutoUpgrade trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last AutoUpgrade trigger.",
        SerializedName = @"lastTriggerStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeLastTriggerStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeLastTriggerStatus? AutoUpgradeProfileStatusLastTriggerStatus { get;  }
        /// <summary>The target Kubernetes version or node image versions of the last trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The target Kubernetes version or node image versions of the last trigger.",
        SerializedName = @"lastTriggerUpgradeVersions",
        PossibleTypes = new [] { typeof(string) })]
        string[] AutoUpgradeProfileStatusLastTriggerUpgradeVersion { get;  }
        /// <summary>
        /// The UTC time of the last attempt to automatically create and start an UpdateRun as triggered by the release of new versions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC time of the last attempt to automatically create and start an UpdateRun as triggered by the release of new versions.",
        SerializedName = @"lastTriggeredAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AutoUpgradeProfileStatusLastTriggeredAt { get;  }
        /// <summary>Configures how auto-upgrade will be run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Configures how auto-upgrade will be run.",
        SerializedName = @"channel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpgradeChannel) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpgradeChannel Channel { get; set; }
        /// <summary>
        /// If set to False: the auto upgrade has effect - target managed clusters will be upgraded on schedule.
        /// If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
        /// This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade profile.
        /// By default, this is set to False.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If set to False: the auto upgrade has effect - target managed clusters will be upgraded on schedule.
        If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
        This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade profile.
        By default, this is set to False.",
        SerializedName = @"disabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Disabled { get; set; }
        /// <summary>The error additional info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error additional info.",
        SerializedName = @"additionalInfo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorAdditionalInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorAdditionalInfo[] LastTriggerErrorAdditionalInfo { get;  }
        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string LastTriggerErrorCode { get;  }
        /// <summary>The error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error details.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorDetail[] LastTriggerErrorDetail { get;  }
        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string LastTriggerErrorMessage { get;  }
        /// <summary>The error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error target.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string LastTriggerErrorTarget { get;  }
        /// <summary>The node image upgrade type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The node image upgrade type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeNodeImageSelectionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeNodeImageSelectionType? NodeImageSelectionType { get; set; }
        /// <summary>The provisioning state of the AutoUpgradeProfile resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the AutoUpgradeProfile resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeProfileProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeProfileProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// The resource id of the UpdateStrategy resource to reference. If not specified, the auto upgrade will run on all clusters
        /// which are members of the fleet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of the UpdateStrategy resource to reference. If not specified, the auto upgrade will run on all clusters which are members of the fleet.",
        SerializedName = @"updateStrategyId",
        PossibleTypes = new [] { typeof(string) })]
        string UpdateStrategyId { get; set; }

    }
    /// The properties of the AutoUpgradeProfile.
    internal partial interface IAutoUpgradeProfilePropertiesInternal

    {
        /// <summary>The status of the auto upgrade profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeProfileStatus AutoUpgradeProfileStatus { get; set; }
        /// <summary>The error details of the last trigger.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorDetail AutoUpgradeProfileStatusLastTriggerError { get; set; }
        /// <summary>The status of the last AutoUpgrade trigger.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeLastTriggerStatus? AutoUpgradeProfileStatusLastTriggerStatus { get; set; }
        /// <summary>The target Kubernetes version or node image versions of the last trigger.</summary>
        string[] AutoUpgradeProfileStatusLastTriggerUpgradeVersion { get; set; }
        /// <summary>
        /// The UTC time of the last attempt to automatically create and start an UpdateRun as triggered by the release of new versions.
        /// </summary>
        global::System.DateTime? AutoUpgradeProfileStatusLastTriggeredAt { get; set; }
        /// <summary>Configures how auto-upgrade will be run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.UpgradeChannel Channel { get; set; }
        /// <summary>
        /// If set to False: the auto upgrade has effect - target managed clusters will be upgraded on schedule.
        /// If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
        /// This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade profile.
        /// By default, this is set to False.
        /// </summary>
        bool? Disabled { get; set; }
        /// <summary>The error additional info.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorAdditionalInfo[] LastTriggerErrorAdditionalInfo { get; set; }
        /// <summary>The error code.</summary>
        string LastTriggerErrorCode { get; set; }
        /// <summary>The error details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api50.IErrorDetail[] LastTriggerErrorDetail { get; set; }
        /// <summary>The error message.</summary>
        string LastTriggerErrorMessage { get; set; }
        /// <summary>The error target.</summary>
        string LastTriggerErrorTarget { get; set; }
        /// <summary>The node image upgrade to be applied to the target clusters in auto upgrade.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Models.Api20250301.IAutoUpgradeNodeImageSelection NodeImageSelection { get; set; }
        /// <summary>The node image upgrade type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeNodeImageSelectionType? NodeImageSelectionType { get; set; }
        /// <summary>The provisioning state of the AutoUpgradeProfile resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerServiceFleet.Support.AutoUpgradeProfileProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// The resource id of the UpdateStrategy resource to reference. If not specified, the auto upgrade will run on all clusters
        /// which are members of the fleet.
        /// </summary>
        string UpdateStrategyId { get; set; }

    }
}