// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>Ingress profile for the container service cluster.</summary>
    public partial class ManagedClusterIngressProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfile,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileInternal
    {

        /// <summary>The client ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string IdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).IdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).IdentityClientId = value ?? null; }

        /// <summary>The object ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string IdentityObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).IdentityObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).IdentityObjectId = value ?? null; }

        /// <summary>The resource ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string IdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).IdentityResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).IdentityResourceId = value ?? null; }

        /// <summary>Internal Acessors for WebAppRouting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRouting Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileInternal.WebAppRouting { get => (this._webAppRouting = this._webAppRouting ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.ManagedClusterIngressProfileWebAppRouting()); set { {_webAppRouting = value;} } }

        /// <summary>Internal Acessors for WebAppRoutingIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IUserAssignedIdentity Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileInternal.WebAppRoutingIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).Identity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).Identity = value; }

        /// <summary>Internal Acessors for WebAppRoutingNginx</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileNginx Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileInternal.WebAppRoutingNginx { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).Nginx; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).Nginx = value; }

        /// <summary>Ingress type for the default NginxIngressController custom resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType? NginxDefaultIngressControllerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).NginxDefaultIngressControllerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).NginxDefaultIngressControllerType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType)""); }

        /// <summary>Backing field for <see cref="WebAppRouting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRouting _webAppRouting;

        /// <summary>
        /// App Routing settings for the ingress profile. You can find an overview and onboarding guide for this feature at https://learn.microsoft.com/en-us/azure/aks/app-routing?tabs=default%2Cdeploy-app-default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRouting WebAppRouting { get => (this._webAppRouting = this._webAppRouting ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.ManagedClusterIngressProfileWebAppRouting()); set => this._webAppRouting = value; }

        /// <summary>
        /// Resource IDs of the DNS zones to be associated with the Application Routing add-on. Used only when Application Routing
        /// add-on is enabled. Public and private DNS zones can be in different resource groups, but all public DNS zones must be
        /// in the same resource group and all private DNS zones must be in the same resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] WebAppRoutingDnsZoneResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).DnsZoneResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).DnsZoneResourceId = value ?? null /* arrayOf */; }

        /// <summary>Whether to enable the Application Routing add-on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? WebAppRoutingEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRoutingInternal)WebAppRouting).Enabled = value ?? default(bool); }

        /// <summary>Creates an new <see cref="ManagedClusterIngressProfile" /> instance.</summary>
        public ManagedClusterIngressProfile()
        {

        }
    }
    /// Ingress profile for the container service cluster.
    public partial interface IManagedClusterIngressProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>The client ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client ID of the user assigned identity.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityClientId { get; set; }
        /// <summary>The object ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object ID of the user assigned identity.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityObjectId { get; set; }
        /// <summary>The resource ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the user assigned identity.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityResourceId { get; set; }
        /// <summary>Ingress type for the default NginxIngressController custom resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ingress type for the default NginxIngressController custom resource",
        SerializedName = @"defaultIngressControllerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType? NginxDefaultIngressControllerType { get; set; }
        /// <summary>
        /// Resource IDs of the DNS zones to be associated with the Application Routing add-on. Used only when Application Routing
        /// add-on is enabled. Public and private DNS zones can be in different resource groups, but all public DNS zones must be
        /// in the same resource group and all private DNS zones must be in the same resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource IDs of the DNS zones to be associated with the Application Routing add-on. Used only when Application Routing add-on is enabled. Public and private DNS zones can be in different resource groups, but all public DNS zones must be in the same resource group and all private DNS zones must be in the same resource group.",
        SerializedName = @"dnsZoneResourceIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] WebAppRoutingDnsZoneResourceId { get; set; }
        /// <summary>Whether to enable the Application Routing add-on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable the Application Routing add-on.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WebAppRoutingEnabled { get; set; }

    }
    /// Ingress profile for the container service cluster.
    internal partial interface IManagedClusterIngressProfileInternal

    {
        /// <summary>The client ID of the user assigned identity.</summary>
        string IdentityClientId { get; set; }
        /// <summary>The object ID of the user assigned identity.</summary>
        string IdentityObjectId { get; set; }
        /// <summary>The resource ID of the user assigned identity.</summary>
        string IdentityResourceId { get; set; }
        /// <summary>Ingress type for the default NginxIngressController custom resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType? NginxDefaultIngressControllerType { get; set; }
        /// <summary>
        /// App Routing settings for the ingress profile. You can find an overview and onboarding guide for this feature at https://learn.microsoft.com/en-us/azure/aks/app-routing?tabs=default%2Cdeploy-app-default.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileWebAppRouting WebAppRouting { get; set; }
        /// <summary>
        /// Resource IDs of the DNS zones to be associated with the Application Routing add-on. Used only when Application Routing
        /// add-on is enabled. Public and private DNS zones can be in different resource groups, but all public DNS zones must be
        /// in the same resource group and all private DNS zones must be in the same resource group.
        /// </summary>
        string[] WebAppRoutingDnsZoneResourceId { get; set; }
        /// <summary>Whether to enable the Application Routing add-on.</summary>
        bool? WebAppRoutingEnabled { get; set; }
        /// <summary>
        /// Managed identity of the Application Routing add-on. This is the identity that should be granted permissions, for example,
        /// to manage the associated Azure DNS resource and get certificates from Azure Key Vault. See [this overview of the add-on](https://learn.microsoft.com/en-us/azure/aks/web-app-routing?tabs=with-osm)
        /// for more instructions.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IUserAssignedIdentity WebAppRoutingIdentity { get; set; }
        /// <summary>
        /// Configuration for the default NginxIngressController. See more at https://learn.microsoft.com/en-us/azure/aks/app-routing-nginx-configuration#the-default-nginx-ingress-controller.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250301.IManagedClusterIngressProfileNginx WebAppRoutingNginx { get; set; }

    }
}