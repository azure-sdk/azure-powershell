// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>
    /// See [planned maintenance](https://docs.microsoft.com/azure/aks/planned-maintenance) for more information about planned
    /// maintenance.
    /// </summary>
    public partial class MaintenanceConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResource __subResource = new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.SubResource();

        /// <summary>The date of the month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? AbsoluteMonthlyDayOfMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).AbsoluteMonthlyDayOfMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).AbsoluteMonthlyDayOfMonth = value ?? default(int); }

        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? AbsoluteMonthlyIntervalMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).AbsoluteMonthlyIntervalMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).AbsoluteMonthlyIntervalMonth = value ?? default(int); }

        /// <summary>Specifies the number of days between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? DailyIntervalDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).DailyIntervalDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).DailyIntervalDay = value ?? default(int); }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal)__subResource).Id; }

        /// <summary>Length of maintenance window range from 4 to 24 hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowDurationHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowDurationHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowDurationHour = value ?? default(int); }

        /// <summary>
        /// Date ranges on which upgrade is not allowed. 'utcOffset' applies to this field. For example, with 'utcOffset: +02:00'
        /// and 'dateSpan' being '2022-12-23' to '2023-01-03', maintenance will be blocked from '2022-12-22 22:00' to '2023-01-03
        /// 22:00' in UTC time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IDateSpan[] MaintenanceWindowNotAllowedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowNotAllowedDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowNotAllowedDate = value ?? null /* arrayOf */; }

        /// <summary>
        /// The date the maintenance window activates. If the current date is before this date, the maintenance window is inactive
        /// and will not be used for upgrades. If not specified, the maintenance window will be active right away.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public global::System.DateTime? MaintenanceWindowStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowStartDate = value ?? default(global::System.DateTime); }

        /// <summary>
        /// The start time of the maintenance window. Accepted values are from '00:00' to '23:59'. 'utcOffset' applies to this field.
        /// For example: '02:00' with 'utcOffset: +02:00' means UTC time '00:00'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string MaintenanceWindowStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowStartTime = value ?? null; }

        /// <summary>
        /// The UTC offset in format +/-HH:mm. For example, '+05:30' for IST and '-07:00' for PST. If not specified, the default is
        /// '+00:00'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string MaintenanceWindowUtcOffset { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowUtcOffset; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowUtcOffset = value ?? null; }

        /// <summary>Internal Acessors for MaintenanceWindow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceWindow Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationInternal.MaintenanceWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindow = value; }

        /// <summary>Internal Acessors for MaintenanceWindowSchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISchedule Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationInternal.MaintenanceWindowSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowSchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).MaintenanceWindowSchedule = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.MaintenanceConfigurationProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ScheduleAbsoluteMonthly</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IAbsoluteMonthlySchedule Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationInternal.ScheduleAbsoluteMonthly { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).ScheduleAbsoluteMonthly; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).ScheduleAbsoluteMonthly = value; }

        /// <summary>Internal Acessors for ScheduleDaily</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IDailySchedule Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationInternal.ScheduleDaily { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).ScheduleDaily; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).ScheduleDaily = value; }

        /// <summary>Internal Acessors for ScheduleRelativeMonthly</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IRelativeMonthlySchedule Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationInternal.ScheduleRelativeMonthly { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).ScheduleRelativeMonthly; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).ScheduleRelativeMonthly = value; }

        /// <summary>Internal Acessors for ScheduleWeekly</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IWeeklySchedule Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationInternal.ScheduleWeekly { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).ScheduleWeekly; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).ScheduleWeekly = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal)__subResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal)__subResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal)__subResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal)__subResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal)__subResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal)__subResource).Type = value; }

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal)__subResource).Name; }

        /// <summary>Time slots on which upgrade is not allowed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ITimeSpan[] NotAllowedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).NotAllowedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).NotAllowedTime = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationProperties _property;

        /// <summary>Properties of a default maintenance configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.MaintenanceConfigurationProperties()); set => this._property = value; }

        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? RelativeMonthlyDayOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).RelativeMonthlyDayOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).RelativeMonthlyDayOfWeek = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay)""); }

        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? RelativeMonthlyIntervalMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).RelativeMonthlyIntervalMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).RelativeMonthlyIntervalMonth = value ?? default(int); }

        /// <summary>
        /// Specifies on which instance of the allowed days specified in daysOfWeek the maintenance occurs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type? RelativeMonthlyWeekIndex { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).RelativeMonthlyWeekIndex; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).RelativeMonthlyWeekIndex = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type)""); }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData _systemData;

        /// <summary>The system metadata relating to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType)""); }

        /// <summary>
        /// If two array entries specify the same day of the week, the applied configuration is the union of times in both entries.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ITimeInWeek[] TimeInWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).TimeInWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).TimeInWeek = value ?? null /* arrayOf */; }

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal)__subResource).Type; }

        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? WeeklyDayOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).WeeklyDayOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).WeeklyDayOfWeek = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay)""); }

        /// <summary>Specifies the number of weeks between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? WeeklyIntervalWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).WeeklyIntervalWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationPropertiesInternal)Property).WeeklyIntervalWeek = value ?? default(int); }

        /// <summary>Creates an new <see cref="MaintenanceConfiguration" /> instance.</summary>
        public MaintenanceConfiguration()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__subResource), __subResource);
            await eventListener.AssertObjectIsValid(nameof(__subResource), __subResource);
        }
    }
    /// See [planned maintenance](https://docs.microsoft.com/azure/aks/planned-maintenance) for more information about planned
    /// maintenance.
    public partial interface IMaintenanceConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResource
    {
        /// <summary>The date of the month.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date of the month.",
        SerializedName = @"dayOfMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? AbsoluteMonthlyDayOfMonth { get; set; }
        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of months between each set of occurrences.",
        SerializedName = @"intervalMonths",
        PossibleTypes = new [] { typeof(int) })]
        int? AbsoluteMonthlyIntervalMonth { get; set; }
        /// <summary>Specifies the number of days between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of days between each set of occurrences.",
        SerializedName = @"intervalDays",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyIntervalDay { get; set; }
        /// <summary>Length of maintenance window range from 4 to 24 hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Length of maintenance window range from 4 to 24 hours.",
        SerializedName = @"durationHours",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowDurationHour { get; set; }
        /// <summary>
        /// Date ranges on which upgrade is not allowed. 'utcOffset' applies to this field. For example, with 'utcOffset: +02:00'
        /// and 'dateSpan' being '2022-12-23' to '2023-01-03', maintenance will be blocked from '2022-12-22 22:00' to '2023-01-03
        /// 22:00' in UTC time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date ranges on which upgrade is not allowed. 'utcOffset' applies to this field. For example, with 'utcOffset: +02:00' and 'dateSpan' being '2022-12-23' to '2023-01-03', maintenance will be blocked from '2022-12-22 22:00' to '2023-01-03 22:00' in UTC time.",
        SerializedName = @"notAllowedDates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IDateSpan) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IDateSpan[] MaintenanceWindowNotAllowedDate { get; set; }
        /// <summary>
        /// The date the maintenance window activates. If the current date is before this date, the maintenance window is inactive
        /// and will not be used for upgrades. If not specified, the maintenance window will be active right away.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date the maintenance window activates. If the current date is before this date, the maintenance window is inactive and will not be used for upgrades. If not specified, the maintenance window will be active right away.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? MaintenanceWindowStartDate { get; set; }
        /// <summary>
        /// The start time of the maintenance window. Accepted values are from '00:00' to '23:59'. 'utcOffset' applies to this field.
        /// For example: '02:00' with 'utcOffset: +02:00' means UTC time '00:00'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start time of the maintenance window. Accepted values are from '00:00' to '23:59'. 'utcOffset' applies to this field. For example: '02:00' with 'utcOffset: +02:00' means UTC time '00:00'.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceWindowStartTime { get; set; }
        /// <summary>
        /// The UTC offset in format +/-HH:mm. For example, '+05:30' for IST and '-07:00' for PST. If not specified, the default is
        /// '+00:00'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The UTC offset in format +/-HH:mm. For example, '+05:30' for IST and '-07:00' for PST. If not specified, the default is '+00:00'.",
        SerializedName = @"utcOffset",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceWindowUtcOffset { get; set; }
        /// <summary>Time slots on which upgrade is not allowed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time slots on which upgrade is not allowed.",
        SerializedName = @"notAllowedTime",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ITimeSpan) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ITimeSpan[] NotAllowedTime { get; set; }
        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies on which day of the week the maintenance occurs.",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? RelativeMonthlyDayOfWeek { get; set; }
        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of months between each set of occurrences.",
        SerializedName = @"intervalMonths",
        PossibleTypes = new [] { typeof(int) })]
        int? RelativeMonthlyIntervalMonth { get; set; }
        /// <summary>
        /// Specifies on which instance of the allowed days specified in daysOfWeek the maintenance occurs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies on which instance of the allowed days specified in daysOfWeek the maintenance occurs.",
        SerializedName = @"weekIndex",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type? RelativeMonthlyWeekIndex { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>
        /// If two array entries specify the same day of the week, the applied configuration is the union of times in both entries.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If two array entries specify the same day of the week, the applied configuration is the union of times in both entries.",
        SerializedName = @"timeInWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ITimeInWeek) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ITimeInWeek[] TimeInWeek { get; set; }
        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies on which day of the week the maintenance occurs.",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? WeeklyDayOfWeek { get; set; }
        /// <summary>Specifies the number of weeks between each set of occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the number of weeks between each set of occurrences.",
        SerializedName = @"intervalWeeks",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyIntervalWeek { get; set; }

    }
    /// See [planned maintenance](https://docs.microsoft.com/azure/aks/planned-maintenance) for more information about planned
    /// maintenance.
    internal partial interface IMaintenanceConfigurationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISubResourceInternal
    {
        /// <summary>The date of the month.</summary>
        int? AbsoluteMonthlyDayOfMonth { get; set; }
        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        int? AbsoluteMonthlyIntervalMonth { get; set; }
        /// <summary>Specifies the number of days between each set of occurrences.</summary>
        int? DailyIntervalDay { get; set; }
        /// <summary>Maintenance window for the maintenance configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary>Length of maintenance window range from 4 to 24 hours.</summary>
        int? MaintenanceWindowDurationHour { get; set; }
        /// <summary>
        /// Date ranges on which upgrade is not allowed. 'utcOffset' applies to this field. For example, with 'utcOffset: +02:00'
        /// and 'dateSpan' being '2022-12-23' to '2023-01-03', maintenance will be blocked from '2022-12-22 22:00' to '2023-01-03
        /// 22:00' in UTC time.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IDateSpan[] MaintenanceWindowNotAllowedDate { get; set; }
        /// <summary>Recurrence schedule for the maintenance window.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ISchedule MaintenanceWindowSchedule { get; set; }
        /// <summary>
        /// The date the maintenance window activates. If the current date is before this date, the maintenance window is inactive
        /// and will not be used for upgrades. If not specified, the maintenance window will be active right away.
        /// </summary>
        global::System.DateTime? MaintenanceWindowStartDate { get; set; }
        /// <summary>
        /// The start time of the maintenance window. Accepted values are from '00:00' to '23:59'. 'utcOffset' applies to this field.
        /// For example: '02:00' with 'utcOffset: +02:00' means UTC time '00:00'.
        /// </summary>
        string MaintenanceWindowStartTime { get; set; }
        /// <summary>
        /// The UTC offset in format +/-HH:mm. For example, '+05:30' for IST and '-07:00' for PST. If not specified, the default is
        /// '+00:00'.
        /// </summary>
        string MaintenanceWindowUtcOffset { get; set; }
        /// <summary>Time slots on which upgrade is not allowed.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ITimeSpan[] NotAllowedTime { get; set; }
        /// <summary>Properties of a default maintenance configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IMaintenanceConfigurationProperties Property { get; set; }
        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? RelativeMonthlyDayOfWeek { get; set; }
        /// <summary>Specifies the number of months between each set of occurrences.</summary>
        int? RelativeMonthlyIntervalMonth { get; set; }
        /// <summary>
        /// Specifies on which instance of the allowed days specified in daysOfWeek the maintenance occurs.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type? RelativeMonthlyWeekIndex { get; set; }
        /// <summary>
        /// For schedules like: 'recur every month on the 15th' or 'recur every 3 months on the 20th'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IAbsoluteMonthlySchedule ScheduleAbsoluteMonthly { get; set; }
        /// <summary>For schedules like: 'recur every day' or 'recur every 3 days'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IDailySchedule ScheduleDaily { get; set; }
        /// <summary>
        /// For schedules like: 'recur every month on the first Monday' or 'recur every 3 months on last Friday'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IRelativeMonthlySchedule ScheduleRelativeMonthly { get; set; }
        /// <summary>For schedules like: 'recur every Monday' or 'recur every 3 weeks on Wednesday'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.IWeeklySchedule ScheduleWeekly { get; set; }
        /// <summary>The system metadata relating to this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>
        /// If two array entries specify the same day of the week, the applied configuration is the union of times in both entries.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240302Preview.ITimeInWeek[] TimeInWeek { get; set; }
        /// <summary>Specifies on which day of the week the maintenance occurs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay? WeeklyDayOfWeek { get; set; }
        /// <summary>Specifies the number of weeks between each set of occurrences.</summary>
        int? WeeklyIntervalWeek { get; set; }

    }
}