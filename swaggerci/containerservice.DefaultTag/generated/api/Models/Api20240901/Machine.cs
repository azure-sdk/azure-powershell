// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>
    /// A machine. Contains details about the underlying virtual machine. A machine may be visible here but not in kubectl get
    /// nodes; if so it may be because the machine has not been registered with the Kubernetes API Server yet.
    /// </summary>
    public partial class Machine :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachine,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResource __subResource = new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.SubResource();

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal)__subResource).Id; }

        /// <summary>Internal Acessors for Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineNetworkProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineInternal.Network { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachinePropertiesInternal)Property).Network; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachinePropertiesInternal)Property).Network = value; }

        /// <summary>Internal Acessors for NetworkIPAddress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineIPAddress[] Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineInternal.NetworkIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachinePropertiesInternal)Property).NetworkIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachinePropertiesInternal)Property).NetworkIPAddress = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.MachineProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineInternal.ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachinePropertiesInternal)Property).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachinePropertiesInternal)Property).ResourceId = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal)__subResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal)__subResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal)__subResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal)__subResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal)__subResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal)__subResource).Type = value; }

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal)__subResource).Name; }

        /// <summary>IPv4, IPv6 addresses of the machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineIPAddress[] NetworkIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachinePropertiesInternal)Property).NetworkIPAddress; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineProperties _property;

        /// <summary>The properties of the machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.MachineProperties()); }

        /// <summary>Azure resource id of the machine. It can be used to GET underlying VM Instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachinePropertiesInternal)Property).ResourceId; }

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal)__subResource).Type; }

        /// <summary>Creates an new <see cref="Machine" /> instance.</summary>
        public Machine()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__subResource), __subResource);
            await eventListener.AssertObjectIsValid(nameof(__subResource), __subResource);
        }
    }
    /// A machine. Contains details about the underlying virtual machine. A machine may be visible here but not in kubectl get
    /// nodes; if so it may be because the machine has not been registered with the Kubernetes API Server yet.
    public partial interface IMachine :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResource
    {
        /// <summary>IPv4, IPv6 addresses of the machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"IPv4, IPv6 addresses of the machine",
        SerializedName = @"ipAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineIPAddress) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineIPAddress[] NetworkIPAddress { get;  }
        /// <summary>Azure resource id of the machine. It can be used to GET underlying VM Instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure resource id of the machine. It can be used to GET underlying VM Instance",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get;  }

    }
    /// A machine. Contains details about the underlying virtual machine. A machine may be visible here but not in kubectl get
    /// nodes; if so it may be because the machine has not been registered with the Kubernetes API Server yet.
    internal partial interface IMachineInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISubResourceInternal
    {
        /// <summary>network properties of the machine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineNetworkProperties Network { get; set; }
        /// <summary>IPv4, IPv6 addresses of the machine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineIPAddress[] NetworkIPAddress { get; set; }
        /// <summary>The properties of the machine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMachineProperties Property { get; set; }
        /// <summary>Azure resource id of the machine. It can be used to GET underlying VM Instance</summary>
        string ResourceId { get; set; }

    }
}