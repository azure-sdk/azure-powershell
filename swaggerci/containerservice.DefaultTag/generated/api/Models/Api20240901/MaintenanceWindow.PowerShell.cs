// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901
{
    using Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.PowerShell;

    /// <summary>
    /// Maintenance window used to configure scheduled auto-upgrade for a Managed Cluster.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(MaintenanceWindowTypeConverter))]
    public partial class MaintenanceWindow
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.MaintenanceWindow"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindow" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindow DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new MaintenanceWindow(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.MaintenanceWindow"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindow" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindow DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new MaintenanceWindow(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="MaintenanceWindow" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="MaintenanceWindow" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindow FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.MaintenanceWindow"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal MaintenanceWindow(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Schedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).Schedule = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISchedule) content.GetValueForProperty("Schedule",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).Schedule, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("DurationHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).DurationHour = (int) content.GetValueForProperty("DurationHour",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).DurationHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("UtcOffset"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).UtcOffset = (string) content.GetValueForProperty("UtcOffset",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).UtcOffset, global::System.Convert.ToString);
            }
            if (content.Contains("StartDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).StartDate = (global::System.DateTime?) content.GetValueForProperty("StartDate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).StartDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).StartTime = (string) content.GetValueForProperty("StartTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).StartTime, global::System.Convert.ToString);
            }
            if (content.Contains("NotAllowedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).NotAllowedDate = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IDateSpan[]) content.GetValueForProperty("NotAllowedDate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).NotAllowedDate, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IDateSpan>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.DateSpanTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScheduleDaily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleDaily = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IDailySchedule) content.GetValueForProperty("ScheduleDaily",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleDaily, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.DailyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleWeekly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleWeekly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IWeeklySchedule) content.GetValueForProperty("ScheduleWeekly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleWeekly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.WeeklyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleAbsoluteMonthly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleAbsoluteMonthly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IAbsoluteMonthlySchedule) content.GetValueForProperty("ScheduleAbsoluteMonthly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleAbsoluteMonthly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.AbsoluteMonthlyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleRelativeMonthly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleRelativeMonthly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IRelativeMonthlySchedule) content.GetValueForProperty("ScheduleRelativeMonthly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleRelativeMonthly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.RelativeMonthlyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("DailyIntervalDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).DailyIntervalDay = (int) content.GetValueForProperty("DailyIntervalDay",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).DailyIntervalDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WeeklyIntervalWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).WeeklyIntervalWeek = (int) content.GetValueForProperty("WeeklyIntervalWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).WeeklyIntervalWeek, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WeeklyDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).WeeklyDayOfWeek = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) content.GetValueForProperty("WeeklyDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).WeeklyDayOfWeek, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay.CreateFrom);
            }
            if (content.Contains("AbsoluteMonthlyIntervalMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).AbsoluteMonthlyIntervalMonth = (int) content.GetValueForProperty("AbsoluteMonthlyIntervalMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).AbsoluteMonthlyIntervalMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AbsoluteMonthlyDayOfMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).AbsoluteMonthlyDayOfMonth = (int) content.GetValueForProperty("AbsoluteMonthlyDayOfMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).AbsoluteMonthlyDayOfMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RelativeMonthlyIntervalMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyIntervalMonth = (int) content.GetValueForProperty("RelativeMonthlyIntervalMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyIntervalMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RelativeMonthlyWeekIndex"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyWeekIndex = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type) content.GetValueForProperty("RelativeMonthlyWeekIndex",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyWeekIndex, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type.CreateFrom);
            }
            if (content.Contains("RelativeMonthlyDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyDayOfWeek = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) content.GetValueForProperty("RelativeMonthlyDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyDayOfWeek, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.MaintenanceWindow"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal MaintenanceWindow(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Schedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).Schedule = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ISchedule) content.GetValueForProperty("Schedule",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).Schedule, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.ScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("DurationHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).DurationHour = (int) content.GetValueForProperty("DurationHour",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).DurationHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("UtcOffset"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).UtcOffset = (string) content.GetValueForProperty("UtcOffset",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).UtcOffset, global::System.Convert.ToString);
            }
            if (content.Contains("StartDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).StartDate = (global::System.DateTime?) content.GetValueForProperty("StartDate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).StartDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).StartTime = (string) content.GetValueForProperty("StartTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).StartTime, global::System.Convert.ToString);
            }
            if (content.Contains("NotAllowedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).NotAllowedDate = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IDateSpan[]) content.GetValueForProperty("NotAllowedDate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).NotAllowedDate, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IDateSpan>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.DateSpanTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScheduleDaily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleDaily = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IDailySchedule) content.GetValueForProperty("ScheduleDaily",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleDaily, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.DailyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleWeekly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleWeekly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IWeeklySchedule) content.GetValueForProperty("ScheduleWeekly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleWeekly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.WeeklyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleAbsoluteMonthly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleAbsoluteMonthly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IAbsoluteMonthlySchedule) content.GetValueForProperty("ScheduleAbsoluteMonthly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleAbsoluteMonthly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.AbsoluteMonthlyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduleRelativeMonthly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleRelativeMonthly = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IRelativeMonthlySchedule) content.GetValueForProperty("ScheduleRelativeMonthly",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).ScheduleRelativeMonthly, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.RelativeMonthlyScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("DailyIntervalDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).DailyIntervalDay = (int) content.GetValueForProperty("DailyIntervalDay",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).DailyIntervalDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WeeklyIntervalWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).WeeklyIntervalWeek = (int) content.GetValueForProperty("WeeklyIntervalWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).WeeklyIntervalWeek, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WeeklyDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).WeeklyDayOfWeek = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) content.GetValueForProperty("WeeklyDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).WeeklyDayOfWeek, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay.CreateFrom);
            }
            if (content.Contains("AbsoluteMonthlyIntervalMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).AbsoluteMonthlyIntervalMonth = (int) content.GetValueForProperty("AbsoluteMonthlyIntervalMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).AbsoluteMonthlyIntervalMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AbsoluteMonthlyDayOfMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).AbsoluteMonthlyDayOfMonth = (int) content.GetValueForProperty("AbsoluteMonthlyDayOfMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).AbsoluteMonthlyDayOfMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RelativeMonthlyIntervalMonth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyIntervalMonth = (int) content.GetValueForProperty("RelativeMonthlyIntervalMonth",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyIntervalMonth, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RelativeMonthlyWeekIndex"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyWeekIndex = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type) content.GetValueForProperty("RelativeMonthlyWeekIndex",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyWeekIndex, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Type.CreateFrom);
            }
            if (content.Contains("RelativeMonthlyDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyDayOfWeek = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay) content.GetValueForProperty("RelativeMonthlyDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240901.IMaintenanceWindowInternal)this).RelativeMonthlyDayOfWeek, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.WeekDay.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Maintenance window used to configure scheduled auto-upgrade for a Managed Cluster.
    [System.ComponentModel.TypeConverter(typeof(MaintenanceWindowTypeConverter))]
    public partial interface IMaintenanceWindow

    {

    }
}