// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>Specifications on auto-scaling.</summary>
    public partial class AutoScaleProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IAutoScaleProfile,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IAutoScaleProfileInternal
    {

        /// <summary>Backing field for <see cref="MaxCount" /> property.</summary>
        private int? _maxCount;

        /// <summary>The maximum number of nodes of the specified sizes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public int? MaxCount { get => this._maxCount; set => this._maxCount = value; }

        /// <summary>Backing field for <see cref="MinCount" /> property.</summary>
        private int? _minCount;

        /// <summary>The minimum number of nodes of the specified sizes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public int? MinCount { get => this._minCount; set => this._minCount = value; }

        /// <summary>Backing field for <see cref="Size" /> property.</summary>
        private string[] _size;

        /// <summary>
        /// The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the first
        /// available one when auto scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will
        /// use the next size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] Size { get => this._size; set => this._size = value; }

        /// <summary>Creates an new <see cref="AutoScaleProfile" /> instance.</summary>
        public AutoScaleProfile()
        {

        }
    }
    /// Specifications on auto-scaling.
    public partial interface IAutoScaleProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>The maximum number of nodes of the specified sizes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of nodes of the specified sizes.",
        SerializedName = @"maxCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCount { get; set; }
        /// <summary>The minimum number of nodes of the specified sizes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum number of nodes of the specified sizes.",
        SerializedName = @"minCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MinCount { get; set; }
        /// <summary>
        /// The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the first
        /// available one when auto scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will
        /// use the next size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the first available one when auto scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will use the next size.",
        SerializedName = @"sizes",
        PossibleTypes = new [] { typeof(string) })]
        string[] Size { get; set; }

    }
    /// Specifications on auto-scaling.
    internal partial interface IAutoScaleProfileInternal

    {
        /// <summary>The maximum number of nodes of the specified sizes.</summary>
        int? MaxCount { get; set; }
        /// <summary>The minimum number of nodes of the specified sizes.</summary>
        int? MinCount { get; set; }
        /// <summary>
        /// The list of allowed vm sizes e.g. ['Standard_E4s_v3', 'Standard_E16s_v3', 'Standard_D16s_v5']. AKS will use the first
        /// available one when auto scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will
        /// use the next size.
        /// </summary>
        string[] Size { get; set; }

    }
}