// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(LoadBalancerPropertiesTypeConverter))]
    public partial class LoadBalancerProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LoadBalancerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new LoadBalancerProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LoadBalancerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new LoadBalancerProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="LoadBalancerProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="LoadBalancerProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LoadBalancerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal LoadBalancerProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ServiceLabelSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelector) content.GetValueForProperty("ServiceLabelSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceNamespaceSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelector) content.GetValueForProperty("ServiceNamespaceSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelector) content.GetValueForProperty("NodeSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("PrimaryAgentPoolName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).PrimaryAgentPoolName = (string) content.GetValueForProperty("PrimaryAgentPoolName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).PrimaryAgentPoolName, global::System.Convert.ToString);
            }
            if (content.Contains("AllowServicePlacement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).AllowServicePlacement = (bool?) content.GetValueForProperty("AllowServicePlacement",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).AllowServicePlacement, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceLabelSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelectorMatchLabel = (string[]) content.GetValueForProperty("ServiceLabelSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceLabelSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("ServiceLabelSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            if (content.Contains("ServiceNamespaceSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelectorMatchLabel = (string[]) content.GetValueForProperty("ServiceNamespaceSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceNamespaceSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("ServiceNamespaceSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            if (content.Contains("NodeSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelectorMatchLabel = (string[]) content.GetValueForProperty("NodeSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NodeSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("NodeSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LoadBalancerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal LoadBalancerProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ServiceLabelSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelector) content.GetValueForProperty("ServiceLabelSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceNamespaceSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelector) content.GetValueForProperty("ServiceNamespaceSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeSelector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelector = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelector) content.GetValueForProperty("NodeSelector",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelector, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("PrimaryAgentPoolName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).PrimaryAgentPoolName = (string) content.GetValueForProperty("PrimaryAgentPoolName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).PrimaryAgentPoolName, global::System.Convert.ToString);
            }
            if (content.Contains("AllowServicePlacement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).AllowServicePlacement = (bool?) content.GetValueForProperty("AllowServicePlacement",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).AllowServicePlacement, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceLabelSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelectorMatchLabel = (string[]) content.GetValueForProperty("ServiceLabelSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceLabelSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("ServiceLabelSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceLabelSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            if (content.Contains("ServiceNamespaceSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelectorMatchLabel = (string[]) content.GetValueForProperty("ServiceNamespaceSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceNamespaceSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("ServiceNamespaceSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).ServiceNamespaceSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            if (content.Contains("NodeSelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelectorMatchLabel = (string[]) content.GetValueForProperty("NodeSelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelectorMatchLabel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NodeSelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelectorMatchExpression = (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement[]) content.GetValueForProperty("NodeSelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILoadBalancerPropertiesInternal)this).NodeSelectorMatchExpression, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ILabelSelectorRequirement>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.LabelSelectorRequirementTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    [System.ComponentModel.TypeConverter(typeof(LoadBalancerPropertiesTypeConverter))]
    public partial interface ILoadBalancerProperties

    {

    }
}