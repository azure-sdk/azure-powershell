// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>Prometheus addon profile for the container service cluster</summary>
    public partial class ManagedClusterAzureMonitorProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfile,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileInternal
    {

        /// <summary>Backing field for <see cref="AppMonitoring" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoring _appMonitoring;

        /// <summary>
        /// Application Monitoring Profile for Kubernetes Application Container. Collects application logs, metrics and traces through
        /// auto-instrumentation of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoring AppMonitoring { get => (this._appMonitoring = this._appMonitoring ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ManagedClusterAzureMonitorProfileAppMonitoring()); set => this._appMonitoring = value; }

        /// <summary>Indicates if Application Monitoring Auto Instrumentation is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? AutoInstrumentationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).AutoInstrumentationEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).AutoInstrumentationEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ContainerInsight" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsights _containerInsight;

        /// <summary>
        /// Azure Monitor Container Insights Profile for Kubernetes Events, Inventory and Container stdout & stderr logs etc. See
        /// aka.ms/AzureMonitorContainerInsights for an overview.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsights ContainerInsight { get => (this._containerInsight = this._containerInsight ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ManagedClusterAzureMonitorProfileContainerInsights()); set => this._containerInsight = value; }

        /// <summary>
        /// Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No custom
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ContainerInsightDisableCustomMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsightsInternal)ContainerInsight).DisableCustomMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsightsInternal)ContainerInsight).DisableCustomMetric = value ?? default(bool); }

        /// <summary>
        /// Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No prometheus
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ContainerInsightDisablePrometheusMetricsScraping { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsightsInternal)ContainerInsight).DisablePrometheusMetricsScraping; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsightsInternal)ContainerInsight).DisablePrometheusMetricsScraping = value ?? default(bool); }

        /// <summary>Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ContainerInsightEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsightsInternal)ContainerInsight).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsightsInternal)ContainerInsight).Enabled = value ?? default(bool); }

        /// <summary>
        /// Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ContainerInsightLogAnalyticsWorkspaceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsightsInternal)ContainerInsight).LogAnalyticsWorkspaceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsightsInternal)ContainerInsight).LogAnalyticsWorkspaceResourceId = value ?? null; }

        /// <summary>The syslog host port. If not specified, the default port is 28330.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public long? ContainerInsightSyslogPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsightsInternal)ContainerInsight).SyslogPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsightsInternal)ContainerInsight).SyslogPort = value ?? default(long); }

        /// <summary>
        /// Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string KubeStateMetricAnnotationsAllowList { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetricsInternal)Metric).KubeStateMetricAnnotationsAllowList; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetricsInternal)Metric).KubeStateMetricAnnotationsAllowList = value ?? null; }

        /// <summary>
        /// Comma-separated list of Kubernetes annotations keys that will be used in the resource's labels metric.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string KubeStateMetricLabelsAllowlist { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetricsInternal)Metric).KubeStateMetricLabelsAllowlist; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetricsInternal)Metric).KubeStateMetricLabelsAllowlist = value ?? null; }

        /// <summary>Backing field for <see cref="Metric" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetrics _metric;

        /// <summary>Metrics profile for the prometheus service addon</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetrics Metric { get => (this._metric = this._metric ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ManagedClusterAzureMonitorProfileMetrics()); set => this._metric = value; }

        /// <summary>Whether to enable the Prometheus collector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? MetricEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetricsInternal)Metric).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetricsInternal)Metric).Enabled = value ?? default(bool); }

        /// <summary>Internal Acessors for AppMonitoring</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoring Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileInternal.AppMonitoring { get => (this._appMonitoring = this._appMonitoring ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ManagedClusterAzureMonitorProfileAppMonitoring()); set { {_appMonitoring = value;} } }

        /// <summary>Internal Acessors for AppMonitoringAutoInstrumentation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileInternal.AppMonitoringAutoInstrumentation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).AutoInstrumentation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).AutoInstrumentation = value; }

        /// <summary>Internal Acessors for AppMonitoringOpenTelemetryLog</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileInternal.AppMonitoringOpenTelemetryLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryLog = value; }

        /// <summary>Internal Acessors for AppMonitoringOpenTelemetryMetric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileInternal.AppMonitoringOpenTelemetryMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryMetric = value; }

        /// <summary>Internal Acessors for ContainerInsight</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsights Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileInternal.ContainerInsight { get => (this._containerInsight = this._containerInsight ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ManagedClusterAzureMonitorProfileContainerInsights()); set { {_containerInsight = value;} } }

        /// <summary>Internal Acessors for Metric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetrics Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileInternal.Metric { get => (this._metric = this._metric ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ManagedClusterAzureMonitorProfileMetrics()); set { {_metric = value;} } }

        /// <summary>Internal Acessors for MetricKubeStateMetric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileKubeStateMetrics Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileInternal.MetricKubeStateMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetricsInternal)Metric).KubeStateMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetricsInternal)Metric).KubeStateMetric = value; }

        /// <summary>
        /// Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? OpenTelemetryLogEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryLogEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryLogEnabled = value ?? default(bool); }

        /// <summary>
        /// The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public long? OpenTelemetryLogPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryLogPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryLogPort = value ?? default(long); }

        /// <summary>Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? OpenTelemetryMetricEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryMetricEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryMetricEnabled = value ?? default(bool); }

        /// <summary>
        /// The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public long? OpenTelemetryMetricPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryMetricPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringInternal)AppMonitoring).OpenTelemetryMetricPort = value ?? default(long); }

        /// <summary>Creates an new <see cref="ManagedClusterAzureMonitorProfile" /> instance.</summary>
        public ManagedClusterAzureMonitorProfile()
        {

        }
    }
    /// Prometheus addon profile for the container service cluster
    public partial interface IManagedClusterAzureMonitorProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>Indicates if Application Monitoring Auto Instrumentation is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if Application Monitoring Auto Instrumentation is enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoInstrumentationEnabled { get; set; }
        /// <summary>
        /// Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No custom
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No custom metrics will be emitted if this field is false but the container insights enabled field is false",
        SerializedName = @"disableCustomMetrics",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContainerInsightDisableCustomMetric { get; set; }
        /// <summary>
        /// Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No prometheus
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No prometheus metrics will be emitted if this field is false but the container insights enabled field is false",
        SerializedName = @"disablePrometheusMetricsScraping",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContainerInsightDisablePrometheusMetricsScraping { get; set; }
        /// <summary>Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContainerInsightEnabled { get; set; }
        /// <summary>
        /// Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs.",
        SerializedName = @"logAnalyticsWorkspaceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerInsightLogAnalyticsWorkspaceResourceId { get; set; }
        /// <summary>The syslog host port. If not specified, the default port is 28330.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The syslog host port. If not specified, the default port is 28330.",
        SerializedName = @"syslogPort",
        PossibleTypes = new [] { typeof(long) })]
        long? ContainerInsightSyslogPort { get; set; }
        /// <summary>
        /// Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.",
        SerializedName = @"metricAnnotationsAllowList",
        PossibleTypes = new [] { typeof(string) })]
        string KubeStateMetricAnnotationsAllowList { get; set; }
        /// <summary>
        /// Comma-separated list of Kubernetes annotations keys that will be used in the resource's labels metric.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Comma-separated list of Kubernetes annotations keys that will be used in the resource's labels metric. ",
        SerializedName = @"metricLabelsAllowlist",
        PossibleTypes = new [] { typeof(string) })]
        string KubeStateMetricLabelsAllowlist { get; set; }
        /// <summary>Whether to enable the Prometheus collector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable the Prometheus collector",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MetricEnabled { get; set; }
        /// <summary>
        /// Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OpenTelemetryLogEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(long) })]
        long? OpenTelemetryLogPort { get; set; }
        /// <summary>Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OpenTelemetryMetricEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(long) })]
        long? OpenTelemetryMetricPort { get; set; }

    }
    /// Prometheus addon profile for the container service cluster
    internal partial interface IManagedClusterAzureMonitorProfileInternal

    {
        /// <summary>
        /// Application Monitoring Profile for Kubernetes Application Container. Collects application logs, metrics and traces through
        /// auto-instrumentation of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoring AppMonitoring { get; set; }
        /// <summary>
        /// Application Monitoring Auto Instrumentation for Kubernetes Application Container. Deploys web hook to auto-instrument
        /// Azure Monitor OpenTelemetry based SDKs to collect OpenTelemetry metrics, logs and traces of the application. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation AppMonitoringAutoInstrumentation { get; set; }
        /// <summary>
        /// Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Logs and Traces. Collects OpenTelemetry
        /// logs and traces of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs AppMonitoringOpenTelemetryLog { get; set; }
        /// <summary>
        /// Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Metrics. Collects OpenTelemetry
        /// metrics of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics AppMonitoringOpenTelemetryMetric { get; set; }
        /// <summary>Indicates if Application Monitoring Auto Instrumentation is enabled or not.</summary>
        bool? AutoInstrumentationEnabled { get; set; }
        /// <summary>
        /// Azure Monitor Container Insights Profile for Kubernetes Events, Inventory and Container stdout & stderr logs etc. See
        /// aka.ms/AzureMonitorContainerInsights for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileContainerInsights ContainerInsight { get; set; }
        /// <summary>
        /// Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No custom
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        bool? ContainerInsightDisableCustomMetric { get; set; }
        /// <summary>
        /// Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No prometheus
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        bool? ContainerInsightDisablePrometheusMetricsScraping { get; set; }
        /// <summary>Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.</summary>
        bool? ContainerInsightEnabled { get; set; }
        /// <summary>
        /// Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs.
        /// </summary>
        string ContainerInsightLogAnalyticsWorkspaceResourceId { get; set; }
        /// <summary>The syslog host port. If not specified, the default port is 28330.</summary>
        long? ContainerInsightSyslogPort { get; set; }
        /// <summary>
        /// Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
        /// </summary>
        string KubeStateMetricAnnotationsAllowList { get; set; }
        /// <summary>
        /// Comma-separated list of Kubernetes annotations keys that will be used in the resource's labels metric.
        /// </summary>
        string KubeStateMetricLabelsAllowlist { get; set; }
        /// <summary>Metrics profile for the prometheus service addon</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileMetrics Metric { get; set; }
        /// <summary>Whether to enable the Prometheus collector</summary>
        bool? MetricEnabled { get; set; }
        /// <summary>
        /// Kube State Metrics for prometheus addon profile for the container service cluster
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IManagedClusterAzureMonitorProfileKubeStateMetrics MetricKubeStateMetric { get; set; }
        /// <summary>
        /// Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.
        /// </summary>
        bool? OpenTelemetryLogEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.
        /// </summary>
        long? OpenTelemetryLogPort { get; set; }
        /// <summary>Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.</summary>
        bool? OpenTelemetryMetricEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.
        /// </summary>
        long? OpenTelemetryMetricPort { get; set; }

    }
}