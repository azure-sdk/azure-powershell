// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>
    /// One and only one of the schedule types should be specified. Choose either 'daily', 'weekly', 'absoluteMonthly' or 'relativeMonthly'
    /// for your maintenance schedule.
    /// </summary>
    public partial class Schedule
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ISchedule.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ISchedule.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ISchedule FromJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject json ? new Schedule(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject into a new instance of <see cref="Schedule" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal Schedule(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_daily = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject>("daily"), out var __jsonDaily) ? Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.DailySchedule.FromJson(__jsonDaily) : Daily;}
            {_weekly = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject>("weekly"), out var __jsonWeekly) ? Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.WeeklySchedule.FromJson(__jsonWeekly) : Weekly;}
            {_absoluteMonthly = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject>("absoluteMonthly"), out var __jsonAbsoluteMonthly) ? Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.AbsoluteMonthlySchedule.FromJson(__jsonAbsoluteMonthly) : AbsoluteMonthly;}
            {_relativeMonthly = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject>("relativeMonthly"), out var __jsonRelativeMonthly) ? Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.RelativeMonthlySchedule.FromJson(__jsonRelativeMonthly) : RelativeMonthly;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="Schedule" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="Schedule" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._daily ? (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode) this._daily.ToJson(null,serializationMode) : null, "daily" ,container.Add );
            AddIf( null != this._weekly ? (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode) this._weekly.ToJson(null,serializationMode) : null, "weekly" ,container.Add );
            AddIf( null != this._absoluteMonthly ? (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode) this._absoluteMonthly.ToJson(null,serializationMode) : null, "absoluteMonthly" ,container.Add );
            AddIf( null != this._relativeMonthly ? (Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Json.JsonNode) this._relativeMonthly.ToJson(null,serializationMode) : null, "relativeMonthly" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}