// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>The list of available upgrade versions.</summary>
    public partial class AgentPoolUpgradeProfileProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IAgentPoolUpgradeProfileProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IAgentPoolUpgradeProfilePropertiesInternal
    {

        /// <summary>components of current or upgraded Kubernetes version in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponent[] ComponentByReleaseComponent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponentsByReleasesInternal)ComponentsByRelease).Component; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponentsByReleasesInternal)ComponentsByRelease).Component = value ?? null /* arrayOf */; }

        /// <summary>The Kubernetes version (major.minor).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ComponentByReleaseKubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponentsByReleasesInternal)ComponentsByRelease).KubernetesVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponentsByReleasesInternal)ComponentsByRelease).KubernetesVersion = value ?? null; }

        /// <summary>Backing field for <see cref="ComponentsByRelease" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponentsByReleases _componentsByRelease;

        /// <summary>components of given Kubernetes version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponentsByReleases ComponentsByRelease { get => (this._componentsByRelease = this._componentsByRelease ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ComponentsByReleases()); set => this._componentsByRelease = value; }

        /// <summary>Backing field for <see cref="KubernetesVersion" /> property.</summary>
        private string _kubernetesVersion;

        /// <summary>The Kubernetes version (major.minor.patch).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string KubernetesVersion { get => this._kubernetesVersion; set => this._kubernetesVersion = value; }

        /// <summary>Backing field for <see cref="LatestNodeImageVersion" /> property.</summary>
        private string _latestNodeImageVersion;

        /// <summary>The latest AKS supported node image version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string LatestNodeImageVersion { get => this._latestNodeImageVersion; set => this._latestNodeImageVersion = value; }

        /// <summary>Internal Acessors for ComponentsByRelease</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponentsByReleases Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IAgentPoolUpgradeProfilePropertiesInternal.ComponentsByRelease { get => (this._componentsByRelease = this._componentsByRelease ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.ComponentsByReleases()); set { {_componentsByRelease = value;} } }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSType _oSType;

        /// <summary>The operating system type. The default is Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSType OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="Upgrade" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IAgentPoolUpgradeProfilePropertiesUpgradesItem[] _upgrade;

        /// <summary>List of orchestrator types and versions available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IAgentPoolUpgradeProfilePropertiesUpgradesItem[] Upgrade { get => this._upgrade; set => this._upgrade = value; }

        /// <summary>Creates an new <see cref="AgentPoolUpgradeProfileProperties" /> instance.</summary>
        public AgentPoolUpgradeProfileProperties()
        {

        }
    }
    /// The list of available upgrade versions.
    public partial interface IAgentPoolUpgradeProfileProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>components of current or upgraded Kubernetes version in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"components of current or upgraded Kubernetes version in the cluster.",
        SerializedName = @"components",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponent) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponent[] ComponentByReleaseComponent { get; set; }
        /// <summary>The Kubernetes version (major.minor).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Kubernetes version (major.minor).",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentByReleaseKubernetesVersion { get; set; }
        /// <summary>The Kubernetes version (major.minor.patch).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The Kubernetes version (major.minor.patch).",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KubernetesVersion { get; set; }
        /// <summary>The latest AKS supported node image version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The latest AKS supported node image version.",
        SerializedName = @"latestNodeImageVersion",
        PossibleTypes = new [] { typeof(string) })]
        string LatestNodeImageVersion { get; set; }
        /// <summary>The operating system type. The default is Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The operating system type. The default is Linux.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSType OSType { get; set; }
        /// <summary>List of orchestrator types and versions available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of orchestrator types and versions available for upgrade.",
        SerializedName = @"upgrades",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IAgentPoolUpgradeProfilePropertiesUpgradesItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IAgentPoolUpgradeProfilePropertiesUpgradesItem[] Upgrade { get; set; }

    }
    /// The list of available upgrade versions.
    internal partial interface IAgentPoolUpgradeProfilePropertiesInternal

    {
        /// <summary>components of current or upgraded Kubernetes version in the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponent[] ComponentByReleaseComponent { get; set; }
        /// <summary>The Kubernetes version (major.minor).</summary>
        string ComponentByReleaseKubernetesVersion { get; set; }
        /// <summary>components of given Kubernetes version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IComponentsByReleases ComponentsByRelease { get; set; }
        /// <summary>The Kubernetes version (major.minor.patch).</summary>
        string KubernetesVersion { get; set; }
        /// <summary>The latest AKS supported node image version.</summary>
        string LatestNodeImageVersion { get; set; }
        /// <summary>The operating system type. The default is Linux.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.OSType OSType { get; set; }
        /// <summary>List of orchestrator types and versions available for upgrade.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20240502Preview.IAgentPoolUpgradeProfilePropertiesUpgradesItem[] Upgrade { get; set; }

    }
}