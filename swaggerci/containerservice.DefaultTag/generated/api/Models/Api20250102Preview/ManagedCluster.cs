// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>Managed cluster.</summary>
    public partial class ManagedCluster :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedCluster,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.TrackedResource();

        /// <summary>The list of AAD group object IDs that will have admin role of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] AadProfileAdminGroupObjectID { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileAdminGroupObjectID; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileAdminGroupObjectID = value ?? null /* arrayOf */; }

        /// <summary>
        /// (DEPRECATED) The client AAD application ID. Learn more at https://aka.ms/aks/aad-legacy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AadProfileClientAppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileClientAppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileClientAppId = value ?? null; }

        /// <summary>Whether to enable Azure RBAC for Kubernetes authorization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? AadProfileEnableAzureRbac { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileEnableAzureRbac; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileEnableAzureRbac = value ?? default(bool); }

        /// <summary>Whether to enable managed AAD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? AadProfileManaged { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileManaged; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileManaged = value ?? default(bool); }

        /// <summary>
        /// (DEPRECATED) The server AAD application ID. Learn more at https://aka.ms/aks/aad-legacy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AadProfileServerAppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileServerAppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileServerAppId = value ?? null; }

        /// <summary>
        /// (DEPRECATED) The server AAD application secret. Learn more at https://aka.ms/aks/aad-legacy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AadProfileServerAppSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileServerAppSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileServerAppSecret = value ?? null; }

        /// <summary>
        /// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AadProfileTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfileTenantId = value ?? null; }

        /// <summary>The profile of managed cluster add-on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesAddonProfiles AddonProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AddonProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AddonProfile = value ?? null /* model class */; }

        /// <summary>The agent pool properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAgentPoolProfile[] AgentPoolProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AgentPoolProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AgentPoolProfile = value ?? null /* arrayOf */; }

        /// <summary>Indicates if AI toolchain operator enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? AiToolchainOperatorProfileEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AiToolchainOperatorProfileEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AiToolchainOperatorProfileEnabled = value ?? default(bool); }

        /// <summary>
        /// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use
        /// Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized
        /// IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] ApiServerAccessProfileAuthorizedIPRange { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileAuthorizedIPRange; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileAuthorizedIPRange = value ?? null /* arrayOf */; }

        /// <summary>Whether to disable run command for the cluster or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ApiServerAccessProfileDisableRunCommand { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileDisableRunCommand; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileDisableRunCommand = value ?? default(bool); }

        /// <summary>
        /// For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ApiServerAccessProfileEnablePrivateCluster { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileEnablePrivateCluster; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileEnablePrivateCluster = value ?? default(bool); }

        /// <summary>Whether to create additional public FQDN for private cluster or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ApiServerAccessProfileEnablePrivateClusterPublicFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileEnablePrivateClusterPublicFqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileEnablePrivateClusterPublicFqdn = value ?? default(bool); }

        /// <summary>Whether to enable apiserver vnet integration for the cluster or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ApiServerAccessProfileEnableVnetIntegration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileEnableVnetIntegration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileEnableVnetIntegration = value ?? default(bool); }

        /// <summary>
        /// The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone).
        /// Allowed values are 'system' and 'none'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ApiServerAccessProfilePrivateDnsZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfilePrivateDnsZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfilePrivateDnsZone = value ?? null; }

        /// <summary>
        /// It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet
        /// integration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ApiServerAccessProfileSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfileSubnetId = value ?? null; }

        /// <summary>Indicates if Application Monitoring Auto Instrumentation is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? AutoInstrumentationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoInstrumentationEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoInstrumentationEnabled = value ?? default(bool); }

        /// <summary>Valid values are 'true' and 'false'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileBalanceSimilarNodeGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileBalanceSimilarNodeGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileBalanceSimilarNodeGroup = value ?? null; }

        /// <summary>
        /// If set to true, all daemonset pods on empty nodes will be evicted before deletion of the node. If the daemonset pod cannot
        /// be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring that daemonset
        /// pods are deleted or evicted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? AutoScalerProfileDaemonsetEvictionForEmptyNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileDaemonsetEvictionForEmptyNode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileDaemonsetEvictionForEmptyNode = value ?? default(bool); }

        /// <summary>
        /// If set to true, all daemonset pods on occupied nodes will be evicted before deletion of the node. If the daemonset pod
        /// cannot be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring
        /// that daemonset pods are deleted or evicted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? AutoScalerProfileDaemonsetEvictionForOccupiedNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileDaemonsetEvictionForOccupiedNode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileDaemonsetEvictionForOccupiedNode = value ?? default(bool); }

        /// <summary>Available values are: 'least-waste', 'most-pods', 'priority', 'random'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Expander? AutoScalerProfileExpander { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileExpander; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileExpander = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Expander)""); }

        /// <summary>
        /// If set to true, the resources used by daemonset will be taken into account when making scaling down decisions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? AutoScalerProfileIgnoreDaemonsetsUtilization { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileIgnoreDaemonsetsUtilization; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileIgnoreDaemonsetsUtilization = value ?? default(bool); }

        /// <summary>The default is 10.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxEmptyBulkDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileMaxEmptyBulkDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileMaxEmptyBulkDelete = value ?? null; }

        /// <summary>The default is 600.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxGracefulTerminationSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileMaxGracefulTerminationSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileMaxGracefulTerminationSec = value ?? null; }

        /// <summary>
        /// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxNodeProvisionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileMaxNodeProvisionTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileMaxNodeProvisionTime = value ?? null; }

        /// <summary>The default is 45. The maximum is 100 and the minimum is 0.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxTotalUnreadyPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileMaxTotalUnreadyPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileMaxTotalUnreadyPercentage = value ?? null; }

        /// <summary>
        /// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all
        /// the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be
        /// an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileNewPodScaleUpDelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileNewPodScaleUpDelay; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileNewPodScaleUpDelay = value ?? null; }

        /// <summary>This must be an integer. The default is 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileOkTotalUnreadyCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileOkTotalUnreadyCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileOkTotalUnreadyCount = value ?? null; }

        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownDelayAfterAdd { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterAdd; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterAdd = value ?? null; }

        /// <summary>
        /// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m)
        /// is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownDelayAfterDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterDelete = value ?? null; }

        /// <summary>
        /// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownDelayAfterFailure { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterFailure; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterFailure = value ?? null; }

        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownUnneededTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUnneededTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUnneededTime = value ?? null; }

        /// <summary>
        /// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownUnreadyTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUnreadyTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUnreadyTime = value ?? null; }

        /// <summary>The default is '0.5'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownUtilizationThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUtilizationThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUtilizationThreshold = value ?? null; }

        /// <summary>The default is '10'. Values must be an integer number of seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScanInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScanInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileScanInterval = value ?? null; }

        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileSkipNodesWithLocalStorage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileSkipNodesWithLocalStorage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileSkipNodesWithLocalStorage = value ?? null; }

        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AutoScalerProfileSkipNodesWithSystemPod { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileSkipNodesWithSystemPod; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfileSkipNodesWithSystemPod = value ?? null; }

        /// <summary>
        /// The default is Unmanaged, but may change to either NodeImage or SecurityPatch at GA.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeOSUpgradeChannel? AutoUpgradeProfileNodeOSUpgradeChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoUpgradeProfileNodeOSUpgradeChannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoUpgradeProfileNodeOSUpgradeChannel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeOSUpgradeChannel)""); }

        /// <summary>
        /// For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UpgradeChannel? AutoUpgradeProfileUpgradeChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoUpgradeProfileUpgradeChannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoUpgradeProfileUpgradeChannel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UpgradeChannel)""); }

        /// <summary>Whether to enable Azure Key Vault key management service. The default is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? AzureKeyVaultKmEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureKeyVaultKmEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureKeyVaultKmEnabled = value ?? default(bool); }

        /// <summary>
        /// Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name)
        /// for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key
        /// identifier. When Azure Key Vault key management service is disabled, leave the field empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AzureKeyVaultKmKeyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureKeyVaultKmKeyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureKeyVaultKmKeyId = value ?? null; }

        /// <summary>
        /// Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public
        /// access from all networks. `Private` means the key vault disables public access and enables private link. The default value
        /// is `Public`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KeyVaultNetworkAccessTypes? AzureKeyVaultKmKeyVaultNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureKeyVaultKmKeyVaultNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureKeyVaultKmKeyVaultNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KeyVaultNetworkAccessTypes)""); }

        /// <summary>
        /// Resource ID of key vault. When keyVaultNetworkAccess is `Private`, this field is required and must be a valid resource
        /// ID. When keyVaultNetworkAccess is `Public`, leave the field empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AzureKeyVaultKmKeyVaultResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureKeyVaultKmKeyVaultResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureKeyVaultKmKeyVaultResourceId = value ?? null; }

        /// <summary>
        /// The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes
        /// APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string AzurePortalFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzurePortalFqdn; }

        /// <summary>Whether to enable AzureBlob CSI Driver. The default value is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? BlobCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).BlobCsiDriverEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).BlobCsiDriverEnabled = value ?? default(bool); }

        /// <summary>The source where the artifacts are downloaded from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ArtifactSource? BootstrapProfileArtifactSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).BootstrapProfileArtifactSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).BootstrapProfileArtifactSource = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ArtifactSource)""); }

        /// <summary>
        /// The resource Id of Azure Container Registry. The registry must have private network access, premium SKU and zone redundancy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string BootstrapProfileContainerRegistryId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).BootstrapProfileContainerRegistryId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).BootstrapProfileContainerRegistryId = value ?? null; }

        /// <summary>Istio egress gateways.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioEgressGateway[] ComponentEgressGateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ComponentEgressGateway; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ComponentEgressGateway = value ?? null /* arrayOf */; }

        /// <summary>Istio ingress gateways.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioIngressGateway[] ComponentIngressGateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ComponentIngressGateway; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ComponentIngressGateway = value ?? null /* arrayOf */; }

        /// <summary>
        /// Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No custom
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ContainerInsightDisableCustomMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ContainerInsightDisableCustomMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ContainerInsightDisableCustomMetric = value ?? default(bool); }

        /// <summary>
        /// Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No prometheus
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ContainerInsightDisablePrometheusMetricsScraping { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ContainerInsightDisablePrometheusMetricsScraping; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ContainerInsightDisablePrometheusMetricsScraping = value ?? default(bool); }

        /// <summary>Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ContainerInsightEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ContainerInsightEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ContainerInsightEnabled = value ?? default(bool); }

        /// <summary>
        /// Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ContainerInsightLogAnalyticsWorkspaceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ContainerInsightLogAnalyticsWorkspaceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ContainerInsightLogAnalyticsWorkspaceResourceId = value ?? null; }

        /// <summary>The syslog host port. If not specified, the default port is 28330.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public long? ContainerInsightSyslogPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ContainerInsightSyslogPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ContainerInsightSyslogPort = value ?? default(long); }

        /// <summary>
        /// The Managed Cluster sku.tier must be set to 'Standard' or 'Premium' to enable this feature. Enabling this will add Kubernetes
        /// Namespace and Deployment details to the Cost Analysis views in the Azure portal. If not specified, the default is false.
        /// For more information see aka.ms/aks/docs/cost-analysis.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? CostAnalysisEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).CostAnalysisEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).CostAnalysisEnabled = value ?? default(bool); }

        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string CreationDataSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).CreationDataSourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).CreationDataSourceResourceId = value ?? null; }

        /// <summary>The version of Kubernetes the Managed Cluster is running.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string CurrentKubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).CurrentKubernetesVersion; }

        /// <summary>
        /// Resource ID of the Log Analytics workspace to be associated with Microsoft Defender. When Microsoft Defender is enabled,
        /// this field is required and must be a valid workspace resource ID. When Microsoft Defender is disabled, leave the field
        /// empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string DefenderLogAnalyticsWorkspaceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DefenderLogAnalyticsWorkspaceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DefenderLogAnalyticsWorkspaceResourceId = value ?? null; }

        /// <summary>
        /// If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters
        /// that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? DisableLocalAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DisableLocalAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DisableLocalAccount = value ?? default(bool); }

        /// <summary>Whether to enable AzureDisk CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? DiskCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DiskCsiDriverEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DiskCsiDriverEnabled = value ?? default(bool); }

        /// <summary>The version of AzureDisk CSI Driver. The default value is v1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string DiskCsiDriverVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DiskCsiDriverVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DiskCsiDriverVersion = value ?? null; }

        /// <summary>
        /// This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string DiskEncryptionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DiskEncryptionSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DiskEncryptionSetId = value ?? null; }

        /// <summary>This cannot be updated once the Managed Cluster has been created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string DnsPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DnsPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DnsPrefix = value ?? null; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>
        /// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated.
        /// Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency
        /// per the normal etag convention.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; }

        /// <summary>
        /// The default value is false. It can be enabled/disabled on creation and updating of the managed cluster. See [https://aka.ms/NamespaceARMResource](https://aka.ms/NamespaceARMResource)
        /// for more details on Namespace as a ARM Resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? EnableNamespaceResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).EnableNamespaceResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).EnableNamespaceResource = value ?? default(bool); }

        /// <summary>
        /// (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes
        /// v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? EnablePodSecurityPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).EnablePodSecurityPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).EnablePodSecurityPolicy = value ?? default(bool); }

        /// <summary>Whether to enable Kubernetes Role-Based Access Control.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? EnableRbac { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).EnableRbac; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).EnableRbac = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ExtendedLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IExtendedLocation _extendedLocation;

        /// <summary>The extended location of the Virtual Machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IExtendedLocation ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ExtendedLocation()); set => this._extendedLocation = value; }

        /// <summary>The name of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IExtendedLocationInternal)ExtendedLocation).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IExtendedLocationInternal)ExtendedLocation).Name = value ?? null; }

        /// <summary>The type of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ExtendedLocationTypes? ExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IExtendedLocationInternal)ExtendedLocation).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IExtendedLocationInternal)ExtendedLocation).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ExtendedLocationTypes)""); }

        /// <summary>Whether to enable AzureFile CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? FileCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).FileCsiDriverEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).FileCsiDriverEnabled = value ?? default(bool); }

        /// <summary>The FQDN of the master pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string Fqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).Fqdn; }

        /// <summary>This cannot be updated once the Managed Cluster has been created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string FqdnSubdomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).FqdnSubdomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).FqdnSubdomain = value ?? null; }

        /// <summary>
        /// Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet
        /// which is used to create the managed cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string GmsaProfileDnsServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).GmsaProfileDnsServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).GmsaProfileDnsServer = value ?? null; }

        /// <summary>Specifies whether to enable Windows gMSA in the managed cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? GmsaProfileEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).GmsaProfileEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).GmsaProfileEnabled = value ?? default(bool); }

        /// <summary>
        /// Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the
        /// vnet which is used to create the managed cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string GmsaProfileRootDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).GmsaProfileRootDomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).GmsaProfileRootDomainName = value ?? null; }

        /// <summary>
        /// A read-only list of all endpoints for which traffic should not be sent to the proxy. This list is a superset of noProxy
        /// and values injected by AKS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] HttpProxyConfigEffectiveNoProxy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfigEffectiveNoProxy; }

        /// <summary>The HTTP proxy server endpoint to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string HttpProxyConfigHttpProxy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfigHttpProxy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfigHttpProxy = value ?? null; }

        /// <summary>The HTTPS proxy server endpoint to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string HttpProxyConfigHttpsProxy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfigHttpsProxy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfigHttpsProxy = value ?? null; }

        /// <summary>The endpoints that should not go through proxy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] HttpProxyConfigNoProxy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfigNoProxy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfigNoProxy = value ?? null /* arrayOf */; }

        /// <summary>Alternative CA cert to use for connecting to proxy servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string HttpProxyConfigTrustedCa { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfigTrustedCa; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfigTrustedCa = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentity _identity;

        /// <summary>The identity of the managed cluster, if configured.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ManagedClusterIdentity()); set => this._identity = value; }

        /// <summary>The client ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string IdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IdentityClientId = value ?? null; }

        /// <summary>
        /// The delegated identity resources assigned to this managed cluster. This can only be set by another Azure Resource Provider,
        /// and managed cluster only accept one delegated identity resource. Internal use only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api40.IDelegatedResources IdentityDelegatedResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).DelegatedResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).DelegatedResource = value ?? null /* model class */; }

        /// <summary>The object ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string IdentityObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IdentityObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IdentityObjectId = value ?? null; }

        /// <summary>
        /// The principal id of the system assigned identity which is used by master components.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The user identity associated with the managed cluster. This identity will be used by the kubelet. Only one user assigned
        /// identity is allowed. The only accepted key is "kubeletidentity", with value of "resourceId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesIdentityProfile IdentityProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IdentityProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IdentityProfile = value ?? null /* model class */; }

        /// <summary>The resource ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string IdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IdentityResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IdentityResourceId = value ?? null; }

        /// <summary>
        /// The tenant id of the system assigned identity which is used by master components.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ResourceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ResourceIdentityType)""); }

        /// <summary>
        /// The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Whether to enable Image Cleaner on AKS cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ImageCleanerEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ImageCleanerEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ImageCleanerEnabled = value ?? default(bool); }

        /// <summary>Image Cleaner scanning interval in hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? ImageCleanerIntervalHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ImageCleanerIntervalHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ImageCleanerIntervalHour = value ?? default(int); }

        /// <summary>Whether to enable image integrity. The default value is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? ImageIntegrityEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ImageIntegrityEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ImageIntegrityEnabled = value ?? default(bool); }

        /// <summary>
        /// The list of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary
        /// upgrade is in progress, this can only hold two consecutive values. For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] IstioRevision { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IstioRevision; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IstioRevision = value ?? null /* arrayOf */; }

        /// <summary>Whether to enable KEDA.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? KedaEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).KedaEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).KedaEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private string _kind;

        /// <summary>
        /// This is primarily used to expose different UI experiences in the portal for different kinds
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string Kind { get => this._kind; set => this._kind = value; }

        /// <summary>
        /// Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string KubeStateMetricAnnotationsAllowList { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).KubeStateMetricAnnotationsAllowList; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).KubeStateMetricAnnotationsAllowList = value ?? null; }

        /// <summary>
        /// Comma-separated list of Kubernetes annotations keys that will be used in the resource's labels metric.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string KubeStateMetricLabelsAllowlist { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).KubeStateMetricLabelsAllowlist; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).KubeStateMetricLabelsAllowlist = value ?? null; }

        /// <summary>
        /// When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed
        /// sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed,
        /// however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string KubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).KubernetesVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).KubernetesVersion = value ?? null; }

        /// <summary>The administrator username to use for Linux VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string LinuxProfileAdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).LinuxProfileAdminUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).LinuxProfileAdminUsername = value ?? null; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>The max number of agent pools for the managed cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? MaxAgentPool { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).MaxAgentPool; }

        /// <summary>Whether to enable the Prometheus collector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? MetricEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).MetricEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).MetricEnabled = value ?? default(bool); }

        /// <summary>Internal Acessors for AadProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAadProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AadProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AadProfile = value; }

        /// <summary>Internal Acessors for AiToolchainOperatorProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAiToolchainOperatorProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AiToolchainOperatorProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AiToolchainOperatorProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AiToolchainOperatorProfile = value; }

        /// <summary>Internal Acessors for ApiServerAccessProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterApiServerAccessProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.ApiServerAccessProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ApiServerAccessProfile = value; }

        /// <summary>Internal Acessors for AppMonitoringAutoInstrumentation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AppMonitoringAutoInstrumentation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AppMonitoringAutoInstrumentation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AppMonitoringAutoInstrumentation = value; }

        /// <summary>Internal Acessors for AppMonitoringOpenTelemetryLog</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AppMonitoringOpenTelemetryLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AppMonitoringOpenTelemetryLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AppMonitoringOpenTelemetryLog = value; }

        /// <summary>Internal Acessors for AppMonitoringOpenTelemetryMetric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AppMonitoringOpenTelemetryMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AppMonitoringOpenTelemetryMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AppMonitoringOpenTelemetryMetric = value; }

        /// <summary>Internal Acessors for AutoScalerProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesAutoScalerProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AutoScalerProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoScalerProfile = value; }

        /// <summary>Internal Acessors for AutoUpgradeProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAutoUpgradeProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AutoUpgradeProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoUpgradeProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AutoUpgradeProfile = value; }

        /// <summary>Internal Acessors for AzureMonitorProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AzureMonitorProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureMonitorProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureMonitorProfile = value; }

        /// <summary>Internal Acessors for AzureMonitorProfileAppMonitoring</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileAppMonitoring Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AzureMonitorProfileAppMonitoring { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureMonitorProfileAppMonitoring; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureMonitorProfileAppMonitoring = value; }

        /// <summary>Internal Acessors for AzureMonitorProfileContainerInsight</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileContainerInsights Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AzureMonitorProfileContainerInsight { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureMonitorProfileContainerInsight; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureMonitorProfileContainerInsight = value; }

        /// <summary>Internal Acessors for AzureMonitorProfileMetric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileMetrics Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AzureMonitorProfileMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureMonitorProfileMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzureMonitorProfileMetric = value; }

        /// <summary>Internal Acessors for AzurePortalFqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.AzurePortalFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzurePortalFqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).AzurePortalFqdn = value; }

        /// <summary>Internal Acessors for BootstrapProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterBootstrapProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.BootstrapProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).BootstrapProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).BootstrapProfile = value; }

        /// <summary>Internal Acessors for CertificateAuthorityPlugin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioPluginCertificateAuthority Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.CertificateAuthorityPlugin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).CertificateAuthorityPlugin; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).CertificateAuthorityPlugin = value; }

        /// <summary>Internal Acessors for CreationData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ICreationData Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.CreationData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).CreationData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).CreationData = value; }

        /// <summary>Internal Acessors for CurrentKubernetesVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.CurrentKubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).CurrentKubernetesVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).CurrentKubernetesVersion = value; }

        /// <summary>Internal Acessors for DefenderSecurityGating</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileDefenderSecurityGating Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.DefenderSecurityGating { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DefenderSecurityGating; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DefenderSecurityGating = value; }

        /// <summary>Internal Acessors for DefenderSecurityMonitoring</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileDefenderSecurityMonitoring Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.DefenderSecurityMonitoring { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DefenderSecurityMonitoring; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).DefenderSecurityMonitoring = value; }

        /// <summary>Internal Acessors for ETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.ETag { get => this._eTag; set { {_eTag = value;} } }

        /// <summary>Internal Acessors for ExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ExtendedLocation()); set { {_extendedLocation = value;} } }

        /// <summary>Internal Acessors for Fqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.Fqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).Fqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).Fqdn = value; }

        /// <summary>Internal Acessors for HttpProxyConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterHttpProxyConfig Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.HttpProxyConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfig = value; }

        /// <summary>Internal Acessors for HttpProxyConfigEffectiveNoProxy</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.HttpProxyConfigEffectiveNoProxy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfigEffectiveNoProxy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).HttpProxyConfigEffectiveNoProxy = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentity Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ManagedClusterIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for IngressProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIngressProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.IngressProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IngressProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IngressProfile = value; }

        /// <summary>Internal Acessors for IngressProfileWebAppRouting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIngressProfileWebAppRouting Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.IngressProfileWebAppRouting { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IngressProfileWebAppRouting; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IngressProfileWebAppRouting = value; }

        /// <summary>Internal Acessors for IstioCertificateAuthority</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioCertificateAuthority Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.IstioCertificateAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IstioCertificateAuthority; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IstioCertificateAuthority = value; }

        /// <summary>Internal Acessors for IstioComponent</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioComponents Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.IstioComponent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IstioComponent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).IstioComponent = value; }

        /// <summary>Internal Acessors for LinuxProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceLinuxProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.LinuxProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).LinuxProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).LinuxProfile = value; }

        /// <summary>Internal Acessors for LinuxProfileSsh</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceSshConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.LinuxProfileSsh { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).LinuxProfileSsh; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).LinuxProfileSsh = value; }

        /// <summary>Internal Acessors for MaxAgentPool</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.MaxAgentPool { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).MaxAgentPool; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).MaxAgentPool = value; }

        /// <summary>Internal Acessors for MetricKubeStateMetric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileKubeStateMetrics Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.MetricKubeStateMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).MetricKubeStateMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).MetricKubeStateMetric = value; }

        /// <summary>Internal Acessors for MetricProfileCostAnalysis</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterCostAnalysis Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.MetricProfileCostAnalysis { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).MetricProfileCostAnalysis; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).MetricProfileCostAnalysis = value; }

        /// <summary>Internal Acessors for MetricsProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterMetricsProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.MetricsProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).MetricsProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).MetricsProfile = value; }

        /// <summary>Internal Acessors for NodeProvisioningProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterNodeProvisioningProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.NodeProvisioningProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeProvisioningProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeProvisioningProfile = value; }

        /// <summary>Internal Acessors for NodeResourceGroupProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterNodeResourceGroupProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.NodeResourceGroupProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeResourceGroupProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeResourceGroupProfile = value; }

        /// <summary>Internal Acessors for OidcIssuerProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterOidcIssuerProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.OidcIssuerProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OidcIssuerProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OidcIssuerProfile = value; }

        /// <summary>Internal Acessors for OidcIssuerProfileIssuerUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.OidcIssuerProfileIssuerUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OidcIssuerProfileIssuerUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OidcIssuerProfileIssuerUrl = value; }

        /// <summary>Internal Acessors for PodIdentityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPodIdentityProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.PodIdentityProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PodIdentityProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PodIdentityProfile = value; }

        /// <summary>Internal Acessors for PowerState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IPowerState Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.PowerState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PowerState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PowerState = value; }

        /// <summary>Internal Acessors for PrivateFqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.PrivateFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PrivateFqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PrivateFqdn = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ManagedClusterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ResourceUid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.ResourceUid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ResourceUid; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ResourceUid = value; }

        /// <summary>Internal Acessors for SafeguardProfileSystemExcludedNamespace</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.SafeguardProfileSystemExcludedNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SafeguardProfileSystemExcludedNamespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SafeguardProfileSystemExcludedNamespace = value; }

        /// <summary>Internal Acessors for SafeguardsProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ISafeguardsProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.SafeguardsProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SafeguardsProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SafeguardsProfile = value; }

        /// <summary>Internal Acessors for SecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.SecurityProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfile = value; }

        /// <summary>Internal Acessors for SecurityProfileAzureKeyVaultKm</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IAzureKeyVaultKms Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.SecurityProfileAzureKeyVaultKm { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileAzureKeyVaultKm; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileAzureKeyVaultKm = value; }

        /// <summary>Internal Acessors for SecurityProfileDefender</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileDefender Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.SecurityProfileDefender { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileDefender; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileDefender = value; }

        /// <summary>Internal Acessors for SecurityProfileImageCleaner</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileImageCleaner Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.SecurityProfileImageCleaner { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileImageCleaner; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileImageCleaner = value; }

        /// <summary>Internal Acessors for SecurityProfileImageIntegrity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileImageIntegrity Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.SecurityProfileImageIntegrity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileImageIntegrity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileImageIntegrity = value; }

        /// <summary>Internal Acessors for SecurityProfileNodeRestriction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileNodeRestriction Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.SecurityProfileNodeRestriction { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileNodeRestriction; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileNodeRestriction = value; }

        /// <summary>Internal Acessors for SecurityProfileWorkloadIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileWorkloadIdentity Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.SecurityProfileWorkloadIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileWorkloadIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileWorkloadIdentity = value; }

        /// <summary>Internal Acessors for ServiceMeshProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IServiceMeshProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.ServiceMeshProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServiceMeshProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServiceMeshProfile = value; }

        /// <summary>Internal Acessors for ServiceMeshProfileIstio</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioServiceMesh Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.ServiceMeshProfileIstio { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServiceMeshProfileIstio; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServiceMeshProfileIstio = value; }

        /// <summary>Internal Acessors for ServicePrincipalProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterServicePrincipalProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.ServicePrincipalProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServicePrincipalProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServicePrincipalProfile = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSku Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ManagedClusterSku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStatus Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for StatusProvisioningError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ICloudErrorBody Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.StatusProvisioningError { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StatusProvisioningError; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StatusProvisioningError = value; }

        /// <summary>Internal Acessors for StorageProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStorageProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.StorageProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StorageProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StorageProfile = value; }

        /// <summary>Internal Acessors for StorageProfileBlobCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStorageProfileBlobCsiDriver Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.StorageProfileBlobCsiDriver { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StorageProfileBlobCsiDriver; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StorageProfileBlobCsiDriver = value; }

        /// <summary>Internal Acessors for StorageProfileDiskCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStorageProfileDiskCsiDriver Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.StorageProfileDiskCsiDriver { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StorageProfileDiskCsiDriver; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StorageProfileDiskCsiDriver = value; }

        /// <summary>Internal Acessors for StorageProfileFileCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStorageProfileFileCsiDriver Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.StorageProfileFileCsiDriver { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StorageProfileFileCsiDriver; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StorageProfileFileCsiDriver = value; }

        /// <summary>Internal Acessors for StorageProfileSnapshotController</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStorageProfileSnapshotController Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.StorageProfileSnapshotController { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StorageProfileSnapshotController; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).StorageProfileSnapshotController = value; }

        /// <summary>Internal Acessors for UpgradeSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IClusterUpgradeSettings Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.UpgradeSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).UpgradeSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).UpgradeSetting = value; }

        /// <summary>Internal Acessors for UpgradeSettingOverrideSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IUpgradeOverrideSettings Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.UpgradeSettingOverrideSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).UpgradeSettingOverrideSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).UpgradeSettingOverrideSetting = value; }

        /// <summary>Internal Acessors for WebAppRoutingIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IUserAssignedIdentity Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.WebAppRoutingIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WebAppRoutingIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WebAppRoutingIdentity = value; }

        /// <summary>Internal Acessors for WebAppRoutingNginx</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIngressProfileNginx Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.WebAppRoutingNginx { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WebAppRoutingNginx; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WebAppRoutingNginx = value; }

        /// <summary>Internal Acessors for WindowProfileGmsaProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IWindowsGmsaProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.WindowProfileGmsaProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowProfileGmsaProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowProfileGmsaProfile = value; }

        /// <summary>Internal Acessors for WindowsProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterWindowsProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.WindowsProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowsProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowsProfile = value; }

        /// <summary>Internal Acessors for WorkloadAutoScalerProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterWorkloadAutoScalerProfile Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.WorkloadAutoScalerProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WorkloadAutoScalerProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WorkloadAutoScalerProfile = value; }

        /// <summary>Internal Acessors for WorkloadAutoScalerProfileKeda</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterWorkloadAutoScalerProfileKeda Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.WorkloadAutoScalerProfileKeda { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WorkloadAutoScalerProfileKeda; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WorkloadAutoScalerProfileKeda = value; }

        /// <summary>Internal Acessors for WorkloadAutoScalerProfileVerticalPodAutoscaler</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterInternal.WorkloadAutoScalerProfileVerticalPodAutoscaler { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WorkloadAutoScalerProfileVerticalPodAutoscaler; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WorkloadAutoScalerProfileVerticalPodAutoscaler = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Name; }

        /// <summary>The network configuration profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceNetworkProfile NetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NetworkProfile = value ?? null /* model class */; }

        /// <summary>Ingress type for the default NginxIngressController custom resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType? NginxDefaultIngressControllerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NginxDefaultIngressControllerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NginxDefaultIngressControllerType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType)""); }

        /// <summary>Once the mode it set to Auto, it cannot be changed back to Manual.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeProvisioningMode? NodeProvisioningProfileMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeProvisioningProfileMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeProvisioningProfileMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeProvisioningMode)""); }

        /// <summary>The name of the resource group containing agent pool nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string NodeResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeResourceGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeResourceGroup = value ?? null; }

        /// <summary>The restriction level applied to the cluster's node resource group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.RestrictionLevel? NodeResourceGroupProfileRestrictionLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeResourceGroupProfileRestrictionLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeResourceGroupProfileRestrictionLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.RestrictionLevel)""); }

        /// <summary>Whether to enable Node Restriction</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? NodeRestrictionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeRestrictionEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).NodeRestrictionEnabled = value ?? default(bool); }

        /// <summary>Whether the OIDC issuer is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? OidcIssuerProfileEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OidcIssuerProfileEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OidcIssuerProfileEnabled = value ?? default(bool); }

        /// <summary>The OIDC issuer url of the Managed Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string OidcIssuerProfileIssuerUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OidcIssuerProfileIssuerUrl; }

        /// <summary>
        /// Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? OpenTelemetryLogEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OpenTelemetryLogEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OpenTelemetryLogEnabled = value ?? default(bool); }

        /// <summary>
        /// The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public long? OpenTelemetryLogPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OpenTelemetryLogPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OpenTelemetryLogPort = value ?? default(long); }

        /// <summary>Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? OpenTelemetryMetricEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OpenTelemetryMetricEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OpenTelemetryMetricEnabled = value ?? default(bool); }

        /// <summary>
        /// The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public long? OpenTelemetryMetricPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OpenTelemetryMetricPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OpenTelemetryMetricPort = value ?? default(long); }

        /// <summary>
        /// Whether to force upgrade the cluster. Note that this option instructs upgrade operation to bypass upgrade protections
        /// such as checking for deprecated API usage. Enable this option only with caution.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? OverrideSettingForceUpgrade { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OverrideSettingForceUpgrade; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OverrideSettingForceUpgrade = value ?? default(bool); }

        /// <summary>
        /// Until when the overrides are effective. Note that this only matches the start time of an upgrade, and the effectiveness
        /// won't change once an upgrade starts even if the `until` expires as upgrade proceeds. This field is not set by default.
        /// It must be set for the overrides to take effect.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public global::System.DateTime? OverrideSettingUntil { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OverrideSettingUntil; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).OverrideSettingUntil = value ?? default(global::System.DateTime); }

        /// <summary>Certificate chain object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginCertChainObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PluginCertChainObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PluginCertChainObjectName = value ?? null; }

        /// <summary>Intermediate certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginCertObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PluginCertObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PluginCertObjectName = value ?? null; }

        /// <summary>Intermediate certificate private key object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginKeyObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PluginKeyObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PluginKeyObjectName = value ?? null; }

        /// <summary>The resource ID of the Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginKeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PluginKeyVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PluginKeyVaultId = value ?? null; }

        /// <summary>Root certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PluginRootCertObjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PluginRootCertObjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PluginRootCertObjectName = value ?? null; }

        /// <summary>
        /// Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing.
        /// See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities)
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? PodIdentityProfileAllowNetworkPluginKubenet { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PodIdentityProfileAllowNetworkPluginKubenet; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PodIdentityProfileAllowNetworkPluginKubenet = value ?? default(bool); }

        /// <summary>Whether the pod identity addon is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? PodIdentityProfileEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PodIdentityProfileEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PodIdentityProfileEnabled = value ?? default(bool); }

        /// <summary>The pod identities to use in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPodIdentity[] PodIdentityProfileUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PodIdentityProfileUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PodIdentityProfileUserAssignedIdentity = value ?? null /* arrayOf */; }

        /// <summary>The pod identity exceptions to allow.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPodIdentityException[] PodIdentityProfileUserAssignedIdentityException { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PodIdentityProfileUserAssignedIdentityException; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PodIdentityProfileUserAssignedIdentityException = value ?? null /* arrayOf */; }

        /// <summary>Tells whether the cluster is Running or Stopped</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Code? PowerStateCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PowerStateCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PowerStateCode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Code)""); }

        /// <summary>The FQDN of private cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PrivateFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PrivateFqdn; }

        /// <summary>Private link resources associated with the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IPrivateLinkResource[] PrivateLinkResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PrivateLinkResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PrivateLinkResource = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterProperties _property;

        /// <summary>Properties of a managed cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ManagedClusterProperties()); set => this._property = value; }

        /// <summary>
        /// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ProvisioningErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ProvisioningErrorCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ProvisioningErrorCode = value ?? null; }

        /// <summary>A list of additional details about the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ICloudErrorBody[] ProvisioningErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ProvisioningErrorDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ProvisioningErrorDetail = value ?? null /* arrayOf */; }

        /// <summary>
        /// A message describing the error, intended to be suitable for display in a user interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ProvisioningErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ProvisioningErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ProvisioningErrorMessage = value ?? null; }

        /// <summary>
        /// The target of the particular error. For example, the name of the property in error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ProvisioningErrorTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ProvisioningErrorTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ProvisioningErrorTarget = value ?? null; }

        /// <summary>The current provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Allow or deny public network access for AKS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PublicNetworkAccess)""); }

        /// <summary>
        /// The resourceUID uniquely identifies ManagedClusters that reuse ARM ResourceIds (i.e: create, delete, create sequence)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ResourceUid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ResourceUid; }

        /// <summary>List of namespaces excluded from Safeguards checks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] SafeguardProfileExcludedNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SafeguardProfileExcludedNamespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SafeguardProfileExcludedNamespace = value ?? null /* arrayOf */; }

        /// <summary>
        /// The Safeguards level to be used. By default, Safeguards is enabled for all namespaces except those that AKS excludes via
        /// systemExcludedNamespaces
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level? SafeguardProfileLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SafeguardProfileLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SafeguardProfileLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level)""); }

        /// <summary>List of namespaces specified by AKS to be excluded from Safeguards</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] SafeguardProfileSystemExcludedNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SafeguardProfileSystemExcludedNamespace; }

        /// <summary>The version of constraints to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string SafeguardProfileVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SafeguardProfileVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SafeguardProfileVersion = value ?? null; }

        /// <summary>
        /// In use only while registry access granted by secret rather than managed identity. Set whether to grant the Defender gating
        /// agent access to the cluster's secrets for pulling images from registries. If secret access is denied and the registry
        /// requires pull secrets, the add-on will not perform any image validation. Default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? SecurityGatingAllowSecretAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityGatingAllowSecretAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityGatingAllowSecretAccess = value ?? default(bool); }

        /// <summary>
        /// Whether to enable Defender security gating. When enabled, the gating feature will scan container images and audit or block
        /// the deployment of images that do not meet security standards according to the configured security rules.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? SecurityGatingEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityGatingEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityGatingEnabled = value ?? default(bool); }

        /// <summary>
        /// List of identities that the admission controller will make use of in order to pull security artifacts from the registry.
        /// These are the same identities used by the cluster to pull container images. Each identity provided should have federated
        /// identity credential attached to it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem[] SecurityGatingIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityGatingIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityGatingIdentity = value ?? null /* arrayOf */; }

        /// <summary>Whether to enable Defender threat detection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? SecurityMonitoringEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityMonitoringEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityMonitoringEnabled = value ?? default(bool); }

        /// <summary>
        /// A list of up to 10 base64 encoded CAs that will be added to the trust store on all nodes in the cluster. For more information
        /// see [Custom CA Trust Certificates](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public byte[][] SecurityProfileCustomCaTrustCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileCustomCaTrustCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SecurityProfileCustomCaTrustCertificate = value ?? null /* arrayOf */; }

        /// <summary>Mode of the service mesh.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ServiceMeshMode? ServiceMeshProfileMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServiceMeshProfileMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServiceMeshProfileMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ServiceMeshMode)""); }

        /// <summary>The ID for the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServicePrincipalProfileClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServicePrincipalProfileClientId = value ?? null; }

        /// <summary>The secret password associated with the service principal in plain text.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServicePrincipalProfileSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).ServicePrincipalProfileSecret = value ?? null; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSku _sku;

        /// <summary>The managed cluster SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ManagedClusterSku()); set => this._sku = value; }

        /// <summary>The name of a managed cluster SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSkuInternal)Sku).Name = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName)""); }

        /// <summary>
        /// If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSkuInternal)Sku).Tier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier)""); }

        /// <summary>Whether to enable Snapshot Controller. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? SnapshotControllerEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SnapshotControllerEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SnapshotControllerEnabled = value ?? default(bool); }

        /// <summary>
        /// The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceSshPublicKey[] SshPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SshPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SshPublicKey = value ?? null /* arrayOf */; }

        /// <summary>
        /// The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubernetesSupportPlan? SupportPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SupportPlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).SupportPlan = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubernetesSupportPlan)""); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__trackedResource).Type; }

        /// <summary>Whether VPA add-on is enabled and configured to scale AKS-managed add-ons.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AddonAutoscaling? VerticalPodAutoscalerAddonAutoscaling { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).VerticalPodAutoscalerAddonAutoscaling; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).VerticalPodAutoscalerAddonAutoscaling = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AddonAutoscaling)""); }

        /// <summary>Whether to enable VPA add-on in cluster. Default value is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? VerticalPodAutoscalerEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).VerticalPodAutoscalerEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).VerticalPodAutoscalerEnabled = value ?? default(bool); }

        /// <summary>
        /// Resource IDs of the DNS zones to be associated with the Web App Routing add-on. Used only when Web App Routing is enabled.
        /// Public and private DNS zones can be in different resource groups, but all public DNS zones must be in the same resource
        /// group and all private DNS zones must be in the same resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] WebAppRoutingDnsZoneResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WebAppRoutingDnsZoneResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WebAppRoutingDnsZoneResourceId = value ?? null /* arrayOf */; }

        /// <summary>Whether to enable Web App Routing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? WebAppRoutingEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WebAppRoutingEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WebAppRoutingEnabled = value ?? default(bool); }

        /// <summary>
        /// Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:**
        /// 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters
        /// <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:**
        /// "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string WindowProfileAdminPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowProfileAdminPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowProfileAdminPassword = value ?? null; }

        /// <summary>
        /// Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:**
        /// "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm",
        /// "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0",
        /// "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string WindowProfileAdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowProfileAdminUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowProfileAdminUsername = value ?? null; }

        /// <summary>
        /// For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? WindowProfileEnableCsiProxy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowProfileEnableCsiProxy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowProfileEnableCsiProxy = value ?? default(bool); }

        /// <summary>
        /// The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LicenseType? WindowProfileLicenseType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowProfileLicenseType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WindowProfileLicenseType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LicenseType)""); }

        /// <summary>Whether to enable workload identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? WorkloadIdentityEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WorkloadIdentityEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesInternal)Property).WorkloadIdentityEnabled = value ?? default(bool); }

        /// <summary>Creates an new <see cref="ManagedCluster" /> instance.</summary>
        public ManagedCluster()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Managed cluster.
    public partial interface IManagedCluster :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResource
    {
        /// <summary>The list of AAD group object IDs that will have admin role of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of AAD group object IDs that will have admin role of the cluster.",
        SerializedName = @"adminGroupObjectIDs",
        PossibleTypes = new [] { typeof(string) })]
        string[] AadProfileAdminGroupObjectID { get; set; }
        /// <summary>
        /// (DEPRECATED) The client AAD application ID. Learn more at https://aka.ms/aks/aad-legacy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"(DEPRECATED) The client AAD application ID. Learn more at https://aka.ms/aks/aad-legacy.",
        SerializedName = @"clientAppID",
        PossibleTypes = new [] { typeof(string) })]
        string AadProfileClientAppId { get; set; }
        /// <summary>Whether to enable Azure RBAC for Kubernetes authorization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable Azure RBAC for Kubernetes authorization.",
        SerializedName = @"enableAzureRBAC",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AadProfileEnableAzureRbac { get; set; }
        /// <summary>Whether to enable managed AAD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable managed AAD.",
        SerializedName = @"managed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AadProfileManaged { get; set; }
        /// <summary>
        /// (DEPRECATED) The server AAD application ID. Learn more at https://aka.ms/aks/aad-legacy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"(DEPRECATED) The server AAD application ID. Learn more at https://aka.ms/aks/aad-legacy.",
        SerializedName = @"serverAppID",
        PossibleTypes = new [] { typeof(string) })]
        string AadProfileServerAppId { get; set; }
        /// <summary>
        /// (DEPRECATED) The server AAD application secret. Learn more at https://aka.ms/aks/aad-legacy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"(DEPRECATED) The server AAD application secret. Learn more at https://aka.ms/aks/aad-legacy.",
        SerializedName = @"serverAppSecret",
        PossibleTypes = new [] { typeof(string) })]
        string AadProfileServerAppSecret { get; set; }
        /// <summary>
        /// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.",
        SerializedName = @"tenantID",
        PossibleTypes = new [] { typeof(string) })]
        string AadProfileTenantId { get; set; }
        /// <summary>The profile of managed cluster add-on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The profile of managed cluster add-on.",
        SerializedName = @"addonProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesAddonProfiles) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesAddonProfiles AddonProfile { get; set; }
        /// <summary>The agent pool properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The agent pool properties.",
        SerializedName = @"agentPoolProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAgentPoolProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAgentPoolProfile[] AgentPoolProfile { get; set; }
        /// <summary>Indicates if AI toolchain operator enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if AI toolchain operator  enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AiToolchainOperatorProfileEnabled { get; set; }
        /// <summary>
        /// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use
        /// Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized
        /// IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).",
        SerializedName = @"authorizedIPRanges",
        PossibleTypes = new [] { typeof(string) })]
        string[] ApiServerAccessProfileAuthorizedIPRange { get; set; }
        /// <summary>Whether to disable run command for the cluster or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to disable run command for the cluster or not.",
        SerializedName = @"disableRunCommand",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ApiServerAccessProfileDisableRunCommand { get; set; }
        /// <summary>
        /// For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).",
        SerializedName = @"enablePrivateCluster",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ApiServerAccessProfileEnablePrivateCluster { get; set; }
        /// <summary>Whether to create additional public FQDN for private cluster or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to create additional public FQDN for private cluster or not.",
        SerializedName = @"enablePrivateClusterPublicFQDN",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ApiServerAccessProfileEnablePrivateClusterPublicFqdn { get; set; }
        /// <summary>Whether to enable apiserver vnet integration for the cluster or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable apiserver vnet integration for the cluster or not.",
        SerializedName = @"enableVnetIntegration",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ApiServerAccessProfileEnableVnetIntegration { get; set; }
        /// <summary>
        /// The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone).
        /// Allowed values are 'system' and 'none'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'.",
        SerializedName = @"privateDNSZone",
        PossibleTypes = new [] { typeof(string) })]
        string ApiServerAccessProfilePrivateDnsZone { get; set; }
        /// <summary>
        /// It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet
        /// integration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet integration.",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string ApiServerAccessProfileSubnetId { get; set; }
        /// <summary>Indicates if Application Monitoring Auto Instrumentation is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if Application Monitoring Auto Instrumentation is enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoInstrumentationEnabled { get; set; }
        /// <summary>Valid values are 'true' and 'false'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Valid values are 'true' and 'false'",
        SerializedName = @"balance-similar-node-groups",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileBalanceSimilarNodeGroup { get; set; }
        /// <summary>
        /// If set to true, all daemonset pods on empty nodes will be evicted before deletion of the node. If the daemonset pod cannot
        /// be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring that daemonset
        /// pods are deleted or evicted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If set to true, all daemonset pods on empty nodes will be evicted before deletion of the node. If the daemonset pod cannot be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring that daemonset pods are deleted or evicted.",
        SerializedName = @"daemonset-eviction-for-empty-nodes",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoScalerProfileDaemonsetEvictionForEmptyNode { get; set; }
        /// <summary>
        /// If set to true, all daemonset pods on occupied nodes will be evicted before deletion of the node. If the daemonset pod
        /// cannot be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring
        /// that daemonset pods are deleted or evicted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If set to true, all daemonset pods on occupied nodes will be evicted before deletion of the node. If the daemonset pod cannot be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring that daemonset pods are deleted or evicted.",
        SerializedName = @"daemonset-eviction-for-occupied-nodes",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoScalerProfileDaemonsetEvictionForOccupiedNode { get; set; }
        /// <summary>Available values are: 'least-waste', 'most-pods', 'priority', 'random'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Available values are: 'least-waste', 'most-pods', 'priority', 'random'.",
        SerializedName = @"expander",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Expander) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Expander? AutoScalerProfileExpander { get; set; }
        /// <summary>
        /// If set to true, the resources used by daemonset will be taken into account when making scaling down decisions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If set to true, the resources used by daemonset will be taken into account when making scaling down decisions.",
        SerializedName = @"ignore-daemonsets-utilization",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoScalerProfileIgnoreDaemonsetsUtilization { get; set; }
        /// <summary>The default is 10.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is 10.",
        SerializedName = @"max-empty-bulk-delete",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxEmptyBulkDelete { get; set; }
        /// <summary>The default is 600.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is 600.",
        SerializedName = @"max-graceful-termination-sec",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxGracefulTerminationSec { get; set; }
        /// <summary>
        /// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"max-node-provision-time",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxNodeProvisionTime { get; set; }
        /// <summary>The default is 45. The maximum is 100 and the minimum is 0.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is 45. The maximum is 100 and the minimum is 0.",
        SerializedName = @"max-total-unready-percentage",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxTotalUnreadyPercentage { get; set; }
        /// <summary>
        /// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all
        /// the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be
        /// an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).",
        SerializedName = @"new-pod-scale-up-delay",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileNewPodScaleUpDelay { get; set; }
        /// <summary>This must be an integer. The default is 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This must be an integer. The default is 3.",
        SerializedName = @"ok-total-unready-count",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileOkTotalUnreadyCount { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-delay-after-add",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownDelayAfterAdd { get; set; }
        /// <summary>
        /// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m)
        /// is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-delay-after-delete",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownDelayAfterDelete { get; set; }
        /// <summary>
        /// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-delay-after-failure",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownDelayAfterFailure { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-unneeded-time",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownUnneededTime { get; set; }
        /// <summary>
        /// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-unready-time",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownUnreadyTime { get; set; }
        /// <summary>The default is '0.5'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is '0.5'.",
        SerializedName = @"scale-down-utilization-threshold",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownUtilizationThreshold { get; set; }
        /// <summary>The default is '10'. Values must be an integer number of seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is '10'. Values must be an integer number of seconds.",
        SerializedName = @"scan-interval",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScanInterval { get; set; }
        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is true.",
        SerializedName = @"skip-nodes-with-local-storage",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileSkipNodesWithLocalStorage { get; set; }
        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is true.",
        SerializedName = @"skip-nodes-with-system-pods",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileSkipNodesWithSystemPod { get; set; }
        /// <summary>
        /// The default is Unmanaged, but may change to either NodeImage or SecurityPatch at GA.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default is Unmanaged, but may change to either NodeImage or SecurityPatch at GA.",
        SerializedName = @"nodeOSUpgradeChannel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeOSUpgradeChannel) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeOSUpgradeChannel? AutoUpgradeProfileNodeOSUpgradeChannel { get; set; }
        /// <summary>
        /// For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).",
        SerializedName = @"upgradeChannel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UpgradeChannel) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UpgradeChannel? AutoUpgradeProfileUpgradeChannel { get; set; }
        /// <summary>Whether to enable Azure Key Vault key management service. The default is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable Azure Key Vault key management service. The default is false.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AzureKeyVaultKmEnabled { get; set; }
        /// <summary>
        /// Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name)
        /// for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key
        /// identifier. When Azure Key Vault key management service is disabled, leave the field empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty.",
        SerializedName = @"keyId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureKeyVaultKmKeyId { get; set; }
        /// <summary>
        /// Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public
        /// access from all networks. `Private` means the key vault disables public access and enables private link. The default value
        /// is `Public`.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link. The default value is `Public`.",
        SerializedName = @"keyVaultNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KeyVaultNetworkAccessTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KeyVaultNetworkAccessTypes? AzureKeyVaultKmKeyVaultNetworkAccess { get; set; }
        /// <summary>
        /// Resource ID of key vault. When keyVaultNetworkAccess is `Private`, this field is required and must be a valid resource
        /// ID. When keyVaultNetworkAccess is `Public`, leave the field empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of key vault. When keyVaultNetworkAccess is `Private`, this field is required and must be a valid resource ID. When keyVaultNetworkAccess is `Public`, leave the field empty.",
        SerializedName = @"keyVaultResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureKeyVaultKmKeyVaultResourceId { get; set; }
        /// <summary>
        /// The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes
        /// APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.",
        SerializedName = @"azurePortalFQDN",
        PossibleTypes = new [] { typeof(string) })]
        string AzurePortalFqdn { get;  }
        /// <summary>Whether to enable AzureBlob CSI Driver. The default value is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable AzureBlob CSI Driver. The default value is false.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BlobCsiDriverEnabled { get; set; }
        /// <summary>The source where the artifacts are downloaded from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source where the artifacts are downloaded from.",
        SerializedName = @"artifactSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ArtifactSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ArtifactSource? BootstrapProfileArtifactSource { get; set; }
        /// <summary>
        /// The resource Id of Azure Container Registry. The registry must have private network access, premium SKU and zone redundancy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource Id of Azure Container Registry. The registry must have private network access, premium SKU and zone redundancy.",
        SerializedName = @"containerRegistryId",
        PossibleTypes = new [] { typeof(string) })]
        string BootstrapProfileContainerRegistryId { get; set; }
        /// <summary>Istio egress gateways.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Istio egress gateways.",
        SerializedName = @"egressGateways",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioEgressGateway) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioEgressGateway[] ComponentEgressGateway { get; set; }
        /// <summary>Istio ingress gateways.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Istio ingress gateways.",
        SerializedName = @"ingressGateways",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioIngressGateway) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioIngressGateway[] ComponentIngressGateway { get; set; }
        /// <summary>
        /// Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No custom
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No custom metrics will be emitted if this field is false but the container insights enabled field is false",
        SerializedName = @"disableCustomMetrics",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContainerInsightDisableCustomMetric { get; set; }
        /// <summary>
        /// Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No prometheus
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No prometheus metrics will be emitted if this field is false but the container insights enabled field is false",
        SerializedName = @"disablePrometheusMetricsScraping",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContainerInsightDisablePrometheusMetricsScraping { get; set; }
        /// <summary>Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContainerInsightEnabled { get; set; }
        /// <summary>
        /// Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs.",
        SerializedName = @"logAnalyticsWorkspaceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerInsightLogAnalyticsWorkspaceResourceId { get; set; }
        /// <summary>The syslog host port. If not specified, the default port is 28330.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The syslog host port. If not specified, the default port is 28330.",
        SerializedName = @"syslogPort",
        PossibleTypes = new [] { typeof(long) })]
        long? ContainerInsightSyslogPort { get; set; }
        /// <summary>
        /// The Managed Cluster sku.tier must be set to 'Standard' or 'Premium' to enable this feature. Enabling this will add Kubernetes
        /// Namespace and Deployment details to the Cost Analysis views in the Azure portal. If not specified, the default is false.
        /// For more information see aka.ms/aks/docs/cost-analysis.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Managed Cluster sku.tier must be set to 'Standard' or 'Premium' to enable this feature. Enabling this will add Kubernetes Namespace and Deployment details to the Cost Analysis views in the Azure portal. If not specified, the default is false. For more information see aka.ms/aks/docs/cost-analysis.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CostAnalysisEnabled { get; set; }
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the ARM ID of the source object to be used to create the target object.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string CreationDataSourceResourceId { get; set; }
        /// <summary>The version of Kubernetes the Managed Cluster is running.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of Kubernetes the Managed Cluster is running.",
        SerializedName = @"currentKubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentKubernetesVersion { get;  }
        /// <summary>
        /// Resource ID of the Log Analytics workspace to be associated with Microsoft Defender. When Microsoft Defender is enabled,
        /// this field is required and must be a valid workspace resource ID. When Microsoft Defender is disabled, leave the field
        /// empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of the Log Analytics workspace to be associated with Microsoft Defender. When Microsoft Defender is enabled, this field is required and must be a valid workspace resource ID. When Microsoft Defender is disabled, leave the field empty.",
        SerializedName = @"logAnalyticsWorkspaceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string DefenderLogAnalyticsWorkspaceResourceId { get; set; }
        /// <summary>
        /// If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters
        /// that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).",
        SerializedName = @"disableLocalAccounts",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisableLocalAccount { get; set; }
        /// <summary>Whether to enable AzureDisk CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable AzureDisk CSI Driver. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DiskCsiDriverEnabled { get; set; }
        /// <summary>The version of AzureDisk CSI Driver. The default value is v1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of AzureDisk CSI Driver. The default value is v1.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string DiskCsiDriverVersion { get; set; }
        /// <summary>
        /// This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'",
        SerializedName = @"diskEncryptionSetID",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionSetId { get; set; }
        /// <summary>This cannot be updated once the Managed Cluster has been created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This cannot be updated once the Managed Cluster has been created.",
        SerializedName = @"dnsPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string DnsPrefix { get; set; }
        /// <summary>
        /// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated.
        /// Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency
        /// per the normal etag convention.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal etag convention.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get;  }
        /// <summary>
        /// The default value is false. It can be enabled/disabled on creation and updating of the managed cluster. See [https://aka.ms/NamespaceARMResource](https://aka.ms/NamespaceARMResource)
        /// for more details on Namespace as a ARM Resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default value is false. It can be enabled/disabled on creation and updating of the managed cluster. See [https://aka.ms/NamespaceARMResource](https://aka.ms/NamespaceARMResource) for more details on Namespace as a ARM Resource.",
        SerializedName = @"enableNamespaceResources",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableNamespaceResource { get; set; }
        /// <summary>
        /// (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes
        /// v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"(DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.",
        SerializedName = @"enablePodSecurityPolicy",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnablePodSecurityPolicy { get; set; }
        /// <summary>Whether to enable Kubernetes Role-Based Access Control.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable Kubernetes Role-Based Access Control.",
        SerializedName = @"enableRBAC",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableRbac { get; set; }
        /// <summary>The name of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the extended location.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationName { get; set; }
        /// <summary>The type of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the extended location.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ExtendedLocationTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ExtendedLocationTypes? ExtendedLocationType { get; set; }
        /// <summary>Whether to enable AzureFile CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable AzureFile CSI Driver. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FileCsiDriverEnabled { get; set; }
        /// <summary>The FQDN of the master pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The FQDN of the master pool.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string Fqdn { get;  }
        /// <summary>This cannot be updated once the Managed Cluster has been created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This cannot be updated once the Managed Cluster has been created.",
        SerializedName = @"fqdnSubdomain",
        PossibleTypes = new [] { typeof(string) })]
        string FqdnSubdomain { get; set; }
        /// <summary>
        /// Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet
        /// which is used to create the managed cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.",
        SerializedName = @"dnsServer",
        PossibleTypes = new [] { typeof(string) })]
        string GmsaProfileDnsServer { get; set; }
        /// <summary>Specifies whether to enable Windows gMSA in the managed cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether to enable Windows gMSA in the managed cluster.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? GmsaProfileEnabled { get; set; }
        /// <summary>
        /// Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the
        /// vnet which is used to create the managed cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.",
        SerializedName = @"rootDomainName",
        PossibleTypes = new [] { typeof(string) })]
        string GmsaProfileRootDomainName { get; set; }
        /// <summary>
        /// A read-only list of all endpoints for which traffic should not be sent to the proxy. This list is a superset of noProxy
        /// and values injected by AKS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A read-only list of all endpoints for which traffic should not be sent to the proxy. This list is a superset of noProxy and values injected by AKS.",
        SerializedName = @"effectiveNoProxy",
        PossibleTypes = new [] { typeof(string) })]
        string[] HttpProxyConfigEffectiveNoProxy { get;  }
        /// <summary>The HTTP proxy server endpoint to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HTTP proxy server endpoint to use.",
        SerializedName = @"httpProxy",
        PossibleTypes = new [] { typeof(string) })]
        string HttpProxyConfigHttpProxy { get; set; }
        /// <summary>The HTTPS proxy server endpoint to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HTTPS proxy server endpoint to use.",
        SerializedName = @"httpsProxy",
        PossibleTypes = new [] { typeof(string) })]
        string HttpProxyConfigHttpsProxy { get; set; }
        /// <summary>The endpoints that should not go through proxy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The endpoints that should not go through proxy.",
        SerializedName = @"noProxy",
        PossibleTypes = new [] { typeof(string) })]
        string[] HttpProxyConfigNoProxy { get; set; }
        /// <summary>Alternative CA cert to use for connecting to proxy servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Alternative CA cert to use for connecting to proxy servers.",
        SerializedName = @"trustedCa",
        PossibleTypes = new [] { typeof(string) })]
        string HttpProxyConfigTrustedCa { get; set; }
        /// <summary>The client ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client ID of the user assigned identity.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityClientId { get; set; }
        /// <summary>
        /// The delegated identity resources assigned to this managed cluster. This can only be set by another Azure Resource Provider,
        /// and managed cluster only accept one delegated identity resource. Internal use only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The delegated identity resources assigned to this managed cluster. This can only be set by another Azure Resource Provider, and managed cluster only accept one delegated identity resource. Internal use only.",
        SerializedName = @"delegatedResources",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api40.IDelegatedResources) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api40.IDelegatedResources IdentityDelegatedResource { get; set; }
        /// <summary>The object ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object ID of the user assigned identity.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityObjectId { get; set; }
        /// <summary>
        /// The principal id of the system assigned identity which is used by master components.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal id of the system assigned identity which is used by master components.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The user identity associated with the managed cluster. This identity will be used by the kubelet. Only one user assigned
        /// identity is allowed. The only accepted key is "kubeletidentity", with value of "resourceId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user identity associated with the managed cluster. This identity will be used by the kubelet. Only one user assigned identity is allowed. The only accepted key is ""kubeletidentity"", with value of ""resourceId"": ""/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}"".",
        SerializedName = @"identityProfile",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesIdentityProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesIdentityProfile IdentityProfile { get; set; }
        /// <summary>The resource ID of the user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the user assigned identity.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityResourceId { get; set; }
        /// <summary>
        /// The tenant id of the system assigned identity which is used by master components.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant id of the system assigned identity which is used by master components.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ResourceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Whether to enable Image Cleaner on AKS cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable Image Cleaner on AKS cluster.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ImageCleanerEnabled { get; set; }
        /// <summary>Image Cleaner scanning interval in hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image Cleaner scanning interval in hours.",
        SerializedName = @"intervalHours",
        PossibleTypes = new [] { typeof(int) })]
        int? ImageCleanerIntervalHour { get; set; }
        /// <summary>Whether to enable image integrity. The default value is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable image integrity. The default value is false.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ImageIntegrityEnabled { get; set; }
        /// <summary>
        /// The list of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary
        /// upgrade is in progress, this can only hold two consecutive values. For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary upgrade is in progress, this can only hold two consecutive values. For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade",
        SerializedName = @"revisions",
        PossibleTypes = new [] { typeof(string) })]
        string[] IstioRevision { get; set; }
        /// <summary>Whether to enable KEDA.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable KEDA.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? KedaEnabled { get; set; }
        /// <summary>
        /// This is primarily used to expose different UI experiences in the portal for different kinds
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is primarily used to expose different UI experiences in the portal for different kinds",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string Kind { get; set; }
        /// <summary>
        /// Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.",
        SerializedName = @"metricAnnotationsAllowList",
        PossibleTypes = new [] { typeof(string) })]
        string KubeStateMetricAnnotationsAllowList { get; set; }
        /// <summary>
        /// Comma-separated list of Kubernetes annotations keys that will be used in the resource's labels metric.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Comma-separated list of Kubernetes annotations keys that will be used in the resource's labels metric. ",
        SerializedName = @"metricLabelsAllowlist",
        PossibleTypes = new [] { typeof(string) })]
        string KubeStateMetricLabelsAllowlist { get; set; }
        /// <summary>
        /// When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed
        /// sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed,
        /// however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KubernetesVersion { get; set; }
        /// <summary>The administrator username to use for Linux VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator username to use for Linux VMs.",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string LinuxProfileAdminUsername { get; set; }
        /// <summary>The max number of agent pools for the managed cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The max number of agent pools for the managed cluster.",
        SerializedName = @"maxAgentPools",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxAgentPool { get;  }
        /// <summary>Whether to enable the Prometheus collector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable the Prometheus collector",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MetricEnabled { get; set; }
        /// <summary>The network configuration profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The network configuration profile.",
        SerializedName = @"networkProfile",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceNetworkProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceNetworkProfile NetworkProfile { get; set; }
        /// <summary>Ingress type for the default NginxIngressController custom resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ingress type for the default NginxIngressController custom resource",
        SerializedName = @"defaultIngressControllerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType? NginxDefaultIngressControllerType { get; set; }
        /// <summary>Once the mode it set to Auto, it cannot be changed back to Manual.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Once the mode it set to Auto, it cannot be changed back to Manual.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeProvisioningMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeProvisioningMode? NodeProvisioningProfileMode { get; set; }
        /// <summary>The name of the resource group containing agent pool nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the resource group containing agent pool nodes.",
        SerializedName = @"nodeResourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string NodeResourceGroup { get; set; }
        /// <summary>The restriction level applied to the cluster's node resource group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The restriction level applied to the cluster's node resource group",
        SerializedName = @"restrictionLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.RestrictionLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.RestrictionLevel? NodeResourceGroupProfileRestrictionLevel { get; set; }
        /// <summary>Whether to enable Node Restriction</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable Node Restriction",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NodeRestrictionEnabled { get; set; }
        /// <summary>Whether the OIDC issuer is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the OIDC issuer is enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OidcIssuerProfileEnabled { get; set; }
        /// <summary>The OIDC issuer url of the Managed Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OIDC issuer url of the Managed Cluster.",
        SerializedName = @"issuerURL",
        PossibleTypes = new [] { typeof(string) })]
        string OidcIssuerProfileIssuerUrl { get;  }
        /// <summary>
        /// Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OpenTelemetryLogEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(long) })]
        long? OpenTelemetryLogPort { get; set; }
        /// <summary>Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OpenTelemetryMetricEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(long) })]
        long? OpenTelemetryMetricPort { get; set; }
        /// <summary>
        /// Whether to force upgrade the cluster. Note that this option instructs upgrade operation to bypass upgrade protections
        /// such as checking for deprecated API usage. Enable this option only with caution.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to force upgrade the cluster. Note that this option instructs upgrade operation to bypass upgrade protections such as checking for deprecated API usage. Enable this option only with caution.",
        SerializedName = @"forceUpgrade",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OverrideSettingForceUpgrade { get; set; }
        /// <summary>
        /// Until when the overrides are effective. Note that this only matches the start time of an upgrade, and the effectiveness
        /// won't change once an upgrade starts even if the `until` expires as upgrade proceeds. This field is not set by default.
        /// It must be set for the overrides to take effect.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Until when the overrides are effective. Note that this only matches the start time of an upgrade, and the effectiveness won't change once an upgrade starts even if the `until` expires as upgrade proceeds. This field is not set by default. It must be set for the overrides to take effect.",
        SerializedName = @"until",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? OverrideSettingUntil { get; set; }
        /// <summary>Certificate chain object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate chain object name in Azure Key Vault.",
        SerializedName = @"certChainObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginCertChainObjectName { get; set; }
        /// <summary>Intermediate certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Intermediate certificate object name in Azure Key Vault.",
        SerializedName = @"certObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginCertObjectName { get; set; }
        /// <summary>Intermediate certificate private key object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Intermediate certificate private key object name in Azure Key Vault.",
        SerializedName = @"keyObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginKeyObjectName { get; set; }
        /// <summary>The resource ID of the Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the Key Vault.",
        SerializedName = @"keyVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string PluginKeyVaultId { get; set; }
        /// <summary>Root certificate object name in Azure Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Root certificate object name in Azure Key Vault.",
        SerializedName = @"rootCertObjectName",
        PossibleTypes = new [] { typeof(string) })]
        string PluginRootCertObjectName { get; set; }
        /// <summary>
        /// Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing.
        /// See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities)
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information.",
        SerializedName = @"allowNetworkPluginKubenet",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PodIdentityProfileAllowNetworkPluginKubenet { get; set; }
        /// <summary>Whether the pod identity addon is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the pod identity addon is enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PodIdentityProfileEnabled { get; set; }
        /// <summary>The pod identities to use in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pod identities to use in the cluster.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPodIdentity) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPodIdentity[] PodIdentityProfileUserAssignedIdentity { get; set; }
        /// <summary>The pod identity exceptions to allow.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pod identity exceptions to allow.",
        SerializedName = @"userAssignedIdentityExceptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPodIdentityException) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPodIdentityException[] PodIdentityProfileUserAssignedIdentityException { get; set; }
        /// <summary>Tells whether the cluster is Running or Stopped</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells whether the cluster is Running or Stopped",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Code) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Code? PowerStateCode { get; set; }
        /// <summary>The FQDN of private cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The FQDN of private cluster.",
        SerializedName = @"privateFQDN",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateFqdn { get;  }
        /// <summary>Private link resources associated with the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private link resources associated with the cluster.",
        SerializedName = @"privateLinkResources",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IPrivateLinkResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IPrivateLinkResource[] PrivateLinkResource { get; set; }
        /// <summary>
        /// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningErrorCode { get; set; }
        /// <summary>A list of additional details about the error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of additional details about the error.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ICloudErrorBody) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ICloudErrorBody[] ProvisioningErrorDetail { get; set; }
        /// <summary>
        /// A message describing the error, intended to be suitable for display in a user interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A message describing the error, intended to be suitable for display in a user interface.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningErrorMessage { get; set; }
        /// <summary>
        /// The target of the particular error. For example, the name of the property in error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target of the particular error. For example, the name of the property in error.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningErrorTarget { get; set; }
        /// <summary>The current provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Allow or deny public network access for AKS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allow or deny public network access for AKS",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The resourceUID uniquely identifies ManagedClusters that reuse ARM ResourceIds (i.e: create, delete, create sequence)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resourceUID uniquely identifies ManagedClusters that reuse ARM ResourceIds (i.e: create, delete, create sequence)",
        SerializedName = @"resourceUID",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceUid { get;  }
        /// <summary>List of namespaces excluded from Safeguards checks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of namespaces excluded from Safeguards checks",
        SerializedName = @"excludedNamespaces",
        PossibleTypes = new [] { typeof(string) })]
        string[] SafeguardProfileExcludedNamespace { get; set; }
        /// <summary>
        /// The Safeguards level to be used. By default, Safeguards is enabled for all namespaces except those that AKS excludes via
        /// systemExcludedNamespaces
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Safeguards level to be used. By default, Safeguards is enabled for all namespaces except those that AKS excludes via systemExcludedNamespaces",
        SerializedName = @"level",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level? SafeguardProfileLevel { get; set; }
        /// <summary>List of namespaces specified by AKS to be excluded from Safeguards</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of namespaces specified by AKS to be excluded from Safeguards",
        SerializedName = @"systemExcludedNamespaces",
        PossibleTypes = new [] { typeof(string) })]
        string[] SafeguardProfileSystemExcludedNamespace { get;  }
        /// <summary>The version of constraints to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of constraints to use",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string SafeguardProfileVersion { get; set; }
        /// <summary>
        /// In use only while registry access granted by secret rather than managed identity. Set whether to grant the Defender gating
        /// agent access to the cluster's secrets for pulling images from registries. If secret access is denied and the registry
        /// requires pull secrets, the add-on will not perform any image validation. Default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In use only while registry access granted by secret rather than managed identity. Set whether to grant the Defender gating agent access to the cluster's secrets for pulling images from registries. If secret access is denied and the registry requires pull secrets, the add-on will not perform any image validation. Default value is false.",
        SerializedName = @"allowSecretAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SecurityGatingAllowSecretAccess { get; set; }
        /// <summary>
        /// Whether to enable Defender security gating. When enabled, the gating feature will scan container images and audit or block
        /// the deployment of images that do not meet security standards according to the configured security rules.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable Defender security gating. When enabled, the gating feature will scan container images and audit or block the deployment of images that do not meet security standards according to the configured security rules.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SecurityGatingEnabled { get; set; }
        /// <summary>
        /// List of identities that the admission controller will make use of in order to pull security artifacts from the registry.
        /// These are the same identities used by the cluster to pull container images. Each identity provided should have federated
        /// identity credential attached to it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of identities that the admission controller will make use of in order to pull security artifacts from the registry. These are the same identities used by the cluster to pull container images. Each identity provided should have federated identity credential attached to it.",
        SerializedName = @"identities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem[] SecurityGatingIdentity { get; set; }
        /// <summary>Whether to enable Defender threat detection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable Defender threat detection",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SecurityMonitoringEnabled { get; set; }
        /// <summary>
        /// A list of up to 10 base64 encoded CAs that will be added to the trust store on all nodes in the cluster. For more information
        /// see [Custom CA Trust Certificates](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of up to 10 base64 encoded CAs that will be added to the trust store on all nodes in the cluster. For more information see [Custom CA Trust Certificates](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority).",
        SerializedName = @"customCATrustCertificates",
        PossibleTypes = new [] { typeof(byte[]) })]
        byte[][] SecurityProfileCustomCaTrustCertificate { get; set; }
        /// <summary>Mode of the service mesh.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Mode of the service mesh.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ServiceMeshMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ServiceMeshMode? ServiceMeshProfileMode { get; set; }
        /// <summary>The ID for the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID for the service principal.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The secret password associated with the service principal in plain text.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The secret password associated with the service principal in plain text.",
        SerializedName = @"secret",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileSecret { get; set; }
        /// <summary>The name of a managed cluster SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of a managed cluster SKU.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName? SkuName { get; set; }
        /// <summary>
        /// If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers) for more details.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier? SkuTier { get; set; }
        /// <summary>Whether to enable Snapshot Controller. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable Snapshot Controller. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SnapshotControllerEnabled { get; set; }
        /// <summary>
        /// The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.",
        SerializedName = @"publicKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceSshPublicKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceSshPublicKey[] SshPublicKey { get; set; }
        /// <summary>
        /// The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'.",
        SerializedName = @"supportPlan",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubernetesSupportPlan) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubernetesSupportPlan? SupportPlan { get; set; }
        /// <summary>Whether VPA add-on is enabled and configured to scale AKS-managed add-ons.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether VPA add-on is enabled and configured to scale AKS-managed add-ons.",
        SerializedName = @"addonAutoscaling",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AddonAutoscaling) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AddonAutoscaling? VerticalPodAutoscalerAddonAutoscaling { get; set; }
        /// <summary>Whether to enable VPA add-on in cluster. Default value is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable VPA add-on in cluster. Default value is false.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VerticalPodAutoscalerEnabled { get; set; }
        /// <summary>
        /// Resource IDs of the DNS zones to be associated with the Web App Routing add-on. Used only when Web App Routing is enabled.
        /// Public and private DNS zones can be in different resource groups, but all public DNS zones must be in the same resource
        /// group and all private DNS zones must be in the same resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource IDs of the DNS zones to be associated with the Web App Routing add-on. Used only when Web App Routing is enabled. Public and private DNS zones can be in different resource groups, but all public DNS zones must be in the same resource group and all private DNS zones must be in the same resource group.",
        SerializedName = @"dnsZoneResourceIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] WebAppRoutingDnsZoneResourceId { get; set; }
        /// <summary>Whether to enable Web App Routing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable Web App Routing.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WebAppRoutingEnabled { get; set; }
        /// <summary>
        /// Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:**
        /// 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters
        /// <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:**
        /// "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** ""abc@123"", ""P@$$w0rd"", ""P@ssw0rd"", ""P@ssword123"", ""Pa$$word"", ""pass@word1"", ""Password!"", ""Password1"", ""Password22"", ""iloveyou!""",
        SerializedName = @"adminPassword",
        PossibleTypes = new [] { typeof(string) })]
        string WindowProfileAdminPassword { get; set; }
        /// <summary>
        /// Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:**
        /// "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm",
        /// "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0",
        /// "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in ""."" <br><br> **Disallowed values:** ""administrator"", ""admin"", ""user"", ""user1"", ""test"", ""user2"", ""test1"", ""user3"", ""admin1"", ""1"", ""123"", ""a"", ""actuser"", ""adm"", ""admin2"", ""aspnet"", ""backup"", ""console"", ""david"", ""guest"", ""john"", ""owner"", ""root"", ""server"", ""sql"", ""support"", ""support_388945a0"", ""sys"", ""test2"", ""test3"", ""user4"", ""user5"". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string WindowProfileAdminUsername { get; set; }
        /// <summary>
        /// For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).",
        SerializedName = @"enableCSIProxy",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowProfileEnableCsiProxy { get; set; }
        /// <summary>
        /// The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.",
        SerializedName = @"licenseType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LicenseType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LicenseType? WindowProfileLicenseType { get; set; }
        /// <summary>Whether to enable workload identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to enable workload identity.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WorkloadIdentityEnabled { get; set; }

    }
    /// Managed cluster.
    internal partial interface IManagedClusterInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ITrackedResourceInternal
    {
        /// <summary>The Azure Active Directory configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAadProfile AadProfile { get; set; }
        /// <summary>The list of AAD group object IDs that will have admin role of the cluster.</summary>
        string[] AadProfileAdminGroupObjectID { get; set; }
        /// <summary>
        /// (DEPRECATED) The client AAD application ID. Learn more at https://aka.ms/aks/aad-legacy.
        /// </summary>
        string AadProfileClientAppId { get; set; }
        /// <summary>Whether to enable Azure RBAC for Kubernetes authorization.</summary>
        bool? AadProfileEnableAzureRbac { get; set; }
        /// <summary>Whether to enable managed AAD.</summary>
        bool? AadProfileManaged { get; set; }
        /// <summary>
        /// (DEPRECATED) The server AAD application ID. Learn more at https://aka.ms/aks/aad-legacy.
        /// </summary>
        string AadProfileServerAppId { get; set; }
        /// <summary>
        /// (DEPRECATED) The server AAD application secret. Learn more at https://aka.ms/aks/aad-legacy.
        /// </summary>
        string AadProfileServerAppSecret { get; set; }
        /// <summary>
        /// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
        /// </summary>
        string AadProfileTenantId { get; set; }
        /// <summary>The profile of managed cluster add-on.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesAddonProfiles AddonProfile { get; set; }
        /// <summary>The agent pool properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAgentPoolProfile[] AgentPoolProfile { get; set; }
        /// <summary>AI toolchain operator settings that apply to the whole cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAiToolchainOperatorProfile AiToolchainOperatorProfile { get; set; }
        /// <summary>Indicates if AI toolchain operator enabled or not.</summary>
        bool? AiToolchainOperatorProfileEnabled { get; set; }
        /// <summary>The access profile for managed cluster API server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterApiServerAccessProfile ApiServerAccessProfile { get; set; }
        /// <summary>
        /// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use
        /// Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized
        /// IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
        /// </summary>
        string[] ApiServerAccessProfileAuthorizedIPRange { get; set; }
        /// <summary>Whether to disable run command for the cluster or not.</summary>
        bool? ApiServerAccessProfileDisableRunCommand { get; set; }
        /// <summary>
        /// For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
        /// </summary>
        bool? ApiServerAccessProfileEnablePrivateCluster { get; set; }
        /// <summary>Whether to create additional public FQDN for private cluster or not.</summary>
        bool? ApiServerAccessProfileEnablePrivateClusterPublicFqdn { get; set; }
        /// <summary>Whether to enable apiserver vnet integration for the cluster or not.</summary>
        bool? ApiServerAccessProfileEnableVnetIntegration { get; set; }
        /// <summary>
        /// The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone).
        /// Allowed values are 'system' and 'none'.
        /// </summary>
        string ApiServerAccessProfilePrivateDnsZone { get; set; }
        /// <summary>
        /// It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet
        /// integration.
        /// </summary>
        string ApiServerAccessProfileSubnetId { get; set; }
        /// <summary>
        /// Application Monitoring Auto Instrumentation for Kubernetes Application Container. Deploys web hook to auto-instrument
        /// Azure Monitor OpenTelemetry based SDKs to collect OpenTelemetry metrics, logs and traces of the application. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileAppMonitoringAutoInstrumentation AppMonitoringAutoInstrumentation { get; set; }
        /// <summary>
        /// Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Logs and Traces. Collects OpenTelemetry
        /// logs and traces of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryLogs AppMonitoringOpenTelemetryLog { get; set; }
        /// <summary>
        /// Application Monitoring Open Telemetry Metrics Profile for Kubernetes Application Container Metrics. Collects OpenTelemetry
        /// metrics of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileAppMonitoringOpenTelemetryMetrics AppMonitoringOpenTelemetryMetric { get; set; }
        /// <summary>Indicates if Application Monitoring Auto Instrumentation is enabled or not.</summary>
        bool? AutoInstrumentationEnabled { get; set; }
        /// <summary>Parameters to be applied to the cluster-autoscaler when enabled</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesAutoScalerProfile AutoScalerProfile { get; set; }
        /// <summary>Valid values are 'true' and 'false'</summary>
        string AutoScalerProfileBalanceSimilarNodeGroup { get; set; }
        /// <summary>
        /// If set to true, all daemonset pods on empty nodes will be evicted before deletion of the node. If the daemonset pod cannot
        /// be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring that daemonset
        /// pods are deleted or evicted.
        /// </summary>
        bool? AutoScalerProfileDaemonsetEvictionForEmptyNode { get; set; }
        /// <summary>
        /// If set to true, all daemonset pods on occupied nodes will be evicted before deletion of the node. If the daemonset pod
        /// cannot be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring
        /// that daemonset pods are deleted or evicted.
        /// </summary>
        bool? AutoScalerProfileDaemonsetEvictionForOccupiedNode { get; set; }
        /// <summary>Available values are: 'least-waste', 'most-pods', 'priority', 'random'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Expander? AutoScalerProfileExpander { get; set; }
        /// <summary>
        /// If set to true, the resources used by daemonset will be taken into account when making scaling down decisions.
        /// </summary>
        bool? AutoScalerProfileIgnoreDaemonsetsUtilization { get; set; }
        /// <summary>The default is 10.</summary>
        string AutoScalerProfileMaxEmptyBulkDelete { get; set; }
        /// <summary>The default is 600.</summary>
        string AutoScalerProfileMaxGracefulTerminationSec { get; set; }
        /// <summary>
        /// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileMaxNodeProvisionTime { get; set; }
        /// <summary>The default is 45. The maximum is 100 and the minimum is 0.</summary>
        string AutoScalerProfileMaxTotalUnreadyPercentage { get; set; }
        /// <summary>
        /// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all
        /// the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be
        /// an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
        /// </summary>
        string AutoScalerProfileNewPodScaleUpDelay { get; set; }
        /// <summary>This must be an integer. The default is 3.</summary>
        string AutoScalerProfileOkTotalUnreadyCount { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownDelayAfterAdd { get; set; }
        /// <summary>
        /// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m)
        /// is supported.
        /// </summary>
        string AutoScalerProfileScaleDownDelayAfterDelete { get; set; }
        /// <summary>
        /// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownDelayAfterFailure { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownUnneededTime { get; set; }
        /// <summary>
        /// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownUnreadyTime { get; set; }
        /// <summary>The default is '0.5'.</summary>
        string AutoScalerProfileScaleDownUtilizationThreshold { get; set; }
        /// <summary>The default is '10'. Values must be an integer number of seconds.</summary>
        string AutoScalerProfileScanInterval { get; set; }
        /// <summary>The default is true.</summary>
        string AutoScalerProfileSkipNodesWithLocalStorage { get; set; }
        /// <summary>The default is true.</summary>
        string AutoScalerProfileSkipNodesWithSystemPod { get; set; }
        /// <summary>The auto upgrade configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAutoUpgradeProfile AutoUpgradeProfile { get; set; }
        /// <summary>
        /// The default is Unmanaged, but may change to either NodeImage or SecurityPatch at GA.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeOSUpgradeChannel? AutoUpgradeProfileNodeOSUpgradeChannel { get; set; }
        /// <summary>
        /// For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.UpgradeChannel? AutoUpgradeProfileUpgradeChannel { get; set; }
        /// <summary>Whether to enable Azure Key Vault key management service. The default is false.</summary>
        bool? AzureKeyVaultKmEnabled { get; set; }
        /// <summary>
        /// Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name)
        /// for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key
        /// identifier. When Azure Key Vault key management service is disabled, leave the field empty.
        /// </summary>
        string AzureKeyVaultKmKeyId { get; set; }
        /// <summary>
        /// Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public
        /// access from all networks. `Private` means the key vault disables public access and enables private link. The default value
        /// is `Public`.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KeyVaultNetworkAccessTypes? AzureKeyVaultKmKeyVaultNetworkAccess { get; set; }
        /// <summary>
        /// Resource ID of key vault. When keyVaultNetworkAccess is `Private`, this field is required and must be a valid resource
        /// ID. When keyVaultNetworkAccess is `Public`, leave the field empty.
        /// </summary>
        string AzureKeyVaultKmKeyVaultResourceId { get; set; }
        /// <summary>Prometheus addon profile for the container service cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfile AzureMonitorProfile { get; set; }
        /// <summary>
        /// Application Monitoring Profile for Kubernetes Application Container. Collects application logs, metrics and traces through
        /// auto-instrumentation of the application using Azure Monitor OpenTelemetry based SDKs. See aka.ms/AzureMonitorApplicationMonitoring
        /// for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileAppMonitoring AzureMonitorProfileAppMonitoring { get; set; }
        /// <summary>
        /// Azure Monitor Container Insights Profile for Kubernetes Events, Inventory and Container stdout & stderr logs etc. See
        /// aka.ms/AzureMonitorContainerInsights for an overview.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileContainerInsights AzureMonitorProfileContainerInsight { get; set; }
        /// <summary>Metrics profile for the prometheus service addon</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileMetrics AzureMonitorProfileMetric { get; set; }
        /// <summary>
        /// The Azure Portal requires certain Cross-Origin Resource Sharing (CORS) headers to be sent in some responses, which Kubernetes
        /// APIServer doesn't handle by default. This special FQDN supports CORS, allowing the Azure Portal to function properly.
        /// </summary>
        string AzurePortalFqdn { get; set; }
        /// <summary>Whether to enable AzureBlob CSI Driver. The default value is false.</summary>
        bool? BlobCsiDriverEnabled { get; set; }
        /// <summary>Profile of the cluster bootstrap configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterBootstrapProfile BootstrapProfile { get; set; }
        /// <summary>The source where the artifacts are downloaded from.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ArtifactSource? BootstrapProfileArtifactSource { get; set; }
        /// <summary>
        /// The resource Id of Azure Container Registry. The registry must have private network access, premium SKU and zone redundancy.
        /// </summary>
        string BootstrapProfileContainerRegistryId { get; set; }
        /// <summary>Plugin certificates information for Service Mesh.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioPluginCertificateAuthority CertificateAuthorityPlugin { get; set; }
        /// <summary>Istio egress gateways.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioEgressGateway[] ComponentEgressGateway { get; set; }
        /// <summary>Istio ingress gateways.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioIngressGateway[] ComponentIngressGateway { get; set; }
        /// <summary>
        /// Indicates whether custom metrics collection has to be disabled or not. If not specified the default is false. No custom
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        bool? ContainerInsightDisableCustomMetric { get; set; }
        /// <summary>
        /// Indicates whether prometheus metrics scraping is disabled or not. If not specified the default is false. No prometheus
        /// metrics will be emitted if this field is false but the container insights enabled field is false
        /// </summary>
        bool? ContainerInsightDisablePrometheusMetricsScraping { get; set; }
        /// <summary>Indicates if Azure Monitor Container Insights Logs Addon is enabled or not.</summary>
        bool? ContainerInsightEnabled { get; set; }
        /// <summary>
        /// Fully Qualified ARM Resource Id of Azure Log Analytics Workspace for storing Azure Monitor Container Insights Logs.
        /// </summary>
        string ContainerInsightLogAnalyticsWorkspaceResourceId { get; set; }
        /// <summary>The syslog host port. If not specified, the default port is 28330.</summary>
        long? ContainerInsightSyslogPort { get; set; }
        /// <summary>
        /// The Managed Cluster sku.tier must be set to 'Standard' or 'Premium' to enable this feature. Enabling this will add Kubernetes
        /// Namespace and Deployment details to the Cost Analysis views in the Azure portal. If not specified, the default is false.
        /// For more information see aka.ms/aks/docs/cost-analysis.
        /// </summary>
        bool? CostAnalysisEnabled { get; set; }
        /// <summary>
        /// CreationData to be used to specify the source Snapshot ID if the cluster will be created/upgraded using a snapshot.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ICreationData CreationData { get; set; }
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        string CreationDataSourceResourceId { get; set; }
        /// <summary>The version of Kubernetes the Managed Cluster is running.</summary>
        string CurrentKubernetesVersion { get; set; }
        /// <summary>
        /// Resource ID of the Log Analytics workspace to be associated with Microsoft Defender. When Microsoft Defender is enabled,
        /// this field is required and must be a valid workspace resource ID. When Microsoft Defender is disabled, leave the field
        /// empty.
        /// </summary>
        string DefenderLogAnalyticsWorkspaceResourceId { get; set; }
        /// <summary>
        /// Microsoft Defender settings for security gating, validates container images eligibility for deployment based on Defender
        /// for Containers security findings. Using Admission Controller, it either audits or prevents the deployment of images that
        /// do not meet security standards.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileDefenderSecurityGating DefenderSecurityGating { get; set; }
        /// <summary>
        /// Microsoft Defender threat detection for Cloud settings for the security profile.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileDefenderSecurityMonitoring DefenderSecurityMonitoring { get; set; }
        /// <summary>
        /// If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters
        /// that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).
        /// </summary>
        bool? DisableLocalAccount { get; set; }
        /// <summary>Whether to enable AzureDisk CSI Driver. The default value is true.</summary>
        bool? DiskCsiDriverEnabled { get; set; }
        /// <summary>The version of AzureDisk CSI Driver. The default value is v1.</summary>
        string DiskCsiDriverVersion { get; set; }
        /// <summary>
        /// This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'
        /// </summary>
        string DiskEncryptionSetId { get; set; }
        /// <summary>This cannot be updated once the Managed Cluster has been created.</summary>
        string DnsPrefix { get; set; }
        /// <summary>
        /// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated.
        /// Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency
        /// per the normal etag convention.
        /// </summary>
        string ETag { get; set; }
        /// <summary>
        /// The default value is false. It can be enabled/disabled on creation and updating of the managed cluster. See [https://aka.ms/NamespaceARMResource](https://aka.ms/NamespaceARMResource)
        /// for more details on Namespace as a ARM Resource.
        /// </summary>
        bool? EnableNamespaceResource { get; set; }
        /// <summary>
        /// (DEPRECATED) Whether to enable Kubernetes pod security policy (preview). PodSecurityPolicy was deprecated in Kubernetes
        /// v1.21, and removed from Kubernetes in v1.25. Learn more at https://aka.ms/k8s/psp and https://aka.ms/aks/psp.
        /// </summary>
        bool? EnablePodSecurityPolicy { get; set; }
        /// <summary>Whether to enable Kubernetes Role-Based Access Control.</summary>
        bool? EnableRbac { get; set; }
        /// <summary>The extended location of the Virtual Machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IExtendedLocation ExtendedLocation { get; set; }
        /// <summary>The name of the extended location.</summary>
        string ExtendedLocationName { get; set; }
        /// <summary>The type of the extended location.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ExtendedLocationTypes? ExtendedLocationType { get; set; }
        /// <summary>Whether to enable AzureFile CSI Driver. The default value is true.</summary>
        bool? FileCsiDriverEnabled { get; set; }
        /// <summary>The FQDN of the master pool.</summary>
        string Fqdn { get; set; }
        /// <summary>This cannot be updated once the Managed Cluster has been created.</summary>
        string FqdnSubdomain { get; set; }
        /// <summary>
        /// Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet
        /// which is used to create the managed cluster.
        /// </summary>
        string GmsaProfileDnsServer { get; set; }
        /// <summary>Specifies whether to enable Windows gMSA in the managed cluster.</summary>
        bool? GmsaProfileEnabled { get; set; }
        /// <summary>
        /// Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the
        /// vnet which is used to create the managed cluster.
        /// </summary>
        string GmsaProfileRootDomainName { get; set; }
        /// <summary>Configurations for provisioning the cluster with HTTP proxy servers.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterHttpProxyConfig HttpProxyConfig { get; set; }
        /// <summary>
        /// A read-only list of all endpoints for which traffic should not be sent to the proxy. This list is a superset of noProxy
        /// and values injected by AKS.
        /// </summary>
        string[] HttpProxyConfigEffectiveNoProxy { get; set; }
        /// <summary>The HTTP proxy server endpoint to use.</summary>
        string HttpProxyConfigHttpProxy { get; set; }
        /// <summary>The HTTPS proxy server endpoint to use.</summary>
        string HttpProxyConfigHttpsProxy { get; set; }
        /// <summary>The endpoints that should not go through proxy.</summary>
        string[] HttpProxyConfigNoProxy { get; set; }
        /// <summary>Alternative CA cert to use for connecting to proxy servers.</summary>
        string HttpProxyConfigTrustedCa { get; set; }
        /// <summary>The identity of the managed cluster, if configured.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentity Identity { get; set; }
        /// <summary>The client ID of the user assigned identity.</summary>
        string IdentityClientId { get; set; }
        /// <summary>
        /// The delegated identity resources assigned to this managed cluster. This can only be set by another Azure Resource Provider,
        /// and managed cluster only accept one delegated identity resource. Internal use only.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api40.IDelegatedResources IdentityDelegatedResource { get; set; }
        /// <summary>The object ID of the user assigned identity.</summary>
        string IdentityObjectId { get; set; }
        /// <summary>
        /// The principal id of the system assigned identity which is used by master components.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The user identity associated with the managed cluster. This identity will be used by the kubelet. Only one user assigned
        /// identity is allowed. The only accepted key is "kubeletidentity", with value of "resourceId": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}".
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPropertiesIdentityProfile IdentityProfile { get; set; }
        /// <summary>The resource ID of the user assigned identity.</summary>
        string IdentityResourceId { get; set; }
        /// <summary>
        /// The tenant id of the system assigned identity which is used by master components.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Whether to enable Image Cleaner on AKS cluster.</summary>
        bool? ImageCleanerEnabled { get; set; }
        /// <summary>Image Cleaner scanning interval in hours.</summary>
        int? ImageCleanerIntervalHour { get; set; }
        /// <summary>Whether to enable image integrity. The default value is false.</summary>
        bool? ImageIntegrityEnabled { get; set; }
        /// <summary>Ingress profile for the managed cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIngressProfile IngressProfile { get; set; }
        /// <summary>Web App Routing settings for the ingress profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIngressProfileWebAppRouting IngressProfileWebAppRouting { get; set; }
        /// <summary>
        /// Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described
        /// here https://aka.ms/asm-plugin-ca
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioCertificateAuthority IstioCertificateAuthority { get; set; }
        /// <summary>Istio components configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioComponents IstioComponent { get; set; }
        /// <summary>
        /// The list of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary
        /// upgrade is in progress, this can only hold two consecutive values. For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade
        /// </summary>
        string[] IstioRevision { get; set; }
        /// <summary>Whether to enable KEDA.</summary>
        bool? KedaEnabled { get; set; }
        /// <summary>
        /// This is primarily used to expose different UI experiences in the portal for different kinds
        /// </summary>
        string Kind { get; set; }
        /// <summary>
        /// Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
        /// </summary>
        string KubeStateMetricAnnotationsAllowList { get; set; }
        /// <summary>
        /// Comma-separated list of Kubernetes annotations keys that will be used in the resource's labels metric.
        /// </summary>
        string KubeStateMetricLabelsAllowlist { get; set; }
        /// <summary>
        /// When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed
        /// sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed,
        /// however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster)
        /// for more details.
        /// </summary>
        string KubernetesVersion { get; set; }
        /// <summary>The profile for Linux VMs in the Managed Cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceLinuxProfile LinuxProfile { get; set; }
        /// <summary>The administrator username to use for Linux VMs.</summary>
        string LinuxProfileAdminUsername { get; set; }
        /// <summary>The SSH configuration for Linux-based VMs running on Azure.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceSshConfiguration LinuxProfileSsh { get; set; }
        /// <summary>The max number of agent pools for the managed cluster.</summary>
        int? MaxAgentPool { get; set; }
        /// <summary>Whether to enable the Prometheus collector</summary>
        bool? MetricEnabled { get; set; }
        /// <summary>
        /// Kube State Metrics for prometheus addon profile for the container service cluster
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterAzureMonitorProfileKubeStateMetrics MetricKubeStateMetric { get; set; }
        /// <summary>The cost analysis configuration for the cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterCostAnalysis MetricProfileCostAnalysis { get; set; }
        /// <summary>Optional cluster metrics configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterMetricsProfile MetricsProfile { get; set; }
        /// <summary>The network configuration profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceNetworkProfile NetworkProfile { get; set; }
        /// <summary>Ingress type for the default NginxIngressController custom resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NginxIngressControllerType? NginxDefaultIngressControllerType { get; set; }
        /// <summary>Node provisioning settings that apply to the whole cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterNodeProvisioningProfile NodeProvisioningProfile { get; set; }
        /// <summary>Once the mode it set to Auto, it cannot be changed back to Manual.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NodeProvisioningMode? NodeProvisioningProfileMode { get; set; }
        /// <summary>The name of the resource group containing agent pool nodes.</summary>
        string NodeResourceGroup { get; set; }
        /// <summary>The node resource group configuration profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterNodeResourceGroupProfile NodeResourceGroupProfile { get; set; }
        /// <summary>The restriction level applied to the cluster's node resource group</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.RestrictionLevel? NodeResourceGroupProfileRestrictionLevel { get; set; }
        /// <summary>Whether to enable Node Restriction</summary>
        bool? NodeRestrictionEnabled { get; set; }
        /// <summary>The OIDC issuer profile of the Managed Cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterOidcIssuerProfile OidcIssuerProfile { get; set; }
        /// <summary>Whether the OIDC issuer is enabled.</summary>
        bool? OidcIssuerProfileEnabled { get; set; }
        /// <summary>The OIDC issuer url of the Managed Cluster.</summary>
        string OidcIssuerProfileIssuerUrl { get; set; }
        /// <summary>
        /// Indicates if Application Monitoring Open Telemetry Logs and traces is enabled or not.
        /// </summary>
        bool? OpenTelemetryLogEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry logs and traces. If not specified, the default port is 28331.
        /// </summary>
        long? OpenTelemetryLogPort { get; set; }
        /// <summary>Indicates if Application Monitoring Open Telemetry Metrics is enabled or not.</summary>
        bool? OpenTelemetryMetricEnabled { get; set; }
        /// <summary>
        /// The Open Telemetry host port for Open Telemetry metrics. If not specified, the default port is 28333.
        /// </summary>
        long? OpenTelemetryMetricPort { get; set; }
        /// <summary>
        /// Whether to force upgrade the cluster. Note that this option instructs upgrade operation to bypass upgrade protections
        /// such as checking for deprecated API usage. Enable this option only with caution.
        /// </summary>
        bool? OverrideSettingForceUpgrade { get; set; }
        /// <summary>
        /// Until when the overrides are effective. Note that this only matches the start time of an upgrade, and the effectiveness
        /// won't change once an upgrade starts even if the `until` expires as upgrade proceeds. This field is not set by default.
        /// It must be set for the overrides to take effect.
        /// </summary>
        global::System.DateTime? OverrideSettingUntil { get; set; }
        /// <summary>Certificate chain object name in Azure Key Vault.</summary>
        string PluginCertChainObjectName { get; set; }
        /// <summary>Intermediate certificate object name in Azure Key Vault.</summary>
        string PluginCertObjectName { get; set; }
        /// <summary>Intermediate certificate private key object name in Azure Key Vault.</summary>
        string PluginKeyObjectName { get; set; }
        /// <summary>The resource ID of the Key Vault.</summary>
        string PluginKeyVaultId { get; set; }
        /// <summary>Root certificate object name in Azure Key Vault.</summary>
        string PluginRootCertObjectName { get; set; }
        /// <summary>
        /// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod
        /// identity integration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPodIdentityProfile PodIdentityProfile { get; set; }
        /// <summary>
        /// Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing.
        /// See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities)
        /// for more information.
        /// </summary>
        bool? PodIdentityProfileAllowNetworkPluginKubenet { get; set; }
        /// <summary>Whether the pod identity addon is enabled.</summary>
        bool? PodIdentityProfileEnabled { get; set; }
        /// <summary>The pod identities to use in the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPodIdentity[] PodIdentityProfileUserAssignedIdentity { get; set; }
        /// <summary>The pod identity exceptions to allow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterPodIdentityException[] PodIdentityProfileUserAssignedIdentityException { get; set; }
        /// <summary>The Power State of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IPowerState PowerState { get; set; }
        /// <summary>Tells whether the cluster is Running or Stopped</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Code? PowerStateCode { get; set; }
        /// <summary>The FQDN of private cluster.</summary>
        string PrivateFqdn { get; set; }
        /// <summary>Private link resources associated with the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IPrivateLinkResource[] PrivateLinkResource { get; set; }
        /// <summary>Properties of a managed cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterProperties Property { get; set; }
        /// <summary>
        /// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        /// </summary>
        string ProvisioningErrorCode { get; set; }
        /// <summary>A list of additional details about the error.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ICloudErrorBody[] ProvisioningErrorDetail { get; set; }
        /// <summary>
        /// A message describing the error, intended to be suitable for display in a user interface.
        /// </summary>
        string ProvisioningErrorMessage { get; set; }
        /// <summary>
        /// The target of the particular error. For example, the name of the property in error.
        /// </summary>
        string ProvisioningErrorTarget { get; set; }
        /// <summary>The current provisioning state.</summary>
        string ProvisioningState { get; set; }
        /// <summary>Allow or deny public network access for AKS</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The resourceUID uniquely identifies ManagedClusters that reuse ARM ResourceIds (i.e: create, delete, create sequence)
        /// </summary>
        string ResourceUid { get; set; }
        /// <summary>List of namespaces excluded from Safeguards checks</summary>
        string[] SafeguardProfileExcludedNamespace { get; set; }
        /// <summary>
        /// The Safeguards level to be used. By default, Safeguards is enabled for all namespaces except those that AKS excludes via
        /// systemExcludedNamespaces
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level? SafeguardProfileLevel { get; set; }
        /// <summary>List of namespaces specified by AKS to be excluded from Safeguards</summary>
        string[] SafeguardProfileSystemExcludedNamespace { get; set; }
        /// <summary>The version of constraints to use</summary>
        string SafeguardProfileVersion { get; set; }
        /// <summary>The Safeguards profile holds all the safeguards information for a given cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ISafeguardsProfile SafeguardsProfile { get; set; }
        /// <summary>
        /// In use only while registry access granted by secret rather than managed identity. Set whether to grant the Defender gating
        /// agent access to the cluster's secrets for pulling images from registries. If secret access is denied and the registry
        /// requires pull secrets, the add-on will not perform any image validation. Default value is false.
        /// </summary>
        bool? SecurityGatingAllowSecretAccess { get; set; }
        /// <summary>
        /// Whether to enable Defender security gating. When enabled, the gating feature will scan container images and audit or block
        /// the deployment of images that do not meet security standards according to the configured security rules.
        /// </summary>
        bool? SecurityGatingEnabled { get; set; }
        /// <summary>
        /// List of identities that the admission controller will make use of in order to pull security artifacts from the registry.
        /// These are the same identities used by the cluster to pull container images. Each identity provided should have federated
        /// identity credential attached to it.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem[] SecurityGatingIdentity { get; set; }
        /// <summary>Whether to enable Defender threat detection</summary>
        bool? SecurityMonitoringEnabled { get; set; }
        /// <summary>Security profile for the managed cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfile SecurityProfile { get; set; }
        /// <summary>
        /// Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for
        /// the security profile.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IAzureKeyVaultKms SecurityProfileAzureKeyVaultKm { get; set; }
        /// <summary>
        /// A list of up to 10 base64 encoded CAs that will be added to the trust store on all nodes in the cluster. For more information
        /// see [Custom CA Trust Certificates](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority).
        /// </summary>
        byte[][] SecurityProfileCustomCaTrustCertificate { get; set; }
        /// <summary>Microsoft Defender settings for the security profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileDefender SecurityProfileDefender { get; set; }
        /// <summary>Image Cleaner settings for the security profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileImageCleaner SecurityProfileImageCleaner { get; set; }
        /// <summary>
        /// Image integrity is a feature that works with Azure Policy to verify image integrity by signature. This will not have any
        /// effect unless Azure Policy is applied to enforce image signatures. See https://aka.ms/aks/image-integrity for how to use
        /// this feature via policy.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileImageIntegrity SecurityProfileImageIntegrity { get; set; }
        /// <summary>
        /// [Node Restriction](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#noderestriction) settings
        /// for the security profile.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileNodeRestriction SecurityProfileNodeRestriction { get; set; }
        /// <summary>
        /// Workload identity settings for the security profile. Workload identity enables Kubernetes applications to access Azure
        /// cloud resources securely with Azure AD. See https://aka.ms/aks/wi for more details.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSecurityProfileWorkloadIdentity SecurityProfileWorkloadIdentity { get; set; }
        /// <summary>Service mesh profile for a managed cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IServiceMeshProfile ServiceMeshProfile { get; set; }
        /// <summary>Istio service mesh configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IIstioServiceMesh ServiceMeshProfileIstio { get; set; }
        /// <summary>Mode of the service mesh.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ServiceMeshMode? ServiceMeshProfileMode { get; set; }
        /// <summary>
        /// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterServicePrincipalProfile ServicePrincipalProfile { get; set; }
        /// <summary>The ID for the service principal.</summary>
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The secret password associated with the service principal in plain text.</summary>
        string ServicePrincipalProfileSecret { get; set; }
        /// <summary>The managed cluster SKU.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterSku Sku { get; set; }
        /// <summary>The name of a managed cluster SKU.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuName? SkuName { get; set; }
        /// <summary>
        /// If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers)
        /// for more details.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.ManagedClusterSkuTier? SkuTier { get; set; }
        /// <summary>Whether to enable Snapshot Controller. The default value is true.</summary>
        bool? SnapshotControllerEnabled { get; set; }
        /// <summary>
        /// The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IContainerServiceSshPublicKey[] SshPublicKey { get; set; }
        /// <summary>Contains read-only information about the Managed Cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStatus Status { get; set; }
        /// <summary>
        /// Preserves the detailed info of failure. If there was no error, this field is omitted.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ICloudErrorBody StatusProvisioningError { get; set; }
        /// <summary>Storage profile for the managed cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStorageProfile StorageProfile { get; set; }
        /// <summary>AzureBlob CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStorageProfileBlobCsiDriver StorageProfileBlobCsiDriver { get; set; }
        /// <summary>AzureDisk CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStorageProfileDiskCsiDriver StorageProfileDiskCsiDriver { get; set; }
        /// <summary>AzureFile CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStorageProfileFileCsiDriver StorageProfileFileCsiDriver { get; set; }
        /// <summary>Snapshot Controller settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterStorageProfileSnapshotController StorageProfileSnapshotController { get; set; }
        /// <summary>
        /// The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.KubernetesSupportPlan? SupportPlan { get; set; }
        /// <summary>Settings for upgrading a cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IClusterUpgradeSettings UpgradeSetting { get; set; }
        /// <summary>Settings for overrides.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IUpgradeOverrideSettings UpgradeSettingOverrideSetting { get; set; }
        /// <summary>Whether VPA add-on is enabled and configured to scale AKS-managed add-ons.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AddonAutoscaling? VerticalPodAutoscalerAddonAutoscaling { get; set; }
        /// <summary>Whether to enable VPA add-on in cluster. Default value is false.</summary>
        bool? VerticalPodAutoscalerEnabled { get; set; }
        /// <summary>
        /// Resource IDs of the DNS zones to be associated with the Web App Routing add-on. Used only when Web App Routing is enabled.
        /// Public and private DNS zones can be in different resource groups, but all public DNS zones must be in the same resource
        /// group and all private DNS zones must be in the same resource group.
        /// </summary>
        string[] WebAppRoutingDnsZoneResourceId { get; set; }
        /// <summary>Whether to enable Web App Routing.</summary>
        bool? WebAppRoutingEnabled { get; set; }
        /// <summary>
        /// Managed identity of the Web Application Routing add-on. This is the identity that should be granted permissions, for example,
        /// to manage the associated Azure DNS resource and get certificates from Azure Key Vault. See [this overview of the add-on](https://learn.microsoft.com/en-us/azure/aks/web-app-routing?tabs=with-osm)
        /// for more instructions.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IUserAssignedIdentity WebAppRoutingIdentity { get; set; }
        /// <summary>
        /// Configuration for the default NginxIngressController. See more at https://learn.microsoft.com/en-us/azure/aks/app-routing-nginx-configuration#the-default-nginx-ingress-controller.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterIngressProfileNginx WebAppRoutingNginx { get; set; }
        /// <summary>
        /// Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:**
        /// 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters
        /// <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:**
        /// "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
        /// </summary>
        string WindowProfileAdminPassword { get; set; }
        /// <summary>
        /// Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:**
        /// "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm",
        /// "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0",
        /// "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
        /// </summary>
        string WindowProfileAdminUsername { get; set; }
        /// <summary>
        /// For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).
        /// </summary>
        bool? WindowProfileEnableCsiProxy { get; set; }
        /// <summary>The Windows gMSA Profile in the Managed Cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IWindowsGmsaProfile WindowProfileGmsaProfile { get; set; }
        /// <summary>
        /// The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/)
        /// for more details.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LicenseType? WindowProfileLicenseType { get; set; }
        /// <summary>The profile for Windows VMs in the Managed Cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterWindowsProfile WindowsProfile { get; set; }
        /// <summary>Workload Auto-scaler profile for the managed cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterWorkloadAutoScalerProfile WorkloadAutoScalerProfile { get; set; }
        /// <summary>
        /// KEDA (Kubernetes Event-driven Autoscaling) settings for the workload auto-scaler profile.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterWorkloadAutoScalerProfileKeda WorkloadAutoScalerProfileKeda { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.IManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler WorkloadAutoScalerProfileVerticalPodAutoscaler { get; set; }
        /// <summary>Whether to enable workload identity.</summary>
        bool? WorkloadIdentityEnabled { get; set; }

    }
}