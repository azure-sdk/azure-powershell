// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>
    /// The configurations regarding multiple standard load balancers. If not supplied, single load balancer mode will be used.
    /// Multiple standard load balancers mode will be used if at lease one configuration is supplied. There has to be a configuration
    /// named `kubernetes`.
    /// </summary>
    public partial class LoadBalancer :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancer,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.Resource();

        /// <summary>
        /// Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false
        /// manually, both of the external and the internal load balancer will not be selected for services unless they explicitly
        /// target it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public bool? AllowServicePlacement { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).AllowServicePlacement; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).AllowServicePlacement = value ?? default(bool); }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for NodeSelector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelector Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerInternal.NodeSelector { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).NodeSelector; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).NodeSelector = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.LoadBalancerProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ServiceLabelSelector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelector Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerInternal.ServiceLabelSelector { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceLabelSelector; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceLabelSelector = value; }

        /// <summary>Internal Acessors for ServiceNamespaceSelector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelector Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerInternal.ServiceNamespaceSelector { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceNamespaceSelector; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceNamespaceSelector = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).Name; }

        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement[] NodeSelectorMatchExpression { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).NodeSelectorMatchExpression; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).NodeSelectorMatchExpression = value ?? null /* arrayOf */; }

        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] NodeSelectorMatchLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).NodeSelectorMatchLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).NodeSelectorMatchLabel = value ?? null /* arrayOf */; }

        /// <summary>
        /// Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always
        /// be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations.
        /// An agent pool can only be the primary pool for a single load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PrimaryAgentPoolName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).PrimaryAgentPoolName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).PrimaryAgentPoolName = value ?? null; }

        /// <summary>
        /// Name of the public load balancer. There will be an internal load balancer created if needed, and the name will be `<name>-internal`.
        /// The internal lb shares the same configurations as the external one. The internal lbs are not needed to be included in
        /// LoadBalancer list. There must be a name of kubernetes in the list.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string PropertiesName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerProperties _property;

        /// <summary>The properties of the load balancer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.LoadBalancerProperties()); set => this._property = value; }

        /// <summary>The current provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement[] ServiceLabelSelectorMatchExpression { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceLabelSelectorMatchExpression; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceLabelSelectorMatchExpression = value ?? null /* arrayOf */; }

        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] ServiceLabelSelectorMatchLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceLabelSelectorMatchLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceLabelSelectorMatchLabel = value ?? null /* arrayOf */; }

        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement[] ServiceNamespaceSelectorMatchExpression { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceNamespaceSelectorMatchExpression; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceNamespaceSelectorMatchExpression = value ?? null /* arrayOf */; }

        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string[] ServiceNamespaceSelectorMatchLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceNamespaceSelectorMatchLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerPropertiesInternal)Property).ServiceNamespaceSelectorMatchLabel = value ?? null /* arrayOf */; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="LoadBalancer" /> instance.</summary>
        public LoadBalancer()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The configurations regarding multiple standard load balancers. If not supplied, single load balancer mode will be used.
    /// Multiple standard load balancers mode will be used if at lease one configuration is supplied. There has to be a configuration
    /// named `kubernetes`.
    public partial interface ILoadBalancer :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResource
    {
        /// <summary>
        /// Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false
        /// manually, both of the external and the internal load balancer will not be selected for services unless they explicitly
        /// target it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false manually, both of the external and the internal load balancer will not be selected for services unless they explicitly target it.",
        SerializedName = @"allowServicePlacement",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowServicePlacement { get; set; }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
        SerializedName = @"matchExpressions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement[] NodeSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements are ANDed.",
        SerializedName = @"matchLabels",
        PossibleTypes = new [] { typeof(string) })]
        string[] NodeSelectorMatchLabel { get; set; }
        /// <summary>
        /// Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always
        /// be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations.
        /// An agent pool can only be the primary pool for a single load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations. An agent pool can only be the primary pool for a single load balancer.",
        SerializedName = @"primaryAgentPoolName",
        PossibleTypes = new [] { typeof(string) })]
        string PrimaryAgentPoolName { get; set; }
        /// <summary>
        /// Name of the public load balancer. There will be an internal load balancer created if needed, and the name will be `<name>-internal`.
        /// The internal lb shares the same configurations as the external one. The internal lbs are not needed to be included in
        /// LoadBalancer list. There must be a name of kubernetes in the list.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the public load balancer. There will be an internal load balancer created if needed, and the name will be `<name>-internal`. The internal lb shares the same configurations as the external one. The internal lbs are not needed to be included in LoadBalancer list. There must be a name of kubernetes in the list.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesName { get; set; }
        /// <summary>The current provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
        SerializedName = @"matchExpressions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement[] ServiceLabelSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements are ANDed.",
        SerializedName = @"matchLabels",
        PossibleTypes = new [] { typeof(string) })]
        string[] ServiceLabelSelectorMatchLabel { get; set; }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
        SerializedName = @"matchExpressions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement[] ServiceNamespaceSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements are ANDed.",
        SerializedName = @"matchLabels",
        PossibleTypes = new [] { typeof(string) })]
        string[] ServiceNamespaceSelectorMatchLabel { get; set; }

    }
    /// The configurations regarding multiple standard load balancers. If not supplied, single load balancer mode will be used.
    /// Multiple standard load balancers mode will be used if at lease one configuration is supplied. There has to be a configuration
    /// named `kubernetes`.
    internal partial interface ILoadBalancerInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.IResourceInternal
    {
        /// <summary>
        /// Whether to automatically place services on the load balancer. If not supplied, the default value is true. If set to false
        /// manually, both of the external and the internal load balancer will not be selected for services unless they explicitly
        /// target it.
        /// </summary>
        bool? AllowServicePlacement { get; set; }
        /// <summary>Nodes that match this selector will be possible members of this load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelector NodeSelector { get; set; }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement[] NodeSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        string[] NodeSelectorMatchLabel { get; set; }
        /// <summary>
        /// Required field. A string value that must specify the ID of an existing agent pool. All nodes in the given pool will always
        /// be added to this load balancer. This agent pool must have at least one node and minCount>=1 for autoscaling operations.
        /// An agent pool can only be the primary pool for a single load balancer.
        /// </summary>
        string PrimaryAgentPoolName { get; set; }
        /// <summary>
        /// Name of the public load balancer. There will be an internal load balancer created if needed, and the name will be `<name>-internal`.
        /// The internal lb shares the same configurations as the external one. The internal lbs are not needed to be included in
        /// LoadBalancer list. There must be a name of kubernetes in the list.
        /// </summary>
        string PropertiesName { get; set; }
        /// <summary>The properties of the load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILoadBalancerProperties Property { get; set; }
        /// <summary>The current provisioning state.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Only services that must match this selector can be placed on this load balancer.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelector ServiceLabelSelector { get; set; }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement[] ServiceLabelSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        string[] ServiceLabelSelectorMatchLabel { get; set; }
        /// <summary>
        /// Services created in namespaces that match the selector can be placed on this load balancer.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelector ServiceNamespaceSelector { get; set; }
        /// <summary>
        /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250102Preview.ILabelSelectorRequirement[] ServiceNamespaceSelectorMatchExpression { get; set; }
        /// <summary>
        /// matchLabels is an array of {key=value} pairs. A single {key=value} in the matchLabels map is equivalent to an element
        /// of matchExpressions, whose key field is `key`, the operator is `In`, and the values array contains only `value`. The requirements
        /// are ANDed.
        /// </summary>
        string[] ServiceNamespaceSelectorMatchLabel { get; set; }

    }
}