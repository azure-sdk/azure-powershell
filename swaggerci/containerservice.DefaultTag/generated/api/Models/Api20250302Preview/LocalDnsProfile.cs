// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>
    /// Configures the per-node local DNS, with VnetDNS and KubeDNS overrides. LocalDNS helps improve performance and reliability
    /// of DNS resolution in an AKS cluster. For more details see aka.ms/aks/localdns.
    /// </summary>
    public partial class LocalDnsProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsProfile,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsProfileInternal
    {

        /// <summary>Backing field for <see cref="KubeDnsOverride" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverrides _kubeDnsOverride;

        /// <summary>
        /// KubeDNS overrides apply to DNS traffic from pods with dnsPolicy:ClusterFirst (referred to as KubeDNS traffic).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverrides KubeDnsOverride { get => (this._kubeDnsOverride = this._kubeDnsOverride ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.LocalDnsOverrides()); set => this._kubeDnsOverride = value; }

        /// <summary>
        /// Cache max TTL in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? KubeDnsOverrideCacheDurationInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).CacheDurationInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).CacheDurationInSecond = value ?? default(int); }

        /// <summary>Destination server for DNS queries to be forwarded from localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardDestination? KubeDnsOverrideForwardDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).ForwardDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).ForwardDestination = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardDestination)""); }

        /// <summary>
        /// Forward policy for selecting upstream DNS server. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardPolicy? KubeDnsOverrideForwardPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).ForwardPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).ForwardPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardPolicy)""); }

        /// <summary>
        /// Maximum number of concurrent queries. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? KubeDnsOverrideMaxConcurrent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).MaxConcurrent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).MaxConcurrent = value ?? default(int); }

        /// <summary>
        /// Enforce TCP or prefer UDP protocol for connections from localDNS to upstream DNS server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsProtocol? KubeDnsOverrideProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).Protocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).Protocol = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsProtocol)""); }

        /// <summary>Log level for DNS queries in localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsQueryLogging? KubeDnsOverrideQueryLogging { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).QueryLogging; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).QueryLogging = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsQueryLogging)""); }

        /// <summary>
        /// Policy for serving stale data. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsServeStale? KubeDnsOverrideServeStale { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).ServeStale; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).ServeStale = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsServeStale)""); }

        /// <summary>
        /// Serve stale duration in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? KubeDnsOverrideServeStaleDurationInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).ServeStaleDurationInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)KubeDnsOverride).ServeStaleDurationInSecond = value ?? default(int); }

        /// <summary>Internal Acessors for KubeDnsOverride</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverrides Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsProfileInternal.KubeDnsOverride { get => (this._kubeDnsOverride = this._kubeDnsOverride ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.LocalDnsOverrides()); set { {_kubeDnsOverride = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsState? Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsProfileInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Internal Acessors for VnetDnsOverride</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverrides Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsProfileInternal.VnetDnsOverride { get => (this._vnetDnsOverride = this._vnetDnsOverride ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.LocalDnsOverrides()); set { {_vnetDnsOverride = value;} } }

        /// <summary>Backing field for <see cref="Mode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsMode? _mode;

        /// <summary>Mode of enablement for localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsMode? Mode { get => this._mode; set => this._mode = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsState? _state;

        /// <summary>System-generated state of localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsState? State { get => this._state; }

        /// <summary>Backing field for <see cref="VnetDnsOverride" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverrides _vnetDnsOverride;

        /// <summary>
        /// VnetDNS overrides apply to DNS traffic from pods with dnsPolicy:default or kubelet (referred to as VnetDNS traffic).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverrides VnetDnsOverride { get => (this._vnetDnsOverride = this._vnetDnsOverride ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.LocalDnsOverrides()); set => this._vnetDnsOverride = value; }

        /// <summary>
        /// Cache max TTL in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? VnetDnsOverrideCacheDurationInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).CacheDurationInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).CacheDurationInSecond = value ?? default(int); }

        /// <summary>Destination server for DNS queries to be forwarded from localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardDestination? VnetDnsOverrideForwardDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).ForwardDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).ForwardDestination = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardDestination)""); }

        /// <summary>
        /// Forward policy for selecting upstream DNS server. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardPolicy? VnetDnsOverrideForwardPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).ForwardPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).ForwardPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardPolicy)""); }

        /// <summary>
        /// Maximum number of concurrent queries. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? VnetDnsOverrideMaxConcurrent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).MaxConcurrent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).MaxConcurrent = value ?? default(int); }

        /// <summary>
        /// Enforce TCP or prefer UDP protocol for connections from localDNS to upstream DNS server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsProtocol? VnetDnsOverrideProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).Protocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).Protocol = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsProtocol)""); }

        /// <summary>Log level for DNS queries in localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsQueryLogging? VnetDnsOverrideQueryLogging { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).QueryLogging; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).QueryLogging = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsQueryLogging)""); }

        /// <summary>
        /// Policy for serving stale data. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsServeStale? VnetDnsOverrideServeStale { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).ServeStale; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).ServeStale = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsServeStale)""); }

        /// <summary>
        /// Serve stale duration in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public int? VnetDnsOverrideServeStaleDurationInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).ServeStaleDurationInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverridesInternal)VnetDnsOverride).ServeStaleDurationInSecond = value ?? default(int); }

        /// <summary>Creates an new <see cref="LocalDnsProfile" /> instance.</summary>
        public LocalDnsProfile()
        {

        }
    }
    /// Configures the per-node local DNS, with VnetDNS and KubeDNS overrides. LocalDNS helps improve performance and reliability
    /// of DNS resolution in an AKS cluster. For more details see aka.ms/aks/localdns.
    public partial interface ILocalDnsProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Cache max TTL in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cache max TTL in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.",
        SerializedName = @"cacheDurationInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeDnsOverrideCacheDurationInSecond { get; set; }
        /// <summary>Destination server for DNS queries to be forwarded from localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Destination server for DNS queries to be forwarded from localDNS.",
        SerializedName = @"forwardDestination",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardDestination) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardDestination? KubeDnsOverrideForwardDestination { get; set; }
        /// <summary>
        /// Forward policy for selecting upstream DNS server. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Forward policy for selecting upstream DNS server. See [forward plugin](https://coredns.io/plugins/forward) for more information.",
        SerializedName = @"forwardPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardPolicy? KubeDnsOverrideForwardPolicy { get; set; }
        /// <summary>
        /// Maximum number of concurrent queries. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of concurrent queries. See [forward plugin](https://coredns.io/plugins/forward) for more information.",
        SerializedName = @"maxConcurrent",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeDnsOverrideMaxConcurrent { get; set; }
        /// <summary>
        /// Enforce TCP or prefer UDP protocol for connections from localDNS to upstream DNS server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enforce TCP or prefer UDP protocol for connections from localDNS to upstream DNS server.",
        SerializedName = @"protocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsProtocol? KubeDnsOverrideProtocol { get; set; }
        /// <summary>Log level for DNS queries in localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log level for DNS queries in localDNS.",
        SerializedName = @"queryLogging",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsQueryLogging) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsQueryLogging? KubeDnsOverrideQueryLogging { get; set; }
        /// <summary>
        /// Policy for serving stale data. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for serving stale data. See [cache plugin](https://coredns.io/plugins/cache) for more information.",
        SerializedName = @"serveStale",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsServeStale) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsServeStale? KubeDnsOverrideServeStale { get; set; }
        /// <summary>
        /// Serve stale duration in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Serve stale duration in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.",
        SerializedName = @"serveStaleDurationInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? KubeDnsOverrideServeStaleDurationInSecond { get; set; }
        /// <summary>Mode of enablement for localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Mode of enablement for localDNS.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsMode? Mode { get; set; }
        /// <summary>System-generated state of localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"System-generated state of localDNS.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsState? State { get;  }
        /// <summary>
        /// Cache max TTL in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cache max TTL in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.",
        SerializedName = @"cacheDurationInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? VnetDnsOverrideCacheDurationInSecond { get; set; }
        /// <summary>Destination server for DNS queries to be forwarded from localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Destination server for DNS queries to be forwarded from localDNS.",
        SerializedName = @"forwardDestination",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardDestination) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardDestination? VnetDnsOverrideForwardDestination { get; set; }
        /// <summary>
        /// Forward policy for selecting upstream DNS server. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Forward policy for selecting upstream DNS server. See [forward plugin](https://coredns.io/plugins/forward) for more information.",
        SerializedName = @"forwardPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardPolicy? VnetDnsOverrideForwardPolicy { get; set; }
        /// <summary>
        /// Maximum number of concurrent queries. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of concurrent queries. See [forward plugin](https://coredns.io/plugins/forward) for more information.",
        SerializedName = @"maxConcurrent",
        PossibleTypes = new [] { typeof(int) })]
        int? VnetDnsOverrideMaxConcurrent { get; set; }
        /// <summary>
        /// Enforce TCP or prefer UDP protocol for connections from localDNS to upstream DNS server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enforce TCP or prefer UDP protocol for connections from localDNS to upstream DNS server.",
        SerializedName = @"protocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsProtocol? VnetDnsOverrideProtocol { get; set; }
        /// <summary>Log level for DNS queries in localDNS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log level for DNS queries in localDNS.",
        SerializedName = @"queryLogging",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsQueryLogging) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsQueryLogging? VnetDnsOverrideQueryLogging { get; set; }
        /// <summary>
        /// Policy for serving stale data. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy for serving stale data. See [cache plugin](https://coredns.io/plugins/cache) for more information.",
        SerializedName = @"serveStale",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsServeStale) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsServeStale? VnetDnsOverrideServeStale { get; set; }
        /// <summary>
        /// Serve stale duration in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Serve stale duration in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.",
        SerializedName = @"serveStaleDurationInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? VnetDnsOverrideServeStaleDurationInSecond { get; set; }

    }
    /// Configures the per-node local DNS, with VnetDNS and KubeDNS overrides. LocalDNS helps improve performance and reliability
    /// of DNS resolution in an AKS cluster. For more details see aka.ms/aks/localdns.
    internal partial interface ILocalDnsProfileInternal

    {
        /// <summary>
        /// KubeDNS overrides apply to DNS traffic from pods with dnsPolicy:ClusterFirst (referred to as KubeDNS traffic).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverrides KubeDnsOverride { get; set; }
        /// <summary>
        /// Cache max TTL in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        int? KubeDnsOverrideCacheDurationInSecond { get; set; }
        /// <summary>Destination server for DNS queries to be forwarded from localDNS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardDestination? KubeDnsOverrideForwardDestination { get; set; }
        /// <summary>
        /// Forward policy for selecting upstream DNS server. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardPolicy? KubeDnsOverrideForwardPolicy { get; set; }
        /// <summary>
        /// Maximum number of concurrent queries. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        int? KubeDnsOverrideMaxConcurrent { get; set; }
        /// <summary>
        /// Enforce TCP or prefer UDP protocol for connections from localDNS to upstream DNS server.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsProtocol? KubeDnsOverrideProtocol { get; set; }
        /// <summary>Log level for DNS queries in localDNS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsQueryLogging? KubeDnsOverrideQueryLogging { get; set; }
        /// <summary>
        /// Policy for serving stale data. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsServeStale? KubeDnsOverrideServeStale { get; set; }
        /// <summary>
        /// Serve stale duration in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        int? KubeDnsOverrideServeStaleDurationInSecond { get; set; }
        /// <summary>Mode of enablement for localDNS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsMode? Mode { get; set; }
        /// <summary>System-generated state of localDNS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsState? State { get; set; }
        /// <summary>
        /// VnetDNS overrides apply to DNS traffic from pods with dnsPolicy:default or kubelet (referred to as VnetDNS traffic).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ILocalDnsOverrides VnetDnsOverride { get; set; }
        /// <summary>
        /// Cache max TTL in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        int? VnetDnsOverrideCacheDurationInSecond { get; set; }
        /// <summary>Destination server for DNS queries to be forwarded from localDNS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardDestination? VnetDnsOverrideForwardDestination { get; set; }
        /// <summary>
        /// Forward policy for selecting upstream DNS server. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsForwardPolicy? VnetDnsOverrideForwardPolicy { get; set; }
        /// <summary>
        /// Maximum number of concurrent queries. See [forward plugin](https://coredns.io/plugins/forward) for more information.
        /// </summary>
        int? VnetDnsOverrideMaxConcurrent { get; set; }
        /// <summary>
        /// Enforce TCP or prefer UDP protocol for connections from localDNS to upstream DNS server.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsProtocol? VnetDnsOverrideProtocol { get; set; }
        /// <summary>Log level for DNS queries in localDNS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsQueryLogging? VnetDnsOverrideQueryLogging { get; set; }
        /// <summary>
        /// Policy for serving stale data. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.LocalDnsServeStale? VnetDnsOverrideServeStale { get; set; }
        /// <summary>
        /// Serve stale duration in seconds. See [cache plugin](https://coredns.io/plugins/cache) for more information.
        /// </summary>
        int? VnetDnsOverrideServeStaleDurationInSecond { get; set; }

    }
}