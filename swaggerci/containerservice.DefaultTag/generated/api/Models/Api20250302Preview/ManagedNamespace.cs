// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>Namespace managed by ARM.</summary>
    public partial class ManagedNamespace :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespace,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResource __subResource = new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.SubResource();

        /// <summary>Action if Kubernetes namespace with same name already exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AdoptionPolicy? AdoptionPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).AdoptionPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).AdoptionPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AdoptionPolicy)""); }

        /// <summary>The annotations of managed namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesAnnotations Annotation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).Annotation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).Annotation = value ?? null /* model class */; }

        /// <summary>Egress policy for the network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PolicyRule? DefaultNetworkPolicyEgress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultNetworkPolicyEgress; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultNetworkPolicyEgress = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PolicyRule)""); }

        /// <summary>Ingress policy for the network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PolicyRule? DefaultNetworkPolicyIngress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultNetworkPolicyIngress; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultNetworkPolicyIngress = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PolicyRule)""); }

        /// <summary>
        /// CPU limit of the namespace in one-thousandth CPU form. See [CPU resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string DefaultResourceQuotaCpuLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultResourceQuotaCpuLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultResourceQuotaCpuLimit = value ?? null; }

        /// <summary>
        /// CPU request of the namespace in one-thousandth CPU form. See [CPU resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string DefaultResourceQuotaCpuRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultResourceQuotaCpuRequest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultResourceQuotaCpuRequest = value ?? null; }

        /// <summary>
        /// Memory limit of the namespace in the power-of-two equivalents form: Ei, Pi, Ti, Gi, Mi, Ki. See [Memory resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string DefaultResourceQuotaMemoryLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultResourceQuotaMemoryLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultResourceQuotaMemoryLimit = value ?? null; }

        /// <summary>
        /// Memory request of the namespace in the power-of-two equivalents form: Ei, Pi, Ti, Gi, Mi, Ki. See [Memory resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string DefaultResourceQuotaMemoryRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultResourceQuotaMemoryRequest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultResourceQuotaMemoryRequest = value ?? null; }

        /// <summary>Delete options of a namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.DeletePolicy? DeletePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DeletePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DeletePolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.DeletePolicy)""); }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>
        /// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated.
        /// Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency
        /// per the normal etag convention.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal)__subResource).Id; }

        /// <summary>The labels of managed namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesLabels Label { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).Label; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).Label = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The location of the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for DefaultNetworkPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INetworkPolicies Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceInternal.DefaultNetworkPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultNetworkPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultNetworkPolicy = value; }

        /// <summary>Internal Acessors for DefaultResourceQuota</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IResourceQuota Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceInternal.DefaultResourceQuota { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultResourceQuota; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).DefaultResourceQuota = value; }

        /// <summary>Internal Acessors for ETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceInternal.ETag { get => this._eTag; set { {_eTag = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespaceProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.NamespaceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NamespaceProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal)__subResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal)__subResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal)__subResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal)__subResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal)__subResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal)__subResource).Type = value; }

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal)__subResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespaceProperties _property;

        /// <summary>Properties of a namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespaceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.NamespaceProperties()); set => this._property = value; }

        /// <summary>The current provisioning state of the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NamespaceProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData _systemData;

        /// <summary>The system metadata relating to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceTags _tag;

        /// <summary>The tags to be persisted on the managed cluster namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ManagedNamespaceTags()); set => this._tag = value; }

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal)__subResource).Type; }

        /// <summary>Creates an new <see cref="ManagedNamespace" /> instance.</summary>
        public ManagedNamespace()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__subResource), __subResource);
            await eventListener.AssertObjectIsValid(nameof(__subResource), __subResource);
        }
    }
    /// Namespace managed by ARM.
    public partial interface IManagedNamespace :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResource
    {
        /// <summary>Action if Kubernetes namespace with same name already exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action if Kubernetes namespace with same name already exists.",
        SerializedName = @"adoptionPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AdoptionPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AdoptionPolicy? AdoptionPolicy { get; set; }
        /// <summary>The annotations of managed namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The annotations of managed namespace.",
        SerializedName = @"annotations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesAnnotations) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesAnnotations Annotation { get; set; }
        /// <summary>Egress policy for the network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Egress policy for the network.",
        SerializedName = @"egress",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PolicyRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PolicyRule? DefaultNetworkPolicyEgress { get; set; }
        /// <summary>Ingress policy for the network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ingress policy for the network.",
        SerializedName = @"ingress",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PolicyRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PolicyRule? DefaultNetworkPolicyIngress { get; set; }
        /// <summary>
        /// CPU limit of the namespace in one-thousandth CPU form. See [CPU resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CPU limit of the namespace in one-thousandth CPU form. See [CPU resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu) for more details.",
        SerializedName = @"cpuLimit",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultResourceQuotaCpuLimit { get; set; }
        /// <summary>
        /// CPU request of the namespace in one-thousandth CPU form. See [CPU resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CPU request of the namespace in one-thousandth CPU form. See [CPU resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu) for more details.",
        SerializedName = @"cpuRequest",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultResourceQuotaCpuRequest { get; set; }
        /// <summary>
        /// Memory limit of the namespace in the power-of-two equivalents form: Ei, Pi, Ti, Gi, Mi, Ki. See [Memory resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Memory limit of the namespace in the power-of-two equivalents form: Ei, Pi, Ti, Gi, Mi, Ki. See [Memory resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory) for more details.",
        SerializedName = @"memoryLimit",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultResourceQuotaMemoryLimit { get; set; }
        /// <summary>
        /// Memory request of the namespace in the power-of-two equivalents form: Ei, Pi, Ti, Gi, Mi, Ki. See [Memory resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory)
        /// for more details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Memory request of the namespace in the power-of-two equivalents form: Ei, Pi, Ti, Gi, Mi, Ki. See [Memory resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory) for more details.",
        SerializedName = @"memoryRequest",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultResourceQuotaMemoryRequest { get; set; }
        /// <summary>Delete options of a namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Delete options of a namespace.",
        SerializedName = @"deletePolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.DeletePolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.DeletePolicy? DeletePolicy { get; set; }
        /// <summary>
        /// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated.
        /// Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency
        /// per the normal etag convention.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated. Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency per the normal etag convention.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get;  }
        /// <summary>The labels of managed namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The labels of managed namespace.",
        SerializedName = @"labels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesLabels) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesLabels Label { get; set; }
        /// <summary>The location of the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the namespace.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The current provisioning state of the namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current provisioning state of the namespace.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NamespaceProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NamespaceProvisioningState? ProvisioningState { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The tags to be persisted on the managed cluster namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags to be persisted on the managed cluster namespace.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceTags Tag { get; set; }

    }
    /// Namespace managed by ARM.
    internal partial interface IManagedNamespaceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISubResourceInternal
    {
        /// <summary>Action if Kubernetes namespace with same name already exists.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.AdoptionPolicy? AdoptionPolicy { get; set; }
        /// <summary>The annotations of managed namespace.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesAnnotations Annotation { get; set; }
        /// <summary>
        /// The default network policy enforced upon the namespace. Customers can have other Kubernetes network policy objects under
        /// the namespace. All the network policies will be enforced.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INetworkPolicies DefaultNetworkPolicy { get; set; }
        /// <summary>Egress policy for the network.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PolicyRule? DefaultNetworkPolicyEgress { get; set; }
        /// <summary>Ingress policy for the network.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.PolicyRule? DefaultNetworkPolicyIngress { get; set; }
        /// <summary>
        /// The default resource quota enforced upon the namespace. Customers can have other Kubernetes resource quota objects under
        /// the namespace. All the resource quotas will be enforced.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IResourceQuota DefaultResourceQuota { get; set; }
        /// <summary>
        /// CPU limit of the namespace in one-thousandth CPU form. See [CPU resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu)
        /// for more details.
        /// </summary>
        string DefaultResourceQuotaCpuLimit { get; set; }
        /// <summary>
        /// CPU request of the namespace in one-thousandth CPU form. See [CPU resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu)
        /// for more details.
        /// </summary>
        string DefaultResourceQuotaCpuRequest { get; set; }
        /// <summary>
        /// Memory limit of the namespace in the power-of-two equivalents form: Ei, Pi, Ti, Gi, Mi, Ki. See [Memory resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory)
        /// for more details.
        /// </summary>
        string DefaultResourceQuotaMemoryLimit { get; set; }
        /// <summary>
        /// Memory request of the namespace in the power-of-two equivalents form: Ei, Pi, Ti, Gi, Mi, Ki. See [Memory resource units](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory)
        /// for more details.
        /// </summary>
        string DefaultResourceQuotaMemoryRequest { get; set; }
        /// <summary>Delete options of a namespace.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.DeletePolicy? DeletePolicy { get; set; }
        /// <summary>
        /// Unique read-only string used to implement optimistic concurrency. The eTag value will change when the resource is updated.
        /// Specify an if-match or if-none-match header with the eTag value for a subsequent request to enable optimistic concurrency
        /// per the normal etag convention.
        /// </summary>
        string ETag { get; set; }
        /// <summary>The labels of managed namespace.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespacePropertiesLabels Label { get; set; }
        /// <summary>The location of the namespace.</summary>
        string Location { get; set; }
        /// <summary>Properties of a namespace.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.INamespaceProperties Property { get; set; }
        /// <summary>The current provisioning state of the namespace.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.NamespaceProvisioningState? ProvisioningState { get; set; }
        /// <summary>The system metadata relating to this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api50.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The tags to be persisted on the managed cluster namespace.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.IManagedNamespaceTags Tag { get; set; }

    }
}