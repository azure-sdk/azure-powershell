// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Extensions;

    /// <summary>The Safeguards profile.</summary>
    public partial class SafeguardsProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISafeguardsProfile,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISafeguardsProfileInternal
    {

        /// <summary>Backing field for <see cref="ExcludedNamespace" /> property.</summary>
        private string[] _excludedNamespace;

        /// <summary>List of namespaces excluded from Safeguards checks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] ExcludedNamespace { get => this._excludedNamespace; set => this._excludedNamespace = value; }

        /// <summary>Backing field for <see cref="Level" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level _level;

        /// <summary>
        /// The Safeguards level to be used. By default, Safeguards is enabled for all namespaces except those that AKS excludes via
        /// systemExcludedNamespaces
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level Level { get => this._level; set => this._level = value; }

        /// <summary>Internal Acessors for SystemExcludedNamespace</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Models.Api20250302Preview.ISafeguardsProfileInternal.SystemExcludedNamespace { get => this._systemExcludedNamespace; set { {_systemExcludedNamespace = value;} } }

        /// <summary>Backing field for <see cref="SystemExcludedNamespace" /> property.</summary>
        private string[] _systemExcludedNamespace;

        /// <summary>List of namespaces specified by AKS to be excluded from Safeguards</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string[] SystemExcludedNamespace { get => this._systemExcludedNamespace; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>The version of constraints to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="SafeguardsProfile" /> instance.</summary>
        public SafeguardsProfile()
        {

        }
    }
    /// The Safeguards profile.
    public partial interface ISafeguardsProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.IJsonSerializable
    {
        /// <summary>List of namespaces excluded from Safeguards checks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of namespaces excluded from Safeguards checks",
        SerializedName = @"excludedNamespaces",
        PossibleTypes = new [] { typeof(string) })]
        string[] ExcludedNamespace { get; set; }
        /// <summary>
        /// The Safeguards level to be used. By default, Safeguards is enabled for all namespaces except those that AKS excludes via
        /// systemExcludedNamespaces
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The Safeguards level to be used. By default, Safeguards is enabled for all namespaces except those that AKS excludes via systemExcludedNamespaces",
        SerializedName = @"level",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level Level { get; set; }
        /// <summary>List of namespaces specified by AKS to be excluded from Safeguards</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of namespaces specified by AKS to be excluded from Safeguards",
        SerializedName = @"systemExcludedNamespaces",
        PossibleTypes = new [] { typeof(string) })]
        string[] SystemExcludedNamespace { get;  }
        /// <summary>The version of constraints to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of constraints to use",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// The Safeguards profile.
    internal partial interface ISafeguardsProfileInternal

    {
        /// <summary>List of namespaces excluded from Safeguards checks</summary>
        string[] ExcludedNamespace { get; set; }
        /// <summary>
        /// The Safeguards level to be used. By default, Safeguards is enabled for all namespaces except those that AKS excludes via
        /// systemExcludedNamespaces
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerService.Support.Level Level { get; set; }
        /// <summary>List of namespaces specified by AKS to be excluded from Safeguards</summary>
        string[] SystemExcludedNamespace { get; set; }
        /// <summary>The version of constraints to use</summary>
        string Version { get; set; }

    }
}