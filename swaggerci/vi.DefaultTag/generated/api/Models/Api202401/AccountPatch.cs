// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Extensions;

    /// <summary>Azure Video Indexer account</summary>
    public partial class AccountPatch :
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPatch,
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPatchInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.ITags1" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.ITags1 __tags1 = new Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.Tags1();

        /// <summary>The account's data-plane ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public string AccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).AccountId; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentity _identity;

        /// <summary>Managed service identity (system assigned and/or user assigned identities)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.ManagedServiceIdentity()); set => this._identity = value; }

        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.ManagedServiceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.ManagedServiceIdentityType)""); }

        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Internal Acessors for AccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPatchInternal.AccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).AccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).AccountId = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentity Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPatchInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.ManagedServiceIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPatchInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPatchInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequest Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPatchInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.AccountPropertiesForPatchRequest()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPatchInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for StorageService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IStorageServicesForPatchRequest Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPatchInternal.StorageService { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).StorageService; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).StorageService = value; }

        /// <summary>Internal Acessors for TenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPatchInternal.TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).TenantId = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequest _property;

        /// <summary>List of account properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequest Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.AccountPropertiesForPatchRequest()); set => this._property = value; }

        /// <summary>Gets the status of the account at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).ProvisioningState; }

        /// <summary>The user assigned identity to be used to grant permissions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public string StorageServiceUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).StorageServiceUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).StorageServiceUserAssignedIdentity = value ?? null; }

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.ITags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.ITags1Internal)__tags1).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.ITags1Internal)__tags1).Tag = value ?? null /* model class */; }

        /// <summary>The account's tenant id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public string TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequestInternal)Property).TenantId; }

        /// <summary>Creates an new <see cref="AccountPatch" /> instance.</summary>
        public AccountPatch()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__tags1), __tags1);
            await eventListener.AssertObjectIsValid(nameof(__tags1), __tags1);
        }
    }
    /// Azure Video Indexer account
    public partial interface IAccountPatch :
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.ITags1
    {
        /// <summary>The account's data-plane ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The account's data-plane ID",
        SerializedName = @"accountId",
        PossibleTypes = new [] { typeof(string) })]
        string AccountId { get;  }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.ManagedServiceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Gets the status of the account at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the status of the account at the time the operation was called.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The user assigned identity to be used to grant permissions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user assigned identity to be used to grant permissions",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string StorageServiceUserAssignedIdentity { get; set; }
        /// <summary>The account's tenant id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The account's tenant id",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get;  }

    }
    /// Azure Video Indexer account
    internal partial interface IAccountPatchInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.ITags1Internal
    {
        /// <summary>The account's data-plane ID</summary>
        string AccountId { get; set; }
        /// <summary>Managed service identity (system assigned and/or user assigned identities)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IManagedServiceIdentity Identity { get; set; }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api30.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>List of account properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IAccountPropertiesForPatchRequest Property { get; set; }
        /// <summary>Gets the status of the account at the time the operation was called.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The storage services details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IStorageServicesForPatchRequest StorageService { get; set; }
        /// <summary>The user assigned identity to be used to grant permissions</summary>
        string StorageServiceUserAssignedIdentity { get; set; }
        /// <summary>The account's tenant id</summary>
        string TenantId { get; set; }

    }
}