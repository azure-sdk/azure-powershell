// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Extensions;

    /// <summary>Restricted viewer access token generation request's parameters</summary>
    public partial class GenerateRestrictedViewerAccessTokenParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IGenerateRestrictedViewerAccessTokenParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api202401.IGenerateRestrictedViewerAccessTokenParametersInternal
    {

        /// <summary>Backing field for <see cref="ProjectId" /> property.</summary>
        private string _projectId;

        /// <summary>The project ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public string ProjectId { get => this._projectId; set => this._projectId = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.Scope _scope;

        /// <summary>The requested media type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.Scope Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="VideoId" /> property.</summary>
        private string _videoId;

        /// <summary>The video ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public string VideoId { get => this._videoId; set => this._videoId = value; }

        /// <summary>
        /// Creates an new <see cref="GenerateRestrictedViewerAccessTokenParameters" /> instance.
        /// </summary>
        public GenerateRestrictedViewerAccessTokenParameters()
        {

        }
    }
    /// Restricted viewer access token generation request's parameters
    public partial interface IGenerateRestrictedViewerAccessTokenParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.IJsonSerializable
    {
        /// <summary>The project ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The project ID",
        SerializedName = @"projectId",
        PossibleTypes = new [] { typeof(string) })]
        string ProjectId { get; set; }
        /// <summary>The requested media type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The requested media type",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.Scope) })]
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.Scope Scope { get; set; }
        /// <summary>The video ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The video ID",
        SerializedName = @"videoId",
        PossibleTypes = new [] { typeof(string) })]
        string VideoId { get; set; }

    }
    /// Restricted viewer access token generation request's parameters
    internal partial interface IGenerateRestrictedViewerAccessTokenParametersInternal

    {
        /// <summary>The project ID</summary>
        string ProjectId { get; set; }
        /// <summary>The requested media type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Support.Scope Scope { get; set; }
        /// <summary>The video ID</summary>
        string VideoId { get; set; }

    }
}