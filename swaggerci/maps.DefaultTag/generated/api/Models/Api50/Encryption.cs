// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Extensions;

    /// <summary>All encryption configuration for a resource.</summary>
    public partial class Encryption :
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryption,
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionInternal
    {

        /// <summary>Backing field for <see cref="CustomerManagedKeyEncryption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryption _customerManagedKeyEncryption;

        /// <summary>All Customer-managed key encryption properties for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryption CustomerManagedKeyEncryption { get => (this._customerManagedKeyEncryption = this._customerManagedKeyEncryption ?? new Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.EncryptionCustomerManagedKeyEncryption()); set => this._customerManagedKeyEncryption = value; }

        /// <summary>
        /// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string CustomerManagedKeyEncryptionKeyUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyUrl = value ?? null; }

        /// <summary>Backing field for <see cref="InfrastructureEncryption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption? _infrastructureEncryption;

        /// <summary>
        /// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure)
        /// encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption? InfrastructureEncryption { get => this._infrastructureEncryption; set => this._infrastructureEncryption = value; }

        /// <summary>
        /// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity
        /// and userAssignedIdentity - internal use only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityDelegatedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyIdentityDelegatedIdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyIdentityDelegatedIdentityClientId = value ?? null; }

        /// <summary>
        /// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityFederatedClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyIdentityFederatedClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyIdentityFederatedClientId = value ?? null; }

        /// <summary>
        /// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyIdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyIdentityType = value ?? null; }

        /// <summary>
        /// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId = value ?? null; }

        /// <summary>Internal Acessors for CustomerManagedKeyEncryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryption Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionInternal.CustomerManagedKeyEncryption { get => (this._customerManagedKeyEncryption = this._customerManagedKeyEncryption ?? new Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.EncryptionCustomerManagedKeyEncryption()); set { {_customerManagedKeyEncryption = value;} } }

        /// <summary>Internal Acessors for CustomerManagedKeyEncryptionKeyIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionKeyIdentity Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionInternal.CustomerManagedKeyEncryptionKeyIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionInternal)CustomerManagedKeyEncryption).KeyEncryptionKeyIdentity = value; }

        /// <summary>Creates an new <see cref="Encryption" /> instance.</summary>
        public Encryption()
        {

        }
    }
    /// All encryption configuration for a resource.
    public partial interface IEncryption :
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.IJsonSerializable
    {
        /// <summary>
        /// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.",
        SerializedName = @"keyEncryptionKeyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerManagedKeyEncryptionKeyUrl { get; set; }
        /// <summary>
        /// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure)
        /// encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"(Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.",
        SerializedName = @"infrastructureEncryption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption? InfrastructureEncryption { get; set; }
        /// <summary>
        /// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity
        /// and userAssignedIdentity - internal use only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.",
        SerializedName = @"delegatedIdentityClientId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyIdentityDelegatedIdentityClientId { get; set; }
        /// <summary>
        /// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540",
        SerializedName = @"federatedClientId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyIdentityFederatedClientId { get; set; }
        /// <summary>
        /// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.",
        SerializedName = @"identityType",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyIdentityType { get; set; }
        /// <summary>
        /// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.",
        SerializedName = @"userAssignedIdentityResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get; set; }

    }
    /// All encryption configuration for a resource.
    internal partial interface IEncryptionInternal

    {
        /// <summary>All Customer-managed key encryption properties for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryption CustomerManagedKeyEncryption { get; set; }
        /// <summary>
        /// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionKeyIdentity CustomerManagedKeyEncryptionKeyIdentity { get; set; }
        /// <summary>
        /// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek.
        /// </summary>
        string CustomerManagedKeyEncryptionKeyUrl { get; set; }
        /// <summary>
        /// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure)
        /// encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption? InfrastructureEncryption { get; set; }
        /// <summary>
        /// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity
        /// and userAssignedIdentity - internal use only.
        /// </summary>
        string KeyEncryptionKeyIdentityDelegatedIdentityClientId { get; set; }
        /// <summary>
        /// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
        /// </summary>
        string KeyEncryptionKeyIdentityFederatedClientId { get; set; }
        /// <summary>
        /// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
        /// </summary>
        string KeyEncryptionKeyIdentityType { get; set; }
        /// <summary>
        /// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get; set; }

    }
}