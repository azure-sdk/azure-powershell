// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.PowerShell;

    /// <summary>Parameters used to update an existing Maps Account.</summary>
    [System.ComponentModel.TypeConverter(typeof(MapsAccountUpdateParametersTypeConverter))]
    public partial class MapsAccountUpdateParameters
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.MapsAccountUpdateParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParameters"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParameters DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new MapsAccountUpdateParameters(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.MapsAccountUpdateParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParameters"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParameters DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new MapsAccountUpdateParameters(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="MapsAccountUpdateParameters" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="MapsAccountUpdateParameters" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParameters FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.MapsAccountUpdateParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal MapsAccountUpdateParameters(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.IManagedServiceIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.ManagedServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.MapsAccountPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.MapsAccountUpdateParametersTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.Kind?) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.Kind.CreateFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).SkuTier = (string) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).SkuTier, global::System.Convert.ToString);
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.IEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.EncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinkedResource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).LinkedResource = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILinkedResource[]) content.GetValueForProperty("LinkedResource",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).LinkedResource, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILinkedResource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.LinkedResourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Location = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILocationsItem[]) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Location, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILocationsItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.LocationsItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.ManagedServiceIdentityType) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.ManagedServiceIdentityType.CreateFrom);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.IUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.UserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Cor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Cor = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRules) content.GetValueForProperty("Cor",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Cor, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.CorsRulesTypeConverter.ConvertFrom);
            }
            if (content.Contains("UniqueId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).UniqueId = (string) content.GetValueForProperty("UniqueId",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).UniqueId, global::System.Convert.ToString);
            }
            if (content.Contains("DisableLocalAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).DisableLocalAuth = (bool?) content.GetValueForProperty("DisableLocalAuth",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).DisableLocalAuth, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("CorCorsRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CorCorsRule = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRule[]) content.GetValueForProperty("CorCorsRule",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CorCorsRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.CorsRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("EncryptionInfrastructureEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).EncryptionInfrastructureEncryption = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption?) content.GetValueForProperty("EncryptionInfrastructureEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).EncryptionInfrastructureEncryption, Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption.CreateFrom);
            }
            if (content.Contains("EncryptionCustomerManagedKeyEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).EncryptionCustomerManagedKeyEncryption = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.ICustomerManagedKeyEncryption) content.GetValueForProperty("EncryptionCustomerManagedKeyEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).EncryptionCustomerManagedKeyEncryption, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.CustomerManagedKeyEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomerManagedKeyEncryptionKeyIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CustomerManagedKeyEncryptionKeyIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.ICustomerManagedKeyEncryptionKeyIdentity) content.GetValueForProperty("CustomerManagedKeyEncryptionKeyIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CustomerManagedKeyEncryptionKeyIdentity, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.CustomerManagedKeyEncryptionKeyIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomerManagedKeyEncryptionKeyUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CustomerManagedKeyEncryptionKeyUrl = (string) content.GetValueForProperty("CustomerManagedKeyEncryptionKeyUrl",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CustomerManagedKeyEncryptionKeyUrl, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeyIdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityType = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.IdentityType?) content.GetValueForProperty("KeyEncryptionKeyIdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityType, Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.IdentityType.CreateFrom);
            }
            if (content.Contains("KeyEncryptionKeyIdentityUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId = (string) content.GetValueForProperty("KeyEncryptionKeyIdentityUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeyIdentityDelegatedIdentityClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityDelegatedIdentityClientId = (string) content.GetValueForProperty("KeyEncryptionKeyIdentityDelegatedIdentityClientId",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityDelegatedIdentityClientId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.MapsAccountUpdateParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal MapsAccountUpdateParameters(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.IManagedServiceIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.ManagedServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.MapsAccountPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.MapsAccountUpdateParametersTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.Kind?) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.Kind.CreateFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).SkuTier = (string) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).SkuTier, global::System.Convert.ToString);
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.IEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.EncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinkedResource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).LinkedResource = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILinkedResource[]) content.GetValueForProperty("LinkedResource",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).LinkedResource, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILinkedResource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.LinkedResourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Location = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILocationsItem[]) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Location, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILocationsItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.LocationsItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.ManagedServiceIdentityType) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.ManagedServiceIdentityType.CreateFrom);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.IUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.UserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Cor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Cor = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRules) content.GetValueForProperty("Cor",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).Cor, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.CorsRulesTypeConverter.ConvertFrom);
            }
            if (content.Contains("UniqueId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).UniqueId = (string) content.GetValueForProperty("UniqueId",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).UniqueId, global::System.Convert.ToString);
            }
            if (content.Contains("DisableLocalAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).DisableLocalAuth = (bool?) content.GetValueForProperty("DisableLocalAuth",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).DisableLocalAuth, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("CorCorsRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CorCorsRule = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRule[]) content.GetValueForProperty("CorCorsRule",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CorCorsRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.CorsRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("EncryptionInfrastructureEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).EncryptionInfrastructureEncryption = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption?) content.GetValueForProperty("EncryptionInfrastructureEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).EncryptionInfrastructureEncryption, Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption.CreateFrom);
            }
            if (content.Contains("EncryptionCustomerManagedKeyEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).EncryptionCustomerManagedKeyEncryption = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.ICustomerManagedKeyEncryption) content.GetValueForProperty("EncryptionCustomerManagedKeyEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).EncryptionCustomerManagedKeyEncryption, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.CustomerManagedKeyEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomerManagedKeyEncryptionKeyIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CustomerManagedKeyEncryptionKeyIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.ICustomerManagedKeyEncryptionKeyIdentity) content.GetValueForProperty("CustomerManagedKeyEncryptionKeyIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CustomerManagedKeyEncryptionKeyIdentity, Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api40.CustomerManagedKeyEncryptionKeyIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomerManagedKeyEncryptionKeyUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CustomerManagedKeyEncryptionKeyUrl = (string) content.GetValueForProperty("CustomerManagedKeyEncryptionKeyUrl",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).CustomerManagedKeyEncryptionKeyUrl, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeyIdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityType = (Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.IdentityType?) content.GetValueForProperty("KeyEncryptionKeyIdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityType, Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.IdentityType.CreateFrom);
            }
            if (content.Contains("KeyEncryptionKeyIdentityUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId = (string) content.GetValueForProperty("KeyEncryptionKeyIdentityUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeyIdentityDelegatedIdentityClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityDelegatedIdentityClientId = (string) content.GetValueForProperty("KeyEncryptionKeyIdentityDelegatedIdentityClientId",((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountUpdateParametersInternal)this).KeyEncryptionKeyIdentityDelegatedIdentityClientId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Parameters used to update an existing Maps Account.
    [System.ComponentModel.TypeConverter(typeof(MapsAccountUpdateParametersTypeConverter))]
    public partial interface IMapsAccountUpdateParameters

    {

    }
}