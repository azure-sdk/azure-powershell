// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Extensions;

    /// <summary>An Azure resource which represents access to a suite of Maps REST APIs.</summary>
    public partial class MapsAccount :
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccount,
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ITrackedResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.TrackedResource();

        /// <summary>
        /// The list of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRule[] CorCorsRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).CorCorsRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).CorCorsRule = value ?? null /* arrayOf */; }

        /// <summary>
        /// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string CustomerManagedKeyEncryptionKeyUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).CustomerManagedKeyEncryptionKeyUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).CustomerManagedKeyEncryptionKeyUrl = value ?? null; }

        /// <summary>
        /// Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared
        /// Keys and Shared Access Signature Token authentication from any usage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public bool? DisableLocalAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).DisableLocalAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).DisableLocalAuth = value ?? default(bool); }

        /// <summary>
        /// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure)
        /// encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption? EncryptionInfrastructureEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).EncryptionInfrastructureEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).EncryptionInfrastructureEncryption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption)""); }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentity _identity;

        /// <summary>Managed service identity (system assigned and/or user assigned identities)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ManagedServiceIdentity()); set => this._identity = value; }

        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.ManagedServiceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.ManagedServiceIdentityType)""); }

        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>
        /// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity
        /// and userAssignedIdentity - internal use only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityDelegatedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).KeyEncryptionKeyIdentityDelegatedIdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).KeyEncryptionKeyIdentityDelegatedIdentityClientId = value ?? null; }

        /// <summary>
        /// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityFederatedClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).KeyEncryptionKeyIdentityFederatedClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).KeyEncryptionKeyIdentityFederatedClientId = value ?? null; }

        /// <summary>
        /// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).KeyEncryptionKeyIdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).KeyEncryptionKeyIdentityType = value ?? null; }

        /// <summary>
        /// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.Kind? _kind;

        /// <summary>Get or Set Kind property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.Kind? Kind { get => this._kind; set => this._kind = value; }

        /// <summary>
        /// The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must
        /// update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API.
        /// Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILinkedResource[] LinkedResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).LinkedResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).LinkedResource = value ?? null /* arrayOf */; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for Cor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRules Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.Cor { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).Cor; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).Cor = value; }

        /// <summary>Internal Acessors for CustomerManagedKeyEncryptionKeyIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionKeyIdentity Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.CustomerManagedKeyEncryptionKeyIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).CustomerManagedKeyEncryptionKeyIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).CustomerManagedKeyEncryptionKeyIdentity = value; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryption Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.Encryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).Encryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).Encryption = value; }

        /// <summary>Internal Acessors for EncryptionCustomerManagedKeyEncryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryption Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.EncryptionCustomerManagedKeyEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).EncryptionCustomerManagedKeyEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).EncryptionCustomerManagedKeyEncryption = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentity Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ManagedServiceIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountProperties Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.MapsAccountProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISku Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for SkuName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISkuInternal)Sku).Name = value; }

        /// <summary>Internal Acessors for SkuTier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISkuInternal)Sku).Tier = value; }

        /// <summary>Internal Acessors for UniqueId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountInternal.UniqueId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).UniqueId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).UniqueId = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).Name; }

        /// <summary>
        /// List of additional data processing regions for the Maps Account, which may result in requests being processed in another
        /// geography. Some features or results may be restricted to specific regions. By default, Maps REST APIs process requests
        /// according to the account location or the [geographic scope](https://learn.microsoft.com/azure/azure-maps/geographic-scope).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILocationsItem[] PropertiesLocations { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).Location = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountProperties _property;

        /// <summary>The map account properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.MapsAccountProperties()); set => this._property = value; }

        /// <summary>
        /// The provisioning state of the Maps account resource, Account updates can only be performed on terminal states. Terminal
        /// states: `Succeeded` and `Failed`
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISku _sku;

        /// <summary>The SKU of this account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.Sku()); set => this._sku = value; }

        /// <summary>The name of the SKU, in standard format (such as G2).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISkuInternal)Sku).Name; }

        /// <summary>Gets the sku tier. This is based on the SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISkuInternal)Sku).Tier; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IResourceInternal)__trackedResource).Type; }

        /// <summary>A unique identifier for the Maps Account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maps.PropertyOrigin.Inlined)]
        public string UniqueId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountPropertiesInternal)Property).UniqueId; }

        /// <summary>Creates an new <see cref="MapsAccount" /> instance.</summary>
        public MapsAccount()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// An Azure resource which represents access to a suite of Maps REST APIs.
    public partial interface IMapsAccount :
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ITrackedResource
    {
        /// <summary>
        /// The list of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of CORS rules. You can include up to five CorsRule elements in the request. ",
        SerializedName = @"corsRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRule[] CorCorsRule { get; set; }
        /// <summary>
        /// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.",
        SerializedName = @"keyEncryptionKeyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerManagedKeyEncryptionKeyUrl { get; set; }
        /// <summary>
        /// Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared
        /// Keys and Shared Access Signature Token authentication from any usage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys and Shared Access Signature Token authentication from any usage.",
        SerializedName = @"disableLocalAuth",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisableLocalAuth { get; set; }
        /// <summary>
        /// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure)
        /// encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"(Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.",
        SerializedName = @"infrastructureEncryption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption? EncryptionInfrastructureEncryption { get; set; }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.ManagedServiceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity
        /// and userAssignedIdentity - internal use only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.",
        SerializedName = @"delegatedIdentityClientId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyIdentityDelegatedIdentityClientId { get; set; }
        /// <summary>
        /// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540",
        SerializedName = @"federatedClientId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyIdentityFederatedClientId { get; set; }
        /// <summary>
        /// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.",
        SerializedName = @"identityType",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyIdentityType { get; set; }
        /// <summary>
        /// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.",
        SerializedName = @"userAssignedIdentityResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get; set; }
        /// <summary>Get or Set Kind property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Get or Set Kind property.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.Kind) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.Kind? Kind { get; set; }
        /// <summary>
        /// The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must
        /// update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API.
        /// Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API. Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).",
        SerializedName = @"linkedResources",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILinkedResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILinkedResource[] LinkedResource { get; set; }
        /// <summary>
        /// List of additional data processing regions for the Maps Account, which may result in requests being processed in another
        /// geography. Some features or results may be restricted to specific regions. By default, Maps REST APIs process requests
        /// according to the account location or the [geographic scope](https://learn.microsoft.com/azure/azure-maps/geographic-scope).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of additional data processing regions for the Maps Account, which may result in requests being processed in another geography. Some features or results may be restricted to specific regions. By default, Maps REST APIs process requests according to the account location or the [geographic scope](https://learn.microsoft.com/azure/azure-maps/geographic-scope).",
        SerializedName = @"locations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILocationsItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILocationsItem[] PropertiesLocations { get; set; }
        /// <summary>
        /// The provisioning state of the Maps account resource, Account updates can only be performed on terminal states. Terminal
        /// states: `Succeeded` and `Failed`
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the Maps account resource, Account updates can only be performed on terminal states. Terminal states: `Succeeded` and `Failed`",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The name of the SKU, in standard format (such as G2).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Description = @"The name of the SKU, in standard format (such as G2).",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get;  }
        /// <summary>Gets the sku tier. This is based on the SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the sku tier. This is based on the SKU name.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(string) })]
        string SkuTier { get;  }
        /// <summary>A unique identifier for the Maps Account</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maps.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A unique identifier for the Maps Account",
        SerializedName = @"uniqueId",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueId { get;  }

    }
    /// An Azure resource which represents access to a suite of Maps REST APIs.
    internal partial interface IMapsAccountInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.ITrackedResourceInternal
    {
        /// <summary>
        /// Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule
        /// elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRules Cor { get; set; }
        /// <summary>
        /// The list of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ICorsRule[] CorCorsRule { get; set; }
        /// <summary>
        /// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryptionKeyIdentity CustomerManagedKeyEncryptionKeyIdentity { get; set; }
        /// <summary>
        /// key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek.
        /// </summary>
        string CustomerManagedKeyEncryptionKeyUrl { get; set; }
        /// <summary>
        /// Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared
        /// Keys and Shared Access Signature Token authentication from any usage.
        /// </summary>
        bool? DisableLocalAuth { get; set; }
        /// <summary>All encryption configuration for a resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryption Encryption { get; set; }
        /// <summary>All Customer-managed key encryption properties for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IEncryptionCustomerManagedKeyEncryption EncryptionCustomerManagedKeyEncryption { get; set; }
        /// <summary>
        /// (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure)
        /// encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.InfrastructureEncryption? EncryptionInfrastructureEncryption { get; set; }
        /// <summary>Managed service identity (system assigned and/or user assigned identities)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IManagedServiceIdentity Identity { get; set; }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api50.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity
        /// and userAssignedIdentity - internal use only.
        /// </summary>
        string KeyEncryptionKeyIdentityDelegatedIdentityClientId { get; set; }
        /// <summary>
        /// application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540
        /// </summary>
        string KeyEncryptionKeyIdentityFederatedClientId { get; set; }
        /// <summary>
        /// The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
        /// </summary>
        string KeyEncryptionKeyIdentityType { get; set; }
        /// <summary>
        /// User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get; set; }
        /// <summary>Get or Set Kind property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Support.Kind? Kind { get; set; }
        /// <summary>
        /// The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must
        /// update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API.
        /// Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILinkedResource[] LinkedResource { get; set; }
        /// <summary>
        /// List of additional data processing regions for the Maps Account, which may result in requests being processed in another
        /// geography. Some features or results may be restricted to specific regions. By default, Maps REST APIs process requests
        /// according to the account location or the [geographic scope](https://learn.microsoft.com/azure/azure-maps/geographic-scope).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ILocationsItem[] PropertiesLocations { get; set; }
        /// <summary>The map account properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.IMapsAccountProperties Property { get; set; }
        /// <summary>
        /// The provisioning state of the Maps account resource, Account updates can only be performed on terminal states. Terminal
        /// states: `Succeeded` and `Failed`
        /// </summary>
        string ProvisioningState { get; set; }
        /// <summary>The SKU of this account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maps.Models.Api20240701Preview.ISku Sku { get; set; }
        /// <summary>The name of the SKU, in standard format (such as G2).</summary>
        string SkuName { get; set; }
        /// <summary>Gets the sku tier. This is based on the SKU name.</summary>
        string SkuTier { get; set; }
        /// <summary>A unique identifier for the Maps Account</summary>
        string UniqueId { get; set; }

    }
}