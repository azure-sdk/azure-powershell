// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Runtime.Extensions;

    /// <summary>All replica properties.</summary>
    public partial class ReplicaProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Models.Api20230301.IReplicaProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Models.Api20230301.IReplicaPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private string _endpoint;

        /// <summary>The URI of the replica where the replica API will be available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.PropertyOrigin.Owned)]
        public string Endpoint { get => this._endpoint; }

        /// <summary>Internal Acessors for Endpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Models.Api20230301.IReplicaPropertiesInternal.Endpoint { get => this._endpoint; set { {_endpoint = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Support.ReplicaProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Models.Api20230301.IReplicaPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Support.ReplicaProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the replica.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Support.ReplicaProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="ReplicaProperties" /> instance.</summary>
        public ReplicaProperties()
        {

        }
    }
    /// All replica properties.
    public partial interface IReplicaProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Runtime.IJsonSerializable
    {
        /// <summary>The URI of the replica where the replica API will be available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The URI of the replica where the replica API will be available.",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get;  }
        /// <summary>The provisioning state of the replica.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the replica.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Support.ReplicaProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Support.ReplicaProvisioningState? ProvisioningState { get;  }

    }
    /// All replica properties.
    internal partial interface IReplicaPropertiesInternal

    {
        /// <summary>The URI of the replica where the replica API will be available.</summary>
        string Endpoint { get; set; }
        /// <summary>The provisioning state of the replica.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppConfiguration.Support.ReplicaProvisioningState? ProvisioningState { get; set; }

    }
}