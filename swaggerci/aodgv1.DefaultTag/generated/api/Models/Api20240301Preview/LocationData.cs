// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20240301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Extensions;

    /// <summary>Describes a location outside of Azure.</summary>
    public partial class LocationData :
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20240301Preview.ILocationData,
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20240301Preview.ILocationDataInternal
    {

        /// <summary>Backing field for <see cref="City" /> property.</summary>
        private string _city;

        /// <summary>The city of the location (e.g., Miami).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public string City { get => this._city; set => this._city = value; }

        /// <summary>Backing field for <see cref="ClosestAzureRegion" /> property.</summary>
        private string _closestAzureRegion;

        /// <summary>The name of the closest Azure region, (e.g., westus2).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public string ClosestAzureRegion { get => this._closestAzureRegion; set => this._closestAzureRegion = value; }

        /// <summary>Backing field for <see cref="Country" /> property.</summary>
        private string _country;

        /// <summary>The nation (e.g., United States of America) of the location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public string Country { get => this._country; set => this._country = value; }

        /// <summary>Backing field for <see cref="District" /> property.</summary>
        private string _district;

        /// <summary>
        /// For example, the state (e.g., Florida), province (e.g., Ontario), or region (e.g., Tuscany) of the location.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public string District { get => this._district; set => this._district = value; }

        /// <summary>Backing field for <see cref="Extra" /> property.</summary>
        private string _extra;

        /// <summary>
        /// Any extra information needed to uniquely identify the location (e.g., zip code).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public string Extra { get => this._extra; set => this._extra = value; }

        /// <summary>Creates an new <see cref="LocationData" /> instance.</summary>
        public LocationData()
        {

        }
    }
    /// Describes a location outside of Azure.
    public partial interface ILocationData :
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.IJsonSerializable
    {
        /// <summary>The city of the location (e.g., Miami).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The city of the location (e.g., Miami).",
        SerializedName = @"city",
        PossibleTypes = new [] { typeof(string) })]
        string City { get; set; }
        /// <summary>The name of the closest Azure region, (e.g., westus2).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the closest Azure region, (e.g., westus2).",
        SerializedName = @"closestAzureRegion",
        PossibleTypes = new [] { typeof(string) })]
        string ClosestAzureRegion { get; set; }
        /// <summary>The nation (e.g., United States of America) of the location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The nation (e.g., United States of America) of the location.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string Country { get; set; }
        /// <summary>
        /// For example, the state (e.g., Florida), province (e.g., Ontario), or region (e.g., Tuscany) of the location.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"For example, the state (e.g., Florida), province (e.g., Ontario), or region (e.g., Tuscany) of the location.",
        SerializedName = @"district",
        PossibleTypes = new [] { typeof(string) })]
        string District { get; set; }
        /// <summary>
        /// Any extra information needed to uniquely identify the location (e.g., zip code).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Any extra information needed to uniquely identify the location (e.g., zip code).",
        SerializedName = @"extra",
        PossibleTypes = new [] { typeof(string) })]
        string Extra { get; set; }

    }
    /// Describes a location outside of Azure.
    internal partial interface ILocationDataInternal

    {
        /// <summary>The city of the location (e.g., Miami).</summary>
        string City { get; set; }
        /// <summary>The name of the closest Azure region, (e.g., westus2).</summary>
        string ClosestAzureRegion { get; set; }
        /// <summary>The nation (e.g., United States of America) of the location.</summary>
        string Country { get; set; }
        /// <summary>
        /// For example, the state (e.g., Florida), province (e.g., Ontario), or region (e.g., Tuscany) of the location.
        /// </summary>
        string District { get; set; }
        /// <summary>
        /// Any extra information needed to uniquely identify the location (e.g., zip code).
        /// </summary>
        string Extra { get; set; }

    }
}