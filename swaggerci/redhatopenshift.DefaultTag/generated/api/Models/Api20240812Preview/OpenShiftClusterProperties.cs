// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Extensions;

    /// <summary>OpenShiftClusterProperties represents an OpenShift cluster's properties.</summary>
    public partial class OpenShiftClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApiserverProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfile _apiserverProfile;

        /// <summary>The cluster API server profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfile ApiserverProfile { get => (this._apiserverProfile = this._apiserverProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ApiServerProfile()); set => this._apiserverProfile = value; }

        /// <summary>The IP of the cluster API server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ApiserverProfileIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfileInternal)ApiserverProfile).IP; }

        /// <summary>The URL to access the cluster API server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ApiserverProfileUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfileInternal)ApiserverProfile).Url; }

        /// <summary>API server visibility.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility? ApiserverProfileVisibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfileInternal)ApiserverProfile).Visibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfileInternal)ApiserverProfile).Visibility = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility)""); }

        /// <summary>Backing field for <see cref="ClusterProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfile _clusterProfile;

        /// <summary>The cluster profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfile ClusterProfile { get => (this._clusterProfile = this._clusterProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ClusterProfile()); set => this._clusterProfile = value; }

        /// <summary>The domain for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ClusterProfileDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).Domain; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).Domain = value ?? null; }

        /// <summary>If FIPS validated crypto modules are used</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules? ClusterProfileFipsValidatedModule { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).FipsValidatedModule; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).FipsValidatedModule = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules)""); }

        /// <summary>The URL of the managed OIDC issuer in a workload identity cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ClusterProfileOidcIssuer { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).OidcIssuer; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).OidcIssuer = value ?? null; }

        /// <summary>The pull secret for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ClusterProfilePullSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).PullSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).PullSecret = value ?? null; }

        /// <summary>The ID of the cluster resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ClusterProfileResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).ResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).ResourceGroupId = value ?? null; }

        /// <summary>The version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ClusterProfileVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfileInternal)ClusterProfile).Version = value ?? null; }

        /// <summary>Backing field for <see cref="ConsoleProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IConsoleProfile _consoleProfile;

        /// <summary>The console profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IConsoleProfile ConsoleProfile { get => (this._consoleProfile = this._consoleProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ConsoleProfile()); set => this._consoleProfile = value; }

        /// <summary>The URL to access the cluster console.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ConsoleProfileUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IConsoleProfileInternal)ConsoleProfile).Url; }

        /// <summary>Backing field for <see cref="IngressProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IIngressProfile[] _ingressProfile;

        /// <summary>The cluster ingress profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IIngressProfile[] IngressProfile { get => this._ingressProfile; set => this._ingressProfile = value; }

        /// <summary>The list of effective outbound IP addresses of the public load balancer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP[] LoadBalancerProfileEffectiveOutboundIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).LoadBalancerProfileEffectiveOutboundIP; }

        /// <summary>
        /// Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.
        /// Allowed values are in the range of 1 - 20. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public int? ManagedOutboundIPCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).ManagedOutboundIPCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).ManagedOutboundIPCount = value ?? default(int); }

        /// <summary>Backing field for <see cref="MasterProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfile _masterProfile;

        /// <summary>The cluster master profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfile MasterProfile { get => (this._masterProfile = this._masterProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.MasterProfile()); set => this._masterProfile = value; }

        /// <summary>The resource ID of an associated DiskEncryptionSet, if applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string MasterProfileDiskEncryptionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfileInternal)MasterProfile).DiskEncryptionSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfileInternal)MasterProfile).DiskEncryptionSetId = value ?? null; }

        /// <summary>Whether master virtual machines are encrypted at host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost? MasterProfileEncryptionAtHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfileInternal)MasterProfile).EncryptionAtHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfileInternal)MasterProfile).EncryptionAtHost = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost)""); }

        /// <summary>The Azure resource ID of the master subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string MasterProfileSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfileInternal)MasterProfile).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfileInternal)MasterProfile).SubnetId = value ?? null; }

        /// <summary>The size of the master VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string MasterProfileVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfileInternal)MasterProfile).VMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfileInternal)MasterProfile).VMSize = value ?? null; }

        /// <summary>Internal Acessors for ApiserverProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.ApiserverProfile { get => (this._apiserverProfile = this._apiserverProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ApiServerProfile()); set { {_apiserverProfile = value;} } }

        /// <summary>Internal Acessors for ApiserverProfileIP</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.ApiserverProfileIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfileInternal)ApiserverProfile).IP; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfileInternal)ApiserverProfile).IP = value; }

        /// <summary>Internal Acessors for ApiserverProfileUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.ApiserverProfileUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfileInternal)ApiserverProfile).Url; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfileInternal)ApiserverProfile).Url = value; }

        /// <summary>Internal Acessors for ClusterProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.ClusterProfile { get => (this._clusterProfile = this._clusterProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ClusterProfile()); set { {_clusterProfile = value;} } }

        /// <summary>Internal Acessors for ConsoleProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IConsoleProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.ConsoleProfile { get => (this._consoleProfile = this._consoleProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ConsoleProfile()); set { {_consoleProfile = value;} } }

        /// <summary>Internal Acessors for ConsoleProfileUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.ConsoleProfileUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IConsoleProfileInternal)ConsoleProfile).Url; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IConsoleProfileInternal)ConsoleProfile).Url = value; }

        /// <summary>Internal Acessors for LoadBalancerProfileEffectiveOutboundIP</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP[] Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.LoadBalancerProfileEffectiveOutboundIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).LoadBalancerProfileEffectiveOutboundIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).LoadBalancerProfileEffectiveOutboundIP = value; }

        /// <summary>Internal Acessors for LoadBalancerProfileManagedOutboundIP</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IManagedOutboundIPs Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.LoadBalancerProfileManagedOutboundIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).LoadBalancerProfileManagedOutboundIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).LoadBalancerProfileManagedOutboundIP = value; }

        /// <summary>Internal Acessors for MasterProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.MasterProfile { get => (this._masterProfile = this._masterProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.MasterProfile()); set { {_masterProfile = value;} } }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.NetworkProfile()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for NetworkProfileLoadBalancerProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.NetworkProfileLoadBalancerProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).LoadBalancerProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).LoadBalancerProfile = value; }

        /// <summary>Internal Acessors for PlatformWorkloadIdentityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.PlatformWorkloadIdentityProfile { get => (this._platformWorkloadIdentityProfile = this._platformWorkloadIdentityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.PlatformWorkloadIdentityProfile()); set { {_platformWorkloadIdentityProfile = value;} } }

        /// <summary>Internal Acessors for ServicePrincipalProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IServicePrincipalProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.ServicePrincipalProfile { get => (this._servicePrincipalProfile = this._servicePrincipalProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ServicePrincipalProfile()); set { {_servicePrincipalProfile = value;} } }

        /// <summary>Internal Acessors for WorkerProfilesStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[] Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterPropertiesInternal.WorkerProfilesStatus { get => this._workerProfilesStatus; set { {_workerProfilesStatus = value;} } }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfile _networkProfile;

        /// <summary>The cluster network profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfile NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.NetworkProfile()); set => this._networkProfile = value; }

        /// <summary>The OutboundType used for egress traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType? NetworkProfileOutboundType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).OutboundType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).OutboundType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType)""); }

        /// <summary>The CIDR used for OpenShift/Kubernetes Pods.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string NetworkProfilePodCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).PodCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).PodCidr = value ?? null; }

        /// <summary>Specifies whether subnets are pre-attached with an NSG</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg? NetworkProfilePreconfiguredNsg { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).PreconfiguredNsg; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).PreconfiguredNsg = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg)""); }

        /// <summary>The CIDR used for OpenShift/Kubernetes Services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string NetworkProfileServiceCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).ServiceCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal)NetworkProfile).ServiceCidr = value ?? null; }

        /// <summary>Backing field for <see cref="PlatformWorkloadIdentityProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfile _platformWorkloadIdentityProfile;

        /// <summary>The workload identity profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfile PlatformWorkloadIdentityProfile { get => (this._platformWorkloadIdentityProfile = this._platformWorkloadIdentityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.PlatformWorkloadIdentityProfile()); set => this._platformWorkloadIdentityProfile = value; }

        /// <summary>Dictionary of <PlatformWorkloadIdentity></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfilePlatformWorkloadIdentities PlatformWorkloadIdentityProfilePlatformWorkloadIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfileInternal)PlatformWorkloadIdentityProfile).PlatformWorkloadIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfileInternal)PlatformWorkloadIdentityProfile).PlatformWorkloadIdentity = value ?? null /* model class */; }

        /// <summary>
        /// UpgradeableTo stores a single OpenShift version a workload identity cluster can be upgraded to
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string PlatformWorkloadIdentityProfileUpgradeableTo { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfileInternal)PlatformWorkloadIdentityProfile).UpgradeableTo; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfileInternal)PlatformWorkloadIdentityProfile).UpgradeableTo = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ProvisioningState? _provisioningState;

        /// <summary>The cluster provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Backing field for <see cref="ServicePrincipalProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IServicePrincipalProfile _servicePrincipalProfile;

        /// <summary>The cluster service principal profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IServicePrincipalProfile ServicePrincipalProfile { get => (this._servicePrincipalProfile = this._servicePrincipalProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ServicePrincipalProfile()); set => this._servicePrincipalProfile = value; }

        /// <summary>The client ID used for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IServicePrincipalProfileInternal)ServicePrincipalProfile).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IServicePrincipalProfileInternal)ServicePrincipalProfile).ClientId = value ?? null; }

        /// <summary>The client secret used for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IServicePrincipalProfileInternal)ServicePrincipalProfile).ClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IServicePrincipalProfileInternal)ServicePrincipalProfile).ClientSecret = value ?? null; }

        /// <summary>Backing field for <see cref="WorkerProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[] _workerProfile;

        /// <summary>The cluster worker profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[] WorkerProfile { get => this._workerProfile; set => this._workerProfile = value; }

        /// <summary>Backing field for <see cref="WorkerProfilesStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[] _workerProfilesStatus;

        /// <summary>The cluster worker profiles status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[] WorkerProfilesStatus { get => this._workerProfilesStatus; }

        /// <summary>Creates an new <see cref="OpenShiftClusterProperties" /> instance.</summary>
        public OpenShiftClusterProperties()
        {

        }
    }
    /// OpenShiftClusterProperties represents an OpenShift cluster's properties.
    public partial interface IOpenShiftClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.IJsonSerializable
    {
        /// <summary>The IP of the cluster API server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IP of the cluster API server.",
        SerializedName = @"ip",
        PossibleTypes = new [] { typeof(string) })]
        string ApiserverProfileIP { get;  }
        /// <summary>The URL to access the cluster API server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The URL to access the cluster API server.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string ApiserverProfileUrl { get;  }
        /// <summary>API server visibility.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API server visibility.",
        SerializedName = @"visibility",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility? ApiserverProfileVisibility { get; set; }
        /// <summary>The domain for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain for the cluster.",
        SerializedName = @"domain",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfileDomain { get; set; }
        /// <summary>If FIPS validated crypto modules are used</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If FIPS validated crypto modules are used",
        SerializedName = @"fipsValidatedModules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules? ClusterProfileFipsValidatedModule { get; set; }
        /// <summary>The URL of the managed OIDC issuer in a workload identity cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL of the managed OIDC issuer in a workload identity cluster.",
        SerializedName = @"oidcIssuer",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfileOidcIssuer { get; set; }
        /// <summary>The pull secret for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pull secret for the cluster.",
        SerializedName = @"pullSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfilePullSecret { get; set; }
        /// <summary>The ID of the cluster resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the cluster resource group.",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfileResourceGroupId { get; set; }
        /// <summary>The version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the cluster.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfileVersion { get; set; }
        /// <summary>The URL to access the cluster console.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The URL to access the cluster console.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string ConsoleProfileUrl { get;  }
        /// <summary>The cluster ingress profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster ingress profiles.",
        SerializedName = @"ingressProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IIngressProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IIngressProfile[] IngressProfile { get; set; }
        /// <summary>The list of effective outbound IP addresses of the public load balancer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of effective outbound IP addresses of the public load balancer.",
        SerializedName = @"effectiveOutboundIps",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP[] LoadBalancerProfileEffectiveOutboundIP { get;  }
        /// <summary>
        /// Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.
        /// Allowed values are in the range of 1 - 20. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.  Allowed values are in the range of 1 - 20.  The default value is 1.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? ManagedOutboundIPCount { get; set; }
        /// <summary>The resource ID of an associated DiskEncryptionSet, if applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of an associated DiskEncryptionSet, if applicable.",
        SerializedName = @"diskEncryptionSetId",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileDiskEncryptionSetId { get; set; }
        /// <summary>Whether master virtual machines are encrypted at host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether master virtual machines are encrypted at host.",
        SerializedName = @"encryptionAtHost",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost? MasterProfileEncryptionAtHost { get; set; }
        /// <summary>The Azure resource ID of the master subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Azure resource ID of the master subnet.",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileSubnetId { get; set; }
        /// <summary>The size of the master VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size of the master VMs.",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileVMSize { get; set; }
        /// <summary>The OutboundType used for egress traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OutboundType used for egress traffic.",
        SerializedName = @"outboundType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType? NetworkProfileOutboundType { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Pods.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CIDR used for OpenShift/Kubernetes Pods.",
        SerializedName = @"podCidr",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfilePodCidr { get; set; }
        /// <summary>Specifies whether subnets are pre-attached with an NSG</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether subnets are pre-attached with an NSG",
        SerializedName = @"preconfiguredNSG",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg? NetworkProfilePreconfiguredNsg { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CIDR used for OpenShift/Kubernetes Services.",
        SerializedName = @"serviceCidr",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfileServiceCidr { get; set; }
        /// <summary>Dictionary of <PlatformWorkloadIdentity></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of <PlatformWorkloadIdentity>",
        SerializedName = @"platformWorkloadIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfilePlatformWorkloadIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfilePlatformWorkloadIdentities PlatformWorkloadIdentityProfilePlatformWorkloadIdentity { get; set; }
        /// <summary>
        /// UpgradeableTo stores a single OpenShift version a workload identity cluster can be upgraded to
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UpgradeableTo stores a single OpenShift version a workload identity cluster can be upgraded to",
        SerializedName = @"upgradeableTo",
        PossibleTypes = new [] { typeof(string) })]
        string PlatformWorkloadIdentityProfileUpgradeableTo { get; set; }
        /// <summary>The cluster provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The client ID used for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client ID used for the cluster.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The client secret used for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client secret used for the cluster.",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileClientSecret { get; set; }
        /// <summary>The cluster worker profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster worker profiles.",
        SerializedName = @"workerProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[] WorkerProfile { get; set; }
        /// <summary>The cluster worker profiles status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The cluster worker profiles status.",
        SerializedName = @"workerProfilesStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[] WorkerProfilesStatus { get;  }

    }
    /// OpenShiftClusterProperties represents an OpenShift cluster's properties.
    internal partial interface IOpenShiftClusterPropertiesInternal

    {
        /// <summary>The cluster API server profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfile ApiserverProfile { get; set; }
        /// <summary>The IP of the cluster API server.</summary>
        string ApiserverProfileIP { get; set; }
        /// <summary>The URL to access the cluster API server.</summary>
        string ApiserverProfileUrl { get; set; }
        /// <summary>API server visibility.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility? ApiserverProfileVisibility { get; set; }
        /// <summary>The cluster profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfile ClusterProfile { get; set; }
        /// <summary>The domain for the cluster.</summary>
        string ClusterProfileDomain { get; set; }
        /// <summary>If FIPS validated crypto modules are used</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules? ClusterProfileFipsValidatedModule { get; set; }
        /// <summary>The URL of the managed OIDC issuer in a workload identity cluster.</summary>
        string ClusterProfileOidcIssuer { get; set; }
        /// <summary>The pull secret for the cluster.</summary>
        string ClusterProfilePullSecret { get; set; }
        /// <summary>The ID of the cluster resource group.</summary>
        string ClusterProfileResourceGroupId { get; set; }
        /// <summary>The version of the cluster.</summary>
        string ClusterProfileVersion { get; set; }
        /// <summary>The console profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IConsoleProfile ConsoleProfile { get; set; }
        /// <summary>The URL to access the cluster console.</summary>
        string ConsoleProfileUrl { get; set; }
        /// <summary>The cluster ingress profiles.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IIngressProfile[] IngressProfile { get; set; }
        /// <summary>The list of effective outbound IP addresses of the public load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP[] LoadBalancerProfileEffectiveOutboundIP { get; set; }
        /// <summary>The desired managed outbound IPs for the cluster public load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IManagedOutboundIPs LoadBalancerProfileManagedOutboundIP { get; set; }
        /// <summary>
        /// Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.
        /// Allowed values are in the range of 1 - 20. The default value is 1.
        /// </summary>
        int? ManagedOutboundIPCount { get; set; }
        /// <summary>The cluster master profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfile MasterProfile { get; set; }
        /// <summary>The resource ID of an associated DiskEncryptionSet, if applicable.</summary>
        string MasterProfileDiskEncryptionSetId { get; set; }
        /// <summary>Whether master virtual machines are encrypted at host.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost? MasterProfileEncryptionAtHost { get; set; }
        /// <summary>The Azure resource ID of the master subnet.</summary>
        string MasterProfileSubnetId { get; set; }
        /// <summary>The size of the master VMs.</summary>
        string MasterProfileVMSize { get; set; }
        /// <summary>The cluster network profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfile NetworkProfile { get; set; }
        /// <summary>The cluster load balancer profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfile NetworkProfileLoadBalancerProfile { get; set; }
        /// <summary>The OutboundType used for egress traffic.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType? NetworkProfileOutboundType { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Pods.</summary>
        string NetworkProfilePodCidr { get; set; }
        /// <summary>Specifies whether subnets are pre-attached with an NSG</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg? NetworkProfilePreconfiguredNsg { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Services.</summary>
        string NetworkProfileServiceCidr { get; set; }
        /// <summary>The workload identity profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfile PlatformWorkloadIdentityProfile { get; set; }
        /// <summary>Dictionary of <PlatformWorkloadIdentity></summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfilePlatformWorkloadIdentities PlatformWorkloadIdentityProfilePlatformWorkloadIdentity { get; set; }
        /// <summary>
        /// UpgradeableTo stores a single OpenShift version a workload identity cluster can be upgraded to
        /// </summary>
        string PlatformWorkloadIdentityProfileUpgradeableTo { get; set; }
        /// <summary>The cluster provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The cluster service principal profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IServicePrincipalProfile ServicePrincipalProfile { get; set; }
        /// <summary>The client ID used for the cluster.</summary>
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The client secret used for the cluster.</summary>
        string ServicePrincipalProfileClientSecret { get; set; }
        /// <summary>The cluster worker profiles.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[] WorkerProfile { get; set; }
        /// <summary>The cluster worker profiles status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[] WorkerProfilesStatus { get; set; }

    }
}