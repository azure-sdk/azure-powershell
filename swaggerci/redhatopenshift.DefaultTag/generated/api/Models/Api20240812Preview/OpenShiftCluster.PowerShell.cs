// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.PowerShell;

    /// <summary>OpenShiftCluster represents an Azure Red Hat OpenShift cluster.</summary>
    [System.ComponentModel.TypeConverter(typeof(OpenShiftClusterTypeConverter))]
    public partial class OpenShiftCluster
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.OpenShiftCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftCluster"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftCluster DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new OpenShiftCluster(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.OpenShiftCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftCluster"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftCluster DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new OpenShiftCluster(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="OpenShiftCluster" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="OpenShiftCluster" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftCluster FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.OpenShiftCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal OpenShiftCluster(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.OpenShiftClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IManagedServiceIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ManagedServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfile) content.GetValueForProperty("ClusterProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ClusterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConsoleProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ConsoleProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IConsoleProfile) content.GetValueForProperty("ConsoleProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ConsoleProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ConsoleProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfile) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.NetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("MasterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfile) content.GetValueForProperty("MasterProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.MasterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("ServicePrincipalProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IServicePrincipalProfile) content.GetValueForProperty("ServicePrincipalProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ServicePrincipalProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("PlatformWorkloadIdentityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfile) content.GetValueForProperty("PlatformWorkloadIdentityProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.PlatformWorkloadIdentityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiserverProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfile) content.GetValueForProperty("ApiserverProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ApiServerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("WorkerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).WorkerProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[]) content.GetValueForProperty("WorkerProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).WorkerProfile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.WorkerProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("WorkerProfilesStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).WorkerProfilesStatus = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[]) content.GetValueForProperty("WorkerProfilesStatus",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).WorkerProfilesStatus, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.WorkerProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("IngressProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IngressProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IIngressProfile[]) content.GetValueForProperty("IngressProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IngressProfile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IIngressProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IngressProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterProfilePullSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfilePullSecret = (string) content.GetValueForProperty("ClusterProfilePullSecret",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfilePullSecret, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileDomain = (string) content.GetValueForProperty("ClusterProfileDomain",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileDomain, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileVersion = (string) content.GetValueForProperty("ClusterProfileVersion",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileOidcIssuer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileOidcIssuer = (string) content.GetValueForProperty("ClusterProfileOidcIssuer",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileOidcIssuer, global::System.Convert.ToString);
            }
            if (content.Contains("ConsoleProfileUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ConsoleProfileUrl = (string) content.GetValueForProperty("ConsoleProfileUrl",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ConsoleProfileUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfileClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfileClientId = (string) content.GetValueForProperty("ServicePrincipalProfileClientId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfileClientId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfileClientSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfileClientSecret = (string) content.GetValueForProperty("ServicePrincipalProfileClientSecret",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfileClientSecret, global::System.Convert.ToString);
            }
            if (content.Contains("PlatformWorkloadIdentityProfileUpgradeableTo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfileUpgradeableTo = (string) content.GetValueForProperty("PlatformWorkloadIdentityProfileUpgradeableTo",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfileUpgradeableTo, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfilePodCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfilePodCidr = (string) content.GetValueForProperty("NetworkProfilePodCidr",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfilePodCidr, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfileServiceCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileServiceCidr = (string) content.GetValueForProperty("NetworkProfileServiceCidr",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileServiceCidr, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfileOutboundType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileOutboundType = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType?) content.GetValueForProperty("NetworkProfileOutboundType",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileOutboundType, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType.CreateFrom);
            }
            if (content.Contains("NetworkProfilePreconfiguredNsg"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfilePreconfiguredNsg = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg?) content.GetValueForProperty("NetworkProfilePreconfiguredNsg",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfilePreconfiguredNsg, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg.CreateFrom);
            }
            if (content.Contains("MasterProfileVMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileVMSize = (string) content.GetValueForProperty("MasterProfileVMSize",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileVMSize, global::System.Convert.ToString);
            }
            if (content.Contains("MasterProfileSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileSubnetId = (string) content.GetValueForProperty("MasterProfileSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileVisibility"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileVisibility = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility?) content.GetValueForProperty("ApiserverProfileVisibility",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileVisibility, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility.CreateFrom);
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ManagedServiceIdentityType) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ManagedServiceIdentityType.CreateFrom);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IManagedServiceIdentityUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ManagedServiceIdentityUserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterProfileResourceGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileResourceGroupId = (string) content.GetValueForProperty("ClusterProfileResourceGroupId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileResourceGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileFipsValidatedModule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileFipsValidatedModule = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules?) content.GetValueForProperty("ClusterProfileFipsValidatedModule",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileFipsValidatedModule, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules.CreateFrom);
            }
            if (content.Contains("PlatformWorkloadIdentityProfilePlatformWorkloadIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfilePlatformWorkloadIdentity = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfilePlatformWorkloadIdentities) content.GetValueForProperty("PlatformWorkloadIdentityProfilePlatformWorkloadIdentity",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfilePlatformWorkloadIdentity, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.PlatformWorkloadIdentityProfilePlatformWorkloadIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfileLoadBalancerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileLoadBalancerProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfile) content.GetValueForProperty("NetworkProfileLoadBalancerProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileLoadBalancerProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.LoadBalancerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("MasterProfileEncryptionAtHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileEncryptionAtHost = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost?) content.GetValueForProperty("MasterProfileEncryptionAtHost",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileEncryptionAtHost, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost.CreateFrom);
            }
            if (content.Contains("MasterProfileDiskEncryptionSetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileDiskEncryptionSetId = (string) content.GetValueForProperty("MasterProfileDiskEncryptionSetId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileDiskEncryptionSetId, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileUrl = (string) content.GetValueForProperty("ApiserverProfileUrl",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileIP = (string) content.GetValueForProperty("ApiserverProfileIP",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileIP, global::System.Convert.ToString);
            }
            if (content.Contains("LoadBalancerProfileManagedOutboundIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).LoadBalancerProfileManagedOutboundIP = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IManagedOutboundIPs) content.GetValueForProperty("LoadBalancerProfileManagedOutboundIP",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).LoadBalancerProfileManagedOutboundIP, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ManagedOutboundIPsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LoadBalancerProfileEffectiveOutboundIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).LoadBalancerProfileEffectiveOutboundIP = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP[]) content.GetValueForProperty("LoadBalancerProfileEffectiveOutboundIP",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).LoadBalancerProfileEffectiveOutboundIP, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.EffectiveOutboundIPTypeConverter.ConvertFrom));
            }
            if (content.Contains("ManagedOutboundIPCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ManagedOutboundIPCount = (int?) content.GetValueForProperty("ManagedOutboundIPCount",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ManagedOutboundIPCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.OpenShiftCluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal OpenShiftCluster(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.OpenShiftClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IManagedServiceIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ManagedServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IClusterProfile) content.GetValueForProperty("ClusterProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ClusterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConsoleProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ConsoleProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IConsoleProfile) content.GetValueForProperty("ConsoleProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ConsoleProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ConsoleProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfile) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.NetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("MasterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IMasterProfile) content.GetValueForProperty("MasterProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.MasterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("ServicePrincipalProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IServicePrincipalProfile) content.GetValueForProperty("ServicePrincipalProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ServicePrincipalProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("PlatformWorkloadIdentityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfile) content.GetValueForProperty("PlatformWorkloadIdentityProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.PlatformWorkloadIdentityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiserverProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IApiServerProfile) content.GetValueForProperty("ApiserverProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ApiServerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("WorkerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).WorkerProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[]) content.GetValueForProperty("WorkerProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).WorkerProfile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.WorkerProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("WorkerProfilesStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).WorkerProfilesStatus = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile[]) content.GetValueForProperty("WorkerProfilesStatus",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).WorkerProfilesStatus, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IWorkerProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.WorkerProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("IngressProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IngressProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IIngressProfile[]) content.GetValueForProperty("IngressProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IngressProfile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IIngressProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IngressProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterProfilePullSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfilePullSecret = (string) content.GetValueForProperty("ClusterProfilePullSecret",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfilePullSecret, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileDomain = (string) content.GetValueForProperty("ClusterProfileDomain",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileDomain, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileVersion = (string) content.GetValueForProperty("ClusterProfileVersion",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileOidcIssuer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileOidcIssuer = (string) content.GetValueForProperty("ClusterProfileOidcIssuer",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileOidcIssuer, global::System.Convert.ToString);
            }
            if (content.Contains("ConsoleProfileUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ConsoleProfileUrl = (string) content.GetValueForProperty("ConsoleProfileUrl",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ConsoleProfileUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfileClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfileClientId = (string) content.GetValueForProperty("ServicePrincipalProfileClientId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfileClientId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfileClientSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfileClientSecret = (string) content.GetValueForProperty("ServicePrincipalProfileClientSecret",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ServicePrincipalProfileClientSecret, global::System.Convert.ToString);
            }
            if (content.Contains("PlatformWorkloadIdentityProfileUpgradeableTo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfileUpgradeableTo = (string) content.GetValueForProperty("PlatformWorkloadIdentityProfileUpgradeableTo",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfileUpgradeableTo, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfilePodCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfilePodCidr = (string) content.GetValueForProperty("NetworkProfilePodCidr",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfilePodCidr, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfileServiceCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileServiceCidr = (string) content.GetValueForProperty("NetworkProfileServiceCidr",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileServiceCidr, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfileOutboundType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileOutboundType = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType?) content.GetValueForProperty("NetworkProfileOutboundType",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileOutboundType, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType.CreateFrom);
            }
            if (content.Contains("NetworkProfilePreconfiguredNsg"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfilePreconfiguredNsg = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg?) content.GetValueForProperty("NetworkProfilePreconfiguredNsg",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfilePreconfiguredNsg, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg.CreateFrom);
            }
            if (content.Contains("MasterProfileVMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileVMSize = (string) content.GetValueForProperty("MasterProfileVMSize",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileVMSize, global::System.Convert.ToString);
            }
            if (content.Contains("MasterProfileSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileSubnetId = (string) content.GetValueForProperty("MasterProfileSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileVisibility"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileVisibility = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility?) content.GetValueForProperty("ApiserverProfileVisibility",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileVisibility, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility.CreateFrom);
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ManagedServiceIdentityType) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.ManagedServiceIdentityType.CreateFrom);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.IManagedServiceIdentityUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api60.ManagedServiceIdentityUserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterProfileResourceGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileResourceGroupId = (string) content.GetValueForProperty("ClusterProfileResourceGroupId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileResourceGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterProfileFipsValidatedModule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileFipsValidatedModule = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules?) content.GetValueForProperty("ClusterProfileFipsValidatedModule",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ClusterProfileFipsValidatedModule, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules.CreateFrom);
            }
            if (content.Contains("PlatformWorkloadIdentityProfilePlatformWorkloadIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfilePlatformWorkloadIdentity = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IPlatformWorkloadIdentityProfilePlatformWorkloadIdentities) content.GetValueForProperty("PlatformWorkloadIdentityProfilePlatformWorkloadIdentity",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).PlatformWorkloadIdentityProfilePlatformWorkloadIdentity, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.PlatformWorkloadIdentityProfilePlatformWorkloadIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfileLoadBalancerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileLoadBalancerProfile = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfile) content.GetValueForProperty("NetworkProfileLoadBalancerProfile",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).NetworkProfileLoadBalancerProfile, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.LoadBalancerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("MasterProfileEncryptionAtHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileEncryptionAtHost = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost?) content.GetValueForProperty("MasterProfileEncryptionAtHost",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileEncryptionAtHost, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost.CreateFrom);
            }
            if (content.Contains("MasterProfileDiskEncryptionSetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileDiskEncryptionSetId = (string) content.GetValueForProperty("MasterProfileDiskEncryptionSetId",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).MasterProfileDiskEncryptionSetId, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileUrl = (string) content.GetValueForProperty("ApiserverProfileUrl",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ApiserverProfileIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileIP = (string) content.GetValueForProperty("ApiserverProfileIP",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ApiserverProfileIP, global::System.Convert.ToString);
            }
            if (content.Contains("LoadBalancerProfileManagedOutboundIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).LoadBalancerProfileManagedOutboundIP = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IManagedOutboundIPs) content.GetValueForProperty("LoadBalancerProfileManagedOutboundIP",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).LoadBalancerProfileManagedOutboundIP, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ManagedOutboundIPsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LoadBalancerProfileEffectiveOutboundIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).LoadBalancerProfileEffectiveOutboundIP = (Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP[]) content.GetValueForProperty("LoadBalancerProfileEffectiveOutboundIP",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).LoadBalancerProfileEffectiveOutboundIP, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP>(__y, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.EffectiveOutboundIPTypeConverter.ConvertFrom));
            }
            if (content.Contains("ManagedOutboundIPCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ManagedOutboundIPCount = (int?) content.GetValueForProperty("ManagedOutboundIPCount",((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IOpenShiftClusterInternal)this).ManagedOutboundIPCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// OpenShiftCluster represents an Azure Red Hat OpenShift cluster.
    [System.ComponentModel.TypeConverter(typeof(OpenShiftClusterTypeConverter))]
    public partial interface IOpenShiftCluster

    {

    }
}