// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Extensions;

    /// <summary>NetworkProfile represents a network profile.</summary>
    public partial class NetworkProfile :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfile,
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal
    {

        /// <summary>Backing field for <see cref="LoadBalancerProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfile _loadBalancerProfile;

        /// <summary>The cluster load balancer profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfile LoadBalancerProfile { get => (this._loadBalancerProfile = this._loadBalancerProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.LoadBalancerProfile()); set => this._loadBalancerProfile = value; }

        /// <summary>The list of effective outbound IP addresses of the public load balancer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP[] LoadBalancerProfileEffectiveOutboundIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfileInternal)LoadBalancerProfile).EffectiveOutboundIP; }

        /// <summary>
        /// Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.
        /// Allowed values are in the range of 1 - 20. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public int? ManagedOutboundIPCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfileInternal)LoadBalancerProfile).ManagedOutboundIPCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfileInternal)LoadBalancerProfile).ManagedOutboundIPCount = value ?? default(int); }

        /// <summary>Internal Acessors for LoadBalancerProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal.LoadBalancerProfile { get => (this._loadBalancerProfile = this._loadBalancerProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.LoadBalancerProfile()); set { {_loadBalancerProfile = value;} } }

        /// <summary>Internal Acessors for LoadBalancerProfileEffectiveOutboundIP</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP[] Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal.LoadBalancerProfileEffectiveOutboundIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfileInternal)LoadBalancerProfile).EffectiveOutboundIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfileInternal)LoadBalancerProfile).EffectiveOutboundIP = value; }

        /// <summary>Internal Acessors for LoadBalancerProfileManagedOutboundIP</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IManagedOutboundIPs Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.INetworkProfileInternal.LoadBalancerProfileManagedOutboundIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfileInternal)LoadBalancerProfile).ManagedOutboundIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfileInternal)LoadBalancerProfile).ManagedOutboundIP = value; }

        /// <summary>Backing field for <see cref="OutboundType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType? _outboundType;

        /// <summary>The OutboundType used for egress traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType? OutboundType { get => this._outboundType; set => this._outboundType = value; }

        /// <summary>Backing field for <see cref="PodCidr" /> property.</summary>
        private string _podCidr;

        /// <summary>The CIDR used for OpenShift/Kubernetes Pods.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public string PodCidr { get => this._podCidr; set => this._podCidr = value; }

        /// <summary>Backing field for <see cref="PreconfiguredNsg" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg? _preconfiguredNsg;

        /// <summary>Specifies whether subnets are pre-attached with an NSG</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg? PreconfiguredNsg { get => this._preconfiguredNsg; set => this._preconfiguredNsg = value; }

        /// <summary>Backing field for <see cref="ServiceCidr" /> property.</summary>
        private string _serviceCidr;

        /// <summary>The CIDR used for OpenShift/Kubernetes Services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public string ServiceCidr { get => this._serviceCidr; set => this._serviceCidr = value; }

        /// <summary>Creates an new <see cref="NetworkProfile" /> instance.</summary>
        public NetworkProfile()
        {

        }
    }
    /// NetworkProfile represents a network profile.
    public partial interface INetworkProfile :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.IJsonSerializable
    {
        /// <summary>The list of effective outbound IP addresses of the public load balancer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of effective outbound IP addresses of the public load balancer.",
        SerializedName = @"effectiveOutboundIps",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP[] LoadBalancerProfileEffectiveOutboundIP { get;  }
        /// <summary>
        /// Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.
        /// Allowed values are in the range of 1 - 20. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.  Allowed values are in the range of 1 - 20.  The default value is 1.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? ManagedOutboundIPCount { get; set; }
        /// <summary>The OutboundType used for egress traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OutboundType used for egress traffic.",
        SerializedName = @"outboundType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType? OutboundType { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Pods.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CIDR used for OpenShift/Kubernetes Pods.",
        SerializedName = @"podCidr",
        PossibleTypes = new [] { typeof(string) })]
        string PodCidr { get; set; }
        /// <summary>Specifies whether subnets are pre-attached with an NSG</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether subnets are pre-attached with an NSG",
        SerializedName = @"preconfiguredNSG",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg? PreconfiguredNsg { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CIDR used for OpenShift/Kubernetes Services.",
        SerializedName = @"serviceCidr",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceCidr { get; set; }

    }
    /// NetworkProfile represents a network profile.
    internal partial interface INetworkProfileInternal

    {
        /// <summary>The cluster load balancer profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.ILoadBalancerProfile LoadBalancerProfile { get; set; }
        /// <summary>The list of effective outbound IP addresses of the public load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IEffectiveOutboundIP[] LoadBalancerProfileEffectiveOutboundIP { get; set; }
        /// <summary>The desired managed outbound IPs for the cluster public load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20240812Preview.IManagedOutboundIPs LoadBalancerProfileManagedOutboundIP { get; set; }
        /// <summary>
        /// Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.
        /// Allowed values are in the range of 1 - 20. The default value is 1.
        /// </summary>
        int? ManagedOutboundIPCount { get; set; }
        /// <summary>The OutboundType used for egress traffic.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.OutboundType? OutboundType { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Pods.</summary>
        string PodCidr { get; set; }
        /// <summary>Specifies whether subnets are pre-attached with an NSG</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.PreconfiguredNsg? PreconfiguredNsg { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Services.</summary>
        string ServiceCidr { get; set; }

    }
}