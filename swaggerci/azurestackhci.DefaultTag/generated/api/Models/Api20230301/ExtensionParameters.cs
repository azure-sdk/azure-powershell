// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHci.Runtime.Extensions;

    /// <summary>
    /// Describes the properties of a Machine Extension. This object mirrors the definition in HybridCompute.
    /// </summary>
    public partial class ExtensionParameters :
        Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParameters,
        Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersInternal
    {

        /// <summary>Backing field for <see cref="AutoUpgradeMinorVersion" /> property.</summary>
        private bool? _autoUpgradeMinorVersion;

        /// <summary>
        /// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed,
        /// however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHci.PropertyOrigin.Owned)]
        public bool? AutoUpgradeMinorVersion { get => this._autoUpgradeMinorVersion; set => this._autoUpgradeMinorVersion = value; }

        /// <summary>Backing field for <see cref="EnableAutomaticUpgrade" /> property.</summary>
        private bool? _enableAutomaticUpgrade;

        /// <summary>
        /// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHci.PropertyOrigin.Owned)]
        public bool? EnableAutomaticUpgrade { get => this._enableAutomaticUpgrade; set => this._enableAutomaticUpgrade = value; }

        /// <summary>Backing field for <see cref="ForceUpdateTag" /> property.</summary>
        private string _forceUpdateTag;

        /// <summary>
        /// How the extension handler should be forced to update even if the extension configuration has not changed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHci.PropertyOrigin.Owned)]
        public string ForceUpdateTag { get => this._forceUpdateTag; set => this._forceUpdateTag = value; }

        /// <summary>Internal Acessors for ProtectedSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersProtectedSettings Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersInternal.ProtectedSetting { get => (this._protectedSetting = this._protectedSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.ExtensionParametersProtectedSettings()); set { {_protectedSetting = value;} } }

        /// <summary>Internal Acessors for Setting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersSettings Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersInternal.Setting { get => (this._setting = this._setting ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.ExtensionParametersSettings()); set { {_setting = value;} } }

        /// <summary>Backing field for <see cref="ProtectedSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersProtectedSettings _protectedSetting;

        /// <summary>Protected settings (may contain secrets).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHci.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersProtectedSettings ProtectedSetting { get => (this._protectedSetting = this._protectedSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.ExtensionParametersProtectedSettings()); set => this._protectedSetting = value; }

        /// <summary>Workspace Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHci.PropertyOrigin.Inlined)]
        public string ProtectedSettingWorkspaceKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersProtectedSettingsInternal)ProtectedSetting).WorkspaceKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersProtectedSettingsInternal)ProtectedSetting).WorkspaceKey = value ?? null; }

        /// <summary>Backing field for <see cref="Publisher" /> property.</summary>
        private string _publisher;

        /// <summary>The name of the extension handler publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHci.PropertyOrigin.Owned)]
        public string Publisher { get => this._publisher; set => this._publisher = value; }

        /// <summary>Backing field for <see cref="Setting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersSettings _setting;

        /// <summary>Json formatted public settings for the extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHci.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersSettings Setting { get => (this._setting = this._setting ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.ExtensionParametersSettings()); set => this._setting = value; }

        /// <summary>Workspace Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHci.PropertyOrigin.Inlined)]
        public string SettingWorkspaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersSettingsInternal)Setting).WorkspaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersSettingsInternal)Setting).WorkspaceId = value ?? null; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Specifies the type of the extension; an example is "CustomScriptExtension".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHci.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="TypeHandlerVersion" /> property.</summary>
        private string _typeHandlerVersion;

        /// <summary>
        /// Specifies the version of the script handler. Latest version would be used if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHci.PropertyOrigin.Owned)]
        public string TypeHandlerVersion { get => this._typeHandlerVersion; set => this._typeHandlerVersion = value; }

        /// <summary>Creates an new <see cref="ExtensionParameters" /> instance.</summary>
        public ExtensionParameters()
        {

        }
    }
    /// Describes the properties of a Machine Extension. This object mirrors the definition in HybridCompute.
    public partial interface IExtensionParameters :
        Microsoft.Azure.PowerShell.Cmdlets.StackHci.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed,
        /// however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.",
        SerializedName = @"autoUpgradeMinorVersion",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoUpgradeMinorVersion { get; set; }
        /// <summary>
        /// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.",
        SerializedName = @"enableAutomaticUpgrade",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAutomaticUpgrade { get; set; }
        /// <summary>
        /// How the extension handler should be forced to update even if the extension configuration has not changed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"How the extension handler should be forced to update even if the extension configuration has not changed.",
        SerializedName = @"forceUpdateTag",
        PossibleTypes = new [] { typeof(string) })]
        string ForceUpdateTag { get; set; }
        /// <summary>Workspace Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Workspace Key.",
        SerializedName = @"workspaceKey",
        PossibleTypes = new [] { typeof(string) })]
        string ProtectedSettingWorkspaceKey { get; set; }
        /// <summary>The name of the extension handler publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the extension handler publisher.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string Publisher { get; set; }
        /// <summary>Workspace Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Workspace Id.",
        SerializedName = @"workspaceId",
        PossibleTypes = new [] { typeof(string) })]
        string SettingWorkspaceId { get; set; }
        /// <summary>Specifies the type of the extension; an example is "CustomScriptExtension".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the type of the extension; an example is ""CustomScriptExtension"".",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }
        /// <summary>
        /// Specifies the version of the script handler. Latest version would be used if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHci.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the version of the script handler. Latest version would be used if not specified.",
        SerializedName = @"typeHandlerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string TypeHandlerVersion { get; set; }

    }
    /// Describes the properties of a Machine Extension. This object mirrors the definition in HybridCompute.
    internal partial interface IExtensionParametersInternal

    {
        /// <summary>
        /// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed,
        /// however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        /// </summary>
        bool? AutoUpgradeMinorVersion { get; set; }
        /// <summary>
        /// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available.
        /// </summary>
        bool? EnableAutomaticUpgrade { get; set; }
        /// <summary>
        /// How the extension handler should be forced to update even if the extension configuration has not changed.
        /// </summary>
        string ForceUpdateTag { get; set; }
        /// <summary>Protected settings (may contain secrets).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersProtectedSettings ProtectedSetting { get; set; }
        /// <summary>Workspace Key.</summary>
        string ProtectedSettingWorkspaceKey { get; set; }
        /// <summary>The name of the extension handler publisher.</summary>
        string Publisher { get; set; }
        /// <summary>Json formatted public settings for the extension.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHci.Models.Api20230301.IExtensionParametersSettings Setting { get; set; }
        /// <summary>Workspace Id.</summary>
        string SettingWorkspaceId { get; set; }
        /// <summary>Specifies the type of the extension; an example is "CustomScriptExtension".</summary>
        string Type { get; set; }
        /// <summary>
        /// Specifies the version of the script handler. Latest version would be used if not specified.
        /// </summary>
        string TypeHandlerVersion { get; set; }

    }
}