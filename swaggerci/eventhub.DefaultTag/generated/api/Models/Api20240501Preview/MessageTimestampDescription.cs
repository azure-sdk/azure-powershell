// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.Api20240501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Extensions;

    /// <summary>Properties of MessageTimestamp Description</summary>
    public partial class MessageTimestampDescription :
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.Api20240501Preview.IMessageTimestampDescription,
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.Api20240501Preview.IMessageTimestampDescriptionInternal
    {

        /// <summary>Backing field for <see cref="TimestampType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventHub.Support.TimestampType? _timestampType;

        /// <summary>
        /// Denotes the type of timestamp the message will hold.Two types of timestamp types - "AppendTime" and "CreateTime". AppendTime
        /// refers the time in which message got appended inside broker log. CreateTime refers to the time in which the message was
        /// generated on source side and producers can set this timestamp while sending the message. Default value is AppendTime.
        /// If you are using AMQP protocol, CreateTime equals AppendTime and its behavior remains the same.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventHub.Support.TimestampType? TimestampType { get => this._timestampType; set => this._timestampType = value; }

        /// <summary>Creates an new <see cref="MessageTimestampDescription" /> instance.</summary>
        public MessageTimestampDescription()
        {

        }
    }
    /// Properties of MessageTimestamp Description
    public partial interface IMessageTimestampDescription :
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Denotes the type of timestamp the message will hold.Two types of timestamp types - "AppendTime" and "CreateTime". AppendTime
        /// refers the time in which message got appended inside broker log. CreateTime refers to the time in which the message was
        /// generated on source side and producers can set this timestamp while sending the message. Default value is AppendTime.
        /// If you are using AMQP protocol, CreateTime equals AppendTime and its behavior remains the same.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Denotes the type of timestamp the message will hold.Two types of timestamp types - ""AppendTime"" and ""CreateTime"". AppendTime refers the time in which message got appended inside broker log. CreateTime refers to the time in which the message was generated on source side and producers can set this timestamp while sending the message. Default value is AppendTime. If you are using AMQP protocol, CreateTime equals AppendTime and its behavior remains the same.",
        SerializedName = @"timestampType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventHub.Support.TimestampType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Support.TimestampType? TimestampType { get; set; }

    }
    /// Properties of MessageTimestamp Description
    internal partial interface IMessageTimestampDescriptionInternal

    {
        /// <summary>
        /// Denotes the type of timestamp the message will hold.Two types of timestamp types - "AppendTime" and "CreateTime". AppendTime
        /// refers the time in which message got appended inside broker log. CreateTime refers to the time in which the message was
        /// generated on source side and producers can set this timestamp while sending the message. Default value is AppendTime.
        /// If you are using AMQP protocol, CreateTime equals AppendTime and its behavior remains the same.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Support.TimestampType? TimestampType { get; set; }

    }
}