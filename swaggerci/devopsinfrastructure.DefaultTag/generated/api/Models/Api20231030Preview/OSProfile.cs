// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Runtime.Extensions;

    /// <summary>The OS profile of the machines in the pool.</summary>
    public partial class OSProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.IOSProfile,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.IOSProfileInternal
    {

        /// <summary>Internal Acessors for SecretsManagementSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.ISecretsManagementSettings Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.IOSProfileInternal.SecretsManagementSetting { get => (this._secretsManagementSetting = this._secretsManagementSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.SecretsManagementSettings()); set { {_secretsManagementSetting = value;} } }

        /// <summary>Where to store certificates on the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.PropertyOrigin.Inlined)]
        public string SecretManagementSettingCertificateStoreLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.ISecretsManagementSettingsInternal)SecretsManagementSetting).CertificateStoreLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.ISecretsManagementSettingsInternal)SecretsManagementSetting).CertificateStoreLocation = value ?? null; }

        /// <summary>Defines if the key of the certificates should be exportable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.PropertyOrigin.Inlined)]
        public bool SecretManagementSettingKeyExportable { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.ISecretsManagementSettingsInternal)SecretsManagementSetting).KeyExportable; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.ISecretsManagementSettingsInternal)SecretsManagementSetting).KeyExportable = value ; }

        /// <summary>The list of certificates to install on all machines in the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.PropertyOrigin.Inlined)]
        public string[] SecretManagementSettingObservedCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.ISecretsManagementSettingsInternal)SecretsManagementSetting).ObservedCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.ISecretsManagementSettingsInternal)SecretsManagementSetting).ObservedCertificate = value ; }

        /// <summary>Backing field for <see cref="SecretsManagementSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.ISecretsManagementSettings _secretsManagementSetting;

        /// <summary>The secret management settings of the machines in the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.ISecretsManagementSettings SecretsManagementSetting { get => (this._secretsManagementSetting = this._secretsManagementSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.SecretsManagementSettings()); set => this._secretsManagementSetting = value; }

        /// <summary>Creates an new <see cref="OSProfile" /> instance.</summary>
        public OSProfile()
        {

        }
    }
    /// The OS profile of the machines in the pool.
    public partial interface IOSProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Runtime.IJsonSerializable
    {
        /// <summary>Where to store certificates on the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Where to store certificates on the machine.",
        SerializedName = @"certificateStoreLocation",
        PossibleTypes = new [] { typeof(string) })]
        string SecretManagementSettingCertificateStoreLocation { get; set; }
        /// <summary>Defines if the key of the certificates should be exportable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Defines if the key of the certificates should be exportable.",
        SerializedName = @"keyExportable",
        PossibleTypes = new [] { typeof(bool) })]
        bool SecretManagementSettingKeyExportable { get; set; }
        /// <summary>The list of certificates to install on all machines in the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The list of certificates to install on all machines in the pool.",
        SerializedName = @"observedCertificates",
        PossibleTypes = new [] { typeof(string) })]
        string[] SecretManagementSettingObservedCertificate { get; set; }

    }
    /// The OS profile of the machines in the pool.
    internal partial interface IOSProfileInternal

    {
        /// <summary>Where to store certificates on the machine.</summary>
        string SecretManagementSettingCertificateStoreLocation { get; set; }
        /// <summary>Defines if the key of the certificates should be exportable.</summary>
        bool SecretManagementSettingKeyExportable { get; set; }
        /// <summary>The list of certificates to install on all machines in the pool.</summary>
        string[] SecretManagementSettingObservedCertificate { get; set; }
        /// <summary>The secret management settings of the machines in the pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedDevOpsInfrastructure.Models.Api20231030Preview.ISecretsManagementSettings SecretsManagementSetting { get; set; }

    }
}