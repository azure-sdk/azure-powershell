// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support
{

    /// <summary>Provisioning states that an Azure Large Instance can be in</summary>
    public partial struct AzureLargeInstanceProvisioningStatesEnum :
        System.IEquatable<AzureLargeInstanceProvisioningStatesEnum>
    {
        /// <summary>Accepted means Azure Large Instance resource provisioning has been accepted.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum Accepted = @"Accepted";

        /// <summary>Cancelled Azure Large Instance resource operation has been cancelled</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum Canceled = @"Canceled";

        /// <summary>Creating means Azure Large Instance resource is being created.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum Creating = @"Creating";

        /// <summary>Deleting means Azure Large Instance resource is in the process of being deleted</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum Deleting = @"Deleting";

        /// <summary>Failed means Azure Large Instance resource is in failed state</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum Failed = @"Failed";

        /// <summary>
        /// Migrating means Azure Large Instance resource is being migrated from one subscription or resource group to another
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum Migrating = @"Migrating";

        /// <summary>
        /// Succeeded means Azure Large Instance resource creation succeeded during last create/update
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum Succeeded = @"Succeeded";

        /// <summary>Updating means an existing Azure Large Instance resource is being updated</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum Updating = @"Updating";

        /// <summary>
        /// the value for an instance of the <see cref="AzureLargeInstanceProvisioningStatesEnum" /> Enum.
        /// </summary>
        private string _value { get; set; }

        /// <summary>
        /// Creates an instance of the <see cref="AzureLargeInstanceProvisioningStatesEnum"/> Enum class.
        /// </summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private AzureLargeInstanceProvisioningStatesEnum(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Conversion from arbitrary object to AzureLargeInstanceProvisioningStatesEnum</summary>
        /// <param name="value">the value to convert to an instance of <see cref="AzureLargeInstanceProvisioningStatesEnum" />.</param>
        internal static object CreateFrom(object value)
        {
            return new AzureLargeInstanceProvisioningStatesEnum(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type AzureLargeInstanceProvisioningStatesEnum</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>
        /// Compares values of enum type AzureLargeInstanceProvisioningStatesEnum (override for Object)
        /// </summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is AzureLargeInstanceProvisioningStatesEnum && Equals((AzureLargeInstanceProvisioningStatesEnum)obj);
        }

        /// <summary>Returns hashCode for enum AzureLargeInstanceProvisioningStatesEnum</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for AzureLargeInstanceProvisioningStatesEnum</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to AzureLargeInstanceProvisioningStatesEnum</summary>
        /// <param name="value">the value to convert to an instance of <see cref="AzureLargeInstanceProvisioningStatesEnum" />.</param>

        public static implicit operator AzureLargeInstanceProvisioningStatesEnum(string value)
        {
            return new AzureLargeInstanceProvisioningStatesEnum(value);
        }

        /// <summary>Implicit operator to convert AzureLargeInstanceProvisioningStatesEnum to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="AzureLargeInstanceProvisioningStatesEnum" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum AzureLargeInstanceProvisioningStatesEnum</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum e1, Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum AzureLargeInstanceProvisioningStatesEnum</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum e1, Microsoft.Azure.PowerShell.Cmdlets.LargeInstance.Support.AzureLargeInstanceProvisioningStatesEnum e2)
        {
            return e2.Equals(e1);
        }
    }
}