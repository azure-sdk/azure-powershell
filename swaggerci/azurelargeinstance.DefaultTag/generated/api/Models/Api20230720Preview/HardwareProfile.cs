// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Models.Api20230720Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Runtime.Extensions;

    /// <summary>Specifies the hardware settings for the Azure Large Instance.</summary>
    public partial class HardwareProfile :
        Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Models.Api20230720Preview.IHardwareProfile,
        Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Models.Api20230720Preview.IHardwareProfileInternal
    {

        /// <summary>Backing field for <see cref="AzureLargeInstanceSize" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceSizeNamesEnum? _azureLargeInstanceSize;

        /// <summary>Specifies the Azure Large Instance SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceSizeNamesEnum? AzureLargeInstanceSize { get => this._azureLargeInstanceSize; }

        /// <summary>Backing field for <see cref="HardwareType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceHardwareTypeNamesEnum? _hardwareType;

        /// <summary>Name of the hardware type (vendor and/or their product name)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceHardwareTypeNamesEnum? HardwareType { get => this._hardwareType; }

        /// <summary>Internal Acessors for AzureLargeInstanceSize</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceSizeNamesEnum? Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Models.Api20230720Preview.IHardwareProfileInternal.AzureLargeInstanceSize { get => this._azureLargeInstanceSize; set { {_azureLargeInstanceSize = value;} } }

        /// <summary>Internal Acessors for HardwareType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceHardwareTypeNamesEnum? Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Models.Api20230720Preview.IHardwareProfileInternal.HardwareType { get => this._hardwareType; set { {_hardwareType = value;} } }

        /// <summary>Creates an new <see cref="HardwareProfile" /> instance.</summary>
        public HardwareProfile()
        {

        }
    }
    /// Specifies the hardware settings for the Azure Large Instance.
    public partial interface IHardwareProfile :
        Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Runtime.IJsonSerializable
    {
        /// <summary>Specifies the Azure Large Instance SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the Azure Large Instance SKU.",
        SerializedName = @"azureLargeInstanceSize",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceSizeNamesEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceSizeNamesEnum? AzureLargeInstanceSize { get;  }
        /// <summary>Name of the hardware type (vendor and/or their product name)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the hardware type (vendor and/or their product name)",
        SerializedName = @"hardwareType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceHardwareTypeNamesEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceHardwareTypeNamesEnum? HardwareType { get;  }

    }
    /// Specifies the hardware settings for the Azure Large Instance.
    internal partial interface IHardwareProfileInternal

    {
        /// <summary>Specifies the Azure Large Instance SKU.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceSizeNamesEnum? AzureLargeInstanceSize { get; set; }
        /// <summary>Name of the hardware type (vendor and/or their product name)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LargeInstanceForTesting.Support.AzureLargeInstanceHardwareTypeNamesEnum? HardwareType { get; set; }

    }
}