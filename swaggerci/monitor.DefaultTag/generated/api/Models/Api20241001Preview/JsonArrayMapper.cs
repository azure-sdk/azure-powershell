// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Runtime.Extensions;

    /// <summary>
    /// A component that allows parsing a value from sourceField as a json array, match a key to each parsed value from keys,
    /// and output the key-value map to destinationField field.
    /// </summary>
    public partial class JsonArrayMapper :
        Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonArrayMapper,
        Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonArrayMapperInternal
    {

        /// <summary>Backing field for <see cref="DestinationField" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperDestinationField _destinationField;

        /// <summary>
        /// Define a destination field to which the parsed output will be written. The output is a map, it's keys is the given keys
        /// array and the matching values are the parsed json array elements.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Origin(Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperDestinationField DestinationField { get => (this._destinationField = this._destinationField ?? new Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.JsonMapperDestinationField()); set => this._destinationField = value; }

        /// <summary>
        /// Define the destination's element. The element is the body or the attributes of the message, to which the json array mapper
        /// will write the output map.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Origin(Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Support.JsonMapperElement? DestinationFieldDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperDestinationFieldInternal)DestinationField).Destination; set => ((Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperDestinationFieldInternal)DestinationField).Destination = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Support.JsonMapperElement)""); }

        /// <summary>
        /// Define a destination field name under the given element. Leaving this empty, means the root of the element. In case element=attributes
        /// and fieldName is empty, the object's attributes themselves will contain the key value output pairs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Origin(Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.PropertyOrigin.Inlined)]
        public string DestinationFieldName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperDestinationFieldInternal)DestinationField).FieldName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperDestinationFieldInternal)DestinationField).FieldName = value ?? null; }

        /// <summary>Backing field for <see cref="Key" /> property.</summary>
        private string[] _key;

        /// <summary>
        /// Define the names of the keys in the resulting map. The input json array elements are mapped in order, one for every key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Origin(Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.PropertyOrigin.Owned)]
        public string[] Key { get => this._key; set => this._key = value; }

        /// <summary>Internal Acessors for DestinationField</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperDestinationField Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonArrayMapperInternal.DestinationField { get => (this._destinationField = this._destinationField ?? new Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.JsonMapperDestinationField()); set { {_destinationField = value;} } }

        /// <summary>Internal Acessors for SourceField</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperSourceField Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonArrayMapperInternal.SourceField { get => (this._sourceField = this._sourceField ?? new Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.JsonMapperSourceField()); set { {_sourceField = value;} } }

        /// <summary>Backing field for <see cref="SourceField" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperSourceField _sourceField;

        /// <summary>
        /// Define a source field from which a json array will be read and parsed to it's elements. The number of elements in the
        /// json array is expected to be the same as the length of keys.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Origin(Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperSourceField SourceField { get => (this._sourceField = this._sourceField ?? new Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.JsonMapperSourceField()); set => this._sourceField = value; }

        /// <summary>
        /// Define a source field name from which the json array mapper will read the json array. Leaving this empty, means reading
        /// the body of the message itself.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Origin(Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.PropertyOrigin.Inlined)]
        public string SourceFieldName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperSourceFieldInternal)SourceField).FieldName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperSourceFieldInternal)SourceField).FieldName = value ?? null; }

        /// <summary>Creates an new <see cref="JsonArrayMapper" /> instance.</summary>
        public JsonArrayMapper()
        {

        }
    }
    /// A component that allows parsing a value from sourceField as a json array, match a key to each parsed value from keys,
    /// and output the key-value map to destinationField field.
    public partial interface IJsonArrayMapper :
        Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Define the destination's element. The element is the body or the attributes of the message, to which the json array mapper
        /// will write the output map.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Define the destination's element. The element is the body or the attributes of the message, to which the json array mapper will write the output map.",
        SerializedName = @"destination",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Support.JsonMapperElement) })]
        Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Support.JsonMapperElement? DestinationFieldDestination { get; set; }
        /// <summary>
        /// Define a destination field name under the given element. Leaving this empty, means the root of the element. In case element=attributes
        /// and fieldName is empty, the object's attributes themselves will contain the key value output pairs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Define a destination field name under the given element. Leaving this empty, means the root of the element. In case element=attributes and fieldName is empty, the object's attributes themselves will contain the key value output pairs.",
        SerializedName = @"fieldName",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationFieldName { get; set; }
        /// <summary>
        /// Define the names of the keys in the resulting map. The input json array elements are mapped in order, one for every key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Define the names of the keys in the resulting map. The input json array elements are mapped in order, one for every key.",
        SerializedName = @"keys",
        PossibleTypes = new [] { typeof(string) })]
        string[] Key { get; set; }
        /// <summary>
        /// Define a source field name from which the json array mapper will read the json array. Leaving this empty, means reading
        /// the body of the message itself.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Define a source field name from which the json array mapper will read the json array. Leaving this empty, means reading the body of the message itself.",
        SerializedName = @"fieldName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceFieldName { get; set; }

    }
    /// A component that allows parsing a value from sourceField as a json array, match a key to each parsed value from keys,
    /// and output the key-value map to destinationField field.
    internal partial interface IJsonArrayMapperInternal

    {
        /// <summary>
        /// Define a destination field to which the parsed output will be written. The output is a map, it's keys is the given keys
        /// array and the matching values are the parsed json array elements.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperDestinationField DestinationField { get; set; }
        /// <summary>
        /// Define the destination's element. The element is the body or the attributes of the message, to which the json array mapper
        /// will write the output map.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Support.JsonMapperElement? DestinationFieldDestination { get; set; }
        /// <summary>
        /// Define a destination field name under the given element. Leaving this empty, means the root of the element. In case element=attributes
        /// and fieldName is empty, the object's attributes themselves will contain the key value output pairs.
        /// </summary>
        string DestinationFieldName { get; set; }
        /// <summary>
        /// Define the names of the keys in the resulting map. The input json array elements are mapped in order, one for every key.
        /// </summary>
        string[] Key { get; set; }
        /// <summary>
        /// Define a source field from which a json array will be read and parsed to it's elements. The number of elements in the
        /// json array is expected to be the same as the length of keys.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MonitorPipelines.Models.Api20241001Preview.IJsonMapperSourceField SourceField { get; set; }
        /// <summary>
        /// Define a source field name from which the json array mapper will read the json array. Leaving this empty, means reading
        /// the body of the message itself.
        /// </summary>
        string SourceFieldName { get; set; }

    }
}