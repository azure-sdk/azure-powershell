// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Extensions;

    /// <summary>The request body which contain contact detail metadata</summary>
    public partial class TenantNotificationRequestBody
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.ITenantNotificationRequestBody.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.ITenantNotificationRequestBody.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.ITenantNotificationRequestBody FromJson(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject json ? new TenantNotificationRequestBody(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject into a new instance of <see cref="TenantNotificationRequestBody" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal TenantNotificationRequestBody(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_alertType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonString>("alertType"), out var __jsonAlertType) ? (string)__jsonAlertType : (string)AlertType;}
            {_emailReceiver = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonArray>("emailReceivers"), out var __jsonEmailReceivers) ? If( __jsonEmailReceivers as Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.IEmailReceiver[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.IEmailReceiver) (Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.EmailReceiver.FromJson(__u) )) ))() : null : EmailReceiver;}
            {_smsReceiver = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonArray>("smsReceivers"), out var __jsonSmsReceivers) ? If( __jsonSmsReceivers as Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.ISmsReceiver[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.ISmsReceiver) (Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.SmsReceiver.FromJson(__p) )) ))() : null : SmsReceiver;}
            {_webhookReceiver = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonArray>("webhookReceivers"), out var __jsonWebhookReceivers) ? If( __jsonWebhookReceivers as Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.IWebhookReceiver[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.IWebhookReceiver) (Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.WebhookReceiver.FromJson(__k) )) ))() : null : WebhookReceiver;}
            {_azureAppPushReceiver = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonArray>("azureAppPushReceivers"), out var __jsonAzureAppPushReceivers) ? If( __jsonAzureAppPushReceivers as Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.IAzureAppPushReceiver[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.IAzureAppPushReceiver) (Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.AzureAppPushReceiver.FromJson(__f) )) ))() : null : AzureAppPushReceiver;}
            {_voiceReceiver = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonArray>("voiceReceivers"), out var __jsonVoiceReceivers) ? If( __jsonVoiceReceivers as Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.IVoiceReceiver[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__b, (__a)=>(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.IVoiceReceiver) (Microsoft.Azure.PowerShell.Cmdlets.Monitor.Models.Api20230501Preview.VoiceReceiver.FromJson(__a) )) ))() : null : VoiceReceiver;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="TenantNotificationRequestBody" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="TenantNotificationRequestBody" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._alertType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.JsonString(this._alertType.ToString()) : null, "alertType" ,container.Add );
            if (null != this._emailReceiver)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.XNodeArray();
                foreach( var __x in this._emailReceiver )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("emailReceivers",__w);
            }
            if (null != this._smsReceiver)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.XNodeArray();
                foreach( var __s in this._smsReceiver )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("smsReceivers",__r);
            }
            if (null != this._webhookReceiver)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.XNodeArray();
                foreach( var __n in this._webhookReceiver )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("webhookReceivers",__m);
            }
            if (null != this._azureAppPushReceiver)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.XNodeArray();
                foreach( var __i in this._azureAppPushReceiver )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("azureAppPushReceivers",__h);
            }
            if (null != this._voiceReceiver)
            {
                var __c = new Microsoft.Azure.PowerShell.Cmdlets.Monitor.Runtime.Json.XNodeArray();
                foreach( var __d in this._voiceReceiver )
                {
                    AddIf(__d?.ToJson(null, serializationMode) ,__c.Add);
                }
                container.Add("voiceReceivers",__c);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}