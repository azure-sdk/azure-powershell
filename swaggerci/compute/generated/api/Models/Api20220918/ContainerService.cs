// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Container service.</summary>
    public partial class ContainerService :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerService,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.Resource();

        /// <summary>Properties of the agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceAgentPoolProfile[] AgentPoolProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).AgentPoolProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).AgentPoolProfile = value ?? null /* arrayOf */; }

        /// <summary>The name of the custom orchestrator to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string CustomProfileOrchestrator { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).CustomProfileOrchestrator; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).CustomProfileOrchestrator = value ?? null; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Id; }

        /// <summary>The administrator username to use for Linux VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string LinuxProfileAdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).LinuxProfileAdminUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).LinuxProfileAdminUsername = value ?? null; }

        /// <summary>Resource location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Location = value ; }

        /// <summary>
        /// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? MasterProfileCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).MasterProfileCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).MasterProfileCount = value ?? default(int); }

        /// <summary>DNS prefix to be used to create the FQDN for master.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string MasterProfileDnsPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).MasterProfileDnsPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).MasterProfileDnsPrefix = value ?? null; }

        /// <summary>FQDN for the master.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string MasterProfileFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).MasterProfileFqdn; }

        /// <summary>Internal Acessors for CustomProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceCustomProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.CustomProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).CustomProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).CustomProfile = value; }

        /// <summary>Internal Acessors for DiagnosticProfileVMDiagnostic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceVMDiagnostics Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.DiagnosticProfileVMDiagnostic { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).DiagnosticProfileVMDiagnostic; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).DiagnosticProfileVMDiagnostic = value; }

        /// <summary>Internal Acessors for DiagnosticsProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceDiagnosticsProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.DiagnosticsProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).DiagnosticsProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).DiagnosticsProfile = value; }

        /// <summary>Internal Acessors for LinuxProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceLinuxProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.LinuxProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).LinuxProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).LinuxProfile = value; }

        /// <summary>Internal Acessors for LinuxProfileSsh</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceSshConfiguration Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.LinuxProfileSsh { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).LinuxProfileSsh; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).LinuxProfileSsh = value; }

        /// <summary>Internal Acessors for MasterProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceMasterProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.MasterProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).MasterProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).MasterProfile = value; }

        /// <summary>Internal Acessors for MasterProfileFqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.MasterProfileFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).MasterProfileFqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).MasterProfileFqdn = value; }

        /// <summary>Internal Acessors for OrchestratorProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceOrchestratorProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.OrchestratorProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).OrchestratorProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).OrchestratorProfile = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceProperties Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.ContainerServiceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ServicePrincipalProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePrincipalProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.ServicePrincipalProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).ServicePrincipalProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).ServicePrincipalProfile = value; }

        /// <summary>Internal Acessors for VMDiagnosticStorageUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.VMDiagnosticStorageUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).VMDiagnosticStorageUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).VMDiagnosticStorageUri = value; }

        /// <summary>Internal Acessors for WindowsProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceWindowsProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceInternal.WindowsProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).WindowsProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).WindowsProfile = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Type = value; }

        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Name; }

        /// <summary>
        /// The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ContainerServiceOrchestratorTypes? OrchestratorProfileOrchestratorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).OrchestratorProfileOrchestratorType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).OrchestratorProfileOrchestratorType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ContainerServiceOrchestratorTypes)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceProperties _property;

        /// <summary>Properties of the container service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.ContainerServiceProperties()); set => this._property = value; }

        /// <summary>
        /// the current deployment or provisioning state, which only appears in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).ProvisioningState; }

        /// <summary>The ID for the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).ServicePrincipalProfileClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).ServicePrincipalProfileClientId = value ?? null; }

        /// <summary>The secret password associated with the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).ServicePrincipalProfileSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).ServicePrincipalProfileSecret = value ?? null; }

        /// <summary>the list of SSH public keys used to authenticate with Linux-based VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceSshPublicKey[] SshPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).SshPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).SshPublicKey = value ?? null /* arrayOf */; }

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal)__resource).Type; }

        /// <summary>Whether the VM diagnostic agent is provisioned on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? VMDiagnosticEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).VMDiagnosticEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).VMDiagnosticEnabled = value ?? default(bool); }

        /// <summary>The URI of the storage account where diagnostics are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string VMDiagnosticStorageUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).VMDiagnosticStorageUri; }

        /// <summary>The administrator password to use for Windows VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string WindowProfileAdminPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).WindowProfileAdminPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).WindowProfileAdminPassword = value ?? null; }

        /// <summary>The administrator username to use for Windows VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string WindowProfileAdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).WindowProfileAdminUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePropertiesInternal)Property).WindowProfileAdminUsername = value ?? null; }

        /// <summary>Creates an new <see cref="ContainerService" /> instance.</summary>
        public ContainerService()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Container service.
    public partial interface IContainerService :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResource
    {
        /// <summary>Properties of the agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Properties of the agent pool.",
        SerializedName = @"agentPoolProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceAgentPoolProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceAgentPoolProfile[] AgentPoolProfile { get; set; }
        /// <summary>The name of the custom orchestrator to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the custom orchestrator to use.",
        SerializedName = @"orchestrator",
        PossibleTypes = new [] { typeof(string) })]
        string CustomProfileOrchestrator { get; set; }
        /// <summary>The administrator username to use for Linux VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator username to use for Linux VMs.",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string LinuxProfileAdminUsername { get; set; }
        /// <summary>
        /// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? MasterProfileCount { get; set; }
        /// <summary>DNS prefix to be used to create the FQDN for master.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"DNS prefix to be used to create the FQDN for master.",
        SerializedName = @"dnsPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileDnsPrefix { get; set; }
        /// <summary>FQDN for the master.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"FQDN for the master.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileFqdn { get;  }
        /// <summary>
        /// The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.",
        SerializedName = @"orchestratorType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ContainerServiceOrchestratorTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ContainerServiceOrchestratorTypes? OrchestratorProfileOrchestratorType { get; set; }
        /// <summary>
        /// the current deployment or provisioning state, which only appears in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"the current deployment or provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The ID for the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID for the service principal.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The secret password associated with the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The secret password associated with the service principal.",
        SerializedName = @"secret",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileSecret { get; set; }
        /// <summary>the list of SSH public keys used to authenticate with Linux-based VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the list of SSH public keys used to authenticate with Linux-based VMs.",
        SerializedName = @"publicKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceSshPublicKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceSshPublicKey[] SshPublicKey { get; set; }
        /// <summary>Whether the VM diagnostic agent is provisioned on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the VM diagnostic agent is provisioned on the VM.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VMDiagnosticEnabled { get; set; }
        /// <summary>The URI of the storage account where diagnostics are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The URI of the storage account where diagnostics are stored.",
        SerializedName = @"storageUri",
        PossibleTypes = new [] { typeof(string) })]
        string VMDiagnosticStorageUri { get;  }
        /// <summary>The administrator password to use for Windows VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator password to use for Windows VMs.",
        SerializedName = @"adminPassword",
        PossibleTypes = new [] { typeof(string) })]
        string WindowProfileAdminPassword { get; set; }
        /// <summary>The administrator username to use for Windows VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator username to use for Windows VMs.",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string WindowProfileAdminUsername { get; set; }

    }
    /// Container service.
    internal partial interface IContainerServiceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IResourceInternal
    {
        /// <summary>Properties of the agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceAgentPoolProfile[] AgentPoolProfile { get; set; }
        /// <summary>Properties for custom clusters.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceCustomProfile CustomProfile { get; set; }
        /// <summary>The name of the custom orchestrator to use.</summary>
        string CustomProfileOrchestrator { get; set; }
        /// <summary>Profile for the container service VM diagnostic agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceVMDiagnostics DiagnosticProfileVMDiagnostic { get; set; }
        /// <summary>Properties of the diagnostic agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceDiagnosticsProfile DiagnosticsProfile { get; set; }
        /// <summary>Properties of Linux VMs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceLinuxProfile LinuxProfile { get; set; }
        /// <summary>The administrator username to use for Linux VMs.</summary>
        string LinuxProfileAdminUsername { get; set; }
        /// <summary>The ssh key configuration for Linux VMs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceSshConfiguration LinuxProfileSsh { get; set; }
        /// <summary>Properties of master agents.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceMasterProfile MasterProfile { get; set; }
        /// <summary>
        /// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
        /// </summary>
        int? MasterProfileCount { get; set; }
        /// <summary>DNS prefix to be used to create the FQDN for master.</summary>
        string MasterProfileDnsPrefix { get; set; }
        /// <summary>FQDN for the master.</summary>
        string MasterProfileFqdn { get; set; }
        /// <summary>Properties of the orchestrator.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceOrchestratorProfile OrchestratorProfile { get; set; }
        /// <summary>
        /// The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ContainerServiceOrchestratorTypes? OrchestratorProfileOrchestratorType { get; set; }
        /// <summary>Properties of the container service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceProperties Property { get; set; }
        /// <summary>
        /// the current deployment or provisioning state, which only appears in the response.
        /// </summary>
        string ProvisioningState { get; set; }
        /// <summary>Properties for cluster service principals.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServicePrincipalProfile ServicePrincipalProfile { get; set; }
        /// <summary>The ID for the service principal.</summary>
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The secret password associated with the service principal.</summary>
        string ServicePrincipalProfileSecret { get; set; }
        /// <summary>the list of SSH public keys used to authenticate with Linux-based VMs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceSshPublicKey[] SshPublicKey { get; set; }
        /// <summary>Whether the VM diagnostic agent is provisioned on the VM.</summary>
        bool? VMDiagnosticEnabled { get; set; }
        /// <summary>The URI of the storage account where diagnostics are stored.</summary>
        string VMDiagnosticStorageUri { get; set; }
        /// <summary>The administrator password to use for Windows VMs.</summary>
        string WindowProfileAdminPassword { get; set; }
        /// <summary>The administrator username to use for Windows VMs.</summary>
        string WindowProfileAdminUsername { get; set; }
        /// <summary>Properties of Windows VMs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220918.IContainerServiceWindowsProfile WindowsProfile { get; set; }

    }
}