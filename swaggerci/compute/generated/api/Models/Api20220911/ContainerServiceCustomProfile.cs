// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220911
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Properties to configure a custom container service cluster.</summary>
    public partial class ContainerServiceCustomProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220911.IContainerServiceCustomProfile,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220911.IContainerServiceCustomProfileInternal
    {

        /// <summary>Backing field for <see cref="Orchestrator" /> property.</summary>
        private string _orchestrator;

        /// <summary>The name of the custom orchestrator to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string Orchestrator { get => this._orchestrator; set => this._orchestrator = value; }

        /// <summary>Creates an new <see cref="ContainerServiceCustomProfile" /> instance.</summary>
        public ContainerServiceCustomProfile()
        {

        }
    }
    /// Properties to configure a custom container service cluster.
    public partial interface IContainerServiceCustomProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>The name of the custom orchestrator to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The name of the custom orchestrator to use.",
        SerializedName = @"orchestrator",
        PossibleTypes = new [] { typeof(string) })]
        string Orchestrator { get; set; }

    }
    /// Properties to configure a custom container service cluster.
    internal partial interface IContainerServiceCustomProfileInternal

    {
        /// <summary>The name of the custom orchestrator to use.</summary>
        string Orchestrator { get; set; }

    }
}