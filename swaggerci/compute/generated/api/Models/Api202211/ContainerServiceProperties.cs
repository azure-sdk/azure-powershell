// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Properties of the container service.</summary>
    public partial class ContainerServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AgentPoolProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceAgentPoolProfile[] _agentPoolProfile;

        /// <summary>Properties of the agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceAgentPoolProfile[] AgentPoolProfile { get => this._agentPoolProfile; set => this._agentPoolProfile = value; }

        /// <summary>Backing field for <see cref="CustomProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceCustomProfile _customProfile;

        /// <summary>Properties for custom clusters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceCustomProfile CustomProfile { get => (this._customProfile = this._customProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceCustomProfile()); set => this._customProfile = value; }

        /// <summary>The name of the custom orchestrator to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string CustomProfileOrchestrator { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceCustomProfileInternal)CustomProfile).Orchestrator; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceCustomProfileInternal)CustomProfile).Orchestrator = value ?? null; }

        /// <summary>Backing field for <see cref="DiagnosticsProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceDiagnosticsProfile _diagnosticsProfile;

        /// <summary>Properties of the diagnostic agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceDiagnosticsProfile DiagnosticsProfile { get => (this._diagnosticsProfile = this._diagnosticsProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceDiagnosticsProfile()); set => this._diagnosticsProfile = value; }

        /// <summary>Backing field for <see cref="LinuxProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceLinuxProfile _linuxProfile;

        /// <summary>Properties of Linux VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceLinuxProfile LinuxProfile { get => (this._linuxProfile = this._linuxProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceLinuxProfile()); set => this._linuxProfile = value; }

        /// <summary>The administrator username to use for Linux VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string LinuxProfileAdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceLinuxProfileInternal)LinuxProfile).AdminUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceLinuxProfileInternal)LinuxProfile).AdminUsername = value ; }

        /// <summary>Backing field for <see cref="MasterProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceMasterProfile _masterProfile;

        /// <summary>Properties of master agents.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceMasterProfile MasterProfile { get => (this._masterProfile = this._masterProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceMasterProfile()); set => this._masterProfile = value; }

        /// <summary>
        /// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? MasterProfileCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceMasterProfileInternal)MasterProfile).Count; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceMasterProfileInternal)MasterProfile).Count = value ?? default(int); }

        /// <summary>DNS prefix to be used to create the FQDN for master.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string MasterProfileDnsPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceMasterProfileInternal)MasterProfile).DnsPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceMasterProfileInternal)MasterProfile).DnsPrefix = value ; }

        /// <summary>FQDN for the master.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string MasterProfileFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceMasterProfileInternal)MasterProfile).Fqdn; }

        /// <summary>Internal Acessors for CustomProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceCustomProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.CustomProfile { get => (this._customProfile = this._customProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceCustomProfile()); set { {_customProfile = value;} } }

        /// <summary>Internal Acessors for DiagnosticProfileVMDiagnostic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceVMDiagnostics Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.DiagnosticProfileVMDiagnostic { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceDiagnosticsProfileInternal)DiagnosticsProfile).VMDiagnostic; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceDiagnosticsProfileInternal)DiagnosticsProfile).VMDiagnostic = value; }

        /// <summary>Internal Acessors for DiagnosticsProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceDiagnosticsProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.DiagnosticsProfile { get => (this._diagnosticsProfile = this._diagnosticsProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceDiagnosticsProfile()); set { {_diagnosticsProfile = value;} } }

        /// <summary>Internal Acessors for LinuxProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceLinuxProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.LinuxProfile { get => (this._linuxProfile = this._linuxProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceLinuxProfile()); set { {_linuxProfile = value;} } }

        /// <summary>Internal Acessors for LinuxProfileSsh</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceSshConfiguration Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.LinuxProfileSsh { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceLinuxProfileInternal)LinuxProfile).Ssh; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceLinuxProfileInternal)LinuxProfile).Ssh = value; }

        /// <summary>Internal Acessors for MasterProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceMasterProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.MasterProfile { get => (this._masterProfile = this._masterProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceMasterProfile()); set { {_masterProfile = value;} } }

        /// <summary>Internal Acessors for MasterProfileFqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.MasterProfileFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceMasterProfileInternal)MasterProfile).Fqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceMasterProfileInternal)MasterProfile).Fqdn = value; }

        /// <summary>Internal Acessors for OrchestratorProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceOrchestratorProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.OrchestratorProfile { get => (this._orchestratorProfile = this._orchestratorProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceOrchestratorProfile()); set { {_orchestratorProfile = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ServicePrincipalProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePrincipalProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.ServicePrincipalProfile { get => (this._servicePrincipalProfile = this._servicePrincipalProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServicePrincipalProfile()); set { {_servicePrincipalProfile = value;} } }

        /// <summary>Internal Acessors for VMDiagnosticStorageUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.VMDiagnosticStorageUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceDiagnosticsProfileInternal)DiagnosticsProfile).VMDiagnosticStorageUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceDiagnosticsProfileInternal)DiagnosticsProfile).VMDiagnosticStorageUri = value; }

        /// <summary>Internal Acessors for WindowsProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceWindowsProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePropertiesInternal.WindowsProfile { get => (this._windowsProfile = this._windowsProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceWindowsProfile()); set { {_windowsProfile = value;} } }

        /// <summary>Backing field for <see cref="OrchestratorProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceOrchestratorProfile _orchestratorProfile;

        /// <summary>Properties of the orchestrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceOrchestratorProfile OrchestratorProfile { get => (this._orchestratorProfile = this._orchestratorProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceOrchestratorProfile()); set => this._orchestratorProfile = value; }

        /// <summary>
        /// The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ContainerServiceOrchestratorTypes? OrchestratorProfileOrchestratorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceOrchestratorProfileInternal)OrchestratorProfile).OrchestratorType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceOrchestratorProfileInternal)OrchestratorProfile).OrchestratorType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ContainerServiceOrchestratorTypes)""); }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>
        /// the current deployment or provisioning state, which only appears in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ServicePrincipalProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePrincipalProfile _servicePrincipalProfile;

        /// <summary>Properties for cluster service principals.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePrincipalProfile ServicePrincipalProfile { get => (this._servicePrincipalProfile = this._servicePrincipalProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServicePrincipalProfile()); set => this._servicePrincipalProfile = value; }

        /// <summary>The ID for the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePrincipalProfileInternal)ServicePrincipalProfile).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePrincipalProfileInternal)ServicePrincipalProfile).ClientId = value ?? null; }

        /// <summary>The secret password associated with the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePrincipalProfileInternal)ServicePrincipalProfile).Secret; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePrincipalProfileInternal)ServicePrincipalProfile).Secret = value ?? null; }

        /// <summary>the list of SSH public keys used to authenticate with Linux-based VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceSshPublicKey[] SshPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceLinuxProfileInternal)LinuxProfile).SshPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceLinuxProfileInternal)LinuxProfile).SshPublicKey = value ; }

        /// <summary>Whether the VM diagnostic agent is provisioned on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? VMDiagnosticEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceDiagnosticsProfileInternal)DiagnosticsProfile).VMDiagnosticEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceDiagnosticsProfileInternal)DiagnosticsProfile).VMDiagnosticEnabled = value ?? default(bool); }

        /// <summary>The URI of the storage account where diagnostics are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string VMDiagnosticStorageUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceDiagnosticsProfileInternal)DiagnosticsProfile).VMDiagnosticStorageUri; }

        /// <summary>The administrator password to use for Windows VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string WindowProfileAdminPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceWindowsProfileInternal)WindowsProfile).AdminPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceWindowsProfileInternal)WindowsProfile).AdminPassword = value ?? null; }

        /// <summary>The administrator username to use for Windows VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string WindowProfileAdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceWindowsProfileInternal)WindowsProfile).AdminUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceWindowsProfileInternal)WindowsProfile).AdminUsername = value ?? null; }

        /// <summary>Backing field for <see cref="WindowsProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceWindowsProfile _windowsProfile;

        /// <summary>Properties of Windows VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceWindowsProfile WindowsProfile { get => (this._windowsProfile = this._windowsProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.ContainerServiceWindowsProfile()); set => this._windowsProfile = value; }

        /// <summary>Creates an new <see cref="ContainerServiceProperties" /> instance.</summary>
        public ContainerServiceProperties()
        {

        }
    }
    /// Properties of the container service.
    public partial interface IContainerServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>Properties of the agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Properties of the agent pool.",
        SerializedName = @"agentPoolProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceAgentPoolProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceAgentPoolProfile[] AgentPoolProfile { get; set; }
        /// <summary>The name of the custom orchestrator to use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the custom orchestrator to use.",
        SerializedName = @"orchestrator",
        PossibleTypes = new [] { typeof(string) })]
        string CustomProfileOrchestrator { get; set; }
        /// <summary>The administrator username to use for Linux VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The administrator username to use for Linux VMs.",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string LinuxProfileAdminUsername { get; set; }
        /// <summary>
        /// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? MasterProfileCount { get; set; }
        /// <summary>DNS prefix to be used to create the FQDN for master.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"DNS prefix to be used to create the FQDN for master.",
        SerializedName = @"dnsPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileDnsPrefix { get; set; }
        /// <summary>FQDN for the master.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"FQDN for the master.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileFqdn { get;  }
        /// <summary>
        /// The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.",
        SerializedName = @"orchestratorType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ContainerServiceOrchestratorTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ContainerServiceOrchestratorTypes? OrchestratorProfileOrchestratorType { get; set; }
        /// <summary>
        /// the current deployment or provisioning state, which only appears in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"the current deployment or provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The ID for the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID for the service principal.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The secret password associated with the service principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The secret password associated with the service principal.",
        SerializedName = @"secret",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileSecret { get; set; }
        /// <summary>the list of SSH public keys used to authenticate with Linux-based VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the list of SSH public keys used to authenticate with Linux-based VMs.",
        SerializedName = @"publicKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceSshPublicKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceSshPublicKey[] SshPublicKey { get; set; }
        /// <summary>Whether the VM diagnostic agent is provisioned on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the VM diagnostic agent is provisioned on the VM.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VMDiagnosticEnabled { get; set; }
        /// <summary>The URI of the storage account where diagnostics are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The URI of the storage account where diagnostics are stored.",
        SerializedName = @"storageUri",
        PossibleTypes = new [] { typeof(string) })]
        string VMDiagnosticStorageUri { get;  }
        /// <summary>The administrator password to use for Windows VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator password to use for Windows VMs.",
        SerializedName = @"adminPassword",
        PossibleTypes = new [] { typeof(string) })]
        string WindowProfileAdminPassword { get; set; }
        /// <summary>The administrator username to use for Windows VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator username to use for Windows VMs.",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string WindowProfileAdminUsername { get; set; }

    }
    /// Properties of the container service.
    internal partial interface IContainerServicePropertiesInternal

    {
        /// <summary>Properties of the agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceAgentPoolProfile[] AgentPoolProfile { get; set; }
        /// <summary>Properties for custom clusters.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceCustomProfile CustomProfile { get; set; }
        /// <summary>The name of the custom orchestrator to use.</summary>
        string CustomProfileOrchestrator { get; set; }
        /// <summary>Profile for the container service VM diagnostic agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceVMDiagnostics DiagnosticProfileVMDiagnostic { get; set; }
        /// <summary>Properties of the diagnostic agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceDiagnosticsProfile DiagnosticsProfile { get; set; }
        /// <summary>Properties of Linux VMs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceLinuxProfile LinuxProfile { get; set; }
        /// <summary>The administrator username to use for Linux VMs.</summary>
        string LinuxProfileAdminUsername { get; set; }
        /// <summary>The ssh key configuration for Linux VMs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceSshConfiguration LinuxProfileSsh { get; set; }
        /// <summary>Properties of master agents.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceMasterProfile MasterProfile { get; set; }
        /// <summary>
        /// Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.
        /// </summary>
        int? MasterProfileCount { get; set; }
        /// <summary>DNS prefix to be used to create the FQDN for master.</summary>
        string MasterProfileDnsPrefix { get; set; }
        /// <summary>FQDN for the master.</summary>
        string MasterProfileFqdn { get; set; }
        /// <summary>Properties of the orchestrator.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceOrchestratorProfile OrchestratorProfile { get; set; }
        /// <summary>
        /// The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ContainerServiceOrchestratorTypes? OrchestratorProfileOrchestratorType { get; set; }
        /// <summary>
        /// the current deployment or provisioning state, which only appears in the response.
        /// </summary>
        string ProvisioningState { get; set; }
        /// <summary>Properties for cluster service principals.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServicePrincipalProfile ServicePrincipalProfile { get; set; }
        /// <summary>The ID for the service principal.</summary>
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The secret password associated with the service principal.</summary>
        string ServicePrincipalProfileSecret { get; set; }
        /// <summary>the list of SSH public keys used to authenticate with Linux-based VMs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceSshPublicKey[] SshPublicKey { get; set; }
        /// <summary>Whether the VM diagnostic agent is provisioned on the VM.</summary>
        bool? VMDiagnosticEnabled { get; set; }
        /// <summary>The URI of the storage account where diagnostics are stored.</summary>
        string VMDiagnosticStorageUri { get; set; }
        /// <summary>The administrator password to use for Windows VMs.</summary>
        string WindowProfileAdminPassword { get; set; }
        /// <summary>The administrator username to use for Windows VMs.</summary>
        string WindowProfileAdminUsername { get; set; }
        /// <summary>Properties of Windows VMs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api202211.IContainerServiceWindowsProfile WindowsProfile { get; set; }

    }
}