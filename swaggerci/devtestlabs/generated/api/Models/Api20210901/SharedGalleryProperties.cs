// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties of a shared gallery</summary>
    public partial class SharedGalleryProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISharedGalleryProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISharedGalleryPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllowAllImage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableState? _allowAllImage;

        /// <summary>
        /// Enables all images in the gallery to be available in the lab for VM creation. This will override the EnableState on shared
        /// images
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableState? AllowAllImage { get => this._allowAllImage; set => this._allowAllImage = value; }

        /// <summary>Backing field for <see cref="GalleryId" /> property.</summary>
        private string _galleryId;

        /// <summary>The shared image gallery resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string GalleryId { get => this._galleryId; set => this._galleryId = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISharedGalleryPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for UniqueIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISharedGalleryPropertiesInternal.UniqueIdentifier { get => this._uniqueIdentifier; set { {_uniqueIdentifier = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="UniqueIdentifier" /> property.</summary>
        private string _uniqueIdentifier;

        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string UniqueIdentifier { get => this._uniqueIdentifier; }

        /// <summary>Creates an new <see cref="SharedGalleryProperties" /> instance.</summary>
        public SharedGalleryProperties()
        {

        }
    }
    /// Properties of a shared gallery
    public partial interface ISharedGalleryProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Enables all images in the gallery to be available in the lab for VM creation. This will override the EnableState on shared
        /// images
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enables all images in the gallery to be available in the lab for VM creation. This will override the EnableState on shared images",
        SerializedName = @"allowAllImages",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableState? AllowAllImage { get; set; }
        /// <summary>The shared image gallery resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The shared image gallery resource Id",
        SerializedName = @"galleryId",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryId { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning status of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unique immutable identifier of a resource (Guid).",
        SerializedName = @"uniqueIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueIdentifier { get;  }

    }
    /// Properties of a shared gallery
    internal partial interface ISharedGalleryPropertiesInternal

    {
        /// <summary>
        /// Enables all images in the gallery to be available in the lab for VM creation. This will override the EnableState on shared
        /// images
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableState? AllowAllImage { get; set; }
        /// <summary>The shared image gallery resource Id</summary>
        string GalleryId { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        string UniqueIdentifier { get; set; }

    }
}