// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DigitalTwins.Support
{

    /// <summary>
    /// Specifies whether or not to record twin / relationship property and item removals, including removals of indexed or keyed
    /// values (such as map entries, array elements, etc.). This feature is de-activated unless explicitly set to 'true'. Setting
    /// this property to 'true' will generate an additional column in the property events table in ADX.
    /// </summary>
    public partial struct RecordPropertyAndItemRemovals :
        System.IEquatable<RecordPropertyAndItemRemovals>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.DigitalTwins.Support.RecordPropertyAndItemRemovals False = @"false";

        public static Microsoft.Azure.PowerShell.Cmdlets.DigitalTwins.Support.RecordPropertyAndItemRemovals True = @"true";

        /// <summary>
        /// the value for an instance of the <see cref="RecordPropertyAndItemRemovals" /> Enum.
        /// </summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to RecordPropertyAndItemRemovals</summary>
        /// <param name="value">the value to convert to an instance of <see cref="RecordPropertyAndItemRemovals" />.</param>
        internal static object CreateFrom(object value)
        {
            return new RecordPropertyAndItemRemovals(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type RecordPropertyAndItemRemovals</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.DigitalTwins.Support.RecordPropertyAndItemRemovals e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>
        /// Compares values of enum type RecordPropertyAndItemRemovals (override for Object)
        /// </summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is RecordPropertyAndItemRemovals && Equals((RecordPropertyAndItemRemovals)obj);
        }

        /// <summary>Returns hashCode for enum RecordPropertyAndItemRemovals</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>
        /// Creates an instance of the <see cref="RecordPropertyAndItemRemovals"/> Enum class.
        /// </summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private RecordPropertyAndItemRemovals(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for RecordPropertyAndItemRemovals</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to RecordPropertyAndItemRemovals</summary>
        /// <param name="value">the value to convert to an instance of <see cref="RecordPropertyAndItemRemovals" />.</param>

        public static implicit operator RecordPropertyAndItemRemovals(string value)
        {
            return new RecordPropertyAndItemRemovals(value);
        }

        /// <summary>Implicit operator to convert RecordPropertyAndItemRemovals to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="RecordPropertyAndItemRemovals" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.DigitalTwins.Support.RecordPropertyAndItemRemovals e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum RecordPropertyAndItemRemovals</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.DigitalTwins.Support.RecordPropertyAndItemRemovals e1, Microsoft.Azure.PowerShell.Cmdlets.DigitalTwins.Support.RecordPropertyAndItemRemovals e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum RecordPropertyAndItemRemovals</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.DigitalTwins.Support.RecordPropertyAndItemRemovals e1, Microsoft.Azure.PowerShell.Cmdlets.DigitalTwins.Support.RecordPropertyAndItemRemovals e2)
        {
            return e2.Equals(e1);
        }
    }
}