// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Extensions;

    /// <summary>The properties parameters for a PATCH request to a grafana resource.</summary>
    public partial class ManagedGrafanaPropertiesUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IManagedGrafanaPropertiesUpdateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IManagedGrafanaPropertiesUpdateParametersInternal
    {

        /// <summary>Backing field for <see cref="ApiKey" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ApiKey? _apiKey;

        /// <summary>The api key setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ApiKey? ApiKey { get => this._apiKey; set => this._apiKey = value; }

        /// <summary>Backing field for <see cref="DeterministicOutboundIP" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.DeterministicOutboundIP? _deterministicOutboundIP;

        /// <summary>Whether a Grafana instance uses deterministic outbound IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.DeterministicOutboundIP? DeterministicOutboundIP { get => this._deterministicOutboundIP; set => this._deterministicOutboundIP = value; }

        /// <summary>Backing field for <see cref="EnterpriseConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IEnterpriseConfigurations _enterpriseConfiguration;

        /// <summary>Enterprise settings of a Grafana instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IEnterpriseConfigurations EnterpriseConfiguration { get => (this._enterpriseConfiguration = this._enterpriseConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.EnterpriseConfigurations()); set => this._enterpriseConfiguration = value; }

        /// <summary>The AutoRenew setting of the Enterprise subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.MarketplaceAutoRenew? EnterpriseConfigurationMarketplaceAutoRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IEnterpriseConfigurationsInternal)EnterpriseConfiguration).MarketplaceAutoRenew; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IEnterpriseConfigurationsInternal)EnterpriseConfiguration).MarketplaceAutoRenew = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.MarketplaceAutoRenew)""); }

        /// <summary>The Plan Id of the Azure Marketplace subscription for the Enterprise plugins</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string EnterpriseConfigurationMarketplacePlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IEnterpriseConfigurationsInternal)EnterpriseConfiguration).MarketplacePlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IEnterpriseConfigurationsInternal)EnterpriseConfiguration).MarketplacePlanId = value ?? null; }

        /// <summary>Backing field for <see cref="GrafanaConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurations _grafanaConfiguration;

        /// <summary>Server configurations of a Grafana instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurations GrafanaConfiguration { get => (this._grafanaConfiguration = this._grafanaConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.GrafanaConfigurations()); set => this._grafanaConfiguration = value; }

        /// <summary>Backing field for <see cref="GrafanaIntegration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaIntegrations _grafanaIntegration;

        /// <summary>
        /// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards,
        /// alerting defaults) for common monitoring scenarios.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaIntegrations GrafanaIntegration { get => (this._grafanaIntegration = this._grafanaIntegration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.GrafanaIntegrations()); set => this._grafanaIntegration = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IAzureMonitorWorkspaceIntegration[] GrafanaIntegrationAzureMonitorWorkspaceIntegration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaIntegrationsInternal)GrafanaIntegration).AzureMonitorWorkspaceIntegration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaIntegrationsInternal)GrafanaIntegration).AzureMonitorWorkspaceIntegration = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for EnterpriseConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IEnterpriseConfigurations Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IManagedGrafanaPropertiesUpdateParametersInternal.EnterpriseConfiguration { get => (this._enterpriseConfiguration = this._enterpriseConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.EnterpriseConfigurations()); set { {_enterpriseConfiguration = value;} } }

        /// <summary>Internal Acessors for GrafanaConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurations Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IManagedGrafanaPropertiesUpdateParametersInternal.GrafanaConfiguration { get => (this._grafanaConfiguration = this._grafanaConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.GrafanaConfigurations()); set { {_grafanaConfiguration = value;} } }

        /// <summary>Internal Acessors for GrafanaConfigurationSmtp</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.ISmtp Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IManagedGrafanaPropertiesUpdateParametersInternal.GrafanaConfigurationSmtp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).Smtp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).Smtp = value; }

        /// <summary>Internal Acessors for GrafanaIntegration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaIntegrations Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IManagedGrafanaPropertiesUpdateParametersInternal.GrafanaIntegration { get => (this._grafanaIntegration = this._grafanaIntegration ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.GrafanaIntegrations()); set { {_grafanaIntegration = value;} } }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.PublicNetworkAccess? _publicNetworkAccess;

        /// <summary>Indicate the state for enable or disable traffic over the public interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.PublicNetworkAccess? PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Enable this to allow Grafana to send email. Default is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? SmtpEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpEnabled = value ?? default(bool); }

        /// <summary>
        /// Address used when sending out emails
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpFromAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpFromAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpFromAddress = value ?? null; }

        /// <summary>
        /// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpFromName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpFromName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpFromName = value ?? null; }

        /// <summary>SMTP server hostname with port, e.g. test.email.net:587</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpHost = value ?? null; }

        /// <summary>
        /// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes. Example: """#password;"""
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpPassword = value ?? null; }

        /// <summary>
        /// Verify SSL for SMTP server. Default is false
        /// https://pkg.go.dev/crypto/tls#Config
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? SmtpSkipVerify { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpSkipVerify; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpSkipVerify = value ?? default(bool); }

        /// <summary>
        /// The StartTLSPolicy setting of the SMTP configuration
        /// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.StartTlsPolicy? SmtpStartTlsPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpStartTlsPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpStartTlsPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.StartTlsPolicy)""); }

        /// <summary>User of SMTP auth</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurationsInternal)GrafanaConfiguration).SmtpUser = value ?? null; }

        /// <summary>Backing field for <see cref="ZoneRedundancy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ZoneRedundancy? _zoneRedundancy;

        /// <summary>The zone redundancy setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ZoneRedundancy? ZoneRedundancy { get => this._zoneRedundancy; set => this._zoneRedundancy = value; }

        /// <summary>
        /// Creates an new <see cref="ManagedGrafanaPropertiesUpdateParameters" /> instance.
        /// </summary>
        public ManagedGrafanaPropertiesUpdateParameters()
        {

        }
    }
    /// The properties parameters for a PATCH request to a grafana resource.
    public partial interface IManagedGrafanaPropertiesUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.IJsonSerializable
    {
        /// <summary>The api key setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The api key setting of the Grafana instance.",
        SerializedName = @"apiKey",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ApiKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ApiKey? ApiKey { get; set; }
        /// <summary>Whether a Grafana instance uses deterministic outbound IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether a Grafana instance uses deterministic outbound IPs.",
        SerializedName = @"deterministicOutboundIP",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.DeterministicOutboundIP) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.DeterministicOutboundIP? DeterministicOutboundIP { get; set; }
        /// <summary>The AutoRenew setting of the Enterprise subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AutoRenew setting of the Enterprise subscription",
        SerializedName = @"marketplaceAutoRenew",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.MarketplaceAutoRenew) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.MarketplaceAutoRenew? EnterpriseConfigurationMarketplaceAutoRenew { get; set; }
        /// <summary>The Plan Id of the Azure Marketplace subscription for the Enterprise plugins</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Plan Id of the Azure Marketplace subscription for the Enterprise plugins",
        SerializedName = @"marketplacePlanId",
        PossibleTypes = new [] { typeof(string) })]
        string EnterpriseConfigurationMarketplacePlanId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"azureMonitorWorkspaceIntegrations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IAzureMonitorWorkspaceIntegration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IAzureMonitorWorkspaceIntegration[] GrafanaIntegrationAzureMonitorWorkspaceIntegration { get; set; }
        /// <summary>Indicate the state for enable or disable traffic over the public interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicate the state for enable or disable traffic over the public interface.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>Enable this to allow Grafana to send email. Default is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable this to allow Grafana to send email. Default is false",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SmtpEnabled { get; set; }
        /// <summary>
        /// Address used when sending out emails
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address used when sending out emails
        https://pkg.go.dev/net/mail#Address",
        SerializedName = @"fromAddress",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpFromAddress { get; set; }
        /// <summary>
        /// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name to be used when sending out emails. Default is ""Azure Managed Grafana Notification""
        https://pkg.go.dev/net/mail#Address",
        SerializedName = @"fromName",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpFromName { get; set; }
        /// <summary>SMTP server hostname with port, e.g. test.email.net:587</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SMTP server hostname with port, e.g. test.email.net:587",
        SerializedName = @"host",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpHost { get; set; }
        /// <summary>
        /// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes. Example: """#password;"""
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes. Example: """"""#password;""""""",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpPassword { get; set; }
        /// <summary>
        /// Verify SSL for SMTP server. Default is false
        /// https://pkg.go.dev/crypto/tls#Config
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Verify SSL for SMTP server. Default is false
        https://pkg.go.dev/crypto/tls#Config",
        SerializedName = @"skipVerify",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SmtpSkipVerify { get; set; }
        /// <summary>
        /// The StartTLSPolicy setting of the SMTP configuration
        /// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The StartTLSPolicy setting of the SMTP configuration
        https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy",
        SerializedName = @"startTLSPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.StartTlsPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.StartTlsPolicy? SmtpStartTlsPolicy { get; set; }
        /// <summary>User of SMTP auth</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User of SMTP auth",
        SerializedName = @"user",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpUser { get; set; }
        /// <summary>The zone redundancy setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The zone redundancy setting of the Grafana instance.",
        SerializedName = @"zoneRedundancy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ZoneRedundancy) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ZoneRedundancy? ZoneRedundancy { get; set; }

    }
    /// The properties parameters for a PATCH request to a grafana resource.
    internal partial interface IManagedGrafanaPropertiesUpdateParametersInternal

    {
        /// <summary>The api key setting of the Grafana instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ApiKey? ApiKey { get; set; }
        /// <summary>Whether a Grafana instance uses deterministic outbound IPs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.DeterministicOutboundIP? DeterministicOutboundIP { get; set; }
        /// <summary>Enterprise settings of a Grafana instance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IEnterpriseConfigurations EnterpriseConfiguration { get; set; }
        /// <summary>The AutoRenew setting of the Enterprise subscription</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.MarketplaceAutoRenew? EnterpriseConfigurationMarketplaceAutoRenew { get; set; }
        /// <summary>The Plan Id of the Azure Marketplace subscription for the Enterprise plugins</summary>
        string EnterpriseConfigurationMarketplacePlanId { get; set; }
        /// <summary>Server configurations of a Grafana instance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaConfigurations GrafanaConfiguration { get; set; }
        /// <summary>
        /// Email server settings.
        /// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.ISmtp GrafanaConfigurationSmtp { get; set; }
        /// <summary>
        /// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards,
        /// alerting defaults) for common monitoring scenarios.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IGrafanaIntegrations GrafanaIntegration { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20221001Preview.IAzureMonitorWorkspaceIntegration[] GrafanaIntegrationAzureMonitorWorkspaceIntegration { get; set; }
        /// <summary>Indicate the state for enable or disable traffic over the public interface.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>Enable this to allow Grafana to send email. Default is false</summary>
        bool? SmtpEnabled { get; set; }
        /// <summary>
        /// Address used when sending out emails
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        string SmtpFromAddress { get; set; }
        /// <summary>
        /// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        string SmtpFromName { get; set; }
        /// <summary>SMTP server hostname with port, e.g. test.email.net:587</summary>
        string SmtpHost { get; set; }
        /// <summary>
        /// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes. Example: """#password;"""
        /// </summary>
        string SmtpPassword { get; set; }
        /// <summary>
        /// Verify SSL for SMTP server. Default is false
        /// https://pkg.go.dev/crypto/tls#Config
        /// </summary>
        bool? SmtpSkipVerify { get; set; }
        /// <summary>
        /// The StartTLSPolicy setting of the SMTP configuration
        /// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.StartTlsPolicy? SmtpStartTlsPolicy { get; set; }
        /// <summary>User of SMTP auth</summary>
        string SmtpUser { get; set; }
        /// <summary>The zone redundancy setting of the Grafana instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ZoneRedundancy? ZoneRedundancy { get; set; }

    }
}