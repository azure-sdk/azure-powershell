// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Support
{

    /// <summary>The value representing the security enum.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Support.DnsNameLabelReusePolicyTypeConverter))]
    public partial struct DnsNameLabelReusePolicy :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Default value if not selected and means the object's domain name label is not secured against subdomain takeover.".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Default value if not selected and means the object's domain name label is not secured against subdomain takeover.'", "Default value if not selected and means the object's domain name label is not secured against subdomain takeover.", global::System.Management.Automation.CompletionResultType.ParameterValue, "Default value if not selected and means the object's domain name label is not secured against subdomain takeover.");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Default value if selected and means the object's domain name label can be reused within the same tenant.".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Default value if selected and means the object's domain name label can be reused within the same tenant.'", "Default value if selected and means the object's domain name label can be reused within the same tenant.", global::System.Management.Automation.CompletionResultType.ParameterValue, "Default value if selected and means the object's domain name label can be reused within the same tenant.");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Object's domain name label can be reused within the same subscription.".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Object's domain name label can be reused within the same subscription.'", "Object's domain name label can be reused within the same subscription.", global::System.Management.Automation.CompletionResultType.ParameterValue, "Object's domain name label can be reused within the same subscription.");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Object's domain name label can be reused within the same resource group.".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Object's domain name label can be reused within the same resource group.'", "Object's domain name label can be reused within the same resource group.", global::System.Management.Automation.CompletionResultType.ParameterValue, "Object's domain name label can be reused within the same resource group.");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Object's domain name label cannot be reused within the same resource group, subscription, or tenant.".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Object's domain name label cannot be reused within the same resource group, subscription, or tenant.'", "Object's domain name label cannot be reused within the same resource group, subscription, or tenant.", global::System.Management.Automation.CompletionResultType.ParameterValue, "Object's domain name label cannot be reused within the same resource group, subscription, or tenant.");
            }
        }
    }
}