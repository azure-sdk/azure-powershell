// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Runtime.Extensions;

    /// <summary>Terms properties for provided Publisher/Offer/Plan tuple</summary>
    public partial class OldAgreementTerms :
        Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementTerms,
        Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementTermsInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.Resource();

        /// <summary>
        /// Date and time in UTC of when the terms were cancelled. This is empty if state is active.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Origin(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.PropertyOrigin.Inlined)]
        public global::System.DateTime? CancelDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).CancelDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).CancelDate = value ?? default(global::System.DateTime); }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Origin(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementProperties Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementTermsInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.OldAgreementProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal)__resource).Type = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Origin(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal)__resource).Name; }

        /// <summary>Offer identifier string of image being deployed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Origin(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.PropertyOrigin.Inlined)]
        public string Offer { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).Offer; set => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).Offer = value ?? null; }

        /// <summary>A unique identifier of the agreement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Origin(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.PropertyOrigin.Inlined)]
        public string PropertiesId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).Id = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementProperties _property;

        /// <summary>Represents the properties of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Origin(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.OldAgreementProperties()); set => this._property = value; }

        /// <summary>Publisher identifier string of image being deployed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Origin(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.PropertyOrigin.Inlined)]
        public string Publisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).Publisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).Publisher = value ?? null; }

        /// <summary>
        /// Date and time in UTC of when the terms were accepted. This is empty if state is cancelled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Origin(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.PropertyOrigin.Inlined)]
        public global::System.DateTime? SignDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).SignDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).SignDate = value ?? default(global::System.DateTime); }

        /// <summary>Whether the agreement is active or cancelled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Origin(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Support.State? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementPropertiesInternal)Property).State = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Support.State)""); }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Origin(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="OldAgreementTerms" /> instance.</summary>
        public OldAgreementTerms()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Terms properties for provided Publisher/Offer/Plan tuple
    public partial interface IOldAgreementTerms :
        Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResource
    {
        /// <summary>
        /// Date and time in UTC of when the terms were cancelled. This is empty if state is active.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date and time in UTC of when the terms were cancelled. This is empty if state is active.",
        SerializedName = @"cancelDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CancelDate { get; set; }
        /// <summary>Offer identifier string of image being deployed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offer identifier string of image being deployed.",
        SerializedName = @"offer",
        PossibleTypes = new [] { typeof(string) })]
        string Offer { get; set; }
        /// <summary>A unique identifier of the agreement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A unique identifier of the agreement.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesId { get; set; }
        /// <summary>Publisher identifier string of image being deployed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Publisher identifier string of image being deployed.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string Publisher { get; set; }
        /// <summary>
        /// Date and time in UTC of when the terms were accepted. This is empty if state is cancelled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date and time in UTC of when the terms were accepted. This is empty if state is cancelled.",
        SerializedName = @"signDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SignDate { get; set; }
        /// <summary>Whether the agreement is active or cancelled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the agreement is active or cancelled",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Support.State) })]
        Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Support.State? State { get; set; }

    }
    /// Terms properties for provided Publisher/Offer/Plan tuple
    internal partial interface IOldAgreementTermsInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IResourceInternal
    {
        /// <summary>
        /// Date and time in UTC of when the terms were cancelled. This is empty if state is active.
        /// </summary>
        global::System.DateTime? CancelDate { get; set; }
        /// <summary>Offer identifier string of image being deployed.</summary>
        string Offer { get; set; }
        /// <summary>A unique identifier of the agreement.</summary>
        string PropertiesId { get; set; }
        /// <summary>Represents the properties of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Models.Api202101.IOldAgreementProperties Property { get; set; }
        /// <summary>Publisher identifier string of image being deployed.</summary>
        string Publisher { get; set; }
        /// <summary>
        /// Date and time in UTC of when the terms were accepted. This is empty if state is cancelled.
        /// </summary>
        global::System.DateTime? SignDate { get; set; }
        /// <summary>Whether the agreement is active or cancelled</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MarketplaceOrderingAgreements.Support.State? State { get; set; }

    }
}