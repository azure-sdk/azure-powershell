// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Extensions;

    /// <summary>The PatchCluster request parameters</summary>
    public partial class ClusterPatchParameters :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterPatchParameters,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterPatchParametersInternal
    {

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentity _identity;

        /// <summary>
        /// The identity of the cluster, if configured. Setting this property will override the existing identity configuration of
        /// the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.ClusterIdentity()); set => this._identity = value; }

        /// <summary>
        /// The principal id of cluster identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The tenant id associated with the cluster. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created
        /// identity and a set of user assigned identities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType)""); }

        /// <summary>
        /// The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource
        /// ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentity Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterPatchParametersInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.ClusterIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterPatchParametersInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterPatchParametersInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityInternal)Identity).TenantId = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterPatchParametersTags _tag;

        /// <summary>The resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterPatchParametersTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.ClusterPatchParametersTags()); set => this._tag = value; }

        /// <summary>Creates an new <see cref="ClusterPatchParameters" /> instance.</summary>
        public ClusterPatchParameters()
        {

        }
    }
    /// The PatchCluster request parameters
    public partial interface IClusterPatchParameters :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The principal id of cluster identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal id of cluster identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant id associated with the cluster. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant id associated with the cluster. This property will only be provided for a system assigned identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created
        /// identity and a set of user assigned identities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource
        /// ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterPatchParametersTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterPatchParametersTags Tag { get; set; }

    }
    /// The PatchCluster request parameters
    internal partial interface IClusterPatchParametersInternal

    {
        /// <summary>
        /// The identity of the cluster, if configured. Setting this property will override the existing identity configuration of
        /// the cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentity Identity { get; set; }
        /// <summary>
        /// The principal id of cluster identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant id associated with the cluster. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created
        /// identity and a set of user assigned identities.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource
        /// ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The resource tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20240801Preview.IClusterPatchParametersTags Tag { get; set; }

    }
}