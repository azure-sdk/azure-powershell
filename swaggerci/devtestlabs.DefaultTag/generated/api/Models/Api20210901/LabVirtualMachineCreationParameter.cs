// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties for creating a virtual machine.</summary>
    public partial class LabVirtualMachineCreationParameter :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameter,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal
    {

        /// <summary>Indicates whether another user can take ownership of the virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? AllowClaim { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).AllowClaim; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).AllowClaim = value ?? default(bool); }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ApplicableScheduleId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleId; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ApplicableScheduleLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleLocation = value ?? null; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ApplicableScheduleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleName; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public global::System.DateTime? ApplicableScheduleSystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ApplicableScheduleSystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CreatedByType? ApplicableScheduleSystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public global::System.DateTime? ApplicableScheduleSystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ApplicableScheduleSystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CreatedByType? ApplicableScheduleSystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IResourceTags ApplicableScheduleTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleTag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ApplicableScheduleType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleType; }

        /// <summary>The artifacts to be installed on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IArtifactInstallProperties[] Artifact { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Artifact; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Artifact = value ?? null /* arrayOf */; }

        /// <summary>The total count of the artifacts that were successfully applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public int? ArtifactDeploymentStatusArtifactsApplied { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ArtifactDeploymentStatusArtifactsApplied; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ArtifactDeploymentStatusArtifactsApplied = value ?? default(int); }

        /// <summary>The total count of the artifacts that were tentatively applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public int? ArtifactDeploymentStatusTotalArtifact { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ArtifactDeploymentStatusTotalArtifact; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ArtifactDeploymentStatusTotalArtifact = value ?? default(int); }

        /// <summary>The number of virtual machine instances to create.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public int? BulkCreationParameterInstanceCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).BulkCreationParameterInstanceCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).BulkCreationParameterInstanceCount = value ?? default(int); }

        /// <summary>
        /// Flag to determine if apply artifacts can be triggered at the time of fetching the document.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? CanApplyArtifact { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CanApplyArtifact; }

        /// <summary>The resource identifier (Microsoft.Compute) of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ComputeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeId; }

        /// <summary>Gets all data disks attached to the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IComputeDataDisk[] ComputeVMDataDisk { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVMDataDisk; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVMDataDisk = value ?? null /* arrayOf */; }

        /// <summary>Gets data disks blob uri for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string[] ComputeVMDataDiskId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVMDataDiskId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVMDataDiskId = value ?? null /* arrayOf */; }

        /// <summary>Gets the network interface ID of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ComputeVMNetworkInterfaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVMNetworkInterfaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVMNetworkInterfaceId = value ?? null; }

        /// <summary>Gets the size of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ComputeVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVMSize = value ?? null; }

        /// <summary>Gets the statuses of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IComputeVMInstanceViewStatus[] ComputeVMStatuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVMStatuses; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVMStatuses = value ?? null /* arrayOf */; }

        /// <summary>Gets OS disk blob uri for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ComputeVmosDiskId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVmosDiskId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVmosDiskId = value ?? null; }

        /// <summary>Gets the OS type of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ComputeVmosType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVmosType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVmosType = value ?? null; }

        /// <summary>The email address of creator of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string CreatedByUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CreatedByUser; }

        /// <summary>The object identifier of the creator of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string CreatedByUserId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CreatedByUserId; }

        /// <summary>The creation date of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CreatedDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CreatedDate = value ?? default(global::System.DateTime); }

        /// <summary>The custom image identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string CustomImageId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CustomImageId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CustomImageId = value ?? null; }

        /// <summary>New or existing data disks to attach to the virtual machine after creation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IDataDiskProperties[] DataDiskParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).DataDiskParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).DataDiskParameter = value ?? null /* arrayOf */; }

        /// <summary>
        /// Indicates whether the virtual machine is to be created without a public IP address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? DisallowPublicIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).DisallowPublicIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).DisallowPublicIPAddress = value ?? default(bool); }

        /// <summary>The resource ID of the environment that contains this virtual machine, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string EnvironmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).EnvironmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).EnvironmentId = value ?? null; }

        /// <summary>The expiration date for VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExpirationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ExpirationDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ExpirationDate = value ?? default(global::System.DateTime); }

        /// <summary>The fully-qualified domain name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string Fqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Fqdn; }

        /// <summary>The OS type of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceOSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceOSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceOSType = value ?? null; }

        /// <summary>The offer of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceOffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceOffer; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceOffer = value ?? null; }

        /// <summary>The publisher of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferencePublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferencePublisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferencePublisher = value ?? null; }

        /// <summary>The SKU of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceSku = value ?? null; }

        /// <summary>The version of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceVersion = value ?? null; }

        /// <summary>The shared gallery image version resource identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageVersionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageVersionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageVersionId = value ?? null; }

        /// <summary>Indicates whether this virtual machine uses an SSH key for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? IsAuthenticationWithSshKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).IsAuthenticationWithSshKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).IsAuthenticationWithSshKey = value ?? default(bool); }

        /// <summary>The lab subnet name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string LabSubnetName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabSubnetName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabSubnetName = value ?? null; }

        /// <summary>The lab virtual network identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string LabVirtualNetworkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabVirtualNetworkId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabVirtualNetworkId = value ?? null; }

        /// <summary>
        /// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISchedule LabVmsShutdown { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabVmsShutdown; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabVmsShutdown = value ?? null /* model class */; }

        /// <summary>
        /// The auto-startup schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISchedule LabVmsStartup { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabVmsStartup; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabVmsStartup = value ?? null /* model class */; }

        /// <summary>Last known compute power state captured in DTL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string LastKnownPowerState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LastKnownPowerState; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The location of the new virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for ApplicableSchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IApplicableSchedule Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.ApplicableSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableSchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableSchedule = value; }

        /// <summary>Internal Acessors for ApplicableScheduleId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.ApplicableScheduleId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleId = value; }

        /// <summary>Internal Acessors for ApplicableScheduleName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.ApplicableScheduleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleName = value; }

        /// <summary>Internal Acessors for ApplicableScheduleProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IApplicableScheduleProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.ApplicableScheduleProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleProperty = value; }

        /// <summary>Internal Acessors for ApplicableScheduleSystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISystemData Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.ApplicableScheduleSystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleSystemData = value; }

        /// <summary>Internal Acessors for ApplicableScheduleType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.ApplicableScheduleType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ApplicableScheduleType = value; }

        /// <summary>Internal Acessors for BulkCreationParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IBulkCreationParameters Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.BulkCreationParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).BulkCreationParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).BulkCreationParameter = value; }

        /// <summary>Internal Acessors for CanApplyArtifact</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.CanApplyArtifact { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CanApplyArtifact; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CanApplyArtifact = value; }

        /// <summary>Internal Acessors for ComputeId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.ComputeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeId = value; }

        /// <summary>Internal Acessors for ComputeVM</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IComputeVMProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.ComputeVM { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVM; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ComputeVM = value; }

        /// <summary>Internal Acessors for CreatedByUser</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.CreatedByUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CreatedByUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CreatedByUser = value; }

        /// <summary>Internal Acessors for CreatedByUserId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.CreatedByUserId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CreatedByUserId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CreatedByUserId = value; }

        /// <summary>Internal Acessors for Fqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.Fqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Fqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Fqdn = value; }

        /// <summary>Internal Acessors for GalleryImageReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IGalleryImageReference Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.GalleryImageReference { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReference; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReference = value; }

        /// <summary>Internal Acessors for LastKnownPowerState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.LastKnownPowerState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LastKnownPowerState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LastKnownPowerState = value; }

        /// <summary>Internal Acessors for NetworkInterface</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.INetworkInterfaceProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.NetworkInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterface; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterface = value; }

        /// <summary>Internal Acessors for NetworkInterfaceSharedPublicIPAddressConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISharedPublicIPAddressConfiguration Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.NetworkInterfaceSharedPublicIPAddressConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSharedPublicIPAddressConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSharedPublicIPAddressConfiguration = value; }

        /// <summary>Internal Acessors for OSType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.OSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OSType = value; }

        /// <summary>Internal Acessors for PropertiesArtifactDeploymentStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IArtifactDeploymentStatusProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.PropertiesArtifactDeploymentStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ArtifactDeploymentStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ArtifactDeploymentStatus = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.LabVirtualMachineCreationParameterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for SecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISecurityProfile Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.SecurityProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SecurityProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SecurityProfile = value; }

        /// <summary>Internal Acessors for SecurityProfileUefiSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IUefiSettings Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.SecurityProfileUefiSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SecurityProfileUefiSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SecurityProfileUefiSetting = value; }

        /// <summary>Internal Acessors for UniqueIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.UniqueIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).UniqueIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).UniqueIdentifier = value; }

        /// <summary>Internal Acessors for VirtualMachineCreationSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterInternal.VirtualMachineCreationSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).VirtualMachineCreationSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).VirtualMachineCreationSource = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>The DNS name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceDnsName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceDnsName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceDnsName = value ?? null; }

        /// <summary>The private IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfacePrivateIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePrivateIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePrivateIPAddress = value ?? null; }

        /// <summary>The public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfacePublicIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePublicIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePublicIPAddress = value ?? null; }

        /// <summary>The resource ID of the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfacePublicIPAddressId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePublicIPAddressId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePublicIPAddressId = value ?? null; }

        /// <summary>
        /// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote
        /// Desktop Protocol).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceRdpAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceRdpAuthority; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceRdpAuthority = value ?? null; }

        /// <summary>
        /// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceSshAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSshAuthority; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSshAuthority = value ?? null; }

        /// <summary>The resource ID of the sub net.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSubnetId = value ?? null; }

        /// <summary>The resource ID of the virtual network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceVirtualNetworkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceVirtualNetworkId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceVirtualNetworkId = value ?? null; }

        /// <summary>The notes of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string Note { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Note; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Note = value ?? null; }

        /// <summary>
        /// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a
        /// virtual machine image.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public int? OSDiskSizeGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OSDiskSizeGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OSDiskSizeGb = value ?? default(int); }

        /// <summary>The OS type of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string OSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OSType; }

        /// <summary>The object identifier of the owner of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string OwnerObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OwnerObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OwnerObjectId = value ?? null; }

        /// <summary>The user principal name of the virtual machine owner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string OwnerUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OwnerUserPrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OwnerUserPrincipalName = value ?? null; }

        /// <summary>The password of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string Password { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Password = value ?? null; }

        /// <summary>The id of the plan associated with the virtual machine image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string PlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).PlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).PlanId = value ?? null; }

        /// <summary>The deployment status of the artifact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string PropertiesArtifactDeploymentStatusDeploymentStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ArtifactDeploymentStatusDeploymentStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ArtifactDeploymentStatusDeploymentStatus = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterProperties _property;

        /// <summary>The properties of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.LabVirtualMachineCreationParameterProperties()); set => this._property = value; }

        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Virtual Machine schedules to be created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IScheduleCreationParameter[] ScheduleParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ScheduleParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ScheduleParameter = value ?? null /* arrayOf */; }

        /// <summary>
        /// Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br>
        /// Default: UefiSettings will not be enabled unless this property is set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.SecurityTypes? SecurityProfileSecurityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SecurityProfileSecurityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SecurityProfileSecurityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.SecurityTypes)""); }

        /// <summary>The shared image resource identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string SharedImageId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SharedImageId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SharedImageId = value ?? null; }

        /// <summary>
        /// The shared image version for the specified shared image Id. Will use latest if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string SharedImageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SharedImageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SharedImageVersion = value ?? null; }

        /// <summary>The incoming NAT rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IInboundNatRule[] SharedPublicIPAddressConfigurationInboundNatRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SharedPublicIPAddressConfigurationInboundNatRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SharedPublicIPAddressConfigurationInboundNatRule = value ?? null /* arrayOf */; }

        /// <summary>The size of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string Size { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Size; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Size = value ?? null; }

        /// <summary>The SSH key of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string SshKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SshKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SshKey = value ?? null; }

        /// <summary>Storage type to use for virtual machine (i.e. Standard, Premium, StandardSSD).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? StorageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).StorageType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).StorageType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterTags _tag;

        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.LabVirtualMachineCreationParameterTags()); set => this._tag = value; }

        /// <summary>Flag to enable or disable secure boot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? UefiSettingSecureBootEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).UefiSettingSecureBootEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).UefiSettingSecureBootEnabled = value ?? default(bool); }

        /// <summary>Flag to enable or disable vTPM (virtual Trusted Platform Module).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? UefiSettingVTpmEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).UefiSettingVTpmEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).UefiSettingVTpmEnabled = value ?? default(bool); }

        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string UniqueIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).UniqueIdentifier; }

        /// <summary>The user name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string UserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).UserName = value ?? null; }

        /// <summary>Tells source of creation of lab virtual machine. Output property only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource? VirtualMachineCreationSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterPropertiesInternal)Property).VirtualMachineCreationSource; }

        /// <summary>Creates an new <see cref="LabVirtualMachineCreationParameter" /> instance.</summary>
        public LabVirtualMachineCreationParameter()
        {

        }
    }
    /// Properties for creating a virtual machine.
    public partial interface ILabVirtualMachineCreationParameter :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>Indicates whether another user can take ownership of the virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether another user can take ownership of the virtual machine",
        SerializedName = @"allowClaim",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowClaim { get; set; }
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Fully qualified resource ID for the resource. E.g. ""/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}""",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableScheduleId { get;  }
        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The geo-location where the resource lives",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableScheduleLocation { get; set; }
        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the resource",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableScheduleName { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ApplicableScheduleSystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableScheduleSystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CreatedByType? ApplicableScheduleSystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ApplicableScheduleSystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableScheduleSystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CreatedByType? ApplicableScheduleSystemDataLastModifiedByType { get; set; }
        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IResourceTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IResourceTags ApplicableScheduleTag { get; set; }
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the resource. E.g. ""Microsoft.Compute/virtualMachines"" or ""Microsoft.Storage/storageAccounts""",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableScheduleType { get;  }
        /// <summary>The artifacts to be installed on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The artifacts to be installed on the virtual machine.",
        SerializedName = @"artifacts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IArtifactInstallProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IArtifactInstallProperties[] Artifact { get; set; }
        /// <summary>The total count of the artifacts that were successfully applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total count of the artifacts that were successfully applied.",
        SerializedName = @"artifactsApplied",
        PossibleTypes = new [] { typeof(int) })]
        int? ArtifactDeploymentStatusArtifactsApplied { get; set; }
        /// <summary>The total count of the artifacts that were tentatively applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total count of the artifacts that were tentatively applied.",
        SerializedName = @"totalArtifacts",
        PossibleTypes = new [] { typeof(int) })]
        int? ArtifactDeploymentStatusTotalArtifact { get; set; }
        /// <summary>The number of virtual machine instances to create.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of virtual machine instances to create.",
        SerializedName = @"instanceCount",
        PossibleTypes = new [] { typeof(int) })]
        int? BulkCreationParameterInstanceCount { get; set; }
        /// <summary>
        /// Flag to determine if apply artifacts can be triggered at the time of fetching the document.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Flag to determine if apply artifacts can be triggered at the time of fetching the document.",
        SerializedName = @"canApplyArtifacts",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CanApplyArtifact { get;  }
        /// <summary>The resource identifier (Microsoft.Compute) of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource identifier (Microsoft.Compute) of the virtual machine.",
        SerializedName = @"computeId",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeId { get;  }
        /// <summary>Gets all data disks attached to the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets all data disks attached to the virtual machine.",
        SerializedName = @"dataDisks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IComputeDataDisk) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IComputeDataDisk[] ComputeVMDataDisk { get; set; }
        /// <summary>Gets data disks blob uri for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets data disks blob uri for the virtual machine.",
        SerializedName = @"dataDiskIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] ComputeVMDataDiskId { get; set; }
        /// <summary>Gets the network interface ID of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets the network interface ID of the virtual machine.",
        SerializedName = @"networkInterfaceId",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeVMNetworkInterfaceId { get; set; }
        /// <summary>Gets the size of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets the size of the virtual machine.",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeVMSize { get; set; }
        /// <summary>Gets the statuses of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets the statuses of the virtual machine.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IComputeVMInstanceViewStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IComputeVMInstanceViewStatus[] ComputeVMStatuses { get; set; }
        /// <summary>Gets OS disk blob uri for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets OS disk blob uri for the virtual machine.",
        SerializedName = @"osDiskId",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeVmosDiskId { get; set; }
        /// <summary>Gets the OS type of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets the OS type of the virtual machine.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeVmosType { get; set; }
        /// <summary>The email address of creator of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The email address of creator of the virtual machine.",
        SerializedName = @"createdByUser",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByUser { get;  }
        /// <summary>The object identifier of the creator of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The object identifier of the creator of the virtual machine.",
        SerializedName = @"createdByUserId",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByUserId { get;  }
        /// <summary>The creation date of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The creation date of the virtual machine.",
        SerializedName = @"createdDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedDate { get; set; }
        /// <summary>The custom image identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The custom image identifier of the virtual machine.",
        SerializedName = @"customImageId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomImageId { get; set; }
        /// <summary>New or existing data disks to attach to the virtual machine after creation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"New or existing data disks to attach to the virtual machine after creation",
        SerializedName = @"dataDiskParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IDataDiskProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IDataDiskProperties[] DataDiskParameter { get; set; }
        /// <summary>
        /// Indicates whether the virtual machine is to be created without a public IP address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the virtual machine is to be created without a public IP address.",
        SerializedName = @"disallowPublicIpAddress",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisallowPublicIPAddress { get; set; }
        /// <summary>The resource ID of the environment that contains this virtual machine, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the environment that contains this virtual machine, if any.",
        SerializedName = @"environmentId",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentId { get; set; }
        /// <summary>The expiration date for VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The expiration date for VM.",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationDate { get; set; }
        /// <summary>The fully-qualified domain name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully-qualified domain name of the virtual machine.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string Fqdn { get;  }
        /// <summary>The OS type of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OS type of the gallery image.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceOSType { get; set; }
        /// <summary>The offer of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The offer of the gallery image.",
        SerializedName = @"offer",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceOffer { get; set; }
        /// <summary>The publisher of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher of the gallery image.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferencePublisher { get; set; }
        /// <summary>The SKU of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU of the gallery image.",
        SerializedName = @"sku",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceSku { get; set; }
        /// <summary>The version of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the gallery image.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceVersion { get; set; }
        /// <summary>The shared gallery image version resource identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The shared gallery image version resource identifier of the virtual machine.",
        SerializedName = @"galleryImageVersionId",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageVersionId { get; set; }
        /// <summary>Indicates whether this virtual machine uses an SSH key for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether this virtual machine uses an SSH key for authentication.",
        SerializedName = @"isAuthenticationWithSshKey",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAuthenticationWithSshKey { get; set; }
        /// <summary>The lab subnet name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The lab subnet name of the virtual machine.",
        SerializedName = @"labSubnetName",
        PossibleTypes = new [] { typeof(string) })]
        string LabSubnetName { get; set; }
        /// <summary>The lab virtual network identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The lab virtual network identifier of the virtual machine.",
        SerializedName = @"labVirtualNetworkId",
        PossibleTypes = new [] { typeof(string) })]
        string LabVirtualNetworkId { get; set; }
        /// <summary>
        /// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The auto-shutdown schedule, if one has been set at the lab or lab resource level.",
        SerializedName = @"labVmsShutdown",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISchedule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISchedule LabVmsShutdown { get; set; }
        /// <summary>
        /// The auto-startup schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The auto-startup schedule, if one has been set at the lab or lab resource level.",
        SerializedName = @"labVmsStartup",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISchedule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISchedule LabVmsStartup { get; set; }
        /// <summary>Last known compute power state captured in DTL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last known compute power state captured in DTL",
        SerializedName = @"lastKnownPowerState",
        PossibleTypes = new [] { typeof(string) })]
        string LastKnownPowerState { get;  }
        /// <summary>The location of the new virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the new virtual machine or environment",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The name of the virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the virtual machine or environment",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The DNS name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The DNS name.",
        SerializedName = @"dnsName",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceDnsName { get; set; }
        /// <summary>The private IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private IP address.",
        SerializedName = @"privateIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfacePrivateIPAddress { get; set; }
        /// <summary>The public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The public IP address.",
        SerializedName = @"publicIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfacePublicIPAddress { get; set; }
        /// <summary>The resource ID of the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the public IP address.",
        SerializedName = @"publicIpAddressId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfacePublicIPAddressId { get; set; }
        /// <summary>
        /// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote
        /// Desktop Protocol).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).",
        SerializedName = @"rdpAuthority",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceRdpAuthority { get; set; }
        /// <summary>
        /// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.",
        SerializedName = @"sshAuthority",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceSshAuthority { get; set; }
        /// <summary>The resource ID of the sub net.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the sub net.",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceSubnetId { get; set; }
        /// <summary>The resource ID of the virtual network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the virtual network.",
        SerializedName = @"virtualNetworkId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceVirtualNetworkId { get; set; }
        /// <summary>The notes of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The notes of the virtual machine.",
        SerializedName = @"notes",
        PossibleTypes = new [] { typeof(string) })]
        string Note { get; set; }
        /// <summary>
        /// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a
        /// virtual machine image.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image.",
        SerializedName = @"osDiskSizeGb",
        PossibleTypes = new [] { typeof(int) })]
        int? OSDiskSizeGb { get; set; }
        /// <summary>The OS type of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OS type of the virtual machine.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        string OSType { get;  }
        /// <summary>The object identifier of the owner of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object identifier of the owner of the virtual machine.",
        SerializedName = @"ownerObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerObjectId { get; set; }
        /// <summary>The user principal name of the virtual machine owner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user principal name of the virtual machine owner.",
        SerializedName = @"ownerUserPrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerUserPrincipalName { get; set; }
        /// <summary>The password of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the virtual machine administrator.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string Password { get; set; }
        /// <summary>The id of the plan associated with the virtual machine image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of the plan associated with the virtual machine image",
        SerializedName = @"planId",
        PossibleTypes = new [] { typeof(string) })]
        string PlanId { get; set; }
        /// <summary>The deployment status of the artifact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The deployment status of the artifact.",
        SerializedName = @"deploymentStatus",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesArtifactDeploymentStatusDeploymentStatus { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning status of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Virtual Machine schedules to be created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine schedules to be created",
        SerializedName = @"scheduleParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IScheduleCreationParameter) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IScheduleCreationParameter[] ScheduleParameter { get; set; }
        /// <summary>
        /// Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br>
        /// Default: UefiSettings will not be enabled unless this property is set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br> Default: UefiSettings will not be enabled unless this property is set.",
        SerializedName = @"securityType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.SecurityTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.SecurityTypes? SecurityProfileSecurityType { get; set; }
        /// <summary>The shared image resource identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The shared image resource identifier of the virtual machine.",
        SerializedName = @"sharedImageId",
        PossibleTypes = new [] { typeof(string) })]
        string SharedImageId { get; set; }
        /// <summary>
        /// The shared image version for the specified shared image Id. Will use latest if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The shared image version for the specified shared image Id. Will use latest if not specified.",
        SerializedName = @"sharedImageVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SharedImageVersion { get; set; }
        /// <summary>The incoming NAT rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The incoming NAT rules",
        SerializedName = @"inboundNatRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IInboundNatRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IInboundNatRule[] SharedPublicIPAddressConfigurationInboundNatRule { get; set; }
        /// <summary>The size of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size of the virtual machine.",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(string) })]
        string Size { get; set; }
        /// <summary>The SSH key of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SSH key of the virtual machine administrator.",
        SerializedName = @"sshKey",
        PossibleTypes = new [] { typeof(string) })]
        string SshKey { get; set; }
        /// <summary>Storage type to use for virtual machine (i.e. Standard, Premium, StandardSSD).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type to use for virtual machine (i.e. Standard, Premium, StandardSSD).",
        SerializedName = @"storageType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? StorageType { get; set; }
        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags of the resource.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterTags Tag { get; set; }
        /// <summary>Flag to enable or disable secure boot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to enable or disable secure boot.",
        SerializedName = @"secureBootEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UefiSettingSecureBootEnabled { get; set; }
        /// <summary>Flag to enable or disable vTPM (virtual Trusted Platform Module).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to enable or disable vTPM (virtual Trusted Platform Module).",
        SerializedName = @"vTpmEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UefiSettingVTpmEnabled { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unique immutable identifier of a resource (Guid).",
        SerializedName = @"uniqueIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueIdentifier { get;  }
        /// <summary>The user name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user name of the virtual machine.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }
        /// <summary>Tells source of creation of lab virtual machine. Output property only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Tells source of creation of lab virtual machine. Output property only.",
        SerializedName = @"virtualMachineCreationSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource? VirtualMachineCreationSource { get;  }

    }
    /// Properties for creating a virtual machine.
    internal partial interface ILabVirtualMachineCreationParameterInternal

    {
        /// <summary>Indicates whether another user can take ownership of the virtual machine</summary>
        bool? AllowClaim { get; set; }
        /// <summary>The applicable schedule for the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IApplicableSchedule ApplicableSchedule { get; set; }
        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        string ApplicableScheduleId { get; set; }
        /// <summary>The geo-location where the resource lives</summary>
        string ApplicableScheduleLocation { get; set; }
        /// <summary>The name of the resource</summary>
        string ApplicableScheduleName { get; set; }
        /// <summary>The properties of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IApplicableScheduleProperties ApplicableScheduleProperty { get; set; }
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISystemData ApplicableScheduleSystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? ApplicableScheduleSystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string ApplicableScheduleSystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CreatedByType? ApplicableScheduleSystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? ApplicableScheduleSystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string ApplicableScheduleSystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CreatedByType? ApplicableScheduleSystemDataLastModifiedByType { get; set; }
        /// <summary>Resource tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IResourceTags ApplicableScheduleTag { get; set; }
        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        string ApplicableScheduleType { get; set; }
        /// <summary>The artifacts to be installed on the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IArtifactInstallProperties[] Artifact { get; set; }
        /// <summary>The total count of the artifacts that were successfully applied.</summary>
        int? ArtifactDeploymentStatusArtifactsApplied { get; set; }
        /// <summary>The total count of the artifacts that were tentatively applied.</summary>
        int? ArtifactDeploymentStatusTotalArtifact { get; set; }
        /// <summary>The number of virtual machine instances to create.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IBulkCreationParameters BulkCreationParameter { get; set; }
        /// <summary>The number of virtual machine instances to create.</summary>
        int? BulkCreationParameterInstanceCount { get; set; }
        /// <summary>
        /// Flag to determine if apply artifacts can be triggered at the time of fetching the document.
        /// </summary>
        bool? CanApplyArtifact { get; set; }
        /// <summary>The resource identifier (Microsoft.Compute) of the virtual machine.</summary>
        string ComputeId { get; set; }
        /// <summary>The compute virtual machine properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IComputeVMProperties ComputeVM { get; set; }
        /// <summary>Gets all data disks attached to the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IComputeDataDisk[] ComputeVMDataDisk { get; set; }
        /// <summary>Gets data disks blob uri for the virtual machine.</summary>
        string[] ComputeVMDataDiskId { get; set; }
        /// <summary>Gets the network interface ID of the virtual machine.</summary>
        string ComputeVMNetworkInterfaceId { get; set; }
        /// <summary>Gets the size of the virtual machine.</summary>
        string ComputeVMSize { get; set; }
        /// <summary>Gets the statuses of the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IComputeVMInstanceViewStatus[] ComputeVMStatuses { get; set; }
        /// <summary>Gets OS disk blob uri for the virtual machine.</summary>
        string ComputeVmosDiskId { get; set; }
        /// <summary>Gets the OS type of the virtual machine.</summary>
        string ComputeVmosType { get; set; }
        /// <summary>The email address of creator of the virtual machine.</summary>
        string CreatedByUser { get; set; }
        /// <summary>The object identifier of the creator of the virtual machine.</summary>
        string CreatedByUserId { get; set; }
        /// <summary>The creation date of the virtual machine.</summary>
        global::System.DateTime? CreatedDate { get; set; }
        /// <summary>The custom image identifier of the virtual machine.</summary>
        string CustomImageId { get; set; }
        /// <summary>New or existing data disks to attach to the virtual machine after creation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IDataDiskProperties[] DataDiskParameter { get; set; }
        /// <summary>
        /// Indicates whether the virtual machine is to be created without a public IP address.
        /// </summary>
        bool? DisallowPublicIPAddress { get; set; }
        /// <summary>The resource ID of the environment that contains this virtual machine, if any.</summary>
        string EnvironmentId { get; set; }
        /// <summary>The expiration date for VM.</summary>
        global::System.DateTime? ExpirationDate { get; set; }
        /// <summary>The fully-qualified domain name of the virtual machine.</summary>
        string Fqdn { get; set; }
        /// <summary>The Microsoft Azure Marketplace image reference of the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IGalleryImageReference GalleryImageReference { get; set; }
        /// <summary>The OS type of the gallery image.</summary>
        string GalleryImageReferenceOSType { get; set; }
        /// <summary>The offer of the gallery image.</summary>
        string GalleryImageReferenceOffer { get; set; }
        /// <summary>The publisher of the gallery image.</summary>
        string GalleryImageReferencePublisher { get; set; }
        /// <summary>The SKU of the gallery image.</summary>
        string GalleryImageReferenceSku { get; set; }
        /// <summary>The version of the gallery image.</summary>
        string GalleryImageReferenceVersion { get; set; }
        /// <summary>The shared gallery image version resource identifier of the virtual machine.</summary>
        string GalleryImageVersionId { get; set; }
        /// <summary>Indicates whether this virtual machine uses an SSH key for authentication.</summary>
        bool? IsAuthenticationWithSshKey { get; set; }
        /// <summary>The lab subnet name of the virtual machine.</summary>
        string LabSubnetName { get; set; }
        /// <summary>The lab virtual network identifier of the virtual machine.</summary>
        string LabVirtualNetworkId { get; set; }
        /// <summary>
        /// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISchedule LabVmsShutdown { get; set; }
        /// <summary>
        /// The auto-startup schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISchedule LabVmsStartup { get; set; }
        /// <summary>Last known compute power state captured in DTL</summary>
        string LastKnownPowerState { get; set; }
        /// <summary>The location of the new virtual machine or environment</summary>
        string Location { get; set; }
        /// <summary>The name of the virtual machine or environment</summary>
        string Name { get; set; }
        /// <summary>The network interface properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.INetworkInterfaceProperties NetworkInterface { get; set; }
        /// <summary>The DNS name.</summary>
        string NetworkInterfaceDnsName { get; set; }
        /// <summary>The private IP address.</summary>
        string NetworkInterfacePrivateIPAddress { get; set; }
        /// <summary>The public IP address.</summary>
        string NetworkInterfacePublicIPAddress { get; set; }
        /// <summary>The resource ID of the public IP address.</summary>
        string NetworkInterfacePublicIPAddressId { get; set; }
        /// <summary>
        /// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote
        /// Desktop Protocol).
        /// </summary>
        string NetworkInterfaceRdpAuthority { get; set; }
        /// <summary>
        /// The configuration for sharing a public IP address across multiple virtual machines.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISharedPublicIPAddressConfiguration NetworkInterfaceSharedPublicIPAddressConfiguration { get; set; }
        /// <summary>
        /// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
        /// </summary>
        string NetworkInterfaceSshAuthority { get; set; }
        /// <summary>The resource ID of the sub net.</summary>
        string NetworkInterfaceSubnetId { get; set; }
        /// <summary>The resource ID of the virtual network.</summary>
        string NetworkInterfaceVirtualNetworkId { get; set; }
        /// <summary>The notes of the virtual machine.</summary>
        string Note { get; set; }
        /// <summary>
        /// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a
        /// virtual machine image.
        /// </summary>
        int? OSDiskSizeGb { get; set; }
        /// <summary>The OS type of the virtual machine.</summary>
        string OSType { get; set; }
        /// <summary>The object identifier of the owner of the virtual machine.</summary>
        string OwnerObjectId { get; set; }
        /// <summary>The user principal name of the virtual machine owner.</summary>
        string OwnerUserPrincipalName { get; set; }
        /// <summary>The password of the virtual machine administrator.</summary>
        string Password { get; set; }
        /// <summary>The id of the plan associated with the virtual machine image</summary>
        string PlanId { get; set; }
        /// <summary>The artifact deployment status for the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IArtifactDeploymentStatusProperties PropertiesArtifactDeploymentStatus { get; set; }
        /// <summary>The deployment status of the artifact.</summary>
        string PropertiesArtifactDeploymentStatusDeploymentStatus { get; set; }
        /// <summary>The properties of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterProperties Property { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>Virtual Machine schedules to be created</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IScheduleCreationParameter[] ScheduleParameter { get; set; }
        /// <summary>Option to apply more security protection for VMs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISecurityProfile SecurityProfile { get; set; }
        /// <summary>
        /// Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br>
        /// Default: UefiSettings will not be enabled unless this property is set.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.SecurityTypes? SecurityProfileSecurityType { get; set; }
        /// <summary>
        /// Security settings like secure boot and vTPM. Structure must be null if SecurityType string is null.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IUefiSettings SecurityProfileUefiSetting { get; set; }
        /// <summary>The shared image resource identifier of the virtual machine.</summary>
        string SharedImageId { get; set; }
        /// <summary>
        /// The shared image version for the specified shared image Id. Will use latest if not specified.
        /// </summary>
        string SharedImageVersion { get; set; }
        /// <summary>The incoming NAT rules</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IInboundNatRule[] SharedPublicIPAddressConfigurationInboundNatRule { get; set; }
        /// <summary>The size of the virtual machine.</summary>
        string Size { get; set; }
        /// <summary>The SSH key of the virtual machine administrator.</summary>
        string SshKey { get; set; }
        /// <summary>Storage type to use for virtual machine (i.e. Standard, Premium, StandardSSD).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? StorageType { get; set; }
        /// <summary>The tags of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ILabVirtualMachineCreationParameterTags Tag { get; set; }
        /// <summary>Flag to enable or disable secure boot.</summary>
        bool? UefiSettingSecureBootEnabled { get; set; }
        /// <summary>Flag to enable or disable vTPM (virtual Trusted Platform Module).</summary>
        bool? UefiSettingVTpmEnabled { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        string UniqueIdentifier { get; set; }
        /// <summary>The user name of the virtual machine.</summary>
        string UserName { get; set; }
        /// <summary>Tells source of creation of lab virtual machine. Output property only.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource? VirtualMachineCreationSource { get; set; }

    }
}