// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>The security profile settings for a virtual machine.</summary>
    public partial class SecurityProfile :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISecurityProfile,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISecurityProfileInternal
    {

        /// <summary>Internal Acessors for UefiSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IUefiSettings Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.ISecurityProfileInternal.UefiSetting { get => (this._uefiSetting = this._uefiSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.UefiSettings()); set { {_uefiSetting = value;} } }

        /// <summary>Backing field for <see cref="SecurityType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.SecurityTypes? _securityType;

        /// <summary>
        /// Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br>
        /// Default: UefiSettings will not be enabled unless this property is set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.SecurityTypes? SecurityType { get => this._securityType; set => this._securityType = value; }

        /// <summary>Backing field for <see cref="UefiSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IUefiSettings _uefiSetting;

        /// <summary>
        /// Security settings like secure boot and vTPM. Structure must be null if SecurityType string is null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IUefiSettings UefiSetting { get => (this._uefiSetting = this._uefiSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.UefiSettings()); set => this._uefiSetting = value; }

        /// <summary>Flag to enable or disable secure boot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? UefiSettingSecureBootEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IUefiSettingsInternal)UefiSetting).SecureBootEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IUefiSettingsInternal)UefiSetting).SecureBootEnabled = value ?? default(bool); }

        /// <summary>Flag to enable or disable vTPM (virtual Trusted Platform Module).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? UefiSettingVTpmEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IUefiSettingsInternal)UefiSetting).VTpmEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IUefiSettingsInternal)UefiSetting).VTpmEnabled = value ?? default(bool); }

        /// <summary>Creates an new <see cref="SecurityProfile" /> instance.</summary>
        public SecurityProfile()
        {

        }
    }
    /// The security profile settings for a virtual machine.
    public partial interface ISecurityProfile :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br>
        /// Default: UefiSettings will not be enabled unless this property is set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br> Default: UefiSettings will not be enabled unless this property is set.",
        SerializedName = @"securityType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.SecurityTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.SecurityTypes? SecurityType { get; set; }
        /// <summary>Flag to enable or disable secure boot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to enable or disable secure boot.",
        SerializedName = @"secureBootEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UefiSettingSecureBootEnabled { get; set; }
        /// <summary>Flag to enable or disable vTPM (virtual Trusted Platform Module).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to enable or disable vTPM (virtual Trusted Platform Module).",
        SerializedName = @"vTpmEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UefiSettingVTpmEnabled { get; set; }

    }
    /// The security profile settings for a virtual machine.
    internal partial interface ISecurityProfileInternal

    {
        /// <summary>
        /// Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br>
        /// Default: UefiSettings will not be enabled unless this property is set.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.SecurityTypes? SecurityType { get; set; }
        /// <summary>
        /// Security settings like secure boot and vTPM. Structure must be null if SecurityType string is null.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20210901.IUefiSettings UefiSetting { get; set; }
        /// <summary>Flag to enable or disable secure boot.</summary>
        bool? UefiSettingSecureBootEnabled { get; set; }
        /// <summary>Flag to enable or disable vTPM (virtual Trusted Platform Module).</summary>
        bool? UefiSettingVTpmEnabled { get; set; }

    }
}