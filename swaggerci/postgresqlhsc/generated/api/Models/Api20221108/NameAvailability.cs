// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Extensions;

    /// <summary>Represents cluster name availability.</summary>
    public partial class NameAvailability :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.INameAvailability,
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.INameAvailabilityInternal
    {

        /// <summary>Backing field for <see cref="Message" /> property.</summary>
        private string _message;

        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string Message { get => this._message; set => this._message = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="NameAvailable" /> property.</summary>
        private bool? _nameAvailable;

        /// <summary>Indicates whether the cluster name is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public bool? NameAvailable { get => this._nameAvailable; set => this._nameAvailable = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Type of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="NameAvailability" /> instance.</summary>
        public NameAvailability()
        {

        }
    }
    /// Represents cluster name availability.
    public partial interface INameAvailability :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.IJsonSerializable
    {
        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get; set; }
        /// <summary>Name of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the cluster.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Indicates whether the cluster name is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the cluster name is available.",
        SerializedName = @"nameAvailable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NameAvailable { get; set; }
        /// <summary>Type of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the cluster.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// Represents cluster name availability.
    internal partial interface INameAvailabilityInternal

    {
        /// <summary>Error message.</summary>
        string Message { get; set; }
        /// <summary>Name of the cluster.</summary>
        string Name { get; set; }
        /// <summary>Indicates whether the cluster name is available.</summary>
        bool? NameAvailable { get; set; }
        /// <summary>Type of the cluster.</summary>
        string Type { get; set; }

    }
}