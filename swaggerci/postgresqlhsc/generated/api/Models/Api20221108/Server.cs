// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Extensions;

    /// <summary>Represents a server in a cluster.</summary>
    public partial class Server :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServer,
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerInternal,
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.Resource();

        /// <summary>The administrator's login name of the servers in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public string AdministratorLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).AdministratorLogin; }

        /// <summary>Availability Zone information of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public string AvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).AvailabilityZone = value ?? null; }

        /// <summary>The Citus version of server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public string CitusVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).CitusVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).CitusVersion = value ?? null; }

        /// <summary>The edition of a server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public string Edition { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).ServerEdition; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).ServerEdition = value ?? null; }

        /// <summary>If high availability is enabled or not for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public bool? EnableHa { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).EnableHa; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).EnableHa = value ?? default(bool); }

        /// <summary>If public IP is requested or not for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public bool? EnablePublicIPAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).EnablePublicIPAccess; }

        /// <summary>The fully qualified domain name of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public string FullyQualifiedDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).FullyQualifiedDomainName; }

        /// <summary>A state of HA feature for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public string HaState { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).HaState; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).Id; }

        /// <summary>If server is set to read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public bool? IsReadOnly { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).IsReadOnly; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).IsReadOnly = value ?? default(bool); }

        /// <summary>Internal Acessors for AdministratorLogin</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerInternal.AdministratorLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).AdministratorLogin; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).AdministratorLogin = value; }

        /// <summary>Internal Acessors for EnablePublicIPAccess</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerInternal.EnablePublicIPAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).EnablePublicIPAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).EnablePublicIPAccess = value; }

        /// <summary>Internal Acessors for FullyQualifiedDomainName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerInternal.FullyQualifiedDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).FullyQualifiedDomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).FullyQualifiedDomainName = value; }

        /// <summary>Internal Acessors for HaState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerInternal.HaState { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).HaState; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).HaState = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerProperties Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.ServerProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for State</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).State = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.ISystemData Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).Name; }

        /// <summary>The PostgreSQL version of server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public string PostgresqlVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).PostgresqlVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).PostgresqlVersion = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerProperties _property;

        /// <summary>The properties of a server in a cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.ServerProperties()); set => this._property = value; }

        /// <summary>The role of server in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Support.ServerRole? Role { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).Role; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).Role = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Support.ServerRole)""); }

        /// <summary>A state of a cluster/server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public string State { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).State; }

        /// <summary>The storage of a server in MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public long? StorageQuotaInMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).StorageQuotaInMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).StorageQuotaInMb = value ?? default(long); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal)__resource).Type; }

        /// <summary>The vCores count of a server (max: 64).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public long? VCore { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).VCore; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerPropertiesInternal)Property).VCore = value ?? default(long); }

        /// <summary>Creates an new <see cref="Server" /> instance.</summary>
        public Server()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Represents a server in a cluster.
    public partial interface IServer :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResource
    {
        /// <summary>The administrator's login name of the servers in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The administrator's login name of the servers in the cluster.",
        SerializedName = @"administratorLogin",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorLogin { get;  }
        /// <summary>Availability Zone information of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Availability Zone information of the server.",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZone { get; set; }
        /// <summary>The Citus version of server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Citus version of server.",
        SerializedName = @"citusVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CitusVersion { get; set; }
        /// <summary>The edition of a server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The edition of a server",
        SerializedName = @"serverEdition",
        PossibleTypes = new [] { typeof(string) })]
        string Edition { get; set; }
        /// <summary>If high availability is enabled or not for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If high availability is enabled or not for the server.",
        SerializedName = @"enableHa",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableHa { get; set; }
        /// <summary>If public IP is requested or not for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If public IP is requested or not for a server.",
        SerializedName = @"enablePublicIpAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnablePublicIPAccess { get;  }
        /// <summary>The fully qualified domain name of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified domain name of a server.",
        SerializedName = @"fullyQualifiedDomainName",
        PossibleTypes = new [] { typeof(string) })]
        string FullyQualifiedDomainName { get;  }
        /// <summary>A state of HA feature for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A state of HA feature for the cluster.",
        SerializedName = @"haState",
        PossibleTypes = new [] { typeof(string) })]
        string HaState { get;  }
        /// <summary>If server is set to read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If server is set to read-only.",
        SerializedName = @"isReadOnly",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsReadOnly { get; set; }
        /// <summary>The PostgreSQL version of server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The PostgreSQL version of server.",
        SerializedName = @"postgresqlVersion",
        PossibleTypes = new [] { typeof(string) })]
        string PostgresqlVersion { get; set; }
        /// <summary>The role of server in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The role of server in the cluster.",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Support.ServerRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Support.ServerRole? Role { get; set; }
        /// <summary>A state of a cluster/server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A state of a cluster/server that is visible to user.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string State { get;  }
        /// <summary>The storage of a server in MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The storage of a server in MB.",
        SerializedName = @"storageQuotaInMb",
        PossibleTypes = new [] { typeof(long) })]
        long? StorageQuotaInMb { get; set; }
        /// <summary>The vCores count of a server (max: 64).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The vCores count of a server (max: 64).",
        SerializedName = @"vCores",
        PossibleTypes = new [] { typeof(long) })]
        long? VCore { get; set; }

    }
    /// Represents a server in a cluster.
    internal partial interface IServerInternal :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api40.IResourceInternal
    {
        /// <summary>The administrator's login name of the servers in the cluster.</summary>
        string AdministratorLogin { get; set; }
        /// <summary>Availability Zone information of the server.</summary>
        string AvailabilityZone { get; set; }
        /// <summary>The Citus version of server.</summary>
        string CitusVersion { get; set; }
        /// <summary>The edition of a server</summary>
        string Edition { get; set; }
        /// <summary>If high availability is enabled or not for the server.</summary>
        bool? EnableHa { get; set; }
        /// <summary>If public IP is requested or not for a server.</summary>
        bool? EnablePublicIPAccess { get; set; }
        /// <summary>The fully qualified domain name of a server.</summary>
        string FullyQualifiedDomainName { get; set; }
        /// <summary>A state of HA feature for the cluster.</summary>
        string HaState { get; set; }
        /// <summary>If server is set to read-only.</summary>
        bool? IsReadOnly { get; set; }
        /// <summary>The PostgreSQL version of server.</summary>
        string PostgresqlVersion { get; set; }
        /// <summary>The properties of a server in a cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerProperties Property { get; set; }
        /// <summary>The role of server in the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Support.ServerRole? Role { get; set; }
        /// <summary>A state of a cluster/server that is visible to user.</summary>
        string State { get; set; }
        /// <summary>The storage of a server in MB.</summary>
        long? StorageQuotaInMb { get; set; }
        /// <summary>The vCores count of a server (max: 64).</summary>
        long? VCore { get; set; }

    }
}