// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20241101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The garbage collection properties of the connected registry.</summary>
    public partial class GarbageCollectionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20241101Preview.IGarbageCollectionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20241101Preview.IGarbageCollectionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Indicates whether garbage collection is enabled for the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="Schedule" /> property.</summary>
        private string _schedule;

        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will run garbage collection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string Schedule { get => this._schedule; set => this._schedule = value; }

        /// <summary>Creates an new <see cref="GarbageCollectionProperties" /> instance.</summary>
        public GarbageCollectionProperties()
        {

        }
    }
    /// The garbage collection properties of the connected registry.
    public partial interface IGarbageCollectionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>Indicates whether garbage collection is enabled for the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether garbage collection is enabled for the connected registry.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will run garbage collection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cron expression indicating the schedule that the connected registry will run garbage collection.",
        SerializedName = @"schedule",
        PossibleTypes = new [] { typeof(string) })]
        string Schedule { get; set; }

    }
    /// The garbage collection properties of the connected registry.
    internal partial interface IGarbageCollectionPropertiesInternal

    {
        /// <summary>Indicates whether garbage collection is enabled for the connected registry.</summary>
        bool? Enabled { get; set; }
        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will run garbage collection.
        /// </summary>
        string Schedule { get; set; }

    }
}