// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    public partial class TlsPropertiesCertificate :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesCertificate,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesCertificateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificateProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificateProperties __tlsCertificateProperties = new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.TlsCertificateProperties();

        /// <summary>Indicates the location of the certificates.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificatePropertiesInternal)__tlsCertificateProperties).Location; }

        /// <summary>Internal Acessors for Location</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificatePropertiesInternal.Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificatePropertiesInternal)__tlsCertificateProperties).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificatePropertiesInternal)__tlsCertificateProperties).Location = value; }

        /// <summary>Internal Acessors for Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CertificateType? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificatePropertiesInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificatePropertiesInternal)__tlsCertificateProperties).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificatePropertiesInternal)__tlsCertificateProperties).Type = value; }

        /// <summary>The type of certificate location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CertificateType? Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificatePropertiesInternal)__tlsCertificateProperties).Type; }

        /// <summary>Creates an new <see cref="TlsPropertiesCertificate" /> instance.</summary>
        public TlsPropertiesCertificate()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__tlsCertificateProperties), __tlsCertificateProperties);
            await eventListener.AssertObjectIsValid(nameof(__tlsCertificateProperties), __tlsCertificateProperties);
        }
    }
    public partial interface ITlsPropertiesCertificate :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificateProperties
    {

    }
    internal partial interface ITlsPropertiesCertificateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificatePropertiesInternal
    {

    }
}