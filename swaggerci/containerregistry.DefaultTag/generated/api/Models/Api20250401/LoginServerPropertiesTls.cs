// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    public partial class LoginServerPropertiesTls :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ILoginServerPropertiesTls,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ILoginServerPropertiesTlsInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsProperties __tlsProperties = new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.TlsProperties();

        /// <summary>The TLS certificate properties of the connected registry login server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificateProperties Certificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).Certificate; }

        /// <summary>Indicates the location of the certificates.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public string CertificateLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).CertificateLocation; }

        /// <summary>The type of certificate location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CertificateType? CertificateType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).CertificateType; }

        /// <summary>Internal Acessors for Certificate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsCertificateProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal.Certificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).Certificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).Certificate = value; }

        /// <summary>Internal Acessors for CertificateLocation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal.CertificateLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).CertificateLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).CertificateLocation = value; }

        /// <summary>Internal Acessors for CertificateType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CertificateType? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal.CertificateType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).CertificateType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).CertificateType = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TlsStatus? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).Status = value; }

        /// <summary>Indicates whether HTTPS is enabled for the login server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TlsStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal)__tlsProperties).Status; }

        /// <summary>Creates an new <see cref="LoginServerPropertiesTls" /> instance.</summary>
        public LoginServerPropertiesTls()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__tlsProperties), __tlsProperties);
            await eventListener.AssertObjectIsValid(nameof(__tlsProperties), __tlsProperties);
        }
    }
    public partial interface ILoginServerPropertiesTls :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsProperties
    {

    }
    internal partial interface ILoginServerPropertiesTlsInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20250401.ITlsPropertiesInternal
    {

    }
}