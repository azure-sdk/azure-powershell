// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Extensions;

    /// <summary>
    /// VMAttributes that will be used to filter VMSizes which will be used to build Fleet.
    /// </summary>
    public partial class VMAttributes :
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributes,
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributesInternal
    {

        /// <summary>Backing field for <see cref="AcceleratorCount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger _acceleratorCount;

        /// <summary>
        /// The range of accelerator count specified from min to max.. Optional parameter. Either Min or Max is required if specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger AcceleratorCount { get => (this._acceleratorCount = this._acceleratorCount ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxInteger()); set => this._acceleratorCount = value; }

        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public int? AcceleratorCountMax { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)AcceleratorCount).Max; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)AcceleratorCount).Max = value ?? default(int); }

        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public int? AcceleratorCountMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)AcceleratorCount).Min; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)AcceleratorCount).Min = value ?? default(int); }

        /// <summary>Backing field for <see cref="AcceleratorManufacturer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.AcceleratorManufacturer[] _acceleratorManufacturer;

        /// <summary>
        /// The accelerator manufacturers specified as a list. acceleratorSupport should be set to Included or Required to use this
        /// VMAttribute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.AcceleratorManufacturer[] AcceleratorManufacturer { get => this._acceleratorManufacturer; set => this._acceleratorManufacturer = value; }

        /// <summary>Backing field for <see cref="AcceleratorSupport" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? _acceleratorSupport;

        /// <summary>
        /// Specifies whether the VMSize supporting accelerator should be used to build Fleet or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? AcceleratorSupport { get => this._acceleratorSupport; set => this._acceleratorSupport = value; }

        /// <summary>Backing field for <see cref="AcceleratorType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.AcceleratorType[] _acceleratorType;

        /// <summary>
        /// The accelerator types specified as a list. acceleratorSupport should be set to Included or Required to use this VMAttribute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.AcceleratorType[] AcceleratorType { get => this._acceleratorType; set => this._acceleratorType = value; }

        /// <summary>Backing field for <see cref="ArchitectureType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.ArchitectureType[] _architectureType;

        /// <summary>The VM architecture types specified as a list. Optional parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.ArchitectureType[] ArchitectureType { get => this._architectureType; set => this._architectureType = value; }

        /// <summary>Backing field for <see cref="BurstableSupport" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? _burstableSupport;

        /// <summary>
        /// Specifies whether the VMSize supporting burstable capability should be used to build Fleet or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? BurstableSupport { get => this._burstableSupport; set => this._burstableSupport = value; }

        /// <summary>Backing field for <see cref="CpuManufacturer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.CpuManufacturer[] _cpuManufacturer;

        /// <summary>The VM CPU manufacturers specified as a list. Optional parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.CpuManufacturer[] CpuManufacturer { get => this._cpuManufacturer; set => this._cpuManufacturer = value; }

        /// <summary>Backing field for <see cref="DataDiskCount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger _dataDiskCount;

        /// <summary>
        /// The range of data disk count specified from Min to Max. Optional parameter. Either Min or Max is required if specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger DataDiskCount { get => (this._dataDiskCount = this._dataDiskCount ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxInteger()); set => this._dataDiskCount = value; }

        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public int? DataDiskCountMax { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)DataDiskCount).Max; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)DataDiskCount).Max = value ?? default(int); }

        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public int? DataDiskCountMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)DataDiskCount).Min; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)DataDiskCount).Min = value ?? default(int); }

        /// <summary>Backing field for <see cref="ExcludedVMSize" /> property.</summary>
        private string[] _excludedVMSize;

        /// <summary>
        /// Specifies which VMSizes should be excluded while building Fleet. Optional parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public string[] ExcludedVMSize { get => this._excludedVMSize; set => this._excludedVMSize = value; }

        /// <summary>Backing field for <see cref="LocalStorageDiskType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.LocalStorageDiskType[] _localStorageDiskType;

        /// <summary>
        /// The local storage disk types specified as a list. LocalStorageSupport should be set to "Included" or "Required" to use
        /// this VMAttribute.
        /// If localStorageSupport is "Excluded", this VMAttribute can not be used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.LocalStorageDiskType[] LocalStorageDiskType { get => this._localStorageDiskType; set => this._localStorageDiskType = value; }

        /// <summary>Backing field for <see cref="LocalStorageInGiB" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble _localStorageInGiB;

        /// <summary>The range of local storage in GB specified from Min to Max.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble LocalStorageInGiB { get => (this._localStorageInGiB = this._localStorageInGiB ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxDouble()); set => this._localStorageInGiB = value; }

        /// <summary>Maximum value. Double.MaxValue(1.7976931348623157E+308)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public double? LocalStorageInGiBMax { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)LocalStorageInGiB).Max; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)LocalStorageInGiB).Max = value ?? default(double); }

        /// <summary>Minimum value. default 0. Double.MinValue()</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public double? LocalStorageInGiBMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)LocalStorageInGiB).Min; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)LocalStorageInGiB).Min = value ?? default(double); }

        /// <summary>Backing field for <see cref="LocalStorageSupport" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? _localStorageSupport;

        /// <summary>
        /// Specifies whether the VMSize supporting local storage should be used to build Fleet or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? LocalStorageSupport { get => this._localStorageSupport; set => this._localStorageSupport = value; }

        /// <summary>Backing field for <see cref="MemoryInGiB" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble _memoryInGiB;

        /// <summary>
        /// The range of memory specified from Min to Max. Must be specified if VMAttributes are specified, either Min or Max is required
        /// if specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble MemoryInGiB { get => (this._memoryInGiB = this._memoryInGiB ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxDouble()); set => this._memoryInGiB = value; }

        /// <summary>Maximum value. Double.MaxValue(1.7976931348623157E+308)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public double? MemoryInGiBMax { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)MemoryInGiB).Max; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)MemoryInGiB).Max = value ?? default(double); }

        /// <summary>Minimum value. default 0. Double.MinValue()</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public double? MemoryInGiBMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)MemoryInGiB).Min; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)MemoryInGiB).Min = value ?? default(double); }

        /// <summary>Internal Acessors for AcceleratorCount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributesInternal.AcceleratorCount { get => (this._acceleratorCount = this._acceleratorCount ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxInteger()); set { {_acceleratorCount = value;} } }

        /// <summary>Internal Acessors for DataDiskCount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributesInternal.DataDiskCount { get => (this._dataDiskCount = this._dataDiskCount ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxInteger()); set { {_dataDiskCount = value;} } }

        /// <summary>Internal Acessors for LocalStorageInGiB</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributesInternal.LocalStorageInGiB { get => (this._localStorageInGiB = this._localStorageInGiB ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxDouble()); set { {_localStorageInGiB = value;} } }

        /// <summary>Internal Acessors for MemoryInGiB</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributesInternal.MemoryInGiB { get => (this._memoryInGiB = this._memoryInGiB ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxDouble()); set { {_memoryInGiB = value;} } }

        /// <summary>Internal Acessors for NetworkBandwidthInMbps</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributesInternal.NetworkBandwidthInMbps { get => (this._networkBandwidthInMbps = this._networkBandwidthInMbps ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxDouble()); set { {_networkBandwidthInMbps = value;} } }

        /// <summary>Internal Acessors for NetworkInterfaceCount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributesInternal.NetworkInterfaceCount { get => (this._networkInterfaceCount = this._networkInterfaceCount ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxInteger()); set { {_networkInterfaceCount = value;} } }

        /// <summary>Internal Acessors for RdmaNetworkInterfaceCount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributesInternal.RdmaNetworkInterfaceCount { get => (this._rdmaNetworkInterfaceCount = this._rdmaNetworkInterfaceCount ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxInteger()); set { {_rdmaNetworkInterfaceCount = value;} } }

        /// <summary>Internal Acessors for VCpuCount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributesInternal.VCpuCount { get => (this._vCpuCount = this._vCpuCount ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxInteger()); set { {_vCpuCount = value;} } }

        /// <summary>Backing field for <see cref="NetworkBandwidthInMbps" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble _networkBandwidthInMbps;

        /// <summary>
        /// The range of network bandwidth in Mbps specified from Min to Max. Optional parameter. Either Min or Max is required if
        /// specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble NetworkBandwidthInMbps { get => (this._networkBandwidthInMbps = this._networkBandwidthInMbps ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxDouble()); set => this._networkBandwidthInMbps = value; }

        /// <summary>Maximum value. Double.MaxValue(1.7976931348623157E+308)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public double? NetworkBandwidthInMbpsMax { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)NetworkBandwidthInMbps).Max; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)NetworkBandwidthInMbps).Max = value ?? default(double); }

        /// <summary>Minimum value. default 0. Double.MinValue()</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public double? NetworkBandwidthInMbpsMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)NetworkBandwidthInMbps).Min; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDoubleInternal)NetworkBandwidthInMbps).Min = value ?? default(double); }

        /// <summary>Backing field for <see cref="NetworkInterfaceCount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger _networkInterfaceCount;

        /// <summary>
        /// The range of network interface count specified from Min to Max. Optional parameter. Either Min or Max is required if specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger NetworkInterfaceCount { get => (this._networkInterfaceCount = this._networkInterfaceCount ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxInteger()); set => this._networkInterfaceCount = value; }

        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public int? NetworkInterfaceCountMax { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)NetworkInterfaceCount).Max; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)NetworkInterfaceCount).Max = value ?? default(int); }

        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public int? NetworkInterfaceCountMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)NetworkInterfaceCount).Min; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)NetworkInterfaceCount).Min = value ?? default(int); }

        /// <summary>Backing field for <see cref="RdmaNetworkInterfaceCount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger _rdmaNetworkInterfaceCount;

        /// <summary>
        /// The range of RDMA (Remote Direct Memory Access) network interface count specified from Min to Max. Optional parameter.
        /// Either Min or Max is required if specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger RdmaNetworkInterfaceCount { get => (this._rdmaNetworkInterfaceCount = this._rdmaNetworkInterfaceCount ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxInteger()); set => this._rdmaNetworkInterfaceCount = value; }

        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public int? RdmaNetworkInterfaceCountMax { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)RdmaNetworkInterfaceCount).Max; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)RdmaNetworkInterfaceCount).Max = value ?? default(int); }

        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public int? RdmaNetworkInterfaceCountMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)RdmaNetworkInterfaceCount).Min; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)RdmaNetworkInterfaceCount).Min = value ?? default(int); }

        /// <summary>Backing field for <see cref="RdmaSupport" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? _rdmaSupport;

        /// <summary>
        /// Specifies whether the VMSize supporting RDMA (Remote Direct Memory Access) should be used to build Fleet or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? RdmaSupport { get => this._rdmaSupport; set => this._rdmaSupport = value; }

        /// <summary>Backing field for <see cref="VCpuCount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger _vCpuCount;

        /// <summary>
        /// The range of vCpuCount specified from Min to Max. Must be specified if VMAttributes are specified, either Min or Max is
        /// required if specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger VCpuCount { get => (this._vCpuCount = this._vCpuCount ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.VMAttributeMinMaxInteger()); set => this._vCpuCount = value; }

        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public int? VCpuCountMax { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)VCpuCount).Max; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)VCpuCount).Max = value ?? default(int); }

        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public int? VCpuCountMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)VCpuCount).Min; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxIntegerInternal)VCpuCount).Min = value ?? default(int); }

        /// <summary>Backing field for <see cref="VMCategory" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMCategory[] _vMCategory;

        /// <summary>The VM category specified as a list. Optional parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMCategory[] VMCategory { get => this._vMCategory; set => this._vMCategory = value; }

        /// <summary>Creates an new <see cref="VMAttributes" /> instance.</summary>
        public VMAttributes()
        {

        }
    }
    /// VMAttributes that will be used to filter VMSizes which will be used to build Fleet.
    public partial interface IVMAttributes :
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.IJsonSerializable
    {
        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.",
        SerializedName = @"max",
        PossibleTypes = new [] { typeof(int) })]
        int? AcceleratorCountMax { get; set; }
        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.",
        SerializedName = @"min",
        PossibleTypes = new [] { typeof(int) })]
        int? AcceleratorCountMin { get; set; }
        /// <summary>
        /// The accelerator manufacturers specified as a list. acceleratorSupport should be set to Included or Required to use this
        /// VMAttribute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The accelerator manufacturers specified as a list. acceleratorSupport should be set to Included or Required to use this VMAttribute.",
        SerializedName = @"acceleratorManufacturers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.AcceleratorManufacturer) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.AcceleratorManufacturer[] AcceleratorManufacturer { get; set; }
        /// <summary>
        /// Specifies whether the VMSize supporting accelerator should be used to build Fleet or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the VMSize supporting accelerator should be used to build Fleet or not.",
        SerializedName = @"acceleratorSupport",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? AcceleratorSupport { get; set; }
        /// <summary>
        /// The accelerator types specified as a list. acceleratorSupport should be set to Included or Required to use this VMAttribute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The accelerator types specified as a list. acceleratorSupport should be set to Included or Required to use this VMAttribute.",
        SerializedName = @"acceleratorTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.AcceleratorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.AcceleratorType[] AcceleratorType { get; set; }
        /// <summary>The VM architecture types specified as a list. Optional parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The VM architecture types specified as a list. Optional parameter.",
        SerializedName = @"architectureTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.ArchitectureType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.ArchitectureType[] ArchitectureType { get; set; }
        /// <summary>
        /// Specifies whether the VMSize supporting burstable capability should be used to build Fleet or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the VMSize supporting burstable capability should be used to build Fleet or not.",
        SerializedName = @"burstableSupport",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? BurstableSupport { get; set; }
        /// <summary>The VM CPU manufacturers specified as a list. Optional parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The VM CPU manufacturers specified as a list. Optional parameter.",
        SerializedName = @"cpuManufacturers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.CpuManufacturer) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.CpuManufacturer[] CpuManufacturer { get; set; }
        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.",
        SerializedName = @"max",
        PossibleTypes = new [] { typeof(int) })]
        int? DataDiskCountMax { get; set; }
        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.",
        SerializedName = @"min",
        PossibleTypes = new [] { typeof(int) })]
        int? DataDiskCountMin { get; set; }
        /// <summary>
        /// Specifies which VMSizes should be excluded while building Fleet. Optional parameter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies which VMSizes should be excluded while building Fleet. Optional parameter.",
        SerializedName = @"excludedVMSizes",
        PossibleTypes = new [] { typeof(string) })]
        string[] ExcludedVMSize { get; set; }
        /// <summary>
        /// The local storage disk types specified as a list. LocalStorageSupport should be set to "Included" or "Required" to use
        /// this VMAttribute.
        /// If localStorageSupport is "Excluded", this VMAttribute can not be used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The local storage disk types specified as a list. LocalStorageSupport should be set to ""Included"" or ""Required"" to use this VMAttribute.
        If localStorageSupport is ""Excluded"", this VMAttribute can not be used.",
        SerializedName = @"localStorageDiskTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.LocalStorageDiskType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.LocalStorageDiskType[] LocalStorageDiskType { get; set; }
        /// <summary>Maximum value. Double.MaxValue(1.7976931348623157E+308)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum value. Double.MaxValue(1.7976931348623157E+308)",
        SerializedName = @"max",
        PossibleTypes = new [] { typeof(double) })]
        double? LocalStorageInGiBMax { get; set; }
        /// <summary>Minimum value. default 0. Double.MinValue()</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum value. default 0. Double.MinValue()",
        SerializedName = @"min",
        PossibleTypes = new [] { typeof(double) })]
        double? LocalStorageInGiBMin { get; set; }
        /// <summary>
        /// Specifies whether the VMSize supporting local storage should be used to build Fleet or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the VMSize supporting local storage should be used to build Fleet or not.",
        SerializedName = @"localStorageSupport",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? LocalStorageSupport { get; set; }
        /// <summary>Maximum value. Double.MaxValue(1.7976931348623157E+308)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum value. Double.MaxValue(1.7976931348623157E+308)",
        SerializedName = @"max",
        PossibleTypes = new [] { typeof(double) })]
        double? MemoryInGiBMax { get; set; }
        /// <summary>Minimum value. default 0. Double.MinValue()</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum value. default 0. Double.MinValue()",
        SerializedName = @"min",
        PossibleTypes = new [] { typeof(double) })]
        double? MemoryInGiBMin { get; set; }
        /// <summary>Maximum value. Double.MaxValue(1.7976931348623157E+308)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum value. Double.MaxValue(1.7976931348623157E+308)",
        SerializedName = @"max",
        PossibleTypes = new [] { typeof(double) })]
        double? NetworkBandwidthInMbpsMax { get; set; }
        /// <summary>Minimum value. default 0. Double.MinValue()</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum value. default 0. Double.MinValue()",
        SerializedName = @"min",
        PossibleTypes = new [] { typeof(double) })]
        double? NetworkBandwidthInMbpsMin { get; set; }
        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.",
        SerializedName = @"max",
        PossibleTypes = new [] { typeof(int) })]
        int? NetworkInterfaceCountMax { get; set; }
        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.",
        SerializedName = @"min",
        PossibleTypes = new [] { typeof(int) })]
        int? NetworkInterfaceCountMin { get; set; }
        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.",
        SerializedName = @"max",
        PossibleTypes = new [] { typeof(int) })]
        int? RdmaNetworkInterfaceCountMax { get; set; }
        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.",
        SerializedName = @"min",
        PossibleTypes = new [] { typeof(int) })]
        int? RdmaNetworkInterfaceCountMin { get; set; }
        /// <summary>
        /// Specifies whether the VMSize supporting RDMA (Remote Direct Memory Access) should be used to build Fleet or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the VMSize supporting RDMA (Remote Direct Memory Access) should be used to build Fleet or not.",
        SerializedName = @"rdmaSupport",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? RdmaSupport { get; set; }
        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.",
        SerializedName = @"max",
        PossibleTypes = new [] { typeof(int) })]
        int? VCpuCountMax { get; set; }
        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.",
        SerializedName = @"min",
        PossibleTypes = new [] { typeof(int) })]
        int? VCpuCountMin { get; set; }
        /// <summary>The VM category specified as a list. Optional parameter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The VM category specified as a list. Optional parameter.",
        SerializedName = @"vmCategories",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMCategory) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMCategory[] VMCategory { get; set; }

    }
    /// VMAttributes that will be used to filter VMSizes which will be used to build Fleet.
    internal partial interface IVMAttributesInternal

    {
        /// <summary>
        /// The range of accelerator count specified from min to max.. Optional parameter. Either Min or Max is required if specified.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger AcceleratorCount { get; set; }
        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        int? AcceleratorCountMax { get; set; }
        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        int? AcceleratorCountMin { get; set; }
        /// <summary>
        /// The accelerator manufacturers specified as a list. acceleratorSupport should be set to Included or Required to use this
        /// VMAttribute.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.AcceleratorManufacturer[] AcceleratorManufacturer { get; set; }
        /// <summary>
        /// Specifies whether the VMSize supporting accelerator should be used to build Fleet or not.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? AcceleratorSupport { get; set; }
        /// <summary>
        /// The accelerator types specified as a list. acceleratorSupport should be set to Included or Required to use this VMAttribute.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.AcceleratorType[] AcceleratorType { get; set; }
        /// <summary>The VM architecture types specified as a list. Optional parameter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.ArchitectureType[] ArchitectureType { get; set; }
        /// <summary>
        /// Specifies whether the VMSize supporting burstable capability should be used to build Fleet or not.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? BurstableSupport { get; set; }
        /// <summary>The VM CPU manufacturers specified as a list. Optional parameter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.CpuManufacturer[] CpuManufacturer { get; set; }
        /// <summary>
        /// The range of data disk count specified from Min to Max. Optional parameter. Either Min or Max is required if specified.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger DataDiskCount { get; set; }
        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        int? DataDiskCountMax { get; set; }
        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        int? DataDiskCountMin { get; set; }
        /// <summary>
        /// Specifies which VMSizes should be excluded while building Fleet. Optional parameter.
        /// </summary>
        string[] ExcludedVMSize { get; set; }
        /// <summary>
        /// The local storage disk types specified as a list. LocalStorageSupport should be set to "Included" or "Required" to use
        /// this VMAttribute.
        /// If localStorageSupport is "Excluded", this VMAttribute can not be used.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.LocalStorageDiskType[] LocalStorageDiskType { get; set; }
        /// <summary>The range of local storage in GB specified from Min to Max.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble LocalStorageInGiB { get; set; }
        /// <summary>Maximum value. Double.MaxValue(1.7976931348623157E+308)</summary>
        double? LocalStorageInGiBMax { get; set; }
        /// <summary>Minimum value. default 0. Double.MinValue()</summary>
        double? LocalStorageInGiBMin { get; set; }
        /// <summary>
        /// Specifies whether the VMSize supporting local storage should be used to build Fleet or not.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? LocalStorageSupport { get; set; }
        /// <summary>
        /// The range of memory specified from Min to Max. Must be specified if VMAttributes are specified, either Min or Max is required
        /// if specified.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble MemoryInGiB { get; set; }
        /// <summary>Maximum value. Double.MaxValue(1.7976931348623157E+308)</summary>
        double? MemoryInGiBMax { get; set; }
        /// <summary>Minimum value. default 0. Double.MinValue()</summary>
        double? MemoryInGiBMin { get; set; }
        /// <summary>
        /// The range of network bandwidth in Mbps specified from Min to Max. Optional parameter. Either Min or Max is required if
        /// specified.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxDouble NetworkBandwidthInMbps { get; set; }
        /// <summary>Maximum value. Double.MaxValue(1.7976931348623157E+308)</summary>
        double? NetworkBandwidthInMbpsMax { get; set; }
        /// <summary>Minimum value. default 0. Double.MinValue()</summary>
        double? NetworkBandwidthInMbpsMin { get; set; }
        /// <summary>
        /// The range of network interface count specified from Min to Max. Optional parameter. Either Min or Max is required if specified.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger NetworkInterfaceCount { get; set; }
        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        int? NetworkInterfaceCountMax { get; set; }
        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        int? NetworkInterfaceCountMin { get; set; }
        /// <summary>
        /// The range of RDMA (Remote Direct Memory Access) network interface count specified from Min to Max. Optional parameter.
        /// Either Min or Max is required if specified.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger RdmaNetworkInterfaceCount { get; set; }
        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        int? RdmaNetworkInterfaceCountMax { get; set; }
        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        int? RdmaNetworkInterfaceCountMin { get; set; }
        /// <summary>
        /// Specifies whether the VMSize supporting RDMA (Remote Direct Memory Access) should be used to build Fleet or not.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMAttributeSupport? RdmaSupport { get; set; }
        /// <summary>
        /// The range of vCpuCount specified from Min to Max. Must be specified if VMAttributes are specified, either Min or Max is
        /// required if specified.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20241101.IVMAttributeMinMaxInteger VCpuCount { get; set; }
        /// <summary>Max VMSize from CRS, Max = 4294967295 (uint.MaxValue) if not specified.</summary>
        int? VCpuCountMax { get; set; }
        /// <summary>Min VMSize from CRS, Min = 0 (uint.MinValue) if not specified.</summary>
        int? VCpuCountMin { get; set; }
        /// <summary>The VM category specified as a list. Optional parameter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Support.VMCategory[] VMCategory { get; set; }

    }
}