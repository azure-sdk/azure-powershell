// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Extensions;

    /// <summary>
    /// Describes a virtual machine scale set network profile's IP configuration
    /// properties.
    /// </summary>
    public partial class VirtualMachineScaleSetIPConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPConfigurationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPConfigurationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApplicationGatewayBackendAddressPool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] _applicationGatewayBackendAddressPool;

        /// <summary>
        /// Specifies an array of references to backend address pools of application
        /// gateways. A scale set can reference backend address pools of multiple
        /// application gateways. Multiple scale sets cannot use the same application
        /// gateway.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] ApplicationGatewayBackendAddressPool { get => this._applicationGatewayBackendAddressPool; set => this._applicationGatewayBackendAddressPool = value; }

        /// <summary>Backing field for <see cref="ApplicationSecurityGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] _applicationSecurityGroup;

        /// <summary>Specifies an array of references to application security group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] ApplicationSecurityGroup { get => this._applicationSecurityGroup; set => this._applicationSecurityGroup = value; }

        /// <summary>Specify what happens to the public IP when the VM is deleted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.DeleteOptions? DeleteOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DeleteOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DeleteOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.DeleteOptions)""); }

        /// <summary>
        /// The Domain name label.The concatenation of the domain name label and vm index
        /// will be the domain name labels of the PublicIPAddress resources that will be
        /// created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Inlined)]
        public string DnsSettingDomainNameLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettingDomainNameLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettingDomainNameLabel = value ?? null; }

        /// <summary>
        /// The Domain name label scope.The concatenation of the hashed domain name label
        /// that generated according to the policy from domain name label scope and vm
        /// index will be the domain name labels of the PublicIPAddress resources that will
        /// be created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.DomainNameLabelScopeTypes? DnsSettingDomainNameLabelScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettingDomainNameLabelScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSettingDomainNameLabelScope = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.DomainNameLabelScopeTypes)""); }

        /// <summary>The list of IP tags associated with the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPTag[] IPTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IPTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IPTag = value ?? null /* arrayOf */; }

        /// <summary>The idle timeout of the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Inlined)]
        public int? IdleTimeoutInMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IdleTimeoutInMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).IdleTimeoutInMinute = value ?? default(int); }

        /// <summary>Backing field for <see cref="LoadBalancerBackendAddressPool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] _loadBalancerBackendAddressPool;

        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A
        /// scale set can reference backend address pools of one public and one internal
        /// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] LoadBalancerBackendAddressPool { get => this._loadBalancerBackendAddressPool; set => this._loadBalancerBackendAddressPool = value; }

        /// <summary>Backing field for <see cref="LoadBalancerInboundNatPool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] _loadBalancerInboundNatPool;

        /// <summary>
        /// Specifies an array of references to inbound Nat pools of the load balancers. A
        /// scale set can reference inbound nat pools of one public and one internal load
        /// balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] LoadBalancerInboundNatPool { get => this._loadBalancerInboundNatPool; set => this._loadBalancerInboundNatPool = value; }

        /// <summary>Internal Acessors for DnsSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.DnsSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).DnsSetting = value; }

        /// <summary>Internal Acessors for PublicIPAddressConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfiguration Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.PublicIPAddressConfiguration { get => (this._publicIPAddressConfiguration = this._publicIPAddressConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.VirtualMachineScaleSetPublicIPAddressConfiguration()); set { {_publicIPAddressConfiguration = value;} } }

        /// <summary>Internal Acessors for PublicIPAddressConfigurationProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationProperties Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.PublicIPAddressConfigurationProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Property = value; }

        /// <summary>Internal Acessors for PublicIPAddressConfigurationSku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IPublicIPAddressSku Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.PublicIPAddressConfigurationSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Sku = value; }

        /// <summary>Internal Acessors for PublicIPPrefix</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.PublicIPPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefix = value; }

        /// <summary>Internal Acessors for Subnet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IApiEntityReference Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPConfigurationPropertiesInternal.Subnet { get => (this._subnet = this._subnet ?? new Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ApiEntityReference()); set { {_subnet = value;} } }

        /// <summary>Backing field for <see cref="Primary" /> property.</summary>
        private bool? _primary;

        /// <summary>
        /// Specifies the primary network interface in case the virtual machine has more
        /// than 1 network interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Owned)]
        public bool? Primary { get => this._primary; set => this._primary = value; }

        /// <summary>Backing field for <see cref="PrivateIPAddressVersion" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.IPVersion? _privateIPAddressVersion;

        /// <summary>
        /// Available from Api-Version 2017-03-30 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.IPVersion? PrivateIPAddressVersion { get => this._privateIPAddressVersion; set => this._privateIPAddressVersion = value; }

        /// <summary>Backing field for <see cref="PublicIPAddressConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfiguration _publicIPAddressConfiguration;

        /// <summary>The publicIPAddressConfiguration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfiguration PublicIPAddressConfiguration { get => (this._publicIPAddressConfiguration = this._publicIPAddressConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.VirtualMachineScaleSetPublicIPAddressConfiguration()); set => this._publicIPAddressConfiguration = value; }

        /// <summary>The publicIP address configuration name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Inlined)]
        public string PublicIPAddressConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).Name = value ?? null; }

        /// <summary>
        /// Available from Api-Version 2019-07-01 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.IPVersion? PublicIPAddressVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPAddressVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPAddressVersion = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.IPVersion)""); }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Inlined)]
        public string PublicIPPrefixId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefixId; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).PublicIPPrefixId = value ?? null; }

        /// <summary>Specify public IP sku name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.PublicIPAddressSkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.PublicIPAddressSkuName)""); }

        /// <summary>Specify public IP sku tier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.PublicIPAddressSkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationInternal)PublicIPAddressConfiguration).SkuTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.PublicIPAddressSkuTier)""); }

        /// <summary>Backing field for <see cref="Subnet" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IApiEntityReference _subnet;

        /// <summary>Specifies the identifier of the subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IApiEntityReference Subnet { get => (this._subnet = this._subnet ?? new Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ApiEntityReference()); set => this._subnet = value; }

        /// <summary>
        /// The ARM resource id in the form of
        /// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.PropertyOrigin.Inlined)]
        public string SubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IApiEntityReferenceInternal)Subnet).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IApiEntityReferenceInternal)Subnet).Id = value ?? null; }

        /// <summary>
        /// Creates an new <see cref="VirtualMachineScaleSetIPConfigurationProperties" /> instance.
        /// </summary>
        public VirtualMachineScaleSetIPConfigurationProperties()
        {

        }
    }
    /// Describes a virtual machine scale set network profile's IP configuration
    /// properties.
    public partial interface IVirtualMachineScaleSetIPConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies an array of references to backend address pools of application
        /// gateways. A scale set can reference backend address pools of multiple
        /// application gateways. Multiple scale sets cannot use the same application
        /// gateway.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies an array of references to backend address pools of application
        gateways. A scale set can reference backend address pools of multiple
        application gateways. Multiple scale sets cannot use the same application
        gateway.",
        SerializedName = @"applicationGatewayBackendAddressPools",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] ApplicationGatewayBackendAddressPool { get; set; }
        /// <summary>Specifies an array of references to application security group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies an array of references to application security group.",
        SerializedName = @"applicationSecurityGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] ApplicationSecurityGroup { get; set; }
        /// <summary>Specify what happens to the public IP when the VM is deleted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify what happens to the public IP when the VM is deleted",
        SerializedName = @"deleteOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.DeleteOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.DeleteOptions? DeleteOption { get; set; }
        /// <summary>
        /// The Domain name label.The concatenation of the domain name label and vm index
        /// will be the domain name labels of the PublicIPAddress resources that will be
        /// created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Domain name label.The concatenation of the domain name label and vm index
        will be the domain name labels of the PublicIPAddress resources that will be
        created",
        SerializedName = @"domainNameLabel",
        PossibleTypes = new [] { typeof(string) })]
        string DnsSettingDomainNameLabel { get; set; }
        /// <summary>
        /// The Domain name label scope.The concatenation of the hashed domain name label
        /// that generated according to the policy from domain name label scope and vm
        /// index will be the domain name labels of the PublicIPAddress resources that will
        /// be created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Domain name label scope.The concatenation of the hashed domain name label
        that generated according to the policy from domain name label scope and vm
        index will be the domain name labels of the PublicIPAddress resources that will
        be created",
        SerializedName = @"domainNameLabelScope",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.DomainNameLabelScopeTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.DomainNameLabelScopeTypes? DnsSettingDomainNameLabelScope { get; set; }
        /// <summary>The list of IP tags associated with the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of IP tags associated with the public IP address.",
        SerializedName = @"ipTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPTag) })]
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPTag[] IPTag { get; set; }
        /// <summary>The idle timeout of the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The idle timeout of the public IP address.",
        SerializedName = @"idleTimeoutInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? IdleTimeoutInMinute { get; set; }
        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A
        /// scale set can reference backend address pools of one public and one internal
        /// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies an array of references to backend address pools of load balancers. A
        scale set can reference backend address pools of one public and one internal
        load balancer. Multiple scale sets cannot use the same basic sku load balancer.",
        SerializedName = @"loadBalancerBackendAddressPools",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] LoadBalancerBackendAddressPool { get; set; }
        /// <summary>
        /// Specifies an array of references to inbound Nat pools of the load balancers. A
        /// scale set can reference inbound nat pools of one public and one internal load
        /// balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies an array of references to inbound Nat pools of the load balancers. A
        scale set can reference inbound nat pools of one public and one internal load
        balancer. Multiple scale sets cannot use the same basic sku load balancer.",
        SerializedName = @"loadBalancerInboundNatPools",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] LoadBalancerInboundNatPool { get; set; }
        /// <summary>
        /// Specifies the primary network interface in case the virtual machine has more
        /// than 1 network interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the primary network interface in case the virtual machine has more
        than 1 network interface.",
        SerializedName = @"primary",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Primary { get; set; }
        /// <summary>
        /// Available from Api-Version 2017-03-30 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Available from Api-Version 2017-03-30 onwards, it represents whether the
        specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
        values are: 'IPv4' and 'IPv6'.",
        SerializedName = @"privateIPAddressVersion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.IPVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.IPVersion? PrivateIPAddressVersion { get; set; }
        /// <summary>The publicIP address configuration name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publicIP address configuration name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIPAddressConfigurationName { get; set; }
        /// <summary>
        /// Available from Api-Version 2019-07-01 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Available from Api-Version 2019-07-01 onwards, it represents whether the
        specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        values are: 'IPv4' and 'IPv6'.",
        SerializedName = @"publicIPAddressVersion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.IPVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.IPVersion? PublicIPAddressVersion { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIPPrefixId { get; set; }
        /// <summary>Specify public IP sku name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify public IP sku name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.PublicIPAddressSkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.PublicIPAddressSkuName? SkuName { get; set; }
        /// <summary>Specify public IP sku tier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specify public IP sku tier",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.PublicIPAddressSkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.PublicIPAddressSkuTier? SkuTier { get; set; }
        /// <summary>
        /// The ARM resource id in the form of
        /// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM resource id in the form of
        /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get; set; }

    }
    /// Describes a virtual machine scale set network profile's IP configuration
    /// properties.
    internal partial interface IVirtualMachineScaleSetIPConfigurationPropertiesInternal

    {
        /// <summary>
        /// Specifies an array of references to backend address pools of application
        /// gateways. A scale set can reference backend address pools of multiple
        /// application gateways. Multiple scale sets cannot use the same application
        /// gateway.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] ApplicationGatewayBackendAddressPool { get; set; }
        /// <summary>Specifies an array of references to application security group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] ApplicationSecurityGroup { get; set; }
        /// <summary>Specify what happens to the public IP when the VM is deleted</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.DeleteOptions? DeleteOption { get; set; }
        /// <summary>The dns settings to be applied on the publicIP addresses .</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings DnsSetting { get; set; }
        /// <summary>
        /// The Domain name label.The concatenation of the domain name label and vm index
        /// will be the domain name labels of the PublicIPAddress resources that will be
        /// created
        /// </summary>
        string DnsSettingDomainNameLabel { get; set; }
        /// <summary>
        /// The Domain name label scope.The concatenation of the hashed domain name label
        /// that generated according to the policy from domain name label scope and vm
        /// index will be the domain name labels of the PublicIPAddress resources that will
        /// be created
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.DomainNameLabelScopeTypes? DnsSettingDomainNameLabelScope { get; set; }
        /// <summary>The list of IP tags associated with the public IP address.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetIPTag[] IPTag { get; set; }
        /// <summary>The idle timeout of the public IP address.</summary>
        int? IdleTimeoutInMinute { get; set; }
        /// <summary>
        /// Specifies an array of references to backend address pools of load balancers. A
        /// scale set can reference backend address pools of one public and one internal
        /// load balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] LoadBalancerBackendAddressPool { get; set; }
        /// <summary>
        /// Specifies an array of references to inbound Nat pools of the load balancers. A
        /// scale set can reference inbound nat pools of one public and one internal load
        /// balancer. Multiple scale sets cannot use the same basic sku load balancer.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource[] LoadBalancerInboundNatPool { get; set; }
        /// <summary>
        /// Specifies the primary network interface in case the virtual machine has more
        /// than 1 network interface.
        /// </summary>
        bool? Primary { get; set; }
        /// <summary>
        /// Available from Api-Version 2017-03-30 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.IPVersion? PrivateIPAddressVersion { get; set; }
        /// <summary>The publicIPAddressConfiguration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfiguration PublicIPAddressConfiguration { get; set; }
        /// <summary>The publicIP address configuration name.</summary>
        string PublicIPAddressConfigurationName { get; set; }
        /// <summary>
        /// Describes a virtual machines scale set IP Configuration's PublicIPAddress
        /// configuration
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IVirtualMachineScaleSetPublicIPAddressConfigurationProperties PublicIPAddressConfigurationProperty { get; set; }
        /// <summary>
        /// Describes the public IP Sku. It can only be set with OrchestrationMode as
        /// Flexible.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IPublicIPAddressSku PublicIPAddressConfigurationSku { get; set; }
        /// <summary>
        /// Available from Api-Version 2019-07-01 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible
        /// values are: 'IPv4' and 'IPv6'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.IPVersion? PublicIPAddressVersion { get; set; }
        /// <summary>The PublicIPPrefix from which to allocate publicIP addresses.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.ISubResource PublicIPPrefix { get; set; }
        /// <summary>Resource Id</summary>
        string PublicIPPrefixId { get; set; }
        /// <summary>Specify public IP sku name</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.PublicIPAddressSkuName? SkuName { get; set; }
        /// <summary>Specify public IP sku tier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Support.PublicIPAddressSkuTier? SkuTier { get; set; }
        /// <summary>Specifies the identifier of the subnet.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FleetTesting.Models.Api20241101.IApiEntityReference Subnet { get; set; }
        /// <summary>
        /// The ARM resource id in the form of
        /// /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
        /// </summary>
        string SubnetId { get; set; }

    }
}