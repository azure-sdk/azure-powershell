// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Extensions;

    /// <summary>Describes a Virtual Machine Scale Set Extension.</summary>
    public partial class VirtualMachineScaleSetExtension :
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtension,
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api10.ISubResourceReadOnly"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api10.ISubResourceReadOnly __subResourceReadOnly = new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api10.SubResourceReadOnly();

        /// <summary>
        /// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed,
        /// however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public bool? AutoUpgradeMinorVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).AutoUpgradeMinorVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).AutoUpgradeMinorVersion = value ?? default(bool); }

        /// <summary>
        /// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension
        /// available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public bool? EnableAutomaticUpgrade { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).EnableAutomaticUpgrade; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).EnableAutomaticUpgrade = value ?? default(bool); }

        /// <summary>
        /// If a value is provided and is different from the previous value, the extension handler will be forced to update even if
        /// the extension configuration has not changed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public string ForceUpdateTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ForceUpdateTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ForceUpdateTag = value ?? null; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api10.ISubResourceReadOnlyInternal)__subResourceReadOnly).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api10.ISubResourceReadOnlyInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api10.ISubResourceReadOnlyInternal)__subResourceReadOnly).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api10.ISubResourceReadOnlyInternal)__subResourceReadOnly).Id = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionProperties Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.VirtualMachineScaleSetExtensionProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProtectedSettingFromKeyVaultSourceVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api10.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionInternal.ProtectedSettingFromKeyVaultSourceVault { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProtectedSettingFromKeyVaultSourceVault; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProtectedSettingFromKeyVaultSourceVault = value; }

        /// <summary>Internal Acessors for ProtectedSettingsFromKeyVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IKeyVaultSecretReference Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionInternal.ProtectedSettingsFromKeyVault { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProtectedSettingsFromKeyVault; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProtectedSettingsFromKeyVault = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Specifies the type of the extension; an example is "CustomScriptExtension".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public string PropertiesType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).Type = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionProperties _property;

        /// <summary>Describes the properties of a Virtual Machine Scale Set Extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.VirtualMachineScaleSetExtensionProperties()); set => this._property = value; }

        /// <summary>
        /// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.IAny ProtectedSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProtectedSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProtectedSetting = value ?? null /* model class */; }

        /// <summary>The URL referencing a secret in a Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public string ProtectedSettingFromKeyVaultSecretUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProtectedSettingFromKeyVaultSecretUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProtectedSettingFromKeyVaultSecretUrl = value ?? null; }

        /// <summary>
        /// Collection of extension names after which this extension needs to be provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public string[] ProvisionAfterExtension { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProvisionAfterExtension; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProvisionAfterExtension = value ?? null /* arrayOf */; }

        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).ProvisioningState; }

        /// <summary>The name of the extension handler publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public string Publisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).Publisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).Publisher = value ?? null; }

        /// <summary>Json formatted public settings for the extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.IAny Setting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).Setting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).Setting = value ?? null /* model class */; }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public string SourceVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).SourceVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).SourceVaultId = value ?? null; }

        /// <summary>
        /// Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting
        /// to the VM will not be suppressed regardless of this value). The default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public bool? SuppressFailure { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).SuppressFailure; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).SuppressFailure = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Specifies the version of the script handler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.Fleet.PropertyOrigin.Inlined)]
        public string TypeHandlerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).TypeHandlerVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionPropertiesInternal)Property).TypeHandlerVersion = value ?? null; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__subResourceReadOnly), __subResourceReadOnly);
            await eventListener.AssertObjectIsValid(nameof(__subResourceReadOnly), __subResourceReadOnly);
        }

        /// <summary>Creates an new <see cref="VirtualMachineScaleSetExtension" /> instance.</summary>
        public VirtualMachineScaleSetExtension()
        {

        }
    }
    /// Describes a Virtual Machine Scale Set Extension.
    public partial interface IVirtualMachineScaleSetExtension :
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api10.ISubResourceReadOnly
    {
        /// <summary>
        /// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed,
        /// however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.",
        SerializedName = @"autoUpgradeMinorVersion",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoUpgradeMinorVersion { get; set; }
        /// <summary>
        /// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension
        /// available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.",
        SerializedName = @"enableAutomaticUpgrade",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAutomaticUpgrade { get; set; }
        /// <summary>
        /// If a value is provided and is different from the previous value, the extension handler will be forced to update even if
        /// the extension configuration has not changed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.",
        SerializedName = @"forceUpdateTag",
        PossibleTypes = new [] { typeof(string) })]
        string ForceUpdateTag { get; set; }
        /// <summary>The name of the extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the extension.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Specifies the type of the extension; an example is "CustomScriptExtension".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the type of the extension; an example is ""CustomScriptExtension"".",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesType { get; set; }
        /// <summary>
        /// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
        SerializedName = @"protectedSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.IAny ProtectedSetting { get; set; }
        /// <summary>The URL referencing a secret in a Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL referencing a secret in a Key Vault.",
        SerializedName = @"secretUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ProtectedSettingFromKeyVaultSecretUrl { get; set; }
        /// <summary>
        /// Collection of extension names after which this extension needs to be provisioned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of extension names after which this extension needs to be provisioned.",
        SerializedName = @"provisionAfterExtensions",
        PossibleTypes = new [] { typeof(string) })]
        string[] ProvisionAfterExtension { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The name of the extension handler publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the extension handler publisher.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string Publisher { get; set; }
        /// <summary>Json formatted public settings for the extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Json formatted public settings for the extension.",
        SerializedName = @"settings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.IAny Setting { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SourceVaultId { get; set; }
        /// <summary>
        /// Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting
        /// to the VM will not be suppressed regardless of this value). The default is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.",
        SerializedName = @"suppressFailures",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SuppressFailure { get; set; }
        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>Specifies the version of the script handler.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Fleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the version of the script handler.",
        SerializedName = @"typeHandlerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string TypeHandlerVersion { get; set; }

    }
    /// Describes a Virtual Machine Scale Set Extension.
    internal partial interface IVirtualMachineScaleSetExtensionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api10.ISubResourceReadOnlyInternal
    {
        /// <summary>
        /// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed,
        /// however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        /// </summary>
        bool? AutoUpgradeMinorVersion { get; set; }
        /// <summary>
        /// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension
        /// available.
        /// </summary>
        bool? EnableAutomaticUpgrade { get; set; }
        /// <summary>
        /// If a value is provided and is different from the previous value, the extension handler will be forced to update even if
        /// the extension configuration has not changed.
        /// </summary>
        string ForceUpdateTag { get; set; }
        /// <summary>The name of the extension.</summary>
        string Name { get; set; }
        /// <summary>Specifies the type of the extension; an example is "CustomScriptExtension".</summary>
        string PropertiesType { get; set; }
        /// <summary>Describes the properties of a Virtual Machine Scale Set Extension.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IVirtualMachineScaleSetExtensionProperties Property { get; set; }
        /// <summary>
        /// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.IAny ProtectedSetting { get; set; }
        /// <summary>The URL referencing a secret in a Key Vault.</summary>
        string ProtectedSettingFromKeyVaultSecretUrl { get; set; }
        /// <summary>The relative URL of the Key Vault containing the secret.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api10.ISubResource ProtectedSettingFromKeyVaultSourceVault { get; set; }
        /// <summary>
        /// The extensions protected settings that are passed by reference, and consumed from key vault
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.Api20230901.IKeyVaultSecretReference ProtectedSettingsFromKeyVault { get; set; }
        /// <summary>
        /// Collection of extension names after which this extension needs to be provisioned.
        /// </summary>
        string[] ProvisionAfterExtension { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The name of the extension handler publisher.</summary>
        string Publisher { get; set; }
        /// <summary>Json formatted public settings for the extension.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Fleet.Models.IAny Setting { get; set; }
        /// <summary>Resource Id</summary>
        string SourceVaultId { get; set; }
        /// <summary>
        /// Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting
        /// to the VM will not be suppressed regardless of this value). The default is false.
        /// </summary>
        bool? SuppressFailure { get; set; }
        /// <summary>Resource type</summary>
        string Type { get; set; }
        /// <summary>Specifies the version of the script handler.</summary>
        string TypeHandlerVersion { get; set; }

    }
}