// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20220210Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Extensions;

    /// <summary>
    /// The preferred settings for updating the agent components (RDAgent, Geneva Monitoring agent, and side-by-side stack) on
    /// session hosts.
    /// </summary>
    public partial class AgentUpdatePatchProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20220210Preview.IAgentUpdatePatchProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20220210Preview.IAgentUpdatePatchPropertiesInternal
    {

        /// <summary>Backing field for <see cref="MaintenanceWindow" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20220210Preview.IMaintenanceWindowPatchProperties[] _maintenanceWindow;

        /// <summary>
        /// The maintenance windows (day and time) for updating the agent components. At least 1 window must be specified. Optionally,
        /// a 2nd window can be specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20220210Preview.IMaintenanceWindowPatchProperties[] MaintenanceWindow { get => this._maintenanceWindow; set => this._maintenanceWindow = value; }

        /// <summary>Backing field for <see cref="MaintenanceWindowTimeZone" /> property.</summary>
        private string _maintenanceWindowTimeZone;

        /// <summary>
        /// The time zone for updating the agent components. Valid time zones can be found here: https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0.
        /// A time zone must be specified if useSessionHostLocalTime is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public string MaintenanceWindowTimeZone { get => this._maintenanceWindowTimeZone; set => this._maintenanceWindowTimeZone = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHostComponentUpdateType? _type;

        /// <summary>
        /// The preferred mechanism for updating the agent components. This is either Scheduled or Default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHostComponentUpdateType? Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="UseSessionHostLocalTime" /> property.</summary>
        private bool? _useSessionHostLocalTime;

        /// <summary>
        /// Boolean indicating whether to update the agent components in the local time zone of each session host in the host pool.
        /// By default, this is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public bool? UseSessionHostLocalTime { get => this._useSessionHostLocalTime; set => this._useSessionHostLocalTime = value; }

        /// <summary>Creates an new <see cref="AgentUpdatePatchProperties" /> instance.</summary>
        public AgentUpdatePatchProperties()
        {

        }
    }
    /// The preferred settings for updating the agent components (RDAgent, Geneva Monitoring agent, and side-by-side stack) on
    /// session hosts.
    public partial interface IAgentUpdatePatchProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The maintenance windows (day and time) for updating the agent components. At least 1 window must be specified. Optionally,
        /// a 2nd window can be specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maintenance windows (day and time) for updating the agent components. At least 1 window must be specified. Optionally, a 2nd window can be specified.",
        SerializedName = @"maintenanceWindows",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20220210Preview.IMaintenanceWindowPatchProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20220210Preview.IMaintenanceWindowPatchProperties[] MaintenanceWindow { get; set; }
        /// <summary>
        /// The time zone for updating the agent components. Valid time zones can be found here: https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0.
        /// A time zone must be specified if useSessionHostLocalTime is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time zone for updating the agent components. Valid time zones can be found here: https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. A time zone must be specified if useSessionHostLocalTime is false.",
        SerializedName = @"maintenanceWindowTimeZone",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceWindowTimeZone { get; set; }
        /// <summary>
        /// The preferred mechanism for updating the agent components. This is either Scheduled or Default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The preferred mechanism for updating the agent components. This is either Scheduled or Default.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHostComponentUpdateType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHostComponentUpdateType? Type { get; set; }
        /// <summary>
        /// Boolean indicating whether to update the agent components in the local time zone of each session host in the host pool.
        /// By default, this is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating whether to update the agent components in the local time zone of each session host in the host pool. By default, this is false.",
        SerializedName = @"useSessionHostLocalTime",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UseSessionHostLocalTime { get; set; }

    }
    /// The preferred settings for updating the agent components (RDAgent, Geneva Monitoring agent, and side-by-side stack) on
    /// session hosts.
    internal partial interface IAgentUpdatePatchPropertiesInternal

    {
        /// <summary>
        /// The maintenance windows (day and time) for updating the agent components. At least 1 window must be specified. Optionally,
        /// a 2nd window can be specified.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20220210Preview.IMaintenanceWindowPatchProperties[] MaintenanceWindow { get; set; }
        /// <summary>
        /// The time zone for updating the agent components. Valid time zones can be found here: https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0.
        /// A time zone must be specified if useSessionHostLocalTime is false.
        /// </summary>
        string MaintenanceWindowTimeZone { get; set; }
        /// <summary>
        /// The preferred mechanism for updating the agent components. This is either Scheduled or Default.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHostComponentUpdateType? Type { get; set; }
        /// <summary>
        /// Boolean indicating whether to update the agent components in the local time zone of each session host in the host pool.
        /// By default, this is false.
        /// </summary>
        bool? UseSessionHostLocalTime { get; set; }

    }
}