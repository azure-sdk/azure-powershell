// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Extensions;

    /// <summary>A ScalingPlanPersonalSchedule.</summary>
    public partial class ScalingPlanPersonalScheduleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalScheduleProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal
    {

        /// <summary>Backing field for <see cref="DaysOfWeek" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.DayOfWeek[] _daysOfWeek;

        /// <summary>Set of days of the week on which this schedule is active.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.DayOfWeek[] DaysOfWeek { get => this._daysOfWeek; set => this._daysOfWeek = value; }

        /// <summary>Internal Acessors for OffPeakStartTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal.OffPeakStartTime { get => (this._offPeakStartTime = this._offPeakStartTime ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.Time()); set { {_offPeakStartTime = value;} } }

        /// <summary>Internal Acessors for PeakStartTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal.PeakStartTime { get => (this._peakStartTime = this._peakStartTime ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.Time()); set { {_peakStartTime = value;} } }

        /// <summary>Internal Acessors for RampDownStartTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal.RampDownStartTime { get => (this._rampDownStartTime = this._rampDownStartTime ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.Time()); set { {_rampDownStartTime = value;} } }

        /// <summary>Internal Acessors for RampUpStartTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal.RampUpStartTime { get => (this._rampUpStartTime = this._rampUpStartTime ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.Time()); set { {_rampUpStartTime = value;} } }

        /// <summary>Backing field for <see cref="OffPeakActionOnDisconnect" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? _offPeakActionOnDisconnect;

        /// <summary>Action to be taken after a user disconnect during the off-peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnDisconnect { get => this._offPeakActionOnDisconnect; set => this._offPeakActionOnDisconnect = value; }

        /// <summary>Backing field for <see cref="OffPeakActionOnLogoff" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? _offPeakActionOnLogoff;

        /// <summary>Action to be taken after a logoff during the off-peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnLogoff { get => this._offPeakActionOnLogoff; set => this._offPeakActionOnLogoff = value; }

        /// <summary>Backing field for <see cref="OffPeakMinutesToWaitOnDisconnect" /> property.</summary>
        private int? _offPeakMinutesToWaitOnDisconnect;

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public int? OffPeakMinutesToWaitOnDisconnect { get => this._offPeakMinutesToWaitOnDisconnect; set => this._offPeakMinutesToWaitOnDisconnect = value; }

        /// <summary>Backing field for <see cref="OffPeakMinutesToWaitOnLogoff" /> property.</summary>
        private int? _offPeakMinutesToWaitOnLogoff;

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public int? OffPeakMinutesToWaitOnLogoff { get => this._offPeakMinutesToWaitOnLogoff; set => this._offPeakMinutesToWaitOnLogoff = value; }

        /// <summary>Backing field for <see cref="OffPeakStartTime" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime _offPeakStartTime;

        /// <summary>Starting time for off-peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime OffPeakStartTime { get => (this._offPeakStartTime = this._offPeakStartTime ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.Time()); set => this._offPeakStartTime = value; }

        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? OffPeakStartTimeHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)OffPeakStartTime).Hour; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)OffPeakStartTime).Hour = value ?? default(int); }

        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? OffPeakStartTimeMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)OffPeakStartTime).Minute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)OffPeakStartTime).Minute = value ?? default(int); }

        /// <summary>Backing field for <see cref="PeakActionOnDisconnect" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? _peakActionOnDisconnect;

        /// <summary>Action to be taken after a user disconnect during the peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnDisconnect { get => this._peakActionOnDisconnect; set => this._peakActionOnDisconnect = value; }

        /// <summary>Backing field for <see cref="PeakActionOnLogoff" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? _peakActionOnLogoff;

        /// <summary>Action to be taken after a logoff during the peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnLogoff { get => this._peakActionOnLogoff; set => this._peakActionOnLogoff = value; }

        /// <summary>Backing field for <see cref="PeakMinutesToWaitOnDisconnect" /> property.</summary>
        private int? _peakMinutesToWaitOnDisconnect;

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public int? PeakMinutesToWaitOnDisconnect { get => this._peakMinutesToWaitOnDisconnect; set => this._peakMinutesToWaitOnDisconnect = value; }

        /// <summary>Backing field for <see cref="PeakMinutesToWaitOnLogoff" /> property.</summary>
        private int? _peakMinutesToWaitOnLogoff;

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public int? PeakMinutesToWaitOnLogoff { get => this._peakMinutesToWaitOnLogoff; set => this._peakMinutesToWaitOnLogoff = value; }

        /// <summary>Backing field for <see cref="PeakStartTime" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime _peakStartTime;

        /// <summary>Starting time for peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime PeakStartTime { get => (this._peakStartTime = this._peakStartTime ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.Time()); set => this._peakStartTime = value; }

        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? PeakStartTimeHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)PeakStartTime).Hour; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)PeakStartTime).Hour = value ?? default(int); }

        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? PeakStartTimeMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)PeakStartTime).Minute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)PeakStartTime).Minute = value ?? default(int); }

        /// <summary>Backing field for <see cref="RampDownActionOnDisconnect" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? _rampDownActionOnDisconnect;

        /// <summary>Action to be taken after a user disconnect during the ramp down period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnDisconnect { get => this._rampDownActionOnDisconnect; set => this._rampDownActionOnDisconnect = value; }

        /// <summary>Backing field for <see cref="RampDownActionOnLogoff" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? _rampDownActionOnLogoff;

        /// <summary>Action to be taken after a logoff during the ramp down period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnLogoff { get => this._rampDownActionOnLogoff; set => this._rampDownActionOnLogoff = value; }

        /// <summary>Backing field for <see cref="RampDownMinutesToWaitOnDisconnect" /> property.</summary>
        private int? _rampDownMinutesToWaitOnDisconnect;

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp
        /// down period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public int? RampDownMinutesToWaitOnDisconnect { get => this._rampDownMinutesToWaitOnDisconnect; set => this._rampDownMinutesToWaitOnDisconnect = value; }

        /// <summary>Backing field for <see cref="RampDownMinutesToWaitOnLogoff" /> property.</summary>
        private int? _rampDownMinutesToWaitOnLogoff;

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp
        /// down period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public int? RampDownMinutesToWaitOnLogoff { get => this._rampDownMinutesToWaitOnLogoff; set => this._rampDownMinutesToWaitOnLogoff = value; }

        /// <summary>Backing field for <see cref="RampDownStartTime" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime _rampDownStartTime;

        /// <summary>Starting time for ramp down period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime RampDownStartTime { get => (this._rampDownStartTime = this._rampDownStartTime ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.Time()); set => this._rampDownStartTime = value; }

        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? RampDownStartTimeHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)RampDownStartTime).Hour; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)RampDownStartTime).Hour = value ?? default(int); }

        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? RampDownStartTimeMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)RampDownStartTime).Minute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)RampDownStartTime).Minute = value ?? default(int); }

        /// <summary>Backing field for <see cref="RampUpStartTime" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime _rampUpStartTime;

        /// <summary>Starting time for ramp up period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime RampUpStartTime { get => (this._rampUpStartTime = this._rampUpStartTime ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.Time()); set => this._rampUpStartTime = value; }

        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? RampUpStartTimeHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)RampUpStartTime).Hour; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)RampUpStartTime).Hour = value ?? default(int); }

        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? RampUpStartTimeMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)RampUpStartTime).Minute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITimeInternal)RampUpStartTime).Minute = value ?? default(int); }

        /// <summary>Creates an new <see cref="ScalingPlanPersonalScheduleProperties" /> instance.</summary>
        public ScalingPlanPersonalScheduleProperties()
        {

        }
    }
    /// A ScalingPlanPersonalSchedule.
    public partial interface IScalingPlanPersonalScheduleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.IJsonSerializable
    {
        /// <summary>Set of days of the week on which this schedule is active.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set of days of the week on which this schedule is active.",
        SerializedName = @"daysOfWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.DayOfWeek) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.DayOfWeek[] DaysOfWeek { get; set; }
        /// <summary>Action to be taken after a user disconnect during the off-peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a user disconnect during the off-peak period.",
        SerializedName = @"offPeakActionOnDisconnect",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the off-peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a logoff during the off-peak period.",
        SerializedName = @"offPeakActionOnLogoff",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak period.",
        SerializedName = @"offPeakMinutesToWaitOnDisconnect",
        PossibleTypes = new [] { typeof(int) })]
        int? OffPeakMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak period.",
        SerializedName = @"offPeakMinutesToWaitOnLogoff",
        PossibleTypes = new [] { typeof(int) })]
        int? OffPeakMinutesToWaitOnLogoff { get; set; }
        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hour.",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? OffPeakStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minute.",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? OffPeakStartTimeMinute { get; set; }
        /// <summary>Action to be taken after a user disconnect during the peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a user disconnect during the peak period.",
        SerializedName = @"peakActionOnDisconnect",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a logoff during the peak period.",
        SerializedName = @"peakActionOnLogoff",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak period.",
        SerializedName = @"peakMinutesToWaitOnDisconnect",
        PossibleTypes = new [] { typeof(int) })]
        int? PeakMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user logs off during the peak period.",
        SerializedName = @"peakMinutesToWaitOnLogoff",
        PossibleTypes = new [] { typeof(int) })]
        int? PeakMinutesToWaitOnLogoff { get; set; }
        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hour.",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? PeakStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minute.",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? PeakStartTimeMinute { get; set; }
        /// <summary>Action to be taken after a user disconnect during the ramp down period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a user disconnect during the ramp down period.",
        SerializedName = @"rampDownActionOnDisconnect",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the ramp down period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a logoff during the ramp down period.",
        SerializedName = @"rampDownActionOnLogoff",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp
        /// down period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp down period.",
        SerializedName = @"rampDownMinutesToWaitOnDisconnect",
        PossibleTypes = new [] { typeof(int) })]
        int? RampDownMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp
        /// down period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp down period.",
        SerializedName = @"rampDownMinutesToWaitOnLogoff",
        PossibleTypes = new [] { typeof(int) })]
        int? RampDownMinutesToWaitOnLogoff { get; set; }
        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hour.",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? RampDownStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minute.",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? RampDownStartTimeMinute { get; set; }
        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hour.",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? RampUpStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minute.",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? RampUpStartTimeMinute { get; set; }

    }
    /// A ScalingPlanPersonalSchedule.
    internal partial interface IScalingPlanPersonalSchedulePropertiesInternal

    {
        /// <summary>Set of days of the week on which this schedule is active.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.DayOfWeek[] DaysOfWeek { get; set; }
        /// <summary>Action to be taken after a user disconnect during the off-peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the off-peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak
        /// period.
        /// </summary>
        int? OffPeakMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak
        /// period.
        /// </summary>
        int? OffPeakMinutesToWaitOnLogoff { get; set; }
        /// <summary>Starting time for off-peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime OffPeakStartTime { get; set; }
        /// <summary>The hour.</summary>
        int? OffPeakStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        int? OffPeakStartTimeMinute { get; set; }
        /// <summary>Action to be taken after a user disconnect during the peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak
        /// period.
        /// </summary>
        int? PeakMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the peak
        /// period.
        /// </summary>
        int? PeakMinutesToWaitOnLogoff { get; set; }
        /// <summary>Starting time for peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime PeakStartTime { get; set; }
        /// <summary>The hour.</summary>
        int? PeakStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        int? PeakStartTimeMinute { get; set; }
        /// <summary>Action to be taken after a user disconnect during the ramp down period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the ramp down period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp
        /// down period.
        /// </summary>
        int? RampDownMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp
        /// down period.
        /// </summary>
        int? RampDownMinutesToWaitOnLogoff { get; set; }
        /// <summary>Starting time for ramp down period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime RampDownStartTime { get; set; }
        /// <summary>The hour.</summary>
        int? RampDownStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        int? RampDownStartTimeMinute { get; set; }
        /// <summary>Starting time for ramp up period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime RampUpStartTime { get; set; }
        /// <summary>The hour.</summary>
        int? RampUpStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        int? RampUpStartTimeMinute { get; set; }

    }
}