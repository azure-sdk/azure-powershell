// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Extensions;

    /// <summary>ScalingPlanPersonalSchedule properties that can be patched.</summary>
    public partial class ScalingPlanPersonalSchedulePatch :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePatch,
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePatchInternal
    {

        /// <summary>Set of days of the week on which this schedule is active.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.DayOfWeek[] DaysOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).DaysOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).DaysOfWeek = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for OffPeakStartTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePatchInternal.OffPeakStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakStartTime = value; }

        /// <summary>Internal Acessors for PeakStartTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePatchInternal.PeakStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakStartTime = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalScheduleProperties Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePatchInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ScalingPlanPersonalScheduleProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RampDownStartTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePatchInternal.RampDownStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownStartTime = value; }

        /// <summary>Internal Acessors for RampUpStartTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePatchInternal.RampUpStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampUpStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampUpStartTime = value; }

        /// <summary>Action to be taken after a user disconnect during the off-peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnDisconnect { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakActionOnDisconnect; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakActionOnDisconnect = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation)""); }

        /// <summary>Action to be taken after a logoff during the off-peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnLogoff { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakActionOnLogoff; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakActionOnLogoff = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation)""); }

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? OffPeakMinutesToWaitOnDisconnect { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakMinutesToWaitOnDisconnect; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakMinutesToWaitOnDisconnect = value ?? default(int); }

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? OffPeakMinutesToWaitOnLogoff { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakMinutesToWaitOnLogoff; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakMinutesToWaitOnLogoff = value ?? default(int); }

        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? OffPeakStartTimeHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakStartTimeHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakStartTimeHour = value ?? default(int); }

        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? OffPeakStartTimeMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakStartTimeMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).OffPeakStartTimeMinute = value ?? default(int); }

        /// <summary>Action to be taken after a user disconnect during the peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnDisconnect { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakActionOnDisconnect; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakActionOnDisconnect = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation)""); }

        /// <summary>Action to be taken after a logoff during the peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnLogoff { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakActionOnLogoff; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakActionOnLogoff = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation)""); }

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? PeakMinutesToWaitOnDisconnect { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakMinutesToWaitOnDisconnect; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakMinutesToWaitOnDisconnect = value ?? default(int); }

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? PeakMinutesToWaitOnLogoff { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakMinutesToWaitOnLogoff; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakMinutesToWaitOnLogoff = value ?? default(int); }

        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? PeakStartTimeHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakStartTimeHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakStartTimeHour = value ?? default(int); }

        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? PeakStartTimeMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakStartTimeMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).PeakStartTimeMinute = value ?? default(int); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalScheduleProperties _property;

        /// <summary>Detailed properties for ScalingPlanPersonalSchedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalScheduleProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ScalingPlanPersonalScheduleProperties()); set => this._property = value; }

        /// <summary>Action to be taken after a user disconnect during the ramp down period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnDisconnect { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownActionOnDisconnect; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownActionOnDisconnect = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation)""); }

        /// <summary>Action to be taken after a logoff during the ramp down period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnLogoff { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownActionOnLogoff; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownActionOnLogoff = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation)""); }

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp
        /// down period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? RampDownMinutesToWaitOnDisconnect { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownMinutesToWaitOnDisconnect; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownMinutesToWaitOnDisconnect = value ?? default(int); }

        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp
        /// down period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? RampDownMinutesToWaitOnLogoff { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownMinutesToWaitOnLogoff; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownMinutesToWaitOnLogoff = value ?? default(int); }

        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? RampDownStartTimeHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownStartTimeHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownStartTimeHour = value ?? default(int); }

        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? RampDownStartTimeMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownStartTimeMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampDownStartTimeMinute = value ?? default(int); }

        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? RampUpStartTimeHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampUpStartTimeHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampUpStartTimeHour = value ?? default(int); }

        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? RampUpStartTimeMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampUpStartTimeMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalSchedulePropertiesInternal)Property).RampUpStartTimeMinute = value ?? default(int); }

        /// <summary>Creates an new <see cref="ScalingPlanPersonalSchedulePatch" /> instance.</summary>
        public ScalingPlanPersonalSchedulePatch()
        {

        }
    }
    /// ScalingPlanPersonalSchedule properties that can be patched.
    public partial interface IScalingPlanPersonalSchedulePatch :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.IJsonSerializable
    {
        /// <summary>Set of days of the week on which this schedule is active.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set of days of the week on which this schedule is active.",
        SerializedName = @"daysOfWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.DayOfWeek) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.DayOfWeek[] DaysOfWeek { get; set; }
        /// <summary>Action to be taken after a user disconnect during the off-peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a user disconnect during the off-peak period.",
        SerializedName = @"offPeakActionOnDisconnect",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the off-peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a logoff during the off-peak period.",
        SerializedName = @"offPeakActionOnLogoff",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak period.",
        SerializedName = @"offPeakMinutesToWaitOnDisconnect",
        PossibleTypes = new [] { typeof(int) })]
        int? OffPeakMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak period.",
        SerializedName = @"offPeakMinutesToWaitOnLogoff",
        PossibleTypes = new [] { typeof(int) })]
        int? OffPeakMinutesToWaitOnLogoff { get; set; }
        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hour.",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? OffPeakStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minute.",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? OffPeakStartTimeMinute { get; set; }
        /// <summary>Action to be taken after a user disconnect during the peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a user disconnect during the peak period.",
        SerializedName = @"peakActionOnDisconnect",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the peak period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a logoff during the peak period.",
        SerializedName = @"peakActionOnLogoff",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak period.",
        SerializedName = @"peakMinutesToWaitOnDisconnect",
        PossibleTypes = new [] { typeof(int) })]
        int? PeakMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the peak
        /// period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user logs off during the peak period.",
        SerializedName = @"peakMinutesToWaitOnLogoff",
        PossibleTypes = new [] { typeof(int) })]
        int? PeakMinutesToWaitOnLogoff { get; set; }
        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hour.",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? PeakStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minute.",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? PeakStartTimeMinute { get; set; }
        /// <summary>Action to be taken after a user disconnect during the ramp down period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a user disconnect during the ramp down period.",
        SerializedName = @"rampDownActionOnDisconnect",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the ramp down period.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Action to be taken after a logoff during the ramp down period.",
        SerializedName = @"rampDownActionOnLogoff",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp
        /// down period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp down period.",
        SerializedName = @"rampDownMinutesToWaitOnDisconnect",
        PossibleTypes = new [] { typeof(int) })]
        int? RampDownMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp
        /// down period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp down period.",
        SerializedName = @"rampDownMinutesToWaitOnLogoff",
        PossibleTypes = new [] { typeof(int) })]
        int? RampDownMinutesToWaitOnLogoff { get; set; }
        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hour.",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? RampDownStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minute.",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? RampDownStartTimeMinute { get; set; }
        /// <summary>The hour.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hour.",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? RampUpStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minute.",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? RampUpStartTimeMinute { get; set; }

    }
    /// ScalingPlanPersonalSchedule properties that can be patched.
    internal partial interface IScalingPlanPersonalSchedulePatchInternal

    {
        /// <summary>Set of days of the week on which this schedule is active.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.DayOfWeek[] DaysOfWeek { get; set; }
        /// <summary>Action to be taken after a user disconnect during the off-peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the off-peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? OffPeakActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak
        /// period.
        /// </summary>
        int? OffPeakMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak
        /// period.
        /// </summary>
        int? OffPeakMinutesToWaitOnLogoff { get; set; }
        /// <summary>Starting time for off-peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime OffPeakStartTime { get; set; }
        /// <summary>The hour.</summary>
        int? OffPeakStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        int? OffPeakStartTimeMinute { get; set; }
        /// <summary>Action to be taken after a user disconnect during the peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? PeakActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak
        /// period.
        /// </summary>
        int? PeakMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the peak
        /// period.
        /// </summary>
        int? PeakMinutesToWaitOnLogoff { get; set; }
        /// <summary>Starting time for peak period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime PeakStartTime { get; set; }
        /// <summary>The hour.</summary>
        int? PeakStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        int? PeakStartTimeMinute { get; set; }
        /// <summary>Detailed properties for ScalingPlanPersonalSchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.IScalingPlanPersonalScheduleProperties Property { get; set; }
        /// <summary>Action to be taken after a user disconnect during the ramp down period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnDisconnect { get; set; }
        /// <summary>Action to be taken after a logoff during the ramp down period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.SessionHandlingOperation? RampDownActionOnLogoff { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp
        /// down period.
        /// </summary>
        int? RampDownMinutesToWaitOnDisconnect { get; set; }
        /// <summary>
        /// The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp
        /// down period.
        /// </summary>
        int? RampDownMinutesToWaitOnLogoff { get; set; }
        /// <summary>Starting time for ramp down period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime RampDownStartTime { get; set; }
        /// <summary>The hour.</summary>
        int? RampDownStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        int? RampDownStartTimeMinute { get; set; }
        /// <summary>Starting time for ramp up period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20210903Preview.ITime RampUpStartTime { get; set; }
        /// <summary>The hour.</summary>
        int? RampUpStartTimeHour { get; set; }
        /// <summary>The minute.</summary>
        int? RampUpStartTimeMinute { get; set; }

    }
}