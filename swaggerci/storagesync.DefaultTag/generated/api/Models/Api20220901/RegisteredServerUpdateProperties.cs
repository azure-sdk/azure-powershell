// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>RegisteredServer Update Properties object.</summary>
    public partial class RegisteredServerUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220901.IRegisteredServerUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20220901.IRegisteredServerUpdatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private bool? _identity;

        /// <summary>Apply server with newly discovered ApplicationId if available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public bool? Identity { get => this._identity; set => this._identity = value; }

        /// <summary>Creates an new <see cref="RegisteredServerUpdateProperties" /> instance.</summary>
        public RegisteredServerUpdateProperties()
        {

        }
    }
    /// RegisteredServer Update Properties object.
    public partial interface IRegisteredServerUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable
    {
        /// <summary>Apply server with newly discovered ApplicationId if available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Apply server with newly discovered ApplicationId if available.",
        SerializedName = @"identity",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Identity { get; set; }

    }
    /// RegisteredServer Update Properties object.
    internal partial interface IRegisteredServerUpdatePropertiesInternal

    {
        /// <summary>Apply server with newly discovered ApplicationId if available.</summary>
        bool? Identity { get; set; }

    }
}