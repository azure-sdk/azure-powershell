// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Extensions;

    /// <summary>The remediation definition.</summary>
    public partial class Remediation :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediation,
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal
    {

        /// <summary>
        /// The remediation correlation Id. Can be used to find events related to the remediation in the activity log.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string CorrelationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).CorrelationId; }

        /// <summary>The time at which the remediation was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).CreatedOn; }

        /// <summary>The number of deployments required by the remediation that have failed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public int? DeploymentStatusFailedDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).DeploymentStatusFailedDeployment; }

        /// <summary>The number of deployments required by the remediation that have succeeded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public int? DeploymentStatusSuccessfulDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).DeploymentStatusSuccessfulDeployment; }

        /// <summary>The number of deployments required by the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public int? DeploymentStatusTotalDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).DeploymentStatusTotalDeployment; }

        /// <summary>
        /// A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage
        /// of failed remediation operations (i.e. failed deployments) exceeds this threshold.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public float? FailureThresholdPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).FailureThresholdPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).FailureThresholdPercentage = value ?? default(float); }

        /// <summary>The resource locations that will be remediated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string[] FilterLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).FilterLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).FilterLocation = value ?? null /* arrayOf */; }

        /// <summary>
        /// The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance
        /// is set to ReEvaluateCompliance, and cannot be empty if provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string[] FilterResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).FilterResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).FilterResourceId = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The ID of the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>The time at which the remediation was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastUpdatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).LastUpdatedOn; }

        /// <summary>Internal Acessors for CorrelationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.CorrelationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).CorrelationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).CorrelationId = value; }

        /// <summary>Internal Acessors for CreatedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.CreatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).CreatedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).CreatedOn = value; }

        /// <summary>Internal Acessors for DeploymentStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationDeploymentSummary Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.DeploymentStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).DeploymentStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).DeploymentStatus = value; }

        /// <summary>Internal Acessors for DeploymentStatusFailedDeployment</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.DeploymentStatusFailedDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).DeploymentStatusFailedDeployment; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).DeploymentStatusFailedDeployment = value; }

        /// <summary>Internal Acessors for DeploymentStatusSuccessfulDeployment</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.DeploymentStatusSuccessfulDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).DeploymentStatusSuccessfulDeployment; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).DeploymentStatusSuccessfulDeployment = value; }

        /// <summary>Internal Acessors for DeploymentStatusTotalDeployment</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.DeploymentStatusTotalDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).DeploymentStatusTotalDeployment; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).DeploymentStatusTotalDeployment = value; }

        /// <summary>Internal Acessors for FailureThreshold</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesFailureThreshold Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.FailureThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).FailureThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).FailureThreshold = value; }

        /// <summary>Internal Acessors for Filter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationFilters Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.Filter { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).Filter; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).Filter = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for LastUpdatedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.LastUpdatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).LastUpdatedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).LastUpdatedOn = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationProperties Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.RemediationProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for StatusMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.StatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).StatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).StatusMessage = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemData Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>
        /// Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation.
        /// If not provided, the default parallel deployments value is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public int? ParallelDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).ParallelDeployment; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).ParallelDeployment = value ?? default(int); }

        /// <summary>The resource ID of the policy assignment that should be remediated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string PolicyAssignmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).PolicyAssignmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).PolicyAssignmentId = value ?? null; }

        /// <summary>
        /// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment
        /// being remediated assigns a policy set definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string PolicyDefinitionReferenceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).PolicyDefinitionReferenceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).PolicyDefinitionReferenceId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationProperties _property;

        /// <summary>Properties for the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.RemediationProperties()); set => this._property = value; }

        /// <summary>
        /// The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values
        /// are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource
        /// count is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public int? ResourceCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).ResourceCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).ResourceCount = value ?? default(int); }

        /// <summary>
        /// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode? ResourceDiscoveryMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).ResourceDiscoveryMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).ResourceDiscoveryMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode)""); }

        /// <summary>
        /// The remediation status message. Provides additional details regarding the state of the remediation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string StatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesInternal)Property).StatusMessage; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemData _systemData;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType)""); }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="Remediation" /> instance.</summary>
        public Remediation()
        {

        }
    }
    /// The remediation definition.
    public partial interface IRemediation :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The remediation correlation Id. Can be used to find events related to the remediation in the activity log.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
        SerializedName = @"correlationId",
        PossibleTypes = new [] { typeof(string) })]
        string CorrelationId { get;  }
        /// <summary>The time at which the remediation was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time at which the remediation was created.",
        SerializedName = @"createdOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedOn { get;  }
        /// <summary>The number of deployments required by the remediation that have failed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of deployments required by the remediation that have failed.",
        SerializedName = @"failedDeployments",
        PossibleTypes = new [] { typeof(int) })]
        int? DeploymentStatusFailedDeployment { get;  }
        /// <summary>The number of deployments required by the remediation that have succeeded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of deployments required by the remediation that have succeeded.",
        SerializedName = @"successfulDeployments",
        PossibleTypes = new [] { typeof(int) })]
        int? DeploymentStatusSuccessfulDeployment { get;  }
        /// <summary>The number of deployments required by the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of deployments required by the remediation.",
        SerializedName = @"totalDeployments",
        PossibleTypes = new [] { typeof(int) })]
        int? DeploymentStatusTotalDeployment { get;  }
        /// <summary>
        /// A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage
        /// of failed remediation operations (i.e. failed deployments) exceeds this threshold.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold.",
        SerializedName = @"percentage",
        PossibleTypes = new [] { typeof(float) })]
        float? FailureThresholdPercentage { get; set; }
        /// <summary>The resource locations that will be remediated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource locations that will be remediated.",
        SerializedName = @"locations",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterLocation { get; set; }
        /// <summary>
        /// The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance
        /// is set to ReEvaluateCompliance, and cannot be empty if provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance is set to ReEvaluateCompliance, and cannot be empty if provided.",
        SerializedName = @"resourceIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterResourceId { get; set; }
        /// <summary>The ID of the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the remediation.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>The time at which the remediation was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time at which the remediation was last updated.",
        SerializedName = @"lastUpdatedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedOn { get;  }
        /// <summary>The name of the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the remediation.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>
        /// Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation.
        /// If not provided, the default parallel deployments value is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used.",
        SerializedName = @"parallelDeployments",
        PossibleTypes = new [] { typeof(int) })]
        int? ParallelDeployment { get; set; }
        /// <summary>The resource ID of the policy assignment that should be remediated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the policy assignment that should be remediated.",
        SerializedName = @"policyAssignmentId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyAssignmentId { get; set; }
        /// <summary>
        /// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment
        /// being remediated assigns a policy set definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.",
        SerializedName = @"policyDefinitionReferenceId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyDefinitionReferenceId { get; set; }
        /// <summary>
        /// The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values
        /// are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource
        /// count is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used.",
        SerializedName = @"resourceCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ResourceCount { get; set; }
        /// <summary>
        /// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.",
        SerializedName = @"resourceDiscoveryMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode? ResourceDiscoveryMode { get; set; }
        /// <summary>
        /// The remediation status message. Provides additional details regarding the state of the remediation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The remediation status message. Provides additional details regarding the state of the remediation.",
        SerializedName = @"statusMessage",
        PossibleTypes = new [] { typeof(string) })]
        string StatusMessage { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The type of the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the remediation.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// The remediation definition.
    internal partial interface IRemediationInternal

    {
        /// <summary>
        /// The remediation correlation Id. Can be used to find events related to the remediation in the activity log.
        /// </summary>
        string CorrelationId { get; set; }
        /// <summary>The time at which the remediation was created.</summary>
        global::System.DateTime? CreatedOn { get; set; }
        /// <summary>The deployment status summary for all deployments created by the remediation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationDeploymentSummary DeploymentStatus { get; set; }
        /// <summary>The number of deployments required by the remediation that have failed.</summary>
        int? DeploymentStatusFailedDeployment { get; set; }
        /// <summary>The number of deployments required by the remediation that have succeeded.</summary>
        int? DeploymentStatusSuccessfulDeployment { get; set; }
        /// <summary>The number of deployments required by the remediation.</summary>
        int? DeploymentStatusTotalDeployment { get; set; }
        /// <summary>The remediation failure threshold settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationPropertiesFailureThreshold FailureThreshold { get; set; }
        /// <summary>
        /// A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage
        /// of failed remediation operations (i.e. failed deployments) exceeds this threshold.
        /// </summary>
        float? FailureThresholdPercentage { get; set; }
        /// <summary>The filters that will be applied to determine which resources to remediate.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationFilters Filter { get; set; }
        /// <summary>The resource locations that will be remediated.</summary>
        string[] FilterLocation { get; set; }
        /// <summary>
        /// The IDs of the resources that will be remediated. Can specify at most 100 IDs. This filter cannot be used when ReEvaluateCompliance
        /// is set to ReEvaluateCompliance, and cannot be empty if provided.
        /// </summary>
        string[] FilterResourceId { get; set; }
        /// <summary>The ID of the remediation.</summary>
        string Id { get; set; }
        /// <summary>The time at which the remediation was last updated.</summary>
        global::System.DateTime? LastUpdatedOn { get; set; }
        /// <summary>The name of the remediation.</summary>
        string Name { get; set; }
        /// <summary>
        /// Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation.
        /// If not provided, the default parallel deployments value is used.
        /// </summary>
        int? ParallelDeployment { get; set; }
        /// <summary>The resource ID of the policy assignment that should be remediated.</summary>
        string PolicyAssignmentId { get; set; }
        /// <summary>
        /// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment
        /// being remediated assigns a policy set definition.
        /// </summary>
        string PolicyDefinitionReferenceId { get; set; }
        /// <summary>Properties for the remediation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20241001.IRemediationProperties Property { get; set; }
        /// <summary>
        /// The status of the remediation. This refers to the entire remediation task, not individual deployments. Allowed values
        /// are Evaluating, Canceled, Cancelling, Failed, Complete, or Succeeded.
        /// </summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource
        /// count is used.
        /// </summary>
        int? ResourceCount { get; set; }
        /// <summary>
        /// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode? ResourceDiscoveryMode { get; set; }
        /// <summary>
        /// The remediation status message. Provides additional details regarding the state of the remediation.
        /// </summary>
        string StatusMessage { get; set; }
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The type of the remediation.</summary>
        string Type { get; set; }

    }
}