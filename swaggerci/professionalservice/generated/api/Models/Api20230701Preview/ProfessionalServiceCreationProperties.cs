// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Extensions;

    /// <summary>properties for creation professionalService</summary>
    public partial class ProfessionalServiceCreationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AutoRenew" /> property.</summary>
        private bool? _autoRenew;

        /// <summary>Whether the ProfessionalService subscription will auto renew upon term end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public bool? AutoRenew { get => this._autoRenew; set => this._autoRenew = value; }

        /// <summary>Backing field for <see cref="OfferId" /> property.</summary>
        private string _offerId;

        /// <summary>The offer id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string OfferId { get => this._offerId; set => this._offerId = value; }

        /// <summary>Backing field for <see cref="PaymentChannelMetadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesPaymentChannelMetadata _paymentChannelMetadata;

        /// <summary>
        /// The metadata about the ProfessionalService subscription such as the AzureSubscriptionId and ResourceUri.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesPaymentChannelMetadata PaymentChannelMetadata { get => (this._paymentChannelMetadata = this._paymentChannelMetadata ?? new Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.ProfessionalServiceCreationPropertiesPaymentChannelMetadata()); set => this._paymentChannelMetadata = value; }

        /// <summary>Backing field for <see cref="PaymentChannelType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Support.PaymentChannelType? _paymentChannelType;

        /// <summary>The Payment channel for the ProfessionalServiceSubscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Support.PaymentChannelType? PaymentChannelType { get => this._paymentChannelType; set => this._paymentChannelType = value; }

        /// <summary>Backing field for <see cref="ProfessionalServiceResourceName" /> property.</summary>
        private string _professionalServiceResourceName;

        /// <summary>The ProfessionalService resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string ProfessionalServiceResourceName { get => this._professionalServiceResourceName; set => this._professionalServiceResourceName = value; }

        /// <summary>Backing field for <see cref="ProfessionalServiceSessionId" /> property.</summary>
        private string _professionalServiceSessionId;

        /// <summary>The professionalService session id used for dev service migration request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string ProfessionalServiceSessionId { get => this._professionalServiceSessionId; set => this._professionalServiceSessionId = value; }

        /// <summary>Backing field for <see cref="ProfessionalServiceSubscriptionId" /> property.</summary>
        private string _professionalServiceSubscriptionId;

        /// <summary>
        /// The professionalService subscription id used for tenant to subscription level migration request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string ProfessionalServiceSubscriptionId { get => this._professionalServiceSubscriptionId; set => this._professionalServiceSubscriptionId = value; }

        /// <summary>Backing field for <see cref="PublisherId" /> property.</summary>
        private string _publisherId;

        /// <summary>The publisher id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string PublisherId { get => this._publisherId; set => this._publisherId = value; }

        /// <summary>Backing field for <see cref="PublisherTestEnvironment" /> property.</summary>
        private string _publisherTestEnvironment;

        /// <summary>The environment in the publisher side for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string PublisherTestEnvironment { get => this._publisherTestEnvironment; set => this._publisherTestEnvironment = value; }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private float? _quantity;

        /// <summary>The seat count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public float? Quantity { get => this._quantity; set => this._quantity = value; }

        /// <summary>Backing field for <see cref="SkuId" /> property.</summary>
        private string _skuId;

        /// <summary>The plan id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string SkuId { get => this._skuId; set => this._skuId = value; }

        /// <summary>Backing field for <see cref="TermId" /> property.</summary>
        private string _termId;

        /// <summary>The current Term id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string TermId { get => this._termId; set => this._termId = value; }

        /// <summary>Creates an new <see cref="ProfessionalServiceCreationProperties" /> instance.</summary>
        public ProfessionalServiceCreationProperties()
        {

        }
    }
    /// properties for creation professionalService
    public partial interface IProfessionalServiceCreationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.IJsonSerializable
    {
        /// <summary>Whether the ProfessionalService subscription will auto renew upon term end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the ProfessionalService subscription will auto renew upon term end.",
        SerializedName = @"autoRenew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoRenew { get; set; }
        /// <summary>The offer id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The offer id.",
        SerializedName = @"offerId",
        PossibleTypes = new [] { typeof(string) })]
        string OfferId { get; set; }
        /// <summary>
        /// The metadata about the ProfessionalService subscription such as the AzureSubscriptionId and ResourceUri.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The metadata about the ProfessionalService subscription such as the AzureSubscriptionId and ResourceUri.",
        SerializedName = @"paymentChannelMetadata",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesPaymentChannelMetadata) })]
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesPaymentChannelMetadata PaymentChannelMetadata { get; set; }
        /// <summary>The Payment channel for the ProfessionalServiceSubscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Payment channel for the ProfessionalServiceSubscription.",
        SerializedName = @"paymentChannelType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Support.PaymentChannelType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Support.PaymentChannelType? PaymentChannelType { get; set; }
        /// <summary>The ProfessionalService resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ProfessionalService resource name.",
        SerializedName = @"professionalServiceResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string ProfessionalServiceResourceName { get; set; }
        /// <summary>The professionalService session id used for dev service migration request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The professionalService session id used for dev service migration request.",
        SerializedName = @"professionalServiceSessionId",
        PossibleTypes = new [] { typeof(string) })]
        string ProfessionalServiceSessionId { get; set; }
        /// <summary>
        /// The professionalService subscription id used for tenant to subscription level migration request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The professionalService subscription id used for tenant to subscription level migration request.",
        SerializedName = @"professionalServiceSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string ProfessionalServiceSubscriptionId { get; set; }
        /// <summary>The publisher id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher id.",
        SerializedName = @"publisherId",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherId { get; set; }
        /// <summary>The environment in the publisher side for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The environment in the publisher side for this resource.",
        SerializedName = @"publisherTestEnvironment",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherTestEnvironment { get; set; }
        /// <summary>The seat count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The seat count.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(float) })]
        float? Quantity { get; set; }
        /// <summary>The plan id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The plan id.",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string SkuId { get; set; }
        /// <summary>The current Term id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current Term id.",
        SerializedName = @"termId",
        PossibleTypes = new [] { typeof(string) })]
        string TermId { get; set; }

    }
    /// properties for creation professionalService
    internal partial interface IProfessionalServiceCreationPropertiesInternal

    {
        /// <summary>Whether the ProfessionalService subscription will auto renew upon term end.</summary>
        bool? AutoRenew { get; set; }
        /// <summary>The offer id.</summary>
        string OfferId { get; set; }
        /// <summary>
        /// The metadata about the ProfessionalService subscription such as the AzureSubscriptionId and ResourceUri.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesPaymentChannelMetadata PaymentChannelMetadata { get; set; }
        /// <summary>The Payment channel for the ProfessionalServiceSubscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Support.PaymentChannelType? PaymentChannelType { get; set; }
        /// <summary>The ProfessionalService resource name.</summary>
        string ProfessionalServiceResourceName { get; set; }
        /// <summary>The professionalService session id used for dev service migration request.</summary>
        string ProfessionalServiceSessionId { get; set; }
        /// <summary>
        /// The professionalService subscription id used for tenant to subscription level migration request.
        /// </summary>
        string ProfessionalServiceSubscriptionId { get; set; }
        /// <summary>The publisher id.</summary>
        string PublisherId { get; set; }
        /// <summary>The environment in the publisher side for this resource.</summary>
        string PublisherTestEnvironment { get; set; }
        /// <summary>The seat count.</summary>
        float? Quantity { get; set; }
        /// <summary>The plan id.</summary>
        string SkuId { get; set; }
        /// <summary>The current Term id.</summary>
        string TermId { get; set; }

    }
}