// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Extensions;

    /// <summary>ProfessionalService REST API resource definition for creation.</summary>
    public partial class ProfessionalServiceResourceCreation :
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceResourceCreation,
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceResourceCreationInternal
    {

        /// <summary>Whether the ProfessionalService subscription will auto renew upon term end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public bool? AutoRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).AutoRenew; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).AutoRenew = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The resource uri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Resource location. Only value allowed for ProfessionalService is 'global'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceResourceCreationInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationProperties Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceResourceCreationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.ProfessionalServiceCreationProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceResourceCreationInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>The offer id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public string OfferId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).OfferId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).OfferId = value ?? null; }

        /// <summary>
        /// The metadata about the ProfessionalService subscription such as the AzureSubscriptionId and ResourceUri.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesPaymentChannelMetadata PaymentChannelMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).PaymentChannelMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).PaymentChannelMetadata = value ?? null /* model class */; }

        /// <summary>The Payment channel for the ProfessionalServiceSubscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Support.PaymentChannelType? PaymentChannelType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).PaymentChannelType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).PaymentChannelType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Support.PaymentChannelType)""); }

        /// <summary>The ProfessionalService resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public string ProfessionalServiceResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).ProfessionalServiceResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).ProfessionalServiceResourceName = value ?? null; }

        /// <summary>The professionalService session id used for dev service migration request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public string ProfessionalServiceSessionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).ProfessionalServiceSessionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).ProfessionalServiceSessionId = value ?? null; }

        /// <summary>
        /// The professionalService subscription id used for tenant to subscription level migration request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public string ProfessionalServiceSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).ProfessionalServiceSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).ProfessionalServiceSubscriptionId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationProperties _property;

        /// <summary>Properties of the ProfessionalService resource that are relevant for creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.ProfessionalServiceCreationProperties()); set => this._property = value; }

        /// <summary>The publisher id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public string PublisherId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).PublisherId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).PublisherId = value ?? null; }

        /// <summary>The environment in the publisher side for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public string PublisherTestEnvironment { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).PublisherTestEnvironment; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).PublisherTestEnvironment = value ?? null; }

        /// <summary>The seat count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public float? Quantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).Quantity = value ?? default(float); }

        /// <summary>The plan id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public string SkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).SkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).SkuId = value ?? null; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.ITags _tag;

        /// <summary>the resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.ITags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.Tags()); set => this._tag = value; }

        /// <summary>The current Term id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Inlined)]
        public string TermId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).TermId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesInternal)Property).TermId = value ?? null; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="ProfessionalServiceResourceCreation" /> instance.</summary>
        public ProfessionalServiceResourceCreation()
        {

        }
    }
    /// ProfessionalService REST API resource definition for creation.
    public partial interface IProfessionalServiceResourceCreation :
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.IJsonSerializable
    {
        /// <summary>Whether the ProfessionalService subscription will auto renew upon term end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the ProfessionalService subscription will auto renew upon term end.",
        SerializedName = @"autoRenew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoRenew { get; set; }
        /// <summary>The resource uri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource uri",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Resource location. Only value allowed for ProfessionalService is 'global'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource location. Only value allowed for ProfessionalService is 'global'",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The offer id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The offer id.",
        SerializedName = @"offerId",
        PossibleTypes = new [] { typeof(string) })]
        string OfferId { get; set; }
        /// <summary>
        /// The metadata about the ProfessionalService subscription such as the AzureSubscriptionId and ResourceUri.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The metadata about the ProfessionalService subscription such as the AzureSubscriptionId and ResourceUri.",
        SerializedName = @"paymentChannelMetadata",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesPaymentChannelMetadata) })]
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesPaymentChannelMetadata PaymentChannelMetadata { get; set; }
        /// <summary>The Payment channel for the ProfessionalServiceSubscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Payment channel for the ProfessionalServiceSubscription.",
        SerializedName = @"paymentChannelType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Support.PaymentChannelType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Support.PaymentChannelType? PaymentChannelType { get; set; }
        /// <summary>The ProfessionalService resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ProfessionalService resource name.",
        SerializedName = @"professionalServiceResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string ProfessionalServiceResourceName { get; set; }
        /// <summary>The professionalService session id used for dev service migration request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The professionalService session id used for dev service migration request.",
        SerializedName = @"professionalServiceSessionId",
        PossibleTypes = new [] { typeof(string) })]
        string ProfessionalServiceSessionId { get; set; }
        /// <summary>
        /// The professionalService subscription id used for tenant to subscription level migration request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The professionalService subscription id used for tenant to subscription level migration request.",
        SerializedName = @"professionalServiceSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string ProfessionalServiceSubscriptionId { get; set; }
        /// <summary>The publisher id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher id.",
        SerializedName = @"publisherId",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherId { get; set; }
        /// <summary>The environment in the publisher side for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The environment in the publisher side for this resource.",
        SerializedName = @"publisherTestEnvironment",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherTestEnvironment { get; set; }
        /// <summary>The seat count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The seat count.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(float) })]
        float? Quantity { get; set; }
        /// <summary>The plan id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The plan id.",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string SkuId { get; set; }
        /// <summary>the resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.ITags) })]
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.ITags Tag { get; set; }
        /// <summary>The current Term id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current Term id.",
        SerializedName = @"termId",
        PossibleTypes = new [] { typeof(string) })]
        string TermId { get; set; }
        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// ProfessionalService REST API resource definition for creation.
    internal partial interface IProfessionalServiceResourceCreationInternal

    {
        /// <summary>Whether the ProfessionalService subscription will auto renew upon term end.</summary>
        bool? AutoRenew { get; set; }
        /// <summary>The resource uri</summary>
        string Id { get; set; }
        /// <summary>Resource location. Only value allowed for ProfessionalService is 'global'</summary>
        string Location { get; set; }
        /// <summary>The resource name</summary>
        string Name { get; set; }
        /// <summary>The offer id.</summary>
        string OfferId { get; set; }
        /// <summary>
        /// The metadata about the ProfessionalService subscription such as the AzureSubscriptionId and ResourceUri.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationPropertiesPaymentChannelMetadata PaymentChannelMetadata { get; set; }
        /// <summary>The Payment channel for the ProfessionalServiceSubscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Support.PaymentChannelType? PaymentChannelType { get; set; }
        /// <summary>The ProfessionalService resource name.</summary>
        string ProfessionalServiceResourceName { get; set; }
        /// <summary>The professionalService session id used for dev service migration request.</summary>
        string ProfessionalServiceSessionId { get; set; }
        /// <summary>
        /// The professionalService subscription id used for tenant to subscription level migration request.
        /// </summary>
        string ProfessionalServiceSubscriptionId { get; set; }
        /// <summary>Properties of the ProfessionalService resource that are relevant for creation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.IProfessionalServiceCreationProperties Property { get; set; }
        /// <summary>The publisher id.</summary>
        string PublisherId { get; set; }
        /// <summary>The environment in the publisher side for this resource.</summary>
        string PublisherTestEnvironment { get; set; }
        /// <summary>The seat count.</summary>
        float? Quantity { get; set; }
        /// <summary>The plan id.</summary>
        string SkuId { get; set; }
        /// <summary>the resource tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20230701Preview.ITags Tag { get; set; }
        /// <summary>The current Term id.</summary>
        string TermId { get; set; }
        /// <summary>Resource type.</summary>
        string Type { get; set; }

    }
}