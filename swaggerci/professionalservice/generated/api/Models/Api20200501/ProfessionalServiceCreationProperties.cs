// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20200501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Extensions;

    /// <summary>properties for creation ProfessionalService</summary>
    public partial class ProfessionalServiceCreationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20200501.IProfessionalServiceCreationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20200501.IProfessionalServiceCreationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AutoRenew" /> property.</summary>
        private bool? _autoRenew;

        /// <summary>Whether the ProfessionalService subscription will auto renew upon term end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public bool? AutoRenew { get => this._autoRenew; set => this._autoRenew = value; }

        /// <summary>Backing field for <see cref="OfferId" /> property.</summary>
        private string _offerId;

        /// <summary>The offer id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string OfferId { get => this._offerId; set => this._offerId = value; }

        /// <summary>Backing field for <see cref="PaymentChannelMetadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20200501.IProfessionalServiceCreationPropertiesPaymentChannelMetadata _paymentChannelMetadata;

        /// <summary>
        /// The metadata about the ProfessionalService subscription such as the OrganizationId.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20200501.IProfessionalServiceCreationPropertiesPaymentChannelMetadata PaymentChannelMetadata { get => (this._paymentChannelMetadata = this._paymentChannelMetadata ?? new Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20200501.ProfessionalServiceCreationPropertiesPaymentChannelMetadata()); set => this._paymentChannelMetadata = value; }

        /// <summary>Backing field for <see cref="PublisherId" /> property.</summary>
        private string _publisherId;

        /// <summary>The publisher id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string PublisherId { get => this._publisherId; set => this._publisherId = value; }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private float? _quantity;

        /// <summary>The seat count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public float? Quantity { get => this._quantity; set => this._quantity = value; }

        /// <summary>Backing field for <see cref="QuoteId" /> property.</summary>
        private string _quoteId;

        /// <summary>The quote id which the ProfessionalService will be purchase with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string QuoteId { get => this._quoteId; set => this._quoteId = value; }

        /// <summary>Backing field for <see cref="SkuId" /> property.</summary>
        private string _skuId;

        /// <summary>The plan id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string SkuId { get => this._skuId; set => this._skuId = value; }

        /// <summary>Backing field for <see cref="StoreFront" /> property.</summary>
        private string _storeFront;

        /// <summary>The store front which initiates the purchase.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string StoreFront { get => this._storeFront; set => this._storeFront = value; }

        /// <summary>Backing field for <see cref="TermId" /> property.</summary>
        private string _termId;

        /// <summary>The current Term id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.PropertyOrigin.Owned)]
        public string TermId { get => this._termId; set => this._termId = value; }

        /// <summary>Creates an new <see cref="ProfessionalServiceCreationProperties" /> instance.</summary>
        public ProfessionalServiceCreationProperties()
        {

        }
    }
    /// properties for creation ProfessionalService
    public partial interface IProfessionalServiceCreationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.IJsonSerializable
    {
        /// <summary>Whether the ProfessionalService subscription will auto renew upon term end.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the ProfessionalService subscription will auto renew upon term end.",
        SerializedName = @"autoRenew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoRenew { get; set; }
        /// <summary>The offer id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The offer id.",
        SerializedName = @"offerId",
        PossibleTypes = new [] { typeof(string) })]
        string OfferId { get; set; }
        /// <summary>
        /// The metadata about the ProfessionalService subscription such as the OrganizationId.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The metadata about the ProfessionalService subscription such as the OrganizationId.",
        SerializedName = @"paymentChannelMetadata",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20200501.IProfessionalServiceCreationPropertiesPaymentChannelMetadata) })]
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20200501.IProfessionalServiceCreationPropertiesPaymentChannelMetadata PaymentChannelMetadata { get; set; }
        /// <summary>The publisher id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher id.",
        SerializedName = @"publisherId",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherId { get; set; }
        /// <summary>The seat count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The seat count.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(float) })]
        float? Quantity { get; set; }
        /// <summary>The quote id which the ProfessionalService will be purchase with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The quote id which the ProfessionalService will be purchase with.",
        SerializedName = @"quoteId",
        PossibleTypes = new [] { typeof(string) })]
        string QuoteId { get; set; }
        /// <summary>The plan id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The plan id.",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string SkuId { get; set; }
        /// <summary>The store front which initiates the purchase.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The store front which initiates the purchase.",
        SerializedName = @"storeFront",
        PossibleTypes = new [] { typeof(string) })]
        string StoreFront { get; set; }
        /// <summary>The current Term id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current Term id.",
        SerializedName = @"termId",
        PossibleTypes = new [] { typeof(string) })]
        string TermId { get; set; }

    }
    /// properties for creation ProfessionalService
    internal partial interface IProfessionalServiceCreationPropertiesInternal

    {
        /// <summary>Whether the ProfessionalService subscription will auto renew upon term end.</summary>
        bool? AutoRenew { get; set; }
        /// <summary>The offer id.</summary>
        string OfferId { get; set; }
        /// <summary>
        /// The metadata about the ProfessionalService subscription such as the OrganizationId.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProfessionalService.Models.Api20200501.IProfessionalServiceCreationPropertiesPaymentChannelMetadata PaymentChannelMetadata { get; set; }
        /// <summary>The publisher id.</summary>
        string PublisherId { get; set; }
        /// <summary>The seat count.</summary>
        float? Quantity { get; set; }
        /// <summary>The quote id which the ProfessionalService will be purchase with.</summary>
        string QuoteId { get; set; }
        /// <summary>The plan id.</summary>
        string SkuId { get; set; }
        /// <summary>The store front which initiates the purchase.</summary>
        string StoreFront { get; set; }
        /// <summary>The current Term id.</summary>
        string TermId { get; set; }

    }
}