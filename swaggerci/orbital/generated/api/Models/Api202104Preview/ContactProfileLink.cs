// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api202104Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Extensions;

    /// <summary>Contact Profile link</summary>
    public partial class ContactProfileLink :
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api202104Preview.IContactProfileLink,
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api202104Preview.IContactProfileLinkInternal
    {

        /// <summary>Backing field for <see cref="Channel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api202104Preview.IContactProfileLinkChannel[] _channel;

        /// <summary>Contact Profile Link Channel</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api202104Preview.IContactProfileLinkChannel[] Channel { get => this._channel; set => this._channel = value; }

        /// <summary>Backing field for <see cref="Direction" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction _direction;

        /// <summary>Direction (uplink or downlink)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction Direction { get => this._direction; set => this._direction = value; }

        /// <summary>Backing field for <see cref="EirpdBw" /> property.</summary>
        private float? _eirpdBw;

        /// <summary>Effective Isotropic Radiated Power (EIRP) in dBW.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public float? EirpdBw { get => this._eirpdBw; set => this._eirpdBw = value; }

        /// <summary>Backing field for <see cref="GainOverTemperature" /> property.</summary>
        private float? _gainOverTemperature;

        /// <summary>Gain To Noise Temperature in db/K.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public float? GainOverTemperature { get => this._gainOverTemperature; set => this._gainOverTemperature = value; }

        /// <summary>Backing field for <see cref="Polarization" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization _polarization;

        /// <summary>polarization. eg (RHCP, LHCP)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization Polarization { get => this._polarization; set => this._polarization = value; }

        /// <summary>Creates an new <see cref="ContactProfileLink" /> instance.</summary>
        public ContactProfileLink()
        {

        }
    }
    /// Contact Profile link
    public partial interface IContactProfileLink :
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.IJsonSerializable
    {
        /// <summary>Contact Profile Link Channel</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Contact Profile Link Channel",
        SerializedName = @"channels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api202104Preview.IContactProfileLinkChannel) })]
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api202104Preview.IContactProfileLinkChannel[] Channel { get; set; }
        /// <summary>Direction (uplink or downlink)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Direction (uplink or downlink)",
        SerializedName = @"direction",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction) })]
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction Direction { get; set; }
        /// <summary>Effective Isotropic Radiated Power (EIRP) in dBW.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Effective Isotropic Radiated Power (EIRP) in dBW.",
        SerializedName = @"eirpdBW",
        PossibleTypes = new [] { typeof(float) })]
        float? EirpdBw { get; set; }
        /// <summary>Gain To Noise Temperature in db/K.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gain To Noise Temperature in db/K.",
        SerializedName = @"gainOverTemperature",
        PossibleTypes = new [] { typeof(float) })]
        float? GainOverTemperature { get; set; }
        /// <summary>polarization. eg (RHCP, LHCP)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"polarization. eg (RHCP, LHCP)",
        SerializedName = @"polarization",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization) })]
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization Polarization { get; set; }

    }
    /// Contact Profile link
    internal partial interface IContactProfileLinkInternal

    {
        /// <summary>Contact Profile Link Channel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api202104Preview.IContactProfileLinkChannel[] Channel { get; set; }
        /// <summary>Direction (uplink or downlink)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction Direction { get; set; }
        /// <summary>Effective Isotropic Radiated Power (EIRP) in dBW.</summary>
        float? EirpdBw { get; set; }
        /// <summary>Gain To Noise Temperature in db/K.</summary>
        float? GainOverTemperature { get; set; }
        /// <summary>polarization. eg (RHCP, LHCP)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization Polarization { get; set; }

    }
}