// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api202104Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Extensions;

    /// <summary>Spacecraft Link</summary>
    public partial class SpacecraftLink :
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api202104Preview.ISpacecraftLink,
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api202104Preview.ISpacecraftLinkInternal
    {

        /// <summary>Backing field for <see cref="BandwidthMHz" /> property.</summary>
        private float _bandwidthMHz;

        /// <summary>Bandwidth in MHz</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public float BandwidthMHz { get => this._bandwidthMHz; set => this._bandwidthMHz = value; }

        /// <summary>Backing field for <see cref="CenterFrequencyMHz" /> property.</summary>
        private float _centerFrequencyMHz;

        /// <summary>Center Frequency in MHz</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public float CenterFrequencyMHz { get => this._centerFrequencyMHz; set => this._centerFrequencyMHz = value; }

        /// <summary>Backing field for <see cref="Direction" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction _direction;

        /// <summary>Direction (uplink or downlink)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction Direction { get => this._direction; set => this._direction = value; }

        /// <summary>Backing field for <see cref="Polarization" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization _polarization;

        /// <summary>polarization. eg (RHCP, LHCP)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Origin(Microsoft.Azure.PowerShell.Cmdlets.Orbital.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization Polarization { get => this._polarization; set => this._polarization = value; }

        /// <summary>Creates an new <see cref="SpacecraftLink" /> instance.</summary>
        public SpacecraftLink()
        {

        }
    }
    /// Spacecraft Link
    public partial interface ISpacecraftLink :
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.IJsonSerializable
    {
        /// <summary>Bandwidth in MHz</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Bandwidth in MHz",
        SerializedName = @"bandwidthMHz",
        PossibleTypes = new [] { typeof(float) })]
        float BandwidthMHz { get; set; }
        /// <summary>Center Frequency in MHz</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Center Frequency in MHz",
        SerializedName = @"centerFrequencyMHz",
        PossibleTypes = new [] { typeof(float) })]
        float CenterFrequencyMHz { get; set; }
        /// <summary>Direction (uplink or downlink)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Direction (uplink or downlink)",
        SerializedName = @"direction",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction) })]
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction Direction { get; set; }
        /// <summary>polarization. eg (RHCP, LHCP)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"polarization. eg (RHCP, LHCP)",
        SerializedName = @"polarization",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization) })]
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization Polarization { get; set; }

    }
    /// Spacecraft Link
    internal partial interface ISpacecraftLinkInternal

    {
        /// <summary>Bandwidth in MHz</summary>
        float BandwidthMHz { get; set; }
        /// <summary>Center Frequency in MHz</summary>
        float CenterFrequencyMHz { get; set; }
        /// <summary>Direction (uplink or downlink)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction Direction { get; set; }
        /// <summary>polarization. eg (RHCP, LHCP)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization Polarization { get; set; }

    }
}