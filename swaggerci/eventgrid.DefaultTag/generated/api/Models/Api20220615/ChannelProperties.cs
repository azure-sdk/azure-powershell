// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Properties of the Channel.</summary>
    public partial class ChannelProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IChannelProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IChannelPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ChannelType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelType? _channelType;

        /// <summary>The type of the event channel which represents the direction flow of events.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelType? ChannelType { get => this._channelType; set => this._channelType = value; }

        /// <summary>
        /// A collection of inline event types for the resource. The inline event type keys are of type string which represents the
        /// name of the event.
        /// An example of a valid inline event name is "Contoso.OrderCreated".
        /// The inline event type values are of type InlineEventProperties and will contain additional information for every inline
        /// event type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventTypeInfoInlineEventTypes EventTypeInfoInlineEventType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).EventTypeInfoInlineEventType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).EventTypeInfoInlineEventType = value ?? null /* model class */; }

        /// <summary>The kind of event type used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind? EventTypeInfoKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).EventTypeInfoKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).EventTypeInfoKind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind)""); }

        /// <summary>Backing field for <see cref="ExpirationTimeIfNotActivatedUtc" /> property.</summary>
        private global::System.DateTime? _expirationTimeIfNotActivatedUtc;

        /// <summary>
        /// Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
        /// the channel and corresponding partner topic are deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get => this._expirationTimeIfNotActivatedUtc; set => this._expirationTimeIfNotActivatedUtc = value; }

        /// <summary>Backing field for <see cref="MessageForActivation" /> property.</summary>
        private string _messageForActivation;

        /// <summary>
        /// Context or helpful message that can be used during the approval process by the subscriber.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string MessageForActivation { get => this._messageForActivation; set => this._messageForActivation = value; }

        /// <summary>Internal Acessors for PartnerTopicInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IChannelPropertiesInternal.PartnerTopicInfo { get => (this._partnerTopicInfo = this._partnerTopicInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.PartnerTopicInfo()); set { {_partnerTopicInfo = value;} } }

        /// <summary>Internal Acessors for PartnerTopicInfoEventTypeInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventTypeInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IChannelPropertiesInternal.PartnerTopicInfoEventTypeInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).EventTypeInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).EventTypeInfo = value; }

        /// <summary>Backing field for <see cref="PartnerTopicInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfo _partnerTopicInfo;

        /// <summary>
        /// This property should be populated when channelType is PartnerTopic and represents information about the partner topic
        /// resource corresponding to the channel.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfo PartnerTopicInfo { get => (this._partnerTopicInfo = this._partnerTopicInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.PartnerTopicInfo()); set => this._partnerTopicInfo = value; }

        /// <summary>
        /// Azure subscription ID of the subscriber. The partner topic associated with the channel will be
        /// created under this Azure subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerTopicInfoAzureSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).AzureSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).AzureSubscriptionId = value ?? null; }

        /// <summary>Name of the partner topic associated with the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerTopicInfoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).Name = value ?? null; }

        /// <summary>
        /// Azure Resource Group of the subscriber. The partner topic associated with the channel will be
        /// created under this resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerTopicInfoResourceGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).ResourceGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).ResourceGroupName = value ?? null; }

        /// <summary>
        /// The source information is provided by the publisher to determine the scope or context from which the events
        /// are originating. This information can be used by the subscriber during the approval process of the
        /// created partner topic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string PartnerTopicInfoSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfoInternal)PartnerTopicInfo).Source = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelProvisioningState? ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Backing field for <see cref="ReadinessState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ReadinessState? _readinessState;

        /// <summary>The readiness state of the corresponding partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ReadinessState? ReadinessState { get => this._readinessState; set => this._readinessState = value; }

        /// <summary>Creates an new <see cref="ChannelProperties" /> instance.</summary>
        public ChannelProperties()
        {

        }
    }
    /// Properties of the Channel.
    public partial interface IChannelProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>The type of the event channel which represents the direction flow of events.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the event channel which represents the direction flow of events.",
        SerializedName = @"channelType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelType? ChannelType { get; set; }
        /// <summary>
        /// A collection of inline event types for the resource. The inline event type keys are of type string which represents the
        /// name of the event.
        /// An example of a valid inline event name is "Contoso.OrderCreated".
        /// The inline event type values are of type InlineEventProperties and will contain additional information for every inline
        /// event type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.
        An example of a valid inline event name is ""Contoso.OrderCreated"".
        The inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
        SerializedName = @"inlineEventTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventTypeInfoInlineEventTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventTypeInfoInlineEventTypes EventTypeInfoInlineEventType { get; set; }
        /// <summary>The kind of event type used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The kind of event type used.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind? EventTypeInfoKind { get; set; }
        /// <summary>
        /// Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
        /// the channel and corresponding partner topic are deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
        the channel and corresponding partner topic are deleted.",
        SerializedName = @"expirationTimeIfNotActivatedUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get; set; }
        /// <summary>
        /// Context or helpful message that can be used during the approval process by the subscriber.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Context or helpful message that can be used during the approval process by the subscriber.",
        SerializedName = @"messageForActivation",
        PossibleTypes = new [] { typeof(string) })]
        string MessageForActivation { get; set; }
        /// <summary>
        /// Azure subscription ID of the subscriber. The partner topic associated with the channel will be
        /// created under this Azure subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure subscription ID of the subscriber. The partner topic associated with the channel will be
        created under this Azure subscription.",
        SerializedName = @"azureSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerTopicInfoAzureSubscriptionId { get; set; }
        /// <summary>Name of the partner topic associated with the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the partner topic associated with the channel.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerTopicInfoName { get; set; }
        /// <summary>
        /// Azure Resource Group of the subscriber. The partner topic associated with the channel will be
        /// created under this resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Resource Group of the subscriber. The partner topic associated with the channel will be
        created under this resource group.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerTopicInfoResourceGroupName { get; set; }
        /// <summary>
        /// The source information is provided by the publisher to determine the scope or context from which the events
        /// are originating. This information can be used by the subscriber during the approval process of the
        /// created partner topic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source information is provided by the publisher to determine the scope or context from which the events
        are originating. This information can be used by the subscriber during the approval process of the
        created partner topic.",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerTopicInfoSource { get; set; }
        /// <summary>Provisioning state of the channel.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning state of the channel.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelProvisioningState? ProvisioningState { get; set; }
        /// <summary>The readiness state of the corresponding partner topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The readiness state of the corresponding partner topic.",
        SerializedName = @"readinessState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ReadinessState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ReadinessState? ReadinessState { get; set; }

    }
    /// Properties of the Channel.
    internal partial interface IChannelPropertiesInternal

    {
        /// <summary>The type of the event channel which represents the direction flow of events.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelType? ChannelType { get; set; }
        /// <summary>
        /// A collection of inline event types for the resource. The inline event type keys are of type string which represents the
        /// name of the event.
        /// An example of a valid inline event name is "Contoso.OrderCreated".
        /// The inline event type values are of type InlineEventProperties and will contain additional information for every inline
        /// event type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventTypeInfoInlineEventTypes EventTypeInfoInlineEventType { get; set; }
        /// <summary>The kind of event type used.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDefinitionKind? EventTypeInfoKind { get; set; }
        /// <summary>
        /// Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
        /// the channel and corresponding partner topic are deleted.
        /// </summary>
        global::System.DateTime? ExpirationTimeIfNotActivatedUtc { get; set; }
        /// <summary>
        /// Context or helpful message that can be used during the approval process by the subscriber.
        /// </summary>
        string MessageForActivation { get; set; }
        /// <summary>
        /// This property should be populated when channelType is PartnerTopic and represents information about the partner topic
        /// resource corresponding to the channel.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IPartnerTopicInfo PartnerTopicInfo { get; set; }
        /// <summary>
        /// Azure subscription ID of the subscriber. The partner topic associated with the channel will be
        /// created under this Azure subscription.
        /// </summary>
        string PartnerTopicInfoAzureSubscriptionId { get; set; }
        /// <summary>
        /// Event Type Information for the partner topic. This information is provided by the publisher and can be used by the
        /// subscriber to view different types of events that are published.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventTypeInfo PartnerTopicInfoEventTypeInfo { get; set; }
        /// <summary>Name of the partner topic associated with the channel.</summary>
        string PartnerTopicInfoName { get; set; }
        /// <summary>
        /// Azure Resource Group of the subscriber. The partner topic associated with the channel will be
        /// created under this resource group.
        /// </summary>
        string PartnerTopicInfoResourceGroupName { get; set; }
        /// <summary>
        /// The source information is provided by the publisher to determine the scope or context from which the events
        /// are originating. This information can be used by the subscriber during the approval process of the
        /// created partner topic.
        /// </summary>
        string PartnerTopicInfoSource { get; set; }
        /// <summary>Provisioning state of the channel.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ChannelProvisioningState? ProvisioningState { get; set; }
        /// <summary>The readiness state of the corresponding partner topic.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ReadinessState? ReadinessState { get; set; }

    }
}