// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Extensions;

    /// <summary>
    /// Resource that represents an Azure Extended Zone available to a subscription for registering and unregistering.
    /// </summary>
    public partial class ExtendedZone :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZone,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.Resource();

        /// <summary>Display name of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).DisplayName; }

        /// <summary>Geography of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inlined)]
        public string Geography { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).Geography; }

        /// <summary>The Geography Group of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inlined)]
        public string GeographyGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).GeographyGroup; }

        /// <summary>The Home Location of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inlined)]
        public string HomeLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).HomeLocation; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).Id; }

        /// <summary>The Latitude of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inlined)]
        public string Latitude { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).Latitude; }

        /// <summary>The Longitude of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inlined)]
        public string Longitude { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).Longitude; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).DisplayName = value; }

        /// <summary>Internal Acessors for Geography</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.Geography { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).Geography; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).Geography = value; }

        /// <summary>Internal Acessors for GeographyGroup</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.GeographyGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).GeographyGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).GeographyGroup = value; }

        /// <summary>Internal Acessors for HomeLocation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.HomeLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).HomeLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).HomeLocation = value; }

        /// <summary>Internal Acessors for Latitude</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.Latitude { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).Latitude; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).Latitude = value; }

        /// <summary>Internal Acessors for Longitude</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.Longitude { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).Longitude; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).Longitude = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneProperties Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.ExtendedZoneProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for RegionCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.RegionCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegionCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegionCategory = value; }

        /// <summary>Internal Acessors for RegionType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.RegionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegionType = value; }

        /// <summary>Internal Acessors for RegionalDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.RegionalDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegionalDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegionalDisplayName = value; }

        /// <summary>Internal Acessors for RegistrationState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.RegistrationState? Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneInternal.RegistrationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegistrationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegistrationState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.ExtendedZoneProperties()); set => this._property = value; }

        /// <summary>
        /// Status of the last operation performed by the subscription on the Edge Zone resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Category of region for the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inlined)]
        public string RegionCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegionCategory; }

        /// <summary>Type of region for the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inlined)]
        public string RegionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegionType; }

        /// <summary>Regional display name of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inlined)]
        public string RegionalDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegionalDisplayName; }

        /// <summary>Indicates the Azure Extended Zone registration’s approval status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.RegistrationState? RegistrationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZonePropertiesInternal)Property).RegistrationState; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="ExtendedZone" /> instance.</summary>
        public ExtendedZone()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Resource that represents an Azure Extended Zone available to a subscription for registering and unregistering.
    public partial interface IExtendedZone :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResource
    {
        /// <summary>Display name of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Display name of the Azure Extended Zone.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>Geography of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Geography of the Azure Extended Zone.",
        SerializedName = @"geography",
        PossibleTypes = new [] { typeof(string) })]
        string Geography { get;  }
        /// <summary>The Geography Group of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Geography Group of the Azure Extended Zone.",
        SerializedName = @"geographyGroup",
        PossibleTypes = new [] { typeof(string) })]
        string GeographyGroup { get;  }
        /// <summary>The Home Location of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Home Location of the Azure Extended Zone.",
        SerializedName = @"homeLocation",
        PossibleTypes = new [] { typeof(string) })]
        string HomeLocation { get;  }
        /// <summary>The Latitude of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Latitude of the Azure Extended Zone.",
        SerializedName = @"latitude",
        PossibleTypes = new [] { typeof(string) })]
        string Latitude { get;  }
        /// <summary>The Longitude of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Longitude of the Azure Extended Zone.",
        SerializedName = @"longitude",
        PossibleTypes = new [] { typeof(string) })]
        string Longitude { get;  }
        /// <summary>
        /// Status of the last operation performed by the subscription on the Edge Zone resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the last operation performed by the subscription on the Edge Zone resource",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Category of region for the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Category of region for the Azure Extended Zone.",
        SerializedName = @"regionCategory",
        PossibleTypes = new [] { typeof(string) })]
        string RegionCategory { get;  }
        /// <summary>Type of region for the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of region for the Azure Extended Zone.",
        SerializedName = @"regionType",
        PossibleTypes = new [] { typeof(string) })]
        string RegionType { get;  }
        /// <summary>Regional display name of the Azure Extended Zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Regional display name of the Azure Extended Zone.",
        SerializedName = @"regionalDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string RegionalDisplayName { get;  }
        /// <summary>Indicates the Azure Extended Zone registration’s approval status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates the Azure Extended Zone registration’s approval status.",
        SerializedName = @"registrationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.RegistrationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.RegistrationState? RegistrationState { get;  }

    }
    /// Resource that represents an Azure Extended Zone available to a subscription for registering and unregistering.
    internal partial interface IExtendedZoneInternal :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api50.IResourceInternal
    {
        /// <summary>Display name of the Azure Extended Zone.</summary>
        string DisplayName { get; set; }
        /// <summary>Geography of the Azure Extended Zone.</summary>
        string Geography { get; set; }
        /// <summary>The Geography Group of the Azure Extended Zone.</summary>
        string GeographyGroup { get; set; }
        /// <summary>The Home Location of the Azure Extended Zone.</summary>
        string HomeLocation { get; set; }
        /// <summary>The Latitude of the Azure Extended Zone.</summary>
        string Latitude { get; set; }
        /// <summary>The Longitude of the Azure Extended Zone.</summary>
        string Longitude { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Models.Api20240401Preview.IExtendedZoneProperties Property { get; set; }
        /// <summary>
        /// Status of the last operation performed by the subscription on the Edge Zone resource
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Category of region for the Azure Extended Zone.</summary>
        string RegionCategory { get; set; }
        /// <summary>Type of region for the Azure Extended Zone.</summary>
        string RegionType { get; set; }
        /// <summary>Regional display name of the Azure Extended Zone.</summary>
        string RegionalDisplayName { get; set; }
        /// <summary>Indicates the Azure Extended Zone registration’s approval status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeZones.Support.RegistrationState? RegistrationState { get; set; }

    }
}