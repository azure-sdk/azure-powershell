// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20220401Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Extensions;

    /// <summary>
    /// Parameters body to pass for getting the download URL of the test execution console log file.
    /// </summary>
    public partial class TestResultConsoleLogDownloadUrlParameters :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20220401Preview.ITestResultConsoleLogDownloadUrlParameters,
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20220401Preview.ITestResultConsoleLogDownloadUrlParametersInternal
    {

        /// <summary>Backing field for <see cref="LogFileName" /> property.</summary>
        private string _logFileName;

        /// <summary>The log file name corresponding to the download URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string LogFileName { get => this._logFileName; set => this._logFileName = value; }

        /// <summary>
        /// Creates an new <see cref="TestResultConsoleLogDownloadUrlParameters" /> instance.
        /// </summary>
        public TestResultConsoleLogDownloadUrlParameters()
        {

        }
    }
    /// Parameters body to pass for getting the download URL of the test execution console log file.
    public partial interface ITestResultConsoleLogDownloadUrlParameters :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IJsonSerializable
    {
        /// <summary>The log file name corresponding to the download URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The log file name corresponding to the download URL.",
        SerializedName = @"logFileName",
        PossibleTypes = new [] { typeof(string) })]
        string LogFileName { get; set; }

    }
    /// Parameters body to pass for getting the download URL of the test execution console log file.
    internal partial interface ITestResultConsoleLogDownloadUrlParametersInternal

    {
        /// <summary>The log file name corresponding to the download URL.</summary>
        string LogFileName { get; set; }

    }
}