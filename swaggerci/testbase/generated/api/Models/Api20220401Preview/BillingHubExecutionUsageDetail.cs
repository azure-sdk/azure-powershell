// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20220401Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Extensions;

    public partial class BillingHubExecutionUsageDetail :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20220401Preview.IBillingHubExecutionUsageDetail,
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20220401Preview.IBillingHubExecutionUsageDetailInternal
    {

        /// <summary>Backing field for <see cref="ApplicationName" /> property.</summary>
        private string _applicationName;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string ApplicationName { get => this._applicationName; set => this._applicationName = value; }

        /// <summary>Backing field for <see cref="ApplicationVersion" /> property.</summary>
        private string _applicationVersion;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string ApplicationVersion { get => this._applicationVersion; set => this._applicationVersion = value; }

        /// <summary>Backing field for <see cref="BilledCharge" /> property.</summary>
        private double? _billedCharge;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public double? BilledCharge { get => this._billedCharge; set => this._billedCharge = value; }

        /// <summary>Backing field for <see cref="EndTimeStamp" /> property.</summary>
        private global::System.DateTime? _endTimeStamp;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public global::System.DateTime? EndTimeStamp { get => this._endTimeStamp; set => this._endTimeStamp = value; }

        /// <summary>Backing field for <see cref="ExecutionRequestId" /> property.</summary>
        private string _executionRequestId;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string ExecutionRequestId { get => this._executionRequestId; set => this._executionRequestId = value; }

        /// <summary>Backing field for <see cref="MeterId" /> property.</summary>
        private string _meterId;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string MeterId { get => this._meterId; set => this._meterId = value; }

        /// <summary>Backing field for <see cref="OSBuild" /> property.</summary>
        private string _oSBuild;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string OSBuild { get => this._oSBuild; set => this._oSBuild = value; }

        /// <summary>Backing field for <see cref="Release" /> property.</summary>
        private string _release;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string Release { get => this._release; set => this._release = value; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private string _sku;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string Sku { get => this._sku; set => this._sku = value; }

        /// <summary>Backing field for <see cref="StartTimeStamp" /> property.</summary>
        private global::System.DateTime? _startTimeStamp;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTimeStamp { get => this._startTimeStamp; set => this._startTimeStamp = value; }

        /// <summary>Backing field for <see cref="TestType" /> property.</summary>
        private string _testType;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string TestType { get => this._testType; set => this._testType = value; }

        /// <summary>Backing field for <see cref="UpdateType" /> property.</summary>
        private string _updateType;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string UpdateType { get => this._updateType; set => this._updateType = value; }

        /// <summary>Backing field for <see cref="UsedBillableHour" /> property.</summary>
        private double? _usedBillableHour;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public double? UsedBillableHour { get => this._usedBillableHour; set => this._usedBillableHour = value; }

        /// <summary>Backing field for <see cref="UsedFreeHour" /> property.</summary>
        private double? _usedFreeHour;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public double? UsedFreeHour { get => this._usedFreeHour; set => this._usedFreeHour = value; }

        /// <summary>Creates an new <see cref="BillingHubExecutionUsageDetail" /> instance.</summary>
        public BillingHubExecutionUsageDetail()
        {

        }
    }
    public partial interface IBillingHubExecutionUsageDetail :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"applicationName",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"applicationVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationVersion { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"billedCharges",
        PossibleTypes = new [] { typeof(double) })]
        double? BilledCharge { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"endTimeStamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTimeStamp { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"executionRequestId",
        PossibleTypes = new [] { typeof(string) })]
        string ExecutionRequestId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"meterId",
        PossibleTypes = new [] { typeof(string) })]
        string MeterId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"osBuild",
        PossibleTypes = new [] { typeof(string) })]
        string OSBuild { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"release",
        PossibleTypes = new [] { typeof(string) })]
        string Release { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"sku",
        PossibleTypes = new [] { typeof(string) })]
        string Sku { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"startTimeStamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTimeStamp { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"testType",
        PossibleTypes = new [] { typeof(string) })]
        string TestType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"updateType",
        PossibleTypes = new [] { typeof(string) })]
        string UpdateType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"usedBillableHours",
        PossibleTypes = new [] { typeof(double) })]
        double? UsedBillableHour { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"usedFreeHours",
        PossibleTypes = new [] { typeof(double) })]
        double? UsedFreeHour { get; set; }

    }
    internal partial interface IBillingHubExecutionUsageDetailInternal

    {
        string ApplicationName { get; set; }

        string ApplicationVersion { get; set; }

        double? BilledCharge { get; set; }

        global::System.DateTime? EndTimeStamp { get; set; }

        string ExecutionRequestId { get; set; }

        string MeterId { get; set; }

        string OSBuild { get; set; }

        string Release { get; set; }

        string Sku { get; set; }

        global::System.DateTime? StartTimeStamp { get; set; }

        string TestType { get; set; }

        string UpdateType { get; set; }

        double? UsedBillableHour { get; set; }

        double? UsedFreeHour { get; set; }

    }
}