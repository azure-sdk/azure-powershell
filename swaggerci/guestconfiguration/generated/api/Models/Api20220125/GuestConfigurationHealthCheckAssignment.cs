// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125
{
    using static Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Extensions;

    /// <summary>List all policy assignments with detailed properties on the VM</summary>
    public partial class GuestConfigurationHealthCheckAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignment,
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal
    {

        /// <summary>Backing field for <see cref="AvailableInAzurePolicy" /> property.</summary>
        private bool? _availableInAzurePolicy;

        /// <summary>Available in Azure Policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public bool? AvailableInAzurePolicy { get => this._availableInAzurePolicy; set => this._availableInAzurePolicy = value; }

        /// <summary>Backing field for <see cref="AvailableInDataPlane" /> property.</summary>
        private bool? _availableInDataPlane;

        /// <summary>Available In Data Plane</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public bool? AvailableInDataPlane { get => this._availableInDataPlane; set => this._availableInDataPlane = value; }

        /// <summary>Backing field for <see cref="ComplianceStatusInDp" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ComplianceStatus? _complianceStatusInDp;

        /// <summary>
        /// A value indicating compliance status of the machine for the assigned guest configuration in Data Plane
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ComplianceStatus? ComplianceStatusInDp { get => this._complianceStatusInDp; }

        /// <summary>Backing field for <see cref="ConfigurationName" /> property.</summary>
        private string _configurationName;

        /// <summary>Configuration Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string ConfigurationName { get => this._configurationName; set => this._configurationName = value; }

        /// <summary>
        /// Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration
        /// and StopConfiguration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ActionAfterReboot? ConfigurationSettingActionAfterReboot { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingActionAfterReboot; }

        /// <summary>
        /// If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node.
        /// Otherwise, false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public bool? ConfigurationSettingAllowModuleOverwrite { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingAllowModuleOverwrite; }

        /// <summary>
        /// Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values
        /// are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ConfigurationMode? ConfigurationSettingConfigurationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingConfigurationMode; }

        /// <summary>
        /// How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode
        /// property is set to ApplyOnly. The default value is 15.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public float? ConfigurationSettingConfigurationModeFrequencyMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingConfigurationModeFrequencyMin; }

        /// <summary>
        /// Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you
        /// will have to manually reboot the node for any configuration that requires it. The default value is false. To use this
        /// setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting
        /// with the xPendingReboot module.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public bool? ConfigurationSettingRebootIfNeeded { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingRebootIfNeeded; }

        /// <summary>
        /// The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored
        /// if the LCM is not configured in pull mode. The default value is 30.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public float? ConfigurationSettingRefreshFrequencyMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingRefreshFrequencyMin; }

        /// <summary>Backing field for <see cref="GuestConfigurationAssignmentName" /> property.</summary>
        private string _guestConfigurationAssignmentName;

        /// <summary>Guest Configuration Assignment Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string GuestConfigurationAssignmentName { get => this._guestConfigurationAssignmentName; set => this._guestConfigurationAssignmentName = value; }

        /// <summary>Backing field for <see cref="IsVisibleToArmInDp" /> property.</summary>
        private bool? _isVisibleToArmInDp;

        /// <summary>Policy Visibility to ARM In Data plane</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public bool? IsVisibleToArmInDp { get => this._isVisibleToArmInDp; set => this._isVisibleToArmInDp = value; }

        /// <summary>Backing field for <see cref="LastComplianceStatusChecked" /> property.</summary>
        private global::System.DateTime? _lastComplianceStatusChecked;

        /// <summary>Date and time when last compliance status was checked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public global::System.DateTime? LastComplianceStatusChecked { get => this._lastComplianceStatusChecked; }

        /// <summary>Backing field for <see cref="LatestReportId" /> property.</summary>
        private string _latestReportId;

        /// <summary>Id of the latest report for the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string LatestReportId { get => this._latestReportId; }

        /// <summary>Internal Acessors for ComplianceStatusInDp</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ComplianceStatus? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.ComplianceStatusInDp { get => this._complianceStatusInDp; set { {_complianceStatusInDp = value;} } }

        /// <summary>Internal Acessors for ConfigurationSettingActionAfterReboot</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ActionAfterReboot? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.ConfigurationSettingActionAfterReboot { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingActionAfterReboot; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingActionAfterReboot = value; }

        /// <summary>Internal Acessors for ConfigurationSettingAllowModuleOverwrite</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.ConfigurationSettingAllowModuleOverwrite { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingAllowModuleOverwrite; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingAllowModuleOverwrite = value; }

        /// <summary>Internal Acessors for ConfigurationSettingConfigurationMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ConfigurationMode? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.ConfigurationSettingConfigurationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingConfigurationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingConfigurationMode = value; }

        /// <summary>Internal Acessors for ConfigurationSettingConfigurationModeFrequencyMin</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.ConfigurationSettingConfigurationModeFrequencyMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingConfigurationModeFrequencyMin; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingConfigurationModeFrequencyMin = value; }

        /// <summary>Internal Acessors for ConfigurationSettingRebootIfNeeded</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.ConfigurationSettingRebootIfNeeded { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingRebootIfNeeded; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingRebootIfNeeded = value; }

        /// <summary>Internal Acessors for ConfigurationSettingRefreshFrequencyMin</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.ConfigurationSettingRefreshFrequencyMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingRefreshFrequencyMin; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSettingRefreshFrequencyMin = value; }

        /// <summary>Internal Acessors for LastComplianceStatusChecked</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.LastComplianceStatusChecked { get => this._lastComplianceStatusChecked; set { {_lastComplianceStatusChecked = value;} } }

        /// <summary>Internal Acessors for LatestReportId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.LatestReportId { get => this._latestReportId; set { {_latestReportId = value;} } }

        /// <summary>Internal Acessors for PolicyAssignmentParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAny Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.PolicyAssignmentParameter { get => (this._policyAssignmentParameter = this._policyAssignmentParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Any()); set { {_policyAssignmentParameter = value;} } }

        /// <summary>Internal Acessors for PolicyConfigurationParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigation Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.PolicyConfigurationParameter { get => (this._policyConfigurationParameter = this._policyConfigurationParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.GuestConfigurationNavigation()); set { {_policyConfigurationParameter = value;} } }

        /// <summary>Internal Acessors for PolicyConfigurationParameterAssignmentSource</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.PolicyConfigurationParameterAssignmentSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).AssignmentSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).AssignmentSource = value; }

        /// <summary>Internal Acessors for PolicyConfigurationParameterConfigurationSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IConfigurationSetting Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.PolicyConfigurationParameterConfigurationSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationSetting = value; }

        /// <summary>Internal Acessors for PolicyConfigurationParameterContentType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationHealthCheckAssignmentInternal.PolicyConfigurationParameterContentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ContentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ContentType = value; }

        /// <summary>Backing field for <see cref="PolicyAssignmentId" /> property.</summary>
        private string _policyAssignmentId;

        /// <summary>Policy Assignment Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string PolicyAssignmentId { get => this._policyAssignmentId; set => this._policyAssignmentId = value; }

        /// <summary>Backing field for <see cref="PolicyAssignmentParameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAny _policyAssignmentParameter;

        /// <summary>Policy Assignment parameters</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAny PolicyAssignmentParameter { get => (this._policyAssignmentParameter = this._policyAssignmentParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Any()); }

        /// <summary>Backing field for <see cref="PolicyAssignmentScope" /> property.</summary>
        private string _policyAssignmentScope;

        /// <summary>Policy Assignment Scope</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string PolicyAssignmentScope { get => this._policyAssignmentScope; set => this._policyAssignmentScope = value; }

        /// <summary>Backing field for <see cref="PolicyConfigurationParameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigation _policyConfigurationParameter;

        /// <summary>The guest configuration to assign.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigation PolicyConfigurationParameter { get => (this._policyConfigurationParameter = this._policyConfigurationParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.GuestConfigurationNavigation()); set => this._policyConfigurationParameter = value; }

        /// <summary>Specifies the origin of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string PolicyConfigurationParameterAssignmentSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).AssignmentSource; }

        /// <summary>
        /// Specifies the assignment type and execution of the configuration. Possible values are Audit, DeployAndAutoCorrect, ApplyAndAutoCorrect
        /// and ApplyAndMonitor.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.AssignmentType? PolicyConfigurationParameterAssignmentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).AssignmentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).AssignmentType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.AssignmentType)""); }

        /// <summary>The protected configuration parameters for the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IConfigurationParameter[] PolicyConfigurationParameterConfigurationProtectedParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationProtectedParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationProtectedParameter = value ?? null /* arrayOf */; }

        /// <summary>Combined hash of the guest configuration package and configuration parameters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string PolicyConfigurationParameterContentHash { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ContentHash; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ContentHash = value ?? null; }

        /// <summary>
        /// Specifies the content type of the configuration. Possible values could be Builtin or Custom.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string PolicyConfigurationParameterContentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ContentType; }

        /// <summary>Uri of the storage where guest configuration package is uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string PolicyConfigurationParameterContentUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ContentUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ContentUri = value ?? null; }

        /// <summary>Kind of the guest configuration. For example:DSC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.Kind? PolicyConfigurationParameterKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).Kind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.Kind)""); }

        /// <summary>Name of the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string PolicyConfigurationParameterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).Name = value ?? null; }

        /// <summary>Version of the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string PolicyConfigurationParameterVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).Version = value ?? null; }

        /// <summary>The configuration parameters for the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IConfigurationParameter[] PolicyConfigurationParametersConfigurationParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigationInternal)PolicyConfigurationParameter).ConfigurationParameter = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="PolicyDefinition" /> property.</summary>
        private string _policyDefinition;

        /// <summary>Definition of the Policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string PolicyDefinition { get => this._policyDefinition; set => this._policyDefinition = value; }

        /// <summary>Backing field for <see cref="PolicyDefinitionEffect" /> property.</summary>
        private string _policyDefinitionEffect;

        /// <summary>Policy Definition Effect</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string PolicyDefinitionEffect { get => this._policyDefinitionEffect; set => this._policyDefinitionEffect = value; }

        /// <summary>Backing field for <see cref="PolicyDefinitionId" /> property.</summary>
        private string _policyDefinitionId;

        /// <summary>Policy definition Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string PolicyDefinitionId { get => this._policyDefinitionId; set => this._policyDefinitionId = value; }

        /// <summary>Backing field for <see cref="PolicyDefinitionName" /> property.</summary>
        private string _policyDefinitionName;

        /// <summary>Policy Definition Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string PolicyDefinitionName { get => this._policyDefinitionName; set => this._policyDefinitionName = value; }

        /// <summary>Backing field for <see cref="PolicyDisplayName" /> property.</summary>
        private string _policyDisplayName;

        /// <summary>Policy Display Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string PolicyDisplayName { get => this._policyDisplayName; set => this._policyDisplayName = value; }

        /// <summary>Backing field for <see cref="PolicyType" /> property.</summary>
        private string _policyType;

        /// <summary>Policy Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string PolicyType { get => this._policyType; set => this._policyType = value; }

        /// <summary>Creates an new <see cref="GuestConfigurationHealthCheckAssignment" /> instance.</summary>
        public GuestConfigurationHealthCheckAssignment()
        {

        }
    }
    /// List all policy assignments with detailed properties on the VM
    public partial interface IGuestConfigurationHealthCheckAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.IJsonSerializable
    {
        /// <summary>Available in Azure Policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Available in Azure Policy",
        SerializedName = @"availableInAzurePolicy",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AvailableInAzurePolicy { get; set; }
        /// <summary>Available In Data Plane</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Available In Data Plane",
        SerializedName = @"availableInDataPlane",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AvailableInDataPlane { get; set; }
        /// <summary>
        /// A value indicating compliance status of the machine for the assigned guest configuration in Data Plane
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A value indicating compliance status of the machine for the assigned guest configuration in Data Plane",
        SerializedName = @"complianceStatusInDp",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ComplianceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ComplianceStatus? ComplianceStatusInDp { get;  }
        /// <summary>Configuration Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configuration Name",
        SerializedName = @"configurationName",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationName { get; set; }
        /// <summary>
        /// Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration
        /// and StopConfiguration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration and StopConfiguration",
        SerializedName = @"actionAfterReboot",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ActionAfterReboot) })]
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ActionAfterReboot? ConfigurationSettingActionAfterReboot { get;  }
        /// <summary>
        /// If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node.
        /// Otherwise, false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node. Otherwise, false",
        SerializedName = @"allowModuleOverwrite",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ConfigurationSettingAllowModuleOverwrite { get;  }
        /// <summary>
        /// Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values
        /// are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.",
        SerializedName = @"configurationMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ConfigurationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ConfigurationMode? ConfigurationSettingConfigurationMode { get;  }
        /// <summary>
        /// How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode
        /// property is set to ApplyOnly. The default value is 15.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode property is set to ApplyOnly. The default value is 15.",
        SerializedName = @"configurationModeFrequencyMins",
        PossibleTypes = new [] { typeof(float) })]
        float? ConfigurationSettingConfigurationModeFrequencyMin { get;  }
        /// <summary>
        /// Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you
        /// will have to manually reboot the node for any configuration that requires it. The default value is false. To use this
        /// setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting
        /// with the xPendingReboot module.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you will have to manually reboot the node for any configuration that requires it. The default value is false. To use this setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting with the xPendingReboot module.",
        SerializedName = @"rebootIfNeeded",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ConfigurationSettingRebootIfNeeded { get;  }
        /// <summary>
        /// The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored
        /// if the LCM is not configured in pull mode. The default value is 30.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored if the LCM is not configured in pull mode. The default value is 30.",
        SerializedName = @"refreshFrequencyMins",
        PossibleTypes = new [] { typeof(float) })]
        float? ConfigurationSettingRefreshFrequencyMin { get;  }
        /// <summary>Guest Configuration Assignment Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Guest Configuration Assignment Name",
        SerializedName = @"guestConfigurationAssignmentName",
        PossibleTypes = new [] { typeof(string) })]
        string GuestConfigurationAssignmentName { get; set; }
        /// <summary>Policy Visibility to ARM In Data plane</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy Visibility to ARM In Data plane",
        SerializedName = @"isVisibleToArmInDp",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsVisibleToArmInDp { get; set; }
        /// <summary>Date and time when last compliance status was checked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date and time when last compliance status was checked.",
        SerializedName = @"lastComplianceStatusChecked",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastComplianceStatusChecked { get;  }
        /// <summary>Id of the latest report for the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id of the latest report for the guest configuration assignment. ",
        SerializedName = @"latestReportId",
        PossibleTypes = new [] { typeof(string) })]
        string LatestReportId { get;  }
        /// <summary>Policy Assignment Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy Assignment Id",
        SerializedName = @"policyAssignmentId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyAssignmentId { get; set; }
        /// <summary>Policy Assignment parameters</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Policy Assignment parameters",
        SerializedName = @"policyAssignmentParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAny PolicyAssignmentParameter { get;  }
        /// <summary>Policy Assignment Scope</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy Assignment Scope",
        SerializedName = @"policyAssignmentScope",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyAssignmentScope { get; set; }
        /// <summary>Specifies the origin of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the origin of the configuration.",
        SerializedName = @"assignmentSource",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyConfigurationParameterAssignmentSource { get;  }
        /// <summary>
        /// Specifies the assignment type and execution of the configuration. Possible values are Audit, DeployAndAutoCorrect, ApplyAndAutoCorrect
        /// and ApplyAndMonitor.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the assignment type and execution of the configuration. Possible values are Audit, DeployAndAutoCorrect, ApplyAndAutoCorrect and ApplyAndMonitor.",
        SerializedName = @"assignmentType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.AssignmentType) })]
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.AssignmentType? PolicyConfigurationParameterAssignmentType { get; set; }
        /// <summary>The protected configuration parameters for the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The protected configuration parameters for the guest configuration.",
        SerializedName = @"configurationProtectedParameter",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IConfigurationParameter) })]
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IConfigurationParameter[] PolicyConfigurationParameterConfigurationProtectedParameter { get; set; }
        /// <summary>Combined hash of the guest configuration package and configuration parameters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Combined hash of the guest configuration package and configuration parameters.",
        SerializedName = @"contentHash",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyConfigurationParameterContentHash { get; set; }
        /// <summary>
        /// Specifies the content type of the configuration. Possible values could be Builtin or Custom.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the content type of the configuration. Possible values could be Builtin or Custom.",
        SerializedName = @"contentType",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyConfigurationParameterContentType { get;  }
        /// <summary>Uri of the storage where guest configuration package is uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Uri of the storage where guest configuration package is uploaded.",
        SerializedName = @"contentUri",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyConfigurationParameterContentUri { get; set; }
        /// <summary>Kind of the guest configuration. For example:DSC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kind of the guest configuration. For example:DSC",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.Kind) })]
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.Kind? PolicyConfigurationParameterKind { get; set; }
        /// <summary>Name of the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the guest configuration.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyConfigurationParameterName { get; set; }
        /// <summary>Version of the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Version of the guest configuration.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyConfigurationParameterVersion { get; set; }
        /// <summary>The configuration parameters for the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The configuration parameters for the guest configuration.",
        SerializedName = @"configurationParameter",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IConfigurationParameter) })]
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IConfigurationParameter[] PolicyConfigurationParametersConfigurationParameter { get; set; }
        /// <summary>Definition of the Policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Definition of the Policy",
        SerializedName = @"policyDefinition",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyDefinition { get; set; }
        /// <summary>Policy Definition Effect</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy Definition Effect",
        SerializedName = @"policyDefinitionEffect",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyDefinitionEffect { get; set; }
        /// <summary>Policy definition Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy definition Id",
        SerializedName = @"policyDefinitionId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyDefinitionId { get; set; }
        /// <summary>Policy Definition Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy Definition Name",
        SerializedName = @"policyDefinitionName",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyDefinitionName { get; set; }
        /// <summary>Policy Display Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy Display Name",
        SerializedName = @"policyDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyDisplayName { get; set; }
        /// <summary>Policy Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy Type",
        SerializedName = @"policyType",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyType { get; set; }

    }
    /// List all policy assignments with detailed properties on the VM
    internal partial interface IGuestConfigurationHealthCheckAssignmentInternal

    {
        /// <summary>Available in Azure Policy</summary>
        bool? AvailableInAzurePolicy { get; set; }
        /// <summary>Available In Data Plane</summary>
        bool? AvailableInDataPlane { get; set; }
        /// <summary>
        /// A value indicating compliance status of the machine for the assigned guest configuration in Data Plane
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ComplianceStatus? ComplianceStatusInDp { get; set; }
        /// <summary>Configuration Name</summary>
        string ConfigurationName { get; set; }
        /// <summary>
        /// Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration
        /// and StopConfiguration
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ActionAfterReboot? ConfigurationSettingActionAfterReboot { get; set; }
        /// <summary>
        /// If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node.
        /// Otherwise, false
        /// </summary>
        bool? ConfigurationSettingAllowModuleOverwrite { get; set; }
        /// <summary>
        /// Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values
        /// are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.ConfigurationMode? ConfigurationSettingConfigurationMode { get; set; }
        /// <summary>
        /// How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode
        /// property is set to ApplyOnly. The default value is 15.
        /// </summary>
        float? ConfigurationSettingConfigurationModeFrequencyMin { get; set; }
        /// <summary>
        /// Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you
        /// will have to manually reboot the node for any configuration that requires it. The default value is false. To use this
        /// setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting
        /// with the xPendingReboot module.
        /// </summary>
        bool? ConfigurationSettingRebootIfNeeded { get; set; }
        /// <summary>
        /// The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored
        /// if the LCM is not configured in pull mode. The default value is 30.
        /// </summary>
        float? ConfigurationSettingRefreshFrequencyMin { get; set; }
        /// <summary>Guest Configuration Assignment Name</summary>
        string GuestConfigurationAssignmentName { get; set; }
        /// <summary>Policy Visibility to ARM In Data plane</summary>
        bool? IsVisibleToArmInDp { get; set; }
        /// <summary>Date and time when last compliance status was checked.</summary>
        global::System.DateTime? LastComplianceStatusChecked { get; set; }
        /// <summary>Id of the latest report for the guest configuration assignment.</summary>
        string LatestReportId { get; set; }
        /// <summary>Policy Assignment Id</summary>
        string PolicyAssignmentId { get; set; }
        /// <summary>Policy Assignment parameters</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAny PolicyAssignmentParameter { get; set; }
        /// <summary>Policy Assignment Scope</summary>
        string PolicyAssignmentScope { get; set; }
        /// <summary>The guest configuration to assign.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IGuestConfigurationNavigation PolicyConfigurationParameter { get; set; }
        /// <summary>Specifies the origin of the configuration.</summary>
        string PolicyConfigurationParameterAssignmentSource { get; set; }
        /// <summary>
        /// Specifies the assignment type and execution of the configuration. Possible values are Audit, DeployAndAutoCorrect, ApplyAndAutoCorrect
        /// and ApplyAndMonitor.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.AssignmentType? PolicyConfigurationParameterAssignmentType { get; set; }
        /// <summary>The protected configuration parameters for the guest configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IConfigurationParameter[] PolicyConfigurationParameterConfigurationProtectedParameter { get; set; }
        /// <summary>The configuration setting for the guest configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IConfigurationSetting PolicyConfigurationParameterConfigurationSetting { get; set; }
        /// <summary>Combined hash of the guest configuration package and configuration parameters.</summary>
        string PolicyConfigurationParameterContentHash { get; set; }
        /// <summary>
        /// Specifies the content type of the configuration. Possible values could be Builtin or Custom.
        /// </summary>
        string PolicyConfigurationParameterContentType { get; set; }
        /// <summary>Uri of the storage where guest configuration package is uploaded.</summary>
        string PolicyConfigurationParameterContentUri { get; set; }
        /// <summary>Kind of the guest configuration. For example:DSC</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Support.Kind? PolicyConfigurationParameterKind { get; set; }
        /// <summary>Name of the guest configuration.</summary>
        string PolicyConfigurationParameterName { get; set; }
        /// <summary>Version of the guest configuration.</summary>
        string PolicyConfigurationParameterVersion { get; set; }
        /// <summary>The configuration parameters for the guest configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.Api20220125.IConfigurationParameter[] PolicyConfigurationParametersConfigurationParameter { get; set; }
        /// <summary>Definition of the Policy</summary>
        string PolicyDefinition { get; set; }
        /// <summary>Policy Definition Effect</summary>
        string PolicyDefinitionEffect { get; set; }
        /// <summary>Policy definition Id</summary>
        string PolicyDefinitionId { get; set; }
        /// <summary>Policy Definition Name</summary>
        string PolicyDefinitionName { get; set; }
        /// <summary>Policy Display Name</summary>
        string PolicyDisplayName { get; set; }
        /// <summary>Policy Type</summary>
        string PolicyType { get; set; }

    }
}