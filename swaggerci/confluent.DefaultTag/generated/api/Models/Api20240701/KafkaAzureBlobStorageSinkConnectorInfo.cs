// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>The partner connector type is KafkaAzureBlobStorageSink</summary>
    public partial class KafkaAzureBlobStorageSinkConnectorInfo :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IKafkaAzureBlobStorageSinkConnectorInfo,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IKafkaAzureBlobStorageSinkConnectorInfoInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IPartnerInfoBase"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IPartnerInfoBase __partnerInfoBase = new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.PartnerInfoBase();

        /// <summary>Backing field for <see cref="ApiKey" /> property.</summary>
        private string _apiKey;

        /// <summary>Kafka API Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string ApiKey { get => this._apiKey; set => this._apiKey = value; }

        /// <summary>Backing field for <see cref="ApiSecret" /> property.</summary>
        private string _apiSecret;

        /// <summary>Kafka API Key Secret</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string ApiSecret { get => this._apiSecret; set => this._apiSecret = value; }

        /// <summary>Backing field for <see cref="AuthType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.AuthType? _authType;

        /// <summary>Kafka Auth Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.AuthType? AuthType { get => this._authType; set => this._authType = value; }

        /// <summary>Backing field for <see cref="FlushSize" /> property.</summary>
        private string _flushSize;

        /// <summary>Flush size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string FlushSize { get => this._flushSize; set => this._flushSize = value; }

        /// <summary>Backing field for <see cref="InputFormat" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.DataFormatType? _inputFormat;

        /// <summary>Kafka Input Data Format Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.DataFormatType? InputFormat { get => this._inputFormat; set => this._inputFormat = value; }

        /// <summary>Backing field for <see cref="MaxTask" /> property.</summary>
        private string _maxTask;

        /// <summary>Maximum Tasks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string MaxTask { get => this._maxTask; set => this._maxTask = value; }

        /// <summary>Backing field for <see cref="OutputFormat" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.DataFormatType? _outputFormat;

        /// <summary>Kafka Output Data Format Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.DataFormatType? OutputFormat { get => this._outputFormat; set => this._outputFormat = value; }

        /// <summary>The partner connector type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.PartnerConnectorType PartnerConnectorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IPartnerInfoBaseInternal)__partnerInfoBase).PartnerConnectorType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IPartnerInfoBaseInternal)__partnerInfoBase).PartnerConnectorType = value ; }

        /// <summary>Backing field for <see cref="ServiceAccountId" /> property.</summary>
        private string _serviceAccountId;

        /// <summary>Kafka Service Account Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string ServiceAccountId { get => this._serviceAccountId; set => this._serviceAccountId = value; }

        /// <summary>Backing field for <see cref="TimeInterval" /> property.</summary>
        private string _timeInterval;

        /// <summary>Time Interval</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string TimeInterval { get => this._timeInterval; set => this._timeInterval = value; }

        /// <summary>Backing field for <see cref="Topic" /> property.</summary>
        private string[] _topic;

        /// <summary>Kafka topics list</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string[] Topic { get => this._topic; set => this._topic = value; }

        /// <summary>Backing field for <see cref="TopicsDir" /> property.</summary>
        private string _topicsDir;

        /// <summary>Kafka topics directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string TopicsDir { get => this._topicsDir; set => this._topicsDir = value; }

        /// <summary>Creates an new <see cref="KafkaAzureBlobStorageSinkConnectorInfo" /> instance.</summary>
        public KafkaAzureBlobStorageSinkConnectorInfo()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__partnerInfoBase), __partnerInfoBase);
            await eventListener.AssertObjectIsValid(nameof(__partnerInfoBase), __partnerInfoBase);
        }
    }
    /// The partner connector type is KafkaAzureBlobStorageSink
    public partial interface IKafkaAzureBlobStorageSinkConnectorInfo :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IPartnerInfoBase
    {
        /// <summary>Kafka API Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kafka API Key",
        SerializedName = @"apiKey",
        PossibleTypes = new [] { typeof(string) })]
        string ApiKey { get; set; }
        /// <summary>Kafka API Key Secret</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kafka API Key Secret",
        SerializedName = @"apiSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ApiSecret { get; set; }
        /// <summary>Kafka Auth Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kafka Auth Type",
        SerializedName = @"authType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.AuthType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.AuthType? AuthType { get; set; }
        /// <summary>Flush size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flush size",
        SerializedName = @"flushSize",
        PossibleTypes = new [] { typeof(string) })]
        string FlushSize { get; set; }
        /// <summary>Kafka Input Data Format Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kafka Input Data Format Type",
        SerializedName = @"inputFormat",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.DataFormatType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.DataFormatType? InputFormat { get; set; }
        /// <summary>Maximum Tasks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum Tasks",
        SerializedName = @"maxTasks",
        PossibleTypes = new [] { typeof(string) })]
        string MaxTask { get; set; }
        /// <summary>Kafka Output Data Format Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kafka Output Data Format Type",
        SerializedName = @"outputFormat",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.DataFormatType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.DataFormatType? OutputFormat { get; set; }
        /// <summary>Kafka Service Account Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kafka Service Account Id",
        SerializedName = @"serviceAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceAccountId { get; set; }
        /// <summary>Time Interval</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time Interval",
        SerializedName = @"timeInterval",
        PossibleTypes = new [] { typeof(string) })]
        string TimeInterval { get; set; }
        /// <summary>Kafka topics list</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kafka topics list",
        SerializedName = @"topics",
        PossibleTypes = new [] { typeof(string) })]
        string[] Topic { get; set; }
        /// <summary>Kafka topics directory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kafka topics directory",
        SerializedName = @"topicsDir",
        PossibleTypes = new [] { typeof(string) })]
        string TopicsDir { get; set; }

    }
    /// The partner connector type is KafkaAzureBlobStorageSink
    internal partial interface IKafkaAzureBlobStorageSinkConnectorInfoInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IPartnerInfoBaseInternal
    {
        /// <summary>Kafka API Key</summary>
        string ApiKey { get; set; }
        /// <summary>Kafka API Key Secret</summary>
        string ApiSecret { get; set; }
        /// <summary>Kafka Auth Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.AuthType? AuthType { get; set; }
        /// <summary>Flush size</summary>
        string FlushSize { get; set; }
        /// <summary>Kafka Input Data Format Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.DataFormatType? InputFormat { get; set; }
        /// <summary>Maximum Tasks</summary>
        string MaxTask { get; set; }
        /// <summary>Kafka Output Data Format Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.DataFormatType? OutputFormat { get; set; }
        /// <summary>Kafka Service Account Id</summary>
        string ServiceAccountId { get; set; }
        /// <summary>Time Interval</summary>
        string TimeInterval { get; set; }
        /// <summary>Kafka topics list</summary>
        string[] Topic { get; set; }
        /// <summary>Kafka topics directory</summary>
        string TopicsDir { get; set; }

    }
}