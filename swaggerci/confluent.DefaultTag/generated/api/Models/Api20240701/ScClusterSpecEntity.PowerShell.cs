// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701
{
    using Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.PowerShell;

    /// <summary>Spec of the cluster record</summary>
    [System.ComponentModel.TypeConverter(typeof(ScClusterSpecEntityTypeConverter))]
    public partial class ScClusterSpecEntity
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScClusterSpecEntity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntity" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntity DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ScClusterSpecEntity(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScClusterSpecEntity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntity" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntity DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ScClusterSpecEntity(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ScClusterSpecEntity" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ScClusterSpecEntity" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntity FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScClusterSpecEntity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ScClusterSpecEntity(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Config"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Config = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IClusterConfigEntity) content.GetValueForProperty("Config",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Config, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ClusterConfigEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Environment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Environment = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterNetworkEnvironmentEntity) content.GetValueForProperty("Environment",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Environment, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScClusterNetworkEnvironmentEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Network"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Network = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterNetworkEnvironmentEntity) content.GetValueForProperty("Network",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Network, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScClusterNetworkEnvironmentEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Byok"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Byok = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterByokEntity) content.GetValueForProperty("Byok",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Byok, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScClusterByokEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Availability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Availability = (string) content.GetValueForProperty("Availability",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Availability, global::System.Convert.ToString);
            }
            if (content.Contains("Cloud"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Cloud = (string) content.GetValueForProperty("Cloud",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Cloud, global::System.Convert.ToString);
            }
            if (content.Contains("Zone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Zone = (string) content.GetValueForProperty("Zone",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Zone, global::System.Convert.ToString);
            }
            if (content.Contains("Package"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Package = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.Package?) content.GetValueForProperty("Package",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Package, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.Package.CreateFrom);
            }
            if (content.Contains("Region"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Region = (string) content.GetValueForProperty("Region",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Region, global::System.Convert.ToString);
            }
            if (content.Contains("KafkaBootstrapEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).KafkaBootstrapEndpoint = (string) content.GetValueForProperty("KafkaBootstrapEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).KafkaBootstrapEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("HttpEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).HttpEndpoint = (string) content.GetValueForProperty("HttpEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).HttpEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ApiEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ApiEndpoint = (string) content.GetValueForProperty("ApiEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ApiEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ScClusterNetworkEnvironmentEntityEnvironment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ScClusterNetworkEnvironmentEntityEnvironment = (string) content.GetValueForProperty("ScClusterNetworkEnvironmentEntityEnvironment",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ScClusterNetworkEnvironmentEntityEnvironment, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ConfigKind = (string) content.GetValueForProperty("ConfigKind",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ConfigKind, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentId = (string) content.GetValueForProperty("EnvironmentId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentId, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentRelated = (string) content.GetValueForProperty("EnvironmentRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentRelated, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentResourceName = (string) content.GetValueForProperty("EnvironmentResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkId = (string) content.GetValueForProperty("NetworkId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkEnvironment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkEnvironment = (string) content.GetValueForProperty("NetworkEnvironment",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkEnvironment, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkRelated = (string) content.GetValueForProperty("NetworkRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkRelated, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkResourceName = (string) content.GetValueForProperty("NetworkResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("ByokId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokId = (string) content.GetValueForProperty("ByokId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokId, global::System.Convert.ToString);
            }
            if (content.Contains("ByokRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokRelated = (string) content.GetValueForProperty("ByokRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokRelated, global::System.Convert.ToString);
            }
            if (content.Contains("ByokResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokResourceName = (string) content.GetValueForProperty("ByokResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokResourceName, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScClusterSpecEntity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ScClusterSpecEntity(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Config"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Config = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IClusterConfigEntity) content.GetValueForProperty("Config",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Config, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ClusterConfigEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Environment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Environment = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterNetworkEnvironmentEntity) content.GetValueForProperty("Environment",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Environment, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScClusterNetworkEnvironmentEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Network"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Network = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterNetworkEnvironmentEntity) content.GetValueForProperty("Network",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Network, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScClusterNetworkEnvironmentEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Byok"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Byok = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterByokEntity) content.GetValueForProperty("Byok",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Byok, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScClusterByokEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Availability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Availability = (string) content.GetValueForProperty("Availability",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Availability, global::System.Convert.ToString);
            }
            if (content.Contains("Cloud"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Cloud = (string) content.GetValueForProperty("Cloud",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Cloud, global::System.Convert.ToString);
            }
            if (content.Contains("Zone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Zone = (string) content.GetValueForProperty("Zone",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Zone, global::System.Convert.ToString);
            }
            if (content.Contains("Package"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Package = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.Package?) content.GetValueForProperty("Package",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Package, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.Package.CreateFrom);
            }
            if (content.Contains("Region"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Region = (string) content.GetValueForProperty("Region",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).Region, global::System.Convert.ToString);
            }
            if (content.Contains("KafkaBootstrapEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).KafkaBootstrapEndpoint = (string) content.GetValueForProperty("KafkaBootstrapEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).KafkaBootstrapEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("HttpEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).HttpEndpoint = (string) content.GetValueForProperty("HttpEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).HttpEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ApiEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ApiEndpoint = (string) content.GetValueForProperty("ApiEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ApiEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ScClusterNetworkEnvironmentEntityEnvironment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ScClusterNetworkEnvironmentEntityEnvironment = (string) content.GetValueForProperty("ScClusterNetworkEnvironmentEntityEnvironment",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ScClusterNetworkEnvironmentEntityEnvironment, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ConfigKind = (string) content.GetValueForProperty("ConfigKind",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ConfigKind, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentId = (string) content.GetValueForProperty("EnvironmentId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentId, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentRelated = (string) content.GetValueForProperty("EnvironmentRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentRelated, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentResourceName = (string) content.GetValueForProperty("EnvironmentResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).EnvironmentResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkId = (string) content.GetValueForProperty("NetworkId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkEnvironment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkEnvironment = (string) content.GetValueForProperty("NetworkEnvironment",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkEnvironment, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkRelated = (string) content.GetValueForProperty("NetworkRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkRelated, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkResourceName = (string) content.GetValueForProperty("NetworkResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).NetworkResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("ByokId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokId = (string) content.GetValueForProperty("ByokId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokId, global::System.Convert.ToString);
            }
            if (content.Contains("ByokRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokRelated = (string) content.GetValueForProperty("ByokRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokRelated, global::System.Convert.ToString);
            }
            if (content.Contains("ByokResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokResourceName = (string) content.GetValueForProperty("ByokResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScClusterSpecEntityInternal)this).ByokResourceName, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Spec of the cluster record
    [System.ComponentModel.TypeConverter(typeof(ScClusterSpecEntityTypeConverter))]
    public partial interface IScClusterSpecEntity

    {

    }
}