// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>Connector Info Base properties</summary>
    public partial class ConnectorInfoBase :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IConnectorInfoBase,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IConnectorInfoBaseInternal
    {

        /// <summary>Backing field for <see cref="ConnectorClass" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorClass? _connectorClass;

        /// <summary>Connector Class</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorClass? ConnectorClass { get => this._connectorClass; set => this._connectorClass = value; }

        /// <summary>Backing field for <see cref="ConnectorId" /> property.</summary>
        private string _connectorId;

        /// <summary>Connector Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string ConnectorId { get => this._connectorId; set => this._connectorId = value; }

        /// <summary>Backing field for <see cref="ConnectorName" /> property.</summary>
        private string _connectorName;

        /// <summary>Connector Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string ConnectorName { get => this._connectorName; set => this._connectorName = value; }

        /// <summary>Backing field for <see cref="ConnectorState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorStatus? _connectorState;

        /// <summary>Connector Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorStatus? ConnectorState { get => this._connectorState; set => this._connectorState = value; }

        /// <summary>Backing field for <see cref="ConnectorType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorType? _connectorType;

        /// <summary>Connector Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorType? ConnectorType { get => this._connectorType; set => this._connectorType = value; }

        /// <summary>Creates an new <see cref="ConnectorInfoBase" /> instance.</summary>
        public ConnectorInfoBase()
        {

        }
    }
    /// Connector Info Base properties
    public partial interface IConnectorInfoBase :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IJsonSerializable
    {
        /// <summary>Connector Class</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Connector Class",
        SerializedName = @"connectorClass",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorClass) })]
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorClass? ConnectorClass { get; set; }
        /// <summary>Connector Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Connector Id",
        SerializedName = @"connectorId",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorId { get; set; }
        /// <summary>Connector Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Connector Name",
        SerializedName = @"connectorName",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorName { get; set; }
        /// <summary>Connector Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Connector Status",
        SerializedName = @"connectorState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorStatus? ConnectorState { get; set; }
        /// <summary>Connector Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Connector Type",
        SerializedName = @"connectorType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorType? ConnectorType { get; set; }

    }
    /// Connector Info Base properties
    internal partial interface IConnectorInfoBaseInternal

    {
        /// <summary>Connector Class</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorClass? ConnectorClass { get; set; }
        /// <summary>Connector Id</summary>
        string ConnectorId { get; set; }
        /// <summary>Connector Name</summary>
        string ConnectorName { get; set; }
        /// <summary>Connector Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorStatus? ConnectorState { get; set; }
        /// <summary>Connector Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Support.ConnectorType? ConnectorType { get; set; }

    }
}