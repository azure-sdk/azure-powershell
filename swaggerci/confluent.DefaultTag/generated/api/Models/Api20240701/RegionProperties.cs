// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>Region Properties</summary>
    public partial class RegionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Metadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntity _metadata;

        /// <summary>Metadata of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntity Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScMetadataEntity()); set => this._metadata = value; }

        /// <summary>Created Date Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataCreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).CreatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).CreatedTimestamp = value ?? null; }

        /// <summary>Deleted Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataDeletedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).DeletedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).DeletedTimestamp = value ?? null; }

        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).ResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).ResourceName = value ?? null; }

        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataSelf { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).Self; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).Self = value ?? null; }

        /// <summary>Updated Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).UpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).UpdatedTimestamp = value ?? null; }

        /// <summary>Internal Acessors for Metadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionPropertiesInternal.Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScMetadataEntity()); set { {_metadata = value;} } }

        /// <summary>Internal Acessors for Spec</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionPropertiesInternal.Spec { get => (this._spec = this._spec ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.RegionSpecEntity()); set { {_spec = value;} } }

        /// <summary>Backing field for <see cref="Spec" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntity _spec;

        /// <summary>Specification of the region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntity Spec { get => (this._spec = this._spec ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.RegionSpecEntity()); set => this._spec = value; }

        /// <summary>Cloud provider name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecCloud { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntityInternal)Spec).Cloud; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntityInternal)Spec).Cloud = value ?? null; }

        /// <summary>Display Name of the region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntityInternal)Spec).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntityInternal)Spec).Name = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string[] SpecPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntityInternal)Spec).Package; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntityInternal)Spec).Package = value ?? null /* arrayOf */; }

        /// <summary>Region name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecRegionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntityInternal)Spec).RegionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntityInternal)Spec).RegionName = value ?? null; }

        /// <summary>Creates an new <see cref="RegionProperties" /> instance.</summary>
        public RegionProperties()
        {

        }
    }
    /// Region Properties
    public partial interface IRegionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IJsonSerializable
    {
        /// <summary>Created Date Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Created Date Time",
        SerializedName = @"createdTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataCreatedTimestamp { get; set; }
        /// <summary>Deleted Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deleted Date time",
        SerializedName = @"deletedTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataDeletedTimestamp { get; set; }
        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource name of the record",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Self lookup url",
        SerializedName = @"self",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataSelf { get; set; }
        /// <summary>Updated Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Updated Date time",
        SerializedName = @"updatedTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataUpdatedTimestamp { get; set; }
        /// <summary>Cloud provider name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cloud provider name",
        SerializedName = @"cloud",
        PossibleTypes = new [] { typeof(string) })]
        string SpecCloud { get; set; }
        /// <summary>Display Name of the region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display Name of the region",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SpecName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"packages",
        PossibleTypes = new [] { typeof(string) })]
        string[] SpecPackage { get; set; }
        /// <summary>Region name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Region name",
        SerializedName = @"regionName",
        PossibleTypes = new [] { typeof(string) })]
        string SpecRegionName { get; set; }

    }
    /// Region Properties
    internal partial interface IRegionPropertiesInternal

    {
        /// <summary>Metadata of the record</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntity Metadata { get; set; }
        /// <summary>Created Date Time</summary>
        string MetadataCreatedTimestamp { get; set; }
        /// <summary>Deleted Date time</summary>
        string MetadataDeletedTimestamp { get; set; }
        /// <summary>Resource name of the record</summary>
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        string MetadataSelf { get; set; }
        /// <summary>Updated Date time</summary>
        string MetadataUpdatedTimestamp { get; set; }
        /// <summary>Specification of the region</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IRegionSpecEntity Spec { get; set; }
        /// <summary>Cloud provider name</summary>
        string SpecCloud { get; set; }
        /// <summary>Display Name of the region</summary>
        string SpecName { get; set; }

        string[] SpecPackage { get; set; }
        /// <summary>Region name</summary>
        string SpecRegionName { get; set; }

    }
}