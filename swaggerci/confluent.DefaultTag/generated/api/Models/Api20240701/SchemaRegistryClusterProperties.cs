// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>Schema Registry Cluster Properties</summary>
    public partial class SchemaRegistryClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterPropertiesInternal
    {

        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string EnvironmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).EnvironmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).EnvironmentId = value ?? null; }

        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string EnvironmentRelated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).EnvironmentRelated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).EnvironmentRelated = value ?? null; }

        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string EnvironmentResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).EnvironmentResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).EnvironmentResourceName = value ?? null; }

        /// <summary>Backing field for <see cref="Metadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntity _metadata;

        /// <summary>Metadata of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntity Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScMetadataEntity()); set => this._metadata = value; }

        /// <summary>Created Date Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataCreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).CreatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).CreatedTimestamp = value ?? null; }

        /// <summary>Deleted Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataDeletedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).DeletedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).DeletedTimestamp = value ?? null; }

        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).ResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).ResourceName = value ?? null; }

        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataSelf { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).Self; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).Self = value ?? null; }

        /// <summary>Updated Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).UpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntityInternal)Metadata).UpdatedTimestamp = value ?? null; }

        /// <summary>Internal Acessors for Metadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterPropertiesInternal.Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ScMetadataEntity()); set { {_metadata = value;} } }

        /// <summary>Internal Acessors for Spec</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterPropertiesInternal.Spec { get => (this._spec = this._spec ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.SchemaRegistryClusterSpecEntity()); set { {_spec = value;} } }

        /// <summary>Internal Acessors for SpecEnvironment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterEnvironmentRegionEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterPropertiesInternal.SpecEnvironment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).Environment; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).Environment = value; }

        /// <summary>Internal Acessors for SpecRegion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterEnvironmentRegionEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterPropertiesInternal.SpecRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).Region; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).Region = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterStatusEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterPropertiesInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.SchemaRegistryClusterStatusEntity()); set { {_status = value;} } }

        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string RegionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).RegionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).RegionId = value ?? null; }

        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string RegionRelated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).RegionRelated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).RegionRelated = value ?? null; }

        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string RegionResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).RegionResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).RegionResourceName = value ?? null; }

        /// <summary>Backing field for <see cref="Spec" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntity _spec;

        /// <summary>Specification of the schema registry cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntity Spec { get => (this._spec = this._spec ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.SchemaRegistryClusterSpecEntity()); set => this._spec = value; }

        /// <summary>The cloud service provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecCloud { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).Cloud; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).Cloud = value ?? null; }

        /// <summary>Http endpoint of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecHttpEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).HttpEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).HttpEndpoint = value ?? null; }

        /// <summary>Name of the schema registry cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).Name = value ?? null; }

        /// <summary>Type of the cluster package Advanced, essentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).Package; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntityInternal)Spec).Package = value ?? null; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterStatusEntity _status;

        /// <summary>Specification of the cluster status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterStatusEntity Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.SchemaRegistryClusterStatusEntity()); set => this._status = value; }

        /// <summary>The lifecycle phase of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string StatusPhase { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterStatusEntityInternal)Status).Phase; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterStatusEntityInternal)Status).Phase = value ?? null; }

        /// <summary>Creates an new <see cref="SchemaRegistryClusterProperties" /> instance.</summary>
        public SchemaRegistryClusterProperties()
        {

        }
    }
    /// Schema Registry Cluster Properties
    public partial interface ISchemaRegistryClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IJsonSerializable
    {
        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the referred resource",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API URL for accessing or modifying the referred object",
        SerializedName = @"related",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CRN reference to the referred resource",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentResourceName { get; set; }
        /// <summary>Created Date Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Created Date Time",
        SerializedName = @"createdTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataCreatedTimestamp { get; set; }
        /// <summary>Deleted Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deleted Date time",
        SerializedName = @"deletedTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataDeletedTimestamp { get; set; }
        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource name of the record",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Self lookup url",
        SerializedName = @"self",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataSelf { get; set; }
        /// <summary>Updated Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Updated Date time",
        SerializedName = @"updatedTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataUpdatedTimestamp { get; set; }
        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the referred resource",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string RegionId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API URL for accessing or modifying the referred object",
        SerializedName = @"related",
        PossibleTypes = new [] { typeof(string) })]
        string RegionRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CRN reference to the referred resource",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string RegionResourceName { get; set; }
        /// <summary>The cloud service provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cloud service provider ",
        SerializedName = @"cloud",
        PossibleTypes = new [] { typeof(string) })]
        string SpecCloud { get; set; }
        /// <summary>Http endpoint of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Http endpoint of the cluster",
        SerializedName = @"httpEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string SpecHttpEndpoint { get; set; }
        /// <summary>Name of the schema registry cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the schema registry cluster",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SpecName { get; set; }
        /// <summary>Type of the cluster package Advanced, essentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the cluster package Advanced, essentials",
        SerializedName = @"package",
        PossibleTypes = new [] { typeof(string) })]
        string SpecPackage { get; set; }
        /// <summary>The lifecycle phase of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The lifecycle phase of the cluster",
        SerializedName = @"phase",
        PossibleTypes = new [] { typeof(string) })]
        string StatusPhase { get; set; }

    }
    /// Schema Registry Cluster Properties
    internal partial interface ISchemaRegistryClusterPropertiesInternal

    {
        /// <summary>ID of the referred resource</summary>
        string EnvironmentId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        string EnvironmentRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        string EnvironmentResourceName { get; set; }
        /// <summary>Metadata of the record</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IScMetadataEntity Metadata { get; set; }
        /// <summary>Created Date Time</summary>
        string MetadataCreatedTimestamp { get; set; }
        /// <summary>Deleted Date time</summary>
        string MetadataDeletedTimestamp { get; set; }
        /// <summary>Resource name of the record</summary>
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        string MetadataSelf { get; set; }
        /// <summary>Updated Date time</summary>
        string MetadataUpdatedTimestamp { get; set; }
        /// <summary>ID of the referred resource</summary>
        string RegionId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        string RegionRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        string RegionResourceName { get; set; }
        /// <summary>Specification of the schema registry cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterSpecEntity Spec { get; set; }
        /// <summary>The cloud service provider</summary>
        string SpecCloud { get; set; }
        /// <summary>Environment details of the schema registry cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterEnvironmentRegionEntity SpecEnvironment { get; set; }
        /// <summary>Http endpoint of the cluster</summary>
        string SpecHttpEndpoint { get; set; }
        /// <summary>Name of the schema registry cluster</summary>
        string SpecName { get; set; }
        /// <summary>Type of the cluster package Advanced, essentials</summary>
        string SpecPackage { get; set; }
        /// <summary>Region details of the schema registry cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterEnvironmentRegionEntity SpecRegion { get; set; }
        /// <summary>Specification of the cluster status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.ISchemaRegistryClusterStatusEntity Status { get; set; }
        /// <summary>The lifecycle phase of the cluster</summary>
        string StatusPhase { get; set; }

    }
}