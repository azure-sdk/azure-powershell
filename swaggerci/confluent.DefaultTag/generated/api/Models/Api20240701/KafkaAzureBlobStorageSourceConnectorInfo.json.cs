// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>The partner connector type is KafkaAzureBlobStorageSource</summary>
    public partial class KafkaAzureBlobStorageSourceConnectorInfo
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IKafkaAzureBlobStorageSourceConnectorInfo.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IKafkaAzureBlobStorageSourceConnectorInfo.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.IKafkaAzureBlobStorageSourceConnectorInfo FromJson(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject json ? new KafkaAzureBlobStorageSourceConnectorInfo(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject into a new instance of <see cref="KafkaAzureBlobStorageSourceConnectorInfo" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal KafkaAzureBlobStorageSourceConnectorInfo(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            __partnerInfoBase = new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240701.PartnerInfoBase(json);
            {_authType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString>("authType"), out var __jsonAuthType) ? (string)__jsonAuthType : (string)AuthType;}
            {_inputFormat = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString>("inputFormat"), out var __jsonInputFormat) ? (string)__jsonInputFormat : (string)InputFormat;}
            {_outputFormat = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString>("outputFormat"), out var __jsonOutputFormat) ? (string)__jsonOutputFormat : (string)OutputFormat;}
            {_apiKey = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString>("apiKey"), out var __jsonApiKey) ? (string)__jsonApiKey : (string)ApiKey;}
            {_apiSecret = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString>("apiSecret"), out var __jsonApiSecret) ? (string)__jsonApiSecret : (string)ApiSecret;}
            {_serviceAccountId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString>("serviceAccountId"), out var __jsonServiceAccountId) ? (string)__jsonServiceAccountId : (string)ServiceAccountId;}
            {_topicRegex = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString>("topicRegex"), out var __jsonTopicRegex) ? (string)__jsonTopicRegex : (string)TopicRegex;}
            {_topicsDir = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString>("topicsDir"), out var __jsonTopicsDir) ? (string)__jsonTopicsDir : (string)TopicsDir;}
            {_maxTask = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString>("maxTasks"), out var __jsonMaxTasks) ? (string)__jsonMaxTasks : (string)MaxTask;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="KafkaAzureBlobStorageSourceConnectorInfo" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode"
        /// />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="KafkaAzureBlobStorageSourceConnectorInfo" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode"
        /// />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            __partnerInfoBase?.ToJson(container, serializationMode);
            AddIf( null != (((object)this._authType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString(this._authType.ToString()) : null, "authType" ,container.Add );
            AddIf( null != (((object)this._inputFormat)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString(this._inputFormat.ToString()) : null, "inputFormat" ,container.Add );
            AddIf( null != (((object)this._outputFormat)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString(this._outputFormat.ToString()) : null, "outputFormat" ,container.Add );
            AddIf( null != (((object)this._apiKey)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString(this._apiKey.ToString()) : null, "apiKey" ,container.Add );
            AddIf( null != (((object)this._apiSecret)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString(this._apiSecret.ToString()) : null, "apiSecret" ,container.Add );
            AddIf( null != (((object)this._serviceAccountId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString(this._serviceAccountId.ToString()) : null, "serviceAccountId" ,container.Add );
            AddIf( null != (((object)this._topicRegex)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString(this._topicRegex.ToString()) : null, "topicRegex" ,container.Add );
            AddIf( null != (((object)this._topicsDir)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString(this._topicsDir.ToString()) : null, "topicsDir" ,container.Add );
            AddIf( null != (((object)this._maxTask)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonString(this._maxTask.ToString()) : null, "maxTasks" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}