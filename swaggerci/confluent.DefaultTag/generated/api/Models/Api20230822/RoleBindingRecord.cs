// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>Record of the environment</summary>
    public partial class RoleBindingRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IRoleBindingRecord,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IRoleBindingRecordInternal
    {

        /// <summary>Backing field for <see cref="CrnPattern" /> property.</summary>
        private string _crnPattern;

        /// <summary>
        /// A CRN that specifies the scope and resource patterns necessary for the role to bind
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string CrnPattern { get => this._crnPattern; set => this._crnPattern = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Id of the role</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private string _kind;

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Kind { get => this._kind; set => this._kind = value; }

        /// <summary>Backing field for <see cref="Metadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntity _metadata;

        /// <summary>Metadata of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntity Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.MetadataEntity()); set => this._metadata = value; }

        /// <summary>Created Date Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntityInternal)Metadata).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntityInternal)Metadata).CreatedAt = value ?? null; }

        /// <summary>Deleted Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataDeletedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntityInternal)Metadata).DeletedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntityInternal)Metadata).DeletedAt = value ?? null; }

        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntityInternal)Metadata).ResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntityInternal)Metadata).ResourceName = value ?? null; }

        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataSelf { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntityInternal)Metadata).Self; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntityInternal)Metadata).Self = value ?? null; }

        /// <summary>Updated Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataUpdatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntityInternal)Metadata).UpdatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntityInternal)Metadata).UpdatedAt = value ?? null; }

        /// <summary>Internal Acessors for Metadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IRoleBindingRecordInternal.Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.MetadataEntity()); set { {_metadata = value;} } }

        /// <summary>Backing field for <see cref="Principal" /> property.</summary>
        private string _principal;

        /// <summary>The principal User or Group to bind the role to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Principal { get => this._principal; set => this._principal = value; }

        /// <summary>Backing field for <see cref="RoleName" /> property.</summary>
        private string _roleName;

        /// <summary>The name of the role to bind to the principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string RoleName { get => this._roleName; set => this._roleName = value; }

        /// <summary>Creates an new <see cref="RoleBindingRecord" /> instance.</summary>
        public RoleBindingRecord()
        {

        }
    }
    /// Record of the environment
    public partial interface IRoleBindingRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A CRN that specifies the scope and resource patterns necessary for the role to bind
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A CRN that specifies the scope and resource patterns necessary for the role to bind",
        SerializedName = @"crn_pattern",
        PossibleTypes = new [] { typeof(string) })]
        string CrnPattern { get; set; }
        /// <summary>Id of the role</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the role",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the resource.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string Kind { get; set; }
        /// <summary>Created Date Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Created Date Time",
        SerializedName = @"created_at",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataCreatedAt { get; set; }
        /// <summary>Deleted Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deleted Date time",
        SerializedName = @"deleted_at",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataDeletedAt { get; set; }
        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource name of the record",
        SerializedName = @"resource_name",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Self lookup url",
        SerializedName = @"self",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataSelf { get; set; }
        /// <summary>Updated Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Updated Date time",
        SerializedName = @"updated_at",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataUpdatedAt { get; set; }
        /// <summary>The principal User or Group to bind the role to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principal User or Group to bind the role to",
        SerializedName = @"principal",
        PossibleTypes = new [] { typeof(string) })]
        string Principal { get; set; }
        /// <summary>The name of the role to bind to the principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the role to bind to the principal",
        SerializedName = @"role_name",
        PossibleTypes = new [] { typeof(string) })]
        string RoleName { get; set; }

    }
    /// Record of the environment
    internal partial interface IRoleBindingRecordInternal

    {
        /// <summary>
        /// A CRN that specifies the scope and resource patterns necessary for the role to bind
        /// </summary>
        string CrnPattern { get; set; }
        /// <summary>Id of the role</summary>
        string Id { get; set; }
        /// <summary>The type of the resource.</summary>
        string Kind { get; set; }
        /// <summary>Metadata of the record</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20230822.IMetadataEntity Metadata { get; set; }
        /// <summary>Created Date Time</summary>
        string MetadataCreatedAt { get; set; }
        /// <summary>Deleted Date time</summary>
        string MetadataDeletedAt { get; set; }
        /// <summary>Resource name of the record</summary>
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        string MetadataSelf { get; set; }
        /// <summary>Updated Date time</summary>
        string MetadataUpdatedAt { get; set; }
        /// <summary>The principal User or Group to bind the role to</summary>
        string Principal { get; set; }
        /// <summary>The name of the role to bind to the principal</summary>
        string RoleName { get; set; }

    }
}