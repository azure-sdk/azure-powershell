// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>Details of topic record</summary>
    public partial class TopicRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicRecord,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicRecordInternal
    {

        /// <summary>Relationship of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string ConfigRelated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).ConfigRelated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).ConfigRelated = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The ARM Resource Id of the Topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Type of topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).Kind = value ?? null; }

        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).MetadataResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).MetadataResourceName = value ?? null; }

        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataSelf { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).MetadataSelf; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).MetadataSelf = value ?? null; }

        /// <summary>Internal Acessors for Config</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicsRelatedLink Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicRecordInternal.Config { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).Config; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).Config = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicRecordInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Metadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicMetadataEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicRecordInternal.Metadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).Metadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).Metadata = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicRecordInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Partition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicsRelatedLink Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicRecordInternal.Partition { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).Partition; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).Partition = value; }

        /// <summary>Internal Acessors for PartitionsReassignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicsRelatedLink Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicRecordInternal.PartitionsReassignment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).PartitionsReassignment; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).PartitionsReassignment = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicProperties Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicRecordInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.TopicProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicRecordInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Display name of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Relationship of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string PartitionReassignmentRelated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).PartitionReassignmentRelated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).PartitionReassignmentRelated = value ?? null; }

        /// <summary>Relationship of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string PartitionRelated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).PartitionRelated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).PartitionRelated = value ?? null; }

        /// <summary>Partition count of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string PartitionsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).PartitionsCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).PartitionsCount = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicProperties _property;

        /// <summary>Topic Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.TopicProperties()); set => this._property = value; }

        /// <summary>Replication factor of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string ReplicationFactor { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).ReplicationFactor; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).ReplicationFactor = value ?? null; }

        /// <summary>Topic Id returned by Confluent</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string TopicId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).TopicId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicPropertiesInternal)Property).TopicId = value ?? null; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="TopicRecord" /> instance.</summary>
        public TopicRecord()
        {

        }
    }
    /// Details of topic record
    public partial interface ITopicRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IJsonSerializable
    {
        /// <summary>Relationship of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Relationship of the topic",
        SerializedName = @"related",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigRelated { get; set; }
        /// <summary>The ARM Resource Id of the Topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ARM Resource Id of the Topic",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Type of topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of topic",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string Kind { get; set; }
        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource name of the record",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Self lookup url",
        SerializedName = @"self",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataSelf { get; set; }
        /// <summary>Display name of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Display name of the topic",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Relationship of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Relationship of the topic",
        SerializedName = @"related",
        PossibleTypes = new [] { typeof(string) })]
        string PartitionReassignmentRelated { get; set; }
        /// <summary>Relationship of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Relationship of the topic",
        SerializedName = @"related",
        PossibleTypes = new [] { typeof(string) })]
        string PartitionRelated { get; set; }
        /// <summary>Partition count of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Partition count of the topic",
        SerializedName = @"partitionsCount",
        PossibleTypes = new [] { typeof(string) })]
        string PartitionsCount { get; set; }
        /// <summary>Replication factor of the topic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Replication factor of the topic",
        SerializedName = @"replicationFactor",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationFactor { get; set; }
        /// <summary>Topic Id returned by Confluent</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Topic Id returned by Confluent",
        SerializedName = @"topicId",
        PossibleTypes = new [] { typeof(string) })]
        string TopicId { get; set; }
        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the resource.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// Details of topic record
    internal partial interface ITopicRecordInternal

    {
        /// <summary>Config Specification of the topic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicsRelatedLink Config { get; set; }
        /// <summary>Relationship of the topic</summary>
        string ConfigRelated { get; set; }
        /// <summary>The ARM Resource Id of the Topic</summary>
        string Id { get; set; }
        /// <summary>Type of topic</summary>
        string Kind { get; set; }
        /// <summary>Metadata of the record</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicMetadataEntity Metadata { get; set; }
        /// <summary>Resource name of the record</summary>
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        string MetadataSelf { get; set; }
        /// <summary>Display name of the topic</summary>
        string Name { get; set; }
        /// <summary>Partition Specification of the topic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicsRelatedLink Partition { get; set; }
        /// <summary>Relationship of the topic</summary>
        string PartitionReassignmentRelated { get; set; }
        /// <summary>Relationship of the topic</summary>
        string PartitionRelated { get; set; }
        /// <summary>Partition count of the topic</summary>
        string PartitionsCount { get; set; }
        /// <summary>Partition Reassignment Specification of the topic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicsRelatedLink PartitionsReassignment { get; set; }
        /// <summary>Topic Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ITopicProperties Property { get; set; }
        /// <summary>Replication factor of the topic</summary>
        string ReplicationFactor { get; set; }
        /// <summary>Topic Id returned by Confluent</summary>
        string TopicId { get; set; }
        /// <summary>The type of the resource.</summary>
        string Type { get; set; }

    }
}