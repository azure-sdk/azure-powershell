// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>Details of schema registry cluster record</summary>
    public partial class SchemaRegistryClusterRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterRecord,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterRecordInternal
    {

        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string EnvironmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).EnvironmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).EnvironmentId = value ?? null; }

        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string EnvironmentRelated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).EnvironmentRelated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).EnvironmentRelated = value ?? null; }

        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string EnvironmentResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).EnvironmentResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).EnvironmentResourceName = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Id of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private string _kind;

        /// <summary>Kind of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Kind { get => this._kind; set => this._kind = value; }

        /// <summary>Created Date Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataCreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).MetadataCreatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).MetadataCreatedTimestamp = value ?? null; }

        /// <summary>Deleted Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataDeletedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).MetadataDeletedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).MetadataDeletedTimestamp = value ?? null; }

        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).MetadataResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).MetadataResourceName = value ?? null; }

        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataSelf { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).MetadataSelf; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).MetadataSelf = value ?? null; }

        /// <summary>Updated Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).MetadataUpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).MetadataUpdatedTimestamp = value ?? null; }

        /// <summary>Internal Acessors for Metadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.IScMetadataEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterRecordInternal.Metadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).Metadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).Metadata = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterProperties Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterRecordInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.SchemaRegistryClusterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Spec</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterSpecEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterRecordInternal.Spec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).Spec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).Spec = value; }

        /// <summary>Internal Acessors for SpecEnvironment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterEnvironmentRegionEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterRecordInternal.SpecEnvironment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecEnvironment; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecEnvironment = value; }

        /// <summary>Internal Acessors for SpecRegion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterEnvironmentRegionEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterRecordInternal.SpecRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecRegion = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterStatusEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterRecordInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).Status = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterProperties _property;

        /// <summary>Schema Registry Cluster Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.SchemaRegistryClusterProperties()); set => this._property = value; }

        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string RegionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).RegionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).RegionId = value ?? null; }

        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string RegionRelated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).RegionRelated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).RegionRelated = value ?? null; }

        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string RegionResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).RegionResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).RegionResourceName = value ?? null; }

        /// <summary>The cloud service provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecCloud { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecCloud; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecCloud = value ?? null; }

        /// <summary>Http endpoint of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecHttpEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecHttpEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecHttpEndpoint = value ?? null; }

        /// <summary>Name of the schema registry cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecName = value ?? null; }

        /// <summary>Type of the cluster package Advanced, essentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecPackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).SpecPackage = value ?? null; }

        /// <summary>The lifecycle phase of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string StatusPhase { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).StatusPhase; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterPropertiesInternal)Property).StatusPhase = value ?? null; }

        /// <summary>Creates an new <see cref="SchemaRegistryClusterRecord" /> instance.</summary>
        public SchemaRegistryClusterRecord()
        {

        }
    }
    /// Details of schema registry cluster record
    public partial interface ISchemaRegistryClusterRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IJsonSerializable
    {
        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the referred resource",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API URL for accessing or modifying the referred object",
        SerializedName = @"related",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CRN reference to the referred resource",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentResourceName { get; set; }
        /// <summary>Id of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the cluster",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Kind of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kind of the cluster",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string Kind { get; set; }
        /// <summary>Created Date Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Created Date Time",
        SerializedName = @"createdTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataCreatedTimestamp { get; set; }
        /// <summary>Deleted Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deleted Date time",
        SerializedName = @"deletedTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataDeletedTimestamp { get; set; }
        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource name of the record",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Self lookup url",
        SerializedName = @"self",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataSelf { get; set; }
        /// <summary>Updated Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Updated Date time",
        SerializedName = @"updatedTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataUpdatedTimestamp { get; set; }
        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the referred resource",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string RegionId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API URL for accessing or modifying the referred object",
        SerializedName = @"related",
        PossibleTypes = new [] { typeof(string) })]
        string RegionRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CRN reference to the referred resource",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string RegionResourceName { get; set; }
        /// <summary>The cloud service provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cloud service provider ",
        SerializedName = @"cloud",
        PossibleTypes = new [] { typeof(string) })]
        string SpecCloud { get; set; }
        /// <summary>Http endpoint of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Http endpoint of the cluster",
        SerializedName = @"httpEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string SpecHttpEndpoint { get; set; }
        /// <summary>Name of the schema registry cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the schema registry cluster",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SpecName { get; set; }
        /// <summary>Type of the cluster package Advanced, essentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the cluster package Advanced, essentials",
        SerializedName = @"package",
        PossibleTypes = new [] { typeof(string) })]
        string SpecPackage { get; set; }
        /// <summary>The lifecycle phase of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The lifecycle phase of the cluster",
        SerializedName = @"phase",
        PossibleTypes = new [] { typeof(string) })]
        string StatusPhase { get; set; }

    }
    /// Details of schema registry cluster record
    internal partial interface ISchemaRegistryClusterRecordInternal

    {
        /// <summary>ID of the referred resource</summary>
        string EnvironmentId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        string EnvironmentRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        string EnvironmentResourceName { get; set; }
        /// <summary>Id of the cluster</summary>
        string Id { get; set; }
        /// <summary>Kind of the cluster</summary>
        string Kind { get; set; }
        /// <summary>Metadata of the record</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.IScMetadataEntity Metadata { get; set; }
        /// <summary>Created Date Time</summary>
        string MetadataCreatedTimestamp { get; set; }
        /// <summary>Deleted Date time</summary>
        string MetadataDeletedTimestamp { get; set; }
        /// <summary>Resource name of the record</summary>
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        string MetadataSelf { get; set; }
        /// <summary>Updated Date time</summary>
        string MetadataUpdatedTimestamp { get; set; }
        /// <summary>Schema Registry Cluster Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterProperties Property { get; set; }
        /// <summary>ID of the referred resource</summary>
        string RegionId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        string RegionRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        string RegionResourceName { get; set; }
        /// <summary>Specification of the schema registry cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterSpecEntity Spec { get; set; }
        /// <summary>The cloud service provider</summary>
        string SpecCloud { get; set; }
        /// <summary>Environment details of the schema registry cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterEnvironmentRegionEntity SpecEnvironment { get; set; }
        /// <summary>Http endpoint of the cluster</summary>
        string SpecHttpEndpoint { get; set; }
        /// <summary>Name of the schema registry cluster</summary>
        string SpecName { get; set; }
        /// <summary>Type of the cluster package Advanced, essentials</summary>
        string SpecPackage { get; set; }
        /// <summary>Region details of the schema registry cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterEnvironmentRegionEntity SpecRegion { get; set; }
        /// <summary>Specification of the cluster status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api202407.ISchemaRegistryClusterStatusEntity Status { get; set; }
        /// <summary>The lifecycle phase of the cluster</summary>
        string StatusPhase { get; set; }

    }
}