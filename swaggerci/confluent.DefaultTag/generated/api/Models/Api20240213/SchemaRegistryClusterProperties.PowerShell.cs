// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213
{
    using Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.PowerShell;

    /// <summary>Schema Registry Cluster Properties</summary>
    [System.ComponentModel.TypeConverter(typeof(SchemaRegistryClusterPropertiesTypeConverter))]
    public partial class SchemaRegistryClusterProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new SchemaRegistryClusterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new SchemaRegistryClusterProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="SchemaRegistryClusterProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="SchemaRegistryClusterProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal SchemaRegistryClusterProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Metadata = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IScMetadataEntity) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Metadata, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ScMetadataEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Spec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Spec = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterSpecEntity) content.GetValueForProperty("Spec",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Spec, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterSpecEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterStatusEntity) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterStatusEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataSelf"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataSelf = (string) content.GetValueForProperty("MetadataSelf",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataSelf, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataResourceName = (string) content.GetValueForProperty("MetadataResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataCreatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataCreatedTimestamp = (string) content.GetValueForProperty("MetadataCreatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataCreatedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataUpdatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataUpdatedTimestamp = (string) content.GetValueForProperty("MetadataUpdatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataUpdatedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataDeletedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataDeletedTimestamp = (string) content.GetValueForProperty("MetadataDeletedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataDeletedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("SpecRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecRegion = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity) content.GetValueForProperty("SpecRegion",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecRegion, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterEnvironmentRegionEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SpecEnvironment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecEnvironment = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity) content.GetValueForProperty("SpecEnvironment",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecEnvironment, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterEnvironmentRegionEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SpecName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecName = (string) content.GetValueForProperty("SpecName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecName, global::System.Convert.ToString);
            }
            if (content.Contains("SpecHttpEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecHttpEndpoint = (string) content.GetValueForProperty("SpecHttpEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecHttpEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("SpecPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecPackage = (string) content.GetValueForProperty("SpecPackage",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecPackage, global::System.Convert.ToString);
            }
            if (content.Contains("SpecCloud"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecCloud = (string) content.GetValueForProperty("SpecCloud",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecCloud, global::System.Convert.ToString);
            }
            if (content.Contains("StatusPhase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).StatusPhase = (string) content.GetValueForProperty("StatusPhase",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).StatusPhase, global::System.Convert.ToString);
            }
            if (content.Contains("RegionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionId = (string) content.GetValueForProperty("RegionId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionId, global::System.Convert.ToString);
            }
            if (content.Contains("RegionRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionRelated = (string) content.GetValueForProperty("RegionRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionRelated, global::System.Convert.ToString);
            }
            if (content.Contains("RegionResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionResourceName = (string) content.GetValueForProperty("RegionResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentId = (string) content.GetValueForProperty("EnvironmentId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentId, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentRelated = (string) content.GetValueForProperty("EnvironmentRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentRelated, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentResourceName = (string) content.GetValueForProperty("EnvironmentResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentResourceName, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal SchemaRegistryClusterProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Metadata = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IScMetadataEntity) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Metadata, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ScMetadataEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Spec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Spec = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterSpecEntity) content.GetValueForProperty("Spec",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Spec, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterSpecEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterStatusEntity) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterStatusEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataSelf"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataSelf = (string) content.GetValueForProperty("MetadataSelf",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataSelf, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataResourceName = (string) content.GetValueForProperty("MetadataResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataCreatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataCreatedTimestamp = (string) content.GetValueForProperty("MetadataCreatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataCreatedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataUpdatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataUpdatedTimestamp = (string) content.GetValueForProperty("MetadataUpdatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataUpdatedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataDeletedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataDeletedTimestamp = (string) content.GetValueForProperty("MetadataDeletedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).MetadataDeletedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("SpecRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecRegion = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity) content.GetValueForProperty("SpecRegion",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecRegion, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterEnvironmentRegionEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SpecEnvironment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecEnvironment = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity) content.GetValueForProperty("SpecEnvironment",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecEnvironment, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterEnvironmentRegionEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SpecName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecName = (string) content.GetValueForProperty("SpecName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecName, global::System.Convert.ToString);
            }
            if (content.Contains("SpecHttpEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecHttpEndpoint = (string) content.GetValueForProperty("SpecHttpEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecHttpEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("SpecPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecPackage = (string) content.GetValueForProperty("SpecPackage",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecPackage, global::System.Convert.ToString);
            }
            if (content.Contains("SpecCloud"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecCloud = (string) content.GetValueForProperty("SpecCloud",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).SpecCloud, global::System.Convert.ToString);
            }
            if (content.Contains("StatusPhase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).StatusPhase = (string) content.GetValueForProperty("StatusPhase",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).StatusPhase, global::System.Convert.ToString);
            }
            if (content.Contains("RegionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionId = (string) content.GetValueForProperty("RegionId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionId, global::System.Convert.ToString);
            }
            if (content.Contains("RegionRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionRelated = (string) content.GetValueForProperty("RegionRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionRelated, global::System.Convert.ToString);
            }
            if (content.Contains("RegionResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionResourceName = (string) content.GetValueForProperty("RegionResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).RegionResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentId = (string) content.GetValueForProperty("EnvironmentId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentId, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentRelated = (string) content.GetValueForProperty("EnvironmentRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentRelated, global::System.Convert.ToString);
            }
            if (content.Contains("EnvironmentResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentResourceName = (string) content.GetValueForProperty("EnvironmentResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterPropertiesInternal)this).EnvironmentResourceName, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Schema Registry Cluster Properties
    [System.ComponentModel.TypeConverter(typeof(SchemaRegistryClusterPropertiesTypeConverter))]
    public partial interface ISchemaRegistryClusterProperties

    {

    }
}