// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>Details of schema registry cluster spec</summary>
    public partial class SchemaRegistryClusterSpecEntity :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterSpecEntity,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterSpecEntityInternal
    {

        /// <summary>Backing field for <see cref="Cloud" /> property.</summary>
        private string _cloud;

        /// <summary>The cloud service provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Cloud { get => this._cloud; set => this._cloud = value; }

        /// <summary>Backing field for <see cref="Environment" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity _environment;

        /// <summary>Environment details of the schema registry cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity Environment { get => (this._environment = this._environment ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterEnvironmentRegionEntity()); set => this._environment = value; }

        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string EnvironmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Environment).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Environment).Id = value ?? null; }

        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string EnvironmentRelated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Environment).Related; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Environment).Related = value ?? null; }

        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string EnvironmentResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Environment).ResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Environment).ResourceName = value ?? null; }

        /// <summary>Backing field for <see cref="HttpEndpoint" /> property.</summary>
        private string _httpEndpoint;

        /// <summary>Http endpoint of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string HttpEndpoint { get => this._httpEndpoint; set => this._httpEndpoint = value; }

        /// <summary>Internal Acessors for Environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterSpecEntityInternal.Environment { get => (this._environment = this._environment ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterEnvironmentRegionEntity()); set { {_environment = value;} } }

        /// <summary>Internal Acessors for Region</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterSpecEntityInternal.Region { get => (this._region = this._region ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterEnvironmentRegionEntity()); set { {_region = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the schema registry cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Package" /> property.</summary>
        private string _package;

        /// <summary>Type of the cluster package Advanced, essentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Package { get => this._package; set => this._package = value; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity _region;

        /// <summary>Region details of the schema registry cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity Region { get => (this._region = this._region ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.SchemaRegistryClusterEnvironmentRegionEntity()); set => this._region = value; }

        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string RegionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Region).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Region).Id = value ?? null; }

        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string RegionRelated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Region).Related; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Region).Related = value ?? null; }

        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string RegionResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Region).ResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntityInternal)Region).ResourceName = value ?? null; }

        /// <summary>Creates an new <see cref="SchemaRegistryClusterSpecEntity" /> instance.</summary>
        public SchemaRegistryClusterSpecEntity()
        {

        }
    }
    /// Details of schema registry cluster spec
    public partial interface ISchemaRegistryClusterSpecEntity :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IJsonSerializable
    {
        /// <summary>The cloud service provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cloud service provider ",
        SerializedName = @"cloud",
        PossibleTypes = new [] { typeof(string) })]
        string Cloud { get; set; }
        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the referred resource",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API URL for accessing or modifying the referred object",
        SerializedName = @"related",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CRN reference to the referred resource",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentResourceName { get; set; }
        /// <summary>Http endpoint of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Http endpoint of the cluster",
        SerializedName = @"httpEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string HttpEndpoint { get; set; }
        /// <summary>Name of the schema registry cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the schema registry cluster",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Type of the cluster package Advanced, essentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the cluster package Advanced, essentials",
        SerializedName = @"package",
        PossibleTypes = new [] { typeof(string) })]
        string Package { get; set; }
        /// <summary>ID of the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the referred resource",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string RegionId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API URL for accessing or modifying the referred object",
        SerializedName = @"related",
        PossibleTypes = new [] { typeof(string) })]
        string RegionRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CRN reference to the referred resource",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string RegionResourceName { get; set; }

    }
    /// Details of schema registry cluster spec
    internal partial interface ISchemaRegistryClusterSpecEntityInternal

    {
        /// <summary>The cloud service provider</summary>
        string Cloud { get; set; }
        /// <summary>Environment details of the schema registry cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity Environment { get; set; }
        /// <summary>ID of the referred resource</summary>
        string EnvironmentId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        string EnvironmentRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        string EnvironmentResourceName { get; set; }
        /// <summary>Http endpoint of the cluster</summary>
        string HttpEndpoint { get; set; }
        /// <summary>Name of the schema registry cluster</summary>
        string Name { get; set; }
        /// <summary>Type of the cluster package Advanced, essentials</summary>
        string Package { get; set; }
        /// <summary>Region details of the schema registry cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ISchemaRegistryClusterEnvironmentRegionEntity Region { get; set; }
        /// <summary>ID of the referred resource</summary>
        string RegionId { get; set; }
        /// <summary>API URL for accessing or modifying the referred object</summary>
        string RegionRelated { get; set; }
        /// <summary>CRN reference to the referred resource</summary>
        string RegionResourceName { get; set; }

    }
}