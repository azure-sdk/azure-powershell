// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213
{
    using Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.PowerShell;

    /// <summary>API Key Properties</summary>
    [System.ComponentModel.TypeConverter(typeof(ApiKeyPropertiesTypeConverter))]
    public partial class ApiKeyProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ApiKeyProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ApiKeyProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).Metadata = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IScMetadataEntity) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).Metadata, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ScMetadataEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Spec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).Spec = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeySpecEntity) content.GetValueForProperty("Spec",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).Spec, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ApiKeySpecEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataSelf"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataSelf = (string) content.GetValueForProperty("MetadataSelf",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataSelf, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataResourceName = (string) content.GetValueForProperty("MetadataResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataCreatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataCreatedTimestamp = (string) content.GetValueForProperty("MetadataCreatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataCreatedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataUpdatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataUpdatedTimestamp = (string) content.GetValueForProperty("MetadataUpdatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataUpdatedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataDeletedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataDeletedTimestamp = (string) content.GetValueForProperty("MetadataDeletedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataDeletedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("SpecResource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecResource = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyResourceEntity) content.GetValueForProperty("SpecResource",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecResource, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ApiKeyResourceEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SpecOwner"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecOwner = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyOwnerEntity) content.GetValueForProperty("SpecOwner",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecOwner, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ApiKeyOwnerEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SpecDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecDescription = (string) content.GetValueForProperty("SpecDescription",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecDescription, global::System.Convert.ToString);
            }
            if (content.Contains("SpecName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecName = (string) content.GetValueForProperty("SpecName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecName, global::System.Convert.ToString);
            }
            if (content.Contains("SpecSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecSecret = (string) content.GetValueForProperty("SpecSecret",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecSecret, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceId = (string) content.GetValueForProperty("ResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceEnvironment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceEnvironment = (string) content.GetValueForProperty("ResourceEnvironment",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceEnvironment, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceRelated = (string) content.GetValueForProperty("ResourceRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceRelated, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceName = (string) content.GetValueForProperty("ResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceKind = (string) content.GetValueForProperty("ResourceKind",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceKind, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerId = (string) content.GetValueForProperty("OwnerId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerId, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerRelated = (string) content.GetValueForProperty("OwnerRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerRelated, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerResourceName = (string) content.GetValueForProperty("OwnerResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerKind = (string) content.GetValueForProperty("OwnerKind",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerKind, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ApiKeyProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ApiKeyProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).Metadata = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IScMetadataEntity) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).Metadata, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ScMetadataEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Spec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).Spec = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeySpecEntity) content.GetValueForProperty("Spec",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).Spec, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ApiKeySpecEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetadataSelf"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataSelf = (string) content.GetValueForProperty("MetadataSelf",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataSelf, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataResourceName = (string) content.GetValueForProperty("MetadataResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataCreatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataCreatedTimestamp = (string) content.GetValueForProperty("MetadataCreatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataCreatedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataUpdatedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataUpdatedTimestamp = (string) content.GetValueForProperty("MetadataUpdatedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataUpdatedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataDeletedTimestamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataDeletedTimestamp = (string) content.GetValueForProperty("MetadataDeletedTimestamp",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).MetadataDeletedTimestamp, global::System.Convert.ToString);
            }
            if (content.Contains("SpecResource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecResource = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyResourceEntity) content.GetValueForProperty("SpecResource",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecResource, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ApiKeyResourceEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SpecOwner"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecOwner = (Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyOwnerEntity) content.GetValueForProperty("SpecOwner",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecOwner, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ApiKeyOwnerEntityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SpecDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecDescription = (string) content.GetValueForProperty("SpecDescription",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecDescription, global::System.Convert.ToString);
            }
            if (content.Contains("SpecName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecName = (string) content.GetValueForProperty("SpecName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecName, global::System.Convert.ToString);
            }
            if (content.Contains("SpecSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecSecret = (string) content.GetValueForProperty("SpecSecret",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).SpecSecret, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceId = (string) content.GetValueForProperty("ResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceEnvironment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceEnvironment = (string) content.GetValueForProperty("ResourceEnvironment",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceEnvironment, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceRelated = (string) content.GetValueForProperty("ResourceRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceRelated, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceName = (string) content.GetValueForProperty("ResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceKind = (string) content.GetValueForProperty("ResourceKind",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).ResourceKind, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerId = (string) content.GetValueForProperty("OwnerId",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerId, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerRelated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerRelated = (string) content.GetValueForProperty("OwnerRelated",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerRelated, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerResourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerResourceName = (string) content.GetValueForProperty("OwnerResourceName",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerResourceName, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerKind = (string) content.GetValueForProperty("OwnerKind",((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyPropertiesInternal)this).OwnerKind, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ApiKeyProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ApiKeyProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ApiKeyProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ApiKeyProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ApiKeyProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ApiKeyProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IApiKeyProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// API Key Properties
    [System.ComponentModel.TypeConverter(typeof(ApiKeyPropertiesTypeConverter))]
    public partial interface IApiKeyProperties

    {

    }
}