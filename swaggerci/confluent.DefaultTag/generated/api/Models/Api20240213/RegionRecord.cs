// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>Details of region record</summary>
    public partial class RegionRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionRecord,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionRecordInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Id of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private string _kind;

        /// <summary>Kind of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Kind { get => this._kind; set => this._kind = value; }

        /// <summary>Created Date Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataCreatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).MetadataCreatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).MetadataCreatedTimestamp = value ?? null; }

        /// <summary>Deleted Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataDeletedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).MetadataDeletedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).MetadataDeletedTimestamp = value ?? null; }

        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).MetadataResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).MetadataResourceName = value ?? null; }

        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataSelf { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).MetadataSelf; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).MetadataSelf = value ?? null; }

        /// <summary>Updated Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string MetadataUpdatedTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).MetadataUpdatedTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).MetadataUpdatedTimestamp = value ?? null; }

        /// <summary>Internal Acessors for Metadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IScMetadataEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionRecordInternal.Metadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).Metadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).Metadata = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionProperties Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionRecordInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.RegionProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Spec</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionSpecEntity Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionRecordInternal.Spec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).Spec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).Spec = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionProperties _property;

        /// <summary>Region Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.RegionProperties()); set => this._property = value; }

        /// <summary>Cloud provider name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecCloud { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).SpecCloud; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).SpecCloud = value ?? null; }

        /// <summary>Display Name of the region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).SpecName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).SpecName = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string[] SpecPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).SpecPackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).SpecPackage = value ?? null /* arrayOf */; }

        /// <summary>Region name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Inlined)]
        public string SpecRegionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).SpecRegionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionPropertiesInternal)Property).SpecRegionName = value ?? null; }

        /// <summary>Creates an new <see cref="RegionRecord" /> instance.</summary>
        public RegionRecord()
        {

        }
    }
    /// Details of region record
    public partial interface IRegionRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IJsonSerializable
    {
        /// <summary>Id of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the cluster",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Kind of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kind of the cluster",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string Kind { get; set; }
        /// <summary>Created Date Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Created Date Time",
        SerializedName = @"createdTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataCreatedTimestamp { get; set; }
        /// <summary>Deleted Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deleted Date time",
        SerializedName = @"deletedTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataDeletedTimestamp { get; set; }
        /// <summary>Resource name of the record</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource name of the record",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Self lookup url",
        SerializedName = @"self",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataSelf { get; set; }
        /// <summary>Updated Date time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Updated Date time",
        SerializedName = @"updatedTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataUpdatedTimestamp { get; set; }
        /// <summary>Cloud provider name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cloud provider name",
        SerializedName = @"cloud",
        PossibleTypes = new [] { typeof(string) })]
        string SpecCloud { get; set; }
        /// <summary>Display Name of the region</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display Name of the region",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SpecName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"packages",
        PossibleTypes = new [] { typeof(string) })]
        string[] SpecPackage { get; set; }
        /// <summary>Region name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Region name",
        SerializedName = @"regionName",
        PossibleTypes = new [] { typeof(string) })]
        string SpecRegionName { get; set; }

    }
    /// Details of region record
    internal partial interface IRegionRecordInternal

    {
        /// <summary>Id of the cluster</summary>
        string Id { get; set; }
        /// <summary>Kind of the cluster</summary>
        string Kind { get; set; }
        /// <summary>Metadata of the record</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IScMetadataEntity Metadata { get; set; }
        /// <summary>Created Date Time</summary>
        string MetadataCreatedTimestamp { get; set; }
        /// <summary>Deleted Date time</summary>
        string MetadataDeletedTimestamp { get; set; }
        /// <summary>Resource name of the record</summary>
        string MetadataResourceName { get; set; }
        /// <summary>Self lookup url</summary>
        string MetadataSelf { get; set; }
        /// <summary>Updated Date time</summary>
        string MetadataUpdatedTimestamp { get; set; }
        /// <summary>Region Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionProperties Property { get; set; }
        /// <summary>Specification of the region</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IRegionSpecEntity Spec { get; set; }
        /// <summary>Cloud provider name</summary>
        string SpecCloud { get; set; }
        /// <summary>Display Name of the region</summary>
        string SpecName { get; set; }

        string[] SpecPackage { get; set; }
        /// <summary>Region name</summary>
        string SpecRegionName { get; set; }

    }
}