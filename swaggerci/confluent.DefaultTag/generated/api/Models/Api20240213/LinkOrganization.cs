// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>Link an existing Confluent organization</summary>
    public partial class LinkOrganization :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ILinkOrganization,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.ILinkOrganizationInternal
    {

        /// <summary>Backing field for <see cref="Token" /> property.</summary>
        private string _token;

        /// <summary>User auth token</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Token { get => this._token; set => this._token = value; }

        /// <summary>Creates an new <see cref="LinkOrganization" /> instance.</summary>
        public LinkOrganization()
        {

        }
    }
    /// Link an existing Confluent organization
    public partial interface ILinkOrganization :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IJsonSerializable
    {
        /// <summary>User auth token</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"User auth token",
        SerializedName = @"token",
        PossibleTypes = new [] { typeof(string) })]
        string Token { get; set; }

    }
    /// Link an existing Confluent organization
    internal partial interface ILinkOrganizationInternal

    {
        /// <summary>User auth token</summary>
        string Token { get; set; }

    }
}