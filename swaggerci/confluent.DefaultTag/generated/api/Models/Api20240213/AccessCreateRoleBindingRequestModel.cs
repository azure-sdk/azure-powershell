// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Extensions;

    /// <summary>Create role binding request model</summary>
    public partial class AccessCreateRoleBindingRequestModel :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IAccessCreateRoleBindingRequestModel,
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Models.Api20240213.IAccessCreateRoleBindingRequestModelInternal
    {

        /// <summary>Backing field for <see cref="CrnPattern" /> property.</summary>
        private string _crnPattern;

        /// <summary>
        /// A CRN that specifies the scope and resource patterns necessary for the role to bind
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string CrnPattern { get => this._crnPattern; set => this._crnPattern = value; }

        /// <summary>Backing field for <see cref="Principal" /> property.</summary>
        private string _principal;

        /// <summary>The principal User or Group to bind the role to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string Principal { get => this._principal; set => this._principal = value; }

        /// <summary>Backing field for <see cref="RoleName" /> property.</summary>
        private string _roleName;

        /// <summary>The name of the role to bind to the principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Origin(Microsoft.Azure.PowerShell.Cmdlets.Confluent.PropertyOrigin.Owned)]
        public string RoleName { get => this._roleName; set => this._roleName = value; }

        /// <summary>Creates an new <see cref="AccessCreateRoleBindingRequestModel" /> instance.</summary>
        public AccessCreateRoleBindingRequestModel()
        {

        }
    }
    /// Create role binding request model
    public partial interface IAccessCreateRoleBindingRequestModel :
        Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A CRN that specifies the scope and resource patterns necessary for the role to bind
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A CRN that specifies the scope and resource patterns necessary for the role to bind",
        SerializedName = @"crn_pattern",
        PossibleTypes = new [] { typeof(string) })]
        string CrnPattern { get; set; }
        /// <summary>The principal User or Group to bind the role to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principal User or Group to bind the role to",
        SerializedName = @"principal",
        PossibleTypes = new [] { typeof(string) })]
        string Principal { get; set; }
        /// <summary>The name of the role to bind to the principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Confluent.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the role to bind to the principal",
        SerializedName = @"role_name",
        PossibleTypes = new [] { typeof(string) })]
        string RoleName { get; set; }

    }
    /// Create role binding request model
    internal partial interface IAccessCreateRoleBindingRequestModelInternal

    {
        /// <summary>
        /// A CRN that specifies the scope and resource patterns necessary for the role to bind
        /// </summary>
        string CrnPattern { get; set; }
        /// <summary>The principal User or Group to bind the role to</summary>
        string Principal { get; set; }
        /// <summary>The name of the role to bind to the principal</summary>
        string RoleName { get; set; }

    }
}