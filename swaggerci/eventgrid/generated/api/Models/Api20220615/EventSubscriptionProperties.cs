// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Properties of the Event Subscription.</summary>
    public partial class EventSubscriptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DeadLetterDestination" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterDestination _deadLetterDestination;

        /// <summary>
        /// The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent
        /// to the dead letter destination.
        /// Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterDestination DeadLetterDestination { get => (this._deadLetterDestination = this._deadLetterDestination ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.DeadLetterDestination()); set => this._deadLetterDestination = value; }

        /// <summary>Type of the endpoint for the dead letter destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DeadLetterEndPointTypeEndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterDestinationInternal)DeadLetterDestination).EndpointType; }

        /// <summary>Backing field for <see cref="DeadLetterWithResourceIdentity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentity _deadLetterWithResourceIdentity;

        /// <summary>
        /// The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent
        /// to the dead letter destination.
        /// Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens
        /// being used during delivery / dead-lettering.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentity DeadLetterWithResourceIdentity { get => (this._deadLetterWithResourceIdentity = this._deadLetterWithResourceIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.DeadLetterWithResourceIdentity()); set => this._deadLetterWithResourceIdentity = value; }

        /// <summary>Type of the endpoint for the dead letter destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DeadLetterWithResourceIdentityDeadLetterDestinationEndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentityInternal)DeadLetterWithResourceIdentity).DeadLetterDestinationEndpointType; }

        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionIdentityType? DeadLetterWithResourceIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentityInternal)DeadLetterWithResourceIdentity).IdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentityInternal)DeadLetterWithResourceIdentity).IdentityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionIdentityType)""); }

        /// <summary>The user identity associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DeadLetterWithResourceIdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentityInternal)DeadLetterWithResourceIdentity).IdentityUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentityInternal)DeadLetterWithResourceIdentity).IdentityUserAssignedIdentity = value ?? null; }

        /// <summary>Backing field for <see cref="DeliveryWithResourceIdentity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentity _deliveryWithResourceIdentity;

        /// <summary>
        /// Information about the destination where events have to be delivered for the event subscription.
        /// Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens
        /// being used during delivery / dead-lettering.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentity DeliveryWithResourceIdentity { get => (this._deliveryWithResourceIdentity = this._deliveryWithResourceIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.DeliveryWithResourceIdentity()); set => this._deliveryWithResourceIdentity = value; }

        /// <summary>Type of the endpoint for the event subscription destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EndpointType? DeliveryWithResourceIdentityDestinationEndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentityInternal)DeliveryWithResourceIdentity).DestinationEndpointType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentityInternal)DeliveryWithResourceIdentity).DestinationEndpointType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EndpointType)""); }

        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionIdentityType? DeliveryWithResourceIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentityInternal)DeliveryWithResourceIdentity).IdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentityInternal)DeliveryWithResourceIdentity).IdentityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionIdentityType)""); }

        /// <summary>The user identity associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DeliveryWithResourceIdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentityInternal)DeliveryWithResourceIdentity).IdentityUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentityInternal)DeliveryWithResourceIdentity).IdentityUserAssignedIdentity = value ?? null; }

        /// <summary>Backing field for <see cref="Destination" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionDestination _destination;

        /// <summary>
        /// Information about the destination where events have to be delivered for the event subscription.
        /// Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionDestination Destination { get => (this._destination = this._destination ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.EventSubscriptionDestination()); set => this._destination = value; }

        /// <summary>Type of the endpoint for the event subscription destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EndpointType? EndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionDestinationInternal)Destination).EndpointType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionDestinationInternal)Destination).EndpointType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EndpointType)""); }

        /// <summary>Backing field for <see cref="EventDeliverySchema" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDeliverySchema? _eventDeliverySchema;

        /// <summary>The event delivery schema for the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDeliverySchema? EventDeliverySchema { get => this._eventDeliverySchema; set => this._eventDeliverySchema = value; }

        /// <summary>Backing field for <see cref="ExpirationTimeUtc" /> property.</summary>
        private global::System.DateTime? _expirationTimeUtc;

        /// <summary>Expiration time of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpirationTimeUtc { get => this._expirationTimeUtc; set => this._expirationTimeUtc = value; }

        /// <summary>Backing field for <see cref="Filter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilter _filter;

        /// <summary>Information about the filter for the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilter Filter { get => (this._filter = this._filter ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.EventSubscriptionFilter()); set => this._filter = value; }

        /// <summary>An array of advanced filters that are used for filtering event subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IAdvancedFilter[] FilterAdvancedFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).AdvancedFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).AdvancedFilter = value ?? null /* arrayOf */; }

        /// <summary>
        /// Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public bool? FilterEnableAdvancedFilteringOnArray { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).EnableAdvancedFilteringOnArray; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).EnableAdvancedFilteringOnArray = value ?? default(bool); }

        /// <summary>
        /// A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all
        /// default event types, set the IncludedEventTypes to null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string[] FilterIncludedEventType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).IncludedEventType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).IncludedEventType = value ?? null /* arrayOf */; }

        /// <summary>
        /// Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter
        /// should be compared in a case sensitive manner.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public bool? FilterIsSubjectCaseSensitive { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).IsSubjectCaseSensitive; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).IsSubjectCaseSensitive = value ?? default(bool); }

        /// <summary>
        /// An optional string to filter events for an event subscription based on a resource path prefix.
        /// The format of this depends on the publisher of the events.
        /// Wildcard characters are not supported in this path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string FilterSubjectBeginsWith { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).SubjectBeginsWith; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).SubjectBeginsWith = value ?? null; }

        /// <summary>
        /// An optional string to filter events for an event subscription based on a resource path suffix.
        /// Wildcard characters are not supported in this path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string FilterSubjectEndsWith { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).SubjectEndsWith; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilterInternal)Filter).SubjectEndsWith = value ?? null; }

        /// <summary>Backing field for <see cref="Label" /> property.</summary>
        private string[] _label;

        /// <summary>List of user defined labels.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string[] Label { get => this._label; set => this._label = value; }

        /// <summary>Internal Acessors for DeadLetterDestination</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterDestination Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.DeadLetterDestination { get => (this._deadLetterDestination = this._deadLetterDestination ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.DeadLetterDestination()); set { {_deadLetterDestination = value;} } }

        /// <summary>Internal Acessors for DeadLetterEndPointTypeEndpointType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.DeadLetterEndPointTypeEndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterDestinationInternal)DeadLetterDestination).EndpointType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterDestinationInternal)DeadLetterDestination).EndpointType = value; }

        /// <summary>Internal Acessors for DeadLetterWithResourceIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentity Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.DeadLetterWithResourceIdentity { get => (this._deadLetterWithResourceIdentity = this._deadLetterWithResourceIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.DeadLetterWithResourceIdentity()); set { {_deadLetterWithResourceIdentity = value;} } }

        /// <summary>Internal Acessors for DeadLetterWithResourceIdentityDeadLetterDestination</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterDestination Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.DeadLetterWithResourceIdentityDeadLetterDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentityInternal)DeadLetterWithResourceIdentity).DeadLetterDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentityInternal)DeadLetterWithResourceIdentity).DeadLetterDestination = value; }

        /// <summary>
        /// Internal Acessors for DeadLetterWithResourceIdentityDeadLetterDestinationEndpointType
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.DeadLetterWithResourceIdentityDeadLetterDestinationEndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentityInternal)DeadLetterWithResourceIdentity).DeadLetterDestinationEndpointType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentityInternal)DeadLetterWithResourceIdentity).DeadLetterDestinationEndpointType = value; }

        /// <summary>Internal Acessors for DeadLetterWithResourceIdentityIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionIdentity Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.DeadLetterWithResourceIdentityIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentityInternal)DeadLetterWithResourceIdentity).Identity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentityInternal)DeadLetterWithResourceIdentity).Identity = value; }

        /// <summary>Internal Acessors for DeliveryWithResourceIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentity Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.DeliveryWithResourceIdentity { get => (this._deliveryWithResourceIdentity = this._deliveryWithResourceIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.DeliveryWithResourceIdentity()); set { {_deliveryWithResourceIdentity = value;} } }

        /// <summary>Internal Acessors for DeliveryWithResourceIdentityDestination</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionDestination Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.DeliveryWithResourceIdentityDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentityInternal)DeliveryWithResourceIdentity).Destination; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentityInternal)DeliveryWithResourceIdentity).Destination = value; }

        /// <summary>Internal Acessors for DeliveryWithResourceIdentityIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionIdentity Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.DeliveryWithResourceIdentityIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentityInternal)DeliveryWithResourceIdentity).Identity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentityInternal)DeliveryWithResourceIdentity).Identity = value; }

        /// <summary>Internal Acessors for Destination</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionDestination Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.Destination { get => (this._destination = this._destination ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.EventSubscriptionDestination()); set { {_destination = value;} } }

        /// <summary>Internal Acessors for Filter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilter Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.Filter { get => (this._filter = this._filter ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.EventSubscriptionFilter()); set { {_filter = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RetryPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IRetryPolicy Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.RetryPolicy { get => (this._retryPolicy = this._retryPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.RetryPolicy()); set { {_retryPolicy = value;} } }

        /// <summary>Internal Acessors for Topic</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionPropertiesInternal.Topic { get => this._topic; set { {_topic = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RetryPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IRetryPolicy _retryPolicy;

        /// <summary>
        /// The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IRetryPolicy RetryPolicy { get => (this._retryPolicy = this._retryPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.RetryPolicy()); set => this._retryPolicy = value; }

        /// <summary>Time To Live (in minutes) for events.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public int? RetryPolicyEventTimeToLiveInMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IRetryPolicyInternal)RetryPolicy).EventTimeToLiveInMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IRetryPolicyInternal)RetryPolicy).EventTimeToLiveInMinute = value ?? default(int); }

        /// <summary>Maximum number of delivery retry attempts for events.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public int? RetryPolicyMaxDeliveryAttempt { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IRetryPolicyInternal)RetryPolicy).MaxDeliveryAttempt; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IRetryPolicyInternal)RetryPolicy).MaxDeliveryAttempt = value ?? default(int); }

        /// <summary>Backing field for <see cref="Topic" /> property.</summary>
        private string _topic;

        /// <summary>Name of the topic of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string Topic { get => this._topic; }

        /// <summary>Creates an new <see cref="EventSubscriptionProperties" /> instance.</summary>
        public EventSubscriptionProperties()
        {

        }
    }
    /// Properties of the Event Subscription.
    public partial interface IEventSubscriptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>Type of the endpoint for the dead letter destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of the endpoint for the dead letter destination",
        SerializedName = @"endpointType",
        PossibleTypes = new [] { typeof(string) })]
        string DeadLetterEndPointTypeEndpointType { get;  }
        /// <summary>Type of the endpoint for the dead letter destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of the endpoint for the dead letter destination",
        SerializedName = @"endpointType",
        PossibleTypes = new [] { typeof(string) })]
        string DeadLetterWithResourceIdentityDeadLetterDestinationEndpointType { get;  }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionIdentityType? DeadLetterWithResourceIdentityType { get; set; }
        /// <summary>The user identity associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user identity associated with the resource.",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string DeadLetterWithResourceIdentityUserAssignedIdentity { get; set; }
        /// <summary>Type of the endpoint for the event subscription destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the endpoint for the event subscription destination.",
        SerializedName = @"endpointType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EndpointType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EndpointType? DeliveryWithResourceIdentityDestinationEndpointType { get; set; }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionIdentityType? DeliveryWithResourceIdentityType { get; set; }
        /// <summary>The user identity associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user identity associated with the resource.",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string DeliveryWithResourceIdentityUserAssignedIdentity { get; set; }
        /// <summary>Type of the endpoint for the event subscription destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the endpoint for the event subscription destination.",
        SerializedName = @"endpointType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EndpointType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EndpointType? EndpointType { get; set; }
        /// <summary>The event delivery schema for the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The event delivery schema for the event subscription.",
        SerializedName = @"eventDeliverySchema",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDeliverySchema) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDeliverySchema? EventDeliverySchema { get; set; }
        /// <summary>Expiration time of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expiration time of the event subscription.",
        SerializedName = @"expirationTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationTimeUtc { get; set; }
        /// <summary>An array of advanced filters that are used for filtering event subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array of advanced filters that are used for filtering event subscriptions.",
        SerializedName = @"advancedFilters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IAdvancedFilter) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IAdvancedFilter[] FilterAdvancedFilter { get; set; }
        /// <summary>
        /// Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
        SerializedName = @"enableAdvancedFilteringOnArrays",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FilterEnableAdvancedFilteringOnArray { get; set; }
        /// <summary>
        /// A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all
        /// default event types, set the IncludedEventTypes to null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
        SerializedName = @"includedEventTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterIncludedEventType { get; set; }
        /// <summary>
        /// Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter
        /// should be compared in a case sensitive manner.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter
        should be compared in a case sensitive manner.",
        SerializedName = @"isSubjectCaseSensitive",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FilterIsSubjectCaseSensitive { get; set; }
        /// <summary>
        /// An optional string to filter events for an event subscription based on a resource path prefix.
        /// The format of this depends on the publisher of the events.
        /// Wildcard characters are not supported in this path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An optional string to filter events for an event subscription based on a resource path prefix.
        The format of this depends on the publisher of the events.
        Wildcard characters are not supported in this path.",
        SerializedName = @"subjectBeginsWith",
        PossibleTypes = new [] { typeof(string) })]
        string FilterSubjectBeginsWith { get; set; }
        /// <summary>
        /// An optional string to filter events for an event subscription based on a resource path suffix.
        /// Wildcard characters are not supported in this path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An optional string to filter events for an event subscription based on a resource path suffix.
        Wildcard characters are not supported in this path.",
        SerializedName = @"subjectEndsWith",
        PossibleTypes = new [] { typeof(string) })]
        string FilterSubjectEndsWith { get; set; }
        /// <summary>List of user defined labels.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of user defined labels.",
        SerializedName = @"labels",
        PossibleTypes = new [] { typeof(string) })]
        string[] Label { get; set; }
        /// <summary>Provisioning state of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the event subscription.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionProvisioningState? ProvisioningState { get;  }
        /// <summary>Time To Live (in minutes) for events.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time To Live (in minutes) for events.",
        SerializedName = @"eventTimeToLiveInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryPolicyEventTimeToLiveInMinute { get; set; }
        /// <summary>Maximum number of delivery retry attempts for events.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of delivery retry attempts for events.",
        SerializedName = @"maxDeliveryAttempts",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryPolicyMaxDeliveryAttempt { get; set; }
        /// <summary>Name of the topic of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the topic of the event subscription.",
        SerializedName = @"topic",
        PossibleTypes = new [] { typeof(string) })]
        string Topic { get;  }

    }
    /// Properties of the Event Subscription.
    internal partial interface IEventSubscriptionPropertiesInternal

    {
        /// <summary>
        /// The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent
        /// to the dead letter destination.
        /// Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterDestination DeadLetterDestination { get; set; }
        /// <summary>Type of the endpoint for the dead letter destination</summary>
        string DeadLetterEndPointTypeEndpointType { get; set; }
        /// <summary>
        /// The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent
        /// to the dead letter destination.
        /// Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens
        /// being used during delivery / dead-lettering.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterWithResourceIdentity DeadLetterWithResourceIdentity { get; set; }
        /// <summary>
        /// Information about the destination where events have to be delivered for the event subscription.
        /// Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens
        /// being used during delivery / dead-lettering.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeadLetterDestination DeadLetterWithResourceIdentityDeadLetterDestination { get; set; }
        /// <summary>Type of the endpoint for the dead letter destination</summary>
        string DeadLetterWithResourceIdentityDeadLetterDestinationEndpointType { get; set; }
        /// <summary>The identity to use when dead-lettering events.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionIdentity DeadLetterWithResourceIdentityIdentity { get; set; }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionIdentityType? DeadLetterWithResourceIdentityType { get; set; }
        /// <summary>The user identity associated with the resource.</summary>
        string DeadLetterWithResourceIdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Information about the destination where events have to be delivered for the event subscription.
        /// Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens
        /// being used during delivery / dead-lettering.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IDeliveryWithResourceIdentity DeliveryWithResourceIdentity { get; set; }
        /// <summary>
        /// Information about the destination where events have to be delivered for the event subscription.
        /// Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionDestination DeliveryWithResourceIdentityDestination { get; set; }
        /// <summary>Type of the endpoint for the event subscription destination.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EndpointType? DeliveryWithResourceIdentityDestinationEndpointType { get; set; }
        /// <summary>The identity to use when delivering events.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionIdentity DeliveryWithResourceIdentityIdentity { get; set; }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionIdentityType? DeliveryWithResourceIdentityType { get; set; }
        /// <summary>The user identity associated with the resource.</summary>
        string DeliveryWithResourceIdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Information about the destination where events have to be delivered for the event subscription.
        /// Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionDestination Destination { get; set; }
        /// <summary>Type of the endpoint for the event subscription destination.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EndpointType? EndpointType { get; set; }
        /// <summary>The event delivery schema for the event subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventDeliverySchema? EventDeliverySchema { get; set; }
        /// <summary>Expiration time of the event subscription.</summary>
        global::System.DateTime? ExpirationTimeUtc { get; set; }
        /// <summary>Information about the filter for the event subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IEventSubscriptionFilter Filter { get; set; }
        /// <summary>An array of advanced filters that are used for filtering event subscriptions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IAdvancedFilter[] FilterAdvancedFilter { get; set; }
        /// <summary>
        /// Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.
        /// </summary>
        bool? FilterEnableAdvancedFilteringOnArray { get; set; }
        /// <summary>
        /// A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all
        /// default event types, set the IncludedEventTypes to null.
        /// </summary>
        string[] FilterIncludedEventType { get; set; }
        /// <summary>
        /// Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter
        /// should be compared in a case sensitive manner.
        /// </summary>
        bool? FilterIsSubjectCaseSensitive { get; set; }
        /// <summary>
        /// An optional string to filter events for an event subscription based on a resource path prefix.
        /// The format of this depends on the publisher of the events.
        /// Wildcard characters are not supported in this path.
        /// </summary>
        string FilterSubjectBeginsWith { get; set; }
        /// <summary>
        /// An optional string to filter events for an event subscription based on a resource path suffix.
        /// Wildcard characters are not supported in this path.
        /// </summary>
        string FilterSubjectEndsWith { get; set; }
        /// <summary>List of user defined labels.</summary>
        string[] Label { get; set; }
        /// <summary>Provisioning state of the event subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.EventSubscriptionProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IRetryPolicy RetryPolicy { get; set; }
        /// <summary>Time To Live (in minutes) for events.</summary>
        int? RetryPolicyEventTimeToLiveInMinute { get; set; }
        /// <summary>Maximum number of delivery retry attempts for events.</summary>
        int? RetryPolicyMaxDeliveryAttempt { get; set; }
        /// <summary>Name of the topic of the event subscription.</summary>
        string Topic { get; set; }

    }
}