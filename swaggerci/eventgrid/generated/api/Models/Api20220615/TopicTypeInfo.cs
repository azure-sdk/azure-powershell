// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Properties of a topic type info.</summary>
    public partial class TopicTypeInfo :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypeInfo,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypeInfoInternal,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.Resource();

        /// <summary>Description of the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).Description = value ?? null; }

        /// <summary>Display Name for the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>Fully qualified identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypeProperties Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypeInfoInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.TopicTypeProperties()); set { {_property = value;} } }

        /// <summary>Name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypeProperties _property;

        /// <summary>Properties of the topic type info</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypeProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.TopicTypeProperties()); set => this._property = value; }

        /// <summary>Namespace of the provider of the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string Provider { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).Provider; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).Provider = value ?? null; }

        /// <summary>Provisioning state of the topic type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).ProvisioningState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState)""); }

        /// <summary>Region type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType? ResourceRegionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).ResourceRegionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).ResourceRegionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType)""); }

        /// <summary>Source resource format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string SourceResourceFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).SourceResourceFormat; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).SourceResourceFormat = value ?? null; }

        /// <summary>List of locations supported by this topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string[] SupportedLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).SupportedLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).SupportedLocation = value ?? null /* arrayOf */; }

        /// <summary>Supported source scopes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeSourceScope[] SupportedScopesForSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).SupportedScopesForSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypePropertiesInternal)Property).SupportedScopesForSource = value ?? null /* arrayOf */; }

        /// <summary>Type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="TopicTypeInfo" /> instance.</summary>
        public TopicTypeInfo()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Properties of a topic type info.
    public partial interface ITopicTypeInfo :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResource
    {
        /// <summary>Description of the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description of the topic type.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Display Name for the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display Name for the topic type.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Namespace of the provider of the topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Namespace of the provider of the topic type.",
        SerializedName = @"provider",
        PossibleTypes = new [] { typeof(string) })]
        string Provider { get; set; }
        /// <summary>Provisioning state of the topic type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning state of the topic type",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState? ProvisioningState { get; set; }
        /// <summary>Region type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Region type of the resource.",
        SerializedName = @"resourceRegionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType? ResourceRegionType { get; set; }
        /// <summary>Source resource format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Source resource format.",
        SerializedName = @"sourceResourceFormat",
        PossibleTypes = new [] { typeof(string) })]
        string SourceResourceFormat { get; set; }
        /// <summary>List of locations supported by this topic type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of locations supported by this topic type.",
        SerializedName = @"supportedLocations",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedLocation { get; set; }
        /// <summary>Supported source scopes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Supported source scopes.",
        SerializedName = @"supportedScopesForSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeSourceScope) })]
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeSourceScope[] SupportedScopesForSource { get; set; }

    }
    /// Properties of a topic type info.
    internal partial interface ITopicTypeInfoInternal :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.IResourceInternal
    {
        /// <summary>Description of the topic type.</summary>
        string Description { get; set; }
        /// <summary>Display Name for the topic type.</summary>
        string DisplayName { get; set; }
        /// <summary>Properties of the topic type info</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Api20220615.ITopicTypeProperties Property { get; set; }
        /// <summary>Namespace of the provider of the topic type.</summary>
        string Provider { get; set; }
        /// <summary>Provisioning state of the topic type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeProvisioningState? ProvisioningState { get; set; }
        /// <summary>Region type of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.ResourceRegionType? ResourceRegionType { get; set; }
        /// <summary>Source resource format.</summary>
        string SourceResourceFormat { get; set; }
        /// <summary>List of locations supported by this topic type.</summary>
        string[] SupportedLocation { get; set; }
        /// <summary>Supported source scopes.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Support.TopicTypeSourceScope[] SupportedScopesForSource { get; set; }

    }
}