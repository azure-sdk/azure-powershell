// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Extensions;

    /// <summary>
    /// Concrete tracked resource types can be created by aliasing this type using a specific property type.
    /// </summary>
    public partial class NginxDeployment :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeployment,
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.TrackedResource();

        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? AttackSignaturePackageRevisionDatetime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).AttackSignaturePackageRevisionDatetime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).AttackSignaturePackageRevisionDatetime = value ?? default(global::System.DateTime); }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string AttackSignaturePackageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).AttackSignaturePackageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).AttackSignaturePackageVersion = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile[] AutoScaleSettingProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).AutoScaleSettingProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).AutoScaleSettingProfile = value ?? null /* arrayOf */; }

        /// <summary>Channel used for autoupgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string AutoUpgradeProfileUpgradeChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).AutoUpgradeProfileUpgradeChannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).AutoUpgradeProfileUpgradeChannel = value ?? null; }

        /// <summary>Backing field for <see cref="AzureAsyncOperation" /> property.</summary>
        private string _azureAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string AzureAsyncOperation { get => this._azureAsyncOperation; set => this._azureAsyncOperation = value; }

        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? BotSignaturePackageRevisionDatetime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).BotSignaturePackageRevisionDatetime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).BotSignaturePackageRevisionDatetime = value ?? default(global::System.DateTime); }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string BotSignaturePackageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).BotSignaturePackageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).BotSignaturePackageVersion = value ?? null; }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string ComponentVersionWafEngineVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ComponentVersionWafEngineVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ComponentVersionWafEngineVersion = value ?? null; }

        /// <summary>
        /// The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string ComponentVersionWafNginxVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ComponentVersionWafNginxVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ComponentVersionWafNginxVersion = value ?? null; }

        /// <summary>
        /// Dataplane API endpoint for the caller to update the NGINX state of the deployment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string DataplaneApiEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).DataplaneApiEndpoint; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public bool? EnableDiagnosticsSupport { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).EnableDiagnosticsSupport; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).EnableDiagnosticsSupport = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).FrontEndIPConfigurationPrivateIpaddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).FrontEndIPConfigurationPrivateIpaddress = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).FrontEndIPConfigurationPublicIpaddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).FrontEndIPConfigurationPublicIpaddress = value ?? null /* arrayOf */; }

        /// <summary>The IP address of the deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string IPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).IPAddress; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityProperties _identity;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityProperties Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IdentityProperties()); set => this._identity = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).PrincipalId; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).TenantId; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType)""); }

        /// <summary>Dictionary of <UserIdentityProperties></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for AutoUpgradeProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAutoUpgradeProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.AutoUpgradeProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).AutoUpgradeProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).AutoUpgradeProfile = value; }

        /// <summary>Internal Acessors for DataplaneApiEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.DataplaneApiEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).DataplaneApiEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).DataplaneApiEndpoint = value; }

        /// <summary>Internal Acessors for IPAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.IPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).IPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).IPAddress = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityProperties Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IdentityProperties()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for Logging</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLogging Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.Logging { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).Logging; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).Logging = value; }

        /// <summary>Internal Acessors for LoggingStorageAccount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxStorageAccount Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.LoggingStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).LoggingStorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).LoggingStorageAccount = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.NetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfile = value; }

        /// <summary>Internal Acessors for NetworkProfileFrontEndIPConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxFrontendIPConfiguration Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.NetworkProfileFrontEndIPConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfileFrontEndIPConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfileFrontEndIPConfiguration = value; }

        /// <summary>Internal Acessors for NetworkProfileNetworkInterfaceConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkInterfaceConfiguration Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.NetworkProfileNetworkInterfaceConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfileNetworkInterfaceConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfileNetworkInterfaceConfiguration = value; }

        /// <summary>Internal Acessors for NginxAppProtect</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtect Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.NginxAppProtect { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtect; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtect = value; }

        /// <summary>Internal Acessors for NginxAppProtectWebApplicationFirewallSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallSettings Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.NginxAppProtectWebApplicationFirewallSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtectWebApplicationFirewallSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtectWebApplicationFirewallSetting = value; }

        /// <summary>Internal Acessors for NginxAppProtectWebApplicationFirewallStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallStatus Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.NginxAppProtectWebApplicationFirewallStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtectWebApplicationFirewallStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtectWebApplicationFirewallStatus = value; }

        /// <summary>Internal Acessors for NginxVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.NginxVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NginxVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NginxVersion = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentProperties Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ScalingProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingProperties Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.ScalingProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ScalingProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ScalingProperty = value; }

        /// <summary>Internal Acessors for ScalingPropertyAutoScaleSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesAutoScaleSettings Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.ScalingPropertyAutoScaleSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ScalingPropertyAutoScaleSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ScalingPropertyAutoScaleSetting = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuProperty Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.AzureResourceManagerResourceSkuProperty()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for Sku1</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ISku Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.Sku1 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).Sku = value; }

        /// <summary>Internal Acessors for UserProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUserProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.UserProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).UserProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).UserProfile = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusAttackSignaturesPackage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.WebApplicationFirewallStatusAttackSignaturesPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusAttackSignaturesPackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusAttackSignaturesPackage = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusBotSignaturesPackage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.WebApplicationFirewallStatusBotSignaturesPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusBotSignaturesPackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusBotSignaturesPackage = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusComponentVersion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallComponentVersions Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.WebApplicationFirewallStatusComponentVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusComponentVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusComponentVersion = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusThreatCampaignsPackage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal.WebApplicationFirewallStatusThreatCampaignsPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusThreatCampaignsPackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusThreatCampaignsPackage = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).Name; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string NetworkInterfaceConfigurationSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NetworkInterfaceConfigurationSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NetworkInterfaceConfigurationSubnetId = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string NginxVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).NginxVersion; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentProperties _property;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentProperties()); set => this._property = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Backing field for <see cref="RetryAfter" /> property.</summary>
        private int? _retryAfter;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public int? RetryAfter { get => this._retryAfter; set => this._retryAfter = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public int? ScalingPropertyCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ScalingPropertyCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ScalingPropertyCapacity = value ?? default(int); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuProperty _sku;

        /// <summary>The SKU (Stock Keeping Unit) assigned to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuProperty Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.AzureResourceManagerResourceSkuProperty()); set => this._sku = value; }

        /// <summary>
        /// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the
        /// resource this may be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public int? SkuCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).SkuCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).SkuCapacity = value ?? default(int); }

        /// <summary>
        /// If the service has different generations of hardware, for the same SKU, then that can be captured here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string SkuFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).SkuFamily; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).SkuFamily = value ?? null; }

        /// <summary>The name of the SKU. E.g. P3. It is typically a letter+number code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).SkuName = value ?? null; }

        /// <summary>
        /// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string SkuSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).SkuSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).SkuSize = value ?? null; }

        /// <summary>
        /// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required
        /// on a PUT.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.SkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).SkuTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuPropertyInternal)Sku).SkuTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.SkuTier)""); }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string StorageAccountContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).StorageAccountContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).StorageAccountContainerName = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string StorageAccountName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).StorageAccountName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).StorageAccountName = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? ThreatCampaignPackageRevisionDatetime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ThreatCampaignPackageRevisionDatetime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ThreatCampaignPackageRevisionDatetime = value ?? default(global::System.DateTime); }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string ThreatCampaignPackageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ThreatCampaignPackageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).ThreatCampaignPackageVersion = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.IResourceInternal)__trackedResource).Type; }

        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string UserProfilePreferredEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).UserProfilePreferredEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).UserProfilePreferredEmail = value ?? null; }

        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallSettingActivationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallSettingActivationState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState)""); }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Azure-AsyncOperation", out var __azureAsyncOperationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal)this).AzureAsyncOperation = System.Linq.Enumerable.FirstOrDefault(__azureAsyncOperationHeader0) is string __headerAzureAsyncOperationHeader0 ? __headerAzureAsyncOperationHeader0 : (string)null;
            }
            if (headers.TryGetValues("Retry-After", out var __retryAfterHeader1))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentInternal)this).RetryAfter = System.Linq.Enumerable.FirstOrDefault(__retryAfterHeader1) is string __headerRetryAfterHeader1 ? int.TryParse( __headerRetryAfterHeader1, out int __headerRetryAfterHeader1Value ) ? __headerRetryAfterHeader1Value : default(int?) : default(int?);
            }
        }

        /// <summary>Creates an new <see cref="NginxDeployment" /> instance.</summary>
        public NginxDeployment()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Concrete tracked resource types can be created by aliasing this type using a specific property type.
    public partial interface INginxDeployment :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ITrackedResource
    {
        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time of the package revision.",
        SerializedName = @"revisionDatetime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AttackSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) package.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string AttackSignaturePackageVersion { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"profiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile[] AutoScaleSettingProfile { get; set; }
        /// <summary>Channel used for autoupgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Channel used for autoupgrade.",
        SerializedName = @"upgradeChannel",
        PossibleTypes = new [] { typeof(string) })]
        string AutoUpgradeProfileUpgradeChannel { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Azure-AsyncOperation",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAsyncOperation { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time of the package revision.",
        SerializedName = @"revisionDatetime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BotSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) package.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string BotSignaturePackageVersion { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) engine.",
        SerializedName = @"wafEngineVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentVersionWafEngineVersion { get; set; }
        /// <summary>
        /// The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.",
        SerializedName = @"wafNginxVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentVersionWafNginxVersion { get; set; }
        /// <summary>
        /// Dataplane API endpoint for the caller to update the NGINX state of the deployment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Dataplane API endpoint for the caller to update the NGINX state of the deployment.",
        SerializedName = @"dataplaneApiEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string DataplaneApiEndpoint { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"enableDiagnosticsSupport",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableDiagnosticsSupport { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"privateIPAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"publicIPAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get; set; }
        /// <summary>The IP address of the deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IP address of the deployment.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string IPAddress { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType? IdentityType { get; set; }
        /// <summary>Dictionary of <UserIdentityProperties></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of <UserIdentityProperties>",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceConfigurationSubnetId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"nginxVersion",
        PossibleTypes = new [] { typeof(string) })]
        string NginxVersion { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Retry-After",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryAfter { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? ScalingPropertyCapacity { get; set; }
        /// <summary>
        /// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the
        /// resource this may be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? SkuCapacity { get; set; }
        /// <summary>
        /// If the service has different generations of hardware, for the same SKU, then that can be captured here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the service has different generations of hardware, for the same SKU, then that can be captured here.",
        SerializedName = @"family",
        PossibleTypes = new [] { typeof(string) })]
        string SkuFamily { get; set; }
        /// <summary>The name of the SKU. E.g. P3. It is typically a letter+number code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the SKU. E.g. P3. It is typically a letter+number code",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>
        /// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. ",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(string) })]
        string SkuSize { get; set; }
        /// <summary>
        /// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required
        /// on a PUT.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.SkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.SkuTier? SkuTier { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountContainerName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountName { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time of the package revision.",
        SerializedName = @"revisionDatetime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ThreatCampaignPackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) package.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ThreatCampaignPackageVersion { get; set; }
        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string or a valid email address.",
        SerializedName = @"preferredEmail",
        PossibleTypes = new [] { typeof(string) })]
        string UserProfilePreferredEmail { get; set; }
        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.",
        SerializedName = @"activationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get; set; }

    }
    /// Concrete tracked resource types can be created by aliasing this type using a specific property type.
    internal partial interface INginxDeploymentInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ITrackedResourceInternal
    {
        /// <summary>The date and time of the package revision.</summary>
        global::System.DateTime? AttackSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        string AttackSignaturePackageVersion { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile[] AutoScaleSettingProfile { get; set; }
        /// <summary>Autoupgrade settings of a deployment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAutoUpgradeProfile AutoUpgradeProfile { get; set; }
        /// <summary>Channel used for autoupgrade.</summary>
        string AutoUpgradeProfileUpgradeChannel { get; set; }

        string AzureAsyncOperation { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        global::System.DateTime? BotSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        string BotSignaturePackageVersion { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) engine.</summary>
        string ComponentVersionWafEngineVersion { get; set; }
        /// <summary>
        /// The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.
        /// </summary>
        string ComponentVersionWafNginxVersion { get; set; }
        /// <summary>
        /// Dataplane API endpoint for the caller to update the NGINX state of the deployment.
        /// </summary>
        string DataplaneApiEndpoint { get; set; }

        bool? EnableDiagnosticsSupport { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get; set; }
        /// <summary>The IP address of the deployment.</summary>
        string IPAddress { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityProperties Identity { get; set; }

        string IdentityPrincipalId { get; set; }

        string IdentityTenantId { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType? IdentityType { get; set; }
        /// <summary>Dictionary of <UserIdentityProperties></summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLogging Logging { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxStorageAccount LoggingStorageAccount { get; set; }

        string NetworkInterfaceConfigurationSubnetId { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfile NetworkProfile { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxFrontendIPConfiguration NetworkProfileFrontEndIPConfiguration { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkInterfaceConfiguration NetworkProfileNetworkInterfaceConfiguration { get; set; }
        /// <summary>Settings for NGINX App Protect (NAP)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtect NginxAppProtect { get; set; }
        /// <summary>Settings for the NGINX App Protect Web Application Firewall (WAF)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallSettings NginxAppProtectWebApplicationFirewallSetting { get; set; }
        /// <summary>The status of the NGINX App Protect Web Application Firewall</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallStatus NginxAppProtectWebApplicationFirewallStatus { get; set; }

        string NginxVersion { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentProperties Property { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get; set; }

        int? RetryAfter { get; set; }
        /// <summary>Information on how the deployment will be scaled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingProperties ScalingProperty { get; set; }
        /// <summary>
        /// The settings for enabling automatic scaling of the deployment. If this field is specified, 'scale.capacity' must be empty.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesAutoScaleSettings ScalingPropertyAutoScaleSetting { get; set; }

        int? ScalingPropertyCapacity { get; set; }
        /// <summary>The SKU (Stock Keeping Unit) assigned to this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAzureResourceManagerResourceSkuProperty Sku { get; set; }
        /// <summary>The SKU (Stock Keeping Unit) assigned to this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api50.ISku Sku1 { get; set; }
        /// <summary>
        /// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the
        /// resource this may be omitted.
        /// </summary>
        int? SkuCapacity { get; set; }
        /// <summary>
        /// If the service has different generations of hardware, for the same SKU, then that can be captured here.
        /// </summary>
        string SkuFamily { get; set; }
        /// <summary>The name of the SKU. E.g. P3. It is typically a letter+number code</summary>
        string SkuName { get; set; }
        /// <summary>
        /// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
        /// </summary>
        string SkuSize { get; set; }
        /// <summary>
        /// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required
        /// on a PUT.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.SkuTier? SkuTier { get; set; }

        string StorageAccountContainerName { get; set; }

        string StorageAccountName { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        global::System.DateTime? ThreatCampaignPackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        string ThreatCampaignPackageVersion { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUserProfile UserProfile { get; set; }
        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        string UserProfilePreferredEmail { get; set; }
        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get; set; }
        /// <summary>
        /// Package containing attack signatures for the NGINX App Protect Web Application Firewall (WAF).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage WebApplicationFirewallStatusAttackSignaturesPackage { get; set; }
        /// <summary>
        /// Package containing bot signatures for the NGINX App Protect Web Application Firewall (WAF).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage WebApplicationFirewallStatusBotSignaturesPackage { get; set; }
        /// <summary>Versions of the NGINX App Protect Web Application Firewall (WAF) components.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallComponentVersions WebApplicationFirewallStatusComponentVersion { get; set; }
        /// <summary>
        /// Package containing threat campaigns for the NGINX App Protect Web Application Firewall (WAF).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage WebApplicationFirewallStatusThreatCampaignsPackage { get; set; }

    }
}