// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.PowerShell;

    /// <summary>Settings for NGINX App Protect (NAP)</summary>
    [System.ComponentModel.TypeConverter(typeof(NginxDeploymentPropertiesNginxAppProtectTypeConverter))]
    public partial class NginxDeploymentPropertiesNginxAppProtect
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentPropertiesNginxAppProtect"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtect"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtect DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new NginxDeploymentPropertiesNginxAppProtect(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentPropertiesNginxAppProtect"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtect"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtect DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new NginxDeploymentPropertiesNginxAppProtect(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="NginxDeploymentPropertiesNginxAppProtect" />, deserializing the content from a json
        /// string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="NginxDeploymentPropertiesNginxAppProtect" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtect FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentPropertiesNginxAppProtect"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal NginxDeploymentPropertiesNginxAppProtect(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("WebApplicationFirewallSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallSetting = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallSettings) content.GetValueForProperty("WebApplicationFirewallSetting",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallSetting, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatus = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallStatus) content.GetValueForProperty("WebApplicationFirewallStatus",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatus, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallSettingActivationState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallSettingActivationState = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState?) content.GetValueForProperty("WebApplicationFirewallSettingActivationState",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallSettingActivationState, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState.CreateFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusAttackSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusAttackSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusAttackSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusAttackSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusBotSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusBotSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusBotSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusBotSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusThreatCampaignsPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusThreatCampaignsPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusThreatCampaignsPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusThreatCampaignsPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusComponentVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusComponentVersion = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallComponentVersions) content.GetValueForProperty("WebApplicationFirewallStatusComponentVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusComponentVersion, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallComponentVersionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttackSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).AttackSignaturePackageVersion = (string) content.GetValueForProperty("AttackSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).AttackSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AttackSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).AttackSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("AttackSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).AttackSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("BotSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).BotSignaturePackageVersion = (string) content.GetValueForProperty("BotSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).BotSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("BotSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).BotSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("BotSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).BotSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ThreatCampaignPackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ThreatCampaignPackageVersion = (string) content.GetValueForProperty("ThreatCampaignPackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ThreatCampaignPackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ThreatCampaignPackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ThreatCampaignPackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("ThreatCampaignPackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ThreatCampaignPackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ComponentVersionWafEngineVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ComponentVersionWafEngineVersion = (string) content.GetValueForProperty("ComponentVersionWafEngineVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ComponentVersionWafEngineVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ComponentVersionWafNginxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ComponentVersionWafNginxVersion = (string) content.GetValueForProperty("ComponentVersionWafNginxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ComponentVersionWafNginxVersion, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentPropertiesNginxAppProtect"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal NginxDeploymentPropertiesNginxAppProtect(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("WebApplicationFirewallSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallSetting = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallSettings) content.GetValueForProperty("WebApplicationFirewallSetting",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallSetting, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatus = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallStatus) content.GetValueForProperty("WebApplicationFirewallStatus",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatus, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallSettingActivationState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallSettingActivationState = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState?) content.GetValueForProperty("WebApplicationFirewallSettingActivationState",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallSettingActivationState, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState.CreateFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusAttackSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusAttackSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusAttackSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusAttackSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusBotSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusBotSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusBotSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusBotSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusThreatCampaignsPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusThreatCampaignsPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusThreatCampaignsPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusThreatCampaignsPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusComponentVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusComponentVersion = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallComponentVersions) content.GetValueForProperty("WebApplicationFirewallStatusComponentVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).WebApplicationFirewallStatusComponentVersion, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.WebApplicationFirewallComponentVersionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttackSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).AttackSignaturePackageVersion = (string) content.GetValueForProperty("AttackSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).AttackSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AttackSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).AttackSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("AttackSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).AttackSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("BotSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).BotSignaturePackageVersion = (string) content.GetValueForProperty("BotSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).BotSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("BotSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).BotSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("BotSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).BotSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ThreatCampaignPackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ThreatCampaignPackageVersion = (string) content.GetValueForProperty("ThreatCampaignPackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ThreatCampaignPackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ThreatCampaignPackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ThreatCampaignPackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("ThreatCampaignPackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ThreatCampaignPackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ComponentVersionWafEngineVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ComponentVersionWafEngineVersion = (string) content.GetValueForProperty("ComponentVersionWafEngineVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ComponentVersionWafEngineVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ComponentVersionWafNginxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ComponentVersionWafNginxVersion = (string) content.GetValueForProperty("ComponentVersionWafNginxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)this).ComponentVersionWafNginxVersion, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Settings for NGINX App Protect (NAP)
    [System.ComponentModel.TypeConverter(typeof(NginxDeploymentPropertiesNginxAppProtectTypeConverter))]
    public partial interface INginxDeploymentPropertiesNginxAppProtect

    {

    }
}