// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Extensions;

    public partial class NginxDeploymentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal
    {

        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? AttackSignaturePackageRevisionDatetime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).AttackSignaturePackageRevisionDatetime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).AttackSignaturePackageRevisionDatetime = value ?? default(global::System.DateTime); }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string AttackSignaturePackageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).AttackSignaturePackageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).AttackSignaturePackageVersion = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile[] AutoScaleSettingProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesInternal)ScalingProperty).AutoScaleSettingProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesInternal)ScalingProperty).AutoScaleSettingProfile = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="AutoUpgradeProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAutoUpgradeProfile _autoUpgradeProfile;

        /// <summary>Autoupgrade settings of a deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAutoUpgradeProfile AutoUpgradeProfile { get => (this._autoUpgradeProfile = this._autoUpgradeProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.AutoUpgradeProfile()); set => this._autoUpgradeProfile = value; }

        /// <summary>Channel used for autoupgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string AutoUpgradeProfileUpgradeChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAutoUpgradeProfileInternal)AutoUpgradeProfile).UpgradeChannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAutoUpgradeProfileInternal)AutoUpgradeProfile).UpgradeChannel = value ?? null; }

        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? BotSignaturePackageRevisionDatetime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).BotSignaturePackageRevisionDatetime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).BotSignaturePackageRevisionDatetime = value ?? default(global::System.DateTime); }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string BotSignaturePackageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).BotSignaturePackageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).BotSignaturePackageVersion = value ?? null; }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string ComponentVersionWafEngineVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).ComponentVersionWafEngineVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).ComponentVersionWafEngineVersion = value ?? null; }

        /// <summary>
        /// The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string ComponentVersionWafNginxVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).ComponentVersionWafNginxVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).ComponentVersionWafNginxVersion = value ?? null; }

        /// <summary>Backing field for <see cref="DataplaneApiEndpoint" /> property.</summary>
        private string _dataplaneApiEndpoint;

        /// <summary>
        /// Dataplane API endpoint for the caller to update the NGINX state of the deployment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string DataplaneApiEndpoint { get => this._dataplaneApiEndpoint; }

        /// <summary>Backing field for <see cref="EnableDiagnosticsSupport" /> property.</summary>
        private bool? _enableDiagnosticsSupport;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public bool? EnableDiagnosticsSupport { get => this._enableDiagnosticsSupport; set => this._enableDiagnosticsSupport = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfileInternal)NetworkProfile).FrontEndIPConfigurationPrivateIpaddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfileInternal)NetworkProfile).FrontEndIPConfigurationPrivateIpaddress = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfileInternal)NetworkProfile).FrontEndIPConfigurationPublicIpaddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfileInternal)NetworkProfile).FrontEndIPConfigurationPublicIpaddress = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="IPAddress" /> property.</summary>
        private string _iPAddress;

        /// <summary>The IP address of the deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string IPAddress { get => this._iPAddress; }

        /// <summary>Backing field for <see cref="Logging" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLogging _logging;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLogging Logging { get => (this._logging = this._logging ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxLogging()); set => this._logging = value; }

        /// <summary>Internal Acessors for AutoUpgradeProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAutoUpgradeProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.AutoUpgradeProfile { get => (this._autoUpgradeProfile = this._autoUpgradeProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.AutoUpgradeProfile()); set { {_autoUpgradeProfile = value;} } }

        /// <summary>Internal Acessors for DataplaneApiEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.DataplaneApiEndpoint { get => this._dataplaneApiEndpoint; set { {_dataplaneApiEndpoint = value;} } }

        /// <summary>Internal Acessors for IPAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.IPAddress { get => this._iPAddress; set { {_iPAddress = value;} } }

        /// <summary>Internal Acessors for Logging</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLogging Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.Logging { get => (this._logging = this._logging ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxLogging()); set { {_logging = value;} } }

        /// <summary>Internal Acessors for LoggingStorageAccount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxStorageAccount Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.LoggingStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLoggingInternal)Logging).StorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLoggingInternal)Logging).StorageAccount = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxNetworkProfile()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for NetworkProfileFrontEndIPConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxFrontendIPConfiguration Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.NetworkProfileFrontEndIPConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfileInternal)NetworkProfile).FrontEndIPConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfileInternal)NetworkProfile).FrontEndIPConfiguration = value; }

        /// <summary>Internal Acessors for NetworkProfileNetworkInterfaceConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkInterfaceConfiguration Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.NetworkProfileNetworkInterfaceConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfileInternal)NetworkProfile).NetworkInterfaceConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfileInternal)NetworkProfile).NetworkInterfaceConfiguration = value; }

        /// <summary>Internal Acessors for NginxAppProtect</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtect Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.NginxAppProtect { get => (this._nginxAppProtect = this._nginxAppProtect ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentPropertiesNginxAppProtect()); set { {_nginxAppProtect = value;} } }

        /// <summary>Internal Acessors for NginxAppProtectWebApplicationFirewallSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallSettings Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.NginxAppProtectWebApplicationFirewallSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallSetting = value; }

        /// <summary>Internal Acessors for NginxAppProtectWebApplicationFirewallStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallStatus Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.NginxAppProtectWebApplicationFirewallStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallStatus = value; }

        /// <summary>Internal Acessors for NginxVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.NginxVersion { get => this._nginxVersion; set { {_nginxVersion = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ScalingProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingProperties Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.ScalingProperty { get => (this._scalingProperty = this._scalingProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentScalingProperties()); set { {_scalingProperty = value;} } }

        /// <summary>Internal Acessors for ScalingPropertyAutoScaleSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesAutoScaleSettings Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.ScalingPropertyAutoScaleSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesInternal)ScalingProperty).AutoScaleSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesInternal)ScalingProperty).AutoScaleSetting = value; }

        /// <summary>Internal Acessors for UserProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUserProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.UserProfile { get => (this._userProfile = this._userProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentUserProfile()); set { {_userProfile = value;} } }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusAttackSignaturesPackage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.WebApplicationFirewallStatusAttackSignaturesPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallStatusAttackSignaturesPackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallStatusAttackSignaturesPackage = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusBotSignaturesPackage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.WebApplicationFirewallStatusBotSignaturesPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallStatusBotSignaturesPackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallStatusBotSignaturesPackage = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusComponentVersion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallComponentVersions Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.WebApplicationFirewallStatusComponentVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallStatusComponentVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallStatusComponentVersion = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusThreatCampaignsPackage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesInternal.WebApplicationFirewallStatusThreatCampaignsPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallStatusThreatCampaignsPackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallStatusThreatCampaignsPackage = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string NetworkInterfaceConfigurationSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfileInternal)NetworkProfile).NetworkInterfaceConfigurationSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfileInternal)NetworkProfile).NetworkInterfaceConfigurationSubnetId = value ?? null; }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfile _networkProfile;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfile NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxNetworkProfile()); set => this._networkProfile = value; }

        /// <summary>Backing field for <see cref="NginxAppProtect" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtect _nginxAppProtect;

        /// <summary>Settings for NGINX App Protect (NAP)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtect NginxAppProtect { get => (this._nginxAppProtect = this._nginxAppProtect ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentPropertiesNginxAppProtect()); set => this._nginxAppProtect = value; }

        /// <summary>Backing field for <see cref="NginxVersion" /> property.</summary>
        private string _nginxVersion;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string NginxVersion { get => this._nginxVersion; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? _provisioningState;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ScalingProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingProperties _scalingProperty;

        /// <summary>Information on how the deployment will be scaled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingProperties ScalingProperty { get => (this._scalingProperty = this._scalingProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentScalingProperties()); set => this._scalingProperty = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public int? ScalingPropertyCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesInternal)ScalingProperty).Capacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesInternal)ScalingProperty).Capacity = value ?? default(int); }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string StorageAccountContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLoggingInternal)Logging).StorageAccountContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLoggingInternal)Logging).StorageAccountContainerName = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string StorageAccountName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLoggingInternal)Logging).StorageAccountName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLoggingInternal)Logging).StorageAccountName = value ?? null; }

        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? ThreatCampaignPackageRevisionDatetime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).ThreatCampaignPackageRevisionDatetime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).ThreatCampaignPackageRevisionDatetime = value ?? default(global::System.DateTime); }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string ThreatCampaignPackageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).ThreatCampaignPackageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).ThreatCampaignPackageVersion = value ?? null; }

        /// <summary>Backing field for <see cref="UserProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUserProfile _userProfile;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUserProfile UserProfile { get => (this._userProfile = this._userProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentUserProfile()); set => this._userProfile = value; }

        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string UserProfilePreferredEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUserProfileInternal)UserProfile).PreferredEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUserProfileInternal)UserProfile).PreferredEmail = value ?? null; }

        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallSettingActivationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtectInternal)NginxAppProtect).WebApplicationFirewallSettingActivationState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState)""); }

        /// <summary>Creates an new <see cref="NginxDeploymentProperties" /> instance.</summary>
        public NginxDeploymentProperties()
        {

        }
    }
    public partial interface INginxDeploymentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IJsonSerializable
    {
        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time of the package revision.",
        SerializedName = @"revisionDatetime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AttackSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) package.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string AttackSignaturePackageVersion { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"profiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile[] AutoScaleSettingProfile { get; set; }
        /// <summary>Channel used for autoupgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Channel used for autoupgrade.",
        SerializedName = @"upgradeChannel",
        PossibleTypes = new [] { typeof(string) })]
        string AutoUpgradeProfileUpgradeChannel { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time of the package revision.",
        SerializedName = @"revisionDatetime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BotSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) package.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string BotSignaturePackageVersion { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) engine.",
        SerializedName = @"wafEngineVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentVersionWafEngineVersion { get; set; }
        /// <summary>
        /// The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.",
        SerializedName = @"wafNginxVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentVersionWafNginxVersion { get; set; }
        /// <summary>
        /// Dataplane API endpoint for the caller to update the NGINX state of the deployment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Dataplane API endpoint for the caller to update the NGINX state of the deployment.",
        SerializedName = @"dataplaneApiEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string DataplaneApiEndpoint { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"enableDiagnosticsSupport",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableDiagnosticsSupport { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"privateIPAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"publicIPAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get; set; }
        /// <summary>The IP address of the deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IP address of the deployment.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string IPAddress { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceConfigurationSubnetId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"nginxVersion",
        PossibleTypes = new [] { typeof(string) })]
        string NginxVersion { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? ScalingPropertyCapacity { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountContainerName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountName { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time of the package revision.",
        SerializedName = @"revisionDatetime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ThreatCampaignPackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) package.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ThreatCampaignPackageVersion { get; set; }
        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string or a valid email address.",
        SerializedName = @"preferredEmail",
        PossibleTypes = new [] { typeof(string) })]
        string UserProfilePreferredEmail { get; set; }
        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.",
        SerializedName = @"activationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get; set; }

    }
    internal partial interface INginxDeploymentPropertiesInternal

    {
        /// <summary>The date and time of the package revision.</summary>
        global::System.DateTime? AttackSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        string AttackSignaturePackageVersion { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile[] AutoScaleSettingProfile { get; set; }
        /// <summary>Autoupgrade settings of a deployment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAutoUpgradeProfile AutoUpgradeProfile { get; set; }
        /// <summary>Channel used for autoupgrade.</summary>
        string AutoUpgradeProfileUpgradeChannel { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        global::System.DateTime? BotSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        string BotSignaturePackageVersion { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) engine.</summary>
        string ComponentVersionWafEngineVersion { get; set; }
        /// <summary>
        /// The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.
        /// </summary>
        string ComponentVersionWafNginxVersion { get; set; }
        /// <summary>
        /// Dataplane API endpoint for the caller to update the NGINX state of the deployment.
        /// </summary>
        string DataplaneApiEndpoint { get; set; }

        bool? EnableDiagnosticsSupport { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get; set; }
        /// <summary>The IP address of the deployment.</summary>
        string IPAddress { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLogging Logging { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxStorageAccount LoggingStorageAccount { get; set; }

        string NetworkInterfaceConfigurationSubnetId { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfile NetworkProfile { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxFrontendIPConfiguration NetworkProfileFrontEndIPConfiguration { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkInterfaceConfiguration NetworkProfileNetworkInterfaceConfiguration { get; set; }
        /// <summary>Settings for NGINX App Protect (NAP)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentPropertiesNginxAppProtect NginxAppProtect { get; set; }
        /// <summary>Settings for the NGINX App Protect Web Application Firewall (WAF)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallSettings NginxAppProtectWebApplicationFirewallSetting { get; set; }
        /// <summary>The status of the NGINX App Protect Web Application Firewall</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallStatus NginxAppProtectWebApplicationFirewallStatus { get; set; }

        string NginxVersion { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Information on how the deployment will be scaled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingProperties ScalingProperty { get; set; }
        /// <summary>
        /// The settings for enabling automatic scaling of the deployment. If this field is specified, 'scale.capacity' must be empty.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesAutoScaleSettings ScalingPropertyAutoScaleSetting { get; set; }

        int? ScalingPropertyCapacity { get; set; }

        string StorageAccountContainerName { get; set; }

        string StorageAccountName { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        global::System.DateTime? ThreatCampaignPackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        string ThreatCampaignPackageVersion { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUserProfile UserProfile { get; set; }
        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        string UserProfilePreferredEmail { get; set; }
        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get; set; }
        /// <summary>
        /// Package containing attack signatures for the NGINX App Protect Web Application Firewall (WAF).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage WebApplicationFirewallStatusAttackSignaturesPackage { get; set; }
        /// <summary>
        /// Package containing bot signatures for the NGINX App Protect Web Application Firewall (WAF).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage WebApplicationFirewallStatusBotSignaturesPackage { get; set; }
        /// <summary>Versions of the NGINX App Protect Web Application Firewall (WAF) components.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallComponentVersions WebApplicationFirewallStatusComponentVersion { get; set; }
        /// <summary>
        /// Package containing threat campaigns for the NGINX App Protect Web Application Firewall (WAF).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallPackage WebApplicationFirewallStatusThreatCampaignsPackage { get; set; }

    }
}