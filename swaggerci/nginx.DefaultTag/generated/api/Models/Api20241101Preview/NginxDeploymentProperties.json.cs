// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Extensions;

    public partial class NginxDeploymentProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject json ? new NginxDeploymentProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject into a new instance of <see cref="NginxDeploymentProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal NginxDeploymentProperties(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_networkProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject>("networkProfile"), out var __jsonNetworkProfile) ? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxNetworkProfile.FromJson(__jsonNetworkProfile) : NetworkProfile;}
            {_logging = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject>("logging"), out var __jsonLogging) ? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxLogging.FromJson(__jsonLogging) : Logging;}
            {_scalingProperty = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject>("scalingProperties"), out var __jsonScalingProperties) ? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentScalingProperties.FromJson(__jsonScalingProperties) : ScalingProperty;}
            {_autoUpgradeProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject>("autoUpgradeProfile"), out var __jsonAutoUpgradeProfile) ? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.AutoUpgradeProfile.FromJson(__jsonAutoUpgradeProfile) : AutoUpgradeProfile;}
            {_userProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject>("userProfile"), out var __jsonUserProfile) ? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentUserProfile.FromJson(__jsonUserProfile) : UserProfile;}
            {_nginxAppProtect = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject>("nginxAppProtect"), out var __jsonNginxAppProtect) ? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentPropertiesNginxAppProtect.FromJson(__jsonNginxAppProtect) : NginxAppProtect;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_nginxVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonString>("nginxVersion"), out var __jsonNginxVersion) ? (string)__jsonNginxVersion : (string)NginxVersion;}
            {_iPAddress = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonString>("ipAddress"), out var __jsonIPAddress) ? (string)__jsonIPAddress : (string)IPAddress;}
            {_enableDiagnosticsSupport = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonBoolean>("enableDiagnosticsSupport"), out var __jsonEnableDiagnosticsSupport) ? (bool?)__jsonEnableDiagnosticsSupport : EnableDiagnosticsSupport;}
            {_dataplaneApiEndpoint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonString>("dataplaneApiEndpoint"), out var __jsonDataplaneApiEndpoint) ? (string)__jsonDataplaneApiEndpoint : (string)DataplaneApiEndpoint;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="NginxDeploymentProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="NginxDeploymentProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._networkProfile ? (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode) this._networkProfile.ToJson(null,serializationMode) : null, "networkProfile" ,container.Add );
            AddIf( null != this._logging ? (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode) this._logging.ToJson(null,serializationMode) : null, "logging" ,container.Add );
            AddIf( null != this._scalingProperty ? (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode) this._scalingProperty.ToJson(null,serializationMode) : null, "scalingProperties" ,container.Add );
            AddIf( null != this._autoUpgradeProfile ? (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode) this._autoUpgradeProfile.ToJson(null,serializationMode) : null, "autoUpgradeProfile" ,container.Add );
            AddIf( null != this._userProfile ? (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode) this._userProfile.ToJson(null,serializationMode) : null, "userProfile" ,container.Add );
            AddIf( null != this._nginxAppProtect ? (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode) this._nginxAppProtect.ToJson(null,serializationMode) : null, "nginxAppProtect" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._nginxVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonString(this._nginxVersion.ToString()) : null, "nginxVersion" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._iPAddress)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonString(this._iPAddress.ToString()) : null, "ipAddress" ,container.Add );
            }
            AddIf( null != this._enableDiagnosticsSupport ? (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonBoolean((bool)this._enableDiagnosticsSupport) : null, "enableDiagnosticsSupport" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._dataplaneApiEndpoint)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonString(this._dataplaneApiEndpoint.ToString()) : null, "dataplaneApiEndpoint" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}