// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Extensions;

    public partial class NginxDeploymentUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal
    {

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile[] AutoScaleSettingProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).AutoScaleSettingProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).AutoScaleSettingProfile = value ?? null /* arrayOf */; }

        /// <summary>Channel used for autoupgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string AutoUpgradeProfileUpgradeChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).AutoUpgradeProfileUpgradeChannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).AutoUpgradeProfileUpgradeChannel = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public bool? EnableDiagnosticsSupport { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).EnableDiagnosticsSupport; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).EnableDiagnosticsSupport = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).FrontEndIPConfigurationPrivateIpaddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).FrontEndIPConfigurationPrivateIpaddress = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).FrontEndIPConfigurationPublicIpaddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).FrontEndIPConfigurationPublicIpaddress = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityProperties _identity;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityProperties Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IdentityProperties()); set => this._identity = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).PrincipalId; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).TenantId; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType)""); }

        /// <summary>Dictionary of <UserIdentityProperties></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for AutoUpgradeProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAutoUpgradeProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.AutoUpgradeProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).AutoUpgradeProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).AutoUpgradeProfile = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityProperties Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IdentityProperties()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for Logging</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLogging Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.Logging { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).Logging; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).Logging = value; }

        /// <summary>Internal Acessors for LoggingStorageAccount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxStorageAccount Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.LoggingStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).LoggingStorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).LoggingStorageAccount = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.NetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NetworkProfile = value; }

        /// <summary>Internal Acessors for NetworkProfileFrontEndIPConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxFrontendIPConfiguration Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.NetworkProfileFrontEndIPConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NetworkProfileFrontEndIPConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NetworkProfileFrontEndIPConfiguration = value; }

        /// <summary>Internal Acessors for NetworkProfileNetworkInterfaceConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkInterfaceConfiguration Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.NetworkProfileNetworkInterfaceConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NetworkProfileNetworkInterfaceConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NetworkProfileNetworkInterfaceConfiguration = value; }

        /// <summary>Internal Acessors for NginxAppProtect</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesNginxAppProtect Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.NginxAppProtect { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NginxAppProtect; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NginxAppProtect = value; }

        /// <summary>Internal Acessors for NginxAppProtectWebApplicationFirewallSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallSettings Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.NginxAppProtectWebApplicationFirewallSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NginxAppProtectWebApplicationFirewallSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NginxAppProtectWebApplicationFirewallSetting = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateProperties Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentUpdateProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ScalingProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingProperties Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.ScalingProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).ScalingProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).ScalingProperty = value; }

        /// <summary>Internal Acessors for ScalingPropertyAutoScaleSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesAutoScaleSettings Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.ScalingPropertyAutoScaleSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).ScalingPropertyAutoScaleSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).ScalingPropertyAutoScaleSetting = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IResourceSku Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.ResourceSku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for UserProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUserProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersInternal.UserProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).UserProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).UserProfile = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string NetworkInterfaceConfigurationSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NetworkInterfaceConfigurationSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).NetworkInterfaceConfigurationSubnetId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateProperties _property;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentUpdateProperties()); set => this._property = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public int? ScalingPropertyCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).ScalingPropertyCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).ScalingPropertyCapacity = value ?? default(int); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IResourceSku _sku;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IResourceSku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.ResourceSku()); set => this._sku = value; }

        /// <summary>Name of the SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IResourceSkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IResourceSkuInternal)Sku).Name = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string StorageAccountContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).StorageAccountContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).StorageAccountContainerName = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string StorageAccountName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).StorageAccountName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).StorageAccountName = value ?? null; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersTags _tag;

        /// <summary>Dictionary of <string></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.NginxDeploymentUpdateParametersTags()); set => this._tag = value; }

        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string UserProfilePreferredEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).UserProfilePreferredEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).UserProfilePreferredEmail = value ?? null; }

        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).WebApplicationFirewallSettingActivationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesInternal)Property).WebApplicationFirewallSettingActivationState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState)""); }

        /// <summary>Creates an new <see cref="NginxDeploymentUpdateParameters" /> instance.</summary>
        public NginxDeploymentUpdateParameters()
        {

        }
    }
    public partial interface INginxDeploymentUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"profiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile[] AutoScaleSettingProfile { get; set; }
        /// <summary>Channel used for autoupgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Channel used for autoupgrade.",
        SerializedName = @"upgradeChannel",
        PossibleTypes = new [] { typeof(string) })]
        string AutoUpgradeProfileUpgradeChannel { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"enableDiagnosticsSupport",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableDiagnosticsSupport { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"privateIPAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"publicIPAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType? IdentityType { get; set; }
        /// <summary>Dictionary of <UserIdentityProperties></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of <UserIdentityProperties>",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceConfigurationSubnetId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? ScalingPropertyCapacity { get; set; }
        /// <summary>Name of the SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the SKU.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountContainerName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountName { get; set; }
        /// <summary>Dictionary of <string></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of <string>",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersTags Tag { get; set; }
        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string or a valid email address.",
        SerializedName = @"preferredEmail",
        PossibleTypes = new [] { typeof(string) })]
        string UserProfilePreferredEmail { get; set; }
        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.",
        SerializedName = @"activationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get; set; }

    }
    internal partial interface INginxDeploymentUpdateParametersInternal

    {
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IScaleProfile[] AutoScaleSettingProfile { get; set; }
        /// <summary>Autoupgrade settings of a deployment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IAutoUpgradeProfile AutoUpgradeProfile { get; set; }
        /// <summary>Channel used for autoupgrade.</summary>
        string AutoUpgradeProfileUpgradeChannel { get; set; }

        bool? EnableDiagnosticsSupport { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityProperties Identity { get; set; }

        string IdentityPrincipalId { get; set; }

        string IdentityTenantId { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType? IdentityType { get; set; }
        /// <summary>Dictionary of <UserIdentityProperties></summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }

        string Location { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxLogging Logging { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxStorageAccount LoggingStorageAccount { get; set; }

        string NetworkInterfaceConfigurationSubnetId { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkProfile NetworkProfile { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxFrontendIPConfiguration NetworkProfileFrontEndIPConfiguration { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxNetworkInterfaceConfiguration NetworkProfileNetworkInterfaceConfiguration { get; set; }
        /// <summary>Update settings for NGINX App Protect (NAP)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdatePropertiesNginxAppProtect NginxAppProtect { get; set; }
        /// <summary>Settings for the NGINX App Protect Web Application Firewall (WAF)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IWebApplicationFirewallSettings NginxAppProtectWebApplicationFirewallSetting { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateProperties Property { get; set; }
        /// <summary>Information on how the deployment will be scaled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingProperties ScalingProperty { get; set; }
        /// <summary>
        /// The settings for enabling automatic scaling of the deployment. If this field is specified, 'scale.capacity' must be empty.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentScalingPropertiesAutoScaleSettings ScalingPropertyAutoScaleSetting { get; set; }

        int? ScalingPropertyCapacity { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.IResourceSku Sku { get; set; }
        /// <summary>Name of the SKU.</summary>
        string SkuName { get; set; }

        string StorageAccountContainerName { get; set; }

        string StorageAccountName { get; set; }
        /// <summary>Dictionary of <string></summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUpdateParametersTags Tag { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20241101Preview.INginxDeploymentUserProfile UserProfile { get; set; }
        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        string UserProfilePreferredEmail { get; set; }
        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get; set; }

    }
}