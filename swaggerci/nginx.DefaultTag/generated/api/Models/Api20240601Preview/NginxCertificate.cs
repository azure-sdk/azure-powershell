// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Extensions;

    public partial class NginxCertificate :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificate,
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateInternal
    {

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string CertificateErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).CertificateErrorCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).CertificateErrorCode = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string CertificateErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).CertificateErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).CertificateErrorMessage = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string CertificateVirtualPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).CertificateVirtualPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).CertificateVirtualPath = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? KeyVaultSecretCreated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).KeyVaultSecretCreated; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string KeyVaultSecretId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).KeyVaultSecretId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).KeyVaultSecretId = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string KeyVaultSecretVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).KeyVaultSecretVersion; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string KeyVirtualPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).KeyVirtualPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).KeyVirtualPath = value ?? null; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for CertificateError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateErrorResponseBody Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateInternal.CertificateError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).CertificateError; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).CertificateError = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for KeyVaultSecretCreated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateInternal.KeyVaultSecretCreated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).KeyVaultSecretCreated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).KeyVaultSecretCreated = value; }

        /// <summary>Internal Acessors for KeyVaultSecretVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateInternal.KeyVaultSecretVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).KeyVaultSecretVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).KeyVaultSecretVersion = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateProperties Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.NginxCertificateProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Sha1Thumbprint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateInternal.Sha1Thumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).Sha1Thumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).Sha1Thumbprint = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateProperties _property;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.NginxCertificateProperties()); set => this._property = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).ProvisioningState; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string Sha1Thumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificatePropertiesInternal)Property).Sha1Thumbprint; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemData _systemData;

        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType)""); }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="NginxCertificate" /> instance.</summary>
        public NginxCertificate()
        {

        }
    }
    public partial interface INginxCertificate :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateErrorCode { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateErrorMessage { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"certificateVirtualPath",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateVirtualPath { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"keyVaultSecretCreated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? KeyVaultSecretCreated { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"keyVaultSecretId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultSecretId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"keyVaultSecretVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultSecretVersion { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"keyVirtualPath",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVirtualPath { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"sha1Thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string Sha1Thumbprint { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    internal partial interface INginxCertificateInternal

    {
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateErrorResponseBody CertificateError { get; set; }

        string CertificateErrorCode { get; set; }

        string CertificateErrorMessage { get; set; }

        string CertificateVirtualPath { get; set; }

        string Id { get; set; }

        global::System.DateTime? KeyVaultSecretCreated { get; set; }

        string KeyVaultSecretId { get; set; }

        string KeyVaultSecretVersion { get; set; }

        string KeyVirtualPath { get; set; }

        string Location { get; set; }

        string Name { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxCertificateProperties Property { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get; set; }

        string Sha1Thumbprint { get; set; }
        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

        string Type { get; set; }

    }
}