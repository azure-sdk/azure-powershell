// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Extensions;

    public partial class NginxDeployment :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeployment,
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal
    {

        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? AttackSignaturePackageRevisionDatetime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).AttackSignaturePackageRevisionDatetime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).AttackSignaturePackageRevisionDatetime = value ?? default(global::System.DateTime); }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string AttackSignaturePackageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).AttackSignaturePackageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).AttackSignaturePackageVersion = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IScaleProfile[] AutoScaleSettingProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).AutoScaleSettingProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).AutoScaleSettingProfile = value ?? null /* arrayOf */; }

        /// <summary>Channel used for autoupgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string AutoUpgradeProfileUpgradeChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).AutoUpgradeProfileUpgradeChannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).AutoUpgradeProfileUpgradeChannel = value ?? null; }

        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? BotSignaturePackageRevisionDatetime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).BotSignaturePackageRevisionDatetime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).BotSignaturePackageRevisionDatetime = value ?? default(global::System.DateTime); }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string BotSignaturePackageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).BotSignaturePackageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).BotSignaturePackageVersion = value ?? null; }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string ComponentVersionWafEngineVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ComponentVersionWafEngineVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ComponentVersionWafEngineVersion = value ?? null; }

        /// <summary>
        /// The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string ComponentVersionWafNginxVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ComponentVersionWafNginxVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ComponentVersionWafNginxVersion = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public bool? EnableDiagnosticsSupport { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).EnableDiagnosticsSupport; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).EnableDiagnosticsSupport = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).FrontEndIPConfigurationPrivateIpaddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).FrontEndIPConfigurationPrivateIpaddress = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).FrontEndIPConfigurationPublicIpaddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).FrontEndIPConfigurationPublicIpaddress = value ?? null /* arrayOf */; }

        /// <summary>The IP address of the deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string IPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).IPAddress; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityProperties _identity;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityProperties Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IdentityProperties()); set => this._identity = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesInternal)Identity).PrincipalId; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesInternal)Identity).TenantId; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType)""); }

        /// <summary>Dictionary of <UserIdentityProperties></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>The managed resource group to deploy VNet injection related network resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string ManagedResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ManagedResourceGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ManagedResourceGroup = value ?? null; }

        /// <summary>Internal Acessors for AutoUpgradeProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IAutoUpgradeProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.AutoUpgradeProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).AutoUpgradeProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).AutoUpgradeProfile = value; }

        /// <summary>Internal Acessors for IPAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.IPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).IPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).IPAddress = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityProperties Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IdentityProperties()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for Logging</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxLogging Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.Logging { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).Logging; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).Logging = value; }

        /// <summary>Internal Acessors for LoggingStorageAccount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxStorageAccount Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.LoggingStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).LoggingStorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).LoggingStorageAccount = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxNetworkProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.NetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfile = value; }

        /// <summary>Internal Acessors for NetworkProfileFrontEndIPConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxFrontendIPConfiguration Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.NetworkProfileFrontEndIPConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfileFrontEndIPConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfileFrontEndIPConfiguration = value; }

        /// <summary>Internal Acessors for NetworkProfileNetworkInterfaceConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxNetworkInterfaceConfiguration Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.NetworkProfileNetworkInterfaceConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfileNetworkInterfaceConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NetworkProfileNetworkInterfaceConfiguration = value; }

        /// <summary>Internal Acessors for NginxAppProtect</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesNginxAppProtect Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.NginxAppProtect { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtect; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtect = value; }

        /// <summary>Internal Acessors for NginxAppProtectWebApplicationFirewallSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallSettings Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.NginxAppProtectWebApplicationFirewallSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtectWebApplicationFirewallSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtectWebApplicationFirewallSetting = value; }

        /// <summary>Internal Acessors for NginxAppProtectWebApplicationFirewallStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallStatus Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.NginxAppProtectWebApplicationFirewallStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtectWebApplicationFirewallStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NginxAppProtectWebApplicationFirewallStatus = value; }

        /// <summary>Internal Acessors for NginxVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.NginxVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NginxVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NginxVersion = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentProperties Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.NginxDeploymentProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ScalingProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentScalingProperties Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.ScalingProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ScalingProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ScalingProperty = value; }

        /// <summary>Internal Acessors for ScalingPropertyAutoScaleSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentScalingPropertiesAutoScaleSettings Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.ScalingPropertyAutoScaleSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ScalingPropertyAutoScaleSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ScalingPropertyAutoScaleSetting = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IResourceSku Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.ResourceSku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for UserProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentUserProfile Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.UserProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).UserProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).UserProfile = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusAttackSignaturesPackage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallPackage Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.WebApplicationFirewallStatusAttackSignaturesPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusAttackSignaturesPackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusAttackSignaturesPackage = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusBotSignaturesPackage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallPackage Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.WebApplicationFirewallStatusBotSignaturesPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusBotSignaturesPackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusBotSignaturesPackage = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusComponentVersion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallComponentVersions Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.WebApplicationFirewallStatusComponentVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusComponentVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusComponentVersion = value; }

        /// <summary>Internal Acessors for WebApplicationFirewallStatusThreatCampaignsPackage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallPackage Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentInternal.WebApplicationFirewallStatusThreatCampaignsPackage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusThreatCampaignsPackage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallStatusThreatCampaignsPackage = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string NetworkInterfaceConfigurationSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NetworkInterfaceConfigurationSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NetworkInterfaceConfigurationSubnetId = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string NginxVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).NginxVersion; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentProperties _property;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.NginxDeploymentProperties()); set => this._property = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ProvisioningState; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public int? ScalingPropertyCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ScalingPropertyCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ScalingPropertyCapacity = value ?? default(int); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IResourceSku _sku;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IResourceSku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.ResourceSku()); set => this._sku = value; }

        /// <summary>Name of the SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IResourceSkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IResourceSkuInternal)Sku).Name = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string StorageAccountContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).StorageAccountContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).StorageAccountContainerName = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string StorageAccountName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).StorageAccountName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).StorageAccountName = value ?? null; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemData _systemData;

        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentTags _tag;

        /// <summary>Dictionary of <string></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.NginxDeploymentTags()); set => this._tag = value; }

        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public global::System.DateTime? ThreatCampaignPackageRevisionDatetime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ThreatCampaignPackageRevisionDatetime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ThreatCampaignPackageRevisionDatetime = value ?? default(global::System.DateTime); }

        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string ThreatCampaignPackageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ThreatCampaignPackageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).ThreatCampaignPackageVersion = value ?? null; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public string UserProfilePreferredEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).UserProfilePreferredEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).UserProfilePreferredEmail = value ?? null; }

        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallSettingActivationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesInternal)Property).WebApplicationFirewallSettingActivationState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState)""); }

        /// <summary>Creates an new <see cref="NginxDeployment" /> instance.</summary>
        public NginxDeployment()
        {

        }
    }
    public partial interface INginxDeployment :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IJsonSerializable
    {
        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time of the package revision.",
        SerializedName = @"revisionDatetime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AttackSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) package.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string AttackSignaturePackageVersion { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"profiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IScaleProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IScaleProfile[] AutoScaleSettingProfile { get; set; }
        /// <summary>Channel used for autoupgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Channel used for autoupgrade.",
        SerializedName = @"upgradeChannel",
        PossibleTypes = new [] { typeof(string) })]
        string AutoUpgradeProfileUpgradeChannel { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time of the package revision.",
        SerializedName = @"revisionDatetime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BotSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) package.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string BotSignaturePackageVersion { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) engine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) engine.",
        SerializedName = @"wafEngineVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentVersionWafEngineVersion { get; set; }
        /// <summary>
        /// The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.",
        SerializedName = @"wafNginxVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentVersionWafNginxVersion { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"enableDiagnosticsSupport",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableDiagnosticsSupport { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"privateIPAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxPrivateIPAddress) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"publicIPAddresses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxPublicIPAddress) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get; set; }
        /// <summary>The IP address of the deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IP address of the deployment.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string IPAddress { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType? IdentityType { get; set; }
        /// <summary>Dictionary of <UserIdentityProperties></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of <UserIdentityProperties>",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The managed resource group to deploy VNet injection related network resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The managed resource group to deploy VNet injection related network resources.",
        SerializedName = @"managedResourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroup { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceConfigurationSubnetId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"nginxVersion",
        PossibleTypes = new [] { typeof(string) })]
        string NginxVersion { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? ScalingPropertyCapacity { get; set; }
        /// <summary>Name of the SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the SKU.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountContainerName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountName { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Dictionary of <string></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of <string>",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentTags Tag { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date and time of the package revision.",
        SerializedName = @"revisionDatetime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ThreatCampaignPackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the NGINX App Protect Web Application Firewall (WAF) package.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ThreatCampaignPackageVersion { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string or a valid email address.",
        SerializedName = @"preferredEmail",
        PossibleTypes = new [] { typeof(string) })]
        string UserProfilePreferredEmail { get; set; }
        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.",
        SerializedName = @"activationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get; set; }

    }
    internal partial interface INginxDeploymentInternal

    {
        /// <summary>The date and time of the package revision.</summary>
        global::System.DateTime? AttackSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        string AttackSignaturePackageVersion { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IScaleProfile[] AutoScaleSettingProfile { get; set; }
        /// <summary>Autoupgrade settings of a deployment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IAutoUpgradeProfile AutoUpgradeProfile { get; set; }
        /// <summary>Channel used for autoupgrade.</summary>
        string AutoUpgradeProfileUpgradeChannel { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        global::System.DateTime? BotSignaturePackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        string BotSignaturePackageVersion { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) engine.</summary>
        string ComponentVersionWafEngineVersion { get; set; }
        /// <summary>
        /// The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX.
        /// </summary>
        string ComponentVersionWafNginxVersion { get; set; }

        bool? EnableDiagnosticsSupport { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxPrivateIPAddress[] FrontEndIPConfigurationPrivateIpaddress { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxPublicIPAddress[] FrontEndIPConfigurationPublicIpaddress { get; set; }
        /// <summary>The IP address of the deployment.</summary>
        string IPAddress { get; set; }

        string Id { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityProperties Identity { get; set; }

        string IdentityPrincipalId { get; set; }

        string IdentityTenantId { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType? IdentityType { get; set; }
        /// <summary>Dictionary of <UserIdentityProperties></summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }

        string Location { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxLogging Logging { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxStorageAccount LoggingStorageAccount { get; set; }
        /// <summary>The managed resource group to deploy VNet injection related network resources.</summary>
        string ManagedResourceGroup { get; set; }

        string Name { get; set; }

        string NetworkInterfaceConfigurationSubnetId { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxNetworkProfile NetworkProfile { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxFrontendIPConfiguration NetworkProfileFrontEndIPConfiguration { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxNetworkInterfaceConfiguration NetworkProfileNetworkInterfaceConfiguration { get; set; }
        /// <summary>Settings for NGINX App Protect (NAP)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentPropertiesNginxAppProtect NginxAppProtect { get; set; }
        /// <summary>Settings for the NGINX App Protect Web Application Firewall (WAF)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallSettings NginxAppProtectWebApplicationFirewallSetting { get; set; }
        /// <summary>The status of the NGINX App Protect Web Application Firewall</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallStatus NginxAppProtectWebApplicationFirewallStatus { get; set; }

        string NginxVersion { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentProperties Property { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Information on how the deployment will be scaled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentScalingProperties ScalingProperty { get; set; }
        /// <summary>
        /// The settings for enabling automatic scaling of the deployment. If this field is specified, 'scale.capacity' must be empty.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentScalingPropertiesAutoScaleSettings ScalingPropertyAutoScaleSetting { get; set; }

        int? ScalingPropertyCapacity { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IResourceSku Sku { get; set; }
        /// <summary>Name of the SKU.</summary>
        string SkuName { get; set; }

        string StorageAccountContainerName { get; set; }

        string StorageAccountName { get; set; }
        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Dictionary of <string></summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentTags Tag { get; set; }
        /// <summary>The date and time of the package revision.</summary>
        global::System.DateTime? ThreatCampaignPackageRevisionDatetime { get; set; }
        /// <summary>The version of the NGINX App Protect Web Application Firewall (WAF) package.</summary>
        string ThreatCampaignPackageVersion { get; set; }

        string Type { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.INginxDeploymentUserProfile UserProfile { get; set; }
        /// <summary>
        /// The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string
        /// or a valid email address.
        /// </summary>
        string UserProfilePreferredEmail { get; set; }
        /// <summary>
        /// The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState? WebApplicationFirewallSettingActivationState { get; set; }
        /// <summary>
        /// Package containing attack signatures for the NGINX App Protect Web Application Firewall (WAF).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallPackage WebApplicationFirewallStatusAttackSignaturesPackage { get; set; }
        /// <summary>
        /// Package containing bot signatures for the NGINX App Protect Web Application Firewall (WAF).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallPackage WebApplicationFirewallStatusBotSignaturesPackage { get; set; }
        /// <summary>Versions of the NGINX App Protect Web Application Firewall (WAF) components.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallComponentVersions WebApplicationFirewallStatusComponentVersion { get; set; }
        /// <summary>
        /// Package containing threat campaigns for the NGINX App Protect Web Application Firewall (WAF).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240601Preview.IWebApplicationFirewallPackage WebApplicationFirewallStatusThreatCampaignsPackage { get; set; }

    }
}