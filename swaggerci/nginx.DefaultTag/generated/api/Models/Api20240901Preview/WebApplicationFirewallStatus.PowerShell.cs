// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.PowerShell;

    /// <summary>The status of the NGINX App Protect Web Application Firewall</summary>
    [System.ComponentModel.TypeConverter(typeof(WebApplicationFirewallStatusTypeConverter))]
    public partial class WebApplicationFirewallStatus
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatus"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatus DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new WebApplicationFirewallStatus(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatus"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatus DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new WebApplicationFirewallStatus(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="WebApplicationFirewallStatus" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="WebApplicationFirewallStatus" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatus FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal WebApplicationFirewallStatus(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AttackSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("AttackSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("BotSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("BotSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("ThreatCampaignsPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignsPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("ThreatCampaignsPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignsPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComponentVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersion = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallComponentVersions) content.GetValueForProperty("ComponentVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersion, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallComponentVersionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttackSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturePackageVersion = (string) content.GetValueForProperty("AttackSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AttackSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("AttackSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("BotSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturePackageVersion = (string) content.GetValueForProperty("BotSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("BotSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("BotSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ThreatCampaignPackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignPackageVersion = (string) content.GetValueForProperty("ThreatCampaignPackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignPackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ThreatCampaignPackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignPackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("ThreatCampaignPackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignPackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ComponentVersionWafEngineVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersionWafEngineVersion = (string) content.GetValueForProperty("ComponentVersionWafEngineVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersionWafEngineVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ComponentVersionWafNginxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersionWafNginxVersion = (string) content.GetValueForProperty("ComponentVersionWafNginxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersionWafNginxVersion, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal WebApplicationFirewallStatus(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AttackSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("AttackSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("BotSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("BotSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("ThreatCampaignsPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignsPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("ThreatCampaignsPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignsPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComponentVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersion = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallComponentVersions) content.GetValueForProperty("ComponentVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersion, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.WebApplicationFirewallComponentVersionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttackSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturePackageVersion = (string) content.GetValueForProperty("AttackSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AttackSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("AttackSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).AttackSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("BotSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturePackageVersion = (string) content.GetValueForProperty("BotSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("BotSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("BotSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).BotSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ThreatCampaignPackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignPackageVersion = (string) content.GetValueForProperty("ThreatCampaignPackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignPackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ThreatCampaignPackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignPackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("ThreatCampaignPackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ThreatCampaignPackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ComponentVersionWafEngineVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersionWafEngineVersion = (string) content.GetValueForProperty("ComponentVersionWafEngineVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersionWafEngineVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ComponentVersionWafNginxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersionWafNginxVersion = (string) content.GetValueForProperty("ComponentVersionWafNginxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20240901Preview.IWebApplicationFirewallStatusInternal)this).ComponentVersionWafNginxVersion, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }
    }
    /// The status of the NGINX App Protect Web Application Firewall
    [System.ComponentModel.TypeConverter(typeof(WebApplicationFirewallStatusTypeConverter))]
    public partial interface IWebApplicationFirewallStatus

    {

    }
}