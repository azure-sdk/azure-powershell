// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.PowerShell;

    /// <summary>Nginx Deployment</summary>
    [System.ComponentModel.TypeConverter(typeof(NginxDeploymentTypeConverter))]
    public partial class NginxDeployment
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeployment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeployment" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeployment DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new NginxDeployment(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeployment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeployment" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeployment DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new NginxDeployment(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="NginxDeployment" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="NginxDeployment" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeployment FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeployment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal NginxDeployment(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IIdentityProperties) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IdentityPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IResourceSku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.ResourceSkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api60.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api60.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType?) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IIdentityPropertiesUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IdentityPropertiesUserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxNetworkProfile) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxNetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("Logging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Logging = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxLogging) content.GetValueForProperty("Logging",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Logging, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxLoggingTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScalingProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingProperty = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentScalingProperties) content.GetValueForProperty("ScalingProperty",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingProperty, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentScalingPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoUpgradeProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoUpgradeProfile = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IAutoUpgradeProfile) content.GetValueForProperty("AutoUpgradeProfile",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoUpgradeProfile, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.AutoUpgradeProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("UserProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).UserProfile = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentUserProfile) content.GetValueForProperty("UserProfile",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).UserProfile, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentUserProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("NginxAppProtect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtect = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentPropertiesNginxAppProtect) content.GetValueForProperty("NginxAppProtect",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtect, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentPropertiesNginxAppProtectTypeConverter.ConvertFrom);
            }
            if (content.Contains("NginxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxVersion = (string) content.GetValueForProperty("NginxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxVersion, global::System.Convert.ToString);
            }
            if (content.Contains("IPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IPAddress = (string) content.GetValueForProperty("IPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("EnableDiagnosticsSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).EnableDiagnosticsSupport = (bool?) content.GetValueForProperty("EnableDiagnosticsSupport",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).EnableDiagnosticsSupport, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DataplaneApiEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).DataplaneApiEndpoint = (string) content.GetValueForProperty("DataplaneApiEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).DataplaneApiEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("AutoUpgradeProfileUpgradeChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoUpgradeProfileUpgradeChannel = (string) content.GetValueForProperty("AutoUpgradeProfileUpgradeChannel",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoUpgradeProfileUpgradeChannel, global::System.Convert.ToString);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NetworkProfileFrontEndIPConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfileFrontEndIPConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxFrontendIPConfiguration) content.GetValueForProperty("NetworkProfileFrontEndIPConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfileFrontEndIPConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxFrontendIPConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfileNetworkInterfaceConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfileNetworkInterfaceConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxNetworkInterfaceConfiguration) content.GetValueForProperty("NetworkProfileNetworkInterfaceConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfileNetworkInterfaceConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxNetworkInterfaceConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("LoggingStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).LoggingStorageAccount = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxStorageAccount) content.GetValueForProperty("LoggingStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).LoggingStorageAccount, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxStorageAccountTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScalingPropertyAutoScaleSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingPropertyAutoScaleSetting = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentScalingPropertiesAutoScaleSettings) content.GetValueForProperty("ScalingPropertyAutoScaleSetting",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingPropertyAutoScaleSetting, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentScalingPropertiesAutoScaleSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScalingPropertyCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingPropertyCapacity = (int?) content.GetValueForProperty("ScalingPropertyCapacity",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingPropertyCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("UserProfilePreferredEmail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).UserProfilePreferredEmail = (string) content.GetValueForProperty("UserProfilePreferredEmail",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).UserProfilePreferredEmail, global::System.Convert.ToString);
            }
            if (content.Contains("NginxAppProtectWebApplicationFirewallSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtectWebApplicationFirewallSetting = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallSettings) content.GetValueForProperty("NginxAppProtectWebApplicationFirewallSetting",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtectWebApplicationFirewallSetting, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NginxAppProtectWebApplicationFirewallStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtectWebApplicationFirewallStatus = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallStatus) content.GetValueForProperty("NginxAppProtectWebApplicationFirewallStatus",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtectWebApplicationFirewallStatus, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallSettingActivationState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallSettingActivationState = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState?) content.GetValueForProperty("WebApplicationFirewallSettingActivationState",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallSettingActivationState, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState.CreateFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusWafRelease"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusWafRelease = (string) content.GetValueForProperty("WebApplicationFirewallStatusWafRelease",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusWafRelease, global::System.Convert.ToString);
            }
            if (content.Contains("FrontEndIPConfigurationPublicIpaddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).FrontEndIPConfigurationPublicIpaddress = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxPublicIPAddress[]) content.GetValueForProperty("FrontEndIPConfigurationPublicIpaddress",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).FrontEndIPConfigurationPublicIpaddress, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxPublicIPAddress>(__y, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxPublicIPAddressTypeConverter.ConvertFrom));
            }
            if (content.Contains("FrontEndIPConfigurationPrivateIpaddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).FrontEndIPConfigurationPrivateIpaddress = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxPrivateIPAddress[]) content.GetValueForProperty("FrontEndIPConfigurationPrivateIpaddress",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).FrontEndIPConfigurationPrivateIpaddress, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxPrivateIPAddress>(__y, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxPrivateIPAddressTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkInterfaceConfigurationSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkInterfaceConfigurationSubnetId = (string) content.GetValueForProperty("NetworkInterfaceConfigurationSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkInterfaceConfigurationSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccountName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).StorageAccountName = (string) content.GetValueForProperty("StorageAccountName",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).StorageAccountName, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccountContainerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).StorageAccountContainerName = (string) content.GetValueForProperty("StorageAccountContainerName",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).StorageAccountContainerName, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScaleSettingProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoScaleSettingProfile = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IScaleProfile[]) content.GetValueForProperty("AutoScaleSettingProfile",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoScaleSettingProfile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IScaleProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.ScaleProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("WebApplicationFirewallStatusAttackSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusAttackSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusAttackSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusAttackSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusBotSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusBotSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusBotSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusBotSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusThreatCampaignsPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusThreatCampaignsPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusThreatCampaignsPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusThreatCampaignsPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusComponentVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusComponentVersion = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallComponentVersions) content.GetValueForProperty("WebApplicationFirewallStatusComponentVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusComponentVersion, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallComponentVersionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttackSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AttackSignaturePackageVersion = (string) content.GetValueForProperty("AttackSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AttackSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AttackSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AttackSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("AttackSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AttackSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("BotSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).BotSignaturePackageVersion = (string) content.GetValueForProperty("BotSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).BotSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("BotSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).BotSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("BotSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).BotSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ThreatCampaignPackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ThreatCampaignPackageVersion = (string) content.GetValueForProperty("ThreatCampaignPackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ThreatCampaignPackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ThreatCampaignPackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ThreatCampaignPackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("ThreatCampaignPackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ThreatCampaignPackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ComponentVersionWafEngineVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ComponentVersionWafEngineVersion = (string) content.GetValueForProperty("ComponentVersionWafEngineVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ComponentVersionWafEngineVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ComponentVersionWafNginxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ComponentVersionWafNginxVersion = (string) content.GetValueForProperty("ComponentVersionWafNginxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ComponentVersionWafNginxVersion, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeployment"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal NginxDeployment(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IIdentityProperties) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IdentityPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IResourceSku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.ResourceSkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api60.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api60.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType?) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.IdentityType.CreateFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IIdentityPropertiesUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IdentityPropertiesUserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxNetworkProfile) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxNetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("Logging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Logging = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxLogging) content.GetValueForProperty("Logging",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).Logging, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxLoggingTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScalingProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingProperty = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentScalingProperties) content.GetValueForProperty("ScalingProperty",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingProperty, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentScalingPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoUpgradeProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoUpgradeProfile = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IAutoUpgradeProfile) content.GetValueForProperty("AutoUpgradeProfile",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoUpgradeProfile, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.AutoUpgradeProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("UserProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).UserProfile = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentUserProfile) content.GetValueForProperty("UserProfile",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).UserProfile, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentUserProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("NginxAppProtect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtect = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentPropertiesNginxAppProtect) content.GetValueForProperty("NginxAppProtect",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtect, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentPropertiesNginxAppProtectTypeConverter.ConvertFrom);
            }
            if (content.Contains("NginxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxVersion = (string) content.GetValueForProperty("NginxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxVersion, global::System.Convert.ToString);
            }
            if (content.Contains("IPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IPAddress = (string) content.GetValueForProperty("IPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).IPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("EnableDiagnosticsSupport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).EnableDiagnosticsSupport = (bool?) content.GetValueForProperty("EnableDiagnosticsSupport",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).EnableDiagnosticsSupport, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DataplaneApiEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).DataplaneApiEndpoint = (string) content.GetValueForProperty("DataplaneApiEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).DataplaneApiEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("AutoUpgradeProfileUpgradeChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoUpgradeProfileUpgradeChannel = (string) content.GetValueForProperty("AutoUpgradeProfileUpgradeChannel",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoUpgradeProfileUpgradeChannel, global::System.Convert.ToString);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NetworkProfileFrontEndIPConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfileFrontEndIPConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxFrontendIPConfiguration) content.GetValueForProperty("NetworkProfileFrontEndIPConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfileFrontEndIPConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxFrontendIPConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfileNetworkInterfaceConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfileNetworkInterfaceConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxNetworkInterfaceConfiguration) content.GetValueForProperty("NetworkProfileNetworkInterfaceConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkProfileNetworkInterfaceConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxNetworkInterfaceConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("LoggingStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).LoggingStorageAccount = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxStorageAccount) content.GetValueForProperty("LoggingStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).LoggingStorageAccount, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxStorageAccountTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScalingPropertyAutoScaleSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingPropertyAutoScaleSetting = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentScalingPropertiesAutoScaleSettings) content.GetValueForProperty("ScalingPropertyAutoScaleSetting",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingPropertyAutoScaleSetting, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxDeploymentScalingPropertiesAutoScaleSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScalingPropertyCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingPropertyCapacity = (int?) content.GetValueForProperty("ScalingPropertyCapacity",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ScalingPropertyCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("UserProfilePreferredEmail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).UserProfilePreferredEmail = (string) content.GetValueForProperty("UserProfilePreferredEmail",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).UserProfilePreferredEmail, global::System.Convert.ToString);
            }
            if (content.Contains("NginxAppProtectWebApplicationFirewallSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtectWebApplicationFirewallSetting = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallSettings) content.GetValueForProperty("NginxAppProtectWebApplicationFirewallSetting",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtectWebApplicationFirewallSetting, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NginxAppProtectWebApplicationFirewallStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtectWebApplicationFirewallStatus = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallStatus) content.GetValueForProperty("NginxAppProtectWebApplicationFirewallStatus",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NginxAppProtectWebApplicationFirewallStatus, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallSettingActivationState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallSettingActivationState = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState?) content.GetValueForProperty("WebApplicationFirewallSettingActivationState",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallSettingActivationState, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ActivationState.CreateFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusWafRelease"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusWafRelease = (string) content.GetValueForProperty("WebApplicationFirewallStatusWafRelease",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusWafRelease, global::System.Convert.ToString);
            }
            if (content.Contains("FrontEndIPConfigurationPublicIpaddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).FrontEndIPConfigurationPublicIpaddress = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxPublicIPAddress[]) content.GetValueForProperty("FrontEndIPConfigurationPublicIpaddress",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).FrontEndIPConfigurationPublicIpaddress, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxPublicIPAddress>(__y, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxPublicIPAddressTypeConverter.ConvertFrom));
            }
            if (content.Contains("FrontEndIPConfigurationPrivateIpaddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).FrontEndIPConfigurationPrivateIpaddress = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxPrivateIPAddress[]) content.GetValueForProperty("FrontEndIPConfigurationPrivateIpaddress",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).FrontEndIPConfigurationPrivateIpaddress, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxPrivateIPAddress>(__y, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.NginxPrivateIPAddressTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkInterfaceConfigurationSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkInterfaceConfigurationSubnetId = (string) content.GetValueForProperty("NetworkInterfaceConfigurationSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).NetworkInterfaceConfigurationSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccountName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).StorageAccountName = (string) content.GetValueForProperty("StorageAccountName",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).StorageAccountName, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccountContainerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).StorageAccountContainerName = (string) content.GetValueForProperty("StorageAccountContainerName",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).StorageAccountContainerName, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScaleSettingProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoScaleSettingProfile = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IScaleProfile[]) content.GetValueForProperty("AutoScaleSettingProfile",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AutoScaleSettingProfile, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IScaleProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.ScaleProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("WebApplicationFirewallStatusAttackSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusAttackSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusAttackSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusAttackSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusBotSignaturesPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusBotSignaturesPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusBotSignaturesPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusBotSignaturesPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusThreatCampaignsPackage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusThreatCampaignsPackage = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallPackage) content.GetValueForProperty("WebApplicationFirewallStatusThreatCampaignsPackage",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusThreatCampaignsPackage, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallPackageTypeConverter.ConvertFrom);
            }
            if (content.Contains("WebApplicationFirewallStatusComponentVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusComponentVersion = (Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.IWebApplicationFirewallComponentVersions) content.GetValueForProperty("WebApplicationFirewallStatusComponentVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).WebApplicationFirewallStatusComponentVersion, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.WebApplicationFirewallComponentVersionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AttackSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AttackSignaturePackageVersion = (string) content.GetValueForProperty("AttackSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AttackSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AttackSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AttackSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("AttackSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).AttackSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("BotSignaturePackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).BotSignaturePackageVersion = (string) content.GetValueForProperty("BotSignaturePackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).BotSignaturePackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("BotSignaturePackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).BotSignaturePackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("BotSignaturePackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).BotSignaturePackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ThreatCampaignPackageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ThreatCampaignPackageVersion = (string) content.GetValueForProperty("ThreatCampaignPackageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ThreatCampaignPackageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ThreatCampaignPackageRevisionDatetime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ThreatCampaignPackageRevisionDatetime = (global::System.DateTime) content.GetValueForProperty("ThreatCampaignPackageRevisionDatetime",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ThreatCampaignPackageRevisionDatetime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ComponentVersionWafEngineVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ComponentVersionWafEngineVersion = (string) content.GetValueForProperty("ComponentVersionWafEngineVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ComponentVersionWafEngineVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ComponentVersionWafNginxVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ComponentVersionWafNginxVersion = (string) content.GetValueForProperty("ComponentVersionWafNginxVersion",((Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20250301Preview.INginxDeploymentInternal)this).ComponentVersionWafNginxVersion, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Nginx Deployment
    [System.ComponentModel.TypeConverter(typeof(NginxDeploymentTypeConverter))]
    public partial interface INginxDeployment

    {

    }
}