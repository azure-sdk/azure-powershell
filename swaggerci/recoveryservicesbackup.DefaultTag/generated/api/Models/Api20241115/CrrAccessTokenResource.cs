// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Extensions;

    public partial class CrrAccessTokenResource :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenResource,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenResourceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.Resource();

        /// <summary>Access token used for authentication</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string AccessTokenString { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).AccessTokenString; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).AccessTokenString = value ?? null; }

        /// <summary>Backup Management Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string BackupManagementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).BackupManagementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).BackupManagementType = value ?? null; }

        /// <summary>Active region name of BMS Stamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string BmsActiveRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).BmsActiveRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).BmsActiveRegion = value ?? null; }

        /// <summary>Container Unique name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string ContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ContainerName = value ?? null; }

        /// <summary>Container Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string ContainerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ContainerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ContainerType = value ?? null; }

        /// <summary>CoordinatorServiceStampId to be used by BCM in restore call</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string CoordinatorServiceStampId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).CoordinatorServiceStampId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).CoordinatorServiceStampId = value ?? null; }

        /// <summary>CoordinatorServiceStampUri to be used by BCM in restore call</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string CoordinatorServiceStampUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).CoordinatorServiceStampUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).CoordinatorServiceStampUri = value ?? null; }

        /// <summary>Datasource Container Unique Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string DatasourceContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).DatasourceContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).DatasourceContainerName = value ?? null; }

        /// <summary>Datasource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string DatasourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).DatasourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).DatasourceId = value ?? null; }

        /// <summary>Datasource Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string DatasourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).DatasourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).DatasourceName = value ?? null; }

        /// <summary>Datasource Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string DatasourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).DatasourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).DatasourceType = value ?? null; }

        /// <summary>Optional ETag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inherited)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).ETag = value ?? null; }

        /// <summary>Resource Id represents the complete path to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Id; }

        /// <summary>Resource location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessToken Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenResourceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.CrrAccessToken()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Type = value; }

        /// <summary>Resource name associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Name; }

        /// <summary>Type of the specific object - used for deserializing</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string ObjectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ObjectType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ObjectType = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessToken _property;

        /// <summary>CrrAccessTokenResource properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessToken Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.CrrAccessToken()); set => this._property = value; }

        /// <summary>Protected item container id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public long? ProtectionContainerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ProtectionContainerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ProtectionContainerId = value ?? default(long); }

        /// <summary>ProtectionServiceStampId to be used by BCM in restore call</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string ProtectionServiceStampId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ProtectionServiceStampId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ProtectionServiceStampId = value ?? null; }

        /// <summary>ProtectionServiceStampUri to be used by BCM in restore call</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string ProtectionServiceStampUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ProtectionServiceStampUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ProtectionServiceStampUri = value ?? null; }

        /// <summary>Recovery Point Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string RecoveryPointId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RecoveryPointId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RecoveryPointId = value ?? null; }

        /// <summary>Recovery Point Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string RecoveryPointTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RecoveryPointTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RecoveryPointTime = value ?? null; }

        /// <summary>Resource Group name of the source vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string ResourceGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ResourceGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ResourceGroupName = value ?? null; }

        /// <summary>Resource Id of the source vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ResourceId = value ?? null; }

        /// <summary>Resource Name of the source vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string ResourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ResourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).ResourceName = value ?? null; }

        /// <summary>Recovery point information: Managed virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public bool? RpIsManagedVirtualMachine { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RpIsManagedVirtualMachine; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RpIsManagedVirtualMachine = value ?? default(bool); }

        /// <summary>Recovery point information: Original SA option</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public bool? RpOriginalSaOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RpOriginalSaOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RpOriginalSaOption = value ?? default(bool); }

        /// <summary>Recovery point Tier Information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenRpTierInformation RpTierInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RpTierInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RpTierInformation = value ?? null /* model class */; }

        /// <summary>Recovery point information: VM size description</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string RpVMSizeDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RpVMSizeDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).RpVMSizeDescription = value ?? null; }

        /// <summary>Subscription Id of the source vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).SubscriptionId = value ?? null; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>Extended Information about the token like FileSpec etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inlined)]
        public string TokenExtendedInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).TokenExtendedInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenInternal)Property).TokenExtendedInformation = value ?? null; }

        /// <summary>
        /// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Origin(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="CrrAccessTokenResource" /> instance.</summary>
        public CrrAccessTokenResource()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    public partial interface ICrrAccessTokenResource :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResource
    {
        /// <summary>Access token used for authentication</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Access token used for authentication",
        SerializedName = @"accessTokenString",
        PossibleTypes = new [] { typeof(string) })]
        string AccessTokenString { get; set; }
        /// <summary>Backup Management Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup Management Type",
        SerializedName = @"backupManagementType",
        PossibleTypes = new [] { typeof(string) })]
        string BackupManagementType { get; set; }
        /// <summary>Active region name of BMS Stamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Active region name of BMS Stamp",
        SerializedName = @"bMSActiveRegion",
        PossibleTypes = new [] { typeof(string) })]
        string BmsActiveRegion { get; set; }
        /// <summary>Container Unique name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Container Unique name",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerName { get; set; }
        /// <summary>Container Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Container Type",
        SerializedName = @"containerType",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerType { get; set; }
        /// <summary>CoordinatorServiceStampId to be used by BCM in restore call</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CoordinatorServiceStampId to be used by BCM in restore call",
        SerializedName = @"coordinatorServiceStampId",
        PossibleTypes = new [] { typeof(string) })]
        string CoordinatorServiceStampId { get; set; }
        /// <summary>CoordinatorServiceStampUri to be used by BCM in restore call</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CoordinatorServiceStampUri to be used by BCM in restore call",
        SerializedName = @"coordinatorServiceStampUri",
        PossibleTypes = new [] { typeof(string) })]
        string CoordinatorServiceStampUri { get; set; }
        /// <summary>Datasource Container Unique Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Datasource Container Unique Name",
        SerializedName = @"datasourceContainerName",
        PossibleTypes = new [] { typeof(string) })]
        string DatasourceContainerName { get; set; }
        /// <summary>Datasource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Datasource Id",
        SerializedName = @"datasourceId",
        PossibleTypes = new [] { typeof(string) })]
        string DatasourceId { get; set; }
        /// <summary>Datasource Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Datasource Friendly Name",
        SerializedName = @"datasourceName",
        PossibleTypes = new [] { typeof(string) })]
        string DatasourceName { get; set; }
        /// <summary>Datasource Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Datasource Type",
        SerializedName = @"datasourceType",
        PossibleTypes = new [] { typeof(string) })]
        string DatasourceType { get; set; }
        /// <summary>Type of the specific object - used for deserializing</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the specific object - used for deserializing",
        SerializedName = @"objectType",
        PossibleTypes = new [] { typeof(string) })]
        string ObjectType { get; set; }
        /// <summary>Protected item container id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Protected item container id",
        SerializedName = @"protectionContainerId",
        PossibleTypes = new [] { typeof(long) })]
        long? ProtectionContainerId { get; set; }
        /// <summary>ProtectionServiceStampId to be used by BCM in restore call</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ProtectionServiceStampId to be used by BCM in restore call",
        SerializedName = @"protectionServiceStampId",
        PossibleTypes = new [] { typeof(string) })]
        string ProtectionServiceStampId { get; set; }
        /// <summary>ProtectionServiceStampUri to be used by BCM in restore call</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ProtectionServiceStampUri to be used by BCM in restore call",
        SerializedName = @"protectionServiceStampUri",
        PossibleTypes = new [] { typeof(string) })]
        string ProtectionServiceStampUri { get; set; }
        /// <summary>Recovery Point Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recovery Point Id",
        SerializedName = @"recoveryPointId",
        PossibleTypes = new [] { typeof(string) })]
        string RecoveryPointId { get; set; }
        /// <summary>Recovery Point Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recovery Point Time",
        SerializedName = @"recoveryPointTime",
        PossibleTypes = new [] { typeof(string) })]
        string RecoveryPointTime { get; set; }
        /// <summary>Resource Group name of the source vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Group name of the source vault",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupName { get; set; }
        /// <summary>Resource Id of the source vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id of the source vault",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>Resource Name of the source vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Name of the source vault",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceName { get; set; }
        /// <summary>Recovery point information: Managed virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recovery point information: Managed virtual machine",
        SerializedName = @"rpIsManagedVirtualMachine",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RpIsManagedVirtualMachine { get; set; }
        /// <summary>Recovery point information: Original SA option</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recovery point information: Original SA option",
        SerializedName = @"rpOriginalSAOption",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RpOriginalSaOption { get; set; }
        /// <summary>Recovery point Tier Information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recovery point Tier Information",
        SerializedName = @"rpTierInformation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenRpTierInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenRpTierInformation RpTierInformation { get; set; }
        /// <summary>Recovery point information: VM size description</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recovery point information: VM size description",
        SerializedName = @"rpVMSizeDescription",
        PossibleTypes = new [] { typeof(string) })]
        string RpVMSizeDescription { get; set; }
        /// <summary>Subscription Id of the source vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Id of the source vault",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>Extended Information about the token like FileSpec etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Extended Information about the token like FileSpec etc.",
        SerializedName = @"tokenExtendedInformation",
        PossibleTypes = new [] { typeof(string) })]
        string TokenExtendedInformation { get; set; }

    }
    internal partial interface ICrrAccessTokenResourceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.IResourceInternal
    {
        /// <summary>Access token used for authentication</summary>
        string AccessTokenString { get; set; }
        /// <summary>Backup Management Type</summary>
        string BackupManagementType { get; set; }
        /// <summary>Active region name of BMS Stamp</summary>
        string BmsActiveRegion { get; set; }
        /// <summary>Container Unique name</summary>
        string ContainerName { get; set; }
        /// <summary>Container Type</summary>
        string ContainerType { get; set; }
        /// <summary>CoordinatorServiceStampId to be used by BCM in restore call</summary>
        string CoordinatorServiceStampId { get; set; }
        /// <summary>CoordinatorServiceStampUri to be used by BCM in restore call</summary>
        string CoordinatorServiceStampUri { get; set; }
        /// <summary>Datasource Container Unique Name</summary>
        string DatasourceContainerName { get; set; }
        /// <summary>Datasource Id</summary>
        string DatasourceId { get; set; }
        /// <summary>Datasource Friendly Name</summary>
        string DatasourceName { get; set; }
        /// <summary>Datasource Type</summary>
        string DatasourceType { get; set; }
        /// <summary>Type of the specific object - used for deserializing</summary>
        string ObjectType { get; set; }
        /// <summary>CrrAccessTokenResource properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessToken Property { get; set; }
        /// <summary>Protected item container id</summary>
        long? ProtectionContainerId { get; set; }
        /// <summary>ProtectionServiceStampId to be used by BCM in restore call</summary>
        string ProtectionServiceStampId { get; set; }
        /// <summary>ProtectionServiceStampUri to be used by BCM in restore call</summary>
        string ProtectionServiceStampUri { get; set; }
        /// <summary>Recovery Point Id</summary>
        string RecoveryPointId { get; set; }
        /// <summary>Recovery Point Time</summary>
        string RecoveryPointTime { get; set; }
        /// <summary>Resource Group name of the source vault</summary>
        string ResourceGroupName { get; set; }
        /// <summary>Resource Id of the source vault</summary>
        string ResourceId { get; set; }
        /// <summary>Resource Name of the source vault</summary>
        string ResourceName { get; set; }
        /// <summary>Recovery point information: Managed virtual machine</summary>
        bool? RpIsManagedVirtualMachine { get; set; }
        /// <summary>Recovery point information: Original SA option</summary>
        bool? RpOriginalSaOption { get; set; }
        /// <summary>Recovery point Tier Information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RecoveryServicesBackup.Models.Api20241115.ICrrAccessTokenRpTierInformation RpTierInformation { get; set; }
        /// <summary>Recovery point information: VM size description</summary>
        string RpVMSizeDescription { get; set; }
        /// <summary>Subscription Id of the source vault</summary>
        string SubscriptionId { get; set; }
        /// <summary>Extended Information about the token like FileSpec etc.</summary>
        string TokenExtendedInformation { get; set; }

    }
}