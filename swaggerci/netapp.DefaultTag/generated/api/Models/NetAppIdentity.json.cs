// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    public partial class NetAppIdentity
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.INetAppIdentity.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.INetAppIdentity.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.INetAppIdentity FromJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json ? new NetAppIdentity(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject into a new instance of <see cref="NetAppIdentity" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal NetAppIdentity(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_subscriptionId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("subscriptionId"), out var __jsonSubscriptionId) ? (string)__jsonSubscriptionId : (string)SubscriptionId;}
            {_location = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("location"), out var __jsonLocation) ? (string)__jsonLocation : (string)Location;}
            {_quotaLimitName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("quotaLimitName"), out var __jsonQuotaLimitName) ? (string)__jsonQuotaLimitName : (string)QuotaLimitName;}
            {_resourceGroupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("resourceGroupName"), out var __jsonResourceGroupName) ? (string)__jsonResourceGroupName : (string)ResourceGroupName;}
            {_accountName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("accountName"), out var __jsonAccountName) ? (string)__jsonAccountName : (string)AccountName;}
            {_poolName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("poolName"), out var __jsonPoolName) ? (string)__jsonPoolName : (string)PoolName;}
            {_volumeName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("volumeName"), out var __jsonVolumeName) ? (string)__jsonVolumeName : (string)VolumeName;}
            {_snapshotName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("snapshotName"), out var __jsonSnapshotName) ? (string)__jsonSnapshotName : (string)SnapshotName;}
            {_snapshotPolicyName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("snapshotPolicyName"), out var __jsonSnapshotPolicyName) ? (string)__jsonSnapshotPolicyName : (string)SnapshotPolicyName;}
            {_backupVaultName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("backupVaultName"), out var __jsonBackupVaultName) ? (string)__jsonBackupVaultName : (string)BackupVaultName;}
            {_backupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("backupName"), out var __jsonBackupName) ? (string)__jsonBackupName : (string)BackupName;}
            {_backupPolicyName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("backupPolicyName"), out var __jsonBackupPolicyName) ? (string)__jsonBackupPolicyName : (string)BackupPolicyName;}
            {_volumeQuotaRuleName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("volumeQuotaRuleName"), out var __jsonVolumeQuotaRuleName) ? (string)__jsonVolumeQuotaRuleName : (string)VolumeQuotaRuleName;}
            {_volumeGroupName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("volumeGroupName"), out var __jsonVolumeGroupName) ? (string)__jsonVolumeGroupName : (string)VolumeGroupName;}
            {_subvolumeName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("subvolumeName"), out var __jsonSubvolumeName) ? (string)__jsonSubvolumeName : (string)SubvolumeName;}
            {_id = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("id"), out var __jsonId) ? (string)__jsonId : (string)Id;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="NetAppIdentity" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="NetAppIdentity" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._subscriptionId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._subscriptionId.ToString()) : null, "subscriptionId" ,container.Add );
            AddIf( null != (((object)this._location)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._location.ToString()) : null, "location" ,container.Add );
            AddIf( null != (((object)this._quotaLimitName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._quotaLimitName.ToString()) : null, "quotaLimitName" ,container.Add );
            AddIf( null != (((object)this._resourceGroupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._resourceGroupName.ToString()) : null, "resourceGroupName" ,container.Add );
            AddIf( null != (((object)this._accountName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._accountName.ToString()) : null, "accountName" ,container.Add );
            AddIf( null != (((object)this._poolName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._poolName.ToString()) : null, "poolName" ,container.Add );
            AddIf( null != (((object)this._volumeName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._volumeName.ToString()) : null, "volumeName" ,container.Add );
            AddIf( null != (((object)this._snapshotName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._snapshotName.ToString()) : null, "snapshotName" ,container.Add );
            AddIf( null != (((object)this._snapshotPolicyName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._snapshotPolicyName.ToString()) : null, "snapshotPolicyName" ,container.Add );
            AddIf( null != (((object)this._backupVaultName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._backupVaultName.ToString()) : null, "backupVaultName" ,container.Add );
            AddIf( null != (((object)this._backupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._backupName.ToString()) : null, "backupName" ,container.Add );
            AddIf( null != (((object)this._backupPolicyName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._backupPolicyName.ToString()) : null, "backupPolicyName" ,container.Add );
            AddIf( null != (((object)this._volumeQuotaRuleName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._volumeQuotaRuleName.ToString()) : null, "volumeQuotaRuleName" ,container.Add );
            AddIf( null != (((object)this._volumeGroupName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._volumeGroupName.ToString()) : null, "volumeGroupName" ,container.Add );
            AddIf( null != (((object)this._subvolumeName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._subvolumeName.ToString()) : null, "subvolumeName" ,container.Add );
            AddIf( null != (((object)this._id)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._id.ToString()) : null, "id" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}