// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Volume group properties</summary>
    public partial class VolumeGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupPropertiesInternal
    {

        /// <summary>Backing field for <see cref="GroupMetaData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaData _groupMetaData;

        /// <summary>Volume group details</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaData GroupMetaData { get => (this._groupMetaData = this._groupMetaData ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumeGroupMetaData()); set => this._groupMetaData = value; }

        /// <summary>Application specific identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string GroupMetaDataApplicationIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal)GroupMetaData).ApplicationIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal)GroupMetaData).ApplicationIdentifier = value ?? null; }

        /// <summary>Application Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ApplicationType? GroupMetaDataApplicationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal)GroupMetaData).ApplicationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal)GroupMetaData).ApplicationType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ApplicationType)""); }

        /// <summary>Application specific placement rules for the volume group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IPlacementKeyValuePairs[] GroupMetaDataGlobalPlacementRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal)GroupMetaData).GlobalPlacementRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal)GroupMetaData).GlobalPlacementRule = value ?? null /* arrayOf */; }

        /// <summary>Group Description</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string GroupMetaDataGroupDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal)GroupMetaData).GroupDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal)GroupMetaData).GroupDescription = value ?? null; }

        /// <summary>Number of volumes in volume group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? GroupMetaDataVolumesCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal)GroupMetaData).VolumesCount; }

        /// <summary>Internal Acessors for GroupMetaData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaData Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupPropertiesInternal.GroupMetaData { get => (this._groupMetaData = this._groupMetaData ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumeGroupMetaData()); set { {_groupMetaData = value;} } }

        /// <summary>Internal Acessors for GroupMetaDataVolumesCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupPropertiesInternal.GroupMetaDataVolumesCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal)GroupMetaData).VolumesCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal)GroupMetaData).VolumesCount = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Volume" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupVolumeProperties[] _volume;

        /// <summary>List of volumes from group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupVolumeProperties[] Volume { get => this._volume; set => this._volume = value; }

        /// <summary>Creates an new <see cref="VolumeGroupProperties" /> instance.</summary>
        public VolumeGroupProperties()
        {

        }
    }
    /// Volume group properties
    public partial interface IVolumeGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Application specific identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application specific identifier",
        SerializedName = @"applicationIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string GroupMetaDataApplicationIdentifier { get; set; }
        /// <summary>Application Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application Type",
        SerializedName = @"applicationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ApplicationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ApplicationType? GroupMetaDataApplicationType { get; set; }
        /// <summary>Application specific placement rules for the volume group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application specific placement rules for the volume group",
        SerializedName = @"globalPlacementRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IPlacementKeyValuePairs) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IPlacementKeyValuePairs[] GroupMetaDataGlobalPlacementRule { get; set; }
        /// <summary>Group Description</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Group Description",
        SerializedName = @"groupDescription",
        PossibleTypes = new [] { typeof(string) })]
        string GroupMetaDataGroupDescription { get; set; }
        /// <summary>Number of volumes in volume group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of volumes in volume group",
        SerializedName = @"volumesCount",
        PossibleTypes = new [] { typeof(long) })]
        long? GroupMetaDataVolumesCount { get;  }
        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure lifecycle management",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>List of volumes from group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of volumes from group",
        SerializedName = @"volumes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupVolumeProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupVolumeProperties[] Volume { get; set; }

    }
    /// Volume group properties
    internal partial interface IVolumeGroupPropertiesInternal

    {
        /// <summary>Volume group details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaData GroupMetaData { get; set; }
        /// <summary>Application specific identifier</summary>
        string GroupMetaDataApplicationIdentifier { get; set; }
        /// <summary>Application Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ApplicationType? GroupMetaDataApplicationType { get; set; }
        /// <summary>Application specific placement rules for the volume group</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IPlacementKeyValuePairs[] GroupMetaDataGlobalPlacementRule { get; set; }
        /// <summary>Group Description</summary>
        string GroupMetaDataGroupDescription { get; set; }
        /// <summary>Number of volumes in volume group</summary>
        long? GroupMetaDataVolumesCount { get; set; }
        /// <summary>Azure lifecycle management</summary>
        string ProvisioningState { get; set; }
        /// <summary>List of volumes from group</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupVolumeProperties[] Volume { get; set; }

    }
}