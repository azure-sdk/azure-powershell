// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Volume group properties</summary>
    public partial class VolumeGroupMetaData :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaData,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal
    {

        /// <summary>Backing field for <see cref="ApplicationIdentifier" /> property.</summary>
        private string _applicationIdentifier;

        /// <summary>Application specific identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string ApplicationIdentifier { get => this._applicationIdentifier; set => this._applicationIdentifier = value; }

        /// <summary>Backing field for <see cref="ApplicationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ApplicationType? _applicationType;

        /// <summary>Application Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ApplicationType? ApplicationType { get => this._applicationType; set => this._applicationType = value; }

        /// <summary>Backing field for <see cref="GlobalPlacementRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IPlacementKeyValuePairs[] _globalPlacementRule;

        /// <summary>Application specific placement rules for the volume group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IPlacementKeyValuePairs[] GlobalPlacementRule { get => this._globalPlacementRule; set => this._globalPlacementRule = value; }

        /// <summary>Backing field for <see cref="GroupDescription" /> property.</summary>
        private string _groupDescription;

        /// <summary>Group Description</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string GroupDescription { get => this._groupDescription; set => this._groupDescription = value; }

        /// <summary>Internal Acessors for VolumesCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeGroupMetaDataInternal.VolumesCount { get => this._volumesCount; set { {_volumesCount = value;} } }

        /// <summary>Backing field for <see cref="VolumesCount" /> property.</summary>
        private long? _volumesCount;

        /// <summary>Number of volumes in volume group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public long? VolumesCount { get => this._volumesCount; }

        /// <summary>Creates an new <see cref="VolumeGroupMetaData" /> instance.</summary>
        public VolumeGroupMetaData()
        {

        }
    }
    /// Volume group properties
    public partial interface IVolumeGroupMetaData :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Application specific identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application specific identifier",
        SerializedName = @"applicationIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationIdentifier { get; set; }
        /// <summary>Application Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application Type",
        SerializedName = @"applicationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ApplicationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ApplicationType? ApplicationType { get; set; }
        /// <summary>Application specific placement rules for the volume group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application specific placement rules for the volume group",
        SerializedName = @"globalPlacementRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IPlacementKeyValuePairs) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IPlacementKeyValuePairs[] GlobalPlacementRule { get; set; }
        /// <summary>Group Description</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Group Description",
        SerializedName = @"groupDescription",
        PossibleTypes = new [] { typeof(string) })]
        string GroupDescription { get; set; }
        /// <summary>Number of volumes in volume group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of volumes in volume group",
        SerializedName = @"volumesCount",
        PossibleTypes = new [] { typeof(long) })]
        long? VolumesCount { get;  }

    }
    /// Volume group properties
    internal partial interface IVolumeGroupMetaDataInternal

    {
        /// <summary>Application specific identifier</summary>
        string ApplicationIdentifier { get; set; }
        /// <summary>Application Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ApplicationType? ApplicationType { get; set; }
        /// <summary>Application specific placement rules for the volume group</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IPlacementKeyValuePairs[] GlobalPlacementRule { get; set; }
        /// <summary>Group Description</summary>
        string GroupDescription { get; set; }
        /// <summary>Number of volumes in volume group</summary>
        long? VolumesCount { get; set; }

    }
}