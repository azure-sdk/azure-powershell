// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Replication properties</summary>
    public partial class ReplicationObject :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObject,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal
    {

        /// <summary>Backing field for <see cref="EndpointType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.EndpointType? _endpointType;

        /// <summary>
        /// Indicates whether the local volume is the source or destination for the Volume Replication
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.EndpointType? EndpointType { get => this._endpointType; set => this._endpointType = value; }

        /// <summary>Internal Acessors for RemotePath</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePath Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal.RemotePath { get => (this._remotePath = this._remotePath ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.RemotePath()); set { {_remotePath = value;} } }

        /// <summary>Internal Acessors for ReplicationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal.ReplicationId { get => this._replicationId; set { {_replicationId = value;} } }

        /// <summary>Backing field for <see cref="RemotePath" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePath _remotePath;

        /// <summary>
        /// The full path to a volume that is to be migrated into ANF. Required for Migration volumes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePath RemotePath { get => (this._remotePath = this._remotePath ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.RemotePath()); set => this._remotePath = value; }

        /// <summary>The Path to a ONTAP Host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string RemotePathExternalHostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePathInternal)RemotePath).ExternalHostName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePathInternal)RemotePath).ExternalHostName = value ?? null; }

        /// <summary>The name of a server on the ONTAP Host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string RemotePathServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePathInternal)RemotePath).ServerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePathInternal)RemotePath).ServerName = value ?? null; }

        /// <summary>The name of a volume on the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string RemotePathVolumeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePathInternal)RemotePath).VolumeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePathInternal)RemotePath).VolumeName = value ?? null; }

        /// <summary>Backing field for <see cref="RemoteVolumeRegion" /> property.</summary>
        private string _remoteVolumeRegion;

        /// <summary>The remote region for the other end of the Volume Replication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string RemoteVolumeRegion { get => this._remoteVolumeRegion; set => this._remoteVolumeRegion = value; }

        /// <summary>Backing field for <see cref="RemoteVolumeResourceId" /> property.</summary>
        private string _remoteVolumeResourceId;

        /// <summary>
        /// The resource ID of the remote volume. Required for cross region and cross zone replication
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string RemoteVolumeResourceId { get => this._remoteVolumeResourceId; set => this._remoteVolumeResourceId = value; }

        /// <summary>Backing field for <see cref="ReplicationId" /> property.</summary>
        private string _replicationId;

        /// <summary>Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string ReplicationId { get => this._replicationId; }

        /// <summary>Backing field for <see cref="ReplicationSchedule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ReplicationSchedule? _replicationSchedule;

        /// <summary>Schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ReplicationSchedule? ReplicationSchedule { get => this._replicationSchedule; set => this._replicationSchedule = value; }

        /// <summary>Creates an new <see cref="ReplicationObject" /> instance.</summary>
        public ReplicationObject()
        {

        }
    }
    /// Replication properties
    public partial interface IReplicationObject :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Indicates whether the local volume is the source or destination for the Volume Replication
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the local volume is the source or destination for the Volume Replication",
        SerializedName = @"endpointType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.EndpointType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.EndpointType? EndpointType { get; set; }
        /// <summary>The Path to a ONTAP Host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Path to a ONTAP Host",
        SerializedName = @"externalHostName",
        PossibleTypes = new [] { typeof(string) })]
        string RemotePathExternalHostName { get; set; }
        /// <summary>The name of a server on the ONTAP Host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of a server on the ONTAP Host",
        SerializedName = @"serverName",
        PossibleTypes = new [] { typeof(string) })]
        string RemotePathServerName { get; set; }
        /// <summary>The name of a volume on the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of a volume on the server",
        SerializedName = @"volumeName",
        PossibleTypes = new [] { typeof(string) })]
        string RemotePathVolumeName { get; set; }
        /// <summary>The remote region for the other end of the Volume Replication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The remote region for the other end of the Volume Replication.",
        SerializedName = @"remoteVolumeRegion",
        PossibleTypes = new [] { typeof(string) })]
        string RemoteVolumeRegion { get; set; }
        /// <summary>
        /// The resource ID of the remote volume. Required for cross region and cross zone replication
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the remote volume. Required for cross region and cross zone replication",
        SerializedName = @"remoteVolumeResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string RemoteVolumeResourceId { get; set; }
        /// <summary>Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id",
        SerializedName = @"replicationId",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationId { get;  }
        /// <summary>Schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Schedule",
        SerializedName = @"replicationSchedule",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ReplicationSchedule) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ReplicationSchedule? ReplicationSchedule { get; set; }

    }
    /// Replication properties
    internal partial interface IReplicationObjectInternal

    {
        /// <summary>
        /// Indicates whether the local volume is the source or destination for the Volume Replication
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.EndpointType? EndpointType { get; set; }
        /// <summary>
        /// The full path to a volume that is to be migrated into ANF. Required for Migration volumes
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePath RemotePath { get; set; }
        /// <summary>The Path to a ONTAP Host</summary>
        string RemotePathExternalHostName { get; set; }
        /// <summary>The name of a server on the ONTAP Host</summary>
        string RemotePathServerName { get; set; }
        /// <summary>The name of a volume on the server</summary>
        string RemotePathVolumeName { get; set; }
        /// <summary>The remote region for the other end of the Volume Replication.</summary>
        string RemoteVolumeRegion { get; set; }
        /// <summary>
        /// The resource ID of the remote volume. Required for cross region and cross zone replication
        /// </summary>
        string RemoteVolumeResourceId { get; set; }
        /// <summary>Id</summary>
        string ReplicationId { get; set; }
        /// <summary>Schedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ReplicationSchedule? ReplicationSchedule { get; set; }

    }
}