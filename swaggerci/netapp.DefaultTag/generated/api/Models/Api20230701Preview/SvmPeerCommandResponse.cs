// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Information about SVM peering process</summary>
    public partial class SvmPeerCommandResponse :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISvmPeerCommandResponse,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISvmPeerCommandResponseInternal
    {

        /// <summary>Backing field for <see cref="SvmPeeringCommand" /> property.</summary>
        private string _svmPeeringCommand;

        /// <summary>
        /// A command that needs to be run on the external ONTAP to accept SVM peering. Will only be present if <code>svmPeeringStatus</code>
        /// is <code>pending</code>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string SvmPeeringCommand { get => this._svmPeeringCommand; set => this._svmPeeringCommand = value; }

        /// <summary>Creates an new <see cref="SvmPeerCommandResponse" /> instance.</summary>
        public SvmPeerCommandResponse()
        {

        }
    }
    /// Information about SVM peering process
    public partial interface ISvmPeerCommandResponse :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A command that needs to be run on the external ONTAP to accept SVM peering. Will only be present if <code>svmPeeringStatus</code>
        /// is <code>pending</code>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A command that needs to be run on the external ONTAP to accept SVM peering.  Will only be present if <code>svmPeeringStatus</code> is <code>pending</code>",
        SerializedName = @"svmPeeringCommand",
        PossibleTypes = new [] { typeof(string) })]
        string SvmPeeringCommand { get; set; }

    }
    /// Information about SVM peering process
    internal partial interface ISvmPeerCommandResponseInternal

    {
        /// <summary>
        /// A command that needs to be run on the external ONTAP to accept SVM peering. Will only be present if <code>svmPeeringStatus</code>
        /// is <code>pending</code>
        /// </summary>
        string SvmPeeringCommand { get; set; }

    }
}