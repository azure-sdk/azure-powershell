// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Encryption settings</summary>
    public partial class AccountEncryption :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IAccountEncryption,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IAccountEncryptionInternal
    {

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentity _identity;

        /// <summary>
        /// Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.EncryptionIdentity()); set => this._identity = value; }

        /// <summary>
        /// The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type
        /// has 'UserAssigned'. It should match key of identity.userAssignedIdentities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentityInternal)Identity).UserAssignedIdentity = value ?? null; }

        /// <summary>Backing field for <see cref="KeySource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.KeySource? _keySource;

        /// <summary>
        /// The encryption keySource (provider). Possible values (case-insensitive): Microsoft.NetApp, Microsoft.KeyVault
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.KeySource? KeySource { get => this._keySource; set => this._keySource = value; }

        /// <summary>Backing field for <see cref="KeyVaultProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultProperties _keyVaultProperty;

        /// <summary>
        /// Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultProperties KeyVaultProperty { get => (this._keyVaultProperty = this._keyVaultProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.KeyVaultProperties()); set => this._keyVaultProperty = value; }

        /// <summary>The name of KeyVault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyName = value ?? null; }

        /// <summary>UUID v4 used to identify the Azure Key Vault configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyVaultId; }

        /// <summary>The resource ID of KeyVault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyVaultResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyVaultResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyVaultResourceId = value ?? null; }

        /// <summary>The Uri of KeyVault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyVaultUri = value ?? null; }

        /// <summary>Status of the KeyVault connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.KeyVaultStatus? KeyVaultPropertyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).Status; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentity Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IAccountEncryptionInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.EncryptionIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IAccountEncryptionInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for KeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IAccountEncryptionInternal.KeyVaultProperty { get => (this._keyVaultProperty = this._keyVaultProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.KeyVaultProperties()); set { {_keyVaultProperty = value;} } }

        /// <summary>Internal Acessors for KeyVaultPropertyKeyVaultId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IAccountEncryptionInternal.KeyVaultPropertyKeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyVaultId = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.KeyVaultStatus? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IAccountEncryptionInternal.KeyVaultPropertyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).Status = value; }

        /// <summary>Creates an new <see cref="AccountEncryption" /> instance.</summary>
        public AccountEncryption()
        {

        }
    }
    /// Encryption settings
    public partial interface IAccountEncryption :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type
        /// has 'UserAssigned'. It should match key of identity.userAssignedIdentities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities.",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// The encryption keySource (provider). Possible values (case-insensitive): Microsoft.NetApp, Microsoft.KeyVault
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
        SerializedName = @"keySource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.KeySource) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.KeySource? KeySource { get; set; }
        /// <summary>The name of KeyVault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of KeyVault key.",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyName { get; set; }
        /// <summary>UUID v4 used to identify the Azure Key Vault configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"UUID v4 used to identify the Azure Key Vault configuration",
        SerializedName = @"keyVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyVaultId { get;  }
        /// <summary>The resource ID of KeyVault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of KeyVault.",
        SerializedName = @"keyVaultResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyVaultResourceId { get; set; }
        /// <summary>The Uri of KeyVault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Uri of KeyVault.",
        SerializedName = @"keyVaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyVaultUri { get; set; }
        /// <summary>Status of the KeyVault connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the KeyVault connection.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.KeyVaultStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.KeyVaultStatus? KeyVaultPropertyStatus { get;  }

    }
    /// Encryption settings
    internal partial interface IAccountEncryptionInternal

    {
        /// <summary>
        /// Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentity Identity { get; set; }
        /// <summary>
        /// The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type
        /// has 'UserAssigned'. It should match key of identity.userAssignedIdentities.
        /// </summary>
        string IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// The encryption keySource (provider). Possible values (case-insensitive): Microsoft.NetApp, Microsoft.KeyVault
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.KeySource? KeySource { get; set; }
        /// <summary>
        /// Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IKeyVaultProperties KeyVaultProperty { get; set; }
        /// <summary>The name of KeyVault key.</summary>
        string KeyVaultPropertyKeyName { get; set; }
        /// <summary>UUID v4 used to identify the Azure Key Vault configuration</summary>
        string KeyVaultPropertyKeyVaultId { get; set; }
        /// <summary>The resource ID of KeyVault.</summary>
        string KeyVaultPropertyKeyVaultResourceId { get; set; }
        /// <summary>The Uri of KeyVault.</summary>
        string KeyVaultPropertyKeyVaultUri { get; set; }
        /// <summary>Status of the KeyVault connection.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.KeyVaultStatus? KeyVaultPropertyStatus { get; set; }

    }
}