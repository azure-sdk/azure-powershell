// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Volume Export Policy Rule</summary>
    public partial class ExportPolicyRule :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IExportPolicyRule,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IExportPolicyRuleInternal
    {

        /// <summary>Backing field for <see cref="AllowedClient" /> property.</summary>
        private string _allowedClient;

        /// <summary>
        /// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string AllowedClient { get => this._allowedClient; set => this._allowedClient = value; }

        /// <summary>Backing field for <see cref="ChownMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ChownMode? _chownMode;

        /// <summary>
        /// This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the
        /// ownership of the file. unrestricted - Non-root users can change ownership of files that they own.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ChownMode? ChownMode { get => this._chownMode; set => this._chownMode = value; }

        /// <summary>Backing field for <see cref="Cif" /> property.</summary>
        private bool? _cif;

        /// <summary>Allows CIFS protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Cif { get => this._cif; set => this._cif = value; }

        /// <summary>Backing field for <see cref="HasRootAccess" /> property.</summary>
        private bool? _hasRootAccess;

        /// <summary>Has root access to volume</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? HasRootAccess { get => this._hasRootAccess; set => this._hasRootAccess = value; }

        /// <summary>Backing field for <see cref="Kerberos5IReadOnly" /> property.</summary>
        private bool? _kerberos5IReadOnly;

        /// <summary>Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Kerberos5IReadOnly { get => this._kerberos5IReadOnly; set => this._kerberos5IReadOnly = value; }

        /// <summary>Backing field for <see cref="Kerberos5IReadWrite" /> property.</summary>
        private bool? _kerberos5IReadWrite;

        /// <summary>
        /// Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Kerberos5IReadWrite { get => this._kerberos5IReadWrite; set => this._kerberos5IReadWrite = value; }

        /// <summary>Backing field for <see cref="Kerberos5PReadOnly" /> property.</summary>
        private bool? _kerberos5PReadOnly;

        /// <summary>Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Kerberos5PReadOnly { get => this._kerberos5PReadOnly; set => this._kerberos5PReadOnly = value; }

        /// <summary>Backing field for <see cref="Kerberos5PReadWrite" /> property.</summary>
        private bool? _kerberos5PReadWrite;

        /// <summary>
        /// Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Kerberos5PReadWrite { get => this._kerberos5PReadWrite; set => this._kerberos5PReadWrite = value; }

        /// <summary>Backing field for <see cref="Kerberos5ReadOnly" /> property.</summary>
        private bool? _kerberos5ReadOnly;

        /// <summary>Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Kerberos5ReadOnly { get => this._kerberos5ReadOnly; set => this._kerberos5ReadOnly = value; }

        /// <summary>Backing field for <see cref="Kerberos5ReadWrite" /> property.</summary>
        private bool? _kerberos5ReadWrite;

        /// <summary>
        /// Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Kerberos5ReadWrite { get => this._kerberos5ReadWrite; set => this._kerberos5ReadWrite = value; }

        /// <summary>Backing field for <see cref="Nfsv3" /> property.</summary>
        private bool? _nfsv3;

        /// <summary>Allows NFSv3 protocol. Enable only for NFSv3 type volumes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Nfsv3 { get => this._nfsv3; set => this._nfsv3 = value; }

        /// <summary>Backing field for <see cref="Nfsv41" /> property.</summary>
        private bool? _nfsv41;

        /// <summary>Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Nfsv41 { get => this._nfsv41; set => this._nfsv41 = value; }

        /// <summary>Backing field for <see cref="RuleIndex" /> property.</summary>
        private int? _ruleIndex;

        /// <summary>Order index</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public int? RuleIndex { get => this._ruleIndex; set => this._ruleIndex = value; }

        /// <summary>Backing field for <see cref="UnixReadOnly" /> property.</summary>
        private bool? _unixReadOnly;

        /// <summary>Read only access</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? UnixReadOnly { get => this._unixReadOnly; set => this._unixReadOnly = value; }

        /// <summary>Backing field for <see cref="UnixReadWrite" /> property.</summary>
        private bool? _unixReadWrite;

        /// <summary>Read and write access</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? UnixReadWrite { get => this._unixReadWrite; set => this._unixReadWrite = value; }

        /// <summary>Creates an new <see cref="ExportPolicyRule" /> instance.</summary>
        public ExportPolicyRule()
        {

        }
    }
    /// Volume Export Policy Rule
    public partial interface IExportPolicyRule :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names",
        SerializedName = @"allowedClients",
        PossibleTypes = new [] { typeof(string) })]
        string AllowedClient { get; set; }
        /// <summary>
        /// This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the
        /// ownership of the file. unrestricted - Non-root users can change ownership of files that they own.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
        SerializedName = @"chownMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ChownMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ChownMode? ChownMode { get; set; }
        /// <summary>Allows CIFS protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows CIFS protocol",
        SerializedName = @"cifs",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Cif { get; set; }
        /// <summary>Has root access to volume</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Has root access to volume",
        SerializedName = @"hasRootAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasRootAccess { get; set; }
        /// <summary>Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
        SerializedName = @"kerberos5iReadOnly",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Kerberos5IReadOnly { get; set; }
        /// <summary>
        /// Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
        SerializedName = @"kerberos5iReadWrite",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Kerberos5IReadWrite { get; set; }
        /// <summary>Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
        SerializedName = @"kerberos5pReadOnly",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Kerberos5PReadOnly { get; set; }
        /// <summary>
        /// Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
        SerializedName = @"kerberos5pReadWrite",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Kerberos5PReadWrite { get; set; }
        /// <summary>Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
        SerializedName = @"kerberos5ReadOnly",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Kerberos5ReadOnly { get; set; }
        /// <summary>
        /// Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
        SerializedName = @"kerberos5ReadWrite",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Kerberos5ReadWrite { get; set; }
        /// <summary>Allows NFSv3 protocol. Enable only for NFSv3 type volumes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows NFSv3 protocol. Enable only for NFSv3 type volumes",
        SerializedName = @"nfsv3",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Nfsv3 { get; set; }
        /// <summary>Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes",
        SerializedName = @"nfsv41",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Nfsv41 { get; set; }
        /// <summary>Order index</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Order index",
        SerializedName = @"ruleIndex",
        PossibleTypes = new [] { typeof(int) })]
        int? RuleIndex { get; set; }
        /// <summary>Read only access</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Read only access",
        SerializedName = @"unixReadOnly",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UnixReadOnly { get; set; }
        /// <summary>Read and write access</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Read and write access",
        SerializedName = @"unixReadWrite",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UnixReadWrite { get; set; }

    }
    /// Volume Export Policy Rule
    internal partial interface IExportPolicyRuleInternal

    {
        /// <summary>
        /// Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
        /// </summary>
        string AllowedClient { get; set; }
        /// <summary>
        /// This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the
        /// ownership of the file. unrestricted - Non-root users can change ownership of files that they own.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ChownMode? ChownMode { get; set; }
        /// <summary>Allows CIFS protocol</summary>
        bool? Cif { get; set; }
        /// <summary>Has root access to volume</summary>
        bool? HasRootAccess { get; set; }
        /// <summary>Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later</summary>
        bool? Kerberos5IReadOnly { get; set; }
        /// <summary>
        /// Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later
        /// </summary>
        bool? Kerberos5IReadWrite { get; set; }
        /// <summary>Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later</summary>
        bool? Kerberos5PReadOnly { get; set; }
        /// <summary>
        /// Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later
        /// </summary>
        bool? Kerberos5PReadWrite { get; set; }
        /// <summary>Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later</summary>
        bool? Kerberos5ReadOnly { get; set; }
        /// <summary>
        /// Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later
        /// </summary>
        bool? Kerberos5ReadWrite { get; set; }
        /// <summary>Allows NFSv3 protocol. Enable only for NFSv3 type volumes</summary>
        bool? Nfsv3 { get; set; }
        /// <summary>Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes</summary>
        bool? Nfsv41 { get; set; }
        /// <summary>Order index</summary>
        int? RuleIndex { get; set; }
        /// <summary>Read only access</summary>
        bool? UnixReadOnly { get; set; }
        /// <summary>Read and write access</summary>
        bool? UnixReadWrite { get; set; }

    }
}