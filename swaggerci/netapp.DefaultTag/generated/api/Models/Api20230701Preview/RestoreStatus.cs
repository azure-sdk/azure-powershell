// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Restore status</summary>
    public partial class RestoreStatus :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRestoreStatus,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRestoreStatusInternal
    {

        /// <summary>Backing field for <see cref="ErrorMessage" /> property.</summary>
        private string _errorMessage;

        /// <summary>Displays error message if the restore is in an error state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string ErrorMessage { get => this._errorMessage; }

        /// <summary>Backing field for <see cref="Healthy" /> property.</summary>
        private bool? _healthy;

        /// <summary>Restore health status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Healthy { get => this._healthy; }

        /// <summary>Internal Acessors for ErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRestoreStatusInternal.ErrorMessage { get => this._errorMessage; set { {_errorMessage = value;} } }

        /// <summary>Internal Acessors for Healthy</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRestoreStatusInternal.Healthy { get => this._healthy; set { {_healthy = value;} } }

        /// <summary>Internal Acessors for MirrorState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRestoreStatusInternal.MirrorState { get => this._mirrorState; set { {_mirrorState = value;} } }

        /// <summary>Internal Acessors for RelationshipStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRestoreStatusInternal.RelationshipStatus { get => this._relationshipStatus; set { {_relationshipStatus = value;} } }

        /// <summary>Internal Acessors for TotalTransferByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRestoreStatusInternal.TotalTransferByte { get => this._totalTransferByte; set { {_totalTransferByte = value;} } }

        /// <summary>Internal Acessors for UnhealthyReason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRestoreStatusInternal.UnhealthyReason { get => this._unhealthyReason; set { {_unhealthyReason = value;} } }

        /// <summary>Backing field for <see cref="MirrorState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? _mirrorState;

        /// <summary>The status of the restore</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? MirrorState { get => this._mirrorState; }

        /// <summary>Backing field for <see cref="RelationshipStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? _relationshipStatus;

        /// <summary>Status of the restore SnapMirror relationship</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? RelationshipStatus { get => this._relationshipStatus; }

        /// <summary>Backing field for <see cref="TotalTransferByte" /> property.</summary>
        private long? _totalTransferByte;

        /// <summary>Displays the total bytes transferred</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public long? TotalTransferByte { get => this._totalTransferByte; }

        /// <summary>Backing field for <see cref="UnhealthyReason" /> property.</summary>
        private string _unhealthyReason;

        /// <summary>Reason for the unhealthy restore relationship</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string UnhealthyReason { get => this._unhealthyReason; }

        /// <summary>Creates an new <see cref="RestoreStatus" /> instance.</summary>
        public RestoreStatus()
        {

        }
    }
    /// Restore status
    public partial interface IRestoreStatus :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Displays error message if the restore is in an error state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Displays error message if the restore is in an error state",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorMessage { get;  }
        /// <summary>Restore health status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Restore health status",
        SerializedName = @"healthy",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Healthy { get;  }
        /// <summary>The status of the restore</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the restore",
        SerializedName = @"mirrorState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? MirrorState { get;  }
        /// <summary>Status of the restore SnapMirror relationship</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the restore SnapMirror relationship",
        SerializedName = @"relationshipStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? RelationshipStatus { get;  }
        /// <summary>Displays the total bytes transferred</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Displays the total bytes transferred",
        SerializedName = @"totalTransferBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? TotalTransferByte { get;  }
        /// <summary>Reason for the unhealthy restore relationship</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Reason for the unhealthy restore relationship",
        SerializedName = @"unhealthyReason",
        PossibleTypes = new [] { typeof(string) })]
        string UnhealthyReason { get;  }

    }
    /// Restore status
    internal partial interface IRestoreStatusInternal

    {
        /// <summary>Displays error message if the restore is in an error state</summary>
        string ErrorMessage { get; set; }
        /// <summary>Restore health status</summary>
        bool? Healthy { get; set; }
        /// <summary>The status of the restore</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? MirrorState { get; set; }
        /// <summary>Status of the restore SnapMirror relationship</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? RelationshipStatus { get; set; }
        /// <summary>Displays the total bytes transferred</summary>
        long? TotalTransferByte { get; set; }
        /// <summary>Reason for the unhealthy restore relationship</summary>
        string UnhealthyReason { get; set; }

    }
}