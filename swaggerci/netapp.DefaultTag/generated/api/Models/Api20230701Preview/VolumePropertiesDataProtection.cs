// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>
    /// DataProtection type volumes include an object containing details of the replication
    /// </summary>
    public partial class VolumePropertiesDataProtection :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePropertiesDataProtection,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePropertiesDataProtectionInternal
    {

        /// <summary>Backing field for <see cref="Backup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupProperties _backup;

        /// <summary>Backup Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupProperties Backup { get => (this._backup = this._backup ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumeBackupProperties()); set => this._backup = value; }

        /// <summary>Backup Enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public bool? BackupEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupPropertiesInternal)Backup).BackupEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupPropertiesInternal)Backup).BackupEnabled = value ?? default(bool); }

        /// <summary>Policy Enforced</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public bool? BackupPolicyEnforced { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupPropertiesInternal)Backup).PolicyEnforced; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupPropertiesInternal)Backup).PolicyEnforced = value ?? default(bool); }

        /// <summary>Backup Policy Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string BackupPolicyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupPropertiesInternal)Backup).BackupPolicyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupPropertiesInternal)Backup).BackupPolicyId = value ?? null; }

        /// <summary>Backup Vault Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string BackupVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupPropertiesInternal)Backup).BackupVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupPropertiesInternal)Backup).BackupVaultId = value ?? null; }

        /// <summary>Internal Acessors for Backup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupProperties Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePropertiesDataProtectionInternal.Backup { get => (this._backup = this._backup ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumeBackupProperties()); set { {_backup = value;} } }

        /// <summary>Internal Acessors for Replication</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObject Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePropertiesDataProtectionInternal.Replication { get => (this._replication = this._replication ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ReplicationObject()); set { {_replication = value;} } }

        /// <summary>Internal Acessors for ReplicationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePropertiesDataProtectionInternal.ReplicationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).ReplicationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).ReplicationId = value; }

        /// <summary>Internal Acessors for ReplicationRemotePath</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePath Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePropertiesDataProtectionInternal.ReplicationRemotePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemotePath; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemotePath = value; }

        /// <summary>Internal Acessors for Snapshot</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeSnapshotProperties Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePropertiesDataProtectionInternal.Snapshot { get => (this._snapshot = this._snapshot ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumeSnapshotProperties()); set { {_snapshot = value;} } }

        /// <summary>Internal Acessors for VolumeRelocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeRelocationProperties Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePropertiesDataProtectionInternal.VolumeRelocation { get => (this._volumeRelocation = this._volumeRelocation ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumeRelocationProperties()); set { {_volumeRelocation = value;} } }

        /// <summary>Internal Acessors for VolumeRelocationReadyToBeFinalized</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePropertiesDataProtectionInternal.VolumeRelocationReadyToBeFinalized { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeRelocationPropertiesInternal)VolumeRelocation).ReadyToBeFinalized; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeRelocationPropertiesInternal)VolumeRelocation).ReadyToBeFinalized = value; }

        /// <summary>The Path to a ONTAP Host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string RemotePathExternalHostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemotePathExternalHostName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemotePathExternalHostName = value ?? null; }

        /// <summary>The name of a server on the ONTAP Host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string RemotePathServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemotePathServerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemotePathServerName = value ?? null; }

        /// <summary>The name of a volume on the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string RemotePathVolumeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemotePathVolumeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemotePathVolumeName = value ?? null; }

        /// <summary>Backing field for <see cref="Replication" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObject _replication;

        /// <summary>Replication properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObject Replication { get => (this._replication = this._replication ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ReplicationObject()); set => this._replication = value; }

        /// <summary>
        /// Indicates whether the local volume is the source or destination for the Volume Replication
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.EndpointType? ReplicationEndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).EndpointType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).EndpointType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.EndpointType)""); }

        /// <summary>Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string ReplicationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).ReplicationId; }

        /// <summary>The remote region for the other end of the Volume Replication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string ReplicationRemoteVolumeRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemoteVolumeRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemoteVolumeRegion = value ?? null; }

        /// <summary>
        /// The resource ID of the remote volume. Required for cross region and cross zone replication
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string ReplicationRemoteVolumeResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemoteVolumeResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).RemoteVolumeResourceId = value ?? null; }

        /// <summary>Schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ReplicationSchedule? ReplicationSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).ReplicationSchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObjectInternal)Replication).ReplicationSchedule = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ReplicationSchedule)""); }

        /// <summary>Backing field for <see cref="Snapshot" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeSnapshotProperties _snapshot;

        /// <summary>Snapshot properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeSnapshotProperties Snapshot { get => (this._snapshot = this._snapshot ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumeSnapshotProperties()); set => this._snapshot = value; }

        /// <summary>Snapshot Policy ResourceId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string SnapshotPolicyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeSnapshotPropertiesInternal)Snapshot).SnapshotPolicyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeSnapshotPropertiesInternal)Snapshot).SnapshotPolicyId = value ?? null; }

        /// <summary>Backing field for <see cref="VolumeRelocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeRelocationProperties _volumeRelocation;

        /// <summary>VolumeRelocation properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeRelocationProperties VolumeRelocation { get => (this._volumeRelocation = this._volumeRelocation ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumeRelocationProperties()); set => this._volumeRelocation = value; }

        /// <summary>Has relocation finished and is ready to be cleaned up</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public bool? VolumeRelocationReadyToBeFinalized { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeRelocationPropertiesInternal)VolumeRelocation).ReadyToBeFinalized; }

        /// <summary>Has relocation been requested for this volume</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public bool? VolumeRelocationRequested { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeRelocationPropertiesInternal)VolumeRelocation).RelocationRequested; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeRelocationPropertiesInternal)VolumeRelocation).RelocationRequested = value ?? default(bool); }

        /// <summary>Creates an new <see cref="VolumePropertiesDataProtection" /> instance.</summary>
        public VolumePropertiesDataProtection()
        {

        }
    }
    /// DataProtection type volumes include an object containing details of the replication
    public partial interface IVolumePropertiesDataProtection :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Backup Enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup Enabled",
        SerializedName = @"backupEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BackupEnabled { get; set; }
        /// <summary>Policy Enforced</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy Enforced",
        SerializedName = @"policyEnforced",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BackupPolicyEnforced { get; set; }
        /// <summary>Backup Policy Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup Policy Resource ID",
        SerializedName = @"backupPolicyId",
        PossibleTypes = new [] { typeof(string) })]
        string BackupPolicyId { get; set; }
        /// <summary>Backup Vault Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup Vault Resource ID",
        SerializedName = @"backupVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string BackupVaultId { get; set; }
        /// <summary>The Path to a ONTAP Host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Path to a ONTAP Host",
        SerializedName = @"externalHostName",
        PossibleTypes = new [] { typeof(string) })]
        string RemotePathExternalHostName { get; set; }
        /// <summary>The name of a server on the ONTAP Host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of a server on the ONTAP Host",
        SerializedName = @"serverName",
        PossibleTypes = new [] { typeof(string) })]
        string RemotePathServerName { get; set; }
        /// <summary>The name of a volume on the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of a volume on the server",
        SerializedName = @"volumeName",
        PossibleTypes = new [] { typeof(string) })]
        string RemotePathVolumeName { get; set; }
        /// <summary>
        /// Indicates whether the local volume is the source or destination for the Volume Replication
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the local volume is the source or destination for the Volume Replication",
        SerializedName = @"endpointType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.EndpointType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.EndpointType? ReplicationEndpointType { get; set; }
        /// <summary>Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id",
        SerializedName = @"replicationId",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationId { get;  }
        /// <summary>The remote region for the other end of the Volume Replication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The remote region for the other end of the Volume Replication.",
        SerializedName = @"remoteVolumeRegion",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationRemoteVolumeRegion { get; set; }
        /// <summary>
        /// The resource ID of the remote volume. Required for cross region and cross zone replication
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the remote volume. Required for cross region and cross zone replication",
        SerializedName = @"remoteVolumeResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationRemoteVolumeResourceId { get; set; }
        /// <summary>Schedule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Schedule",
        SerializedName = @"replicationSchedule",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ReplicationSchedule) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ReplicationSchedule? ReplicationSchedule { get; set; }
        /// <summary>Snapshot Policy ResourceId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Snapshot Policy ResourceId",
        SerializedName = @"snapshotPolicyId",
        PossibleTypes = new [] { typeof(string) })]
        string SnapshotPolicyId { get; set; }
        /// <summary>Has relocation finished and is ready to be cleaned up</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Has relocation finished and is ready to be cleaned up",
        SerializedName = @"readyToBeFinalized",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VolumeRelocationReadyToBeFinalized { get;  }
        /// <summary>Has relocation been requested for this volume</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Has relocation been requested for this volume",
        SerializedName = @"relocationRequested",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VolumeRelocationRequested { get; set; }

    }
    /// DataProtection type volumes include an object containing details of the replication
    internal partial interface IVolumePropertiesDataProtectionInternal

    {
        /// <summary>Backup Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackupProperties Backup { get; set; }
        /// <summary>Backup Enabled</summary>
        bool? BackupEnabled { get; set; }
        /// <summary>Policy Enforced</summary>
        bool? BackupPolicyEnforced { get; set; }
        /// <summary>Backup Policy Resource ID</summary>
        string BackupPolicyId { get; set; }
        /// <summary>Backup Vault Resource ID</summary>
        string BackupVaultId { get; set; }
        /// <summary>The Path to a ONTAP Host</summary>
        string RemotePathExternalHostName { get; set; }
        /// <summary>The name of a server on the ONTAP Host</summary>
        string RemotePathServerName { get; set; }
        /// <summary>The name of a volume on the server</summary>
        string RemotePathVolumeName { get; set; }
        /// <summary>Replication properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationObject Replication { get; set; }
        /// <summary>
        /// Indicates whether the local volume is the source or destination for the Volume Replication
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.EndpointType? ReplicationEndpointType { get; set; }
        /// <summary>Id</summary>
        string ReplicationId { get; set; }
        /// <summary>
        /// The full path to a volume that is to be migrated into ANF. Required for Migration volumes
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IRemotePath ReplicationRemotePath { get; set; }
        /// <summary>The remote region for the other end of the Volume Replication.</summary>
        string ReplicationRemoteVolumeRegion { get; set; }
        /// <summary>
        /// The resource ID of the remote volume. Required for cross region and cross zone replication
        /// </summary>
        string ReplicationRemoteVolumeResourceId { get; set; }
        /// <summary>Schedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ReplicationSchedule? ReplicationSchedule { get; set; }
        /// <summary>Snapshot properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeSnapshotProperties Snapshot { get; set; }
        /// <summary>Snapshot Policy ResourceId</summary>
        string SnapshotPolicyId { get; set; }
        /// <summary>VolumeRelocation properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeRelocationProperties VolumeRelocation { get; set; }
        /// <summary>Has relocation finished and is ready to be cleaned up</summary>
        bool? VolumeRelocationReadyToBeFinalized { get; set; }
        /// <summary>Has relocation been requested for this volume</summary>
        bool? VolumeRelocationRequested { get; set; }

    }
}