// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Backup status</summary>
    public partial class BackupStatus :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupStatus,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupStatusInternal
    {

        /// <summary>Backing field for <see cref="ErrorMessage" /> property.</summary>
        private string _errorMessage;

        /// <summary>Displays error message if the backup is in an error state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string ErrorMessage { get => this._errorMessage; }

        /// <summary>Backing field for <see cref="Healthy" /> property.</summary>
        private bool? _healthy;

        /// <summary>Backup health status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Healthy { get => this._healthy; }

        /// <summary>Backing field for <see cref="LastTransferSize" /> property.</summary>
        private long? _lastTransferSize;

        /// <summary>Displays the last transfer size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public long? LastTransferSize { get => this._lastTransferSize; }

        /// <summary>Backing field for <see cref="LastTransferType" /> property.</summary>
        private string _lastTransferType;

        /// <summary>Displays the last transfer type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string LastTransferType { get => this._lastTransferType; }

        /// <summary>Internal Acessors for ErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupStatusInternal.ErrorMessage { get => this._errorMessage; set { {_errorMessage = value;} } }

        /// <summary>Internal Acessors for Healthy</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupStatusInternal.Healthy { get => this._healthy; set { {_healthy = value;} } }

        /// <summary>Internal Acessors for LastTransferSize</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupStatusInternal.LastTransferSize { get => this._lastTransferSize; set { {_lastTransferSize = value;} } }

        /// <summary>Internal Acessors for LastTransferType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupStatusInternal.LastTransferType { get => this._lastTransferType; set { {_lastTransferType = value;} } }

        /// <summary>Internal Acessors for MirrorState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupStatusInternal.MirrorState { get => this._mirrorState; set { {_mirrorState = value;} } }

        /// <summary>Internal Acessors for RelationshipStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupStatusInternal.RelationshipStatus { get => this._relationshipStatus; set { {_relationshipStatus = value;} } }

        /// <summary>Internal Acessors for TotalTransferByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupStatusInternal.TotalTransferByte { get => this._totalTransferByte; set { {_totalTransferByte = value;} } }

        /// <summary>Internal Acessors for TransferProgressByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupStatusInternal.TransferProgressByte { get => this._transferProgressByte; set { {_transferProgressByte = value;} } }

        /// <summary>Internal Acessors for UnhealthyReason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupStatusInternal.UnhealthyReason { get => this._unhealthyReason; set { {_unhealthyReason = value;} } }

        /// <summary>Backing field for <see cref="MirrorState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? _mirrorState;

        /// <summary>The status of the backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? MirrorState { get => this._mirrorState; }

        /// <summary>Backing field for <see cref="RelationshipStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? _relationshipStatus;

        /// <summary>Status of the backup mirror relationship</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? RelationshipStatus { get => this._relationshipStatus; }

        /// <summary>Backing field for <see cref="TotalTransferByte" /> property.</summary>
        private long? _totalTransferByte;

        /// <summary>Displays the total bytes transferred</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public long? TotalTransferByte { get => this._totalTransferByte; }

        /// <summary>Backing field for <see cref="TransferProgressByte" /> property.</summary>
        private long? _transferProgressByte;

        /// <summary>Displays the total number of bytes transferred for the ongoing operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public long? TransferProgressByte { get => this._transferProgressByte; }

        /// <summary>Backing field for <see cref="UnhealthyReason" /> property.</summary>
        private string _unhealthyReason;

        /// <summary>Reason for the unhealthy backup relationship</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string UnhealthyReason { get => this._unhealthyReason; }

        /// <summary>Creates an new <see cref="BackupStatus" /> instance.</summary>
        public BackupStatus()
        {

        }
    }
    /// Backup status
    public partial interface IBackupStatus :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Displays error message if the backup is in an error state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Displays error message if the backup is in an error state",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorMessage { get;  }
        /// <summary>Backup health status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup health status",
        SerializedName = @"healthy",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Healthy { get;  }
        /// <summary>Displays the last transfer size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Displays the last transfer size",
        SerializedName = @"lastTransferSize",
        PossibleTypes = new [] { typeof(long) })]
        long? LastTransferSize { get;  }
        /// <summary>Displays the last transfer type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Displays the last transfer type",
        SerializedName = @"lastTransferType",
        PossibleTypes = new [] { typeof(string) })]
        string LastTransferType { get;  }
        /// <summary>The status of the backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the backup",
        SerializedName = @"mirrorState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? MirrorState { get;  }
        /// <summary>Status of the backup mirror relationship</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the backup mirror relationship",
        SerializedName = @"relationshipStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? RelationshipStatus { get;  }
        /// <summary>Displays the total bytes transferred</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Displays the total bytes transferred",
        SerializedName = @"totalTransferBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? TotalTransferByte { get;  }
        /// <summary>Displays the total number of bytes transferred for the ongoing operation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Displays the total number of bytes transferred for the ongoing operation",
        SerializedName = @"transferProgressBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? TransferProgressByte { get;  }
        /// <summary>Reason for the unhealthy backup relationship</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Reason for the unhealthy backup relationship",
        SerializedName = @"unhealthyReason",
        PossibleTypes = new [] { typeof(string) })]
        string UnhealthyReason { get;  }

    }
    /// Backup status
    internal partial interface IBackupStatusInternal

    {
        /// <summary>Displays error message if the backup is in an error state</summary>
        string ErrorMessage { get; set; }
        /// <summary>Backup health status</summary>
        bool? Healthy { get; set; }
        /// <summary>Displays the last transfer size</summary>
        long? LastTransferSize { get; set; }
        /// <summary>Displays the last transfer type</summary>
        string LastTransferType { get; set; }
        /// <summary>The status of the backup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? MirrorState { get; set; }
        /// <summary>Status of the backup mirror relationship</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? RelationshipStatus { get; set; }
        /// <summary>Displays the total bytes transferred</summary>
        long? TotalTransferByte { get; set; }
        /// <summary>Displays the total number of bytes transferred for the ongoing operation</summary>
        long? TransferProgressByte { get; set; }
        /// <summary>Reason for the unhealthy backup relationship</summary>
        string UnhealthyReason { get; set; }

    }
}