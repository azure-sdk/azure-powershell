// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Restore payload for Single File Backup Restore</summary>
    public partial class BackupRestoreFiles :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupRestoreFiles,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupRestoreFilesInternal
    {

        /// <summary>Backing field for <see cref="DestinationVolumeId" /> property.</summary>
        private string _destinationVolumeId;

        /// <summary>Resource Id of the destination volume on which the files need to be restored</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string DestinationVolumeId { get => this._destinationVolumeId; set => this._destinationVolumeId = value; }

        /// <summary>Backing field for <see cref="FileList" /> property.</summary>
        private string[] _fileList;

        /// <summary>List of files to be restored</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string[] FileList { get => this._fileList; set => this._fileList = value; }

        /// <summary>Backing field for <see cref="RestoreFilePath" /> property.</summary>
        private string _restoreFilePath;

        /// <summary>
        /// Destination folder where the files will be restored. The path name should start with a forward slash. If it is omitted
        /// from request then restore is done at the root folder of the destination volume by default
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string RestoreFilePath { get => this._restoreFilePath; set => this._restoreFilePath = value; }

        /// <summary>Creates an new <see cref="BackupRestoreFiles" /> instance.</summary>
        public BackupRestoreFiles()
        {

        }
    }
    /// Restore payload for Single File Backup Restore
    public partial interface IBackupRestoreFiles :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Resource Id of the destination volume on which the files need to be restored</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Resource Id of the destination volume on which the files need to be restored",
        SerializedName = @"destinationVolumeId",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationVolumeId { get; set; }
        /// <summary>List of files to be restored</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"List of files to be restored",
        SerializedName = @"fileList",
        PossibleTypes = new [] { typeof(string) })]
        string[] FileList { get; set; }
        /// <summary>
        /// Destination folder where the files will be restored. The path name should start with a forward slash. If it is omitted
        /// from request then restore is done at the root folder of the destination volume by default
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Destination folder where the files will be restored. The path name should start with a forward slash. If it is omitted from request then restore is done at the root folder of the destination volume by default",
        SerializedName = @"restoreFilePath",
        PossibleTypes = new [] { typeof(string) })]
        string RestoreFilePath { get; set; }

    }
    /// Restore payload for Single File Backup Restore
    internal partial interface IBackupRestoreFilesInternal

    {
        /// <summary>Resource Id of the destination volume on which the files need to be restored</summary>
        string DestinationVolumeId { get; set; }
        /// <summary>List of files to be restored</summary>
        string[] FileList { get; set; }
        /// <summary>
        /// Destination folder where the files will be restored. The path name should start with a forward slash. If it is omitted
        /// from request then restore is done at the root folder of the destination volume by default
        /// </summary>
        string RestoreFilePath { get; set; }

    }
}