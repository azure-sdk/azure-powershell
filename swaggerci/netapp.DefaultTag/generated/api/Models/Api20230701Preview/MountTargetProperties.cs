// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Mount target properties</summary>
    public partial class MountTargetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMountTargetProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMountTargetPropertiesInternal
    {

        /// <summary>Backing field for <see cref="FileSystemId" /> property.</summary>
        private string _fileSystemId;

        /// <summary>UUID v4 used to identify the MountTarget</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string FileSystemId { get => this._fileSystemId; set => this._fileSystemId = value; }

        /// <summary>Backing field for <see cref="IPAddress" /> property.</summary>
        private string _iPAddress;

        /// <summary>The mount target's IPv4 address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string IPAddress { get => this._iPAddress; }

        /// <summary>Internal Acessors for IPAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMountTargetPropertiesInternal.IPAddress { get => this._iPAddress; set { {_iPAddress = value;} } }

        /// <summary>Internal Acessors for MountTargetId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMountTargetPropertiesInternal.MountTargetId { get => this._mountTargetId; set { {_mountTargetId = value;} } }

        /// <summary>Backing field for <see cref="MountTargetId" /> property.</summary>
        private string _mountTargetId;

        /// <summary>UUID v4 used to identify the MountTarget</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string MountTargetId { get => this._mountTargetId; }

        /// <summary>Backing field for <see cref="SmbServerFqdn" /> property.</summary>
        private string _smbServerFqdn;

        /// <summary>The SMB server's Fully Qualified Domain Name, FQDN</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string SmbServerFqdn { get => this._smbServerFqdn; set => this._smbServerFqdn = value; }

        /// <summary>Creates an new <see cref="MountTargetProperties" /> instance.</summary>
        public MountTargetProperties()
        {

        }
    }
    /// Mount target properties
    public partial interface IMountTargetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>UUID v4 used to identify the MountTarget</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"UUID v4 used to identify the MountTarget",
        SerializedName = @"fileSystemId",
        PossibleTypes = new [] { typeof(string) })]
        string FileSystemId { get; set; }
        /// <summary>The mount target's IPv4 address</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The mount target's IPv4 address",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string IPAddress { get;  }
        /// <summary>UUID v4 used to identify the MountTarget</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"UUID v4 used to identify the MountTarget",
        SerializedName = @"mountTargetId",
        PossibleTypes = new [] { typeof(string) })]
        string MountTargetId { get;  }
        /// <summary>The SMB server's Fully Qualified Domain Name, FQDN</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SMB server's Fully Qualified Domain Name, FQDN",
        SerializedName = @"smbServerFqdn",
        PossibleTypes = new [] { typeof(string) })]
        string SmbServerFqdn { get; set; }

    }
    /// Mount target properties
    internal partial interface IMountTargetPropertiesInternal

    {
        /// <summary>UUID v4 used to identify the MountTarget</summary>
        string FileSystemId { get; set; }
        /// <summary>The mount target's IPv4 address</summary>
        string IPAddress { get; set; }
        /// <summary>UUID v4 used to identify the MountTarget</summary>
        string MountTargetId { get; set; }
        /// <summary>The SMB server's Fully Qualified Domain Name, FQDN</summary>
        string SmbServerFqdn { get; set; }

    }
}