// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Identity used to authenticate with key vault.</summary>
    public partial class EncryptionIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentityInternal
    {

        /// <summary>Internal Acessors for PrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IEncryptionIdentityInternal.PrincipalId { get => this._principalId; set { {_principalId = value;} } }

        /// <summary>Backing field for <see cref="PrincipalId" /> property.</summary>
        private string _principalId;

        /// <summary>
        /// The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string PrincipalId { get => this._principalId; }

        /// <summary>Backing field for <see cref="UserAssignedIdentity" /> property.</summary>
        private string _userAssignedIdentity;

        /// <summary>
        /// The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type
        /// has 'UserAssigned'. It should match key of identity.userAssignedIdentities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string UserAssignedIdentity { get => this._userAssignedIdentity; set => this._userAssignedIdentity = value; }

        /// <summary>Creates an new <see cref="EncryptionIdentity" /> instance.</summary>
        public EncryptionIdentity()
        {

        }
    }
    /// Identity used to authenticate with key vault.
    public partial interface IEncryptionIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalId { get;  }
        /// <summary>
        /// The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type
        /// has 'UserAssigned'. It should match key of identity.userAssignedIdentities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities.",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string UserAssignedIdentity { get; set; }

    }
    /// Identity used to authenticate with key vault.
    internal partial interface IEncryptionIdentityInternal

    {
        /// <summary>
        /// The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.
        /// </summary>
        string PrincipalId { get; set; }
        /// <summary>
        /// The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type
        /// has 'UserAssigned'. It should match key of identity.userAssignedIdentities.
        /// </summary>
        string UserAssignedIdentity { get; set; }

    }
}