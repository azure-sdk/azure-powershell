// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Snapshot policy Details for create and update</summary>
    public partial class SnapshotPolicyPatch :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPatch,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPatchInternal
    {

        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? DailyScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleHour = value ?? default(int); }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? DailyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleMinute = value ?? default(int); }

        /// <summary>Daily snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? DailyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleSnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleSnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? DailyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleUsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleUsedByte = value ?? default(long); }

        /// <summary>The property to decide policy is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public bool? Enabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).Enabled = value ?? default(bool); }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? HourlyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleMinute = value ?? default(int); }

        /// <summary>Hourly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? HourlyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleSnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleSnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? HourlyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleUsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleUsedByte = value ?? default(long); }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Resource location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for DailySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPatchInternal.DailySchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailySchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailySchedule = value; }

        /// <summary>Internal Acessors for HourlySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPatchInternal.HourlySchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlySchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlySchedule = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPatchInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for MonthlySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPatchInternal.MonthlySchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlySchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlySchedule = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPatchInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyProperties Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPatchInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.SnapshotPolicyProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPatchInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPatchInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for WeeklySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPatchInternal.WeeklySchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklySchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklySchedule = value; }

        /// <summary>
        /// Indicates which days of the month snapshot should be taken. A comma delimited string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string MonthlyScheduleDaysOfMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleDaysOfMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleDaysOfMonth = value ?? null; }

        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? MonthlyScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleHour = value ?? default(int); }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? MonthlyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleMinute = value ?? default(int); }

        /// <summary>Monthly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? MonthlyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleSnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleSnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? MonthlyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleUsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleUsedByte = value ?? default(long); }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyProperties _property;

        /// <summary>Snapshot Policy properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.SnapshotPolicyProperties()); set => this._property = value; }

        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags _tag;

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ResourceTags()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>
        /// Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string WeeklyScheduleDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleDay = value ?? null; }

        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? WeeklyScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleHour = value ?? default(int); }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? WeeklyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleMinute = value ?? default(int); }

        /// <summary>Weekly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? WeeklyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleSnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleSnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? WeeklyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleUsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleUsedByte = value ?? default(long); }

        /// <summary>Creates an new <see cref="SnapshotPolicyPatch" /> instance.</summary>
        public SnapshotPolicyPatch()
        {

        }
    }
    /// Snapshot policy Details for create and update
    public partial interface ISnapshotPolicyPatch :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which hour in UTC timezone a snapshot should be taken",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyScheduleMinute { get; set; }
        /// <summary>Daily snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Daily snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? DailyScheduleUsedByte { get; set; }
        /// <summary>The property to decide policy is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The property to decide policy is enabled or not",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? HourlyScheduleMinute { get; set; }
        /// <summary>Hourly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Hourly snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? HourlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? HourlyScheduleUsedByte { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Resource location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource location",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>
        /// Indicates which days of the month snapshot should be taken. A comma delimited string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which days of the month snapshot should be taken. A comma delimited string.",
        SerializedName = @"daysOfMonth",
        PossibleTypes = new [] { typeof(string) })]
        string MonthlyScheduleDaysOfMonth { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which hour in UTC timezone a snapshot should be taken",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? MonthlyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? MonthlyScheduleMinute { get; set; }
        /// <summary>Monthly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Monthly snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? MonthlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? MonthlyScheduleUsedByte { get; set; }
        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure lifecycle management",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource tags",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags Tag { get; set; }
        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>
        /// Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
        SerializedName = @"day",
        PossibleTypes = new [] { typeof(string) })]
        string WeeklyScheduleDay { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which hour in UTC timezone a snapshot should be taken",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyScheduleMinute { get; set; }
        /// <summary>Weekly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Weekly snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? WeeklyScheduleUsedByte { get; set; }

    }
    /// Snapshot policy Details for create and update
    internal partial interface ISnapshotPolicyPatchInternal

    {
        /// <summary>Schedule for daily snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailySchedule DailySchedule { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        int? DailyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? DailyScheduleMinute { get; set; }
        /// <summary>Daily snapshot count to keep</summary>
        int? DailyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? DailyScheduleUsedByte { get; set; }
        /// <summary>The property to decide policy is enabled or not</summary>
        bool? Enabled { get; set; }
        /// <summary>Schedule for hourly snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlySchedule HourlySchedule { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? HourlyScheduleMinute { get; set; }
        /// <summary>Hourly snapshot count to keep</summary>
        int? HourlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? HourlyScheduleUsedByte { get; set; }
        /// <summary>Resource Id</summary>
        string Id { get; set; }
        /// <summary>Resource location</summary>
        string Location { get; set; }
        /// <summary>Schedule for monthly snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlySchedule MonthlySchedule { get; set; }
        /// <summary>
        /// Indicates which days of the month snapshot should be taken. A comma delimited string.
        /// </summary>
        string MonthlyScheduleDaysOfMonth { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        int? MonthlyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? MonthlyScheduleMinute { get; set; }
        /// <summary>Monthly snapshot count to keep</summary>
        int? MonthlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? MonthlyScheduleUsedByte { get; set; }
        /// <summary>Resource name</summary>
        string Name { get; set; }
        /// <summary>Snapshot Policy properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyProperties Property { get; set; }
        /// <summary>Azure lifecycle management</summary>
        string ProvisioningState { get; set; }
        /// <summary>Resource tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags Tag { get; set; }
        /// <summary>Resource type</summary>
        string Type { get; set; }
        /// <summary>Schedule for weekly snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklySchedule WeeklySchedule { get; set; }
        /// <summary>
        /// Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
        /// </summary>
        string WeeklyScheduleDay { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        int? WeeklyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? WeeklyScheduleMinute { get; set; }
        /// <summary>Weekly snapshot count to keep</summary>
        int? WeeklyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? WeeklyScheduleUsedByte { get; set; }

    }
}