// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Volume Quota Rule properties</summary>
    public partial class VolumeQuotaRulesProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesPropertiesInternal
    {

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ProvisioningState? _provisioningState;

        /// <summary>Gets the status of the VolumeQuotaRule at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="QuotaSizeInKiB" /> property.</summary>
        private long? _quotaSizeInKiB;

        /// <summary>Size of quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public long? QuotaSizeInKiB { get => this._quotaSizeInKiB; set => this._quotaSizeInKiB = value; }

        /// <summary>Backing field for <see cref="QuotaTarget" /> property.</summary>
        private string _quotaTarget;

        /// <summary>
        /// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command
        /// for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string QuotaTarget { get => this._quotaTarget; set => this._quotaTarget = value; }

        /// <summary>Backing field for <see cref="QuotaType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.Type? _quotaType;

        /// <summary>Type of quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.Type? QuotaType { get => this._quotaType; set => this._quotaType = value; }

        /// <summary>Creates an new <see cref="VolumeQuotaRulesProperties" /> instance.</summary>
        public VolumeQuotaRulesProperties()
        {

        }
    }
    /// Volume Quota Rule properties
    public partial interface IVolumeQuotaRulesProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Gets the status of the VolumeQuotaRule at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the status of the VolumeQuotaRule at the time the operation was called.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Size of quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Size of quota",
        SerializedName = @"quotaSizeInKiBs",
        PossibleTypes = new [] { typeof(long) })]
        long? QuotaSizeInKiB { get; set; }
        /// <summary>
        /// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command
        /// for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
        SerializedName = @"quotaTarget",
        PossibleTypes = new [] { typeof(string) })]
        string QuotaTarget { get; set; }
        /// <summary>Type of quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of quota",
        SerializedName = @"quotaType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.Type) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.Type? QuotaType { get; set; }

    }
    /// Volume Quota Rule properties
    internal partial interface IVolumeQuotaRulesPropertiesInternal

    {
        /// <summary>Gets the status of the VolumeQuotaRule at the time the operation was called.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Size of quota</summary>
        long? QuotaSizeInKiB { get; set; }
        /// <summary>
        /// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command
        /// for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
        /// </summary>
        string QuotaTarget { get; set; }
        /// <summary>Type of quota</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.Type? QuotaType { get; set; }

    }
}