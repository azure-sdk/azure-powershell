// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Patchable volume properties</summary>
    public partial class VolumePatchProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePatchProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePatchProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumePatchProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json ? new VolumePatchProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="VolumePatchProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="VolumePatchProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._exportPolicy ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) this._exportPolicy.ToJson(null,serializationMode) : null, "exportPolicy" ,container.Add );
            AddIf( null != this._dataProtection ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) this._dataProtection.ToJson(null,serializationMode) : null, "dataProtection" ,container.Add );
            AddIf( null != (((object)this._serviceLevel)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._serviceLevel.ToString()) : null, "serviceLevel" ,container.Add );
            AddIf( null != this._usageThreshold ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber((long)this._usageThreshold) : null, "usageThreshold" ,container.Add );
            AddIf( null != this._throughputMibp ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber((float)this._throughputMibp) : null, "throughputMibps" ,container.Add );
            AddIf( null != this._isDefaultQuotaEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonBoolean((bool)this._isDefaultQuotaEnabled) : null, "isDefaultQuotaEnabled" ,container.Add );
            AddIf( null != this._defaultUserQuotaInKiB ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber((long)this._defaultUserQuotaInKiB) : null, "defaultUserQuotaInKiBs" ,container.Add );
            AddIf( null != this._defaultGroupQuotaInKiB ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber((long)this._defaultGroupQuotaInKiB) : null, "defaultGroupQuotaInKiBs" ,container.Add );
            AddIf( null != (((object)this._unixPermission)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._unixPermission.ToString()) : null, "unixPermissions" ,container.Add );
            AddIf( null != this._coolAccess ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonBoolean((bool)this._coolAccess) : null, "coolAccess" ,container.Add );
            AddIf( null != this._coolnessPeriod ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber((int)this._coolnessPeriod) : null, "coolnessPeriod" ,container.Add );
            AddIf( null != (((object)this._coolAccessRetrievalPolicy)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._coolAccessRetrievalPolicy.ToString()) : null, "coolAccessRetrievalPolicy" ,container.Add );
            AddIf( null != this._snapshotDirectoryVisible ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonBoolean((bool)this._snapshotDirectoryVisible) : null, "snapshotDirectoryVisible" ,container.Add );
            AddIf( null != (((object)this._smbAccessBasedEnumeration)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._smbAccessBasedEnumeration.ToString()) : null, "smbAccessBasedEnumeration" ,container.Add );
            AddIf( null != (((object)this._smbNonBrowsable)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._smbNonBrowsable.ToString()) : null, "smbNonBrowsable" ,container.Add );
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject into a new instance of <see cref="VolumePatchProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal VolumePatchProperties(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_exportPolicy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject>("exportPolicy"), out var __jsonExportPolicy) ? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumePatchPropertiesExportPolicy.FromJson(__jsonExportPolicy) : ExportPolicy;}
            {_dataProtection = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject>("dataProtection"), out var __jsonDataProtection) ? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumePatchPropertiesDataProtection.FromJson(__jsonDataProtection) : DataProtection;}
            {_serviceLevel = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("serviceLevel"), out var __jsonServiceLevel) ? (string)__jsonServiceLevel : (string)ServiceLevel;}
            {_usageThreshold = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber>("usageThreshold"), out var __jsonUsageThreshold) ? (long?)__jsonUsageThreshold : UsageThreshold;}
            {_throughputMibp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber>("throughputMibps"), out var __jsonThroughputMibps) ? (float?)__jsonThroughputMibps : ThroughputMibp;}
            {_isDefaultQuotaEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonBoolean>("isDefaultQuotaEnabled"), out var __jsonIsDefaultQuotaEnabled) ? (bool?)__jsonIsDefaultQuotaEnabled : IsDefaultQuotaEnabled;}
            {_defaultUserQuotaInKiB = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber>("defaultUserQuotaInKiBs"), out var __jsonDefaultUserQuotaInKiBs) ? (long?)__jsonDefaultUserQuotaInKiBs : DefaultUserQuotaInKiB;}
            {_defaultGroupQuotaInKiB = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber>("defaultGroupQuotaInKiBs"), out var __jsonDefaultGroupQuotaInKiBs) ? (long?)__jsonDefaultGroupQuotaInKiBs : DefaultGroupQuotaInKiB;}
            {_unixPermission = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("unixPermissions"), out var __jsonUnixPermissions) ? (string)__jsonUnixPermissions : (string)UnixPermission;}
            {_coolAccess = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonBoolean>("coolAccess"), out var __jsonCoolAccess) ? (bool?)__jsonCoolAccess : CoolAccess;}
            {_coolnessPeriod = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber>("coolnessPeriod"), out var __jsonCoolnessPeriod) ? (int?)__jsonCoolnessPeriod : CoolnessPeriod;}
            {_coolAccessRetrievalPolicy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("coolAccessRetrievalPolicy"), out var __jsonCoolAccessRetrievalPolicy) ? (string)__jsonCoolAccessRetrievalPolicy : (string)CoolAccessRetrievalPolicy;}
            {_snapshotDirectoryVisible = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonBoolean>("snapshotDirectoryVisible"), out var __jsonSnapshotDirectoryVisible) ? (bool?)__jsonSnapshotDirectoryVisible : SnapshotDirectoryVisible;}
            {_smbAccessBasedEnumeration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("smbAccessBasedEnumeration"), out var __jsonSmbAccessBasedEnumeration) ? (string)__jsonSmbAccessBasedEnumeration : (string)SmbAccessBasedEnumeration;}
            {_smbNonBrowsable = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("smbNonBrowsable"), out var __jsonSmbNonBrowsable) ? (string)__jsonSmbNonBrowsable : (string)SmbNonBrowsable;}
            AfterFromJson(json);
        }
    }
}