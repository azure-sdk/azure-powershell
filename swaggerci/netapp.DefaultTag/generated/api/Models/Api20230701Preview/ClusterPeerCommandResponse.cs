// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Information about cluster peering process</summary>
    public partial class ClusterPeerCommandResponse :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IClusterPeerCommandResponse,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IClusterPeerCommandResponseInternal
    {

        /// <summary>Backing field for <see cref="PeerAcceptCommand" /> property.</summary>
        private string _peerAcceptCommand;

        /// <summary>
        /// A command that needs to be run on the external ONTAP to accept cluster peering. Will only be present if <code>clusterPeeringStatus</code>
        /// is <code>pending</code>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string PeerAcceptCommand { get => this._peerAcceptCommand; set => this._peerAcceptCommand = value; }

        /// <summary>Creates an new <see cref="ClusterPeerCommandResponse" /> instance.</summary>
        public ClusterPeerCommandResponse()
        {

        }
    }
    /// Information about cluster peering process
    public partial interface IClusterPeerCommandResponse :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A command that needs to be run on the external ONTAP to accept cluster peering. Will only be present if <code>clusterPeeringStatus</code>
        /// is <code>pending</code>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A command that needs to be run on the external ONTAP to accept cluster peering.  Will only be present if <code>clusterPeeringStatus</code> is <code>pending</code>",
        SerializedName = @"peerAcceptCommand",
        PossibleTypes = new [] { typeof(string) })]
        string PeerAcceptCommand { get; set; }

    }
    /// Information about cluster peering process
    internal partial interface IClusterPeerCommandResponseInternal

    {
        /// <summary>
        /// A command that needs to be run on the external ONTAP to accept cluster peering. Will only be present if <code>clusterPeeringStatus</code>
        /// is <code>pending</code>
        /// </summary>
        string PeerAcceptCommand { get; set; }

    }
}