// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Snapshot policy information</summary>
    public partial class SnapshotPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicy,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyInternal,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.TrackedResource();

        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? DailyScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleHour = value ?? default(int); }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? DailyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleMinute = value ?? default(int); }

        /// <summary>Daily snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? DailyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleSnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleSnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? DailyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleUsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailyScheduleUsedByte = value ?? default(long); }

        /// <summary>The property to decide policy is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public bool? Enabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Etag" /> property.</summary>
        private string _etag;

        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string Etag { get => this._etag; }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? HourlyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleMinute = value ?? default(int); }

        /// <summary>Hourly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? HourlyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleSnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleSnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? HourlyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleUsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlyScheduleUsedByte = value ?? default(long); }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for DailySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyInternal.DailySchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailySchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).DailySchedule = value; }

        /// <summary>Internal Acessors for Etag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyInternal.Etag { get => this._etag; set { {_etag = value;} } }

        /// <summary>Internal Acessors for HourlySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyInternal.HourlySchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlySchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).HourlySchedule = value; }

        /// <summary>Internal Acessors for MonthlySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyInternal.MonthlySchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlySchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlySchedule = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyProperties Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.SnapshotPolicyProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for WeeklySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyInternal.WeeklySchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklySchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklySchedule = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.ISystemData Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>
        /// Indicates which days of the month snapshot should be taken. A comma delimited string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string MonthlyScheduleDaysOfMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleDaysOfMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleDaysOfMonth = value ?? null; }

        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? MonthlyScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleHour = value ?? default(int); }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? MonthlyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleMinute = value ?? default(int); }

        /// <summary>Monthly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? MonthlyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleSnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleSnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? MonthlyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleUsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).MonthlyScheduleUsedByte = value ?? default(long); }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyProperties _property;

        /// <summary>Snapshot policy Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.SnapshotPolicyProperties()); set => this._property = value; }

        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.IResourceInternal)__trackedResource).Type; }

        /// <summary>
        /// Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string WeeklyScheduleDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleDay = value ?? null; }

        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? WeeklyScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleHour = value ?? default(int); }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? WeeklyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleMinute = value ?? default(int); }

        /// <summary>Weekly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? WeeklyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleSnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleSnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? WeeklyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleUsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal)Property).WeeklyScheduleUsedByte = value ?? default(long); }

        /// <summary>Creates an new <see cref="SnapshotPolicy" /> instance.</summary>
        public SnapshotPolicy()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Snapshot policy information
    public partial interface ISnapshotPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.ITrackedResource
    {
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which hour in UTC timezone a snapshot should be taken",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyScheduleMinute { get; set; }
        /// <summary>Daily snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Daily snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? DailyScheduleUsedByte { get; set; }
        /// <summary>The property to decide policy is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The property to decide policy is enabled or not",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A unique read-only string that changes whenever the resource is updated.",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(string) })]
        string Etag { get;  }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? HourlyScheduleMinute { get; set; }
        /// <summary>Hourly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Hourly snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? HourlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? HourlyScheduleUsedByte { get; set; }
        /// <summary>
        /// Indicates which days of the month snapshot should be taken. A comma delimited string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which days of the month snapshot should be taken. A comma delimited string.",
        SerializedName = @"daysOfMonth",
        PossibleTypes = new [] { typeof(string) })]
        string MonthlyScheduleDaysOfMonth { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which hour in UTC timezone a snapshot should be taken",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? MonthlyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? MonthlyScheduleMinute { get; set; }
        /// <summary>Monthly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Monthly snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? MonthlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? MonthlyScheduleUsedByte { get; set; }
        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure lifecycle management",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
        SerializedName = @"day",
        PossibleTypes = new [] { typeof(string) })]
        string WeeklyScheduleDay { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which hour in UTC timezone a snapshot should be taken",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyScheduleMinute { get; set; }
        /// <summary>Weekly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Weekly snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? WeeklyScheduleUsedByte { get; set; }

    }
    /// Snapshot policy information
    internal partial interface ISnapshotPolicyInternal :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api40.ITrackedResourceInternal
    {
        /// <summary>Schedule for daily snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailySchedule DailySchedule { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        int? DailyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? DailyScheduleMinute { get; set; }
        /// <summary>Daily snapshot count to keep</summary>
        int? DailyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? DailyScheduleUsedByte { get; set; }
        /// <summary>The property to decide policy is enabled or not</summary>
        bool? Enabled { get; set; }
        /// <summary>A unique read-only string that changes whenever the resource is updated.</summary>
        string Etag { get; set; }
        /// <summary>Schedule for hourly snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlySchedule HourlySchedule { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? HourlyScheduleMinute { get; set; }
        /// <summary>Hourly snapshot count to keep</summary>
        int? HourlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? HourlyScheduleUsedByte { get; set; }
        /// <summary>Schedule for monthly snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlySchedule MonthlySchedule { get; set; }
        /// <summary>
        /// Indicates which days of the month snapshot should be taken. A comma delimited string.
        /// </summary>
        string MonthlyScheduleDaysOfMonth { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        int? MonthlyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? MonthlyScheduleMinute { get; set; }
        /// <summary>Monthly snapshot count to keep</summary>
        int? MonthlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? MonthlyScheduleUsedByte { get; set; }
        /// <summary>Snapshot policy Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyProperties Property { get; set; }
        /// <summary>Azure lifecycle management</summary>
        string ProvisioningState { get; set; }
        /// <summary>Schedule for weekly snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklySchedule WeeklySchedule { get; set; }
        /// <summary>
        /// Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
        /// </summary>
        string WeeklyScheduleDay { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        int? WeeklyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? WeeklyScheduleMinute { get; set; }
        /// <summary>Weekly snapshot count to keep</summary>
        int? WeeklyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? WeeklyScheduleUsedByte { get; set; }

    }
}