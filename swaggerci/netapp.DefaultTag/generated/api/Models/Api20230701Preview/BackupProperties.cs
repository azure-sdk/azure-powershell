// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Backup properties</summary>
    public partial class BackupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPropertiesInternal
    {

        /// <summary>Backing field for <see cref="BackupId" /> property.</summary>
        private string _backupId;

        /// <summary>UUID v4 used to identify the Backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string BackupId { get => this._backupId; }

        /// <summary>Backing field for <see cref="BackupPolicyResourceId" /> property.</summary>
        private string _backupPolicyResourceId;

        /// <summary>ResourceId used to identify the backup policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string BackupPolicyResourceId { get => this._backupPolicyResourceId; }

        /// <summary>Backing field for <see cref="BackupType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.BackupType? _backupType;

        /// <summary>Type of backup Manual or Scheduled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.BackupType? BackupType { get => this._backupType; }

        /// <summary>Backing field for <see cref="CreationDate" /> property.</summary>
        private global::System.DateTime? _creationDate;

        /// <summary>The creation date of the backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public global::System.DateTime? CreationDate { get => this._creationDate; }

        /// <summary>Backing field for <see cref="FailureReason" /> property.</summary>
        private string _failureReason;

        /// <summary>Failure reason</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string FailureReason { get => this._failureReason; }

        /// <summary>Backing field for <see cref="Label" /> property.</summary>
        private string _label;

        /// <summary>Label for backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string Label { get => this._label; set => this._label = value; }

        /// <summary>Internal Acessors for BackupId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPropertiesInternal.BackupId { get => this._backupId; set { {_backupId = value;} } }

        /// <summary>Internal Acessors for BackupPolicyResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPropertiesInternal.BackupPolicyResourceId { get => this._backupPolicyResourceId; set { {_backupPolicyResourceId = value;} } }

        /// <summary>Internal Acessors for BackupType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.BackupType? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPropertiesInternal.BackupType { get => this._backupType; set { {_backupType = value;} } }

        /// <summary>Internal Acessors for CreationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPropertiesInternal.CreationDate { get => this._creationDate; set { {_creationDate = value;} } }

        /// <summary>Internal Acessors for FailureReason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPropertiesInternal.FailureReason { get => this._failureReason; set { {_failureReason = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Size</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPropertiesInternal.Size { get => this._size; set { {_size = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Size" /> property.</summary>
        private long? _size;

        /// <summary>Size of backup in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public long? Size { get => this._size; }

        /// <summary>Backing field for <see cref="SnapshotName" /> property.</summary>
        private string _snapshotName;

        /// <summary>The name of the snapshot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string SnapshotName { get => this._snapshotName; set => this._snapshotName = value; }

        /// <summary>Backing field for <see cref="UseExistingSnapshot" /> property.</summary>
        private bool? _useExistingSnapshot;

        /// <summary>
        /// Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual
        /// backups
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? UseExistingSnapshot { get => this._useExistingSnapshot; set => this._useExistingSnapshot = value; }

        /// <summary>Backing field for <see cref="VolumeResourceId" /> property.</summary>
        private string _volumeResourceId;

        /// <summary>ResourceId used to identify the Volume</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string VolumeResourceId { get => this._volumeResourceId; set => this._volumeResourceId = value; }

        /// <summary>Creates an new <see cref="BackupProperties" /> instance.</summary>
        public BackupProperties()
        {

        }
    }
    /// Backup properties
    public partial interface IBackupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>UUID v4 used to identify the Backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"UUID v4 used to identify the Backup",
        SerializedName = @"backupId",
        PossibleTypes = new [] { typeof(string) })]
        string BackupId { get;  }
        /// <summary>ResourceId used to identify the backup policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ResourceId used to identify the backup policy",
        SerializedName = @"backupPolicyResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string BackupPolicyResourceId { get;  }
        /// <summary>Type of backup Manual or Scheduled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of backup Manual or Scheduled",
        SerializedName = @"backupType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.BackupType) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.BackupType? BackupType { get;  }
        /// <summary>The creation date of the backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation date of the backup",
        SerializedName = @"creationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreationDate { get;  }
        /// <summary>Failure reason</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Failure reason",
        SerializedName = @"failureReason",
        PossibleTypes = new [] { typeof(string) })]
        string FailureReason { get;  }
        /// <summary>Label for backup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Label for backup",
        SerializedName = @"label",
        PossibleTypes = new [] { typeof(string) })]
        string Label { get; set; }
        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure lifecycle management",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Size of backup in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Size of backup in bytes",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(long) })]
        long? Size { get;  }
        /// <summary>The name of the snapshot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the snapshot",
        SerializedName = @"snapshotName",
        PossibleTypes = new [] { typeof(string) })]
        string SnapshotName { get; set; }
        /// <summary>
        /// Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual
        /// backups
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
        SerializedName = @"useExistingSnapshot",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UseExistingSnapshot { get; set; }
        /// <summary>ResourceId used to identify the Volume</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ResourceId used to identify the Volume",
        SerializedName = @"volumeResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string VolumeResourceId { get; set; }

    }
    /// Backup properties
    internal partial interface IBackupPropertiesInternal

    {
        /// <summary>UUID v4 used to identify the Backup</summary>
        string BackupId { get; set; }
        /// <summary>ResourceId used to identify the backup policy</summary>
        string BackupPolicyResourceId { get; set; }
        /// <summary>Type of backup Manual or Scheduled</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.BackupType? BackupType { get; set; }
        /// <summary>The creation date of the backup</summary>
        global::System.DateTime? CreationDate { get; set; }
        /// <summary>Failure reason</summary>
        string FailureReason { get; set; }
        /// <summary>Label for backup</summary>
        string Label { get; set; }
        /// <summary>Azure lifecycle management</summary>
        string ProvisioningState { get; set; }
        /// <summary>Size of backup in bytes</summary>
        long? Size { get; set; }
        /// <summary>The name of the snapshot</summary>
        string SnapshotName { get; set; }
        /// <summary>
        /// Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual
        /// backups
        /// </summary>
        bool? UseExistingSnapshot { get; set; }
        /// <summary>ResourceId used to identify the Volume</summary>
        string VolumeResourceId { get; set; }

    }
}