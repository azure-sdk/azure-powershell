// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Backup policy Details for create and update</summary>
    public partial class BackupPolicyPatch :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPatch,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPatchInternal
    {

        /// <summary>Backup Policy Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string BackupPolicyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).BackupPolicyId; }

        /// <summary>Daily backups count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? DailyBackupsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).DailyBackupsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).DailyBackupsToKeep = value ?? default(int); }

        /// <summary>The property to decide policy is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public bool? Enabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Resource location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for BackupPolicyId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPatchInternal.BackupPolicyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).BackupPolicyId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).BackupPolicyId = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPatchInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPatchInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyProperties Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPatchInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.BackupPolicyProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPatchInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPatchInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for VolumeBackup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackups[] Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPatchInternal.VolumeBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).VolumeBackup; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).VolumeBackup = value; }

        /// <summary>Internal Acessors for VolumesAssigned</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPatchInternal.VolumesAssigned { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).VolumesAssigned; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).VolumesAssigned = value; }

        /// <summary>Monthly backups count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? MonthlyBackupsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).MonthlyBackupsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).MonthlyBackupsToKeep = value ?? default(int); }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyProperties _property;

        /// <summary>Backup policy Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.BackupPolicyProperties()); set => this._property = value; }

        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags _tag;

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ResourceTags()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>A list of volumes assigned to this policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackups[] VolumeBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).VolumeBackup; }

        /// <summary>Volumes using current backup policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? VolumesAssigned { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).VolumesAssigned; }

        /// <summary>Weekly backups count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? WeeklyBackupsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).WeeklyBackupsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyPropertiesInternal)Property).WeeklyBackupsToKeep = value ?? default(int); }

        /// <summary>Creates an new <see cref="BackupPolicyPatch" /> instance.</summary>
        public BackupPolicyPatch()
        {

        }
    }
    /// Backup policy Details for create and update
    public partial interface IBackupPolicyPatch :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Backup Policy Resource ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup Policy Resource ID",
        SerializedName = @"backupPolicyId",
        PossibleTypes = new [] { typeof(string) })]
        string BackupPolicyId { get;  }
        /// <summary>Daily backups count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Daily backups count to keep",
        SerializedName = @"dailyBackupsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyBackupsToKeep { get; set; }
        /// <summary>The property to decide policy is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The property to decide policy is enabled or not",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource Id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Resource location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource location",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>Monthly backups count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Monthly backups count to keep",
        SerializedName = @"monthlyBackupsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? MonthlyBackupsToKeep { get; set; }
        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure lifecycle management",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource tags",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags Tag { get; set; }
        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>A list of volumes assigned to this policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A list of volumes assigned to this policy",
        SerializedName = @"volumeBackups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackups) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackups[] VolumeBackup { get;  }
        /// <summary>Volumes using current backup policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Volumes using current backup policy",
        SerializedName = @"volumesAssigned",
        PossibleTypes = new [] { typeof(int) })]
        int? VolumesAssigned { get;  }
        /// <summary>Weekly backups count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Weekly backups count to keep",
        SerializedName = @"weeklyBackupsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyBackupsToKeep { get; set; }

    }
    /// Backup policy Details for create and update
    internal partial interface IBackupPolicyPatchInternal

    {
        /// <summary>Backup Policy Resource ID</summary>
        string BackupPolicyId { get; set; }
        /// <summary>Daily backups count to keep</summary>
        int? DailyBackupsToKeep { get; set; }
        /// <summary>The property to decide policy is enabled or not</summary>
        bool? Enabled { get; set; }
        /// <summary>Resource Id</summary>
        string Id { get; set; }
        /// <summary>Resource location</summary>
        string Location { get; set; }
        /// <summary>Monthly backups count to keep</summary>
        int? MonthlyBackupsToKeep { get; set; }
        /// <summary>Resource name</summary>
        string Name { get; set; }
        /// <summary>Backup policy Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IBackupPolicyProperties Property { get; set; }
        /// <summary>Azure lifecycle management</summary>
        string ProvisioningState { get; set; }
        /// <summary>Resource tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags Tag { get; set; }
        /// <summary>Resource type</summary>
        string Type { get; set; }
        /// <summary>A list of volumes assigned to this policy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeBackups[] VolumeBackup { get; set; }
        /// <summary>Volumes using current backup policy</summary>
        int? VolumesAssigned { get; set; }
        /// <summary>Weekly backups count to keep</summary>
        int? WeeklyBackupsToKeep { get; set; }

    }
}