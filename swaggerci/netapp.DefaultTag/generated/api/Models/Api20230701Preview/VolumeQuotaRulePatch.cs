// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Patchable Quota Rule of a Volume</summary>
    public partial class VolumeQuotaRulePatch :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulePatch,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulePatchInternal
    {

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesProperties Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulePatchInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumeQuotaRulesProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulePatchInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesProperties _property;

        /// <summary>Volume Quota Rule Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.VolumeQuotaRulesProperties()); set => this._property = value; }

        /// <summary>Gets the status of the VolumeQuotaRule at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Size of quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? QuotaSizeInKiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesPropertiesInternal)Property).QuotaSizeInKiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesPropertiesInternal)Property).QuotaSizeInKiB = value ?? default(long); }

        /// <summary>
        /// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command
        /// for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string QuotaTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesPropertiesInternal)Property).QuotaTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesPropertiesInternal)Property).QuotaTarget = value ?? null; }

        /// <summary>Type of quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.Type? QuotaType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesPropertiesInternal)Property).QuotaType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesPropertiesInternal)Property).QuotaType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.Type)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags _tag;

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ResourceTags()); set => this._tag = value; }

        /// <summary>Creates an new <see cref="VolumeQuotaRulePatch" /> instance.</summary>
        public VolumeQuotaRulePatch()
        {

        }
    }
    /// Patchable Quota Rule of a Volume
    public partial interface IVolumeQuotaRulePatch :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Gets the status of the VolumeQuotaRule at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the status of the VolumeQuotaRule at the time the operation was called.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Size of quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Size of quota",
        SerializedName = @"quotaSizeInKiBs",
        PossibleTypes = new [] { typeof(long) })]
        long? QuotaSizeInKiB { get; set; }
        /// <summary>
        /// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command
        /// for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
        SerializedName = @"quotaTarget",
        PossibleTypes = new [] { typeof(string) })]
        string QuotaTarget { get; set; }
        /// <summary>Type of quota</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of quota",
        SerializedName = @"quotaType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.Type) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.Type? QuotaType { get; set; }
        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource tags",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags Tag { get; set; }

    }
    /// Patchable Quota Rule of a Volume
    internal partial interface IVolumeQuotaRulePatchInternal

    {
        /// <summary>Volume Quota Rule Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IVolumeQuotaRulesProperties Property { get; set; }
        /// <summary>Gets the status of the VolumeQuotaRule at the time the operation was called.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Size of quota</summary>
        long? QuotaSizeInKiB { get; set; }
        /// <summary>
        /// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command
        /// for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
        /// </summary>
        string QuotaTarget { get; set; }
        /// <summary>Type of quota</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.Type? QuotaType { get; set; }
        /// <summary>Resource tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IResourceTags Tag { get; set; }

    }
}