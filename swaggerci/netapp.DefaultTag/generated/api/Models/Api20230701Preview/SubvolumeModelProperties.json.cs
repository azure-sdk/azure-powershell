// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>
    /// Properties which represents actual subvolume model which is stored as a file in the system.
    /// </summary>
    public partial class SubvolumeModelProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISubvolumeModelProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISubvolumeModelProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISubvolumeModelProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json ? new SubvolumeModelProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject into a new instance of <see cref="SubvolumeModelProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal SubvolumeModelProperties(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_path = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("path"), out var __jsonPath) ? (string)__jsonPath : (string)Path;}
            {_parentPath = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("parentPath"), out var __jsonParentPath) ? (string)__jsonParentPath : (string)ParentPath;}
            {_size = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber>("size"), out var __jsonSize) ? (long?)__jsonSize : Size;}
            {_bytesUsed = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber>("bytesUsed"), out var __jsonBytesUsed) ? (long?)__jsonBytesUsed : BytesUsed;}
            {_permission = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("permissions"), out var __jsonPermissions) ? (string)__jsonPermissions : (string)Permission;}
            {_creationTimeStamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("creationTimeStamp"), out var __jsonCreationTimeStamp) ? global::System.DateTime.TryParse((string)__jsonCreationTimeStamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreationTimeStampValue) ? __jsonCreationTimeStampValue : CreationTimeStamp : CreationTimeStamp;}
            {_accessedTimeStamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("accessedTimeStamp"), out var __jsonAccessedTimeStamp) ? global::System.DateTime.TryParse((string)__jsonAccessedTimeStamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonAccessedTimeStampValue) ? __jsonAccessedTimeStampValue : AccessedTimeStamp : AccessedTimeStamp;}
            {_modifiedTimeStamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("modifiedTimeStamp"), out var __jsonModifiedTimeStamp) ? global::System.DateTime.TryParse((string)__jsonModifiedTimeStamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonModifiedTimeStampValue) ? __jsonModifiedTimeStampValue : ModifiedTimeStamp : ModifiedTimeStamp;}
            {_changedTimeStamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("changedTimeStamp"), out var __jsonChangedTimeStamp) ? global::System.DateTime.TryParse((string)__jsonChangedTimeStamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonChangedTimeStampValue) ? __jsonChangedTimeStampValue : ChangedTimeStamp : ChangedTimeStamp;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="SubvolumeModelProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="SubvolumeModelProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._path)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._path.ToString()) : null, "path" ,container.Add );
            AddIf( null != (((object)this._parentPath)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._parentPath.ToString()) : null, "parentPath" ,container.Add );
            AddIf( null != this._size ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber((long)this._size) : null, "size" ,container.Add );
            AddIf( null != this._bytesUsed ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNumber((long)this._bytesUsed) : null, "bytesUsed" ,container.Add );
            AddIf( null != (((object)this._permission)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._permission.ToString()) : null, "permissions" ,container.Add );
            AddIf( null != this._creationTimeStamp ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._creationTimeStamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "creationTimeStamp" ,container.Add );
            AddIf( null != this._accessedTimeStamp ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._accessedTimeStamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "accessedTimeStamp" ,container.Add );
            AddIf( null != this._modifiedTimeStamp ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._modifiedTimeStamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "modifiedTimeStamp" ,container.Add );
            AddIf( null != this._changedTimeStamp ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._changedTimeStamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "changedTimeStamp" ,container.Add );
            AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}