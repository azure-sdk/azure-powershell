// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Snapshot policy properties</summary>
    public partial class SnapshotPolicyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DailySchedule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailySchedule _dailySchedule;

        /// <summary>Schedule for daily snapshots</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailySchedule DailySchedule { get => (this._dailySchedule = this._dailySchedule ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.DailySchedule()); set => this._dailySchedule = value; }

        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? DailyScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailyScheduleInternal)DailySchedule).Hour; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailyScheduleInternal)DailySchedule).Hour = value ?? default(int); }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? DailyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailyScheduleInternal)DailySchedule).Minute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailyScheduleInternal)DailySchedule).Minute = value ?? default(int); }

        /// <summary>Daily snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? DailyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailyScheduleInternal)DailySchedule).SnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailyScheduleInternal)DailySchedule).SnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? DailyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailyScheduleInternal)DailySchedule).UsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailyScheduleInternal)DailySchedule).UsedByte = value ?? default(long); }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>The property to decide policy is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="HourlySchedule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlySchedule _hourlySchedule;

        /// <summary>Schedule for hourly snapshots</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlySchedule HourlySchedule { get => (this._hourlySchedule = this._hourlySchedule ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.HourlySchedule()); set => this._hourlySchedule = value; }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? HourlyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlyScheduleInternal)HourlySchedule).Minute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlyScheduleInternal)HourlySchedule).Minute = value ?? default(int); }

        /// <summary>Hourly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? HourlyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlyScheduleInternal)HourlySchedule).SnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlyScheduleInternal)HourlySchedule).SnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? HourlyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlyScheduleInternal)HourlySchedule).UsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlyScheduleInternal)HourlySchedule).UsedByte = value ?? default(long); }

        /// <summary>Internal Acessors for DailySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal.DailySchedule { get => (this._dailySchedule = this._dailySchedule ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.DailySchedule()); set { {_dailySchedule = value;} } }

        /// <summary>Internal Acessors for HourlySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal.HourlySchedule { get => (this._hourlySchedule = this._hourlySchedule ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.HourlySchedule()); set { {_hourlySchedule = value;} } }

        /// <summary>Internal Acessors for MonthlySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal.MonthlySchedule { get => (this._monthlySchedule = this._monthlySchedule ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.MonthlySchedule()); set { {_monthlySchedule = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for WeeklySchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklySchedule Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.ISnapshotPolicyPropertiesInternal.WeeklySchedule { get => (this._weeklySchedule = this._weeklySchedule ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.WeeklySchedule()); set { {_weeklySchedule = value;} } }

        /// <summary>Backing field for <see cref="MonthlySchedule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlySchedule _monthlySchedule;

        /// <summary>Schedule for monthly snapshots</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlySchedule MonthlySchedule { get => (this._monthlySchedule = this._monthlySchedule ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.MonthlySchedule()); set => this._monthlySchedule = value; }

        /// <summary>
        /// Indicates which days of the month snapshot should be taken. A comma delimited string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string MonthlyScheduleDaysOfMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlyScheduleInternal)MonthlySchedule).DaysOfMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlyScheduleInternal)MonthlySchedule).DaysOfMonth = value ?? null; }

        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? MonthlyScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlyScheduleInternal)MonthlySchedule).Hour; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlyScheduleInternal)MonthlySchedule).Hour = value ?? default(int); }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? MonthlyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlyScheduleInternal)MonthlySchedule).Minute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlyScheduleInternal)MonthlySchedule).Minute = value ?? default(int); }

        /// <summary>Monthly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? MonthlyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlyScheduleInternal)MonthlySchedule).SnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlyScheduleInternal)MonthlySchedule).SnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? MonthlyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlyScheduleInternal)MonthlySchedule).UsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlyScheduleInternal)MonthlySchedule).UsedByte = value ?? default(long); }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="WeeklySchedule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklySchedule _weeklySchedule;

        /// <summary>Schedule for weekly snapshots</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklySchedule WeeklySchedule { get => (this._weeklySchedule = this._weeklySchedule ?? new Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.WeeklySchedule()); set => this._weeklySchedule = value; }

        /// <summary>
        /// Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public string WeeklyScheduleDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklyScheduleInternal)WeeklySchedule).Day; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklyScheduleInternal)WeeklySchedule).Day = value ?? null; }

        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? WeeklyScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklyScheduleInternal)WeeklySchedule).Hour; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklyScheduleInternal)WeeklySchedule).Hour = value ?? default(int); }

        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? WeeklyScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklyScheduleInternal)WeeklySchedule).Minute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklyScheduleInternal)WeeklySchedule).Minute = value ?? default(int); }

        /// <summary>Weekly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public int? WeeklyScheduleSnapshotsToKeep { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklyScheduleInternal)WeeklySchedule).SnapshotsToKeep; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklyScheduleInternal)WeeklySchedule).SnapshotsToKeep = value ?? default(int); }

        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Inlined)]
        public long? WeeklyScheduleUsedByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklyScheduleInternal)WeeklySchedule).UsedByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklyScheduleInternal)WeeklySchedule).UsedByte = value ?? default(long); }

        /// <summary>Creates an new <see cref="SnapshotPolicyProperties" /> instance.</summary>
        public SnapshotPolicyProperties()
        {

        }
    }
    /// Snapshot policy properties
    public partial interface ISnapshotPolicyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which hour in UTC timezone a snapshot should be taken",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyScheduleMinute { get; set; }
        /// <summary>Daily snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Daily snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? DailyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? DailyScheduleUsedByte { get; set; }
        /// <summary>The property to decide policy is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The property to decide policy is enabled or not",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? HourlyScheduleMinute { get; set; }
        /// <summary>Hourly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Hourly snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? HourlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? HourlyScheduleUsedByte { get; set; }
        /// <summary>
        /// Indicates which days of the month snapshot should be taken. A comma delimited string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which days of the month snapshot should be taken. A comma delimited string.",
        SerializedName = @"daysOfMonth",
        PossibleTypes = new [] { typeof(string) })]
        string MonthlyScheduleDaysOfMonth { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which hour in UTC timezone a snapshot should be taken",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? MonthlyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? MonthlyScheduleMinute { get; set; }
        /// <summary>Monthly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Monthly snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? MonthlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? MonthlyScheduleUsedByte { get; set; }
        /// <summary>Azure lifecycle management</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure lifecycle management",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
        SerializedName = @"day",
        PossibleTypes = new [] { typeof(string) })]
        string WeeklyScheduleDay { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which hour in UTC timezone a snapshot should be taken",
        SerializedName = @"hour",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates which minute snapshot should be taken",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyScheduleMinute { get; set; }
        /// <summary>Weekly snapshot count to keep</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Weekly snapshot count to keep",
        SerializedName = @"snapshotsToKeep",
        PossibleTypes = new [] { typeof(int) })]
        int? WeeklyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource size in bytes, current storage usage for the volume in bytes",
        SerializedName = @"usedBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? WeeklyScheduleUsedByte { get; set; }

    }
    /// Snapshot policy properties
    internal partial interface ISnapshotPolicyPropertiesInternal

    {
        /// <summary>Schedule for daily snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IDailySchedule DailySchedule { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        int? DailyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? DailyScheduleMinute { get; set; }
        /// <summary>Daily snapshot count to keep</summary>
        int? DailyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? DailyScheduleUsedByte { get; set; }
        /// <summary>The property to decide policy is enabled or not</summary>
        bool? Enabled { get; set; }
        /// <summary>Schedule for hourly snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IHourlySchedule HourlySchedule { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? HourlyScheduleMinute { get; set; }
        /// <summary>Hourly snapshot count to keep</summary>
        int? HourlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? HourlyScheduleUsedByte { get; set; }
        /// <summary>Schedule for monthly snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IMonthlySchedule MonthlySchedule { get; set; }
        /// <summary>
        /// Indicates which days of the month snapshot should be taken. A comma delimited string.
        /// </summary>
        string MonthlyScheduleDaysOfMonth { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        int? MonthlyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? MonthlyScheduleMinute { get; set; }
        /// <summary>Monthly snapshot count to keep</summary>
        int? MonthlyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? MonthlyScheduleUsedByte { get; set; }
        /// <summary>Azure lifecycle management</summary>
        string ProvisioningState { get; set; }
        /// <summary>Schedule for weekly snapshots</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IWeeklySchedule WeeklySchedule { get; set; }
        /// <summary>
        /// Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
        /// </summary>
        string WeeklyScheduleDay { get; set; }
        /// <summary>Indicates which hour in UTC timezone a snapshot should be taken</summary>
        int? WeeklyScheduleHour { get; set; }
        /// <summary>Indicates which minute snapshot should be taken</summary>
        int? WeeklyScheduleMinute { get; set; }
        /// <summary>Weekly snapshot count to keep</summary>
        int? WeeklyScheduleSnapshotsToKeep { get; set; }
        /// <summary>Resource size in bytes, current storage usage for the volume in bytes</summary>
        long? WeeklyScheduleUsedByte { get; set; }

    }
}