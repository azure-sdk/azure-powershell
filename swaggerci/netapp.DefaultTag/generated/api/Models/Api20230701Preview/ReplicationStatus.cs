// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Extensions;

    /// <summary>Replication status</summary>
    public partial class ReplicationStatus :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationStatus,
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Models.Api20230701Preview.IReplicationStatusInternal
    {

        /// <summary>Backing field for <see cref="ErrorMessage" /> property.</summary>
        private string _errorMessage;

        /// <summary>Displays error message if the replication is in an error state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string ErrorMessage { get => this._errorMessage; set => this._errorMessage = value; }

        /// <summary>Backing field for <see cref="Healthy" /> property.</summary>
        private bool? _healthy;

        /// <summary>Replication health check</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public bool? Healthy { get => this._healthy; set => this._healthy = value; }

        /// <summary>Backing field for <see cref="MirrorState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? _mirrorState;

        /// <summary>The status of the replication</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? MirrorState { get => this._mirrorState; set => this._mirrorState = value; }

        /// <summary>Backing field for <see cref="RelationshipStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? _relationshipStatus;

        /// <summary>Status of the mirror relationship</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? RelationshipStatus { get => this._relationshipStatus; set => this._relationshipStatus = value; }

        /// <summary>Backing field for <see cref="TotalProgress" /> property.</summary>
        private string _totalProgress;

        /// <summary>The progress of the replication</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetApp.PropertyOrigin.Owned)]
        public string TotalProgress { get => this._totalProgress; set => this._totalProgress = value; }

        /// <summary>Creates an new <see cref="ReplicationStatus" /> instance.</summary>
        public ReplicationStatus()
        {

        }
    }
    /// Replication status
    public partial interface IReplicationStatus :
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.IJsonSerializable
    {
        /// <summary>Displays error message if the replication is in an error state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Displays error message if the replication is in an error state",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorMessage { get; set; }
        /// <summary>Replication health check</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Replication health check",
        SerializedName = @"healthy",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Healthy { get; set; }
        /// <summary>The status of the replication</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status of the replication",
        SerializedName = @"mirrorState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? MirrorState { get; set; }
        /// <summary>Status of the mirror relationship</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of the mirror relationship",
        SerializedName = @"relationshipStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? RelationshipStatus { get; set; }
        /// <summary>The progress of the replication</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetApp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The progress of the replication",
        SerializedName = @"totalProgress",
        PossibleTypes = new [] { typeof(string) })]
        string TotalProgress { get; set; }

    }
    /// Replication status
    internal partial interface IReplicationStatusInternal

    {
        /// <summary>Displays error message if the replication is in an error state</summary>
        string ErrorMessage { get; set; }
        /// <summary>Replication health check</summary>
        bool? Healthy { get; set; }
        /// <summary>The status of the replication</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.MirrorState? MirrorState { get; set; }
        /// <summary>Status of the mirror relationship</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetApp.Support.RelationshipStatus? RelationshipStatus { get; set; }
        /// <summary>The progress of the replication</summary>
        string TotalProgress { get; set; }

    }
}