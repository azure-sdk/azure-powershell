// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Extensions;

    /// <summary>Properties of event.</summary>
    public partial class EventProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AdditionalInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesAdditionalInformation _additionalInformation;

        /// <summary>Additional information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesAdditionalInformation AdditionalInformation { get => (this._additionalInformation = this._additionalInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.EventPropertiesAdditionalInformation()); set => this._additionalInformation = value; }

        /// <summary>Additional information Message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string AdditionalInformationMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesAdditionalInformationInternal)AdditionalInformation).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesAdditionalInformationInternal)AdditionalInformation).Message = value ?? null; }

        /// <summary>Backing field for <see cref="Article" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesArticle _article;

        /// <summary>Article of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesArticle Article { get => (this._article = this._article ?? new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.EventPropertiesArticle()); set => this._article = value; }

        /// <summary>Article content of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string ArticleContent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesArticleInternal)Article).ArticleContent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesArticleInternal)Article).ArticleContent = value ?? null; }

        /// <summary>Article Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string ArticleId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesArticleInternal)Article).ArticleId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesArticleInternal)Article).ArticleId = value ?? null; }

        /// <summary>It provides a map of parameter name and value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.IAny ArticleParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesArticleInternal)Article).Parameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesArticleInternal)Article).Parameter = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>
        /// Contains the communication message for the event, that could include summary, root cause and other details. Use fetchEventDetails
        /// endpoint to get description of sensitive events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="Duration" /> property.</summary>
        private int? _duration;

        /// <summary>duration in seconds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public int? Duration { get => this._duration; set => this._duration = value; }

        /// <summary>Backing field for <see cref="EnableChatWithUs" /> property.</summary>
        private bool? _enableChatWithUs;

        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public bool? EnableChatWithUs { get => this._enableChatWithUs; set => this._enableChatWithUs = value; }

        /// <summary>Backing field for <see cref="EnableMicrosoftSupport" /> property.</summary>
        private bool? _enableMicrosoftSupport;

        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public bool? EnableMicrosoftSupport { get => this._enableMicrosoftSupport; set => this._enableMicrosoftSupport = value; }

        /// <summary>Backing field for <see cref="EventLevel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventLevelValues? _eventLevel;

        /// <summary>Level of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventLevelValues? EventLevel { get => this._eventLevel; set => this._eventLevel = value; }

        /// <summary>Backing field for <see cref="EventSource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventSourceValues? _eventSource;

        /// <summary>Source of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventSourceValues? EventSource { get => this._eventSource; set => this._eventSource = value; }

        /// <summary>Backing field for <see cref="EventTag" /> property.</summary>
        private string[] _eventTag;

        /// <summary>
        /// A list of metadata tags associated with the event. Possible values include:
        /// -Action Recommended: Action may be required by you to avoid possible disruptions or mitigate risks for your services.
        /// It is recommended to evaluate these actions and the potential impact on your services.
        /// - False Positive: After investigation, we've determined your service is healthy and service issues did not impact your
        /// services as originally communicated.
        /// - Preliminary PIR: For our largest, most impactful service issues a Preliminary Post Incident Review (PIR) is published
        /// generally within 72 hours of mitigation, to summarize what we have learned so far from the still-in-progress investigation.
        /// - Final PIR: For service issues, a Final Post Incident Review (PIR) may be published to provide additional details or
        /// learnings. Sometimes this requires us to complete an internal retrospective, generally within 14 days of mitigation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string[] EventTag { get => this._eventTag; set => this._eventTag = value; }

        /// <summary>Backing field for <see cref="EventType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventTypeValues? _eventType;

        /// <summary>Type of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventTypeValues? EventType { get => this._eventType; set => this._eventType = value; }

        /// <summary>Backing field for <see cref="ExternalIncidentId" /> property.</summary>
        private string _externalIncidentId;

        /// <summary>The id of the Incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string ExternalIncidentId { get => this._externalIncidentId; set => this._externalIncidentId = value; }

        /// <summary>Backing field for <see cref="Faq" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IFaq[] _faq;

        /// <summary>Frequently asked questions for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IFaq[] Faq { get => this._faq; set => this._faq = value; }

        /// <summary>Backing field for <see cref="Header" /> property.</summary>
        private string _header;

        /// <summary>Header text of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string Header { get => this._header; set => this._header = value; }

        /// <summary>Backing field for <see cref="HirStage" /> property.</summary>
        private string _hirStage;

        /// <summary>Stage for HIR Document</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string HirStage { get => this._hirStage; set => this._hirStage = value; }

        /// <summary>Backing field for <see cref="Impact" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IImpact[] _impact;

        /// <summary>List services impacted by the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IImpact[] Impact { get => this._impact; set => this._impact = value; }

        /// <summary>Backing field for <see cref="ImpactMitigationTime" /> property.</summary>
        private global::System.DateTime? _impactMitigationTime;

        /// <summary>It provides the Timestamp for when the health impacting event resolved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public global::System.DateTime? ImpactMitigationTime { get => this._impactMitigationTime; set => this._impactMitigationTime = value; }

        /// <summary>Backing field for <see cref="ImpactStartTime" /> property.</summary>
        private global::System.DateTime? _impactStartTime;

        /// <summary>It provides the Timestamp for when the health impacting event started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public global::System.DateTime? ImpactStartTime { get => this._impactStartTime; set => this._impactStartTime = value; }

        /// <summary>Backing field for <see cref="ImpactType" /> property.</summary>
        private string _impactType;

        /// <summary>The type of the impact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string ImpactType { get => this._impactType; set => this._impactType = value; }

        /// <summary>Backing field for <see cref="IsEventSensitive" /> property.</summary>
        private bool? _isEventSensitive;

        /// <summary>
        /// If true the event may contains sensitive data. Use the post events/{trackingId}/fetchEventDetails endpoint to fetch sensitive
        /// data see https://learn.microsoft.com/en-us/azure/service-health/security-advisories-elevated-access
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public bool? IsEventSensitive { get => this._isEventSensitive; set => this._isEventSensitive = value; }

        /// <summary>Backing field for <see cref="IsHir" /> property.</summary>
        private bool? _isHir;

        /// <summary>It provides information if the event is High incident rate event or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public bool? IsHir { get => this._isHir; set => this._isHir = value; }

        /// <summary>Backing field for <see cref="LastUpdateTime" /> property.</summary>
        private global::System.DateTime? _lastUpdateTime;

        /// <summary>It provides the Timestamp for when the health impacting event was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUpdateTime { get => this._lastUpdateTime; set => this._lastUpdateTime = value; }

        /// <summary>Backing field for <see cref="Level" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.LevelValues? _level;

        /// <summary>Level of insight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.LevelValues? Level { get => this._level; set => this._level = value; }

        /// <summary>Backing field for <see cref="Link" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.ILink[] _link;

        /// <summary>Useful links of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.ILink[] Link { get => this._link; set => this._link = value; }

        /// <summary>Internal Acessors for AdditionalInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesAdditionalInformation Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesInternal.AdditionalInformation { get => (this._additionalInformation = this._additionalInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.EventPropertiesAdditionalInformation()); set { {_additionalInformation = value;} } }

        /// <summary>Internal Acessors for Article</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesArticle Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesInternal.Article { get => (this._article = this._article ?? new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.EventPropertiesArticle()); set { {_article = value;} } }

        /// <summary>Internal Acessors for RecommendedAction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActions Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesInternal.RecommendedAction { get => (this._recommendedAction = this._recommendedAction ?? new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.EventPropertiesRecommendedActions()); set { {_recommendedAction = value;} } }

        /// <summary>Backing field for <see cref="PlatformInitiated" /> property.</summary>
        private bool? _platformInitiated;

        /// <summary>Is true if the event is platform initiated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public bool? PlatformInitiated { get => this._platformInitiated; set => this._platformInitiated = value; }

        /// <summary>Backing field for <see cref="Priority" /> property.</summary>
        private int? _priority;

        /// <summary>
        /// Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority
        /// followed by planned maintenance and health advisory. Critical events have higher priority followed by error, warning and
        /// informational. Furthermore, active events have higher priority than resolved.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public int? Priority { get => this._priority; set => this._priority = value; }

        /// <summary>Backing field for <see cref="Reason" /> property.</summary>
        private string _reason;

        /// <summary>The reason for the Incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string Reason { get => this._reason; set => this._reason = value; }

        /// <summary>Backing field for <see cref="RecommendedAction" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActions _recommendedAction;

        /// <summary>Recommended actions of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActions RecommendedAction { get => (this._recommendedAction = this._recommendedAction ?? new Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.EventPropertiesRecommendedActions()); set => this._recommendedAction = value; }

        /// <summary>Recommended action locale for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string RecommendedActionLocaleCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActionsInternal)RecommendedAction).LocaleCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActionsInternal)RecommendedAction).LocaleCode = value ?? null; }

        /// <summary>Recommended action title for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public string RecommendedActionMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActionsInternal)RecommendedAction).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActionsInternal)RecommendedAction).Message = value ?? null; }

        /// <summary>Recommended actions for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActionsItem[] RecommendedActionsActions { get => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActionsInternal)RecommendedAction).Action; set => ((Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActionsInternal)RecommendedAction).Action = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventStatusValues? _status;

        /// <summary>Current status of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventStatusValues? Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="Summary" /> property.</summary>
        private string _summary;

        /// <summary>
        /// Summary text of event. Use fetchEventDetails endpoint to get summary of sensitive events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string Summary { get => this._summary; set => this._summary = value; }

        /// <summary>Backing field for <see cref="Title" /> property.</summary>
        private string _title;

        /// <summary>Title text of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Origin(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.PropertyOrigin.Owned)]
        public string Title { get => this._title; set => this._title = value; }

        /// <summary>Creates an new <see cref="EventProperties" /> instance.</summary>
        public EventProperties()
        {

        }
    }
    /// Properties of event.
    public partial interface IEventProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.IJsonSerializable
    {
        /// <summary>Additional information Message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional information Message",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalInformationMessage { get; set; }
        /// <summary>Article content of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Article content of event.",
        SerializedName = @"articleContent",
        PossibleTypes = new [] { typeof(string) })]
        string ArticleContent { get; set; }
        /// <summary>Article Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Article Id",
        SerializedName = @"articleId",
        PossibleTypes = new [] { typeof(string) })]
        string ArticleId { get; set; }
        /// <summary>It provides a map of parameter name and value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It provides a map of parameter name and value",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.IAny ArticleParameter { get; set; }
        /// <summary>
        /// Contains the communication message for the event, that could include summary, root cause and other details. Use fetchEventDetails
        /// endpoint to get description of sensitive events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Contains the communication message for the event, that could include summary, root cause and other details. Use fetchEventDetails endpoint to get description of sensitive events.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>duration in seconds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"duration in seconds",
        SerializedName = @"duration",
        PossibleTypes = new [] { typeof(int) })]
        int? Duration { get; set; }
        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells if we want to enable or disable Microsoft Support for this event.",
        SerializedName = @"enableChatWithUs",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableChatWithUs { get; set; }
        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells if we want to enable or disable Microsoft Support for this event.",
        SerializedName = @"enableMicrosoftSupport",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableMicrosoftSupport { get; set; }
        /// <summary>Level of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of event.",
        SerializedName = @"eventLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventLevelValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventLevelValues? EventLevel { get; set; }
        /// <summary>Source of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Source of event.",
        SerializedName = @"eventSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventSourceValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventSourceValues? EventSource { get; set; }
        /// <summary>
        /// A list of metadata tags associated with the event. Possible values include:
        /// -Action Recommended: Action may be required by you to avoid possible disruptions or mitigate risks for your services.
        /// It is recommended to evaluate these actions and the potential impact on your services.
        /// - False Positive: After investigation, we've determined your service is healthy and service issues did not impact your
        /// services as originally communicated.
        /// - Preliminary PIR: For our largest, most impactful service issues a Preliminary Post Incident Review (PIR) is published
        /// generally within 72 hours of mitigation, to summarize what we have learned so far from the still-in-progress investigation.
        /// - Final PIR: For service issues, a Final Post Incident Review (PIR) may be published to provide additional details or
        /// learnings. Sometimes this requires us to complete an internal retrospective, generally within 14 days of mitigation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of metadata tags associated with the event. Possible values include:
         -Action Recommended: Action may be required by you to avoid possible disruptions or mitigate risks for your services. It is recommended to evaluate these actions and the potential impact on your services.
        - False Positive: After investigation, we've determined your service is healthy and service issues did not impact your services as originally communicated.
        - Preliminary PIR: For our largest, most impactful service issues a Preliminary Post Incident Review (PIR) is published generally within 72 hours of mitigation, to summarize what we have learned so far from the still-in-progress investigation.
        - Final PIR: For service issues, a Final Post Incident Review (PIR) may be published to provide additional details or learnings. Sometimes this requires us to complete an internal retrospective, generally within 14 days of mitigation.",
        SerializedName = @"eventTags",
        PossibleTypes = new [] { typeof(string) })]
        string[] EventTag { get; set; }
        /// <summary>Type of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of event.",
        SerializedName = @"eventType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventTypeValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventTypeValues? EventType { get; set; }
        /// <summary>The id of the Incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of the Incident",
        SerializedName = @"externalIncidentId",
        PossibleTypes = new [] { typeof(string) })]
        string ExternalIncidentId { get; set; }
        /// <summary>Frequently asked questions for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Frequently asked questions for the service health event.",
        SerializedName = @"faqs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IFaq) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IFaq[] Faq { get; set; }
        /// <summary>Header text of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Header text of event.",
        SerializedName = @"header",
        PossibleTypes = new [] { typeof(string) })]
        string Header { get; set; }
        /// <summary>Stage for HIR Document</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Stage for HIR Document",
        SerializedName = @"hirStage",
        PossibleTypes = new [] { typeof(string) })]
        string HirStage { get; set; }
        /// <summary>List services impacted by the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List services impacted by the service health event.",
        SerializedName = @"impact",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IImpact) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IImpact[] Impact { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event resolved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It provides the Timestamp for when the health impacting event resolved.",
        SerializedName = @"impactMitigationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ImpactMitigationTime { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It provides the Timestamp for when the health impacting event started.",
        SerializedName = @"impactStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ImpactStartTime { get; set; }
        /// <summary>The type of the impact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the impact",
        SerializedName = @"impactType",
        PossibleTypes = new [] { typeof(string) })]
        string ImpactType { get; set; }
        /// <summary>
        /// If true the event may contains sensitive data. Use the post events/{trackingId}/fetchEventDetails endpoint to fetch sensitive
        /// data see https://learn.microsoft.com/en-us/azure/service-health/security-advisories-elevated-access
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If true the event may contains sensitive data. Use the post events/{trackingId}/fetchEventDetails endpoint to fetch sensitive data see https://learn.microsoft.com/en-us/azure/service-health/security-advisories-elevated-access",
        SerializedName = @"isEventSensitive",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEventSensitive { get; set; }
        /// <summary>It provides information if the event is High incident rate event or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It provides information if the event is High incident rate event or not.",
        SerializedName = @"isHIR",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsHir { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It provides the Timestamp for when the health impacting event was last updated.",
        SerializedName = @"lastUpdateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdateTime { get; set; }
        /// <summary>Level of insight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of insight.",
        SerializedName = @"level",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.LevelValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.LevelValues? Level { get; set; }
        /// <summary>Useful links of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Useful links of event.",
        SerializedName = @"links",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.ILink) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.ILink[] Link { get; set; }
        /// <summary>Is true if the event is platform initiated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is true if the event is platform initiated.",
        SerializedName = @"platformInitiated",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PlatformInitiated { get; set; }
        /// <summary>
        /// Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority
        /// followed by planned maintenance and health advisory. Critical events have higher priority followed by error, warning and
        /// informational. Furthermore, active events have higher priority than resolved.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority followed by planned maintenance and health advisory. Critical events have higher priority followed by error, warning and informational. Furthermore, active events have higher priority than resolved.",
        SerializedName = @"priority",
        PossibleTypes = new [] { typeof(int) })]
        int? Priority { get; set; }
        /// <summary>The reason for the Incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The reason for the Incident",
        SerializedName = @"reason",
        PossibleTypes = new [] { typeof(string) })]
        string Reason { get; set; }
        /// <summary>Recommended action locale for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recommended action locale for the service health event.",
        SerializedName = @"localeCode",
        PossibleTypes = new [] { typeof(string) })]
        string RecommendedActionLocaleCode { get; set; }
        /// <summary>Recommended action title for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recommended action title for the service health event.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string RecommendedActionMessage { get; set; }
        /// <summary>Recommended actions for the service health event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recommended actions for the service health event.",
        SerializedName = @"actions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActionsItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActionsItem[] RecommendedActionsActions { get; set; }
        /// <summary>Current status of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Current status of event.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventStatusValues) })]
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventStatusValues? Status { get; set; }
        /// <summary>
        /// Summary text of event. Use fetchEventDetails endpoint to get summary of sensitive events.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Summary text of event. Use fetchEventDetails endpoint to get summary of sensitive events.",
        SerializedName = @"summary",
        PossibleTypes = new [] { typeof(string) })]
        string Summary { get; set; }
        /// <summary>Title text of event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Title text of event.",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get; set; }

    }
    /// Properties of event.
    internal partial interface IEventPropertiesInternal

    {
        /// <summary>Additional information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesAdditionalInformation AdditionalInformation { get; set; }
        /// <summary>Additional information Message</summary>
        string AdditionalInformationMessage { get; set; }
        /// <summary>Article of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesArticle Article { get; set; }
        /// <summary>Article content of event.</summary>
        string ArticleContent { get; set; }
        /// <summary>Article Id</summary>
        string ArticleId { get; set; }
        /// <summary>It provides a map of parameter name and value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.IAny ArticleParameter { get; set; }
        /// <summary>
        /// Contains the communication message for the event, that could include summary, root cause and other details. Use fetchEventDetails
        /// endpoint to get description of sensitive events.
        /// </summary>
        string Description { get; set; }
        /// <summary>duration in seconds</summary>
        int? Duration { get; set; }
        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        bool? EnableChatWithUs { get; set; }
        /// <summary>Tells if we want to enable or disable Microsoft Support for this event.</summary>
        bool? EnableMicrosoftSupport { get; set; }
        /// <summary>Level of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventLevelValues? EventLevel { get; set; }
        /// <summary>Source of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventSourceValues? EventSource { get; set; }
        /// <summary>
        /// A list of metadata tags associated with the event. Possible values include:
        /// -Action Recommended: Action may be required by you to avoid possible disruptions or mitigate risks for your services.
        /// It is recommended to evaluate these actions and the potential impact on your services.
        /// - False Positive: After investigation, we've determined your service is healthy and service issues did not impact your
        /// services as originally communicated.
        /// - Preliminary PIR: For our largest, most impactful service issues a Preliminary Post Incident Review (PIR) is published
        /// generally within 72 hours of mitigation, to summarize what we have learned so far from the still-in-progress investigation.
        /// - Final PIR: For service issues, a Final Post Incident Review (PIR) may be published to provide additional details or
        /// learnings. Sometimes this requires us to complete an internal retrospective, generally within 14 days of mitigation.
        /// </summary>
        string[] EventTag { get; set; }
        /// <summary>Type of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventTypeValues? EventType { get; set; }
        /// <summary>The id of the Incident</summary>
        string ExternalIncidentId { get; set; }
        /// <summary>Frequently asked questions for the service health event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IFaq[] Faq { get; set; }
        /// <summary>Header text of event.</summary>
        string Header { get; set; }
        /// <summary>Stage for HIR Document</summary>
        string HirStage { get; set; }
        /// <summary>List services impacted by the service health event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IImpact[] Impact { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event resolved.</summary>
        global::System.DateTime? ImpactMitigationTime { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event started.</summary>
        global::System.DateTime? ImpactStartTime { get; set; }
        /// <summary>The type of the impact</summary>
        string ImpactType { get; set; }
        /// <summary>
        /// If true the event may contains sensitive data. Use the post events/{trackingId}/fetchEventDetails endpoint to fetch sensitive
        /// data see https://learn.microsoft.com/en-us/azure/service-health/security-advisories-elevated-access
        /// </summary>
        bool? IsEventSensitive { get; set; }
        /// <summary>It provides information if the event is High incident rate event or not.</summary>
        bool? IsHir { get; set; }
        /// <summary>It provides the Timestamp for when the health impacting event was last updated.</summary>
        global::System.DateTime? LastUpdateTime { get; set; }
        /// <summary>Level of insight.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.LevelValues? Level { get; set; }
        /// <summary>Useful links of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.ILink[] Link { get; set; }
        /// <summary>Is true if the event is platform initiated.</summary>
        bool? PlatformInitiated { get; set; }
        /// <summary>
        /// Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority
        /// followed by planned maintenance and health advisory. Critical events have higher priority followed by error, warning and
        /// informational. Furthermore, active events have higher priority than resolved.
        /// </summary>
        int? Priority { get; set; }
        /// <summary>The reason for the Incident</summary>
        string Reason { get; set; }
        /// <summary>Recommended actions of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActions RecommendedAction { get; set; }
        /// <summary>Recommended action locale for the service health event.</summary>
        string RecommendedActionLocaleCode { get; set; }
        /// <summary>Recommended action title for the service health event.</summary>
        string RecommendedActionMessage { get; set; }
        /// <summary>Recommended actions for the service health event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Models.Api20250501.IEventPropertiesRecommendedActionsItem[] RecommendedActionsActions { get; set; }
        /// <summary>Current status of event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ResourceHealth.Support.EventStatusValues? Status { get; set; }
        /// <summary>
        /// Summary text of event. Use fetchEventDetails endpoint to get summary of sensitive events.
        /// </summary>
        string Summary { get; set; }
        /// <summary>Title text of event.</summary>
        string Title { get; set; }

    }
}