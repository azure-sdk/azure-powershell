// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Extensions;

    /// <summary>Properties for configuration assignment</summary>
    public partial class ConfigurationAssignmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Filter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterProperties _filter;

        /// <summary>Properties of the configuration assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterProperties Filter { get => (this._filter = this._filter ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ConfigurationAssignmentFilterProperties()); set => this._filter = value; }

        /// <summary>List of locations to scope the query to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] FilterLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).Location = value ?? null /* arrayOf */; }

        /// <summary>List of allowed operating systems.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] FilterOSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).OSType = value ?? null /* arrayOf */; }

        /// <summary>List of allowed resource groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] FilterResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).ResourceGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).ResourceGroup = value ?? null /* arrayOf */; }

        /// <summary>List of allowed resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] FilterResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).ResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).ResourceType = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="MaintenanceConfigurationId" /> property.</summary>
        private string _maintenanceConfigurationId;

        /// <summary>The maintenance configuration Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public string MaintenanceConfigurationId { get => this._maintenanceConfigurationId; set => this._maintenanceConfigurationId = value; }

        /// <summary>Internal Acessors for Filter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterProperties Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal.Filter { get => (this._filter = this._filter ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ConfigurationAssignmentFilterProperties()); set { {_filter = value;} } }

        /// <summary>Internal Acessors for FilterTagSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsProperties Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal.FilterTagSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).TagSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).TagSetting = value; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>The unique resourceId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Filter VMs by Any or All specified tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators? TagSettingFilterOperator { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).TagSettingFilterOperator; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).TagSettingFilterOperator = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators)""); }

        /// <summary>Dictionary of tags with its list of values.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags TagSettingTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).TagSettingTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal)Filter).TagSettingTag = value ?? null /* model class */; }

        /// <summary>Creates an new <see cref="ConfigurationAssignmentProperties" /> instance.</summary>
        public ConfigurationAssignmentProperties()
        {

        }
    }
    /// Properties for configuration assignment
    public partial interface IConfigurationAssignmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.IJsonSerializable
    {
        /// <summary>List of locations to scope the query to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of locations to scope the query to.",
        SerializedName = @"locations",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterLocation { get; set; }
        /// <summary>List of allowed operating systems.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed operating systems.",
        SerializedName = @"osTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterOSType { get; set; }
        /// <summary>List of allowed resource groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed resource groups.",
        SerializedName = @"resourceGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterResourceGroup { get; set; }
        /// <summary>List of allowed resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed resources.",
        SerializedName = @"resourceTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterResourceType { get; set; }
        /// <summary>The maintenance configuration Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maintenance configuration Id",
        SerializedName = @"maintenanceConfigurationId",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceConfigurationId { get; set; }
        /// <summary>The unique resourceId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique resourceId",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>Filter VMs by Any or All specified tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Filter VMs by Any or All specified tags.",
        SerializedName = @"filterOperator",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators? TagSettingFilterOperator { get; set; }
        /// <summary>Dictionary of tags with its list of values.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of tags with its list of values.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags TagSettingTag { get; set; }

    }
    /// Properties for configuration assignment
    internal partial interface IConfigurationAssignmentPropertiesInternal

    {
        /// <summary>Properties of the configuration assignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterProperties Filter { get; set; }
        /// <summary>List of locations to scope the query to.</summary>
        string[] FilterLocation { get; set; }
        /// <summary>List of allowed operating systems.</summary>
        string[] FilterOSType { get; set; }
        /// <summary>List of allowed resource groups.</summary>
        string[] FilterResourceGroup { get; set; }
        /// <summary>List of allowed resources.</summary>
        string[] FilterResourceType { get; set; }
        /// <summary>Tag settings for the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsProperties FilterTagSetting { get; set; }
        /// <summary>The maintenance configuration Id</summary>
        string MaintenanceConfigurationId { get; set; }
        /// <summary>The unique resourceId</summary>
        string ResourceId { get; set; }
        /// <summary>Filter VMs by Any or All specified tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators? TagSettingFilterOperator { get; set; }
        /// <summary>Dictionary of tags with its list of values.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags TagSettingTag { get; set; }

    }
}