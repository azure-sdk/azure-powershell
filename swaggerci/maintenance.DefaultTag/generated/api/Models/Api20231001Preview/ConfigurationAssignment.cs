// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Extensions;

    /// <summary>Configuration Assignment</summary>
    public partial class ConfigurationAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignment,
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.Resource();

        /// <summary>List of locations to scope the query to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] FilterLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).FilterLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).FilterLocation = value ?? null /* arrayOf */; }

        /// <summary>List of allowed operating systems.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] FilterOSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).FilterOSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).FilterOSType = value ?? null /* arrayOf */; }

        /// <summary>List of allowed resource groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] FilterResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).FilterResourceGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).FilterResourceGroup = value ?? null /* arrayOf */; }

        /// <summary>List of allowed resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string[] FilterResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).FilterResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).FilterResourceType = value ?? null /* arrayOf */; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).Id; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Location of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>The maintenance configuration Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string MaintenanceConfigurationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).MaintenanceConfigurationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).MaintenanceConfigurationId = value ?? null; }

        /// <summary>Internal Acessors for Filter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterProperties Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentInternal.Filter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).Filter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).Filter = value; }

        /// <summary>Internal Acessors for FilterTagSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsProperties Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentInternal.FilterTagSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).FilterTagSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).FilterTagSetting = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentProperties Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ConfigurationAssignmentProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentProperties _property;

        /// <summary>Properties of the configuration assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ConfigurationAssignmentProperties()); set => this._property = value; }

        /// <summary>The unique resourceId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public string ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).ResourceId = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType)""); }

        /// <summary>Filter VMs by Any or All specified tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators? TagSettingFilterOperator { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).TagSettingFilterOperator; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).TagSettingFilterOperator = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators)""); }

        /// <summary>Dictionary of tags with its list of values.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags TagSettingTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).TagSettingTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentPropertiesInternal)Property).TagSettingTag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="ConfigurationAssignment" /> instance.</summary>
        public ConfigurationAssignment()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Configuration Assignment
    public partial interface IConfigurationAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResource
    {
        /// <summary>List of locations to scope the query to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of locations to scope the query to.",
        SerializedName = @"locations",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterLocation { get; set; }
        /// <summary>List of allowed operating systems.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed operating systems.",
        SerializedName = @"osTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterOSType { get; set; }
        /// <summary>List of allowed resource groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed resource groups.",
        SerializedName = @"resourceGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterResourceGroup { get; set; }
        /// <summary>List of allowed resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed resources.",
        SerializedName = @"resourceTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterResourceType { get; set; }
        /// <summary>Location of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Location of the resource",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The maintenance configuration Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maintenance configuration Id",
        SerializedName = @"maintenanceConfigurationId",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceConfigurationId { get; set; }
        /// <summary>The unique resourceId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique resourceId",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>Filter VMs by Any or All specified tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Filter VMs by Any or All specified tags.",
        SerializedName = @"filterOperator",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators? TagSettingFilterOperator { get; set; }
        /// <summary>Dictionary of tags with its list of values.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of tags with its list of values.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags TagSettingTag { get; set; }

    }
    /// Configuration Assignment
    internal partial interface IConfigurationAssignmentInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal
    {
        /// <summary>Properties of the configuration assignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterProperties Filter { get; set; }
        /// <summary>List of locations to scope the query to.</summary>
        string[] FilterLocation { get; set; }
        /// <summary>List of allowed operating systems.</summary>
        string[] FilterOSType { get; set; }
        /// <summary>List of allowed resource groups.</summary>
        string[] FilterResourceGroup { get; set; }
        /// <summary>List of allowed resources.</summary>
        string[] FilterResourceType { get; set; }
        /// <summary>Tag settings for the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsProperties FilterTagSetting { get; set; }
        /// <summary>Location of the resource</summary>
        string Location { get; set; }
        /// <summary>The maintenance configuration Id</summary>
        string MaintenanceConfigurationId { get; set; }
        /// <summary>Properties of the configuration assignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentProperties Property { get; set; }
        /// <summary>The unique resourceId</summary>
        string ResourceId { get; set; }
        /// <summary>Filter VMs by Any or All specified tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators? TagSettingFilterOperator { get; set; }
        /// <summary>Dictionary of tags with its list of values.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags TagSettingTag { get; set; }

    }
}