// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Extensions;

    /// <summary>Azure query for the update configuration.</summary>
    public partial class ConfigurationAssignmentFilterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string[] _location;

        /// <summary>List of locations to scope the query to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public string[] Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for TagSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsProperties Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IConfigurationAssignmentFilterPropertiesInternal.TagSetting { get => (this._tagSetting = this._tagSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.TagSettingsProperties()); set { {_tagSetting = value;} } }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private string[] _oSType;

        /// <summary>List of allowed operating systems.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public string[] OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="ResourceGroup" /> property.</summary>
        private string[] _resourceGroup;

        /// <summary>List of allowed resource groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public string[] ResourceGroup { get => this._resourceGroup; set => this._resourceGroup = value; }

        /// <summary>Backing field for <see cref="ResourceType" /> property.</summary>
        private string[] _resourceType;

        /// <summary>List of allowed resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public string[] ResourceType { get => this._resourceType; set => this._resourceType = value; }

        /// <summary>Backing field for <see cref="TagSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsProperties _tagSetting;

        /// <summary>Tag settings for the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsProperties TagSetting { get => (this._tagSetting = this._tagSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.TagSettingsProperties()); set => this._tagSetting = value; }

        /// <summary>Filter VMs by Any or All specified tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators? TagSettingFilterOperator { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesInternal)TagSetting).FilterOperator; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesInternal)TagSetting).FilterOperator = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators)""); }

        /// <summary>Dictionary of tags with its list of values.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags TagSettingTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesInternal)TagSetting).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesInternal)TagSetting).Tag = value ?? null /* model class */; }

        /// <summary>Creates an new <see cref="ConfigurationAssignmentFilterProperties" /> instance.</summary>
        public ConfigurationAssignmentFilterProperties()
        {

        }
    }
    /// Azure query for the update configuration.
    public partial interface IConfigurationAssignmentFilterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.IJsonSerializable
    {
        /// <summary>List of locations to scope the query to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of locations to scope the query to.",
        SerializedName = @"locations",
        PossibleTypes = new [] { typeof(string) })]
        string[] Location { get; set; }
        /// <summary>List of allowed operating systems.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed operating systems.",
        SerializedName = @"osTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] OSType { get; set; }
        /// <summary>List of allowed resource groups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed resource groups.",
        SerializedName = @"resourceGroups",
        PossibleTypes = new [] { typeof(string) })]
        string[] ResourceGroup { get; set; }
        /// <summary>List of allowed resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of allowed resources.",
        SerializedName = @"resourceTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] ResourceType { get; set; }
        /// <summary>Filter VMs by Any or All specified tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Filter VMs by Any or All specified tags.",
        SerializedName = @"filterOperator",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators? TagSettingFilterOperator { get; set; }
        /// <summary>Dictionary of tags with its list of values.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of tags with its list of values.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags TagSettingTag { get; set; }

    }
    /// Azure query for the update configuration.
    internal partial interface IConfigurationAssignmentFilterPropertiesInternal

    {
        /// <summary>List of locations to scope the query to.</summary>
        string[] Location { get; set; }
        /// <summary>List of allowed operating systems.</summary>
        string[] OSType { get; set; }
        /// <summary>List of allowed resource groups.</summary>
        string[] ResourceGroup { get; set; }
        /// <summary>List of allowed resources.</summary>
        string[] ResourceType { get; set; }
        /// <summary>Tag settings for the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsProperties TagSetting { get; set; }
        /// <summary>Filter VMs by Any or All specified tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.TagOperators? TagSettingFilterOperator { get; set; }
        /// <summary>Dictionary of tags with its list of values.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.ITagSettingsPropertiesTags TagSettingTag { get; set; }

    }
}