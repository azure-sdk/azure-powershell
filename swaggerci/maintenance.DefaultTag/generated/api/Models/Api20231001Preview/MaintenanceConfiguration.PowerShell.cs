// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.PowerShell;

    /// <summary>Maintenance configuration record type</summary>
    [System.ComponentModel.TypeConverter(typeof(MaintenanceConfigurationTypeConverter))]
    public partial class MaintenanceConfiguration
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.MaintenanceConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfiguration"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfiguration DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new MaintenanceConfiguration(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.MaintenanceConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfiguration"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfiguration DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new MaintenanceConfiguration(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="MaintenanceConfiguration" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="MaintenanceConfiguration" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfiguration FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.MaintenanceConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal MaintenanceConfiguration(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.MaintenanceConfigurationPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindow = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceWindow) content.GetValueForProperty("MaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindow, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.MaintenanceWindowTypeConverter.ConvertFrom);
            }
            if (content.Contains("MaintenanceScope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceScope = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.MaintenanceScope?) content.GetValueForProperty("MaintenanceScope",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceScope, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.MaintenanceScope.CreateFrom);
            }
            if (content.Contains("Visibility"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Visibility = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.Visibility?) content.GetValueForProperty("Visibility",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Visibility, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.Visibility.CreateFrom);
            }
            if (content.Contains("InstallPatch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatch = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IInputPatchConfiguration) content.GetValueForProperty("InstallPatch",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatch, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.InputPatchConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Namespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Namespace = (string) content.GetValueForProperty("Namespace",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Namespace, global::System.Convert.ToString);
            }
            if (content.Contains("ExtensionProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).ExtensionProperty = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationPropertiesExtensionProperties) content.GetValueForProperty("ExtensionProperty",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).ExtensionProperty, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.MaintenanceConfigurationPropertiesExtensionPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("MaintenanceWindowDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowDuration = (string) content.GetValueForProperty("MaintenanceWindowDuration",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowDuration, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowTimeZone = (string) content.GetValueForProperty("MaintenanceWindowTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowRecurEvery"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowRecurEvery = (string) content.GetValueForProperty("MaintenanceWindowRecurEvery",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowRecurEvery, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowStartDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowStartDateTime = (string) content.GetValueForProperty("MaintenanceWindowStartDateTime",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowStartDateTime, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowExpirationDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowExpirationDateTime = (string) content.GetValueForProperty("MaintenanceWindowExpirationDateTime",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowExpirationDateTime, global::System.Convert.ToString);
            }
            if (content.Contains("InstallPatchWindowsParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchWindowsParameter = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IInputWindowsParameters) content.GetValueForProperty("InstallPatchWindowsParameter",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchWindowsParameter, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.InputWindowsParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("InstallPatchLinuxParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchLinuxParameter = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IInputLinuxParameters) content.GetValueForProperty("InstallPatchLinuxParameter",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchLinuxParameter, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.InputLinuxParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("InstallPatchRebootSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchRebootSetting = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions?) content.GetValueForProperty("InstallPatchRebootSetting",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchRebootSetting, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions.CreateFrom);
            }
            if (content.Contains("WindowParameterKbNumbersToExclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterKbNumbersToExclude = (string[]) content.GetValueForProperty("WindowParameterKbNumbersToExclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterKbNumbersToExclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterKbNumbersToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterKbNumbersToInclude = (string[]) content.GetValueForProperty("WindowParameterKbNumbersToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterKbNumbersToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterClassificationsToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterClassificationsToInclude = (string[]) content.GetValueForProperty("WindowParameterClassificationsToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterClassificationsToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterExcludeKbsRequiringReboot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterExcludeKbsRequiringReboot = (bool?) content.GetValueForProperty("WindowParameterExcludeKbsRequiringReboot",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterExcludeKbsRequiringReboot, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxParameterPackageNameMasksToExclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterPackageNameMasksToExclude = (string[]) content.GetValueForProperty("LinuxParameterPackageNameMasksToExclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterPackageNameMasksToExclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LinuxParameterPackageNameMasksToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterPackageNameMasksToInclude = (string[]) content.GetValueForProperty("LinuxParameterPackageNameMasksToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterPackageNameMasksToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LinuxParameterClassificationsToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterClassificationsToInclude = (string[]) content.GetValueForProperty("LinuxParameterClassificationsToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterClassificationsToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.MaintenanceConfiguration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal MaintenanceConfiguration(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.MaintenanceConfigurationPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api50.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindow = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceWindow) content.GetValueForProperty("MaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindow, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.MaintenanceWindowTypeConverter.ConvertFrom);
            }
            if (content.Contains("MaintenanceScope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceScope = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.MaintenanceScope?) content.GetValueForProperty("MaintenanceScope",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceScope, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.MaintenanceScope.CreateFrom);
            }
            if (content.Contains("Visibility"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Visibility = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.Visibility?) content.GetValueForProperty("Visibility",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Visibility, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.Visibility.CreateFrom);
            }
            if (content.Contains("InstallPatch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatch = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IInputPatchConfiguration) content.GetValueForProperty("InstallPatch",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatch, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.InputPatchConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Namespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Namespace = (string) content.GetValueForProperty("Namespace",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).Namespace, global::System.Convert.ToString);
            }
            if (content.Contains("ExtensionProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).ExtensionProperty = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationPropertiesExtensionProperties) content.GetValueForProperty("ExtensionProperty",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).ExtensionProperty, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.MaintenanceConfigurationPropertiesExtensionPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("MaintenanceWindowDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowDuration = (string) content.GetValueForProperty("MaintenanceWindowDuration",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowDuration, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowTimeZone = (string) content.GetValueForProperty("MaintenanceWindowTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowRecurEvery"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowRecurEvery = (string) content.GetValueForProperty("MaintenanceWindowRecurEvery",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowRecurEvery, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowStartDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowStartDateTime = (string) content.GetValueForProperty("MaintenanceWindowStartDateTime",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowStartDateTime, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowExpirationDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowExpirationDateTime = (string) content.GetValueForProperty("MaintenanceWindowExpirationDateTime",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).MaintenanceWindowExpirationDateTime, global::System.Convert.ToString);
            }
            if (content.Contains("InstallPatchWindowsParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchWindowsParameter = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IInputWindowsParameters) content.GetValueForProperty("InstallPatchWindowsParameter",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchWindowsParameter, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.InputWindowsParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("InstallPatchLinuxParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchLinuxParameter = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IInputLinuxParameters) content.GetValueForProperty("InstallPatchLinuxParameter",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchLinuxParameter, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.InputLinuxParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("InstallPatchRebootSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchRebootSetting = (Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions?) content.GetValueForProperty("InstallPatchRebootSetting",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).InstallPatchRebootSetting, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Support.RebootOptions.CreateFrom);
            }
            if (content.Contains("WindowParameterKbNumbersToExclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterKbNumbersToExclude = (string[]) content.GetValueForProperty("WindowParameterKbNumbersToExclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterKbNumbersToExclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterKbNumbersToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterKbNumbersToInclude = (string[]) content.GetValueForProperty("WindowParameterKbNumbersToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterKbNumbersToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterClassificationsToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterClassificationsToInclude = (string[]) content.GetValueForProperty("WindowParameterClassificationsToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterClassificationsToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("WindowParameterExcludeKbsRequiringReboot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterExcludeKbsRequiringReboot = (bool?) content.GetValueForProperty("WindowParameterExcludeKbsRequiringReboot",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).WindowParameterExcludeKbsRequiringReboot, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxParameterPackageNameMasksToExclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterPackageNameMasksToExclude = (string[]) content.GetValueForProperty("LinuxParameterPackageNameMasksToExclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterPackageNameMasksToExclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LinuxParameterPackageNameMasksToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterPackageNameMasksToInclude = (string[]) content.GetValueForProperty("LinuxParameterPackageNameMasksToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterPackageNameMasksToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LinuxParameterClassificationsToInclude"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterClassificationsToInclude = (string[]) content.GetValueForProperty("LinuxParameterClassificationsToInclude",((Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20231001Preview.IMaintenanceConfigurationInternal)this).LinuxParameterClassificationsToInclude, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Maintenance configuration record type
    [System.ComponentModel.TypeConverter(typeof(MaintenanceConfigurationTypeConverter))]
    public partial interface IMaintenanceConfiguration

    {

    }
}