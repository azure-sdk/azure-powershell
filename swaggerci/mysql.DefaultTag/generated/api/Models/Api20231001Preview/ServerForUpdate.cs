// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Extensions;

    /// <summary>Parameters allowed to update for a server.</summary>
    public partial class ServerForUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal
    {

        /// <summary>The password of the administrator login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public System.Security.SecureString AdministratorLoginPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).AdministratorLoginPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).AdministratorLoginPassword = value ?? null; }

        /// <summary>Earliest restore point creation time (ISO8601 format)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public global::System.DateTime? BackupEarliestRestoreDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).BackupEarliestRestoreDate; }

        /// <summary>Whether or not geo redundant backup is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? BackupGeoRedundantBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).BackupGeoRedundantBackup; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).BackupGeoRedundantBackup = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum)""); }

        /// <summary>Backup retention days for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public int? BackupRetentionDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).BackupRetentionDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).BackupRetentionDay = value ?? default(int); }

        /// <summary>
        /// Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string DataEncryptionGeoBackupKeyUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryptionGeoBackupKeyUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryptionGeoBackupKeyUri = value ?? null; }

        /// <summary>
        /// Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string DataEncryptionGeoBackupUserAssignedIdentityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryptionGeoBackupUserAssignedIdentityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryptionGeoBackupUserAssignedIdentityId = value ?? null; }

        /// <summary>Primary key uri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string DataEncryptionPrimaryKeyUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryKeyUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryKeyUri = value ?? null; }

        /// <summary>Primary user identity resource id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string DataEncryptionPrimaryUserAssignedIdentityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryUserAssignedIdentityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryUserAssignedIdentityId = value ?? null; }

        /// <summary>The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.DataEncryptionType? DataEncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryptionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.DataEncryptionType)""); }

        /// <summary>High availability mode for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.HighAvailabilityMode? HighAvailabilityMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).HighAvailabilityMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).HighAvailabilityMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.HighAvailabilityMode)""); }

        /// <summary>Availability zone of the standby server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string HighAvailabilityStandbyAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).HighAvailabilityStandbyAvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).HighAvailabilityStandbyAvailabilityZone = value ?? null; }

        /// <summary>The state of server high availability.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.HighAvailabilityState? HighAvailabilityState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).HighAvailabilityState; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentity _identity;

        /// <summary>The cmk identity for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.MySqlServerIdentity()); set => this._identity = value; }

        /// <summary>ObjectId from the KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityInternal)Identity).PrincipalId; }

        /// <summary>TenantId from the KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityInternal)Identity).TenantId; }

        /// <summary>Type of managed service identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ManagedServiceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ManagedServiceIdentityType)""); }

        /// <summary>Metadata of user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>indicates whether custom window is enabled or disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string MaintenanceWindowCustomWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowCustomWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowCustomWindow = value ?? null; }

        /// <summary>day of week for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowDayOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowDayOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowDayOfWeek = value ?? default(int); }

        /// <summary>start hour for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartHour = value ?? default(int); }

        /// <summary>start minute for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartMinute = value ?? default(int); }

        /// <summary>Internal Acessors for Backup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IBackup Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.Backup { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).Backup; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).Backup = value; }

        /// <summary>Internal Acessors for BackupEarliestRestoreDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.BackupEarliestRestoreDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).BackupEarliestRestoreDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).BackupEarliestRestoreDate = value; }

        /// <summary>Internal Acessors for DataEncryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IDataEncryption Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.DataEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).DataEncryption = value; }

        /// <summary>Internal Acessors for HighAvailability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IHighAvailability Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.HighAvailability { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).HighAvailability; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).HighAvailability = value; }

        /// <summary>Internal Acessors for HighAvailabilityState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.HighAvailabilityState? Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.HighAvailabilityState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).HighAvailabilityState; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).HighAvailabilityState = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentity Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.MySqlServerIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for MaintenanceWindow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMaintenanceWindow Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.MaintenanceWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).MaintenanceWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).MaintenanceWindow = value; }

        /// <summary>Internal Acessors for Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.INetwork Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.Network { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).Network; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).Network = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdate Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.ServerPropertiesForUpdate()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerSku Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.MySqlServerSku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for Storage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IStorage Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.Storage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).Storage; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).Storage = value; }

        /// <summary>Internal Acessors for StorageSku</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateInternal.StorageSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageSku = value; }

        /// <summary>Delegated subnet resource id used to setup vnet for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string NetworkDelegatedSubnetResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).NetworkDelegatedSubnetResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).NetworkDelegatedSubnetResourceId = value ?? null; }

        /// <summary>Private DNS zone resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string NetworkPrivateDnsZoneResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).NetworkPrivateDnsZoneResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).NetworkPrivateDnsZoneResourceId = value ?? null; }

        /// <summary>
        /// Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? NetworkPublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).NetworkPublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).NetworkPublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdate _property;

        /// <summary>The properties that can be updated for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdate Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.ServerPropertiesForUpdate()); set => this._property = value; }

        /// <summary>The replication role of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ReplicationRole? ReplicationRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).ReplicationRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).ReplicationRole = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ReplicationRole)""); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerSku _sku;

        /// <summary>The SKU (pricing tier) of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerSku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.MySqlServerSku()); set => this._sku = value; }

        /// <summary>The name of the sku, e.g. Standard_D32s_v3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerSkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerSkuInternal)Sku).Name = value ?? null; }

        /// <summary>The tier of the particular SKU, e.g. GeneralPurpose.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ServerSkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerSkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerSkuInternal)Sku).Tier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ServerSkuTier)""); }

        /// <summary>Enable Storage Auto Grow or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? StorageAutoGrow { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageAutoGrow; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageAutoGrow = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum)""); }

        /// <summary>Enable IO Auto Scaling or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? StorageAutoIoScaling { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageAutoIoScaling; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageAutoIoScaling = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum)""); }

        /// <summary>Storage IOPS for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public int? StorageIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageIop = value ?? default(int); }

        /// <summary>Enable Log On Disk or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? StorageLogOnDisk { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageLogOnDisk; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageLogOnDisk = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum)""); }

        /// <summary>Max storage size allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public int? StorageSizeGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageSizeGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageSizeGb = value ?? default(int); }

        /// <summary>The sku name of the server storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public string StorageSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).StorageSku; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateTags _tag;

        /// <summary>Application-specific metadata in the form of key-value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.ServerForUpdateTags()); set => this._tag = value; }

        /// <summary>Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Origin(Microsoft.Azure.PowerShell.Cmdlets.MySql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ServerVersion? Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdateInternal)Property).Version = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ServerVersion)""); }

        /// <summary>Creates an new <see cref="ServerForUpdate" /> instance.</summary>
        public ServerForUpdate()
        {

        }
    }
    /// Parameters allowed to update for a server.
    public partial interface IServerForUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.IJsonSerializable
    {
        /// <summary>The password of the administrator login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the administrator login.",
        SerializedName = @"administratorLoginPassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>Earliest restore point creation time (ISO8601 format)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Earliest restore point creation time (ISO8601 format)",
        SerializedName = @"earliestRestoreDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BackupEarliestRestoreDate { get;  }
        /// <summary>Whether or not geo redundant backup is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not geo redundant backup is enabled.",
        SerializedName = @"geoRedundantBackup",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? BackupGeoRedundantBackup { get; set; }
        /// <summary>Backup retention days for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup retention days for the server.",
        SerializedName = @"backupRetentionDays",
        PossibleTypes = new [] { typeof(int) })]
        int? BackupRetentionDay { get; set; }
        /// <summary>
        /// Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup",
        SerializedName = @"geoBackupKeyURI",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionGeoBackupKeyUri { get; set; }
        /// <summary>
        /// Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup",
        SerializedName = @"geoBackupUserAssignedIdentityId",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionGeoBackupUserAssignedIdentityId { get; set; }
        /// <summary>Primary key uri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary key uri",
        SerializedName = @"primaryKeyURI",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionPrimaryKeyUri { get; set; }
        /// <summary>Primary user identity resource id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary user identity resource id",
        SerializedName = @"primaryUserAssignedIdentityId",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionPrimaryUserAssignedIdentityId { get; set; }
        /// <summary>The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.DataEncryptionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.DataEncryptionType? DataEncryptionType { get; set; }
        /// <summary>High availability mode for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"High availability mode for a server.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.HighAvailabilityMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.HighAvailabilityMode? HighAvailabilityMode { get; set; }
        /// <summary>Availability zone of the standby server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Availability zone of the standby server.",
        SerializedName = @"standbyAvailabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string HighAvailabilityStandbyAvailabilityZone { get; set; }
        /// <summary>The state of server high availability.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The state of server high availability.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.HighAvailabilityState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.HighAvailabilityState? HighAvailabilityState { get;  }
        /// <summary>ObjectId from the KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ObjectId from the KeyVault",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>TenantId from the KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"TenantId from the KeyVault",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>Type of managed service identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of managed service identity.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ManagedServiceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>Metadata of user assigned identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Metadata of user assigned identity.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>indicates whether custom window is enabled or disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"indicates whether custom window is enabled or disabled",
        SerializedName = @"customWindow",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>day of week for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"day of week for maintenance window",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>start hour for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"start hour for maintenance window",
        SerializedName = @"startHour",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>start minute for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"start minute for maintenance window",
        SerializedName = @"startMinute",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>Delegated subnet resource id used to setup vnet for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Delegated subnet resource id used to setup vnet for a server.",
        SerializedName = @"delegatedSubnetResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkDelegatedSubnetResourceId { get; set; }
        /// <summary>Private DNS zone resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private DNS zone resource id.",
        SerializedName = @"privateDnsZoneResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkPrivateDnsZoneResourceId { get; set; }
        /// <summary>
        /// Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? NetworkPublicNetworkAccess { get; set; }
        /// <summary>The replication role of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The replication role of the server.",
        SerializedName = @"replicationRole",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ReplicationRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ReplicationRole? ReplicationRole { get; set; }
        /// <summary>The name of the sku, e.g. Standard_D32s_v3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the sku, e.g. Standard_D32s_v3.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>The tier of the particular SKU, e.g. GeneralPurpose.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tier of the particular SKU, e.g. GeneralPurpose.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ServerSkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ServerSkuTier? SkuTier { get; set; }
        /// <summary>Enable Storage Auto Grow or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable Storage Auto Grow or not.",
        SerializedName = @"autoGrow",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? StorageAutoGrow { get; set; }
        /// <summary>Enable IO Auto Scaling or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable IO Auto Scaling or not.",
        SerializedName = @"autoIoScaling",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? StorageAutoIoScaling { get; set; }
        /// <summary>Storage IOPS for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage IOPS for a server.",
        SerializedName = @"iops",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageIop { get; set; }
        /// <summary>Enable Log On Disk or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable Log On Disk or not.",
        SerializedName = @"logOnDisk",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? StorageLogOnDisk { get; set; }
        /// <summary>Max storage size allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max storage size allowed for a server.",
        SerializedName = @"storageSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageSizeGb { get; set; }
        /// <summary>The sku name of the server storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The sku name of the server storage.",
        SerializedName = @"storageSku",
        PossibleTypes = new [] { typeof(string) })]
        string StorageSku { get;  }
        /// <summary>Application-specific metadata in the form of key-value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application-specific metadata in the form of key-value pairs.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateTags Tag { get; set; }
        /// <summary>Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MySql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ServerVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ServerVersion? Version { get; set; }

    }
    /// Parameters allowed to update for a server.
    internal partial interface IServerForUpdateInternal

    {
        /// <summary>The password of the administrator login.</summary>
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>Backup related properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IBackup Backup { get; set; }
        /// <summary>Earliest restore point creation time (ISO8601 format)</summary>
        global::System.DateTime? BackupEarliestRestoreDate { get; set; }
        /// <summary>Whether or not geo redundant backup is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? BackupGeoRedundantBackup { get; set; }
        /// <summary>Backup retention days for the server.</summary>
        int? BackupRetentionDay { get; set; }
        /// <summary>The Data Encryption for CMK.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IDataEncryption DataEncryption { get; set; }
        /// <summary>
        /// Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
        /// </summary>
        string DataEncryptionGeoBackupKeyUri { get; set; }
        /// <summary>
        /// Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
        /// </summary>
        string DataEncryptionGeoBackupUserAssignedIdentityId { get; set; }
        /// <summary>Primary key uri</summary>
        string DataEncryptionPrimaryKeyUri { get; set; }
        /// <summary>Primary user identity resource id</summary>
        string DataEncryptionPrimaryUserAssignedIdentityId { get; set; }
        /// <summary>The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.DataEncryptionType? DataEncryptionType { get; set; }
        /// <summary>High availability related properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IHighAvailability HighAvailability { get; set; }
        /// <summary>High availability mode for a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.HighAvailabilityMode? HighAvailabilityMode { get; set; }
        /// <summary>Availability zone of the standby server.</summary>
        string HighAvailabilityStandbyAvailabilityZone { get; set; }
        /// <summary>The state of server high availability.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.HighAvailabilityState? HighAvailabilityState { get; set; }
        /// <summary>The cmk identity for the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentity Identity { get; set; }
        /// <summary>ObjectId from the KeyVault</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>TenantId from the KeyVault</summary>
        string IdentityTenantId { get; set; }
        /// <summary>Type of managed service identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>Metadata of user assigned identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Maintenance window of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary>indicates whether custom window is enabled or disabled</summary>
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>day of week for maintenance window</summary>
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>start hour for maintenance window</summary>
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>start minute for maintenance window</summary>
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>Network related properties of a server</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.INetwork Network { get; set; }
        /// <summary>Delegated subnet resource id used to setup vnet for a server.</summary>
        string NetworkDelegatedSubnetResourceId { get; set; }
        /// <summary>Private DNS zone resource id.</summary>
        string NetworkPrivateDnsZoneResourceId { get; set; }
        /// <summary>
        /// Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? NetworkPublicNetworkAccess { get; set; }
        /// <summary>The properties that can be updated for a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerPropertiesForUpdate Property { get; set; }
        /// <summary>The replication role of the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ReplicationRole? ReplicationRole { get; set; }
        /// <summary>The SKU (pricing tier) of the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IMySqlServerSku Sku { get; set; }
        /// <summary>The name of the sku, e.g. Standard_D32s_v3.</summary>
        string SkuName { get; set; }
        /// <summary>The tier of the particular SKU, e.g. GeneralPurpose.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ServerSkuTier? SkuTier { get; set; }
        /// <summary>Storage related properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IStorage Storage { get; set; }
        /// <summary>Enable Storage Auto Grow or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? StorageAutoGrow { get; set; }
        /// <summary>Enable IO Auto Scaling or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? StorageAutoIoScaling { get; set; }
        /// <summary>Storage IOPS for a server.</summary>
        int? StorageIop { get; set; }
        /// <summary>Enable Log On Disk or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.EnableStatusEnum? StorageLogOnDisk { get; set; }
        /// <summary>Max storage size allowed for a server.</summary>
        int? StorageSizeGb { get; set; }
        /// <summary>The sku name of the server storage.</summary>
        string StorageSku { get; set; }
        /// <summary>Application-specific metadata in the form of key-value pairs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Models.Api20231001Preview.IServerForUpdateTags Tag { get; set; }
        /// <summary>Server version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MySql.Support.ServerVersion? Version { get; set; }

    }
}