// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Extensions;

    /// <summary>The parameters for a PATCH request to a grafana resource.</summary>
    public partial class ManagedGrafanaUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal
    {

        /// <summary>The api key setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ApiKey? ApiKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).ApiKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).ApiKey = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ApiKey)""); }

        /// <summary>Whether a Grafana instance uses deterministic outbound IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.DeterministicOutboundIP? DeterministicOutboundIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).DeterministicOutboundIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).DeterministicOutboundIP = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.DeterministicOutboundIP)""); }

        /// <summary>The AutoRenew setting of the Enterprise subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.MarketplaceAutoRenew? EnterpriseConfigurationMarketplaceAutoRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).EnterpriseConfigurationMarketplaceAutoRenew; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).EnterpriseConfigurationMarketplaceAutoRenew = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.MarketplaceAutoRenew)""); }

        /// <summary>The Plan Id of the Azure Marketplace subscription for the Enterprise plugins</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string EnterpriseConfigurationMarketplacePlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).EnterpriseConfigurationMarketplacePlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).EnterpriseConfigurationMarketplacePlanId = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IAzureMonitorWorkspaceIntegration[] GrafanaIntegrationAzureMonitorWorkspaceIntegration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaIntegrationAzureMonitorWorkspaceIntegration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaIntegrationAzureMonitorWorkspaceIntegration = value ?? null /* arrayOf */; }

        /// <summary>The major Grafana software version to target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string GrafanaMajorVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaMajorVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaMajorVersion = value ?? null; }

        /// <summary>
        /// Update of Grafana plugin. Key is plugin id, value is plugin definition. If plugin definition is null, plugin with given
        /// plugin id will be removed. Otherwise, given plugin will be installed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersGrafanaPlugins GrafanaPlugin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaPlugin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaPlugin = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentity _identity;

        /// <summary>The managed identity of the grafana resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.ManagedServiceIdentity()); set => this._identity = value; }

        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ManagedServiceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ManagedServiceIdentityType)""); }

        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Internal Acessors for EnterpriseConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IEnterpriseConfigurations Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.EnterpriseConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).EnterpriseConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).EnterpriseConfiguration = value; }

        /// <summary>Internal Acessors for GrafanaConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IGrafanaConfigurations Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.GrafanaConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaConfiguration = value; }

        /// <summary>Internal Acessors for GrafanaConfigurationSecurity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.ISecurity Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.GrafanaConfigurationSecurity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaConfigurationSecurity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaConfigurationSecurity = value; }

        /// <summary>Internal Acessors for GrafanaConfigurationSmtp</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.ISmtp Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.GrafanaConfigurationSmtp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaConfigurationSmtp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaConfigurationSmtp = value; }

        /// <summary>Internal Acessors for GrafanaConfigurationSnapshot</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.ISnapshots Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.GrafanaConfigurationSnapshot { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaConfigurationSnapshot; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaConfigurationSnapshot = value; }

        /// <summary>Internal Acessors for GrafanaConfigurationUser</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IUsers Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.GrafanaConfigurationUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaConfigurationUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaConfigurationUser = value; }

        /// <summary>Internal Acessors for GrafanaIntegration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IGrafanaIntegrations Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.GrafanaIntegration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaIntegration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).GrafanaIntegration = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentity Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.ManagedServiceIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParameters Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.ManagedGrafanaPropertiesUpdateParameters()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IResourceSku Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.ResourceSku()); set { {_sku = value;} } }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParameters _property;

        /// <summary>Properties specific to the managed grafana resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParameters Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.ManagedGrafanaPropertiesUpdateParameters()); set => this._property = value; }

        /// <summary>Indicate the state for enable or disable traffic over the public interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.PublicNetworkAccess)""); }

        /// <summary>
        /// Set to true to execute the CSRF check even if the login cookie is not in a request (default false).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? SecurityCsrfAlwaysCheck { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SecurityCsrfAlwaysCheck; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SecurityCsrfAlwaysCheck = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IResourceSku _sku;

        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IResourceSku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.ResourceSku()); set => this._sku = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IResourceSkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IResourceSkuInternal)Sku).Name = value ?? null; }

        /// <summary>Enable this to allow Grafana to send email. Default is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? SmtpEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpEnabled = value ?? default(bool); }

        /// <summary>
        /// Address used when sending out emails
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpFromAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpFromAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpFromAddress = value ?? null; }

        /// <summary>
        /// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpFromName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpFromName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpFromName = value ?? null; }

        /// <summary>SMTP server hostname with port, e.g. test.email.net:587</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpHost = value ?? null; }

        /// <summary>
        /// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpPassword = value ?? null; }

        /// <summary>
        /// Verify SSL for SMTP server. Default is false
        /// https://pkg.go.dev/crypto/tls#Config
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? SmtpSkipVerify { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpSkipVerify; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpSkipVerify = value ?? default(bool); }

        /// <summary>
        /// The StartTLSPolicy setting of the SMTP configuration
        /// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.StartTlsPolicy? SmtpStartTlsPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpStartTlsPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpStartTlsPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.StartTlsPolicy)""); }

        /// <summary>User of SMTP auth</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public string SmtpUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SmtpUser = value ?? null; }

        /// <summary>Set to false to disable external snapshot publish endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? SnapshotExternalEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SnapshotExternalEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).SnapshotExternalEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersTags _tag;

        /// <summary>The new tags of the grafana resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.ManagedGrafanaUpdateParametersTags()); set => this._tag = value; }

        /// <summary>
        /// Set to true so viewers can access and use explore and perform temporary edits on panels in dashboards they have access
        /// to. They cannot save their changes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public bool? UserViewersCanEdit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).UserViewersCanEdit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).UserViewersCanEdit = value ?? default(bool); }

        /// <summary>The zone redundancy setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ZoneRedundancy? ZoneRedundancy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).ZoneRedundancy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersInternal)Property).ZoneRedundancy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ZoneRedundancy)""); }

        /// <summary>Creates an new <see cref="ManagedGrafanaUpdateParameters" /> instance.</summary>
        public ManagedGrafanaUpdateParameters()
        {

        }
    }
    /// The parameters for a PATCH request to a grafana resource.
    public partial interface IManagedGrafanaUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.IJsonSerializable
    {
        /// <summary>The api key setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The api key setting of the Grafana instance.",
        SerializedName = @"apiKey",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ApiKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ApiKey? ApiKey { get; set; }
        /// <summary>Whether a Grafana instance uses deterministic outbound IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether a Grafana instance uses deterministic outbound IPs.",
        SerializedName = @"deterministicOutboundIP",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.DeterministicOutboundIP) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.DeterministicOutboundIP? DeterministicOutboundIP { get; set; }
        /// <summary>The AutoRenew setting of the Enterprise subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AutoRenew setting of the Enterprise subscription",
        SerializedName = @"marketplaceAutoRenew",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.MarketplaceAutoRenew) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.MarketplaceAutoRenew? EnterpriseConfigurationMarketplaceAutoRenew { get; set; }
        /// <summary>The Plan Id of the Azure Marketplace subscription for the Enterprise plugins</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Plan Id of the Azure Marketplace subscription for the Enterprise plugins",
        SerializedName = @"marketplacePlanId",
        PossibleTypes = new [] { typeof(string) })]
        string EnterpriseConfigurationMarketplacePlanId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"azureMonitorWorkspaceIntegrations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IAzureMonitorWorkspaceIntegration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IAzureMonitorWorkspaceIntegration[] GrafanaIntegrationAzureMonitorWorkspaceIntegration { get; set; }
        /// <summary>The major Grafana software version to target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The major Grafana software version to target.",
        SerializedName = @"grafanaMajorVersion",
        PossibleTypes = new [] { typeof(string) })]
        string GrafanaMajorVersion { get; set; }
        /// <summary>
        /// Update of Grafana plugin. Key is plugin id, value is plugin definition. If plugin definition is null, plugin with given
        /// plugin id will be removed. Otherwise, given plugin will be installed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Update of Grafana plugin. Key is plugin id, value is plugin definition. If plugin definition is null, plugin with given plugin id will be removed. Otherwise, given plugin will be installed.",
        SerializedName = @"grafanaPlugins",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersGrafanaPlugins) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersGrafanaPlugins GrafanaPlugin { get; set; }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ManagedServiceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Indicate the state for enable or disable traffic over the public interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicate the state for enable or disable traffic over the public interface.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// Set to true to execute the CSRF check even if the login cookie is not in a request (default false).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true to execute the CSRF check even if the login cookie is not in a request (default false).",
        SerializedName = @"csrfAlwaysCheck",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SecurityCsrfAlwaysCheck { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>Enable this to allow Grafana to send email. Default is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable this to allow Grafana to send email. Default is false",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SmtpEnabled { get; set; }
        /// <summary>
        /// Address used when sending out emails
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address used when sending out emails
        https://pkg.go.dev/net/mail#Address",
        SerializedName = @"fromAddress",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpFromAddress { get; set; }
        /// <summary>
        /// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name to be used when sending out emails. Default is ""Azure Managed Grafana Notification""
        https://pkg.go.dev/net/mail#Address",
        SerializedName = @"fromName",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpFromName { get; set; }
        /// <summary>SMTP server hostname with port, e.g. test.email.net:587</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SMTP server hostname with port, e.g. test.email.net:587",
        SerializedName = @"host",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpHost { get; set; }
        /// <summary>
        /// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpPassword { get; set; }
        /// <summary>
        /// Verify SSL for SMTP server. Default is false
        /// https://pkg.go.dev/crypto/tls#Config
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Verify SSL for SMTP server. Default is false
        https://pkg.go.dev/crypto/tls#Config",
        SerializedName = @"skipVerify",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SmtpSkipVerify { get; set; }
        /// <summary>
        /// The StartTLSPolicy setting of the SMTP configuration
        /// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The StartTLSPolicy setting of the SMTP configuration
        https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy",
        SerializedName = @"startTLSPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.StartTlsPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.StartTlsPolicy? SmtpStartTlsPolicy { get; set; }
        /// <summary>User of SMTP auth</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User of SMTP auth",
        SerializedName = @"user",
        PossibleTypes = new [] { typeof(string) })]
        string SmtpUser { get; set; }
        /// <summary>Set to false to disable external snapshot publish endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to false to disable external snapshot publish endpoint",
        SerializedName = @"externalEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SnapshotExternalEnabled { get; set; }
        /// <summary>The new tags of the grafana resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The new tags of the grafana resource.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersTags Tag { get; set; }
        /// <summary>
        /// Set to true so viewers can access and use explore and perform temporary edits on panels in dashboards they have access
        /// to. They cannot save their changes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set to true so viewers can access and use explore and perform temporary edits on panels in dashboards they have access to. They cannot save their changes.",
        SerializedName = @"viewersCanEdit",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UserViewersCanEdit { get; set; }
        /// <summary>The zone redundancy setting of the Grafana instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The zone redundancy setting of the Grafana instance.",
        SerializedName = @"zoneRedundancy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ZoneRedundancy) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ZoneRedundancy? ZoneRedundancy { get; set; }

    }
    /// The parameters for a PATCH request to a grafana resource.
    internal partial interface IManagedGrafanaUpdateParametersInternal

    {
        /// <summary>The api key setting of the Grafana instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ApiKey? ApiKey { get; set; }
        /// <summary>Whether a Grafana instance uses deterministic outbound IPs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.DeterministicOutboundIP? DeterministicOutboundIP { get; set; }
        /// <summary>Enterprise settings of a Grafana instance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IEnterpriseConfigurations EnterpriseConfiguration { get; set; }
        /// <summary>The AutoRenew setting of the Enterprise subscription</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.MarketplaceAutoRenew? EnterpriseConfigurationMarketplaceAutoRenew { get; set; }
        /// <summary>The Plan Id of the Azure Marketplace subscription for the Enterprise plugins</summary>
        string EnterpriseConfigurationMarketplacePlanId { get; set; }
        /// <summary>Server configurations of a Grafana instance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IGrafanaConfigurations GrafanaConfiguration { get; set; }
        /// <summary>Grafana security settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.ISecurity GrafanaConfigurationSecurity { get; set; }
        /// <summary>
        /// Email server settings.
        /// https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.ISmtp GrafanaConfigurationSmtp { get; set; }
        /// <summary>Grafana Snapshots settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.ISnapshots GrafanaConfigurationSnapshot { get; set; }
        /// <summary>Grafana users settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IUsers GrafanaConfigurationUser { get; set; }
        /// <summary>
        /// GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards,
        /// alerting defaults) for common monitoring scenarios.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IGrafanaIntegrations GrafanaIntegration { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IAzureMonitorWorkspaceIntegration[] GrafanaIntegrationAzureMonitorWorkspaceIntegration { get; set; }
        /// <summary>The major Grafana software version to target.</summary>
        string GrafanaMajorVersion { get; set; }
        /// <summary>
        /// Update of Grafana plugin. Key is plugin id, value is plugin definition. If plugin definition is null, plugin with given
        /// plugin id will be removed. Otherwise, given plugin will be installed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParametersGrafanaPlugins GrafanaPlugin { get; set; }
        /// <summary>The managed identity of the grafana resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IManagedServiceIdentity Identity { get; set; }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api30.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Properties specific to the managed grafana resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaPropertiesUpdateParameters Property { get; set; }
        /// <summary>Indicate the state for enable or disable traffic over the public interface.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// Set to true to execute the CSRF check even if the login cookie is not in a request (default false).
        /// </summary>
        bool? SecurityCsrfAlwaysCheck { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IResourceSku Sku { get; set; }

        string SkuName { get; set; }
        /// <summary>Enable this to allow Grafana to send email. Default is false</summary>
        bool? SmtpEnabled { get; set; }
        /// <summary>
        /// Address used when sending out emails
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        string SmtpFromAddress { get; set; }
        /// <summary>
        /// Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
        /// https://pkg.go.dev/net/mail#Address
        /// </summary>
        string SmtpFromName { get; set; }
        /// <summary>SMTP server hostname with port, e.g. test.email.net:587</summary>
        string SmtpHost { get; set; }
        /// <summary>
        /// Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
        /// </summary>
        string SmtpPassword { get; set; }
        /// <summary>
        /// Verify SSL for SMTP server. Default is false
        /// https://pkg.go.dev/crypto/tls#Config
        /// </summary>
        bool? SmtpSkipVerify { get; set; }
        /// <summary>
        /// The StartTLSPolicy setting of the SMTP configuration
        /// https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.StartTlsPolicy? SmtpStartTlsPolicy { get; set; }
        /// <summary>User of SMTP auth</summary>
        string SmtpUser { get; set; }
        /// <summary>Set to false to disable external snapshot publish endpoint</summary>
        bool? SnapshotExternalEnabled { get; set; }
        /// <summary>The new tags of the grafana resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Models.Api20231001Preview.IManagedGrafanaUpdateParametersTags Tag { get; set; }
        /// <summary>
        /// Set to true so viewers can access and use explore and perform temporary edits on panels in dashboards they have access
        /// to. They cannot save their changes.
        /// </summary>
        bool? UserViewersCanEdit { get; set; }
        /// <summary>The zone redundancy setting of the Grafana instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dashboard.Support.ZoneRedundancy? ZoneRedundancy { get; set; }

    }
}