// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Extensions;

    /// <summary>Virtual disk model</summary>
    public partial class VirtualDiskInventory :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventory,
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal
    {

        /// <summary>Backing field for <see cref="ControllerKey" /> property.</summary>
        private int? _controllerKey;

        /// <summary>Gets or sets the controller id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public int? ControllerKey { get => this._controllerKey; }

        /// <summary>Backing field for <see cref="ControllerType" /> property.</summary>
        private string _controllerType;

        /// <summary>Gets or sets the controller type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string ControllerType { get => this._controllerType; }

        /// <summary>Backing field for <see cref="DeviceKey" /> property.</summary>
        private int? _deviceKey;

        /// <summary>Gets or sets the device key value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public int? DeviceKey { get => this._deviceKey; }

        /// <summary>Backing field for <see cref="DeviceName" /> property.</summary>
        private string _deviceName;

        /// <summary>Gets or sets the device name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string DeviceName { get => this._deviceName; }

        /// <summary>Backing field for <see cref="DiskMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskMode? _diskMode;

        /// <summary>Gets or sets the disk mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskMode? DiskMode { get => this._diskMode; }

        /// <summary>Backing field for <see cref="DiskName" /> property.</summary>
        private string _diskName;

        /// <summary>Gets or sets the name of the virtual disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string DiskName { get => this._diskName; set => this._diskName = value; }

        /// <summary>Backing field for <see cref="DiskSizeGb" /> property.</summary>
        private int? _diskSizeGb;

        /// <summary>Gets or sets the disk total size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public int? DiskSizeGb { get => this._diskSizeGb; }

        /// <summary>Backing field for <see cref="DiskType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskType? _diskType;

        /// <summary>Gets or sets the disk backing type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskType? DiskType { get => this._diskType; }

        /// <summary>Backing field for <see cref="EagerlyScrub" /> property.</summary>
        private bool? _eagerlyScrub;

        /// <summary>Gets or sets the eagerly scrub property of disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public bool? EagerlyScrub { get => this._eagerlyScrub; }

        /// <summary>Backing field for <see cref="FileName" /> property.</summary>
        private string _fileName;

        /// <summary>Gets or sets the disk file name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string FileName { get => this._fileName; }

        /// <summary>Backing field for <see cref="Label" /> property.</summary>
        private string _label;

        /// <summary>Gets or sets the label of the virtual disk in vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string Label { get => this._label; }

        /// <summary>Internal Acessors for ControllerKey</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.ControllerKey { get => this._controllerKey; set { {_controllerKey = value;} } }

        /// <summary>Internal Acessors for ControllerType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.ControllerType { get => this._controllerType; set { {_controllerType = value;} } }

        /// <summary>Internal Acessors for DeviceKey</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.DeviceKey { get => this._deviceKey; set { {_deviceKey = value;} } }

        /// <summary>Internal Acessors for DeviceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.DeviceName { get => this._deviceName; set { {_deviceName = value;} } }

        /// <summary>Internal Acessors for DiskMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskMode? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.DiskMode { get => this._diskMode; set { {_diskMode = value;} } }

        /// <summary>Internal Acessors for DiskSizeGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.DiskSizeGb { get => this._diskSizeGb; set { {_diskSizeGb = value;} } }

        /// <summary>Internal Acessors for DiskType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskType? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.DiskType { get => this._diskType; set { {_diskType = value;} } }

        /// <summary>Internal Acessors for EagerlyScrub</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.EagerlyScrub { get => this._eagerlyScrub; set { {_eagerlyScrub = value;} } }

        /// <summary>Internal Acessors for FileName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.FileName { get => this._fileName; set { {_fileName = value;} } }

        /// <summary>Internal Acessors for Label</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.Label { get => this._label; set { {_label = value;} } }

        /// <summary>Internal Acessors for ThinProvisioned</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.ThinProvisioned { get => this._thinProvisioned; set { {_thinProvisioned = value;} } }

        /// <summary>Internal Acessors for UnitNumber</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.UnitNumber { get => this._unitNumber; set { {_unitNumber = value;} } }

        /// <summary>Internal Acessors for Uuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventoryInternal.Uuid { get => this._uuid; set { {_uuid = value;} } }

        /// <summary>Backing field for <see cref="ThinProvisioned" /> property.</summary>
        private bool? _thinProvisioned;

        /// <summary>Gets or sets the thin provisioning property of disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public bool? ThinProvisioned { get => this._thinProvisioned; }

        /// <summary>Backing field for <see cref="UnitNumber" /> property.</summary>
        private int? _unitNumber;

        /// <summary>Gets or sets the unit number of the disk on the controller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public int? UnitNumber { get => this._unitNumber; }

        /// <summary>Backing field for <see cref="Uuid" /> property.</summary>
        private string _uuid;

        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string Uuid { get => this._uuid; }

        /// <summary>Creates an new <see cref="VirtualDiskInventory" /> instance.</summary>
        public VirtualDiskInventory()
        {

        }
    }
    /// Virtual disk model
    public partial interface IVirtualDiskInventory :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IJsonSerializable
    {
        /// <summary>Gets or sets the controller id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the controller id.",
        SerializedName = @"controllerKey",
        PossibleTypes = new [] { typeof(int) })]
        int? ControllerKey { get;  }
        /// <summary>Gets or sets the controller type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the controller type.",
        SerializedName = @"controllerType",
        PossibleTypes = new [] { typeof(string) })]
        string ControllerType { get;  }
        /// <summary>Gets or sets the device key value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the device key value.",
        SerializedName = @"deviceKey",
        PossibleTypes = new [] { typeof(int) })]
        int? DeviceKey { get;  }
        /// <summary>Gets or sets the device name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the device name.",
        SerializedName = @"deviceName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceName { get;  }
        /// <summary>Gets or sets the disk mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the disk mode.",
        SerializedName = @"diskMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskMode? DiskMode { get;  }
        /// <summary>Gets or sets the name of the virtual disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the name of the virtual disk.",
        SerializedName = @"diskName",
        PossibleTypes = new [] { typeof(string) })]
        string DiskName { get; set; }
        /// <summary>Gets or sets the disk total size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the disk total size.",
        SerializedName = @"diskSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? DiskSizeGb { get;  }
        /// <summary>Gets or sets the disk backing type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the disk backing type.",
        SerializedName = @"diskType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskType? DiskType { get;  }
        /// <summary>Gets or sets the eagerly scrub property of disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the eagerly scrub property of disk.",
        SerializedName = @"eagerlyScrub",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EagerlyScrub { get;  }
        /// <summary>Gets or sets the disk file name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the disk file name.",
        SerializedName = @"fileName",
        PossibleTypes = new [] { typeof(string) })]
        string FileName { get;  }
        /// <summary>Gets or sets the label of the virtual disk in vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the label of the virtual disk in vCenter.",
        SerializedName = @"label",
        PossibleTypes = new [] { typeof(string) })]
        string Label { get;  }
        /// <summary>Gets or sets the thin provisioning property of disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the thin provisioning property of disk.",
        SerializedName = @"thinProvisioned",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ThinProvisioned { get;  }
        /// <summary>Gets or sets the unit number of the disk on the controller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the unit number of the disk on the controller.",
        SerializedName = @"unitNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? UnitNumber { get;  }
        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets a unique identifier for this resource.",
        SerializedName = @"uuid",
        PossibleTypes = new [] { typeof(string) })]
        string Uuid { get;  }

    }
    /// Virtual disk model
    internal partial interface IVirtualDiskInventoryInternal

    {
        /// <summary>Gets or sets the controller id.</summary>
        int? ControllerKey { get; set; }
        /// <summary>Gets or sets the controller type.</summary>
        string ControllerType { get; set; }
        /// <summary>Gets or sets the device key value.</summary>
        int? DeviceKey { get; set; }
        /// <summary>Gets or sets the device name.</summary>
        string DeviceName { get; set; }
        /// <summary>Gets or sets the disk mode.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskMode? DiskMode { get; set; }
        /// <summary>Gets or sets the name of the virtual disk.</summary>
        string DiskName { get; set; }
        /// <summary>Gets or sets the disk total size.</summary>
        int? DiskSizeGb { get; set; }
        /// <summary>Gets or sets the disk backing type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.DiskType? DiskType { get; set; }
        /// <summary>Gets or sets the eagerly scrub property of disk.</summary>
        bool? EagerlyScrub { get; set; }
        /// <summary>Gets or sets the disk file name.</summary>
        string FileName { get; set; }
        /// <summary>Gets or sets the label of the virtual disk in vCenter.</summary>
        string Label { get; set; }
        /// <summary>Gets or sets the thin provisioning property of disk.</summary>
        bool? ThinProvisioned { get; set; }
        /// <summary>Gets or sets the unit number of the disk on the controller.</summary>
        int? UnitNumber { get; set; }
        /// <summary>Gets or sets a unique identifier for this resource.</summary>
        string Uuid { get; set; }

    }
}