// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Extensions;

    /// <summary>The host inventory item.</summary>
    public partial class HostInventoryItem :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IHostInventoryItem,
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IHostInventoryItemInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemProperties __inventoryItemProperties = new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.InventoryItemProperties();

        /// <summary>Backing field for <see cref="CpuModel" /> property.</summary>
        private string _cpuModel;

        /// <summary>Gets or sets the cpu model of the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string CpuModel { get => this._cpuModel; }

        /// <summary>They inventory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType InventoryType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryType = value ; }

        /// <summary>Gets or sets the tracked resource id corresponding to the inventory resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inherited)]
        public string ManagedResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)__inventoryItemProperties).ManagedResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)__inventoryItemProperties).ManagedResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="MemorySizeGb" /> property.</summary>
        private long? _memorySizeGb;

        /// <summary>Gets the total amount of physical memory on the host in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public long? MemorySizeGb { get => this._memorySizeGb; }

        /// <summary>Internal Acessors for CpuModel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IHostInventoryItemInternal.CpuModel { get => this._cpuModel; set { {_cpuModel = value;} } }

        /// <summary>Internal Acessors for MemorySizeGb</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IHostInventoryItemInternal.MemorySizeGb { get => this._memorySizeGb; set { {_memorySizeGb = value;} } }

        /// <summary>Internal Acessors for NumCoresPerSocket</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IHostInventoryItemInternal.NumCoresPerSocket { get => this._numCoresPerSocket; set { {_numCoresPerSocket = value;} } }

        /// <summary>Internal Acessors for NumSocket</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IHostInventoryItemInternal.NumSocket { get => this._numSocket; set { {_numSocket = value;} } }

        /// <summary>Internal Acessors for Parent</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetails Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IHostInventoryItemInternal.Parent { get => (this._parent = this._parent ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.InventoryItemDetails()); set { {_parent = value;} } }

        /// <summary>Internal Acessors for PowerState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IHostInventoryItemInternal.PowerState { get => this._powerState; set { {_powerState = value;} } }

        /// <summary>Internal Acessors for Version</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IHostInventoryItemInternal.Version { get => this._version; set { {_version = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState = value; }

        /// <summary>Gets or sets the vCenter Managed Object name for the inventory item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inherited)]
        public string MoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)__inventoryItemProperties).MoName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)__inventoryItemProperties).MoName = value ?? null; }

        /// <summary>Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inherited)]
        public string MoRefId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)__inventoryItemProperties).MoRefId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)__inventoryItemProperties).MoRefId = value ?? null; }

        /// <summary>Backing field for <see cref="NumCoresPerSocket" /> property.</summary>
        private int? _numCoresPerSocket;

        /// <summary>Gets or sets the number of cores per socket on the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public int? NumCoresPerSocket { get => this._numCoresPerSocket; }

        /// <summary>Backing field for <see cref="NumSocket" /> property.</summary>
        private int? _numSocket;

        /// <summary>Gets or sets the number of sockets on the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public int? NumSocket { get => this._numSocket; }

        /// <summary>Backing field for <see cref="Parent" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetails _parent;

        /// <summary>Parent host inventory resource details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetails Parent { get => (this._parent = this._parent ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.InventoryItemDetails()); set => this._parent = value; }

        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string ParentInventoryItemId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetailsInternal)Parent).InventoryItemId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetailsInternal)Parent).InventoryItemId = value ?? null; }

        /// <summary>The inventory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType? ParentInventoryType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetailsInternal)Parent).InventoryType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetailsInternal)Parent).InventoryType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType)""); }

        /// <summary>Gets or sets the vCenter Managed Object name for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inlined)]
        public string ParentMoName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetailsInternal)Parent).MoName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetailsInternal)Parent).MoName = value ?? null; }

        /// <summary>Backing field for <see cref="PowerState" /> property.</summary>
        private string _powerState;

        /// <summary>Gets or sets the power state of the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string PowerState { get => this._powerState; }

        /// <summary>Gets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>Gets or sets the version of the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string Version { get => this._version; }

        /// <summary>Creates an new <see cref="HostInventoryItem" /> instance.</summary>
        public HostInventoryItem()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__inventoryItemProperties), __inventoryItemProperties);
            await eventListener.AssertObjectIsValid(nameof(__inventoryItemProperties), __inventoryItemProperties);
        }
    }
    /// The host inventory item.
    public partial interface IHostInventoryItem :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemProperties
    {
        /// <summary>Gets or sets the cpu model of the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the cpu model of the host.",
        SerializedName = @"cpuModel",
        PossibleTypes = new [] { typeof(string) })]
        string CpuModel { get;  }
        /// <summary>Gets the total amount of physical memory on the host in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the total amount of physical memory on the host in GB.",
        SerializedName = @"memorySizeGB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemorySizeGb { get;  }
        /// <summary>Gets or sets the number of cores per socket on the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the number of cores per socket on the host.",
        SerializedName = @"numCoresPerSocket",
        PossibleTypes = new [] { typeof(int) })]
        int? NumCoresPerSocket { get;  }
        /// <summary>Gets or sets the number of sockets on the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the number of sockets on the host.",
        SerializedName = @"numSockets",
        PossibleTypes = new [] { typeof(int) })]
        int? NumSocket { get;  }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the inventory Item ID for the resource.",
        SerializedName = @"inventoryItemId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentInventoryItemId { get; set; }
        /// <summary>The inventory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The inventory type.",
        SerializedName = @"inventoryType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType? ParentInventoryType { get; set; }
        /// <summary>Gets or sets the vCenter Managed Object name for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the vCenter Managed Object name for the resource.",
        SerializedName = @"moName",
        PossibleTypes = new [] { typeof(string) })]
        string ParentMoName { get; set; }
        /// <summary>Gets or sets the power state of the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the power state of the host.",
        SerializedName = @"powerState",
        PossibleTypes = new [] { typeof(string) })]
        string PowerState { get;  }
        /// <summary>Gets or sets the version of the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets the version of the host.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get;  }

    }
    /// The host inventory item.
    internal partial interface IHostInventoryItemInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal
    {
        /// <summary>Gets or sets the cpu model of the host.</summary>
        string CpuModel { get; set; }
        /// <summary>Gets the total amount of physical memory on the host in GB.</summary>
        long? MemorySizeGb { get; set; }
        /// <summary>Gets or sets the number of cores per socket on the host.</summary>
        int? NumCoresPerSocket { get; set; }
        /// <summary>Gets or sets the number of sockets on the host.</summary>
        int? NumSocket { get; set; }
        /// <summary>Parent host inventory resource details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetails Parent { get; set; }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        string ParentInventoryItemId { get; set; }
        /// <summary>The inventory type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType? ParentInventoryType { get; set; }
        /// <summary>Gets or sets the vCenter Managed Object name for the resource.</summary>
        string ParentMoName { get; set; }
        /// <summary>Gets or sets the power state of the host.</summary>
        string PowerState { get; set; }
        /// <summary>Gets or sets the version of the host.</summary>
        string Version { get; set; }

    }
}