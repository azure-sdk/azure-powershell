// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Extensions;

    /// <summary>Virtual disk model</summary>
    public partial class VirtualDiskInventory
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventory.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventory.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventory FromJson(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject json ? new VirtualDiskInventory(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="VirtualDiskInventory" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="VirtualDiskInventory" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._diskName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._diskName.ToString()) : null, "diskName" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._label)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._label.ToString()) : null, "label" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._diskSizeGb ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNumber((int)this._diskSizeGb) : null, "diskSizeGB" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._deviceKey ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNumber((int)this._deviceKey) : null, "deviceKey" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._diskMode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._diskMode.ToString()) : null, "diskMode" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._controllerKey ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNumber((int)this._controllerKey) : null, "controllerKey" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._unitNumber ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNumber((int)this._unitNumber) : null, "unitNumber" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._deviceName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._deviceName.ToString()) : null, "deviceName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._fileName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._fileName.ToString()) : null, "fileName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._diskType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._diskType.ToString()) : null, "diskType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._eagerlyScrub ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonBoolean((bool)this._eagerlyScrub) : null, "eagerlyScrub" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._thinProvisioned ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonBoolean((bool)this._thinProvisioned) : null, "thinProvisioned" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._controllerType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._controllerType.ToString()) : null, "controllerType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._uuid)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._uuid.ToString()) : null, "uuid" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject into a new instance of <see cref="VirtualDiskInventory" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal VirtualDiskInventory(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_diskName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("diskName"), out var __jsonDiskName) ? (string)__jsonDiskName : (string)DiskName;}
            {_label = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("label"), out var __jsonLabel) ? (string)__jsonLabel : (string)Label;}
            {_diskSizeGb = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNumber>("diskSizeGB"), out var __jsonDiskSizeGb) ? (int?)__jsonDiskSizeGb : DiskSizeGb;}
            {_deviceKey = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNumber>("deviceKey"), out var __jsonDeviceKey) ? (int?)__jsonDeviceKey : DeviceKey;}
            {_diskMode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("diskMode"), out var __jsonDiskMode) ? (string)__jsonDiskMode : (string)DiskMode;}
            {_controllerKey = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNumber>("controllerKey"), out var __jsonControllerKey) ? (int?)__jsonControllerKey : ControllerKey;}
            {_unitNumber = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNumber>("unitNumber"), out var __jsonUnitNumber) ? (int?)__jsonUnitNumber : UnitNumber;}
            {_deviceName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("deviceName"), out var __jsonDeviceName) ? (string)__jsonDeviceName : (string)DeviceName;}
            {_fileName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("fileName"), out var __jsonFileName) ? (string)__jsonFileName : (string)FileName;}
            {_diskType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("diskType"), out var __jsonDiskType) ? (string)__jsonDiskType : (string)DiskType;}
            {_eagerlyScrub = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonBoolean>("eagerlyScrub"), out var __jsonEagerlyScrub) ? (bool?)__jsonEagerlyScrub : EagerlyScrub;}
            {_thinProvisioned = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonBoolean>("thinProvisioned"), out var __jsonThinProvisioned) ? (bool?)__jsonThinProvisioned : ThinProvisioned;}
            {_controllerType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("controllerType"), out var __jsonControllerType) ? (string)__jsonControllerType : (string)ControllerType;}
            {_uuid = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("uuid"), out var __jsonUuid) ? (string)__jsonUuid : (string)Uuid;}
            AfterFromJson(json);
        }
    }
}