// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201
{
    using Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.PowerShell;

    /// <summary>The VM inventory item.</summary>
    [System.ComponentModel.TypeConverter(typeof(VirtualMachineInventoryItemTypeConverter))]
    public partial class VirtualMachineInventoryItem
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.VirtualMachineInventoryItem"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItem"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItem DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VirtualMachineInventoryItem(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.VirtualMachineInventoryItem"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItem"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItem DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VirtualMachineInventoryItem(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VirtualMachineInventoryItem" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="VirtualMachineInventoryItem" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItem FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.VirtualMachineInventoryItem"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VirtualMachineInventoryItem(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Host"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).Host = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetails) content.GetValueForProperty("Host",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).Host, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.InventoryItemDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourcePool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePool = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetails) content.GetValueForProperty("ResourcePool",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePool, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.InventoryItemDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Cluster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).Cluster = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetails) content.GetValueForProperty("Cluster",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).Cluster, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.InventoryItemDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).StorageProfile = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IStorageProfileInventory) content.GetValueForProperty("StorageProfile",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).StorageProfile, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.StorageProfileInventoryTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.INetworkProfileInventory) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.NetworkProfileInventoryTypeConverter.ConvertFrom);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType.CreateFrom);
            }
            if (content.Contains("OSName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).OSName = (string) content.GetValueForProperty("OSName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).OSName, global::System.Convert.ToString);
            }
            if (content.Contains("IPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).IPAddress = (string[]) content.GetValueForProperty("IPAddress",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).IPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("FolderPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).FolderPath = (string) content.GetValueForProperty("FolderPath",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).FolderPath, global::System.Convert.ToString);
            }
            if (content.Contains("InstanceUuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).InstanceUuid = (string) content.GetValueForProperty("InstanceUuid",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).InstanceUuid, global::System.Convert.ToString);
            }
            if (content.Contains("SmbiosUuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).SmbiosUuid = (string) content.GetValueForProperty("SmbiosUuid",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).SmbiosUuid, global::System.Convert.ToString);
            }
            if (content.Contains("PowerState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).PowerState = (string) content.GetValueForProperty("PowerState",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).PowerState, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsRunningStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsRunningStatus = (string) content.GetValueForProperty("ToolsRunningStatus",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsRunningStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsVersionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsVersionStatus = (string) content.GetValueForProperty("ToolsVersionStatus",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsVersionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsVersion = (string) content.GetValueForProperty("ToolsVersion",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsVersion, global::System.Convert.ToString);
            }
            if (content.Contains("FirmwareType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).FirmwareType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.FirmwareType?) content.GetValueForProperty("FirmwareType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).FirmwareType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.FirmwareType.CreateFrom);
            }
            if (content.Contains("ChangeTrackingSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ChangeTrackingSupported = (bool?) content.GetValueForProperty("ChangeTrackingSupported",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ChangeTrackingSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ChangeTrackingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ChangeTrackingEnabled = (bool?) content.GetValueForProperty("ChangeTrackingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ChangeTrackingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MaxSnapshot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).MaxSnapshot = (int?) content.GetValueForProperty("MaxSnapshot",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).MaxSnapshot, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NumberOfSnapshot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NumberOfSnapshot = (int?) content.GetValueForProperty("NumberOfSnapshot",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NumberOfSnapshot, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DiskEnabledUuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).DiskEnabledUuid = (string) content.GetValueForProperty("DiskEnabledUuid",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).DiskEnabledUuid, global::System.Convert.ToString);
            }
            if (content.Contains("ComputerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ComputerName = (string) content.GetValueForProperty("ComputerName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ComputerName, global::System.Convert.ToString);
            }
            if (content.Contains("MemorySizeMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).MemorySizeMb = (int?) content.GetValueForProperty("MemorySizeMb",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).MemorySizeMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NumCpUs"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NumCpUs = (int?) content.GetValueForProperty("NumCpUs",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NumCpUs, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("InventoryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).InventoryType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType) content.GetValueForProperty("InventoryType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).InventoryType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType.CreateFrom);
            }
            if (content.Contains("ManagedResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).ManagedResourceId = (string) content.GetValueForProperty("ManagedResourceId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).ManagedResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("MoRefId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).MoRefId = (string) content.GetValueForProperty("MoRefId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).MoRefId, global::System.Convert.ToString);
            }
            if (content.Contains("MoName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).MoName = (string) content.GetValueForProperty("MoName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).MoName, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("HostInventoryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostInventoryType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType?) content.GetValueForProperty("HostInventoryType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostInventoryType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType.CreateFrom);
            }
            if (content.Contains("ResourcePoolInventoryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolInventoryType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType?) content.GetValueForProperty("ResourcePoolInventoryType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolInventoryType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType.CreateFrom);
            }
            if (content.Contains("ClusterInventoryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterInventoryType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType?) content.GetValueForProperty("ClusterInventoryType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterInventoryType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType.CreateFrom);
            }
            if (content.Contains("HostInventoryItemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostInventoryItemId = (string) content.GetValueForProperty("HostInventoryItemId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostInventoryItemId, global::System.Convert.ToString);
            }
            if (content.Contains("HostMoName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostMoName = (string) content.GetValueForProperty("HostMoName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostMoName, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolInventoryItemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolInventoryItemId = (string) content.GetValueForProperty("ResourcePoolInventoryItemId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolInventoryItemId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolMoName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolMoName = (string) content.GetValueForProperty("ResourcePoolMoName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolMoName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterInventoryItemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterInventoryItemId = (string) content.GetValueForProperty("ClusterInventoryItemId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterInventoryItemId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterMoName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterMoName = (string) content.GetValueForProperty("ClusterMoName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterMoName, global::System.Convert.ToString);
            }
            if (content.Contains("StorageProfileDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).StorageProfileDisk = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventory[]) content.GetValueForProperty("StorageProfileDisk",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).StorageProfileDisk, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventory>(__y, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.VirtualDiskInventoryTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkProfileNetworkInterface"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NetworkProfileNetworkInterface = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.INetworkInterfaceInventory[]) content.GetValueForProperty("NetworkProfileNetworkInterface",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NetworkProfileNetworkInterface, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.INetworkInterfaceInventory>(__y, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.NetworkInterfaceInventoryTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.VirtualMachineInventoryItem"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VirtualMachineInventoryItem(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Host"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).Host = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetails) content.GetValueForProperty("Host",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).Host, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.InventoryItemDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourcePool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePool = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetails) content.GetValueForProperty("ResourcePool",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePool, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.InventoryItemDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Cluster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).Cluster = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemDetails) content.GetValueForProperty("Cluster",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).Cluster, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.InventoryItemDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).StorageProfile = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IStorageProfileInventory) content.GetValueForProperty("StorageProfile",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).StorageProfile, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.StorageProfileInventoryTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.INetworkProfileInventory) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.NetworkProfileInventoryTypeConverter.ConvertFrom);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType.CreateFrom);
            }
            if (content.Contains("OSName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).OSName = (string) content.GetValueForProperty("OSName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).OSName, global::System.Convert.ToString);
            }
            if (content.Contains("IPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).IPAddress = (string[]) content.GetValueForProperty("IPAddress",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).IPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("FolderPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).FolderPath = (string) content.GetValueForProperty("FolderPath",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).FolderPath, global::System.Convert.ToString);
            }
            if (content.Contains("InstanceUuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).InstanceUuid = (string) content.GetValueForProperty("InstanceUuid",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).InstanceUuid, global::System.Convert.ToString);
            }
            if (content.Contains("SmbiosUuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).SmbiosUuid = (string) content.GetValueForProperty("SmbiosUuid",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).SmbiosUuid, global::System.Convert.ToString);
            }
            if (content.Contains("PowerState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).PowerState = (string) content.GetValueForProperty("PowerState",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).PowerState, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsRunningStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsRunningStatus = (string) content.GetValueForProperty("ToolsRunningStatus",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsRunningStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsVersionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsVersionStatus = (string) content.GetValueForProperty("ToolsVersionStatus",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsVersionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsVersion = (string) content.GetValueForProperty("ToolsVersion",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ToolsVersion, global::System.Convert.ToString);
            }
            if (content.Contains("FirmwareType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).FirmwareType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.FirmwareType?) content.GetValueForProperty("FirmwareType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).FirmwareType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.FirmwareType.CreateFrom);
            }
            if (content.Contains("ChangeTrackingSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ChangeTrackingSupported = (bool?) content.GetValueForProperty("ChangeTrackingSupported",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ChangeTrackingSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ChangeTrackingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ChangeTrackingEnabled = (bool?) content.GetValueForProperty("ChangeTrackingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ChangeTrackingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MaxSnapshot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).MaxSnapshot = (int?) content.GetValueForProperty("MaxSnapshot",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).MaxSnapshot, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NumberOfSnapshot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NumberOfSnapshot = (int?) content.GetValueForProperty("NumberOfSnapshot",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NumberOfSnapshot, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DiskEnabledUuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).DiskEnabledUuid = (string) content.GetValueForProperty("DiskEnabledUuid",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).DiskEnabledUuid, global::System.Convert.ToString);
            }
            if (content.Contains("ComputerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ComputerName = (string) content.GetValueForProperty("ComputerName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ComputerName, global::System.Convert.ToString);
            }
            if (content.Contains("MemorySizeMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).MemorySizeMb = (int?) content.GetValueForProperty("MemorySizeMb",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).MemorySizeMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NumCpUs"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NumCpUs = (int?) content.GetValueForProperty("NumCpUs",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NumCpUs, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("InventoryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).InventoryType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType) content.GetValueForProperty("InventoryType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).InventoryType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType.CreateFrom);
            }
            if (content.Contains("ManagedResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).ManagedResourceId = (string) content.GetValueForProperty("ManagedResourceId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).ManagedResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("MoRefId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).MoRefId = (string) content.GetValueForProperty("MoRefId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).MoRefId, global::System.Convert.ToString);
            }
            if (content.Contains("MoName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).MoName = (string) content.GetValueForProperty("MoName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).MoName, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IInventoryItemPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("HostInventoryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostInventoryType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType?) content.GetValueForProperty("HostInventoryType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostInventoryType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType.CreateFrom);
            }
            if (content.Contains("ResourcePoolInventoryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolInventoryType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType?) content.GetValueForProperty("ResourcePoolInventoryType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolInventoryType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType.CreateFrom);
            }
            if (content.Contains("ClusterInventoryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterInventoryType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType?) content.GetValueForProperty("ClusterInventoryType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterInventoryType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.InventoryType.CreateFrom);
            }
            if (content.Contains("HostInventoryItemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostInventoryItemId = (string) content.GetValueForProperty("HostInventoryItemId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostInventoryItemId, global::System.Convert.ToString);
            }
            if (content.Contains("HostMoName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostMoName = (string) content.GetValueForProperty("HostMoName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).HostMoName, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolInventoryItemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolInventoryItemId = (string) content.GetValueForProperty("ResourcePoolInventoryItemId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolInventoryItemId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourcePoolMoName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolMoName = (string) content.GetValueForProperty("ResourcePoolMoName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ResourcePoolMoName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterInventoryItemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterInventoryItemId = (string) content.GetValueForProperty("ClusterInventoryItemId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterInventoryItemId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterMoName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterMoName = (string) content.GetValueForProperty("ClusterMoName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).ClusterMoName, global::System.Convert.ToString);
            }
            if (content.Contains("StorageProfileDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).StorageProfileDisk = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventory[]) content.GetValueForProperty("StorageProfileDisk",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).StorageProfileDisk, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualDiskInventory>(__y, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.VirtualDiskInventoryTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkProfileNetworkInterface"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NetworkProfileNetworkInterface = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.INetworkInterfaceInventory[]) content.GetValueForProperty("NetworkProfileNetworkInterface",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IVirtualMachineInventoryItemInternal)this).NetworkProfileNetworkInterface, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.INetworkInterfaceInventory>(__y, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.NetworkInterfaceInventoryTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// The VM inventory item.
    [System.ComponentModel.TypeConverter(typeof(VirtualMachineInventoryItemTypeConverter))]
    public partial interface IVirtualMachineInventoryItem

    {

    }
}