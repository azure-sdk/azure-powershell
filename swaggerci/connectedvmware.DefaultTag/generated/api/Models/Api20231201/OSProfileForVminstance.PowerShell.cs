// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201
{
    using Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.PowerShell;

    /// <summary>Specifies the operating system settings for the virtual machine.</summary>
    [System.ComponentModel.TypeConverter(typeof(OSProfileForVminstanceTypeConverter))]
    public partial class OSProfileForVminstance
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.OSProfileForVminstance"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstance"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstance DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new OSProfileForVminstance(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.OSProfileForVminstance"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstance"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstance DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new OSProfileForVminstance(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="OSProfileForVminstance" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="OSProfileForVminstance" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstance FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.OSProfileForVminstance"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal OSProfileForVminstance(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("WindowsConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowsConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IWindowsConfiguration) content.GetValueForProperty("WindowsConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowsConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.WindowsConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ComputerName = (string) content.GetValueForProperty("ComputerName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ComputerName, global::System.Convert.ToString);
            }
            if (content.Contains("AdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).AdminUsername = (string) content.GetValueForProperty("AdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).AdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("AdminPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).AdminPassword = (string) content.GetValueForProperty("AdminPassword",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).AdminPassword, global::System.Convert.ToString);
            }
            if (content.Contains("GuestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).GuestId = (string) content.GetValueForProperty("GuestId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).GuestId, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType.CreateFrom);
            }
            if (content.Contains("OSSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).OSSku = (string) content.GetValueForProperty("OSSku",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).OSSku, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsRunningStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsRunningStatus = (string) content.GetValueForProperty("ToolsRunningStatus",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsRunningStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsVersionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsVersionStatus = (string) content.GetValueForProperty("ToolsVersionStatus",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsVersionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsVersion = (string) content.GetValueForProperty("ToolsVersion",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsVersion, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationFullName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationFullName = (string) content.GetValueForProperty("WindowConfigurationFullName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationFullName, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationOrgName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationOrgName = (string) content.GetValueForProperty("WindowConfigurationOrgName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationOrgName, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainName = (string) content.GetValueForProperty("WindowConfigurationDomainName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationDomainUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainUsername = (string) content.GetValueForProperty("WindowConfigurationDomainUsername",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainUsername, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationProductId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationProductId = (string) content.GetValueForProperty("WindowConfigurationProductId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationProductId, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationTimeZone = (string) content.GetValueForProperty("WindowConfigurationTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationDomainUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainUserPassword = (string) content.GetValueForProperty("WindowConfigurationDomainUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainUserPassword, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationWorkGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationWorkGroupName = (string) content.GetValueForProperty("WindowConfigurationWorkGroupName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationWorkGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationAutoLogon"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationAutoLogon = (bool?) content.GetValueForProperty("WindowConfigurationAutoLogon",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationAutoLogon, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowConfigurationAutoLogonCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationAutoLogonCount = (int?) content.GetValueForProperty("WindowConfigurationAutoLogonCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationAutoLogonCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WindowConfigurationFirstLogonCommand"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationFirstLogonCommand = (string[]) content.GetValueForProperty("WindowConfigurationFirstLogonCommand",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationFirstLogonCommand, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.OSProfileForVminstance"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal OSProfileForVminstance(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("WindowsConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowsConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IWindowsConfiguration) content.GetValueForProperty("WindowsConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowsConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.WindowsConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ComputerName = (string) content.GetValueForProperty("ComputerName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ComputerName, global::System.Convert.ToString);
            }
            if (content.Contains("AdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).AdminUsername = (string) content.GetValueForProperty("AdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).AdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("AdminPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).AdminPassword = (string) content.GetValueForProperty("AdminPassword",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).AdminPassword, global::System.Convert.ToString);
            }
            if (content.Contains("GuestId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).GuestId = (string) content.GetValueForProperty("GuestId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).GuestId, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSType.CreateFrom);
            }
            if (content.Contains("OSSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).OSSku = (string) content.GetValueForProperty("OSSku",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).OSSku, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsRunningStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsRunningStatus = (string) content.GetValueForProperty("ToolsRunningStatus",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsRunningStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsVersionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsVersionStatus = (string) content.GetValueForProperty("ToolsVersionStatus",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsVersionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ToolsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsVersion = (string) content.GetValueForProperty("ToolsVersion",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).ToolsVersion, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationFullName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationFullName = (string) content.GetValueForProperty("WindowConfigurationFullName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationFullName, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationOrgName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationOrgName = (string) content.GetValueForProperty("WindowConfigurationOrgName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationOrgName, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainName = (string) content.GetValueForProperty("WindowConfigurationDomainName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationDomainUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainUsername = (string) content.GetValueForProperty("WindowConfigurationDomainUsername",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainUsername, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationProductId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationProductId = (string) content.GetValueForProperty("WindowConfigurationProductId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationProductId, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationTimeZone = (string) content.GetValueForProperty("WindowConfigurationTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationDomainUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainUserPassword = (string) content.GetValueForProperty("WindowConfigurationDomainUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationDomainUserPassword, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationWorkGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationWorkGroupName = (string) content.GetValueForProperty("WindowConfigurationWorkGroupName",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationWorkGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("WindowConfigurationAutoLogon"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationAutoLogon = (bool?) content.GetValueForProperty("WindowConfigurationAutoLogon",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationAutoLogon, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowConfigurationAutoLogonCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationAutoLogonCount = (int?) content.GetValueForProperty("WindowConfigurationAutoLogonCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationAutoLogonCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WindowConfigurationFirstLogonCommand"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationFirstLogonCommand = (string[]) content.GetValueForProperty("WindowConfigurationFirstLogonCommand",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231201.IOSProfileForVminstanceInternal)this).WindowConfigurationFirstLogonCommand, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Specifies the operating system settings for the virtual machine.
    [System.ComponentModel.TypeConverter(typeof(OSProfileForVminstanceTypeConverter))]
    public partial interface IOSProfileForVminstance

    {

    }
}