// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Extensions;

    /// <summary>Specifies the vCenter infrastructure specific settings for the virtual machine.</summary>
    public partial class InfrastructureProfile
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231001.IInfrastructureProfile.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231001.IInfrastructureProfile.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20231001.IInfrastructureProfile FromJson(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject json ? new InfrastructureProfile(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject into a new instance of <see cref="InfrastructureProfile" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal InfrastructureProfile(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_templateId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("templateId"), out var __jsonTemplateId) ? (string)__jsonTemplateId : (string)TemplateId;}
            {_vCenterId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("vCenterId"), out var __jsonVCenterId) ? (string)__jsonVCenterId : (string)VCenterId;}
            {_moRefId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("moRefId"), out var __jsonMoRefId) ? (string)__jsonMoRefId : (string)MoRefId;}
            {_inventoryItemId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("inventoryItemId"), out var __jsonInventoryItemId) ? (string)__jsonInventoryItemId : (string)InventoryItemId;}
            {_moName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("moName"), out var __jsonMoName) ? (string)__jsonMoName : (string)MoName;}
            {_folderPath = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("folderPath"), out var __jsonFolderPath) ? (string)__jsonFolderPath : (string)FolderPath;}
            {_instanceUuid = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("instanceUuid"), out var __jsonInstanceUuid) ? (string)__jsonInstanceUuid : (string)InstanceUuid;}
            {_smbiosUuid = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("smbiosUuid"), out var __jsonSmbiosUuid) ? (string)__jsonSmbiosUuid : (string)SmbiosUuid;}
            {_firmwareType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("firmwareType"), out var __jsonFirmwareType) ? (string)__jsonFirmwareType : (string)FirmwareType;}
            {_customResourceName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString>("customResourceName"), out var __jsonCustomResourceName) ? (string)__jsonCustomResourceName : (string)CustomResourceName;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="InfrastructureProfile" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="InfrastructureProfile" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._templateId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._templateId.ToString()) : null, "templateId" ,container.Add );
            AddIf( null != (((object)this._vCenterId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._vCenterId.ToString()) : null, "vCenterId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._moRefId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._moRefId.ToString()) : null, "moRefId" ,container.Add );
            }
            AddIf( null != (((object)this._inventoryItemId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._inventoryItemId.ToString()) : null, "inventoryItemId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._moName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._moName.ToString()) : null, "moName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._folderPath)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._folderPath.ToString()) : null, "folderPath" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._instanceUuid)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._instanceUuid.ToString()) : null, "instanceUuid" ,container.Add );
            }
            AddIf( null != (((object)this._smbiosUuid)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._smbiosUuid.ToString()) : null, "smbiosUuid" ,container.Add );
            AddIf( null != (((object)this._firmwareType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._firmwareType.ToString()) : null, "firmwareType" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._customResourceName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonString(this._customResourceName.ToString()) : null, "customResourceName" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}