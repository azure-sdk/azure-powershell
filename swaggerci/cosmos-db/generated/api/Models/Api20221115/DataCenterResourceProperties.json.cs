// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Extensions;

    /// <summary>Properties of a managed Cassandra data center.</summary>
    public partial class DataCenterResourceProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject into a new instance of <see cref="DataCenterResourceProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal DataCenterResourceProperties(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_dataCenterLocation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("dataCenterLocation"), out var __jsonDataCenterLocation) ? (string)__jsonDataCenterLocation : (string)DataCenterLocation;}
            {_delegatedSubnetId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("delegatedSubnetId"), out var __jsonDelegatedSubnetId) ? (string)__jsonDelegatedSubnetId : (string)DelegatedSubnetId;}
            {_nodeCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber>("nodeCount"), out var __jsonNodeCount) ? (int?)__jsonNodeCount : NodeCount;}
            {_seedNode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray>("seedNodes"), out var __jsonSeedNodes) ? If( __jsonSeedNodes as Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode) (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.SeedNode.FromJson(__u) )) ))() : null : SeedNode;}
            {_base64EncodedCassandraYamlFragment = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("base64EncodedCassandraYamlFragment"), out var __jsonBase64EncodedCassandraYamlFragment) ? (string)__jsonBase64EncodedCassandraYamlFragment : (string)Base64EncodedCassandraYamlFragment;}
            {_managedDiskCustomerKeyUri = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("managedDiskCustomerKeyUri"), out var __jsonManagedDiskCustomerKeyUri) ? (string)__jsonManagedDiskCustomerKeyUri : (string)ManagedDiskCustomerKeyUri;}
            {_backupStorageCustomerKeyUri = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("backupStorageCustomerKeyUri"), out var __jsonBackupStorageCustomerKeyUri) ? (string)__jsonBackupStorageCustomerKeyUri : (string)BackupStorageCustomerKeyUri;}
            {_sku = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("sku"), out var __jsonSku) ? (string)__jsonSku : (string)Sku;}
            {_diskSku = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("diskSku"), out var __jsonDiskSku) ? (string)__jsonDiskSku : (string)DiskSku;}
            {_diskCapacity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber>("diskCapacity"), out var __jsonDiskCapacity) ? (int?)__jsonDiskCapacity : DiskCapacity;}
            {_availabilityZone = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonBoolean>("availabilityZone"), out var __jsonAvailabilityZone) ? (bool?)__jsonAvailabilityZone : AvailabilityZone;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json ? new DataCenterResourceProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="DataCenterResourceProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="DataCenterResourceProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            AddIf( null != (((object)this._dataCenterLocation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._dataCenterLocation.ToString()) : null, "dataCenterLocation" ,container.Add );
            AddIf( null != (((object)this._delegatedSubnetId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._delegatedSubnetId.ToString()) : null, "delegatedSubnetId" ,container.Add );
            AddIf( null != this._nodeCount ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber((int)this._nodeCount) : null, "nodeCount" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._seedNode)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.XNodeArray();
                    foreach( var __x in this._seedNode )
                    {
                        AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                    }
                    container.Add("seedNodes",__w);
                }
            }
            AddIf( null != (((object)this._base64EncodedCassandraYamlFragment)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._base64EncodedCassandraYamlFragment.ToString()) : null, "base64EncodedCassandraYamlFragment" ,container.Add );
            AddIf( null != (((object)this._managedDiskCustomerKeyUri)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._managedDiskCustomerKeyUri.ToString()) : null, "managedDiskCustomerKeyUri" ,container.Add );
            AddIf( null != (((object)this._backupStorageCustomerKeyUri)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._backupStorageCustomerKeyUri.ToString()) : null, "backupStorageCustomerKeyUri" ,container.Add );
            AddIf( null != (((object)this._sku)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._sku.ToString()) : null, "sku" ,container.Add );
            AddIf( null != (((object)this._diskSku)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._diskSku.ToString()) : null, "diskSku" ,container.Add );
            AddIf( null != this._diskCapacity ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber((int)this._diskCapacity) : null, "diskCapacity" ,container.Add );
            AddIf( null != this._availabilityZone ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonBoolean((bool)this._availabilityZone) : null, "availabilityZone" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}