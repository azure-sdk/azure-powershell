// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Extensions;

    /// <summary>Properties of a managed Cassandra cluster.</summary>
    public partial class ClusterResourceProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject into a new instance of <see cref="ClusterResourceProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ClusterResourceProperties(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_prometheusEndpoint = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject>("prometheusEndpoint"), out var __jsonPrometheusEndpoint) ? Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.SeedNode.FromJson(__jsonPrometheusEndpoint) : PrometheusEndpoint;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_restoreFromBackupId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("restoreFromBackupId"), out var __jsonRestoreFromBackupId) ? (string)__jsonRestoreFromBackupId : (string)RestoreFromBackupId;}
            {_delegatedManagementSubnetId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("delegatedManagementSubnetId"), out var __jsonDelegatedManagementSubnetId) ? (string)__jsonDelegatedManagementSubnetId : (string)DelegatedManagementSubnetId;}
            {_cassandraVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("cassandraVersion"), out var __jsonCassandraVersion) ? (string)__jsonCassandraVersion : (string)CassandraVersion;}
            {_clusterNameOverride = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("clusterNameOverride"), out var __jsonClusterNameOverride) ? (string)__jsonClusterNameOverride : (string)ClusterNameOverride;}
            {_authenticationMethod = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("authenticationMethod"), out var __jsonAuthenticationMethod) ? (string)__jsonAuthenticationMethod : (string)AuthenticationMethod;}
            {_initialCassandraAdminPassword = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("initialCassandraAdminPassword"), out var __jsonInitialCassandraAdminPassword) ? (string)__jsonInitialCassandraAdminPassword : (string)InitialCassandraAdminPassword;}
            {_repairEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonBoolean>("repairEnabled"), out var __jsonRepairEnabled) ? (bool?)__jsonRepairEnabled : RepairEnabled;}
            {_clientCertificate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray>("clientCertificates"), out var __jsonClientCertificates) ? If( __jsonClientCertificates as Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICertificate[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICertificate) (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.Certificate.FromJson(__u) )) ))() : null : ClientCertificate;}
            {_externalGossipCertificate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray>("externalGossipCertificates"), out var __jsonExternalGossipCertificates) ? If( __jsonExternalGossipCertificates as Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICertificate[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICertificate) (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.Certificate.FromJson(__p) )) ))() : null : ExternalGossipCertificate;}
            {_gossipCertificate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray>("gossipCertificates"), out var __jsonGossipCertificates) ? If( __jsonGossipCertificates as Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICertificate[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICertificate) (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.Certificate.FromJson(__k) )) ))() : null : GossipCertificate;}
            {_externalSeedNode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray>("externalSeedNodes"), out var __jsonExternalSeedNodes) ? If( __jsonExternalSeedNodes as Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode) (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.SeedNode.FromJson(__f) )) ))() : null : ExternalSeedNode;}
            {_seedNode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray>("seedNodes"), out var __jsonSeedNodes) ? If( __jsonSeedNodes as Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__b, (__a)=>(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode) (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.SeedNode.FromJson(__a) )) ))() : null : SeedNode;}
            {_hoursBetweenBackup = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber>("hoursBetweenBackups"), out var __jsonHoursBetweenBackups) ? (int?)__jsonHoursBetweenBackups : HoursBetweenBackup;}
            {_deallocated = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonBoolean>("deallocated"), out var __jsonDeallocated) ? (bool?)__jsonDeallocated : Deallocated;}
            {_cassandraAuditLoggingEnabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonBoolean>("cassandraAuditLoggingEnabled"), out var __jsonCassandraAuditLoggingEnabled) ? (bool?)__jsonCassandraAuditLoggingEnabled : CassandraAuditLoggingEnabled;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IClusterResourceProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IClusterResourceProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IClusterResourceProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json ? new ClusterResourceProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="ClusterResourceProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ClusterResourceProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._prometheusEndpoint ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) this._prometheusEndpoint.ToJson(null,serializationMode) : null, "prometheusEndpoint" ,container.Add );
            AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            AddIf( null != (((object)this._restoreFromBackupId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._restoreFromBackupId.ToString()) : null, "restoreFromBackupId" ,container.Add );
            AddIf( null != (((object)this._delegatedManagementSubnetId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._delegatedManagementSubnetId.ToString()) : null, "delegatedManagementSubnetId" ,container.Add );
            AddIf( null != (((object)this._cassandraVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._cassandraVersion.ToString()) : null, "cassandraVersion" ,container.Add );
            AddIf( null != (((object)this._clusterNameOverride)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._clusterNameOverride.ToString()) : null, "clusterNameOverride" ,container.Add );
            AddIf( null != (((object)this._authenticationMethod)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._authenticationMethod.ToString()) : null, "authenticationMethod" ,container.Add );
            AddIf( null != (((object)this._initialCassandraAdminPassword)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._initialCassandraAdminPassword.ToString()) : null, "initialCassandraAdminPassword" ,container.Add );
            AddIf( null != this._repairEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonBoolean((bool)this._repairEnabled) : null, "repairEnabled" ,container.Add );
            if (null != this._clientCertificate)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.XNodeArray();
                foreach( var __x in this._clientCertificate )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("clientCertificates",__w);
            }
            if (null != this._externalGossipCertificate)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.XNodeArray();
                foreach( var __s in this._externalGossipCertificate )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("externalGossipCertificates",__r);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._gossipCertificate)
                {
                    var __m = new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.XNodeArray();
                    foreach( var __n in this._gossipCertificate )
                    {
                        AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                    }
                    container.Add("gossipCertificates",__m);
                }
            }
            if (null != this._externalSeedNode)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.XNodeArray();
                foreach( var __i in this._externalSeedNode )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("externalSeedNodes",__h);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._seedNode)
                {
                    var __c = new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.XNodeArray();
                    foreach( var __d in this._seedNode )
                    {
                        AddIf(__d?.ToJson(null, serializationMode) ,__c.Add);
                    }
                    container.Add("seedNodes",__c);
                }
            }
            AddIf( null != this._hoursBetweenBackup ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber((int)this._hoursBetweenBackup) : null, "hoursBetweenBackups" ,container.Add );
            AddIf( null != this._deallocated ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonBoolean((bool)this._deallocated) : null, "deallocated" ,container.Add );
            AddIf( null != this._cassandraAuditLoggingEnabled ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonBoolean((bool)this._cassandraAuditLoggingEnabled) : null, "cassandraAuditLoggingEnabled" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}