// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115
{
    using Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(CassandraReaperRunStatusTypeConverter))]
    public partial class CassandraReaperRunStatus
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.CassandraReaperRunStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CassandraReaperRunStatus(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Cause"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Cause = (string) content.GetValueForProperty("Cause",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Cause, global::System.Convert.ToString);
            }
            if (content.Contains("Owner"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Owner = (string) content.GetValueForProperty("Owner",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Owner, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).ClusterName = (string) content.GetValueForProperty("ClusterName",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).ClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("ColumnFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).ColumnFamily = (string[]) content.GetValueForProperty("ColumnFamily",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).ColumnFamily, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("KeyspaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).KeyspaceName = (string) content.GetValueForProperty("KeyspaceName",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).KeyspaceName, global::System.Convert.ToString);
            }
            if (content.Contains("RepairState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairState = (string) content.GetValueForProperty("RepairState",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairState, global::System.Convert.ToString);
            }
            if (content.Contains("Intensity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Intensity = (double?) content.GetValueForProperty("Intensity",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Intensity, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("IncrementalRepair"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).IncrementalRepair = (bool?) content.GetValueForProperty("IncrementalRepair",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).IncrementalRepair, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TotalSegment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).TotalSegment = (int?) content.GetValueForProperty("TotalSegment",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).TotalSegment, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RepairParallelism"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairParallelism = (string) content.GetValueForProperty("RepairParallelism",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairParallelism, global::System.Convert.ToString);
            }
            if (content.Contains("SegmentsRepaired"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).SegmentsRepaired = (int?) content.GetValueForProperty("SegmentsRepaired",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).SegmentsRepaired, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LastEvent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).LastEvent = (string) content.GetValueForProperty("LastEvent",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).LastEvent, global::System.Convert.ToString);
            }
            if (content.Contains("Duration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Duration = (string) content.GetValueForProperty("Duration",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Duration, global::System.Convert.ToString);
            }
            if (content.Contains("Node"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Node = (string[]) content.GetValueForProperty("Node",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Node, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Datacenter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Datacenter = (string[]) content.GetValueForProperty("Datacenter",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Datacenter, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BlacklistedTable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).BlacklistedTable = (string[]) content.GetValueForProperty("BlacklistedTable",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).BlacklistedTable, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RepairThreadCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairThreadCount = (int?) content.GetValueForProperty("RepairThreadCount",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairThreadCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RepairUnitId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairUnitId = (string) content.GetValueForProperty("RepairUnitId",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairUnitId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.CassandraReaperRunStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CassandraReaperRunStatus(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Cause"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Cause = (string) content.GetValueForProperty("Cause",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Cause, global::System.Convert.ToString);
            }
            if (content.Contains("Owner"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Owner = (string) content.GetValueForProperty("Owner",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Owner, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).ClusterName = (string) content.GetValueForProperty("ClusterName",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).ClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("ColumnFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).ColumnFamily = (string[]) content.GetValueForProperty("ColumnFamily",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).ColumnFamily, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("KeyspaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).KeyspaceName = (string) content.GetValueForProperty("KeyspaceName",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).KeyspaceName, global::System.Convert.ToString);
            }
            if (content.Contains("RepairState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairState = (string) content.GetValueForProperty("RepairState",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairState, global::System.Convert.ToString);
            }
            if (content.Contains("Intensity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Intensity = (double?) content.GetValueForProperty("Intensity",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Intensity, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("IncrementalRepair"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).IncrementalRepair = (bool?) content.GetValueForProperty("IncrementalRepair",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).IncrementalRepair, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TotalSegment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).TotalSegment = (int?) content.GetValueForProperty("TotalSegment",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).TotalSegment, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RepairParallelism"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairParallelism = (string) content.GetValueForProperty("RepairParallelism",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairParallelism, global::System.Convert.ToString);
            }
            if (content.Contains("SegmentsRepaired"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).SegmentsRepaired = (int?) content.GetValueForProperty("SegmentsRepaired",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).SegmentsRepaired, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LastEvent"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).LastEvent = (string) content.GetValueForProperty("LastEvent",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).LastEvent, global::System.Convert.ToString);
            }
            if (content.Contains("Duration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Duration = (string) content.GetValueForProperty("Duration",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Duration, global::System.Convert.ToString);
            }
            if (content.Contains("Node"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Node = (string[]) content.GetValueForProperty("Node",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Node, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Datacenter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Datacenter = (string[]) content.GetValueForProperty("Datacenter",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).Datacenter, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("BlacklistedTable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).BlacklistedTable = (string[]) content.GetValueForProperty("BlacklistedTable",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).BlacklistedTable, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RepairThreadCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairThreadCount = (int?) content.GetValueForProperty("RepairThreadCount",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairThreadCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RepairUnitId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairUnitId = (string) content.GetValueForProperty("RepairUnitId",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal)this).RepairUnitId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.CassandraReaperRunStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatus" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatus DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CassandraReaperRunStatus(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.CassandraReaperRunStatus"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatus" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatus DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CassandraReaperRunStatus(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CassandraReaperRunStatus" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="CassandraReaperRunStatus" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatus FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    [System.ComponentModel.TypeConverter(typeof(CassandraReaperRunStatusTypeConverter))]
    public partial interface ICassandraReaperRunStatus

    {

    }
}