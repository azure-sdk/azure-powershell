// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Extensions;

    public partial class ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems,
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItemsInternal
    {

        /// <summary>Backing field for <see cref="Address" /> property.</summary>
        private string _address;

        /// <summary>The node's IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string Address { get => this._address; set => this._address = value; }

        /// <summary>Backing field for <see cref="CpuUsage" /> property.</summary>
        private double? _cpuUsage;

        /// <summary>A float representing the current system-wide CPU utilization as a percentage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public double? CpuUsage { get => this._cpuUsage; set => this._cpuUsage = value; }

        /// <summary>Backing field for <see cref="DiskFreeKb" /> property.</summary>
        private long? _diskFreeKb;

        /// <summary>The amount of disk free, in kB, of the directory /var/lib/cassandra.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public long? DiskFreeKb { get => this._diskFreeKb; set => this._diskFreeKb = value; }

        /// <summary>Backing field for <see cref="DiskUsedKb" /> property.</summary>
        private long? _diskUsedKb;

        /// <summary>The amount of disk used, in kB, of the directory /var/lib/cassandra.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public long? DiskUsedKb { get => this._diskUsedKb; set => this._diskUsedKb = value; }

        /// <summary>Backing field for <see cref="HostId" /> property.</summary>
        private string _hostId;

        /// <summary>The network ID of the node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string HostId { get => this._hostId; set => this._hostId = value; }

        /// <summary>Backing field for <see cref="Load" /> property.</summary>
        private string _load;

        /// <summary>
        /// The amount of file system data in the data directory (e.g., 47.66 kB), excluding all content in the snapshots subdirectories.
        /// Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cells or tombstones)
        /// is counted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string Load { get => this._load; set => this._load = value; }

        /// <summary>Backing field for <see cref="MemoryBuffersAndCachedKb" /> property.</summary>
        private long? _memoryBuffersAndCachedKb;

        /// <summary>
        /// Memory used by kernel buffers (Buffers in /proc/meminfo) and page cache and slabs (Cached and SReclaimable in /proc/meminfo),
        /// in kB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public long? MemoryBuffersAndCachedKb { get => this._memoryBuffersAndCachedKb; set => this._memoryBuffersAndCachedKb = value; }

        /// <summary>Backing field for <see cref="MemoryFreeKb" /> property.</summary>
        private long? _memoryFreeKb;

        /// <summary>Unused memory (MemFree and SwapFree in /proc/meminfo), in kB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public long? MemoryFreeKb { get => this._memoryFreeKb; set => this._memoryFreeKb = value; }

        /// <summary>Backing field for <see cref="MemoryTotalKb" /> property.</summary>
        private long? _memoryTotalKb;

        /// <summary>Total installed memory (MemTotal and SwapTotal in /proc/meminfo), in kB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public long? MemoryTotalKb { get => this._memoryTotalKb; set => this._memoryTotalKb = value; }

        /// <summary>Backing field for <see cref="MemoryUsedKb" /> property.</summary>
        private long? _memoryUsedKb;

        /// <summary>Used memory (calculated as total - free - buffers - cache), in kB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public long? MemoryUsedKb { get => this._memoryUsedKb; set => this._memoryUsedKb = value; }

        /// <summary>Backing field for <see cref="Rack" /> property.</summary>
        private string _rack;

        /// <summary>The rack this node is part of.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string Rack { get => this._rack; set => this._rack = value; }

        /// <summary>Backing field for <see cref="Size" /> property.</summary>
        private int? _size;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public int? Size { get => this._size; set => this._size = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.NodeState? _state;

        /// <summary>The state of the node in Cassandra ring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.NodeState? State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="Timestamp" /> property.</summary>
        private string _timestamp;

        /// <summary>The timestamp when these statistics were captured.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string Timestamp { get => this._timestamp; set => this._timestamp = value; }

        /// <summary>Backing field for <see cref="Token" /> property.</summary>
        private string[] _token;

        /// <summary>List of tokens this node covers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string[] Token { get => this._token; set => this._token = value; }

        /// <summary>
        /// Creates an new <see cref="ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems"
        /// /> instance.
        /// </summary>
        public ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems()
        {

        }
    }
    public partial interface IComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.IJsonSerializable
    {
        /// <summary>The node's IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The node's IP address.",
        SerializedName = @"address",
        PossibleTypes = new [] { typeof(string) })]
        string Address { get; set; }
        /// <summary>A float representing the current system-wide CPU utilization as a percentage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A float representing the current system-wide CPU utilization as a percentage.",
        SerializedName = @"cpuUsage",
        PossibleTypes = new [] { typeof(double) })]
        double? CpuUsage { get; set; }
        /// <summary>The amount of disk free, in kB, of the directory /var/lib/cassandra.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of disk free, in kB, of the directory /var/lib/cassandra.",
        SerializedName = @"diskFreeKB",
        PossibleTypes = new [] { typeof(long) })]
        long? DiskFreeKb { get; set; }
        /// <summary>The amount of disk used, in kB, of the directory /var/lib/cassandra.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of disk used, in kB, of the directory /var/lib/cassandra.",
        SerializedName = @"diskUsedKB",
        PossibleTypes = new [] { typeof(long) })]
        long? DiskUsedKb { get; set; }
        /// <summary>The network ID of the node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The network ID of the node.",
        SerializedName = @"hostID",
        PossibleTypes = new [] { typeof(string) })]
        string HostId { get; set; }
        /// <summary>
        /// The amount of file system data in the data directory (e.g., 47.66 kB), excluding all content in the snapshots subdirectories.
        /// Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cells or tombstones)
        /// is counted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The amount of file system data in the data directory (e.g., 47.66 kB), excluding all content in the snapshots subdirectories. Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cells or tombstones) is counted.",
        SerializedName = @"load",
        PossibleTypes = new [] { typeof(string) })]
        string Load { get; set; }
        /// <summary>
        /// Memory used by kernel buffers (Buffers in /proc/meminfo) and page cache and slabs (Cached and SReclaimable in /proc/meminfo),
        /// in kB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Memory used by kernel buffers (Buffers in /proc/meminfo) and page cache and slabs (Cached and SReclaimable in /proc/meminfo), in kB.",
        SerializedName = @"memoryBuffersAndCachedKB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemoryBuffersAndCachedKb { get; set; }
        /// <summary>Unused memory (MemFree and SwapFree in /proc/meminfo), in kB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unused memory (MemFree and SwapFree in /proc/meminfo), in kB.",
        SerializedName = @"memoryFreeKB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemoryFreeKb { get; set; }
        /// <summary>Total installed memory (MemTotal and SwapTotal in /proc/meminfo), in kB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total installed memory (MemTotal and SwapTotal in /proc/meminfo), in kB.",
        SerializedName = @"memoryTotalKB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemoryTotalKb { get; set; }
        /// <summary>Used memory (calculated as total - free - buffers - cache), in kB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used memory (calculated as total - free - buffers - cache), in kB.",
        SerializedName = @"memoryUsedKB",
        PossibleTypes = new [] { typeof(long) })]
        long? MemoryUsedKb { get; set; }
        /// <summary>The rack this node is part of.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rack this node is part of.",
        SerializedName = @"rack",
        PossibleTypes = new [] { typeof(string) })]
        string Rack { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(int) })]
        int? Size { get; set; }
        /// <summary>The state of the node in Cassandra ring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of the node in Cassandra ring.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.NodeState) })]
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.NodeState? State { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get; set; }
        /// <summary>The timestamp when these statistics were captured.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp when these statistics were captured.",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(string) })]
        string Timestamp { get; set; }
        /// <summary>List of tokens this node covers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of tokens this node covers.",
        SerializedName = @"tokens",
        PossibleTypes = new [] { typeof(string) })]
        string[] Token { get; set; }

    }
    internal partial interface IComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItemsInternal

    {
        /// <summary>The node's IP address.</summary>
        string Address { get; set; }
        /// <summary>A float representing the current system-wide CPU utilization as a percentage.</summary>
        double? CpuUsage { get; set; }
        /// <summary>The amount of disk free, in kB, of the directory /var/lib/cassandra.</summary>
        long? DiskFreeKb { get; set; }
        /// <summary>The amount of disk used, in kB, of the directory /var/lib/cassandra.</summary>
        long? DiskUsedKb { get; set; }
        /// <summary>The network ID of the node.</summary>
        string HostId { get; set; }
        /// <summary>
        /// The amount of file system data in the data directory (e.g., 47.66 kB), excluding all content in the snapshots subdirectories.
        /// Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cells or tombstones)
        /// is counted.
        /// </summary>
        string Load { get; set; }
        /// <summary>
        /// Memory used by kernel buffers (Buffers in /proc/meminfo) and page cache and slabs (Cached and SReclaimable in /proc/meminfo),
        /// in kB.
        /// </summary>
        long? MemoryBuffersAndCachedKb { get; set; }
        /// <summary>Unused memory (MemFree and SwapFree in /proc/meminfo), in kB.</summary>
        long? MemoryFreeKb { get; set; }
        /// <summary>Total installed memory (MemTotal and SwapTotal in /proc/meminfo), in kB.</summary>
        long? MemoryTotalKb { get; set; }
        /// <summary>Used memory (calculated as total - free - buffers - cache), in kB.</summary>
        long? MemoryUsedKb { get; set; }
        /// <summary>The rack this node is part of.</summary>
        string Rack { get; set; }

        int? Size { get; set; }
        /// <summary>The state of the node in Cassandra ring.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.NodeState? State { get; set; }

        string Status { get; set; }
        /// <summary>The timestamp when these statistics were captured.</summary>
        string Timestamp { get; set; }
        /// <summary>List of tokens this node covers.</summary>
        string[] Token { get; set; }

    }
}