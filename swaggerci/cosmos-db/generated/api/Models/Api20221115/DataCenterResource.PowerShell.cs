// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115
{
    using Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.PowerShell;

    /// <summary>A managed Cassandra data center.</summary>
    [System.ComponentModel.TypeConverter(typeof(DataCenterResourceTypeConverter))]
    public partial class DataCenterResource
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.DataCenterResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal DataCenterResource(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.DataCenterResourcePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.ManagedCassandraProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.ManagedCassandraProvisioningState.CreateFrom);
            }
            if (content.Contains("DataCenterLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DataCenterLocation = (string) content.GetValueForProperty("DataCenterLocation",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DataCenterLocation, global::System.Convert.ToString);
            }
            if (content.Contains("DelegatedSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DelegatedSubnetId = (string) content.GetValueForProperty("DelegatedSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DelegatedSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("NodeCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).NodeCount = (int?) content.GetValueForProperty("NodeCount",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).NodeCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SeedNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).SeedNode = (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode[]) content.GetValueForProperty("SeedNode",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).SeedNode, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode>(__y, Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.SeedNodeTypeConverter.ConvertFrom));
            }
            if (content.Contains("Base64EncodedCassandraYamlFragment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Base64EncodedCassandraYamlFragment = (string) content.GetValueForProperty("Base64EncodedCassandraYamlFragment",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Base64EncodedCassandraYamlFragment, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedDiskCustomerKeyUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).ManagedDiskCustomerKeyUri = (string) content.GetValueForProperty("ManagedDiskCustomerKeyUri",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).ManagedDiskCustomerKeyUri, global::System.Convert.ToString);
            }
            if (content.Contains("BackupStorageCustomerKeyUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).BackupStorageCustomerKeyUri = (string) content.GetValueForProperty("BackupStorageCustomerKeyUri",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).BackupStorageCustomerKeyUri, global::System.Convert.ToString);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Sku = (string) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Sku, global::System.Convert.ToString);
            }
            if (content.Contains("DiskSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DiskSku = (string) content.GetValueForProperty("DiskSku",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DiskSku, global::System.Convert.ToString);
            }
            if (content.Contains("DiskCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DiskCapacity = (int?) content.GetValueForProperty("DiskCapacity",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DiskCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).AvailabilityZone = (bool?) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).AvailabilityZone, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.DataCenterResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal DataCenterResource(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.DataCenterResourcePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20220815.IArmProxyResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.ManagedCassandraProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.ManagedCassandraProvisioningState.CreateFrom);
            }
            if (content.Contains("DataCenterLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DataCenterLocation = (string) content.GetValueForProperty("DataCenterLocation",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DataCenterLocation, global::System.Convert.ToString);
            }
            if (content.Contains("DelegatedSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DelegatedSubnetId = (string) content.GetValueForProperty("DelegatedSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DelegatedSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("NodeCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).NodeCount = (int?) content.GetValueForProperty("NodeCount",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).NodeCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SeedNode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).SeedNode = (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode[]) content.GetValueForProperty("SeedNode",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).SeedNode, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode>(__y, Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.SeedNodeTypeConverter.ConvertFrom));
            }
            if (content.Contains("Base64EncodedCassandraYamlFragment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Base64EncodedCassandraYamlFragment = (string) content.GetValueForProperty("Base64EncodedCassandraYamlFragment",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Base64EncodedCassandraYamlFragment, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedDiskCustomerKeyUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).ManagedDiskCustomerKeyUri = (string) content.GetValueForProperty("ManagedDiskCustomerKeyUri",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).ManagedDiskCustomerKeyUri, global::System.Convert.ToString);
            }
            if (content.Contains("BackupStorageCustomerKeyUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).BackupStorageCustomerKeyUri = (string) content.GetValueForProperty("BackupStorageCustomerKeyUri",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).BackupStorageCustomerKeyUri, global::System.Convert.ToString);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Sku = (string) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).Sku, global::System.Convert.ToString);
            }
            if (content.Contains("DiskSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DiskSku = (string) content.GetValueForProperty("DiskSku",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DiskSku, global::System.Convert.ToString);
            }
            if (content.Contains("DiskCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DiskCapacity = (int?) content.GetValueForProperty("DiskCapacity",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).DiskCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).AvailabilityZone = (bool?) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceInternal)this).AvailabilityZone, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.DataCenterResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResource" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResource DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new DataCenterResource(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.DataCenterResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResource" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResource DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new DataCenterResource(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="DataCenterResource" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="DataCenterResource" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResource FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A managed Cassandra data center.
    [System.ComponentModel.TypeConverter(typeof(DataCenterResourceTypeConverter))]
    public partial interface IDataCenterResource

    {

    }
}