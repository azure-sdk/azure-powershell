// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Extensions;

    /// <summary>Properties of a managed Cassandra data center.</summary>
    public partial class DataCenterResourceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourcePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AvailabilityZone" /> property.</summary>
        private bool? _availabilityZone;

        /// <summary>
        /// If the azure data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra
        /// data center virtual machines.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public bool? AvailabilityZone { get => this._availabilityZone; set => this._availabilityZone = value; }

        /// <summary>Backing field for <see cref="BackupStorageCustomerKeyUri" /> property.</summary>
        private string _backupStorageCustomerKeyUri;

        /// <summary>
        /// Indicates the Key Uri of the customer key to use for encryption of the backup storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string BackupStorageCustomerKeyUri { get => this._backupStorageCustomerKeyUri; set => this._backupStorageCustomerKeyUri = value; }

        /// <summary>Backing field for <see cref="Base64EncodedCassandraYamlFragment" /> property.</summary>
        private string _base64EncodedCassandraYamlFragment;

        /// <summary>
        /// A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center.
        /// The fragment should be Base64 encoded, and only a subset of keys are allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string Base64EncodedCassandraYamlFragment { get => this._base64EncodedCassandraYamlFragment; set => this._base64EncodedCassandraYamlFragment = value; }

        /// <summary>Backing field for <see cref="DataCenterLocation" /> property.</summary>
        private string _dataCenterLocation;

        /// <summary>The region this data center should be created in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string DataCenterLocation { get => this._dataCenterLocation; set => this._dataCenterLocation = value; }

        /// <summary>Backing field for <see cref="DelegatedSubnetId" /> property.</summary>
        private string _delegatedSubnetId;

        /// <summary>
        /// Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must
        /// be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's
        /// 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource
        /// group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string DelegatedSubnetId { get => this._delegatedSubnetId; set => this._delegatedSubnetId = value; }

        /// <summary>Backing field for <see cref="DiskCapacity" /> property.</summary>
        private int? _diskCapacity;

        /// <summary>Number of disk used for data centers. Default value is 4.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public int? DiskCapacity { get => this._diskCapacity; set => this._diskCapacity = value; }

        /// <summary>Backing field for <see cref="DiskSku" /> property.</summary>
        private string _diskSku;

        /// <summary>Disk SKU used for data centers. Default value is P30.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string DiskSku { get => this._diskSku; set => this._diskSku = value; }

        /// <summary>Backing field for <see cref="ManagedDiskCustomerKeyUri" /> property.</summary>
        private string _managedDiskCustomerKeyUri;

        /// <summary>
        /// Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate
        /// permissions(key get/wrap/unwrap permissions) on the key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string ManagedDiskCustomerKeyUri { get => this._managedDiskCustomerKeyUri; set => this._managedDiskCustomerKeyUri = value; }

        /// <summary>Internal Acessors for SeedNode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode[] Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IDataCenterResourcePropertiesInternal.SeedNode { get => this._seedNode; set { {_seedNode = value;} } }

        /// <summary>Backing field for <see cref="NodeCount" /> property.</summary>
        private int? _nodeCount;

        /// <summary>
        /// The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for
        /// the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method
        /// on the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public int? NodeCount { get => this._nodeCount; set => this._nodeCount = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.ManagedCassandraProvisioningState? _provisioningState;

        /// <summary>The status of the resource at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.ManagedCassandraProvisioningState? ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Backing field for <see cref="SeedNode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode[] _seedNode;

        /// <summary>
        /// IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property
        /// on the cluster, which aggregates the seed nodes from all data centers in the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode[] SeedNode { get => this._seedNode; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private string _sku;

        /// <summary>Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string Sku { get => this._sku; set => this._sku = value; }

        /// <summary>Creates an new <see cref="DataCenterResourceProperties" /> instance.</summary>
        public DataCenterResourceProperties()
        {

        }
    }
    /// Properties of a managed Cassandra data center.
    public partial interface IDataCenterResourceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.IJsonSerializable
    {
        /// <summary>
        /// If the azure data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra
        /// data center virtual machines.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the azure data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines.",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AvailabilityZone { get; set; }
        /// <summary>
        /// Indicates the Key Uri of the customer key to use for encryption of the backup storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the Key Uri of the customer key to use for encryption of the backup storage account.",
        SerializedName = @"backupStorageCustomerKeyUri",
        PossibleTypes = new [] { typeof(string) })]
        string BackupStorageCustomerKeyUri { get; set; }
        /// <summary>
        /// A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center.
        /// The fragment should be Base64 encoded, and only a subset of keys are allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed.",
        SerializedName = @"base64EncodedCassandraYamlFragment",
        PossibleTypes = new [] { typeof(string) })]
        string Base64EncodedCassandraYamlFragment { get; set; }
        /// <summary>The region this data center should be created in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The region this data center should be created in.",
        SerializedName = @"dataCenterLocation",
        PossibleTypes = new [] { typeof(string) })]
        string DataCenterLocation { get; set; }
        /// <summary>
        /// Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must
        /// be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's
        /// 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource
        /// group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.",
        SerializedName = @"delegatedSubnetId",
        PossibleTypes = new [] { typeof(string) })]
        string DelegatedSubnetId { get; set; }
        /// <summary>Number of disk used for data centers. Default value is 4.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of disk used for data centers. Default value is 4.",
        SerializedName = @"diskCapacity",
        PossibleTypes = new [] { typeof(int) })]
        int? DiskCapacity { get; set; }
        /// <summary>Disk SKU used for data centers. Default value is P30.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Disk SKU used for data centers. Default value is P30.",
        SerializedName = @"diskSku",
        PossibleTypes = new [] { typeof(string) })]
        string DiskSku { get; set; }
        /// <summary>
        /// Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate
        /// permissions(key get/wrap/unwrap permissions) on the key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key.",
        SerializedName = @"managedDiskCustomerKeyUri",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedDiskCustomerKeyUri { get; set; }
        /// <summary>
        /// The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for
        /// the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method
        /// on the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster.",
        SerializedName = @"nodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeCount { get; set; }
        /// <summary>The status of the resource at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status of the resource at the time the operation was called.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.ManagedCassandraProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.ManagedCassandraProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property
        /// on the cluster, which aggregates the seed nodes from all data centers in the cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
        SerializedName = @"seedNodes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode) })]
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode[] SeedNode { get;  }
        /// <summary>Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2",
        SerializedName = @"sku",
        PossibleTypes = new [] { typeof(string) })]
        string Sku { get; set; }

    }
    /// Properties of a managed Cassandra data center.
    internal partial interface IDataCenterResourcePropertiesInternal

    {
        /// <summary>
        /// If the azure data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra
        /// data center virtual machines.
        /// </summary>
        bool? AvailabilityZone { get; set; }
        /// <summary>
        /// Indicates the Key Uri of the customer key to use for encryption of the backup storage account.
        /// </summary>
        string BackupStorageCustomerKeyUri { get; set; }
        /// <summary>
        /// A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center.
        /// The fragment should be Base64 encoded, and only a subset of keys are allowed.
        /// </summary>
        string Base64EncodedCassandraYamlFragment { get; set; }
        /// <summary>The region this data center should be created in.</summary>
        string DataCenterLocation { get; set; }
        /// <summary>
        /// Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must
        /// be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's
        /// 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource
        /// group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.
        /// </summary>
        string DelegatedSubnetId { get; set; }
        /// <summary>Number of disk used for data centers. Default value is 4.</summary>
        int? DiskCapacity { get; set; }
        /// <summary>Disk SKU used for data centers. Default value is P30.</summary>
        string DiskSku { get; set; }
        /// <summary>
        /// Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate
        /// permissions(key get/wrap/unwrap permissions) on the key.
        /// </summary>
        string ManagedDiskCustomerKeyUri { get; set; }
        /// <summary>
        /// The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for
        /// the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method
        /// on the cluster.
        /// </summary>
        int? NodeCount { get; set; }
        /// <summary>The status of the resource at the time the operation was called.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Support.ManagedCassandraProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property
        /// on the cluster, which aggregates the seed nodes from all data centers in the cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ISeedNode[] SeedNode { get; set; }
        /// <summary>Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2</summary>
        string Sku { get; set; }

    }
}