// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Extensions;

    public partial class ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject into a new instance of <see cref="ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems"
        /// />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_address = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("address"), out var __jsonAddress) ? (string)__jsonAddress : (string)Address;}
            {_state = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("state"), out var __jsonState) ? (string)__jsonState : (string)State;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_load = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("load"), out var __jsonLoad) ? (string)__jsonLoad : (string)Load;}
            {_token = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray>("tokens"), out var __jsonTokens) ? If( __jsonTokens as Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : Token;}
            {_size = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber>("size"), out var __jsonSize) ? (int?)__jsonSize : Size;}
            {_hostId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("hostID"), out var __jsonHostId) ? (string)__jsonHostId : (string)HostId;}
            {_rack = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("rack"), out var __jsonRack) ? (string)__jsonRack : (string)Rack;}
            {_timestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString>("timestamp"), out var __jsonTimestamp) ? (string)__jsonTimestamp : (string)Timestamp;}
            {_diskUsedKb = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber>("diskUsedKB"), out var __jsonDiskUsedKb) ? (long?)__jsonDiskUsedKb : DiskUsedKb;}
            {_diskFreeKb = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber>("diskFreeKB"), out var __jsonDiskFreeKb) ? (long?)__jsonDiskFreeKb : DiskFreeKb;}
            {_memoryUsedKb = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber>("memoryUsedKB"), out var __jsonMemoryUsedKb) ? (long?)__jsonMemoryUsedKb : MemoryUsedKb;}
            {_memoryBuffersAndCachedKb = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber>("memoryBuffersAndCachedKB"), out var __jsonMemoryBuffersAndCachedKb) ? (long?)__jsonMemoryBuffersAndCachedKb : MemoryBuffersAndCachedKb;}
            {_memoryFreeKb = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber>("memoryFreeKB"), out var __jsonMemoryFreeKb) ? (long?)__jsonMemoryFreeKb : MemoryFreeKb;}
            {_memoryTotalKb = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber>("memoryTotalKB"), out var __jsonMemoryTotalKb) ? (long?)__jsonMemoryTotalKb : MemoryTotalKb;}
            {_cpuUsage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber>("cpuUsage"), out var __jsonCpuUsage) ? (double?)__jsonCpuUsage : CpuUsage;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.IComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems FromJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject json ? new ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems"
        /// /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems"
        /// /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._address)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._address.ToString()) : null, "address" ,container.Add );
            AddIf( null != (((object)this._state)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._state.ToString()) : null, "state" ,container.Add );
            AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            AddIf( null != (((object)this._load)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._load.ToString()) : null, "load" ,container.Add );
            if (null != this._token)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.XNodeArray();
                foreach( var __x in this._token )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("tokens",__w);
            }
            AddIf( null != this._size ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber((int)this._size) : null, "size" ,container.Add );
            AddIf( null != (((object)this._hostId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._hostId.ToString()) : null, "hostID" ,container.Add );
            AddIf( null != (((object)this._rack)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._rack.ToString()) : null, "rack" ,container.Add );
            AddIf( null != (((object)this._timestamp)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonString(this._timestamp.ToString()) : null, "timestamp" ,container.Add );
            AddIf( null != this._diskUsedKb ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber((long)this._diskUsedKb) : null, "diskUsedKB" ,container.Add );
            AddIf( null != this._diskFreeKb ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber((long)this._diskFreeKb) : null, "diskFreeKB" ,container.Add );
            AddIf( null != this._memoryUsedKb ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber((long)this._memoryUsedKb) : null, "memoryUsedKB" ,container.Add );
            AddIf( null != this._memoryBuffersAndCachedKb ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber((long)this._memoryBuffersAndCachedKb) : null, "memoryBuffersAndCachedKB" ,container.Add );
            AddIf( null != this._memoryFreeKb ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber((long)this._memoryFreeKb) : null, "memoryFreeKB" ,container.Add );
            AddIf( null != this._memoryTotalKb ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber((long)this._memoryTotalKb) : null, "memoryTotalKB" ,container.Add );
            AddIf( null != this._cpuUsage ? (Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Json.JsonNumber((double)this._cpuUsage) : null, "cpuUsage" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}