// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Extensions;

    public partial class CassandraReaperRunStatus :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatus,
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Models.Api20221115.ICassandraReaperRunStatusInternal
    {

        /// <summary>Backing field for <see cref="BlacklistedTable" /> property.</summary>
        private string[] _blacklistedTable;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string[] BlacklistedTable { get => this._blacklistedTable; set => this._blacklistedTable = value; }

        /// <summary>Backing field for <see cref="Cause" /> property.</summary>
        private string _cause;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string Cause { get => this._cause; set => this._cause = value; }

        /// <summary>Backing field for <see cref="ClusterName" /> property.</summary>
        private string _clusterName;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string ClusterName { get => this._clusterName; set => this._clusterName = value; }

        /// <summary>Backing field for <see cref="ColumnFamily" /> property.</summary>
        private string[] _columnFamily;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string[] ColumnFamily { get => this._columnFamily; set => this._columnFamily = value; }

        /// <summary>Backing field for <see cref="Datacenter" /> property.</summary>
        private string[] _datacenter;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string[] Datacenter { get => this._datacenter; set => this._datacenter = value; }

        /// <summary>Backing field for <see cref="Duration" /> property.</summary>
        private string _duration;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string Duration { get => this._duration; set => this._duration = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="IncrementalRepair" /> property.</summary>
        private bool? _incrementalRepair;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public bool? IncrementalRepair { get => this._incrementalRepair; set => this._incrementalRepair = value; }

        /// <summary>Backing field for <see cref="Intensity" /> property.</summary>
        private double? _intensity;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public double? Intensity { get => this._intensity; set => this._intensity = value; }

        /// <summary>Backing field for <see cref="KeyspaceName" /> property.</summary>
        private string _keyspaceName;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string KeyspaceName { get => this._keyspaceName; set => this._keyspaceName = value; }

        /// <summary>Backing field for <see cref="LastEvent" /> property.</summary>
        private string _lastEvent;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string LastEvent { get => this._lastEvent; set => this._lastEvent = value; }

        /// <summary>Backing field for <see cref="Node" /> property.</summary>
        private string[] _node;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string[] Node { get => this._node; set => this._node = value; }

        /// <summary>Backing field for <see cref="Owner" /> property.</summary>
        private string _owner;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string Owner { get => this._owner; set => this._owner = value; }

        /// <summary>Backing field for <see cref="RepairParallelism" /> property.</summary>
        private string _repairParallelism;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string RepairParallelism { get => this._repairParallelism; set => this._repairParallelism = value; }

        /// <summary>Backing field for <see cref="RepairState" /> property.</summary>
        private string _repairState;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string RepairState { get => this._repairState; set => this._repairState = value; }

        /// <summary>Backing field for <see cref="RepairThreadCount" /> property.</summary>
        private int? _repairThreadCount;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public int? RepairThreadCount { get => this._repairThreadCount; set => this._repairThreadCount = value; }

        /// <summary>Backing field for <see cref="RepairUnitId" /> property.</summary>
        private string _repairUnitId;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public string RepairUnitId { get => this._repairUnitId; set => this._repairUnitId = value; }

        /// <summary>Backing field for <see cref="SegmentsRepaired" /> property.</summary>
        private int? _segmentsRepaired;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public int? SegmentsRepaired { get => this._segmentsRepaired; set => this._segmentsRepaired = value; }

        /// <summary>Backing field for <see cref="TotalSegment" /> property.</summary>
        private int? _totalSegment;

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.PropertyOrigin.Owned)]
        public int? TotalSegment { get => this._totalSegment; set => this._totalSegment = value; }

        /// <summary>Creates an new <see cref="CassandraReaperRunStatus" /> instance.</summary>
        public CassandraReaperRunStatus()
        {

        }
    }
    public partial interface ICassandraReaperRunStatus :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"blacklistedTables",
        PossibleTypes = new [] { typeof(string) })]
        string[] BlacklistedTable { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"cause",
        PossibleTypes = new [] { typeof(string) })]
        string Cause { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"clusterName",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"columnFamilies",
        PossibleTypes = new [] { typeof(string) })]
        string[] ColumnFamily { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"datacenters",
        PossibleTypes = new [] { typeof(string) })]
        string[] Datacenter { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"duration",
        PossibleTypes = new [] { typeof(string) })]
        string Duration { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"incrementalRepair",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IncrementalRepair { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"intensity",
        PossibleTypes = new [] { typeof(double) })]
        double? Intensity { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"keyspaceName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyspaceName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"lastEvent",
        PossibleTypes = new [] { typeof(string) })]
        string LastEvent { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"nodes",
        PossibleTypes = new [] { typeof(string) })]
        string[] Node { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"owner",
        PossibleTypes = new [] { typeof(string) })]
        string Owner { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"repairParallelism",
        PossibleTypes = new [] { typeof(string) })]
        string RepairParallelism { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"repairState",
        PossibleTypes = new [] { typeof(string) })]
        string RepairState { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"repairThreadCount",
        PossibleTypes = new [] { typeof(int) })]
        int? RepairThreadCount { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"repairUnitId",
        PossibleTypes = new [] { typeof(string) })]
        string RepairUnitId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"segmentsRepaired",
        PossibleTypes = new [] { typeof(int) })]
        int? SegmentsRepaired { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDb.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"totalSegments",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalSegment { get; set; }

    }
    internal partial interface ICassandraReaperRunStatusInternal

    {
        string[] BlacklistedTable { get; set; }

        string Cause { get; set; }

        string ClusterName { get; set; }

        string[] ColumnFamily { get; set; }

        string[] Datacenter { get; set; }

        string Duration { get; set; }

        string Id { get; set; }

        bool? IncrementalRepair { get; set; }

        double? Intensity { get; set; }

        string KeyspaceName { get; set; }

        string LastEvent { get; set; }

        string[] Node { get; set; }

        string Owner { get; set; }

        string RepairParallelism { get; set; }

        string RepairState { get; set; }

        int? RepairThreadCount { get; set; }

        string RepairUnitId { get; set; }

        int? SegmentsRepaired { get; set; }

        int? TotalSegment { get; set; }

    }
}