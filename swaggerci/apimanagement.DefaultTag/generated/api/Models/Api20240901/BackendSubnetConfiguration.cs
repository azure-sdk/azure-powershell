// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Information regarding how the subnet to which the gateway should be injected.</summary>
    public partial class BackendSubnetConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240901.IBackendSubnetConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240901.IBackendSubnetConfigurationInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The ARM ID of the subnet in which the backend systems are hosted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Creates an new <see cref="BackendSubnetConfiguration" /> instance.</summary>
        public BackendSubnetConfiguration()
        {

        }
    }
    /// Information regarding how the subnet to which the gateway should be injected.
    public partial interface IBackendSubnetConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>The ARM ID of the subnet in which the backend systems are hosted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM ID of the subnet in which the backend systems are hosted.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }

    }
    /// Information regarding how the subnet to which the gateway should be injected.
    internal partial interface IBackendSubnetConfigurationInternal

    {
        /// <summary>The ARM ID of the subnet in which the backend systems are hosted.</summary>
        string Id { get; set; }

    }
}